# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 17 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD F3 8D     	call Pinta_entidades
  44  AA1C CD E5 8D     	call Pinta_Amadeus
  45  AA1F CD CF 8D     	call Gestiona_entidades
  46  AA22 3E 00        	ld a,0
  47  AA24 D3 FE        	out ($fe),a
  48  AA26
  49  AA26 3E 02        	ld a,2
  50  AA28 D3 FE        	out ($fe),a
  51  AA2A CD 0C 8E     	call Guarda_parametros_DRAW
  52  AA2D CD 3F 8D     	call Restore_Amadeus
  53  AA30 CD DD 8A     	call Gestiona_Amadeus
  54  AA33 11 9E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  55  AA36 CD 51 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  56  AA39
  57  AA39              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  58  AA39
  59  AA39 CD 18 8E     	call Recupera_parametros_DRAW
  60  AA3C CD 00 8E     	call Actualiza_relojes
  61  AA3F 3E 00        	ld a,0
  62  AA41 D3 FE        	out ($fe),a
  63  AA43
  64  AA43 FD E1        	pop iy
  65  AA45 DD E1        	pop ix
  66  AA47 F1           	pop af
  67  AA48 C1           	pop bc
  68  AA49 D1           	pop de
  69  AA4A E1           	pop hl
  70  AA4B D9           	exx
  71  AA4C C1           	pop bc
  72  AA4D D1           	pop de
  73  AA4E E1           	pop hl
  74  AA4F 08           	ex af,af'
  75  AA50 F1           	pop af
  76  AA51 08           	ex af,af'
  77  AA52 D9           	exx
  78  AA53
  79  AA53 ED 7B 17 89  	ld sp,(Stack_3)
  80  AA57
  81  AA57 FB           	ei
  82  AA58 C9           	ret
  83  AA59
  84  AA59              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  85  AA59
  86  AA59              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA59              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA59              ;
   3+ AA59              ;	17/02/23
   4+ AA59              ;
   5+ AA59              ;	Sprites e índices.
   6+ AA59
   7+ AA59              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 56 70        	defw Album_de_fotos_1
 259+ 84F0 AC 70        	defw Album_de_fotos_2
 260+ 84F2 02 71        	defw Album_de_fotos_3
 261+ 84F4 58 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 AE 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 04 72        	defw Album_de_fotos_disparos_2
 264+ 84FA 5A 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1D 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 23 89        	defw End_Snapshot_1
 267+ 8500 27 89        	defw End_Snapshot_2
 268+ 8502 2B 89        	defw End_Snapshot_3
 269+ 8504 1F 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 25 89        	defw End_Snapshot_disparos_1
 271+ 8508 29 89        	defw End_Snapshot_disparos_2
 272+ 850A 2D 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  87  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C              ;
  95+ 858C              ;	Índice de cajas de entidades.
  96+ 858C
  97+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 858C
  99+ 858C DD 85        	defw Caja_1
 100+ 858E 1C 86        	defw Caja_2
 101+ 8590 5B 86        	defw Caja_3
 102+ 8592 9A 86        	defw Caja_4
 103+ 8594 D9 86        	defw Caja_5
 104+ 8596 18 87        	defw Caja_6
 105+ 8598 57 87        	defw Caja_7
 106+ 859A
 107+ 859A 00 00        	defw 0
 108+ 859C 00 00        	defw 0
 109+ 859E
 110+ 859E              ; ---------- ---------- ---------- ---------- ----------
 111+ 859E
 112+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 114+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 85A7
 117+ 85A7 05           	db %00000101									; (Attr).
 118+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 85AC
 121+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 85B0
 124+ 85B0 DE 50        	defw $50de										; (Posicion_inicio).
 125+ 85B2 04           	db 4 											; (Cuad_objeto).
 126+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 85B7
 128+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 85B8
 130+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 85BE
 132+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 133+ 85C0 00 00        	defw 0											;	" " " " " " "
 134+ 85C2 00 00        	defw 0											;	" " " " " " "
 135+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85C8
 137+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85CA
 139+ 85CA 00           	db 0											; (Autoriza_movimiento).
 140+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85CF 00 00
 141+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85D4
 143+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85D7
 146+ 85D7 00           	db 0 											; (Columnas).
 147+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85DD
 150+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85DD
 152+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85DF 00 00        	defw 0											; (Posicion_actual).
 154+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85E6
 157+ 85E6 00           	db %00000000 									; (Attr).
 158+ 85E7
 159+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85EF
 164+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85F1 00           	db 0											; (Cuad_objeto).
 166+ 85F2
 167+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85F6
 169+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85F7
 171+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85FD
 173+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00        	defw 0											;	" " " " " " "
 176+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 8607
 178+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 8609
 180+ 8609 00           	db 0											; (Autoriza_movimiento).
 181+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 860E 00 00
 182+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 8613
 184+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 186+ 8616
 187+ 8616 00           	db 0 											; (Columnas).
 188+ 8617 00 00        	defw 0											; (Limite_horizontal).
 189+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 861C
 191+ 861C              ; ---------- ---------- ---------- ---------- ----------
 192+ 861C
 193+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 861E 00 00        	defw 0											; (Posicion_actual).
 195+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8625
 198+ 8625 00           	db %00000000 									; (Attr).
 199+ 8626
 200+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 862E
 205+ 862E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8630 00           	db 0											; (Cuad_objeto).
 207+ 8631
 208+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8635
 210+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8636
 212+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 863C
 214+ 863C 00 00        	db 0,0											; Variables_de_pintado
 215+ 863E 00 00        	defw 0											;	" " " " " " "
 216+ 8640 00 00        	defw 0											;	" " " " " " "
 217+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8646
 219+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8648
 221+ 8648 00           	db 0											; (Autoriza_movimiento).
 222+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 864D 00 00
 223+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8652
 225+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8655
 228+ 8655 00           	db 0 											; (Columnas).
 229+ 8656 00 00        	defw 0											; (Limite_horizontal).
 230+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 865B
 232+ 865B              ; ---------- ---------- ---------- ---------- ----------
 233+ 865B
 234+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 865D 00 00        	defw 0											; (Posicion_actual).
 236+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8664
 239+ 8664 00           	db %00000000 									; (Attr).
 240+ 8665
 241+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 866D
 246+ 866D 00 00        	defw 0											; (Posicion_inicio).
 247+ 866F 00           	db 0											; (Cuad_objeto).
 248+ 8670
 249+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8674
 251+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8675
 253+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 867B
 255+ 867B 00 00        	db 0,0											; Variables_de_pintado
 256+ 867D 00 00        	defw 0											;	" " " " " " "
 257+ 867F 00 00        	defw 0											;	" " " " " " "
 258+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8685
 260+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8687
 262+ 8687 00           	db 0											; (Autoriza_movimiento).
 263+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 868C 00 00
 264+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8691
 266+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8694
 269+ 8694 00           	db 0 											; (Columnas).
 270+ 8695 00 00        	defw 0											; (Limite_horizontal).
 271+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 869A
 273+ 869A              ; ---------- ---------- ---------- ---------- ----------
 274+ 869A
 275+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 869C 00 00        	defw 0											; (Posicion_actual).
 277+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 86A3
 280+ 86A3 00           	db %00000000 									; (Attr).
 281+ 86A4
 282+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 86AC
 287+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 288+ 86AE 00           	db 0											; (Cuad_objeto).
 289+ 86AF
 290+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 86B3
 292+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 86B4
 294+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 86BA
 296+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 297+ 86BC 00 00        	defw 0											;	" " " " " " "
 298+ 86BE 00 00        	defw 0											;	" " " " " " "
 299+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86C4
 301+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86C6
 303+ 86C6 00           	db 0											; (Autoriza_movimiento).
 304+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86CB 00 00
 305+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86D0
 307+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86D3
 310+ 86D3 00           	db 0 											; (Columnas).
 311+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86D9
 314+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86D9
 316+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86DB 00 00        	defw 0											; (Posicion_actual).
 318+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86E2
 321+ 86E2 00           	db %00000000 									; (Attr).
 322+ 86E3
 323+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86EB
 328+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86ED 00           	db 0											; (Cuad_objeto).
 330+ 86EE
 331+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86F2
 333+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86F3
 335+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86F9
 337+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86FB 00 00        	defw 0											;	" " " " " " "
 339+ 86FD 00 00        	defw 0											;	" " " " " " "
 340+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 8703
 342+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 8705
 344+ 8705 00           	db 0											; (Autoriza_movimiento).
 345+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 870A 00 00
 346+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 870F
 348+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 350+ 8712
 351+ 8712 00           	db 0 											; (Columnas).
 352+ 8713 00 00        	defw 0											; (Limite_horizontal).
 353+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 8718
 355+ 8718              ; ---------- ---------- ---------- ---------- ----------
 356+ 8718
 357+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 871A 00 00        	defw 0											; (Posicion_actual).
 359+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 360+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8721
 362+ 8721 00           	db %00000000 									; (Attr).
 363+ 8722
 364+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 872A
 369+ 872A 00 00        	defw 0											; (Posicion_inicio).
 370+ 872C 00           	db 0											; (Cuad_objeto).
 371+ 872D
 372+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8731
 374+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8732
 376+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8738
 378+ 8738 00 00        	db 0,0											; Variables_de_pintado
 379+ 873A 00 00        	defw 0											;	" " " " " " "
 380+ 873C 00 00        	defw 0											;	" " " " " " "
 381+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8742
 383+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8744
 385+ 8744 00           	db 0											; (Autoriza_movimiento).
 386+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8749 00 00
 387+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 874E
 389+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8751
 392+ 8751 00           	db 0 											; (Columnas).
 393+ 8752 00 00        	defw 0											; (Limite_horizontal).
 394+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8757
 396+ 8757              ; ---------- ---------- ---------- ---------- ----------
 397+ 8757
 398+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8759 00 00        	defw 0											; (Posicion_actual).
 400+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8760
 403+ 8760 00           	db %00000000 									; (Attr).
 404+ 8761
 405+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8769
 410+ 8769 00 00        	defw 0											; (Posicion_inicio).
 411+ 876B 00           	db 0											; (Cuad_objeto).
 412+ 876C
 413+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8770
 415+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8771
 417+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8777
 419+ 8777 00 00        	db 0,0											; Variables_de_pintado
 420+ 8779 00 00        	defw 0											;	" " " " " " "
 421+ 877B 00 00        	defw 0											;	" " " " " " "
 422+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8781
 424+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8783
 426+ 8783 00           	db 0											; (Autoriza_movimiento).
 427+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8788 00 00
 428+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 878D
 430+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8790
 433+ 8790 00           	db 0 											; (Columnas).
 434+ 8791 00 00        	defw 0											; (Limite_horizontal).
 435+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8796
 437+ 8796              ; -------------------------------------------------------------------------------------
 438+ 8796              ;
 439+ 8796              ;	20/05/23
 440+ 8796              ;
 441+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8796              ;
 443+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8796
 448+ 8796              Indice_de_entidades
 449+ 8796
 450+ 8796 9A 87        	defw Entidad_1
 451+ 8798 AA 87        	defw Entidad_2
 452+ 879A
 453+ 879A              ;	BADSAT, (Satélite malvado).
 454+ 879A
 455+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 879C 04           	db %00000100									; (Attr).
 457+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 87A3 01           	db 1											; (Cuad_objeto).
 461+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 87A8 FA 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 87AA
 464+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 87AC 02           	db %00000010									; (Attr).
 466+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 87B3 01           	db 1											; (Cuad_objeto).
 470+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 87B8 FA 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 87BA
# file closed: Cajas_y_disparos.asm
  88  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CB 87        	defw Nivel_2
   7+ 87BE D8 87        	defw Nivel_3
   8+ 87C0 E8 87        	defw Nivel_4
   9+ 87C2 FA 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87C9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 01 02
  21+ 87D2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D6 01 02
  22+ 87D8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DD 01
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87ED 01
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 02 03        	db 2,3
  31+ 87FA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FF 01
  33+ 8800 05 01 01 01  	db 5,1,1,1,1
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1
  35+ 880E 01
  36+ 880F
  37+ 880F              ;---------------------------------------------------------------------------------------------------------------
  38+ 880F              ;
  39+ 880F              ;   3/9/23
  40+ 880F              ;
  41+ 880F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880F              ;	_en la caja DRAW correspondiente.
  45+ 880F              ;
  46+ 880F              ;	MODIFICA: HL,DE y A.
  47+ 880F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880F
  49+ 880F              Inicializa_Punteros_de_nivel
  50+ 880F
  51+ 880F 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8812 22 5C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8815 CD 8F 8C     	call Extrae_address
  54+ 8818 7E           	ld a,(hl)
  55+ 8819 32 0B 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881C 23           	inc hl
  57+ 881D 22 5E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8820 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8821
  60+ 8821              ;---------------------------------------------------------------------------------------------------------------
  61+ 8821              ;
  62+ 8821              ;   13/5/23
  63+ 8821              ;
  64+ 8821              ;	Destruye A,BC,HL,DE
  65+ 8821
  66+ 8821              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8821              ;	_del juego.
  68+ 8821
  69+ 8821              Prepara_cajas
  70+ 8821
  71+ 8821              ; Preparamos los punteros de las cajas.
  72+ 8821
  73+ 8821 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8824 CD 8F 8C     	call Extrae_address
  75+ 8827 CD 64 88     	call Avanza_caja
  76+ 882A
  77+ 882A CD A8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882D
  79+ 882D 2A 5E 89     	ld hl,(Datos_de_nivel)
  80+ 8830
  81+ 8830              ; HL está en los datos del nivel correspondiente.
  82+ 8830              ; B actuará como contador de cajas.
  83+ 8830
  84+ 8830 C5           1 push bc
  85+ 8831
  86+ 8831 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8832 CD 55 88     	call PreparaBC
  88+ 8835
  89+ 8835 21 96 87     	ld hl,Indice_de_entidades
  90+ 8838 CD 5D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883B 22 11 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883E
  93+ 883E CD 6E 88     	call Datos_de_entidad_a_caja
  94+ 8841
  95+ 8841 2A 09 89     	ld hl,(Indice_restore_caja)
  96+ 8844 CD 8F 8C     	call Extrae_address
  97+ 8847 CD 64 88     	call Avanza_caja
  98+ 884A
  99+ 884A 2A 5E 89     	ld hl,(Datos_de_nivel)
 100+ 884D 23           	inc hl
 101+ 884E 22 5E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8851
 103+ 8851 C1           	pop bc
 104+ 8852 10 DC        	djnz 1B
 105+ 8854 C9           	ret
 106+ 8855
 107+ 8855 CB 27        PreparaBC sla a
 108+ 8857 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8859 4F           	ld c,a
 110+ 885A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885C C9           	ret
 112+ 885D
 113+ 885D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885E ED 4A        	adc hl,bc
 115+ 8860 CD 8F 8C     	call Extrae_address
 116+ 8863 C9           	ret
 117+ 8864
 118+ 8864 22 05 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8867 13           	inc de
 120+ 8868 13           	inc de
 121+ 8869 EB           	ex de,hl
 122+ 886A 22 09 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886D C9           	ret
 124+ 886E
 125+ 886E              Datos_de_entidad_a_caja
 126+ 886E
 127+ 886E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886E
 129+ 886E
 130+ 886E ED 5B 05 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8872
 132+ 8872 01 02 00     	ld bc,2
 133+ 8875 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8877
 135+ 8877 01 07 00     	ld bc,7
 136+ 887A CD A2 88     	call Situa_DE
 137+ 887D
 138+ 887D 01 05 00     	ld bc,5
 139+ 8880 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8882
 141+ 8882 01 04 00     	ld bc,4
 142+ 8885 CD A2 88     	call Situa_DE
 143+ 8888
 144+ 8888 01 07 00     	ld bc,7
 145+ 888B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888D
 147+ 888D 01 12 00     	ld bc,18
 148+ 8890 CD A2 88     	call Situa_DE
 149+ 8893
 150+ 8893 01 02 00     	ld bc,2
 151+ 8896 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8898
 153+ 8898              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8898              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8898
 156+ 8898 01 0F 00     	ld bc,15									; *****
 157+ 889B CD A2 88     	call Situa_DE
 158+ 889E
 159+ 889E 3E 03        	ld a,3
 160+ 88A0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A1
 162+ 88A1 C9           	ret
 163+ 88A2
 164+ 88A2 EB           Situa_DE ex de,hl
 165+ 88A3 A7           	and a
 166+ 88A4 ED 4A        	adc hl,bc
 167+ 88A6 EB           	ex de,hl
 168+ 88A7 C9           	ret
 169+ 88A8
 170+ 88A8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A8              ;
 172+ 88A8              ;	21/5/23
 173+ 88A8              ;
 174+ 88A8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A8              ;
 177+ 88A8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A8              ;
 181+ 88A8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A8              ;	MODIFICA: A y B.
 183+ 88A8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A8
 185+ 88A8              Admin_num_entidades
 186+ 88A8
 187+ 88A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A8
 189+ 88A8 3A 0B 89     	ld a,(Numero_de_entidades)
 190+ 88AB A7           	and a
 191+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AC              ;	jr z,$
 193+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AC
 195+ 88AC 20 03        	jr nz,3F
 196+ 88AE
 197+ 88AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AE
 199+ 88AE CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B1
 201+ 88B1 3A 0B 89     3 ld a,(Numero_de_entidades)
 202+ 88B4 FE 0A        	cp 10
 203+ 88B6 38 08        	jr c,1F
 204+ 88B8
 205+ 88B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B8              ; Actualizamos variables.
 207+ 88B8
 208+ 88B8 3E 0A        	ld a,10
 209+ 88BA 32 0C 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BD 47           	ld b,a
 211+ 88BE 18 04        	jr 2F
 212+ 88C0
 213+ 88C0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C0              ; (Numero_de_entidades)="0".
 215+ 88C0
 216+ 88C0 32 0C 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C3 47           	ld b,a
 218+ 88C4 C9           2 ret
# file closed: Niveles.asm
  89  88C5
  90  88C5              ; ******************************************************************************************************************************************************************************************
  91  88C5              ; Constantes.
  92  88C5              ; ******************************************************************************************************************************************************************************************
  93  88C5              ;
  94  88C5              ; 10/11/23
  95  88C5
  96  88C5              ;
  97  88C5              ; Constantes generales.
  98  88C5              ;
  99  88C5
 100  88C5              Sprite_vacio equ $f000
 101  88C5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 102  88C5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 103  88C5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 104  88C5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 105  88C5
 106  88C5              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 107  88C5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 108  88C5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 109  88C5              Album_de_fotos_disparos equ $7158 ; (7158h - 71ad).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 110  88C5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 111  88C5              ;
 112  88C5              Album_de_fotos_1 equ $7056	; (7056h - 70ab).
 113  88C5              Album_de_fotos_disparos_1 equ $71ae	; (71aeh - 7203h).
 114  88C5              Album_de_fotos_2 equ $70ac	; (70ach - 7101h).
 115  88C5              Album_de_fotos_disparos_2 equ $7204	; (7204h - 7259h).
 116  88C5              Album_de_fotos_3 equ $7102	; (7102 - 7157h).
 117  88C5              Album_de_fotos_disparos_3 equ $725a	; (725ah - 72afh).
 118  88C5
 119  88C5              Album_de_fotos_Amadeus equ $72b0 ; (72b0h - 72bch) ; 12 bytes.
 120  88C5              Almacen_de_parametros_DRAW equ $72bd ; ($72bd - $72fa) ; 61 bytes.
 121  88C5
 122  88C5
 123  88C5
 124  88C5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 125  88C5
 126  88C5              ; ******************************************************************************************************************************************************************************************
 127  88C5              ; Variables.
 128  88C5              ; ******************************************************************************************************************************************************************************************
 129  88C5              ;
 130  88C5              ; 10/11//23
 131  88C5              ;
 132  88C5              ; Variables de DRAW. (Motor principal).
 133  88C5              ;
 134  88C5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 135  88C5
 136  88C5 00           Filas db 0												; Filas. [DRAW]
 137  88C6 00           Columns db 0  											; Nº de columnas. [DRAW]
 138  88C7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 139  88C9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 140  88CB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 141  88CC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 142  88CD
 143  88CD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 144  88CD
 145  88CD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 146  88CE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 147  88CE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 148  88CE 00           Attr db 0												; Atributos de la entidad:
 149  88CF
 150  88CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 151  88CF              ;
 152  88CF              ;	COLORES: 0 ..... NEGRO
 153  88CF              ;    		 1 ..... AZUL
 154  88CF              ; 			 2 ..... ROJO
 155  88CF              ;			 3 ..... MAGENTA
 156  88CF              ; 			 4 ..... VERDE
 157  88CF              ; 			 5 ..... CIAN
 158  88CF              ;			 6 ..... AMARILLO
 159  88CF              ; 			 7 ..... BLANCO
 160  88CF
 161  88CF 00 00        Indice_Sprite_der defw 0
 162  88D1 00 00        Indice_Sprite_izq defw 0
 163  88D3 00 00        Puntero_DESPLZ_der defw 0
 164  88D5 00 00        Puntero_DESPLZ_izq defw 0
 165  88D7
 166  88D7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 167  88D9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 168  88DA
 169  88DA              ; Variables de objeto. (Características).
 170  88DA
 171  88DA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 172  88DB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 173  88DC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 174  88DD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 175  88DE
 176  88DE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 177  88DF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 178  88DF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 179  88DF 00 00 00...  Variables_de_borrado ds 6
 180  88E5
 181  88E5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 182  88E7 00 00        	defw 0
 183  88E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 184  88EB 00 00 00 00  	db 0,0,0,0
 185  88EF
 186  88EF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  88EF
 188  88EF 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 189  88F0              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 190  88F0              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 191  88F0              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 192  88F0              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 193  88F0              ;
 194  88F0              ; 														DESCRIPCIÖN:
 195  88F0              ;
 196  88F0              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 197  88F0              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 198  88F0              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 199  88F0              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 200  88F0              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 201  88F0              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 202  88F0              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 203  88F0              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 204  88F0              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 205  88F0              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 206  88F0              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 207  88F0              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 208  88F0              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 209  88F0              ;
 210  88F0              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 211  88F0              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 212  88F0              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 213  88F0
 214  88F0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 215  88F0
 216  88F0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 217  88F2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 218  88F4 00 00        Puntero_indice_mov_bucle defw 0							;
 219  88F6              ;
 220  88F6              ;
 221  88F6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 222  88F7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 223  88F7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 224  88F7 00           Incrementa_puntero_backup db 0
 225  88F8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 226  88F9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 227  88F9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 228  88FA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 229  88FB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 230  88FC              ;
 231  88FC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 232  88FC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 233  88FC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 234  88FC              ;
 235  88FC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 236  88FC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 237  88FC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 238  88FC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 239  88FC              ;
 240  88FC              ;														;	"$ff" ..... Bucle infinito de repetición.
 241  88FC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 242  88FC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 243  88FC
 244  88FC
 245  88FC              ; Variables de funcionamiento. [DRAW].
 246  88FC
 247  88FC 00           Columnas db 0
 248  88FD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 249  88FF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 250  88FF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 251  8900
 252  8900              ; variables de control general.
 253  8900
 254  8900 00           Ctrl_2 db 0
 255  8901              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 256  8901              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 257  8901              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 258  8901              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 259  8901              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 260  8901              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 261  8901              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 262  8901              ;
 263  8901              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 264  8901              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 265  8901              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 266  8901              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 267  8901              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 268  8901
 269  8901 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 270  8902
 271  8902              ;! 61 Bytes por entidad.
 272  8902
 273  8902              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 274  8902              ;					         		---------;      ;---------
 275  8902
 276  8902
 277  8902              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 278  8902
 279  8902 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 280  8903
 281  8903              ;														DESCRIPCIÓN:
 282  8903              ;
 283  8903              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 284  8903              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 285  8903              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 286  8903              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 287  8903              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 288  8903              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 289  8903
 290  8903              ;														BIT 3, Recarga de nueva oleada.
 291  8903              ;														BIT 4, Recarga de nueva oleada.
 292  8903              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 293  8903              ;														BIT 6, **** Frame completo.
 294  8903              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 295  8903
 296  8903 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 297  8905              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 298  8905              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 299  8905              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 300  8905
 301  8905              ; Gestión de ENTIDADES y CAJAS.
 302  8905
 303  8905 00 00        Puntero_store_caja defw 0
 304  8907 00 00        Puntero_restore_caja defw 0
 305  8909 00 00        Indice_restore_caja defw 0
 306  890B 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 307  890C 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 308  890D 00           Entidades_en_curso db 0									; ..... ..... .....
 309  890E 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 310  890F              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 311  890F              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 312  890F              ;														; _ (Numero_de_malotes)="0".
 313  890F 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 314  8911 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 315  8913              ;														; _ puntero (Indice_entidades).
 316  8913
 317  8913
 318  8913              ;---------------------------------------------------------------------------------------------------------------
 319  8913              ;
 320  8913              ;	8/11/23
 321  8913              ;
 322  8913              ;	Álbumes.
 323  8913
 324  8913 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 325  8915              ;														; _variable para almacenar lo posición del puntero_
 326  8915              ; 														; _de pila, SP.
 327  8915 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 328  8917              ;														; La utiliza la rutina [Extrae_foto_registros].
 329  8917 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 330  8919 00 00        Stack_snapshot defw 0
 331  891B 00 00        Stack_snapshot_disparos defw 0
 332  891D
 333  891D 00 00        End_Snapshot defw 0
 334  891F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 335  891F 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 336  8921              ;														; _el snapshot de los registros del siguiente disparo.
 337  8921              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 338  8921 B0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 339  8923 00 00        End_Snapshot_1 defw 0
 340  8925 00 00        End_Snapshot_disparos_1 defw 0
 341  8927 00 00        End_Snapshot_2 defw 0
 342  8929 00 00        End_Snapshot_disparos_2 defw 0
 343  892B 00 00        End_Snapshot_3 defw 0
 344  892D 00 00        End_Snapshot_disparos_3 defw 0
 345  892F
 346  892F 00 00        Puntero_indice_album_de_fotos defw 0
 347  8931 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 348  8933
 349  8933 00 00        Puntero_indice_End_Snapshot defw 0
 350  8935 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 351  8937 00 00        Puntero_de_End_Snapshot defw 0
 352  8939 00 00        Puntero_de_End_Snapshot_disparos defw 0
 353  893B
 354  893B F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 355  893C              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 356  893C
 357  893C 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 358  893D              ;
 359  893D              ;														DESCRIPCIÓN:
 360  893D              ;
 361  893D              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 362  893D              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 363  893D              ;																_ álbum. También indica que "hay recolocación" antes de ejecutar la "cascada de álbumes". El tipo de recolocación lo definen_
 364  893D              ;																_ los bits 1 y 2.
 365  893D              ;														BIT 1, Indica que la recolocación de álbumes será de Album3_a_Album2, (siempre que Álbum_3 contenga un FRAME completo).
 366  893D              ;														BIT 2, Indica que la recolocación de álbumes será de Album2_a_Album1, (siempre que álbum_2 contenga un FRAME completo).
 367  893D              ;																Nota: En el caso de que al hacer la recolocación, nos encontremos con que el álbum donante sigue incompleto, saltaremos_
 368  893D              ;																	_ a ejecutar la "Casacada" de álbumes para limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 369  893D              ;														BIT 3, Existe DOBLE RECOLOCACIÓN. Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Siempre que Album_de_fotos_3 contenga un FRAME completo,_
 370  893D              ;																_ pasaremos Album3_a_Album2 y Album2_a_Album1. También modificaremos los punteros y los situaremos al comienzo de Album_de_fotos_2.
 371  893D              ;																_ En el caso de que al hacer la DOBLE RECOLOCACIÓN, Album_de_fotos_3 esté incompleto, saltaremos a ejecutar la "Casacada" de álbumes para_
 372  893D              ;																_ limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 373  893D              ;														BIT 4, Buffer vacío !!!. Album_de_fotos está vacío y no podemos volcar Album_de_fotos_1. Está incompleto.
 374  893D              ;																_ El siguiente FRAME no se imprime, NO HAY CUADRO.
 375  893D
 376  893D              ;---------------------------------------------------------------------------------------------------------------
 377  893D
 378  893D              ; Gestión de Disparos.
 379  893D
 380  893D 00           Numero_de_disparotes db 0
 381  893E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 382  8940 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 383  8942 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 384  8943              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 385  8943              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 386  8943 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 387  8945              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 388  8945              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 389  8945              ;														; _produzca colisión.
 390  8945 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 391  8947              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 392  8947 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 393  894A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 394  894A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 395  894D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 396  894D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 397  894F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 398  8950
 399  8950              ;---------------------------------------------------------------------------------------------------------------
 400  8950
 401  8950              ; Relojes y temporizaciones.
 402  8950
 403  8950 00           Contador_de_frames db 0
 404  8951 00           Contador_de_frames_2 db 0
 405  8952
 406  8952 04           Clock_explosion db 4
 407  8953 1E           Clock_Entidades_en_curso db 30
 408  8954 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 409  8955              ;														; Repite la oleada de entidades.
 410  8955 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 411  8956 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 412  8957 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 413  8958
 414  8958 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 415  8959 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 416  895A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 417  895B
 418  895B              ;---------------------------------------------------------------------------------------------------------------
 419  895B
 420  895B              ; Gestión de NIVELES.
 421  895B
 422  895B 00           Nivel db 0												; Nivel actual del juego.
 423  895C 00 00        Puntero_indice_NIVELES defw 0
 424  895E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 425  8960              ; 														; _ que definen el NIVEL.
 426  8960              ; Y todo comienza aquí .....
 427  8960              ;
 428  8960              ; Rutina principal *************************************************************************************************************************************************************************
 429  8960              ;
 430  8960              ;	16/11/22
 431  8960
 432  8960              START
 433  8960
 434  8960 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 435  8963 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 436  8965 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 437  8967 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 438  8969 F3           	DI
 439  896A
 440  896A 3E 07        	ld a,%00000111
 441  896C CD 27 99     	call Cls
 442  896F
 443  896F CD 68 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 444  8972
 445  8972              ; INICIALIZACIÓN.
 446  8972
 447  8972 CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 448  8975 CD 21 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 449  8978 CD 8D 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 450  897B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 451  897B CD A3 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 452  897E              ;													     ; _ malotes antes de guardar ninguna foto.
 453  897E              ; ----------
 454  897E
 455  897E CD 18 8D     	call Restore_entidad
 456  8981
 457  8981 21 0C 89     	ld hl,Numero_parcial_de_entidades
 458  8984 46           	ld b,(hl)
 459  8985 04           	inc b
 460  8986 05           	dec b
 461  8987 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 462  8989
 463  8989              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 464  8989              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 465  8989              ;	Pintamos el resto de entidades:
 466  8989
 467  8989              ;	INICIA ENTIDADES !!!!!
 468  8989
 469  8989 C5           1 push bc  												; Guardo el contador de entidades.
 470  898A CD 5D 8B     	call Inicia_entidad
 471  898D C1           	pop bc
 472  898E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 473  8990
 474  8990              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 475  8990              ; (Esto se dá cuando se inicia una nueva oleada).
 476  8990
 477  8990 3A 02 89     	ld a,(Ctrl_1)
 478  8993 CB 5F        	bit 3,a
 479  8995 20 15        	jr nz,5F											; Loop
 480  8997
 481  8997              ; 	INICIA AMADEUS !!!!!
 482  8997
 483  8997 CD 3F 8D     3 call Restore_Amadeus
 484  899A CD 95 8C     	call Inicia_Puntero_objeto
 485  899D CD 1A 93     	call Draw
 486  89A0 CD A0 7F     	call Guarda_foto_registros
 487  89A3 CD 9C 8D     	call Guarda_datos_de_borrado_Amadeus
 488  89A6
 489  89A6 11 9E 85     	ld de,Amadeus_db
 490  89A9 CD 51 8D     	call Store_Amadeus
 491  89AC
 492  89AC              ; 	INICIA DISPAROS !!!!!
 493  89AC
 494  89AC              ;	call Inicia_Puntero_Disparo_Entidades
 495  89AC              ;	call Inicia_Puntero_Disparo_Amadeus
 496  89AC
 497  89AC              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 498  89AC
 499  89AC CD 8D 8B     5 call Inicia_punteros_de_cajas
 500  89AF CD 18 8D     	call Restore_entidad
 501  89B2
 502  89B2 3A 02 89     	ld a,(Ctrl_1)
 503  89B5 CB 5F        	bit 3,a
 504  89B7 28 07        	jr z,6F
 505  89B9
 506  89B9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 507  89B9
 508  89B9 21 02 89     	ld hl,Ctrl_1
 509  89BC CB 9E        	res 3,(hl)
 510  89BE 18 03        	jr Main
 511  89C0
 512  89C0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 513  89C0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 514  89C0              ; _ para situarnos en el siguiente album.
 515  89C0
 516  89C0 CD D4 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 517  89C3
 518  89C3
 519  89C3              ; ------------------------------------
 520  89C3
 521  89C3              Main
 522  89C3              ;
 523  89C3              ;	12/11/23
 524  89C3
 525  89C3              ; Aparece nueva entidad ???
 526  89C3
 527  89C3              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 528  89C3              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 529  89C3              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 530  89C3              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 531  89C3              ;														; _un 2º bloque.
 532  89C3
 533  89C3 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 534  89C6 47           	ld b,a
 535  89C7 3A 50 89     	ld a,(Contador_de_frames)
 536  89CA B8           	cp b
 537  89CB 28 07        	jr z,21F
 538  89CD
 539  89CD              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 540  89CD              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 541  89CD              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 542  89CD              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 543  89CD
 544  89CD 3C           	inc a
 545  89CE B8           	cp b
 546  89CF 20 1B        	jr nz,13F
 547  89D1
 548  89D1 32 50 89     	ld (Contador_de_frames),a
 549  89D4
 550  89D4              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 551  89D4              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 552  89D4
 553  89D4 3A 0C 89     21 ld a,(Numero_parcial_de_entidades)
 554  89D7 47           	ld b,a
 555  89D8 3A 0D 89     	ld a,(Entidades_en_curso)
 556  89DB B8           	cp b
 557  89DC 28 0E        	jr z,13F
 558  89DE 30 0C        	jr nc,13F
 559  89E0
 560  89E0              ; --- --- --- --- ---
 561  89E0
 562  89E0 3C           	inc a
 563  89E1 32 0D 89     	ld (Entidades_en_curso),a
 564  89E4
 565  89E4              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 566  89E4
 567  89E4 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 568  89E7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 569  89E7              ;! _ IMPREDECIBLE !!!!
 570  89E7 C6 32        	add 50
 571  89E9 32 53 89     	ld (Clock_Entidades_en_curso),a
 572  89EC
 573  89EC              ; -------------------------------------------------------------------------------------------------------------
 574  89EC
 575  89EC              ; Habilita disparos.
 576  89EC
 577  89EC 21 55 89     13 ld hl,Disparo_Amadeus
 578  89EF 11 57 89     	ld de,CLOCK_repone_disparo_Amadeus
 579  89F2 CD EB 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 580  89F5
 581  89F5 21 58 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 582  89F8 11 5A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 583  89FB CD EB 9C     	call Habilita_disparos
 584  89FE
 585  89FE              ; COLISIONES.
 586  89FE
 587  89FE CD FC 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 588  8A01
 589  8A01              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 590  8A01              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 591  8A01              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 592  8A01
 593  8A01 AF           	xor a
 594  8A02 32 42 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 595  8A05
 596  8A05 CD 8D 8B     	call Inicia_punteros_de_cajas
 597  8A08 CD 18 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 598  8A0B              ; 														; _ en DRAW.
 599  8A0B 3A C5 88     	ld a,(Filas)
 600  8A0E A7           	and a
 601  8A0F 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 602  8A11 CD 2A 8D     	call Incrementa_punteros_de_cajas
 603  8A14 18 F2        	jr 12B
 604  8A16
 605  8A16              ; ---------------------------------------------------------------------------------------
 606  8A16
 607  8A16 3A 0C 89     10 ld a,(Numero_parcial_de_entidades)
 608  8A19 47               ld b,a
 609  8A1A A7           	and a
 610  8A1B 20 14        	jr nz,11F
 611  8A1D
 612  8A1D 21 02 89     	ld hl,Ctrl_1
 613  8A20 CB 66        	bit 4,(hl)
 614  8A22 C2 AF 8A     	jp nz,16F
 615  8A25
 616  8A25              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 617  8A25
 618  8A25 21 02 89     	ld hl,Ctrl_1
 619  8A28 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 620  8A2A
 621  8A2A 3A 50 89     	ld a,(Contador_de_frames)
 622  8A2D 3C           	inc a
 623  8A2E 32 54 89     	ld (Activa_recarga_cajas),a
 624  8A31
 625  8A31              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 626  8A31
 627  8A31 3A 0D 89     11 ld a,(Entidades_en_curso)
 628  8A34 A7           	and a
 629  8A35 CA AF 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 630  8A38 47           	ld b,a												; No hay entidades que gestionar.
 631  8A39
 632  8A39              ; Código que ejecutamos con cada entidad:
 633  8A39              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 634  8A39
 635  8A39 C5           15 push bc 												; Nº de entidades en curso.
 636  8A3A
 637  8A3A              ; Impacto ???
 638  8A3A
 639  8A3A 3A DE 88     	ld a,(Impacto)
 640  8A3D A7           	and a
 641  8A3E 28 32        	jr z,8F
 642  8A40
 643  8A40              ; Hay Impacto en esta entidad.
 644  8A40
 645  8A40 21 52 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 646  8A43 35           	dec (hl)
 647  8A44 20 63        	jr nz,17F
 648  8A46
 649  8A46              ;! Velocidad de la animación de la explosión.
 650  8A46
 651  8A46 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 652  8A48              ;														; _,(velocidad de la explosión).
 653  8A48
 654  8A48              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 655  8A48 18 FE        	jr $
 656  8A4A
 657  8A4A CD BC 8D     	call Repone_datos_de_borrado
 658  8A4D CD 31 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 659  8A50
 660  8A50
 661  8A50              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 662  8A50
 663  8A50 3A 00 89     	ld a,(Ctrl_2)
 664  8A53 CB 4F        	bit 1,a
 665  8A55 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 666  8A57
 667  8A57              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 668  8A57
 669  8A57 3A CD 88     	ld a,(CTRL_DESPLZ)
 670  8A5A A7           	and a
 671  8A5B 20 08        	jr nz,18F
 672  8A5D
 673  8A5D 21 84 84     	ld hl,Indice_Explosion_2x2-2
 674  8A60 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 675  8A63 18 06        	jr 19F
 676  8A65
 677  8A65 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 678  8A68 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 679  8A6B
 680  8A6B 21 00 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 681  8A6E CB CE        	set 1,(hl)
 682  8A70 18 22        	jr 7F
 683  8A72
 684  8A72              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 685  8A72              ; _con las coordenadas de la entidad almacenada en DRAW.
 686  8A72
 687  8A72 3A 02 89     8 ld a,(Ctrl_1)
 688  8A75 CB 57        	bit 2,a
 689  8A77 28 1B        	jr z,7F
 690  8A79
 691  8A79 2A 45 89     	ld hl,(Coordenadas_disparo_certero)
 692  8A7C EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 693  8A7D              ;														; E contiene la coordenada_X del disparo.
 694  8A7D 2A CB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 695  8A80              ;														; H FILA, (Coordenada_y de la entidad).
 696  8A80 A7           	and a
 697  8A81 ED 52        	sbc hl,de
 698  8A83
 699  8A83 CD 33 92     	call Determina_resultado_comparativa
 700  8A86
 701  8A86 78           	ld a,b
 702  8A87 A7           	and a
 703  8A88 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 704  8A8A
 705  8A8A              ; ----- ----- -----
 706  8A8A
 707  8A8A 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 708  8A8C 32 DE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 709  8A8F
 710  8A8F 21 02 89     	ld hl,Ctrl_1
 711  8A92 CB 96        	res 2,(hl)
 712  8A94
 713  8A94 CD F9 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 714  8A97
 715  8A97 3A EF 88     	ld a,(Ctrl_0)
 716  8A9A CB 67        	bit 4,a
 717  8A9C 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 718  8A9E
 719  8A9E              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 720  8A9E              ; [[[
 721  8A9E CD 96 8D     	call Detecta_disparo_entidad
 722  8AA1              ; ]]]
 723  8AA1 CD 6E 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 724  8AA4              ;	call Guarda_datos_de_borrado
 725  8AA4
 726  8AA4 21 EF 88     	ld hl,Ctrl_0
 727  8AA7 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 728  8AA9
 729  8AA9 CD DD 8C     17 call Store_Restore_cajas
 730  8AAC
 731  8AAC C1           	pop bc
 732  8AAD 10 8A        	djnz 15B
 733  8AAF
 734  8AAF              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 735  8AAF              ; Hemos gestionado todas las unidades.
 736  8AAF              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 737  8AAF
 738  8AAF              ;	ld hl,Ctrl_1
 739  8AAF              ;	res 2,(hl)
 740  8AAF
 741  8AAF CD D4 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 742  8AB2              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 743  8AB2
 744  8AB2              ; ----------------------------------------
 745  8AB2
 746  8AB2 3A 02 89     	ld a,(Ctrl_1) 										; Existe Loop?
 747  8AB5 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 748  8AB7 CA C3 89     	jp z,Main
 749  8ABA
 750  8ABA              ; RECARGA DE NUEVA OLEADA.
 751  8ABA
 752  8ABA 3A 50 89     	ld a,(Contador_de_frames)
 753  8ABD 47           	ld b,a
 754  8ABE 3A 54 89     	ld a,(Activa_recarga_cajas)
 755  8AC1 B8           	cp b
 756  8AC2 28 08        	jr z,20F
 757  8AC4
 758  8AC4 21 02 89     	ld hl,Ctrl_1
 759  8AC7 CB E6        	set 4,(hl)
 760  8AC9 C3 C3 89     	jp Main
 761  8ACC
 762  8ACC 21 02 89     20 ld hl,Ctrl_1
 763  8ACF CB A6        	res 4,(hl)
 764  8AD1
 765  8AD1 3A 50 89     	ld a,(Contador_de_frames)
 766  8AD4
 767  8AD4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 768  8AD4              ;! _ IMPREDECIBLE !!!!
 769  8AD4
 770  8AD4 C6 0A        	add 10
 771  8AD6 32 53 89     	ld (Clock_Entidades_en_curso),a
 772  8AD9
 773  8AD9 C3 75 89     	jp 4B
 774  8ADC
 775  8ADC C9           	ret
 776  8ADD
 777  8ADD              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 778  8ADD              ;
 779  8ADD              ;	16/11/23
 780  8ADD
 781  8ADD              Gestiona_Amadeus
 782  8ADD
 783  8ADD              ;! Activa/desactiva impacto con Amadeus.
 784  8ADD
 785  8ADD 3A DE 88     	ld a,(Impacto)
 786  8AE0 A7           	and a
 787  8AE1 20 FE        	jr nz,$
 788  8AE3
 789  8AE3 CD 4A 8B     	call Mov_Amadeus
 790  8AE6
 791  8AE6 3A EF 88     	ld a,(Ctrl_0)
 792  8AE9 CB 67        	bit 4,a
 793  8AEB 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 794  8AED
 795  8AED CD 6E 8B     	call Guarda_foto_entidad_a_pintar
 796  8AF0 CD 9C 8D     	call Guarda_datos_de_borrado_Amadeus
 797  8AF3
 798  8AF3 21 EF 88     14 ld hl,Ctrl_0
 799  8AF6 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 800  8AF8
 801  8AF8              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 802  8AF8
 803  8AF8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 804  8AF8
 805  8AF8              ;	call Calcula_numero_de_disparotes
 806  8AF8
 807  8AF8 C9           	ret
 808  8AF9
 809  8AF9              ; --------------------------------------------------------------------------------------------------------------
 810  8AF9              ;
 811  8AF9              ;	27/05/23
 812  8AF9
 813  8AF9              Mov_obj
 814  8AF9
 815  8AF9 3A 00 89     	ld a,(Ctrl_2)
 816  8AFC CB 4F        	bit 1,a
 817  8AFE 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 818  8B00
 819  8B00              ; Explosión:
 820  8B00
 821  8B00 3A 01 89     	ld a,(Frames_explosion)
 822  8B03 A7           	and a
 823  8B04 20 11        	jr nz,4F
 824  8B06
 825  8B06              ; Una alimaña menos!!!!!!!!!1
 826  8B06
 827  8B06 CD 5A 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 828  8B09 21 0C 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 829  8B0C 35           	dec (hl)
 830  8B0D 21 0D 89     	ld hl,Entidades_en_curso
 831  8B10 35           	dec (hl)
 832  8B11 21 0B 89     	ld hl,Numero_de_entidades
 833  8B14 35           	dec (hl)
 834  8B15 18 32        	jr 3F
 835  8B17
 836  8B17              ; -----
 837  8B17
 838  8B17              ;	`Movemos´ la explosión.
 839  8B17
 840  8B17 2A D3 88     4 ld hl,(Puntero_DESPLZ_der)
 841  8B1A 23           	inc hl
 842  8B1B 23           	inc hl
 843  8B1C 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 844  8B1F CD 8F 8C     	call Extrae_address
 845  8B22 22 C9 88     	ld (Puntero_objeto),hl
 846  8B25
 847  8B25 21 01 89     	ld hl,Frames_explosion
 848  8B28 35           	dec (hl)
 849  8B29
 850  8B29              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 851  8B29 18 1E        	jr 3F
 852  8B2B
 853  8B2B AF           2 xor a
 854  8B2C 32 EF 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 855  8B2F
 856  8B2F              ; Movemos Entidades malignas.
 857  8B2F
 858  8B2F CD 96 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 859  8B32
 860  8B32 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 861  8B35 CB 67        	bit 4,a
 862  8B37 C8           	ret z
 863  8B38
 864  8B38              ; Ha habido desplazamiento de la entidad maligna.
 865  8B38              ; Ha llegado a zona de AMADEUS ???
 866  8B38
 867  8B38 3A CC 88     	ld a,(Coordenada_y)
 868  8B3B FE 14        	cp $14
 869  8B3D D4 C1 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 870  8B40              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 871  8B40              ; ---------
 872  8B40
 873  8B40 CD 75 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 874  8B43 CD BC 8D     	call Repone_datos_de_borrado
 875  8B46 CD 31 8C     	call Limpia_Variables_de_borrado
 876  8B49
 877  8B49 C9           3 ret													; _de la misma.
 878  8B4A
 879  8B4A              ; --------------------------------------------------------------------------------------------------------------
 880  8B4A              ;
 881  8B4A              ;	29/1/23
 882  8B4A
 883  8B4A              Mov_Amadeus
 884  8B4A
 885  8B4A CD 7C 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 886  8B4D
 887  8B4D 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 888  8B50 CB 67        	bit 4,a
 889  8B52 C8           	ret z
 890  8B53
 891  8B53              ; ---------
 892  8B53
 893  8B53 CD 75 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 894  8B56 CD AC 8D     	call Repone_datos_de_borrado_Amadeus
 895  8B59 CD 31 8C     	call Limpia_Variables_de_borrado
 896  8B5C
 897  8B5C C9           	ret
 898  8B5D
 899  8B5D              ; -----------------------------------------------------------------------------------
 900  8B5D              ;
 901  8B5D              ;	01/11/23
 902  8B5D
 903  8B5D CD 95 8C     Inicia_entidad	call Inicia_Puntero_objeto
 904  8B60 CD 3B 99     	call Recompone_posicion_inicio
 905  8B63 CD 1A 93     	call Draw
 906  8B66 CD A0 7F     	call Guarda_foto_registros
 907  8B69 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 908  8B6A              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 909  8B6A CD DD 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 910  8B6D C9           	ret
 911  8B6E
 912  8B6E              ; --------------------------------------------------------------------------------------------------------------
 913  8B6E              ;
 914  8B6E              ;	31/08/23
 915  8B6E              ;
 916  8B6E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 917  8B6E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 918  8B6E
 919  8B6E              Guarda_foto_entidad_a_pintar
 920  8B6E
 921  8B6E              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 922  8B6E
 923  8B6E CD 1A 93     	call Draw
 924  8B71 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 925  8B74 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 926  8B75
 927  8B75              ; --------------------------------------------------------------------------------------------------------------
 928  8B75              ;
 929  8B75              ;	19/9/23
 930  8B75
 931  8B75 21 C5 88     Prepara_var_pintado ld hl,Filas
 932  8B78 11 E5 88     	ld de,Variables_de_pintado
 933  8B7B 01 08 00     	ld bc,8
 934  8B7E ED B0        	ldir
 935  8B80 C9           	ret
 936  8B81
 937  8B81              ; --------------------------------------------------------------------------------------------------------------
 938  8B81
 939  8B81 21 E5 88     Repone_pintar ld hl,Variables_de_pintado
 940  8B84 11 C5 88     	ld de,Filas
 941  8B87 01 08 00     	ld bc,8
 942  8B8A ED B0        	ldir
 943  8B8C C9           	ret
 944  8B8D
 945  8B8D              ; *************************************************************************************************************************************************************
 946  8B8D              ;
 947  8B8D              ; 8/1/23
 948  8B8D              ;
 949  8B8D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 950  8B8D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 951  8B8D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 952  8B8D
 953  8B8D              ; Destruye HL y DE !!!!!
 954  8B8D
 955  8B8D              Inicia_punteros_de_cajas
 956  8B8D
 957  8B8D 21 8C 85     	ld hl,Indice_de_cajas
 958  8B90 CD 8F 8C         call Extrae_address
 959  8B93 22 05 89         ld (Puntero_store_caja),hl
 960  8B96 21 8E 85     	ld hl,Indice_de_cajas+2
 961  8B99 22 09 89     	ld (Indice_restore_caja),hl
 962  8B9C CD 8F 8C     	call Extrae_address
 963  8B9F 22 07 89     	ld (Puntero_restore_caja),hl
 964  8BA2 C9               ret
 965  8BA3
 966  8BA3              ; ---------------------------------------------------------------
 967  8BA3              ;
 968  8BA3              ;	9/8/23
 969  8BA3              ;
 970  8BA3              ;	Inicialización y gestión de álbumes de fotos y cajas.
 971  8BA3
 972  8BA3              Inicia_punteros_de_albumes_y_malotes
 973  8BA3
 974  8BA3 21 EC 84     	ld hl,Indice_album_de_fotos
 975  8BA6 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
 976  8BA9 CD 8F 8C     	call Extrae_address
 977  8BAC 22 19 89     	ld (Stack_snapshot),hl
 978  8BAF
 979  8BAF 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 980  8BB2 22 31 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 981  8BB5 CD 8F 8C     	call Extrae_address
 982  8BB8 22 1B 89     	ld (Stack_snapshot_disparos),hl
 983  8BBB
 984  8BBB 21 FC 84     	ld hl,Indice_End_Snapshot
 985  8BBE 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
 986  8BC1 CD 8F 8C     	call Extrae_address
 987  8BC4 22 37 89     	ld (Puntero_de_End_Snapshot),hl
 988  8BC7
 989  8BC7 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 990  8BCA 22 35 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 991  8BCD CD 8F 8C     	call Extrae_address
 992  8BD0 22 39 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 993  8BD3
 994  8BD3 C9           	ret
 995  8BD4
 996  8BD4              ;	23/10/23
 997  8BD4
 998  8BD4              Avanza_puntero_de_album_de_fotos_de_entidades
 999  8BD4
1000  8BD4              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
1001  8BD4
1002  8BD4              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
1003  8BD4              ; Estamos en el último álbum del índice???.
1004  8BD4              ;
1005  8BD4 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
1006  8BD7 01 F2 84     	ld bc,Indice_album_de_fotos+6
1007  8BDA A7           	and a
1008  8BDB ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
1009  8BDD 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
1010  8BDF
1011  8BDF              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
1012  8BDF              ; Actualizamos (Semaforo).
1013  8BDF
1014  8BDF 21 3B 89     	ld hl,Semaforo
1015  8BE2 CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
1016  8BE4
1017  8BE4              ; Inicia con el buffer de video completo !!!
1018  8BE4
1019  8BE4 FB           	ei
1020  8BE5 76           	halt
1021  8BE6 C9           	ret
1022  8BE7
1023  8BE7 2A 2F 89     1 ld hl,(Puntero_indice_album_de_fotos)
1024  8BEA 23           	inc hl
1025  8BEB 23           	inc hl
1026  8BEC 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
1027  8BEF CD 8F 8C     	call Extrae_address
1028  8BF2 22 19 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1029  8BF5
1030  8BF5 2A 33 89     	ld hl,(Puntero_indice_End_Snapshot)
1031  8BF8 23           	inc hl
1032  8BF9 23           	inc hl
1033  8BFA 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
1034  8BFD CD 8F 8C     	call Extrae_address
1035  8C00 22 37 89     	ld (Puntero_de_End_Snapshot),hl
1036  8C03
1037  8C03 21 3B 89     	ld hl,Semaforo
1038  8C06 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1039  8C08
1040  8C08 C9           	ret
1041  8C09
1042  8C09              ; *************************************************************************************************************************************************************
1043  8C09              ;
1044  8C09              ; 8/1/23
1045  8C09              ;
1046  8C09              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1047  8C09
1048  8C09 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1049  8C0C 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1050  8C0F C9           	ret
1051  8C10 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1052  8C13 22 40 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1053  8C16 C9           	ret
1054  8C17
1055  8C17              ; -------------------------------------------------------------------------------------------------------------
1056  8C17              ;
1057  8C17              ; 21/9/23
1058  8C17              ;
1059  8C17
1060  8C17              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1061  8C17
1062  8C17              Limpia_album_Amadeus
1063  8C17
1064  8C17 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1065  8C1A 7E           	ld a,(hl)
1066  8C1B A7           	and a
1067  8C1C C8           	ret z
1068  8C1D
1069  8C1D 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1070  8C20 11 B1 72     	ld de,Album_de_fotos_Amadeus+1
1071  8C23 01 0B 00     	ld bc,11
1072  8C26 AF           	xor a
1073  8C27 77           	ld (hl),a
1074  8C28 ED B0        	ldir
1075  8C2A
1076  8C2A 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1077  8C2D 22 21 89     	ld (End_Snapshot_Amadeus),hl
1078  8C30
1079  8C30 C9           	ret
1080  8C31
1081  8C31 21 DF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1082  8C34 11 E0 88     	ld de,Variables_de_borrado+1
1083  8C37 01 05 00     	ld bc,5
1084  8C3A AF           	xor a
1085  8C3B 77           	ld (hl),a
1086  8C3C ED B0        	ldir
1087  8C3E C9           	ret
1088  8C3F
1089  8C3F              ; -------------------------------------------------------------------------------------------------------------
1090  8C3F              ;
1091  8C3F              ; 8/9/23
1092  8C3F              ;
1093  8C3F
1094  8C3F              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1095  8C3F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1096  8C3F
1097  8C3F              Calcula_numero_de_malotes
1098  8C3F
1099  8C3F 21 00 70     	ld hl,Album_de_fotos
1100  8C42 EB           	ex de,hl
1101  8C43 2A 1D 89     	ld hl,(End_Snapshot)
1102  8C46
1103  8C46 7C           	ld a,h
1104  8C47 A7           	and a
1105  8C48 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1106  8C4A
1107  8C4A 06 00        4 ld b,0
1108  8C4C 7D           	ld a,l
1109  8C4D 93           	sub e
1110  8C4E 28 07        	jr z,1F
1111  8C50
1112  8C50              ; Nº de malotes no es "0".
1113  8C50
1114  8C50 D6 06        2 sub 6
1115  8C52 04           	inc b
1116  8C53 A7           	and a
1117  8C54 20 FA        	jr nz,2B
1118  8C56 78           	ld a,b
1119  8C57
1120  8C57 32 0E 89     1 ld (Numero_de_malotes),a
1121  8C5A C9           	ret
1122  8C5B
1123  8C5B              ; -------------------------------------------------------------------------------------------------------------
1124  8C5B              ;
1125  8C5B              ; 8/9/23
1126  8C5B              ;
1127  8C5B
1128  8C5B              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1129  8C5B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1130  8C5B
1131  8C5B              Calcula_malotes_Amadeus
1132  8C5B
1133  8C5B 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1134  8C5E EB           	ex de,hl
1135  8C5F 2A 21 89     	ld hl,(End_Snapshot_Amadeus)
1136  8C62
1137  8C62 7C           	ld a,h
1138  8C63 A7           	and a
1139  8C64 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1140  8C66
1141  8C66 06 00        	ld b,0
1142  8C68 7D           	ld a,l
1143  8C69 93           	sub e
1144  8C6A 28 07        	jr z,1F
1145  8C6C
1146  8C6C              ; Nº de malotes no es "0".
1147  8C6C
1148  8C6C D6 06        2 sub 6
1149  8C6E 04           	inc b
1150  8C6F A7           	and a
1151  8C70 20 FA        	jr nz,2B
1152  8C72 78           	ld a,b
1153  8C73
1154  8C73 32 0E 89     1 ld (Numero_de_malotes),a
1155  8C76 C9           	ret
1156  8C77
1157  8C77              ; -------------------------------------------------------------------------------------------------------------
1158  8C77              ;
1159  8C77              ; 28/2/23
1160  8C77              ;
1161  8C77
1162  8C77              Calcula_numero_de_disparotes
1163  8C77
1164  8C77 21 58 71     	ld hl,Album_de_fotos_disparos
1165  8C7A EB           	ex de,hl
1166  8C7B 2A 39 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1167  8C7E
1168  8C7E 06 00        	ld b,0
1169  8C80 7D           	ld a,l
1170  8C81 93           	sub e
1171  8C82 28 07        	jr z,1F
1172  8C84
1173  8C84              ; Nº de malotes no es "0".
1174  8C84
1175  8C84 D6 06        2 sub 6
1176  8C86 04           	inc b
1177  8C87 A7           	and a
1178  8C88 20 FA        	jr nz,2B
1179  8C8A 78           	ld a,b
1180  8C8B
1181  8C8B 32 3D 89     1 ld (Numero_de_disparotes),a
1182  8C8E C9           	ret
1183  8C8F
1184  8C8F              ; *************************************************************************************************************************************************************
1185  8C8F              ;
1186  8C8F              ; 20/10/22
1187  8C8F              ;
1188  8C8F              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1189  8C8F              ;
1190  8C8F              ; Destruye el puntero y DE !!!!!
1191  8C8F
1192  8C8F 5E           Extrae_address ld e,(hl)
1193  8C90 23           	inc hl
1194  8C91 56           	ld d,(hl)
1195  8C92 2B           	dec hl
1196  8C93 EB           	ex de,hl
1197  8C94 C9           	ret
1198  8C95
1199  8C95              ; *************************************************************************************************************************************************************
1200  8C95              ;
1201  8C95              ;	7/2/23
1202  8C95              ;
1203  8C95              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1204  8C95              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1205  8C95              ;
1206  8C95              ;   Destruye HL y BC !!!!!,
1207  8C95              ;
1208  8C95              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1209  8C95              ;					"0" ..... Izquierda.
1210  8C95
1211  8C95              Inicia_Puntero_objeto
1212  8C95
1213  8C95 3A D9 88     	ld a,(Cuad_objeto)
1214  8C98 E6 01        	and 1
1215  8C9A F5           	push af
1216  8C9B CC B9 8C     	call z,Inicia_puntero_objeto_izq
1217  8C9E F1           	pop af
1218  8C9F 28 2B        	jr z,1F
1219  8CA1 CD A6 8C     	call Inicia_puntero_objeto_der
1220  8CA4 18 26        	jr 1F
1221  8CA6
1222  8CA6              ; Arrancamos desde la parte izquierda de la pantalla.
1223  8CA6              ; Iniciamos (Indice_Sprite_der).
1224  8CA6
1225  8CA6 2A CF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1226  8CA9 22 D3 88     	ld (Puntero_DESPLZ_der),hl
1227  8CAC CD 8F 8C     	call Extrae_address
1228  8CAF 22 C9 88     	ld (Puntero_objeto),hl
1229  8CB2
1230  8CB2 2A D1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1231  8CB5 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1232  8CB8 C9           	ret
1233  8CB9
1234  8CB9              ; Arrancamos desde la parte derecha de la pantalla.
1235  8CB9              ; Iniciamos (Indice_Sprite_izq).
1236  8CB9
1237  8CB9 2A D1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1238  8CBC 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1239  8CBF CD 8F 8C     	call Extrae_address
1240  8CC2 22 C9 88     	ld (Puntero_objeto),hl
1241  8CC5
1242  8CC5 2A CF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1243  8CC8 22 D3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1244  8CCB C9           	ret
1245  8CCC
1246  8CCC              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1247  8CCC
1248  8CCC 21 40 83     1 ld hl,Amadeus
1249  8CCF ED 4B C9 88  	ld bc,(Puntero_objeto)
1250  8CD3 B7 ED 42     	sub hl,bc
1251  8CD6 C0           	ret nz
1252  8CD7 21 EF 88     	ld hl,Ctrl_0
1253  8CDA CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1254  8CDC C9           	ret 												; _de nuestra nave en los extremos.
1255  8CDD
1256  8CDD              ; *************************************************************************************************************************************************************
1257  8CDD              ;
1258  8CDD              ;	14/5/23
1259  8CDD              ;
1260  8CDD              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1261  8CDD              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1262  8CDD
1263  8CDD              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1264  8CDD              ;	_de la 2ª y 3ª entidad respectivamente.
1265  8CDD
1266  8CDD              Store_Restore_cajas
1267  8CDD
1268  8CDD E5           	push hl
1269  8CDE D5           	push de
1270  8CDF C5            	push bc
1271  8CE0
1272  8CE0              ;	STORE !!!!!
1273  8CE0              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1274  8CE0
1275  8CE0 21 C5 88     	ld hl,Filas
1276  8CE3 ED 5B 05 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1277  8CE7 01 3D 00     	ld bc,61
1278  8CEA ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1279  8CEC
1280  8CEC              ; 	Entidad_sospechosa. 20/4/23
1281  8CEC
1282  8CEC 3A DE 88     	ld a,(Impacto)
1283  8CEF A7           	and a
1284  8CF0 28 0C        	jr z,1F
1285  8CF2
1286  8CF2 2A 05 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1287  8CF5 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1288  8CF8 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1289  8CF9 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1290  8CFB 22 43 89     	ld (Entidad_sospechosa_de_colision),hl
1291  8CFE
1292  8CFE              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1293  8CFE
1294  8CFE 2A 07 89     1 ld hl,(Puntero_restore_caja)
1295  8D01 7E           	ld a,(hl)
1296  8D02 A7           	and a
1297  8D03 F5           	push af
1298  8D04 28 08        	jr z,2F
1299  8D06
1300  8D06 11 C5 88     	ld de,Filas
1301  8D09 01 3D 00     	ld bc,61
1302  8D0C ED B0        	ldir
1303  8D0E
1304  8D0E CD 2A 8D     2 call Incrementa_punteros_de_cajas
1305  8D11
1306  8D11 F1           	pop af
1307  8D12 28 EA        	jr z,1B
1308  8D14
1309  8D14 C1           	pop bc
1310  8D15 D1           	pop de
1311  8D16 E1           	pop hl
1312  8D17
1313  8D17 C9           	ret
1314  8D18
1315  8D18              ; **************************************************************************************************
1316  8D18              ;
1317  8D18              ;	12/05/23
1318  8D18              ;
1319  8D18              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1320  8D18
1321  8D18 E5           Restore_entidad push hl
1322  8D19 D5           	push de
1323  8D1A C5            	push bc
1324  8D1B
1325  8D1B 2A 05 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1326  8D1E 11 C5 88     	ld de,Filas
1327  8D21 01 3D 00     	ld bc,61
1328  8D24 ED B0        	ldir
1329  8D26
1330  8D26 C1           	pop bc
1331  8D27 D1           	pop de
1332  8D28 E1           	pop hl
1333  8D29 C9           	ret
1334  8D2A
1335  8D2A              ; **************************************************************************************************
1336  8D2A              ;
1337  8D2A              ;	08/05/23
1338  8D2A              ;
1339  8D2A              ;	Incrementamos los dos punteros de entidades. (+1).
1340  8D2A
1341  8D2A              Incrementa_punteros_de_cajas
1342  8D2A
1343  8D2A 2A 07 89     	ld hl,(Puntero_restore_caja)
1344  8D2D 22 05 89     	ld (Puntero_store_caja),hl
1345  8D30 2A 09 89     	ld hl,(Indice_restore_caja)
1346  8D33 23           	inc hl
1347  8D34 23           	inc hl
1348  8D35 22 09 89     	ld (Indice_restore_caja),hl
1349  8D38 CD 8F 8C         call Extrae_address
1350  8D3B 22 07 89         ld (Puntero_restore_caja),hl
1351  8D3E C9               ret
1352  8D3F
1353  8D3F              ; **************************************************************************************************
1354  8D3F              ;
1355  8D3F              ;	25/01/23
1356  8D3F              ;
1357  8D3F              ;	Restore_Amadeus
1358  8D3F              ;
1359  8D3F              ;	Cargamos en DRAW los parámetros de Amadeus.
1360  8D3F              ;
1361  8D3F
1362  8D3F E5           Restore_Amadeus	push hl
1363  8D40 D5           	push de
1364  8D41 C5            	push bc
1365  8D42 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1366  8D45 11 C5 88     	ld de,Filas
1367  8D48 01 3D 00     	ld bc,61
1368  8D4B ED B0        	ldir
1369  8D4D C1           	pop bc
1370  8D4E D1           	pop de
1371  8D4F E1           	pop hl
1372  8D50 C9           	ret
1373  8D51
1374  8D51              ; *************************************************************************************************************************************************************
1375  8D51              ;
1376  8D51              ;	29/04/23
1377  8D51              ;
1378  8D51              ;	Store_Amadeus
1379  8D51              ;
1380  8D51              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1381  8D51              ;
1382  8D51              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1383  8D51              ;
1384  8D51              ;	DESTRUYE: HL y BC y DE.
1385  8D51
1386  8D51 21 C5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1387  8D54 01 3D 00     	ld bc,61
1388  8D57 ED B0        	ldir
1389  8D59 C9           	ret
1390  8D5A
1391  8D5A              ; -----------------------------------------------------------
1392  8D5A              ;
1393  8D5A              ;	27/04/23
1394  8D5A              ;
1395  8D5A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1396  8D5A              ;
1397  8D5A              ;	Destruye: HL,BC,DE,A
1398  8D5A
1399  8D5A 21 C5 88     Borra_datos_entidad ld hl,Filas
1400  8D5D 01 3C 00     	ld bc,60
1401  8D60 AF           	xor a
1402  8D61 77           	ld (hl),a
1403  8D62 11 C6 88     	ld de,Filas+1
1404  8D65 ED B0        	ldir
1405  8D67 C9           	ret
1406  8D68
1407  8D68              ; -----------------------------------------------------------
1408  8D68
1409  8D68              ; Teclado.
1410  8D68
1411  8D68 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1412  8D6A DB FE        	in a,($fe)
1413  8D6C E6 01        	and $01
1414  8D6E 28 02        	jr z,1f
1415  8D70 18 F6        	jr Pulsa_ENTER
1416  8D72 C9           1 ret
1417  8D73
1418  8D73              ; **************************************************************************************************
1419  8D73              ;
1420  8D73              ; Temporización.
1421  8D73
1422  8D73              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1423  8D73              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1424  8D73              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1425  8D73              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1426  8D73
1427  8D73              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1428  8D73              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1429  8D73              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1430  8D73
1431  8D73              ; A partir de $4f61 no hace falta DELAY.
1432  8D73
1433  8D73              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1434  8D73
1435  8D73 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1436  8D76 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1437  8D77 78           	LD A,B
1438  8D78 A7           	AND A
1439  8D79 20 FB        	JR NZ,wait
1440  8D7B C9           	RET
1441  8D7C
1442  8D7C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1443  8D7C              ;
1444  8D7C              ;	5/3/23
1445  8D7C              ;
1446  8D7C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1447  8D7C
1448  8D7C              Movimiento_Amadeus
1449  8D7C
1450  8D7C              ; Disparo.
1451  8D7C
1452  8D7C              ;	ld a,(Disparo_Amadeus)
1453  8D7C              ;	and a
1454  8D7C              ;	jr nz,1F
1455  8D7C              ;	jr 2F
1456  8D7C
1457  8D7C              ;1 ld a,$f7													; "5" para disparar.
1458  8D7C              ;	in a,($fe)
1459  8D7C              ;	and $10
1460  8D7C
1461  8D7C              ;	push af
1462  8D7C              ;	call z,Genera_disparo
1463  8D7C              ;	pop af
1464  8D7C              ;	jr nz,2F
1465  8D7C
1466  8D7C              ;	ld a,(Disparo_Amadeus)
1467  8D7C              ;	xor 1
1468  8D7C              ;	ld (Disparo_Amadeus),a
1469  8D7C
1470  8D7C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1471  8D7E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1472  8D80 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1473  8D82 CC F5 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1474  8D85
1475  8D85 3E F7        	ld a,$f7
1476  8D87 DB FE        	in a,($fe)
1477  8D89 E6 01        	and $01
1478  8D8B C8           	ret z
1479  8D8C
1480  8D8C 3E F7        	ld a,$f7
1481  8D8E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1482  8D90 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1483  8D92 CC D7 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1484  8D95 C9           	ret
1485  8D96
1486  8D96              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1487  8D96              ;
1488  8D96              ;	Rutina provisional para que los malotes cagen balas.
1489  8D96
1490  8D96              Detecta_disparo_entidad
1491  8D96
1492  8D96 3A 58 89     	ld a,(Disparo_entidad)
1493  8D99 A7           	and a
1494  8D9A C8           	ret z
1495  8D9B
1496  8D9B              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1497  8D9B
1498  8D9B              ;	ld a,$7f				; Detecta SPACE.
1499  8D9B              ;	in a,($fe)
1500  8D9B              ;	and 1
1501  8D9B              ;	ret nz
1502  8D9B
1503  8D9B              ;	call Genera_disparo
1504  8D9B C9           	ret
1505  8D9C
1506  8D9C              ; ----------------------------------------------------------------------
1507  8D9C              ;
1508  8D9C              ;	8/9/23
1509  8D9C
1510  8D9C 2A 21 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1511  8D9F 2B            	dec hl
1512  8DA0 7E           	ld a,(hl)
1513  8DA1 A7           	and a
1514  8DA2 C8           	ret z										; Salimos si es álbum está vacío.
1515  8DA3
1516  8DA3 11 E4 88     	ld de,Variables_de_borrado+5
1517  8DA6 01 06 00     	ld bc,6
1518  8DA9 ED B8        	lddr
1519  8DAB C9           	ret
1520  8DAC
1521  8DAC              ; ----------------------------------------------------------------------
1522  8DAC              ;
1523  8DAC              ;	9/9/23
1524  8DAC
1525  8DAC              Repone_datos_de_borrado_Amadeus
1526  8DAC
1527  8DAC 21 DF 88     	ld hl,Variables_de_borrado
1528  8DAF 11 B0 72     	ld de,Album_de_fotos_Amadeus
1529  8DB2 01 06 00     	ld bc,6
1530  8DB5 ED B0        	ldir
1531  8DB7
1532  8DB7 EB           	ex de,hl
1533  8DB8 22 21 89     	ld (End_Snapshot_Amadeus),hl
1534  8DBB
1535  8DBB C9           	ret
1536  8DBC
1537  8DBC              ; ----------------------------------------------------------------------
1538  8DBC              ;
1539  8DBC              ;	27/10/23
1540  8DBC              ;
1541  8DBC
1542  8DBC              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1543  8DBC              ;	_ Album_de_fotos correspondiente.
1544  8DBC
1545  8DBC              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1546  8DBC              ;	_ durante el proceso de escritura.
1547  8DBC
1548  8DBC              Repone_datos_de_borrado
1549  8DBC
1550  8DBC F3           	di
1551  8DBD
1552  8DBD ED 5B 19 89  	ld de,(Stack_snapshot)
1553  8DC1 21 DF 88     	ld hl,Variables_de_borrado
1554  8DC4 01 06 00     	ld bc,6
1555  8DC7 ED B0        	ldir
1556  8DC9 FB           	ei
1557  8DCA
1558  8DCA EB           	ex de,hl
1559  8DCB 22 19 89     	ld (Stack_snapshot),hl
1560  8DCE
1561  8DCE C9           	ret
1562  8DCF
1563  8DCF              ; ----------------------------------------------------------------------
1564  8DCF              ;
1565  8DCF              ;	11/8/23
1566  8DCF
1567  8DCF              Gestiona_entidades
1568  8DCF
1569  8DCF              ;	call Extrae_foto_disparos
1570  8DCF              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1571  8DCF
1572  8DCF CD FB 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1573  8DD2
1574  8DD2              ;	BUFFER vacío ??????
1575  8DD2              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1576  8DD2
1577  8DD2 3A 3C 89     	ld a,(Ctrl_Semaforo)
1578  8DD5 CB 67        	bit 4,a
1579  8DD7 28 05        	jr z,1F
1580  8DD9
1581  8DD9              ;! Buffer vacío. Inicializar (Ctrl_Semaforo) y salir sin modificar punteros.
1582  8DD9
1583  8DD9 AF           	xor a
1584  8DDA 32 3C 89     	ld (Ctrl_Semaforo),a
1585  8DDD C9           	ret
1586  8DDE
1587  8DDE CB 47        1 bit 0,a
1588  8DE0 C0           	ret nz
1589  8DE1
1590  8DE1              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1591  8DE1              ; Nos situamos al comienzo del último álbum.
1592  8DE1
1593  8DE1 CD 55 73     	call Modifica_Stack_snapshot
1594  8DE4
1595  8DE4 C9           	ret
1596  8DE5
1597  8DE5              ; -----------------------------------------------------------------------------------
1598  8DE5
1599  8DE5              Pinta_Amadeus
1600  8DE5
1601  8DE5 3E 06        	ld a,6
1602  8DE7 D3 FE            out ($fe),a										; Amarillo
1603  8DE9
1604  8DE9 CD 5B 8C        	call Calcula_malotes_Amadeus
1605  8DEC CD AA 96     	call Extrae_foto_Amadeus
1606  8DEF CD 17 8C     	call Limpia_album_Amadeus
1607  8DF2
1608  8DF2 C9           	ret
1609  8DF3
1610  8DF3              Pinta_entidades
1611  8DF3
1612  8DF3 3A 3B 89     	ld a,(Semaforo)
1613  8DF6 CB 47        	bit 0,a
1614  8DF8 C8           	ret z
1615  8DF9
1616  8DF9              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1617  8DF9
1618  8DF9 CD 3F 8C     	call Calcula_numero_de_malotes
1619  8DFC CD 28 96     	call Extrae_foto_entidades
1620  8DFF
1621  8DFF C9           	ret
1622  8E00
1623  8E00              ; -----------------------------------------------------------------------------------
1624  8E00              ;
1625  8E00              ;	12/11/23
1626  8E00              ;
1627  8E00              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1628  8E00
1629  8E00              Actualiza_relojes
1630  8E00
1631  8E00 21 50 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1632  8E03 34           	inc (hl)
1633  8E04
1634  8E04 34           	inc (hl)
1635  8E05 35           	dec (hl)
1636  8E06 C0           	ret nz
1637  8E07
1638  8E07 21 51 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1639  8E0A 34           	inc (hl)
1640  8E0B C9           	ret
1641  8E0C
1642  8E0C              ; ---------------------------------------------------------------
1643  8E0C              ;
1644  8E0C              ;	27/9/23
1645  8E0C
1646  8E0C              Guarda_parametros_DRAW
1647  8E0C
1648  8E0C 21 C5 88     	ld hl,Filas
1649  8E0F 11 BD 72     	ld de,Almacen_de_parametros_DRAW
1650  8E12 01 3D 00     	ld bc,61
1651  8E15 ED B0        	ldir
1652  8E17 C9           	ret
1653  8E18
1654  8E18              Recupera_parametros_DRAW
1655  8E18
1656  8E18 21 BD 72     	ld hl,Almacen_de_parametros_DRAW
1657  8E1B 11 C5 88     	ld de,Filas
1658  8E1E 01 3D 00     	ld bc,61
1659  8E21 ED B0        	ldir
1660  8E23 C9           	ret
1661  8E24
1662  8E24              ; ---------------------------------------------------------------
1663  8E24
1664  8E24              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E24              ; ******************************************************************************************************************************************************************************************
   2+ 8E24              ;
   3+ 8E24              ;   21/07/23
   4+ 8E24              ;
   5+ 8E24              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E24              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E24              ;
   8+ 8E24              ;
   9+ 8E24              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E24              ;
  11+ 8E24              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E24              ;               _ hacen las entidades hacia abajo.
  13+ 8E24              ;
  14+ 8E24              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E24              ;
  16+ 8E24              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E24              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E24              ;
  19+ 8E24              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E24              ;           _ la bala.
  21+ 8E24              ;
  22+ 8E24              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E24              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E24              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E24              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E24              ;           _ en el momento de generarse la bala)).
  27+ 8E24
  28+ 8E24              Genera_disparo
  29+ 8E24
  30+ 8E24              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E24              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E24              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E24              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E24              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E24              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E24              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E24
  38+ 8E24              ; Exclusiones:
  39+ 8E24
  40+ 8E24 3A DD 88         ld a,(Vel_down)
  41+ 8E27 47               ld b,a
  42+ 8E28 3A 4F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E2B B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E2C D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E2D 3A FC 88         ld a,(Columnas)
  46+ 8E30 47               ld b,a
  47+ 8E31 3A C6 88         ld a,(Columns)
  48+ 8E34 B8               cp b
  49+ 8E35 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E36
  51+ 8E36              ; ----- ----- -----
  52+ 8E36
  53+ 8E36 3A EF 88         ld a,(Ctrl_0)
  54+ 8E39 CB 77            bit 6,a
  55+ 8E3B 20 06            jr nz,14F
  56+ 8E3D
  57+ 8E3D 3A CC 88         ld a,(Coordenada_y)
  58+ 8E40 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E42 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E43
  61+ 8E43 21 00 80     14 ld hl,Indice_disparo
  62+ 8E46 3A CD 88         ld a,(CTRL_DESPLZ)
  63+ 8E49 4F               ld c,a
  64+ 8E4A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E4C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E4C              ;                                            ""        ""       "f9", B="1"
  67+ 8E4C              ;                                            ""        ""       "fb", B="2"
  68+ 8E4C              ;                                            ""        ""       "fb", B="3"
  69+ 8E4C A7               and a
  70+ 8E4D 28 10            jr z,1F
  71+ 8E4F E6 01            and 1
  72+ 8E51 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E52
  74+ 8E52 79               ld a,c
  75+ 8E53 16 F9            ld d,$f9
  76+ 8E55 23           2 inc hl
  77+ 8E56 23               inc hl
  78+ 8E57 04               inc b
  79+ 8E58 BA               cp d
  80+ 8E59 28 04            jr z,1F
  81+ 8E5B 14               inc d
  82+ 8E5C 14               inc d
  83+ 8E5D 18 F6            jr 2B
  84+ 8E5F
  85+ 8E5F CD 8F 8C     1 call Extrae_address
  86+ 8E62 E5               push hl
  87+ 8E63 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E65 DD 21 F0 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E69
  90+ 8E69              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E69              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E69
  93+ 8E69 3A EF 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E6C CB 77            bit 6,a
  95+ 8E6E 20 04            jr nz,19F
  96+ 8E70
  97+ 8E70 AF               xor a
  98+ 8E71 32 58 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E74
 100+ 8E74 3A D9 88     19 ld a,(Cuad_objeto)
 101+ 8E77 FE 02            cp 2
 102+ 8E79 38 66            jr c,3F
 103+ 8E7B 28 64            jr z,3F
 104+ 8E7D
 105+ 8E7D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E7D
 107+ 8E7D E6 01            and 1
 108+ 8E7F 28 30            jr z,4F
 109+ 8E81
 110+ 8E81              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E81              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E81              ;
 113+ 8E81              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E81              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E81              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E81
 117+ 8E81 2A C7 88     	ld hl,(Posicion_actual)
 118+ 8E84
 119+ 8E84              ;   Amadeus o entidad ???.
 120+ 8E84
 121+ 8E84 3A EF 88         ld a,(Ctrl_0)
 122+ 8E87 CB 77            bit 6,a
 123+ 8E89 28 0A            jr z,8F
 124+ 8E8B
 125+ 8E8B              ; 	Dispara Amadeus.
 126+ 8E8B
 127+ 8E8B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E8D CD 19 96         call PreviousScan
 129+ 8E90 CD 19 96         call PreviousScan
 130+ 8E93
 131+ 8E93              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E93              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E93              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E93              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E93
 136+ 8E93 18 11            jr 10F
 137+ 8E95
 138+ 8E95              ; 	Dispara Entidad.
 139+ 8E95
 140+ 8E95 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E98              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E98
 143+ 8E98              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E98              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E98
 146+ 8E98 C5               push bc
 147+ 8E99 06 10            ld b,16
 148+ 8E9B CD 0A 96     9 call NextScan
 149+ 8E9E 10 FB            djnz 9B
 150+ 8EA0 C1               pop bc
 151+ 8EA1 CD 0B 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EA4 18 06            jr 17F
 153+ 8EA6
 154+ 8EA6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EA6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EA6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EA6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EA6
 159+ 8EA6 CD 0B 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EA9 CD 80 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EAC              ;                                                      ; _al generar el disparo.
 162+ 8EAC
 163+ 8EAC              ; 	LLegados a este punto tendremos:
 164+ 8EAC              ;
 165+ 8EAC              ;       Puntero_objeto_disparo en IY.
 166+ 8EAC              ;       Rutinas_de_impresion en IX.
 167+ 8EAC              ;       Puntero_de_impresion en HL.
 168+ 8EAC              ;       Impacto/Dirección en BC.
 169+ 8EAC
 170+ 8EAC CD 13 8F     17 call Almacena_disparo
 171+ 8EAF 18 52            jr 6F                                             ; RET.
 172+ 8EB1
 173+ 8EB1              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EB1              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EB1              ;
 176+ 8EB1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EB1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EB1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EB1
 180+ 8EB1 2A C7 88     4 ld hl,(Posicion_actual)
 181+ 8EB4
 182+ 8EB4              ;   Amadeus o entidad ???.
 183+ 8EB4
 184+ 8EB4 3A EF 88         ld a,(Ctrl_0)
 185+ 8EB7 CB 77            bit 6,a
 186+ 8EB9 28 0A            jr z,11F
 187+ 8EBB
 188+ 8EBB              ; 	Dispara Amadeus.
 189+ 8EBB
 190+ 8EBB 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EBD CD 19 96         call PreviousScan
 192+ 8EC0 CD 19 96         call PreviousScan
 193+ 8EC3
 194+ 8EC3              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EC3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EC3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EC3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EC3
 199+ 8EC3 18 11            jr 13F
 200+ 8EC5
 201+ 8EC5              ; 	Dispara Entidad.
 202+ 8EC5
 203+ 8EC5 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EC8              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EC8
 206+ 8EC8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EC8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EC8
 209+ 8EC8 C5               push bc
 210+ 8EC9 06 10            ld b,16
 211+ 8ECB CD 0A 96     12 call NextScan
 212+ 8ECE 10 FB            djnz 12B
 213+ 8ED0 C1               pop bc
 214+ 8ED1
 215+ 8ED1 CD 04 8F         call Ajusta_disparo_parte_derecha
 216+ 8ED4 18 06            jr 18F
 217+ 8ED6
 218+ 8ED6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8ED6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8ED6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8ED6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8ED6
 223+ 8ED6 CD 04 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8ED9 CD 80 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EDC              ;                                                       ; _al generar el disparo.
 226+ 8EDC
 227+ 8EDC              ; LLegados a este punto tendremos:
 228+ 8EDC              ;
 229+ 8EDC              ;       Puntero_objeto_disparo en IY.
 230+ 8EDC              ;       Rutinas_de_impresion en IX.
 231+ 8EDC              ;       Puntero_de_impresion en HL.
 232+ 8EDC              ;       Impacto/Dirección en BC.
 233+ 8EDC
 234+ 8EDC CD 13 8F     18 call Almacena_disparo
 235+ 8EDF 18 22            jr 6F                                               ; RET.
 236+ 8EE1
 237+ 8EE1              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EE1
 239+ 8EE1 28 11        3 jr z,5F
 240+ 8EE3
 241+ 8EE3              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EE3              ;
 243+ 8EE3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EE3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EE3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EE3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EE3
 248+ 8EE3              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EE3              ;	   ""        ""       "f9", B="1"
 250+ 8EE3              ;	   ""        ""       "fb", B="2"
 251+ 8EE3              ; 	   ""        ""       "fb", B="3"
 252+ 8EE3
 253+ 8EE3 2A C7 88     	ld hl,(Posicion_actual)
 254+ 8EE6 CD 0A 96     	call NextScan
 255+ 8EE9
 256+ 8EE9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EE9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EE9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EE9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EE9
 261+ 8EE9 CD 0B 8F         call Ajusta_disparo_parte_izquierda
 262+ 8EEC
 263+ 8EEC              ; 	No se produce impacto. B="$80"
 264+ 8EEC              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8EEC
 266+ 8EEC 01 80 80         ld bc,$8080
 267+ 8EEF
 268+ 8EEF              ; 	LLegados a este punto tendremos:
 269+ 8EEF              ;
 270+ 8EEF              ;       Puntero_objeto_disparo en IY.
 271+ 8EEF              ;       Rutinas_de_impresion en IX.
 272+ 8EEF              ;       Puntero_de_impresion en HL.
 273+ 8EEF              ;       Impacto/Dirección en BC.
 274+ 8EEF
 275+ 8EEF CD 13 8F         call Almacena_disparo
 276+ 8EF2 18 0F            jr 6F                                           ; RET.
 277+ 8EF4
 278+ 8EF4              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8EF4              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8EF4              ;
 281+ 8EF4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8EF4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8EF4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8EF4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8EF4
 286+ 8EF4 2A C7 88     5 ld hl,(Posicion_actual)
 287+ 8EF7 CD 0A 96     	call NextScan
 288+ 8EFA
 289+ 8EFA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8EFA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8EFA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8EFA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8EFA
 294+ 8EFA CD 04 8F         call Ajusta_disparo_parte_derecha
 295+ 8EFD
 296+ 8EFD              ; 	No se produce impacto. B="$80"
 297+ 8EFD              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8EFD
 299+ 8EFD 01 80 80     15 ld bc,$8080
 300+ 8F00
 301+ 8F00              ; 	LLegados a este punto tendremos:
 302+ 8F00              ;
 303+ 8F00              ;       Puntero_objeto_disparo en IY.
 304+ 8F00              ;       Rutinas_de_impresion en IX.
 305+ 8F00              ;       Puntero_de_impresion en HL.
 306+ 8F00              ;       Impacto/Dirección en BC.
 307+ 8F00
 308+ 8F00 CD 13 8F         call Almacena_disparo
 309+ 8F03
 310+ 8F03 C9           6 ret
 311+ 8F04
 312+ 8F04              ; ----------------------------------------------------------------
 313+ 8F04              ;
 314+ 8F04              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F04              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F04              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F04
 318+ 8F04 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F05 FE 02            cp 2
 320+ 8F07 38 01            jr c,1F
 321+ 8F09 23               inc hl
 322+ 8F0A C9           1 ret
 323+ 8F0B
 324+ 8F0B 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F0C FE 01        	cp 1
 326+ 8F0E 20 01        	jr nz,1F
 327+ 8F10 2B           	dec hl
 328+ 8F11 2B           1 dec hl
 329+ 8F12 C9               ret
 330+ 8F13
 331+ 8F13              ; ----------------------------------------------------------------
 332+ 8F13              ;
 333+ 8F13              ;   25/02/23
 334+ 8F13              ;
 335+ 8F13              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F13              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F13              ;
 338+ 8F13              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F13              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F13
 341+ 8F13              Almacena_disparo
 342+ 8F13
 343+ 8F13 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F14 F1               pop af
 345+ 8F15 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F16
 347+ 8F16 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F17 E6 01            and 1
 349+ 8F19 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F1B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F1B              ; 	Dispara AMADEUS.
 352+ 8F1B
 353+ 8F1B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F1B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F1B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F1B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F1B
 358+ 8F1B C5               push bc
 359+ 8F1C 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F1F 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F22 A7               and a
 362+ 8F23 ED 42            sbc hl,bc
 363+ 8F25 CC 10 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F28 C1               pop bc
 365+ 8F29 28 54            jr z,4F
 366+ 8F2B
 367+ 8F2B 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F2E 23               inc hl
 369+ 8F2F 23               inc hl
 370+ 8F30 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F33              ;                                                   ; _ Disparo_(+1).
 372+ 8F33 18 18            jr 2F
 373+ 8F35
 374+ 8F35              ; Dispara una entidad.
 375+ 8F35
 376+ 8F35 C5           1 push bc
 377+ 8F36 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F39 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F3C A7               and a
 380+ 8F3D ED 42            sbc hl,bc
 381+ 8F3F CC 09 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F42 C1               pop bc
 383+ 8F43 28 3A            jr z,4F
 384+ 8F45
 385+ 8F45 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F48 23               inc hl
 387+ 8F49 23               inc hl
 388+ 8F4A 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F4D              ;                                                   ; _ Disparo_(+1).
 390+ 8F4D CD 8F 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F50              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F50              ;
 393+ 8F50              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F50              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F50              ;                                                     Puntero_de_impresion en HL.
 396+ 8F50              ;                                                     Impacto/Dirección en BC.
 397+ 8F50
 398+ 8F50 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F51 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F52 23               inc hl                                          ; _ al siguiente.
 401+ 8F53 A7               and a
 402+ 8F54 20 C0            jr nz,3B
 403+ 8F56
 404+ 8F56 08               ex af,af
 405+ 8F57 ED 73 13 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F5B F9               ld sp,hl
 407+ 8F5C
 408+ 8F5C DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F5E F5               push af                                         ; Puntero de impresión.
 410+ 8F5F FD E5            push iy                                         ; Puntero objeto.
 411+ 8F61 C5               push bc                                         ; Control.
 412+ 8F62
 413+ 8F62 ED 7B 13 89      ld sp,(Stack)
 414+ 8F66
 415+ 8F66              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F66
 417+ 8F66 21 02 89     	ld hl,Ctrl_1
 418+ 8F69 CB C6        	set 0,(hl)
 419+ 8F6B
 420+ 8F6B DD E5        	push ix
 421+ 8F6D E1               pop hl
 422+ 8F6E F5               push af
 423+ 8F6F DD E1            pop ix
 424+ 8F71
 425+ 8F71 CD A0 7F     	call Guarda_foto_registros
 426+ 8F74
 427+ 8F74 21 02 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F77 CB 86        	res 0,(hl)
 429+ 8F79
 430+ 8F79              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F79              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F79
 433+ 8F79 CD 10 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F7C CD 09 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8F7F
 436+ 8F7F C9           4 ret
 437+ 8F80
 438+ 8F80              ; ----------------------------------------------------------------
 439+ 8F80              ;
 440+ 8F80              ;   4/3/23
 441+ 8F80              ;
 442+ 8F80              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F80              ;   _ al generarse el disparo.
 444+ 8F80              ;
 445+ 8F80              ;       "$80" ..... No se produce colisión.
 446+ 8F80              ;       "$81" ..... Se produce colisión.
 447+ 8F80              ;
 448+ 8F80              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F80              ;         _ que forman el disparo.
 450+ 8F80
 451+ 8F80
 452+ 8F80              Comprueba_Colision
 453+ 8F80
 454+ 8F80              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F80
 456+ 8F80 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F82 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F83
 459+ 8F83 CD B9 8F         call Modifica_H_Velocidad_disparo
 460+ 8F86
 461+ 8F86 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F87 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F89 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F8B
 465+ 8F8B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F8D CD A9 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F90
 468+ 8F90 7B               ld a,e
 469+ 8F91 E6 01            and 1
 470+ 8F93 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F95              ;                                                  ; _ para activar IMPACTO.
 472+ 8F95 E1               pop hl
 473+ 8F96 E5               push hl
 474+ 8F97 CD 0A 96         call NextScan
 475+ 8F9A
 476+ 8F9A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F9B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F9D 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8F9F              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8F9F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FA1 CD A9 8F         call Bucle_2
 482+ 8FA4
 483+ 8FA4 43           1 ld b,e
 484+ 8FA5 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FA6 FD E1            pop iy
 486+ 8FA8 C9               ret
 487+ 8FA9
 488+ 8FA9              ; ---------- ----------
 489+ 8FA9
 490+ 8FA9 06 02        Bucle_2 ld b,2
 491+ 8FAB FD 7E 00     2 ld a,(iy)
 492+ 8FAE A6               and (hl)
 493+ 8FAF 28 02            jr z,1F
 494+ 8FB1 1E 81            ld e,$81
 495+ 8FB3 23           1 inc hl
 496+ 8FB4 FD 23            inc iy
 497+ 8FB6 10 F3            djnz 2B
 498+ 8FB8 C9               ret
 499+ 8FB9
 500+ 8FB9              ; ---------- ----------
 501+ 8FB9              ;
 502+ 8FB9              ;   21/7/23
 503+ 8FB9
 504+ 8FB9              Modifica_H_Velocidad_disparo
 505+ 8FB9
 506+ 8FB9 3A 4F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FBC FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FBE D0               ret nc                                         ; _ incrementamos H.
 509+ 8FBF 24               inc h
 510+ 8FC0
 511+ 8FC0 C9               ret
 512+ 8FC1
 513+ 8FC1              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FC1              ;
 515+ 8FC1              ;   11/04/23
 516+ 8FC1              ;
 517+ 8FC1              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FC1              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FC1              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FC1              ;
 521+ 8FC1              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FC1
 523+ 8FC1              Compara_coordenadas_X
 524+ 8FC1
 525+ 8FC1              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FC1              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FC1
 528+ 8FC1              ; Preparamos registros:
 529+ 8FC1
 530+ 8FC1 21 CB 88         ld hl,Filas+6
 531+ 8FC4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FC5 23               inc hl
 533+ 8FC6 23               inc hl
 534+ 8FC7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FC8 43               ld b,e
 536+ 8FC9
 537+ 8FC9 21 D9 88         ld hl,Filas+20
 538+ 8FCC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FCD 21 4A 89         ld hl,Coordenadas_X_Entidad
 540+ 8FD0 CD EC 91         call Guarda_coordenadas_X
 541+ 8FD3
 542+ 8FD3              ; Preparamos registros:
 543+ 8FD3
 544+ 8FD3 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FD6 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FD7 23               inc hl
 547+ 8FD8 23               inc hl
 548+ 8FD9 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FDA 7B               ld a,e
 550+ 8FDB 08               ex af,af'
 551+ 8FDC 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FDF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FE0 21 47 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FE3 CD EC 91         call Guarda_coordenadas_X
 555+ 8FE6
 556+ 8FE6              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8FE6              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8FE6
 559+ 8FE6 04               inc b
 560+ 8FE7 05               dec b
 561+ 8FE8 28 04            jr z,1F
 562+ 8FEA 06 03            ld b,3
 563+ 8FEC 18 02            jr 2F
 564+ 8FEE 06 02        1 ld b,2
 565+ 8FF0 08           2 ex af,af'
 566+ 8FF1 3C               inc a
 567+ 8FF2 3D               dec a
 568+ 8FF3 28 04            jr z,5F
 569+ 8FF5 0E 03            ld c,3
 570+ 8FF7 18 02            jr 6F
 571+ 8FF9 0E 02        5 ld c,2
 572+ 8FFB 79           6 ld a,c
 573+ 8FFC 08               ex af,af'
 574+ 8FFD 11 4A 89         ld de,Coordenadas_X_Entidad
 575+ 9000 1A           4 ld a,(de)
 576+ 9001 21 47 89         ld hl,Coordenadas_X_Amadeus
 577+ 9004 BE           3 cp (hl)
 578+ 9005 28 0E            jr z,7F
 579+ 9007 23               inc hl
 580+ 9008 0D               dec c
 581+ 9009 20 F9            jr nz,3B
 582+ 900B 13               inc de
 583+ 900C 08               ex af,af'
 584+ 900D 4F               ld c,a
 585+ 900E 08               ex af,af'
 586+ 900F 10 EF            djnz 4B
 587+ 9011
 588+ 9011              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9011
 590+ 9011 CD 28 92     8 call Limpia_Coordenadas_X
 591+ 9014 C9               ret
 592+ 9015
 593+ 9015 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9017 32 DE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 901A 21 42 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 901D CB D6            set 2,(hl)
 597+ 901F 18 F0            jr 8B
 598+ 9021
 599+ 9021              ; -----------------------------------------------------------------------
 600+ 9021              ;
 601+ 9021              ;   17/04/23
 602+ 9021              ;
 603+ 9021
 604+ 9021              Detecta_colision_nave_entidad
 605+ 9021
 606+ 9021              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9021
 608+ 9021 2A C7 88         ld hl,(Posicion_actual)
 609+ 9024 CD 65 95         call Calcula_puntero_de_impresion
 610+ 9027
 611+ 9027              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9027              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9027
 614+ 9027 DD E5            push ix
 615+ 9029 E1               pop hl
 616+ 902A E5               push hl
 617+ 902B
 618+ 902B              ; ----- ----- -----
 619+ 902B 1E 00            ld e,0                                         ; Indica impacto.
 620+ 902D 06 0A            ld b,10
 621+ 902F CD 5F 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9032 7B               ld a,e
 623+ 9033 FE 05            cp 5
 624+ 9035 38 0E            jr c,3F
 625+ 9037
 626+ 9037              ; LLegados a este punto:
 627+ 9037              ;
 628+ 9037              ;   HAY COLISIÓN !!!!!.
 629+ 9037              ;
 630+ 9037              ;   .db (Impacto) de Amadeus a "1".
 631+ 9037              ;   SET el bit3 de (Impacto2).
 632+ 9037              ;
 633+ 9037              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9037
 635+ 9037 21 B7 85         ld hl,Amadeus_db+25
 636+ 903A 36 01            ld (hl),1
 637+ 903C 21 42 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 903F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9041 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9043 18 18            jr 1F
 641+ 9045
 642+ 9045              ; -----
 643+ 9045
 644+ 9045 E1           3 pop hl
 645+ 9046 CD 0A 96         call NextScan
 646+ 9049 E5               push hl
 647+ 904A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 904B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 904D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 904F 30 0C            jr nc,1F
 651+ 9051              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9051 10 DC            djnz 2B
 653+ 9053
 654+ 9053              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9053
 656+ 9053              ; LLegados a este punto:
 657+ 9053              ;
 658+ 9053              ;   NO HAY COLISIÓN !!!!!.
 659+ 9053              ;
 660+ 9053              ;   .db (Impacto) de Amadeus a "0".
 661+ 9053              ;   RES el bit2 de (Impacto2).
 662+ 9053              ;
 663+ 9053              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9053              ;   Lo colocamos a "0".
 665+ 9053
 666+ 9053 21 42 89         ld hl,Impacto2
 667+ 9056 CB 96            res 2,(hl)
 668+ 9058 2A 43 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 905B 36 00            ld (hl),0
 670+ 905D
 671+ 905D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 905E C9               ret
 673+ 905F
 674+ 905F               ; ---------- ----------
 675+ 905F
 676+ 905F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9060 3A C6 88         ld a,(Columns)
 678+ 9063 47               ld b,a
 679+ 9064 FD 7E 00     2 ld a,(iy)
 680+ 9067 BE               cp (hl)
 681+ 9068 28 01            jr z,1F
 682+ 906A
 683+ 906A 1C               inc e
 684+ 906B
 685+ 906B 23           1 inc hl
 686+ 906C FD 23            inc iy
 687+ 906E 10 F4            djnz 2B
 688+ 9070 C1               pop bc
 689+ 9071 C9               ret
 690+ 9072
 691+ 9072              ; -------------------------------------------------------------------------------------------------------------
 692+ 9072              ;
 693+ 9072              ;   13/03/23
 694+ 9072              ;
 695+ 9072              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9072              ;
 697+ 9072              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9072
 699+ 9072 21 58 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9075 7E               ld a,(hl)
 701+ 9076 A7               and a
 702+ 9077 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9078
 704+ 9078 44               ld b,h
 705+ 9079 4D               ld c,l
 706+ 907A 2A 1B 89         ld hl,(Stack_snapshot_disparos)
 707+ 907D E5               push hl
 708+ 907E A7               and a
 709+ 907F ED 42            sbc hl,bc
 710+ 9081 E5               push hl
 711+ 9082 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9083
 713+ 9083 E1               pop hl
 714+ 9084 54               ld d,h
 715+ 9085 5D               ld e,l
 716+ 9086 1B               dec de
 717+ 9087 ED B8            lddr                                                ; Limpiamos.
 718+ 9089
 719+ 9089 21 58 71         ld hl,Album_de_fotos_disparos
 720+ 908C 22 1B 89         ld (Stack_snapshot_disparos),hl
 721+ 908F
 722+ 908F C9               ret
 723+ 9090
 724+ 9090              ; -------------------------------------------------------------------------------------------------------------
 725+ 9090              ;
 726+ 9090              ;   18/07/23
 727+ 9090              ;
 728+ 9090
 729+ 9090              Motor_de_disparos
 730+ 9090
 731+ 9090              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9090
 733+ 9090 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9093 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9096
 736+ 9096 CD 8F 8C     2 call Extrae_address
 737+ 9099 7E               ld a,(hl)
 738+ 909A A7               and a
 739+ 909B 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 909D
 741+ 909D              ; ----- ----- ----- ----- ----- -----
 742+ 909D
 743+ 909D C5               push bc
 744+ 909E CD 62 91         call foto_disparo_a_borrar
 745+ 90A1
 746+ 90A1              ; Existe colisión con este disparo???
 747+ 90A1
 748+ 90A1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90A2 7E               ld a,(hl)
 750+ 90A3 2B               dec hl
 751+ 90A4 E6 01            and 1
 752+ 90A6 28 1D            jr z,9F
 753+ 90A8
 754+ 90A8              ;   En este punto:
 755+ 90A8              ;
 756+ 90A8              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90A8              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90A8              ;   _con la entidad).
 759+ 90A8              ;
 760+ 90A8              ;   Disparo_2A defw 0                                ; Control.
 761+ 90A8              ;    defw 0                                          ; Puntero objeto.
 762+ 90A8              ;    defw 0                                          ; Puntero de impresión.
 763+ 90A8              ;    defw 0                                          ; Rutina de impresión.
 764+ 90A8
 765+ 90A8 E5               push hl
 766+ 90A9
 767+ 90A9 06 04            ld b,4
 768+ 90AB 23           19 inc hl
 769+ 90AC 10 FD            djnz 19B
 770+ 90AE
 771+ 90AE CD 8F 8C         call Extrae_address
 772+ 90B1 CD D3 9C         call Genera_coordenadas_disparo
 773+ 90B4
 774+ 90B4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90B4
 776+ 90B4 21 45 89         ld hl,Coordenadas_disparo_certero
 777+ 90B7 72               ld (hl),d
 778+ 90B8 23               inc hl
 779+ 90B9 73               ld (hl),e
 780+ 90BA
 781+ 90BA              ; Elimino el disparo de la base de datos.
 782+ 90BA
 783+ 90BA E1               pop hl
 784+ 90BB CD E1 91         call Elimina_disparo_de_base_de_datos
 785+ 90BE 21 42 89         ld hl,Impacto2
 786+ 90C1 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90C3
 788+ 90C3 18 06            jr 11F
 789+ 90C5
 790+ 90C5 CD 8B 91     9 call Mueve_disparo
 791+ 90C8 CD 62 91         call foto_disparo_a_borrar
 792+ 90CB
 793+ 90CB C1           11 pop bc
 794+ 90CC 18 04            jr 7F
 795+ 90CE
 796+ 90CE              ; ----- ----- ----- ----- ----- -----
 797+ 90CE
 798+ 90CE ED 42        1 sbc hl,bc
 799+ 90D0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90D2
 801+ 90D2 2A 40 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90D5 23               inc hl
 803+ 90D6 23               inc hl
 804+ 90D7 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90DA 18 BA            jr 2B
 806+ 90DC
 807+ 90DC CD 10 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90DF              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90DF
 810+ 90DF              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90DF
 812+ 90DF 01 8A 85         ld bc,Disparo_11
 813+ 90E2 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 90E5
 815+ 90E5 CD 8F 8C     5 call Extrae_address
 816+ 90E8 7E               ld a,(hl)
 817+ 90E9 A7               and a
 818+ 90EA 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 90EC
 820+ 90EC              ; ----- ----- ----- ----- ----- -----
 821+ 90EC
 822+ 90EC C5               push bc
 823+ 90ED CD 62 91         call foto_disparo_a_borrar
 824+ 90F0
 825+ 90F0              ; Existe colisión con este disparo???
 826+ 90F0
 827+ 90F0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 90F1 7E               ld a,(hl)
 829+ 90F2 2B               dec hl
 830+ 90F3 E6 01            and 1
 831+ 90F5 28 4D            jr z,10F
 832+ 90F7
 833+ 90F7              ;! La colisión se produce con Amadeus???
 834+ 90F7              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 90F7
 836+ 90F7 E5               push hl
 837+ 90F8
 838+ 90F8 06 04            ld b,4
 839+ 90FA 23           16 inc hl
 840+ 90FB 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 90FD
 842+ 90FD CD 8F 8C         call Extrae_address
 843+ 9100 CD D3 9C         call Genera_coordenadas_disparo
 844+ 9103
 845+ 9103 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9104 FE 16            cp $16
 847+ 9106 38 2A            jr c,15F
 848+ 9108
 849+ 9108
 850+ 9108              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9108
 852+ 9108 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9109
 854+ 9109              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9109
 856+ 9109
 857+ 9109 2A 4D 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 910C
 859+ 910C              ; Coordenada X de Amadeus en D.
 860+ 910C
 861+ 910C 7D               ld a,l
 862+ 910D E6 1F            and $1F
 863+ 910F 57               ld d,a
 864+ 9110
 865+ 9110 21 A6 85         ld hl,Amadeus_db+8
 866+ 9113 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9114
 868+ 9114 21 47 89         ld hl,Coordenadas_X_Amadeus
 869+ 9117 CD EC 91         call Guarda_coordenadas_X
 870+ 911A
 871+ 911A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 911B
 873+ 911B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 911B
 875+ 911B 06 02            ld b,2
 876+ 911D C5           20 push bc
 877+ 911E
 878+ 911E 06 03            ld b,3
 879+ 9120 21 47 89         ld hl,Coordenadas_X_Amadeus
 880+ 9123 7E           18 ld a,(hl)
 881+ 9124 BA               cp d
 882+ 9125 20 04            jr nz,17F
 883+ 9127
 884+ 9127              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9127
 886+ 9127 C1               pop bc
 887+ 9128 E1               pop hl
 888+ 9129 18 0D            jr 14F
 889+ 912B
 890+ 912B 23           17 inc hl
 891+ 912C 10 F5            djnz 18B
 892+ 912E
 893+ 912E 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 912F
 895+ 912F C1               pop bc
 896+ 9130 10 EB            djnz 20B
 897+ 9132
 898+ 9132
 899+ 9132              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9132              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9132
 902+ 9132 E1           15 pop hl
 903+ 9133 23               inc hl
 904+ 9134 35               dec (hl)
 905+ 9135 2B               dec hl
 906+ 9136 18 0C            jr 10F
 907+ 9138
 908+ 9138              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9138              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9138
 911+ 9138 E5           14 push hl
 912+ 9139 CD E1 91         call Elimina_disparo_de_base_de_datos
 913+ 913C 21 42 89         ld hl,Impacto2
 914+ 913F CB CE            set 1,(hl)
 915+ 9141 E1               pop hl
 916+ 9142 18 06            jr 12F
 917+ 9144
 918+ 9144              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9144
 920+ 9144 CD 8B 91     10 call Mueve_disparo
 921+ 9147 CD 62 91         call foto_disparo_a_borrar
 922+ 914A C1           12 pop bc
 923+ 914B
 924+ 914B 18 04            jr 8F
 925+ 914D
 926+ 914D              ; ----- ----- ----- ----- ----- -----
 927+ 914D
 928+ 914D ED 42        4 sbc hl,bc
 929+ 914F 28 0A            jr z,6F
 930+ 9151
 931+ 9151 2A 3E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9154 23               inc hl
 933+ 9155 23               inc hl
 934+ 9156 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9159 18 8A            jr 5B
 936+ 915B
 937+ 915B CD 09 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 915E CD 28 92         call Limpia_Coordenadas_X
 939+ 9161 C9               ret
 940+ 9162
 941+ 9162              ; ------------------------------------------------------------------
 942+ 9162
 943+ 9162              foto_disparo_a_borrar
 944+ 9162
 945+ 9162 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9163 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9164 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9165
 949+ 9165 E5               push hl
 950+ 9166 23               inc hl
 951+ 9167 23               inc hl
 952+ 9168 ED 73 13 89      ld (Stack),sp
 953+ 916C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 916D FD E1            pop iy
 955+ 916F DD E1            pop ix
 956+ 9171 E1               pop hl
 957+ 9172 ED 7B 13 89      ld sp,(Stack)
 958+ 9176 3A 02 89         ld a,(Ctrl_1)
 959+ 9179 CB C7            set 0,a
 960+ 917B 32 02 89         ld (Ctrl_1),a
 961+ 917E CD A0 7F         call Guarda_foto_registros
 962+ 9181 3A 02 89         ld a,(Ctrl_1)
 963+ 9184 CB 87            res 0,a
 964+ 9186 32 02 89         ld (Ctrl_1),a
 965+ 9189 E1               pop hl
 966+ 918A C9               ret
 967+ 918B
 968+ 918B              ;---------------------------------------------------
 969+ 918B              ;
 970+ 918B              ;   18/07/23
 971+ 918B              ;
 972+ 918B
 973+ 918B              Mueve_disparo
 974+ 918B
 975+ 918B              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 918B              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 918B              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 918B
 979+ 918B E5               push hl
 980+ 918C
 981+ 918C 7E               ld a,(hl)
 982+ 918D
 983+ 918D 06 04            ld b,4
 984+ 918F 23           1 inc hl
 985+ 9190 10 FD            djnz 1B
 986+ 9192
 987+ 9192              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9192
 989+ 9192 CD 8F 8C         call Extrae_address
 990+ 9195
 991+ 9195 E6 01            and 1
 992+ 9197 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9199
 994+ 9199              ; Disparo hacia arriba, (Amadeus).
 995+ 9199
 996+ 9199              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9199              ; _ de la dificultad.
 998+ 9199
 999+ 9199 CD 19 96         call PreviousScan
1000+ 919C CD 19 96         call PreviousScan
1001+ 919F CD 19 96         call PreviousScan
1002+ 91A2 CD 19 96         call PreviousScan
1003+ 91A5
1004+ 91A5              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91A5
1006+ 91A5 7C               ld a,h
1007+ 91A6 FE 40            cp $40
1008+ 91A8 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91AA
1010+ 91AA              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91AA
1012+ 91AA EB               ex de,hl
1013+ 91AB 06 04            ld b,4
1014+ 91AD 2B           6 dec hl
1015+ 91AE 10 FD            djnz 6B
1016+ 91B0
1017+ 91B0 CD E1 91         call Elimina_disparo_de_base_de_datos
1018+ 91B3 E1               pop hl
1019+ 91B4 18 10            jr 7F
1020+ 91B6
1021+ 91B6              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91B6              ; HL contiene el puntero de impresión del disparo.
1023+ 91B6              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91B6
1025+ 91B6 D5           3 push de
1026+ 91B7 C5               push bc
1027+ 91B8
1028+ 91B8 CD 80 8F         call Comprueba_Colision
1029+ 91BB
1030+ 91BB              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91BB
1032+ 91BB 78               ld a,b
1033+ 91BC
1034+ 91BC C1               pop bc
1035+ 91BD D1               pop de
1036+ 91BE
1037+ 91BE EB               ex de,hl
1038+ 91BF
1039+ 91BF 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91C0 23               inc hl                                      ; _ movimiento.
1041+ 91C1 72               ld (hl),d
1042+ 91C2
1043+ 91C2 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91C3
1045+ 91C3 23               inc hl                                      ; _ en curso.
1046+ 91C4 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91C5 2B               dec hl
1048+ 91C6
1049+ 91C6 C9           7 ret
1050+ 91C7
1051+ 91C7              ; Disparo hacia abajo, (Entidad).
1052+ 91C7
1053+ 91C7 3A 4F 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91CA 47               ld b,a
1055+ 91CB
1056+ 91CB CD 0A 96     4 call NextScan
1057+ 91CE 10 FB            djnz 4B
1058+ 91D0
1059+ 91D0              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91D0
1061+ 91D0 7C               ld a,h
1062+ 91D1 FE 58            cp $58
1063+ 91D3 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91D5
1065+ 91D5 EB               ex de,hl
1066+ 91D6 06 04            ld b,4
1067+ 91D8 2B           5 dec hl
1068+ 91D9 10 FD            djnz 5B
1069+ 91DB
1070+ 91DB CD E1 91         call Elimina_disparo_de_base_de_datos
1071+ 91DE E1               pop hl
1072+ 91DF 18 E5            jr 7B
1073+ 91E1
1074+ 91E1              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91E1
1076+ 91E1 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91E4 AF               xor a
1078+ 91E5 77               ld (hl),a
1079+ 91E6 54               ld d,h
1080+ 91E7 5D               ld e,l
1081+ 91E8 13               inc de
1082+ 91E9 ED B0            ldir
1083+ 91EB C9               ret
1084+ 91EC
1085+ 91EC              ; -----------------------------------------------------------------
1086+ 91EC              ;
1087+ 91EC              ;   19/7/23
1088+ 91EC              ;
1089+ 91EC              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 91EC              ;
1091+ 91EC              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 91EC              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 91EC              ;
1094+ 91EC              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 91EC              ;
1096+ 91EC              ;   INPUTS:
1097+ 91EC              ;
1098+ 91EC              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 91EC              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 91EC
1101+ 91EC              ;   MODIFICA: A, HL, BC y DE.
1102+ 91EC
1103+ 91EC              Guarda_coordenadas_X
1104+ 91EC
1105+ 91EC 7B               ld a,e
1106+ 91ED A7               and a
1107+ 91EE 20 04            jr nz,1F
1108+ 91F0
1109+ 91F0 06 02            ld b,2
1110+ 91F2 18 02            jr 2F
1111+ 91F4
1112+ 91F4 06 03        1 ld b,3
1113+ 91F6 72           2 ld (hl),d
1114+ 91F7 23               inc hl
1115+ 91F8 14               inc d
1116+ 91F9 10 FB            djnz 2B
1117+ 91FB
1118+ 91FB C9               ret
1119+ 91FC
1120+ 91FC              ; -----------------------------------------------------------------
1121+ 91FC              ;
1122+ 91FC              ;   12/04/23
1123+ 91FC              ;
1124+ 91FC
1125+ 91FC 3A 42 89     Selector_de_impactos ld a,(Impacto2)
1126+ 91FF A7               and a
1127+ 9200 C8               ret z
1128+ 9201
1129+ 9201 FE 04            cp 4
1130+ 9203 20 09            jr nz,1F
1131+ 9205
1132+ 9205
1133+ 9205              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9205
1135+ 9205 CD 21 90         call Detecta_colision_nave_entidad
1136+ 9208
1137+ 9208 21 42 89         ld hl,Impacto2
1138+ 920B CB 5E            bit 3,(hl)
1139+ 920D C0               ret nz                                               ; Existe colisión, RET.
1140+ 920E
1141+ 920E              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 920E              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 920E
1144+ 920E 21 42 89     1 ld hl,Impacto2
1145+ 9211 CB 4E            bit 1,(hl)
1146+ 9213 28 07            jr z,2F
1147+ 9215
1148+ 9215 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9218 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 921A 18 0B            jr 3F
1151+ 921C
1152+ 921C 21 42 89     2 ld hl,Impacto2
1153+ 921F CB 46            bit 0,(hl)
1154+ 9221 C8               ret z
1155+ 9222
1156+ 9222              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9222
1158+ 9222 21 02 89         ld hl,Ctrl_1
1159+ 9225 CB D6            set 2,(hl)
1160+ 9227
1161+ 9227 C9           3 ret
1162+ 9228
1163+ 9228              ; -----------------------------------------------------------------
1164+ 9228              ;
1165+ 9228              ;   19/7/23
1166+ 9228              ;
1167+ 9228              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9228
1169+ 9228 AF           Limpia_Coordenadas_X xor a
1170+ 9229 06 06            ld b,6
1171+ 922B 21 47 89         ld hl,Coordenadas_X_Amadeus
1172+ 922E 77           1 ld (hl),a
1173+ 922F 23               inc hl
1174+ 9230 10 FC            djnz 1B
1175+ 9232 C9               ret
1176+ 9233
1177+ 9233              ; -----------------------------------------------------------------
1178+ 9233              ;
1179+ 9233              ;   25/04/23
1180+ 9233              ;
1181+ 9233
1182+ 9233              Determina_resultado_comparativa
1183+ 9233
1184+ 9233              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9233              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9233              ;
1187+ 9233              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9233              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9233              ;
1190+ 9233              ;   SBC HL,DE
1191+ 9233
1192+ 9233              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9233              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9233
1195+ 9233              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9233              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9233
1198+ 9233
1199+ 9233 3A D9 88         ld a,(Cuad_objeto)
1200+ 9236 FE 02            cp 2
1201+ 9238 28 26            jr z,2F
1202+ 923A 38 24            jr c,2F
1203+ 923C
1204+ 923C              ; Cuadrantes 3º y 4º
1205+ 923C
1206+ 923C E6 01            and 1
1207+ 923E 28 10            jr z,4F
1208+ 9240
1209+ 9240              ; Cuadrante 3º
1210+ 9240
1211+ 9240 7C               ld a,h
1212+ 9241 06 00            ld b,0
1213+ 9243
1214+ 9243 CD CE 92         call Compara_cositas_H3
1215+ 9246
1216+ 9246 04               inc b
1217+ 9247 05               dec b
1218+ 9248 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9249
1220+ 9249 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 924A 06 00            ld b,0
1222+ 924C
1223+ 924C CD E0 92         call Compara_cositas_L3
1224+ 924F C9               ret
1225+ 9250
1226+ 9250              ; Cuadrante 4º
1227+ 9250
1228+ 9250 7C           4 ld a,h
1229+ 9251 06 00            ld b,0
1230+ 9253
1231+ 9253 CD F2 92         call Compara_cositas_H4
1232+ 9256
1233+ 9256 04               inc b
1234+ 9257 05               dec b
1235+ 9258 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9259
1237+ 9259 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 925A 06 00            ld b,0
1239+ 925C
1240+ 925C CD 08 93         call Compara_cositas_L4
1241+ 925F C9               ret
1242+ 9260
1243+ 9260              ; Cuadrantes 1º y 2º.
1244+ 9260
1245+ 9260 28 10        2 jr z,3F
1246+ 9262
1247+ 9262              ; 1er Cuadrante
1248+ 9262
1249+ 9262 7C               ld a,h
1250+ 9263 06 00            ld b,0
1251+ 9265
1252+ 9265 CD A6 92         call Compara_cositas_H1
1253+ 9268
1254+ 9268 04               inc b
1255+ 9269 05               dec b
1256+ 926A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 926B
1258+ 926B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 926C 06 00            ld b,0
1260+ 926E
1261+ 926E CD BC 92         call Compara_cositas_L1
1262+ 9271 C9               ret
1263+ 9272
1264+ 9272
1265+ 9272              ; 2º Cuadrante
1266+ 9272
1267+ 9272 7C           3 ld a,h
1268+ 9273 06 00            ld b,0
1269+ 9275
1270+ 9275 CD 82 92         call Compara_cositas_H2
1271+ 9278
1272+ 9278 04               inc b
1273+ 9279 05               dec b
1274+ 927A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 927B
1276+ 927B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 927C 06 00            ld b,0
1278+ 927E
1279+ 927E CD 94 92         call Compara_cositas_L2
1280+ 9281 C9               ret
1281+ 9282
1282+ 9282 A7           Compara_cositas_H2 and a
1283+ 9283 28 0D            jr z,1F
1284+ 9285              ;    cp $fd
1285+ 9285              ;    jr z,1F
1286+ 9285              ;    cp $fe
1287+ 9285              ;    jr z,1F
1288+ 9285 FE FF            cp $ff
1289+ 9287 28 09            jr z,1F
1290+ 9289 FE 01            cp $01
1291+ 928B 28 05            jr z,1F
1292+ 928D FE 02            cp $02
1293+ 928F 28 01            jr z,1F
1294+ 9291 C0               ret nz
1295+ 9292 04           1 inc b
1296+ 9293 C9               ret
1297+ 9294
1298+ 9294 A7           Compara_cositas_L2 and a
1299+ 9295 28 0D            jr z,1F
1300+ 9297              ;    cp $fd
1301+ 9297              ;    jr z,1F
1302+ 9297 FE FE            cp $fe
1303+ 9299 28 09            jr z,1F
1304+ 929B FE FF            cp $ff
1305+ 929D 28 05            jr z,1F
1306+ 929F FE 01            cp $01
1307+ 92A1 28 01            jr z,1F
1308+ 92A3              ;    cp $02
1309+ 92A3              ;    jr z,1F
1310+ 92A3 C0               ret nz
1311+ 92A4 04           1 inc b
1312+ 92A5 C9               ret
1313+ 92A6
1314+ 92A6 A7           Compara_cositas_H1 and a
1315+ 92A7 28 11            jr z,1F
1316+ 92A9              ;    cp $fd
1317+ 92A9              ;    jr z,1F
1318+ 92A9              ;    cp $fe
1319+ 92A9              ;    jr z,1F
1320+ 92A9 FE FF            cp $ff
1321+ 92AB 28 0D            jr z,1F
1322+ 92AD FE 01            cp $01
1323+ 92AF 28 09            jr z,1F
1324+ 92B1 FE 02            cp $02
1325+ 92B3 28 05            jr z,1F
1326+ 92B5 FE 03            cp $03
1327+ 92B7 28 01            jr z,1F
1328+ 92B9 C0               ret nz
1329+ 92BA 04           1 inc b
1330+ 92BB C9               ret
1331+ 92BC
1332+ 92BC A7           Compara_cositas_L1 and a
1333+ 92BD 28 0D            jr z,1F
1334+ 92BF              ;    cp $fd
1335+ 92BF              ;    jr z,1F
1336+ 92BF              ;    cp $fe
1337+ 92BF              ;    jr z,1F
1338+ 92BF              ;    cp $ff
1339+ 92BF              ;    jr z,1F
1340+ 92BF FE 01            cp $01
1341+ 92C1 28 09            jr z,1F
1342+ 92C3 FE 02            cp $02
1343+ 92C5 28 05            jr z,1F
1344+ 92C7 FE 03            cp $03
1345+ 92C9 28 01            jr z,1F
1346+ 92CB C0               ret nz
1347+ 92CC 04           1 inc b
1348+ 92CD C9               ret
1349+ 92CE
1350+ 92CE A7           Compara_cositas_H3 and a
1351+ 92CF 28 0D            jr z,1F
1352+ 92D1              ;    cp $fd
1353+ 92D1              ;    jr z,1F
1354+ 92D1 FE FE            cp $fe
1355+ 92D3 28 09            jr z,1F
1356+ 92D5 FE FF            cp $ff
1357+ 92D7 28 05            jr z,1F
1358+ 92D9 FE 01            cp $01
1359+ 92DB 28 01            jr z,1F
1360+ 92DD              ;    cp $02
1361+ 92DD              ;    jr z,1F
1362+ 92DD              ;    cp $03
1363+ 92DD              ;    jr z,1F
1364+ 92DD C0               ret nz
1365+ 92DE 04           1 inc b
1366+ 92DF C9               ret
1367+ 92E0
1368+ 92E0 A7           Compara_cositas_L3 and a
1369+ 92E1 28 0D            jr z,1F
1370+ 92E3              ;    cp $fd
1371+ 92E3              ;    jr z,1F
1372+ 92E3              ;    cp $fe
1373+ 92E3              ;    jr z,1F
1374+ 92E3              ;    cp $ff
1375+ 92E3              ;    jr z,1F
1376+ 92E3 FE 01            cp $01
1377+ 92E5 28 09            jr z,1F
1378+ 92E7 FE 02            cp $02
1379+ 92E9 28 05            jr z,1F
1380+ 92EB FE 03            cp $03
1381+ 92ED 28 01            jr z,1F
1382+ 92EF C0               ret nz
1383+ 92F0 04           1 inc b
1384+ 92F1 C9               ret
1385+ 92F2
1386+ 92F2 A7           Compara_cositas_H4 and a
1387+ 92F3 28 11            jr z,1F
1388+ 92F5 FE FD            cp $fd
1389+ 92F7 28 0D            jr z,1F
1390+ 92F9 FE FE            cp $fe
1391+ 92FB 28 09            jr z,1F
1392+ 92FD FE FF            cp $ff
1393+ 92FF 28 05            jr z,1F
1394+ 9301 FE 01            cp $01
1395+ 9303 28 01            jr z,1F
1396+ 9305              ;    cp $02
1397+ 9305              ;    jr z,1F
1398+ 9305              ;    cp $03
1399+ 9305              ;    jr z,1F
1400+ 9305 C0               ret nz
1401+ 9306 04           1 inc b
1402+ 9307 C9               ret
1403+ 9308
1404+ 9308 A7           Compara_cositas_L4 and a
1405+ 9309 28 0D            jr z,1F
1406+ 930B              ;    cp $fd
1407+ 930B              ;    jr z,1F
1408+ 930B FE FE            cp $fe
1409+ 930D 28 09            jr z,1F
1410+ 930F FE FF            cp $ff
1411+ 9311 28 05            jr z,1F
1412+ 9313 FE 01            cp $01
1413+ 9315 28 01            jr z,1F
1414+ 9317              ;    cp $02
1415+ 9317              ;    jr z,1F
1416+ 9317              ;    cp $03
1417+ 9317              ;    jr z,1F
1418+ 9317 C0               ret nz
1419+ 9318 04           1 inc b
1420+ 9319 C9               ret
# file closed: Disparo.asm
1665  931A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 931A              ; ******************************************************************************************************************************************************************************************
   2+ 931A              ;
   3+ 931A              ; 26/06/23
   4+ 931A              ;
   5+ 931A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 931A
   7+ 931A CD FE 95     Draw call Prepara_draw
   8+ 931D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 931E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 931F 28 05        	jr z,2F
  11+ 9321
  12+ 9321 3A D9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9324 18 0C        	jr 1F
  14+ 9326
  15+ 9326 2A D7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9329 22 C7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 932C CD BB 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 932F              ;													; _la esquina superior izquierda de la pantalla.
  19+ 932F CD 5E 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9332
  21+ 9332 3A EF 88     1 ld a,(Ctrl_0)
  22+ 9335 CB 6F        	bit 5,a
  23+ 9337 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9339
  25+ 9339 CD 51 93     	call Comprueba_limite_horizontal
  26+ 933C CD E1 93     	call Comprueba_limite_vertical
  27+ 933F
  28+ 933F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 933F              ; -----------------------
  30+ 933F              ; -----------------------
  31+ 933F              ; -----------------------
  32+ 933F
  33+ 933F CD 2E 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9342 CD 65 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9345 CD C4 95     	call Define_rutina_de_impresion
  36+ 9348
  37+ 9348 3A EF 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 934B CB AF        	res 5,a											; _a ser de utilidad.
  39+ 934D 32 EF 88     	ld (Ctrl_0),a
  40+ 9350
  41+ 9350 C9           	ret
  42+ 9351
  43+ 9351              ; *******************************************************************************************************************************************************************************************
  44+ 9351              ;	21/01/23
  45+ 9351              ;
  46+ 9351              ; 	Comprueba_limite_horizontal.
  47+ 9351              ;
  48+ 9351              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9351              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9351              ;
  51+ 9351              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9351              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9351              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9351              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9351
  56+ 9351
  57+ 9351
  58+ 9351 3A EF 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9354 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9356 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9358 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 935A 32 EF 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 935D 18 09            jr 6F
  64+ 935F CB 5F        1 bit 3,a
  65+ 9361 28 0A            jr z,2F
  66+ 9363 E6 F7            and $f7
  67+ 9365 32 EF 88         ld (Ctrl_0),a
  68+ 9368 CD BB 94     6 call Inicializacion
  69+ 936B 18 5B            jr 5F
  70+ 936D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 936E
  72+ 936E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 936E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 936E
  75+ 936E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 936F 2A FD 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9372 CD 1D 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9375 67           	ld h,a
  79+ 9376 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9377 CD 1D 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 937A 67           	ld h,a
  82+ 937B A7           	and a
  83+ 937C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 937E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 937F 3A D9 88     	ld a,(Cuad_objeto)
  86+ 9382 FE 02        	cp 2
  87+ 9384 38 1E        	jr c,3F
  88+ 9386 28 1C        	jr z,3F
  89+ 9388 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9389 28 23            jr z,7F
  91+ 938B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 938D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 938F E1           	pop hl
  94+ 9390
  95+ 9390              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9390              ; _para indicar con E="2" en caso necesario.
  97+ 9390
  98+ 9390 E5               push hl
  99+ 9391 C5               push bc
 100+ 9392 CD 1D 99     	call calcula_tercio
 101+ 9395 FE 01        	cp 1
 102+ 9397 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9399 CD C9 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 939C 28 26            jr z,9F
 105+ 939E 38 24            jr c,9F
 106+ 93A0 1E 00        11 ld e,0
 107+ 93A2 18 22            jr 8F
 108+ 93A4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93A5 28 07        	jr z, 7F
 110+ 93A7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93A9 1E 00         	ld e,0
 112+ 93AB E1           	pop hl
 113+ 93AC 18 04        	jr 4F
 114+ 93AE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93B0 18 15            jr 10F
 116+ 93B2
 117+ 93B2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93B2              ; _para indicar con E="2" en caso necesario.
 119+ 93B2
 120+ 93B2 E5           4 push hl
 121+ 93B3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93B4 CD 1D 99     	call calcula_tercio
 123+ 93B7 FE 01        	cp 1
 124+ 93B9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93BB CD C9 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93BE 28 04            jr z,9F
 127+ 93C0 30 02            jr nc,9F
 128+ 93C2 18 02        	jr 8F
 129+ 93C4 1E 02        9 ld e,2
 130+ 93C6 C1           8 pop bc
 131+ 93C7 E1           10 pop hl
 132+ 93C8 C9           5 ret
 133+ 93C9
 134+ 93C9              ; --------------------
 135+ 93C9              ;
 136+ 93C9              ; 25/08/22
 137+ 93C9
 138+ 93C9 CD 1D 99     Comprueba_centro call calcula_tercio
 139+ 93CC 67               ld h,a
 140+ 93CD 08           	ex af,af
 141+ 93CE FE 02        	cp 2
 142+ 93D0 38 07        	jr c,1F
 143+ 93D2 28 05        	jr z,1F
 144+ 93D4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93D7 18 03        	jr 2F
 146+ 93D9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93DC 08           2 ex af,af
 148+ 93DD A7               and a
 149+ 93DE ED 42            sbc hl,bc
 150+ 93E0 C9               ret
 151+ 93E1
 152+ 93E1              ; *********************************************************************************************************************************************************************************************
 153+ 93E1              ;
 154+ 93E1              ;   16/8/22
 155+ 93E1              ;
 156+ 93E1              ;	Comprueba_limite_vertical
 157+ 93E1              ;
 158+ 93E1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93E1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93E1              ;
 161+ 93E1
 162+ 93E1 2A C7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93E4 7D           	ld a,l
 164+ 93E5 E6 1F        	and $1F
 165+ 93E7 57           	ld d,a
 166+ 93E8 3A FF 88     	ld a,(Limite_vertical)
 167+ 93EB BA           	cp d 											; Límite - Posición.
 168+ 93EC 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 93ED 3A D9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 93F0 CB 47        	bit 0,a
 171+ 93F2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 93F4
 173+ 93F4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 93F4
 175+ 93F4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 93F5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 93F7
 178+ 93F7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 93F7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 93F7
 181+ 93F7 3A CB 88         ld a,(Coordenada_X)
 182+ 93FA 16 0F            ld d,Centro_izquierda
 183+ 93FC A7               and a
 184+ 93FD 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 93FE 28 1E            jr z,3F
 186+ 9400 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9402              ;                                                    ; _salimos sin modificar nada.
 188+ 9402 18 0E            jr 2F
 189+ 9404 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9405 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9407
 192+ 9407              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9407              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9407
 195+ 9407 3A CB 88         ld a,(Coordenada_X)
 196+ 940A 16 10            ld d,Centro_derecha
 197+ 940C A7               and a
 198+ 940D 92               sub d
 199+ 940E 28 0E            jr z,3F
 200+ 9410 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9412              ;                                                    ; _salimos sin modificar nada.
 202+ 9412 CB 43        2 bit 0,e
 203+ 9414 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9416 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9417 CD AB 94         call Modificaccionne
 206+ 941A C1           	pop bc
 207+ 941B CD BB 94         call Inicializacion
 208+ 941E C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 941F
 210+ 941F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 941F
 212+ 941F C5           4 push bc
 213+ 9420 01 C6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9423 0A           	ld a,(bc)
 215+ 9424 3D           	dec a
 216+ 9425 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9426 7D           	ld a,l
 218+ 9427 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9428 CB 47        	bit 0,a
 220+ 942A 28 03        	jr z,5F
 221+ 942C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 942D 18 2E        	jr 7F
 223+ 942F
 224+ 942F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 942F
 226+ 942F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9430 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9431 3A EF 88     	ld a,(Ctrl_0)
 229+ 9434 CB 4F        	bit 1,a
 230+ 9436 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9438 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9439
 233+ 9439              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9439
 235+ 9439 1C               inc e
 236+ 943A 1D               dec e
 237+ 943B 20 07            jr nz,12F
 238+ 943D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 943E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 943F 22 C7 88     	ld (Posicion_actual),hl
 241+ 9442 18 44        13 jr 9F
 242+ 9444 CB 43        12 bit 0,e
 243+ 9446 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9448              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9448 C1           	pop bc
 246+ 9449 18 D3        	jr 3B
 247+ 944B 80           14 add b
 248+ 944C 6F               ld l,a
 249+ 944D 22 C7 88     	ld (Posicion_actual),hl
 250+ 9450 CD AB 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9453 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9455 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9457 32 EF 88         ld (Ctrl_0),a
 254+ 945A F1           	pop af
 255+ 945B 18 2B        	jr 9F
 256+ 945D
 257+ 945D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 945D
 259+ 945D F5           7 push af
 260+ 945E 3A EF 88     	ld a,(Ctrl_0)
 261+ 9461 CB 47        	bit 0,a
 262+ 9463 20 1D        	jr nz,8F
 263+ 9465 F1           	pop af
 264+ 9466
 265+ 9466              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9466
 267+ 9466 1C           	inc e
 268+ 9467 1D               dec e
 269+ 9468 20 07            jr nz,10F
 270+ 946A 90           	sub b
 271+ 946B 6F               ld l,a
 272+ 946C 22 C7 88     	ld (Posicion_actual),hl
 273+ 946F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9471              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9471 CB 43        10 bit 0,e
 276+ 9473 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9475              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9475 C1           	pop bc
 279+ 9476 18 A6        	jr 3B
 280+ 9478 90           16 sub b
 281+ 9479 6F               ld l,a
 282+ 947A 22 C7 88     	ld (Posicion_actual),hl
 283+ 947D CD AB 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9480 18 06            jr 9F
 285+ 9482 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9484 32 EF 88         ld (Ctrl_0),a
 287+ 9487 F1           	pop af
 288+ 9488 C1           9 pop bc
 289+ 9489 1E 00        	ld e,0
 290+ 948B CD BB 94         call Inicializacion
 291+ 948E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 948F 08           	ex af,af
 293+ 9490 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9491 18 8B            jr 3B
 295+ 9493
 296+ 9493              ; --------------------
 297+ 9493
 298+ 9493 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9495 CD 19 96     1 call PreviousScan
 300+ 9498 10 FB            djnz 1B
 301+ 949A 22 C7 88     	ld (Posicion_actual),hl
 302+ 949D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 949E C9           	ret
 304+ 949F
 305+ 949F              ; --------------------
 306+ 949F
 307+ 949F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94A1 CD 0A 96     1 call NextScan
 309+ 94A4 10 FB            djnz 1B
 310+ 94A6 22 C7 88     	ld (Posicion_actual),hl
 311+ 94A9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94AA C9           	ret
 313+ 94AB
 314+ 94AB              ; --------------------
 315+ 94AB              ;
 316+ 94AB              ;	22/01/23
 317+ 94AB              ;
 318+ 94AB              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94AB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94AB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94AB
 322+ 94AB
 323+ 94AB              Modificaccionne
 324+ 94AB
 325+ 94AB 3A D9 88     	ld a,(Cuad_objeto)
 326+ 94AE FE 02        	cp 2
 327+ 94B0 CC 93 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94B3 DC 93 94         call c,Modifica_Pos_actual
 329+ 94B6 C8           	ret z
 330+ 94B7 CD 9F 94         call Modifica_Pos_actual2
 331+ 94BA C9               ret
 332+ 94BB
 333+ 94BB              ; *************************************************************************************************************************************************************************************************
 334+ 94BB              ;
 335+ 94BB              ;	13/8/22
 336+ 94BB              ;
 337+ 94BB              ;	Inicializacion
 338+ 94BB              ;
 339+ 94BB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94BB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94BB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94BB              ;
 343+ 94BB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94BB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94BB              ;	_ desaparece/aparece.
 346+ 94BB
 347+ 94BB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94BB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94BB              ;
 350+ 94BB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94BB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94BB              ; 		   [E] ="0"
 353+ 94BB
 354+ 94BB              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94BB
 356+ 94BB CD 1D 99     Inicializacion call calcula_tercio
 357+ 94BE 28 36        	jr z,primit
 358+ 94C0 E6 02        	and 2
 359+ 94C2 20 07        	jr nz,segmit
 360+ 94C4 7D           	ld a,l
 361+ 94C5 FE 7F        	cp $7f
 362+ 94C7 38 2D        	jr c,primit
 363+ 94C9 28 2B        	jr z,primit
 364+ 94CB CD 28 95     segmit call column
 365+ 94CE 38 13        	jr c,tercuad
 366+ 94D0 3E 04        cuarcuad ld a,4
 367+ 94D2 32 D9 88     	ld (Cuad_objeto),a
 368+ 94D5 21 20 48     	ld hl,$4820
 369+ 94D8 22 FD 88     	ld (Limite_horizontal),hl
 370+ 94DB 21 FF 88     	ld hl,Limite_vertical
 371+ 94DE 36 0D        	ld (hl),$0d
 372+ 94E0 08           	ex af,af
 373+ 94E1 18 3C        	jr 1F
 374+ 94E3              tercuad
 375+ 94E3 3E 03        	ld a,3
 376+ 94E5 32 D9 88     	ld (Cuad_objeto),a
 377+ 94E8 21 20 48     	ld hl,$4820
 378+ 94EB 22 FD 88     	ld (Limite_horizontal),hl
 379+ 94EE 21 FF 88     	ld hl,Limite_vertical
 380+ 94F1 36 12        	ld (hl),$12
 381+ 94F3 08           	ex af,af
 382+ 94F4 18 29        	jr 1F
 383+ 94F6 CD 28 95     primit call column
 384+ 94F9 38 13        	jr c, primcuad
 385+ 94FB              segcuad
 386+ 94FB 3E 02        	ld a,2
 387+ 94FD 32 D9 88     	ld (Cuad_objeto),a
 388+ 9500 21 C0 4F     	ld hl,$4fc0
 389+ 9503 22 FD 88     	ld (Limite_horizontal),hl
 390+ 9506 21 FF 88     	ld hl,Limite_vertical
 391+ 9509 36 0D        	ld (hl),$0d
 392+ 950B 08           	ex af,af
 393+ 950C 18 11        	jr 1F
 394+ 950E              primcuad
 395+ 950E 3E 01        	ld a,1
 396+ 9510 32 D9 88     	ld (Cuad_objeto),a
 397+ 9513 21 C0 4F     	ld hl,$4fc0
 398+ 9516 22 FD 88     	ld (Limite_horizontal),hl
 399+ 9519 21 FF 88     	ld hl,Limite_vertical
 400+ 951C 36 12        	ld (hl),$12
 401+ 951E 08           	ex af,af
 402+ 951F CD A8 9C     1 call Genera_coordenadas
 403+ 9522 21 EF 88     	ld hl,Ctrl_0
 404+ 9525 CB EE        	set 5,(hl)
 405+ 9527 C9           	ret
 406+ 9528
 407+ 9528              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9528
 409+ 9528              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9528              ;
 411+ 9528              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9528
 413+ 9528 7D           column ld a,l
 414+ 9529 E6 1F        	and $1f
 415+ 952B FE 10         	cp $10
 416+ 952D C9            	ret
 417+ 952E
 418+ 952E              ; --------------------------------------------------------------------------------------------------------------------
 419+ 952E              ;
 420+ 952E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 952E              ;
 422+ 952E              ; 14/12/22
 423+ 952E              ;
 424+ 952E              ;	Modifica: A y BC.
 425+ 952E
 426+ 952E 3A D9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9531 E6 01        	and 1
 428+ 9533 28 17        	jr z,1F
 429+ 9535
 430+ 9535              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9535
 432+ 9535 3A CB 88     	ld a,(Coordenada_X)
 433+ 9538 47           	ld b,a
 434+ 9539 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 953A 79           	ld a,c
 436+ 953B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 953C 38 08        	jr c,2F
 438+ 953E 47           	ld b,a
 439+ 953F 79           	ld a,c
 440+ 9540 90           	sub b
 441+ 9541 32 FC 88     	ld (Columnas),a
 442+ 9544 18 1B        	jr 4F
 443+ 9546 79           2 ld a,c
 444+ 9547 32 FC 88     	ld (Columnas),a
 445+ 954A 18 15        	jr 4F
 446+ 954C
 447+ 954C              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 954C
 449+ 954C 3A CB 88     1 ld a,(Coordenada_X)
 450+ 954F 81           	add c
 451+ 9550 3D           	dec a
 452+ 9551 D6 1F        	sub $1f
 453+ 9553 38 08        	jr c,3F
 454+ 9555 47           	ld b,a
 455+ 9556 79           	ld a,c
 456+ 9557 90           	sub b
 457+ 9558 32 FC 88     	ld (Columnas),a
 458+ 955B 18 04        	jr 4F
 459+ 955D 79           3 ld a,c
 460+ 955E 32 FC 88     	ld (Columnas),a
 461+ 9561 D9           4 exx
 462+ 9562 4F           	ld c,a
 463+ 9563 D9           	exx
 464+ 9564 C9            ret
 465+ 9565
 466+ 9565              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9565              ;
 468+ 9565              ;   19/7/23
 469+ 9565              ;
 470+ 9565              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9565              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9565              ;
 473+ 9565              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9565              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9565              ;
 476+ 9565              ;	DESTRUYE: HL,B Y A.
 477+ 9565
 478+ 9565 3A D9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9568 FE 02        	cp 2
 480+ 956A 38 18        	jr c,1F
 481+ 956C 28 16        	jr z,1F
 482+ 956E E6 01        	and 1
 483+ 9570 28 0D        	jr z,3F
 484+ 9572
 485+ 9572              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9572
 487+ 9572 CD B8 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9575
 489+ 9575 7D           9 ld a,l
 490+ 9576 E6 1F        	and $1f
 491+ 9578 28 2A        	jr z,7F
 492+ 957A 2B           	dec hl
 493+ 957B 10 F8        	djnz 9B
 494+ 957D 18 25        	jr 7F
 495+ 957F
 496+ 957F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 957F
 498+ 957F 2A C7 88     3 ld hl,(Posicion_actual)
 499+ 9582 18 20        	jr 7F
 500+ 9584
 501+ 9584 28 14        1 jr z,2F
 502+ 9586
 503+ 9586              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9586
 505+ 9586 CD B8 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9589
 507+ 9589 7D           4 ld a,l
 508+ 958A E6 1F        	and $1f
 509+ 958C 28 03        	jr z,6F
 510+ 958E 2B           	dec hl
 511+ 958F 10 F8        	djnz 4B
 512+ 9591 06 0F        6 ld b,15
 513+ 9593 CD 19 96     5 call PreviousScan
 514+ 9596 10 FB        	djnz 5B
 515+ 9598 18 0A        	jr 7F
 516+ 959A
 517+ 959A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 959A
 519+ 959A CD B8 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 959D 06 0F        	ld b,15
 521+ 959F CD 19 96     8 call PreviousScan
 522+ 95A2 10 FB        	djnz 8B
 523+ 95A4
 524+ 95A4 E5           7 push hl
 525+ 95A5 DD E1        	pop ix
 526+ 95A7
 527+ 95A7 2A C9 88     	ld hl,(Puntero_objeto)
 528+ 95AA E5           	push hl
 529+ 95AB FD E1        	pop iy
 530+ 95AD
 531+ 95AD              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95AD
 533+ 95AD 3A EF 88     	ld a,(Ctrl_0)
 534+ 95B0 CB 77        	bit 6,a
 535+ 95B2 C8           	ret z
 536+ 95B3
 537+ 95B3              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95B3              ; _ entidad / Amadeus´.
 539+ 95B3
 540+ 95B3 DD 22 4D 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95B7
 542+ 95B7 C9           	ret
 543+ 95B8
 544+ 95B8              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95B8              ;
 546+ 95B8              ;	2/1/23
 547+ 95B8              ;
 548+ 95B8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95B8              ;
 550+ 95B8              ;	Tras esta rutina tenemos:
 551+ 95B8              ;
 552+ 95B8              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95B8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95B8              ;
 555+ 95B8              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95B8
 557+ 95B8 2A C7 88     Operandos ld hl,(Posicion_actual)
 558+ 95BB 3A FC 88     	ld a,(Columnas)
 559+ 95BE 3D           	dec a
 560+ 95BF 20 01        	jr nz,1F
 561+ 95C1 3C           	inc a
 562+ 95C2 47           1 ld b,a
 563+ 95C3 C9           	ret
 564+ 95C4
 565+ 95C4              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95C4              ;
 567+ 95C4              ;	3/1/23
 568+ 95C4              ;
 569+ 95C4              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95C4              ;
 571+ 95C4              ;	Destruye: A,B,HL y DE.
 572+ 95C4
 573+ 95C4              Define_rutina_de_impresion
 574+ 95C4
 575+ 95C4 3A C6 88     	ld a,(Columns)
 576+ 95C7 47           	ld b,a
 577+ 95C8 3A FC 88     	ld a,(Columnas)
 578+ 95CB B8           	cp b
 579+ 95CC 20 0D        	jr nz,2f
 580+ 95CE
 581+ 95CE              ;	La entidad se imprime entera.
 582+ 95CE
 583+ 95CE 21 ED 96     	ld hl, Indice_entidades_completas
 584+ 95D1 E6 01        	and 1
 585+ 95D3 28 02        	jr z,1F
 586+ 95D5
 587+ 95D5 23           	inc hl
 588+ 95D6 23           	inc hl
 589+ 95D7
 590+ 95D7 CD 8F 8C     1 call Extrae_address
 591+ 95DA C9           	ret		;	ret
 592+ 95DB
 593+ 95DB              ;	La entidad no se imprime entera en pantalla.
 594+ 95DB
 595+ 95DB 3A D9 88     2 ld a,(Cuad_objeto)
 596+ 95DE E6 01        	and 1
 597+ 95E0 28 17        	jr z,3F
 598+ 95E2
 599+ 95E2              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95E2
 601+ 95E2 21 F1 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95E5 3A C6 88     4 ld a,(Columns)
 603+ 95E8 E6 01        	and 1
 604+ 95EA 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 95EC
 606+ 95EC 23           	inc hl
 607+ 95ED 23           	inc hl
 608+ 95EE
 609+ 95EE 3A FC 88     	ld a,(Columnas)
 610+ 95F1 E6 01        	and 1
 611+ 95F3 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 95F5
 613+ 95F5 23           	inc hl
 614+ 95F6 23           	inc hl
 615+ 95F7
 616+ 95F7 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 95F9
 618+ 95F9 21 F7 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 95FC 18 E7        	jr 4B
 620+ 95FE
 621+ 95FE              ; --------------------------------------------------------------------------------------------------------------------
 622+ 95FE              ;
 623+ 95FE              ;	Prepara_draw
 624+ 95FE              ;
 625+ 95FE              ;	Es una rutina de carga.
 626+ 95FE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 95FE              ;
 628+ 95FE              ;	FUNCIONAMIENTO:
 629+ 95FE              ;
 630+ 95FE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 95FE              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 95FE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 95FE              ;
 634+ 95FE              ;	DESTRUYE:
 635+ 95FE              ;
 636+ 95FE              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 95FE
 638+ 95FE 21 C5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9601 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9602 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9603 4E           	ld c,(hl)
 642+ 9604 2A C7 88     	ld hl,(Posicion_actual)
 643+ 9607 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9609 C9           	ret
 645+ 960A
 646+ 960A              ;----------------------------------------------------------------------------------------------------------------
 647+ 960A              ;
 648+ 960A              ;	5/08/22
 649+ 960A              ;
 650+ 960A              ;   NextScan.
 651+ 960A              ;
 652+ 960A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 960A              ;
 654+ 960A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 960A              ;
 656+ 960A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 960A              ;
 658+ 960A              ;       DESTRUIDOS: AF y HL !!!
 659+ 960A              ;
 660+ 960A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 960A              ;
 662+ 960A
 663+ 960A 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 960B 7C               ld a,h
 665+ 960C E6 07            and 7
 666+ 960E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 960F
 668+ 960F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9610 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9612 6F               ld l,a
 671+ 9613 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9614
 673+ 9614 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9615 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9617 67               ld h,a
 676+ 9618 C9               ret
 677+ 9619
 678+ 9619              ;----------------------------------------------------------------------------------------------------------------
 679+ 9619              ;
 680+ 9619              ;	5/08/22
 681+ 9619              ;
 682+ 9619              ;   PreviousScan.
 683+ 9619              ;
 684+ 9619              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9619              ;
 686+ 9619              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9619              ;
 688+ 9619              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9619              ;
 690+ 9619              ;       DESTRUIDOS: AF y HL !!!
 691+ 9619              ;
 692+ 9619              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9619              ;
 694+ 9619
 695+ 9619 7C           PreviousScan ld a,h
 696+ 961A 25               dec h               ; Dec H.
 697+ 961B E6 07            and 7
 698+ 961D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 961E
 700+ 961E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 961F D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9621 6F               ld l,a
 703+ 9622 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9623
 705+ 9623 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9624 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9626 67               ld h,a
 708+ 9627 C9               ret
 709+ 9628
 710+ 9628              ; -----------------------------------------------------------------------------------
 711+ 9628              ;
 712+ 9628              ;	31/7/23
 713+ 9628              ;
 714+ 9628              ;	Rutina principal de pintado de entidades.
 715+ 9628              ;	Extrae la foto del frame, (entidades).
 716+ 9628
 717+ 9628              Extrae_foto_entidades
 718+ 9628
 719+ 9628 21 01 70     	ld hl,Album_de_fotos+1
 720+ 962B 7E           	ld a,(hl)
 721+ 962C A7           	and a
 722+ 962D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 962E
 724+ 962E              ;	No hay datos, (entidades para pintar en este frame).
 725+ 962E
 726+ 962E 3A 0E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9631 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9632 C8           	ret z
 729+ 9633
 730+ 9633              ; -----------------------------------
 731+ 9633
 732+ 9633 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9637 31 00 70     	ld sp,Album_de_fotos
 734+ 963A
 735+ 963A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 963C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 963D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 963E
 739+ 963E ED 73 15 89  	ld (Stack_2),sp
 740+ 9642 ED 7B 13 89  	ld sp,(Stack)
 741+ 9646
 742+ 9646              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9646
 744+ 9646 3E CD        	ld a,$cd
 745+ 9648 32 50 96     	ld (Imprime),a
 746+ 964B EB           	ex de,hl
 747+ 964C 22 51 96     	ld (Imprime+1),hl
 748+ 964F EB           	ex de,hl
 749+ 9650
 750+ 9650              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9650
 752+ 9650 00 00 00     Imprime db 0,0,0
 753+ 9653
 754+ 9653 ED 73 13 89  	ld (Stack),sp
 755+ 9657
 756+ 9657 3A 0E 89     	ld a,(Numero_de_malotes)
 757+ 965A 3D           	dec a
 758+ 965B 28 09        	jr z,1F
 759+ 965D 32 0E 89      	ld (Numero_de_malotes),a
 760+ 9660
 761+ 9660 ED 7B 15 89  	ld sp,(Stack_2)
 762+ 9664 18 D4        	jr 2B
 763+ 9666
 764+ 9666 AF           1 xor a
 765+ 9667 32 15 89     	ld (Stack_2),a
 766+ 966A
 767+ 966A C9           	ret
 768+ 966B
 769+ 966B              ; -----------------------------------------------------------------------------------
 770+ 966B              ;
 771+ 966B              ;	28/2/23
 772+ 966B              ;
 773+ 966B              ;	Pinta los disparos generados.
 774+ 966B
 775+ 966B              Extrae_foto_disparos
 776+ 966B
 777+ 966B 21 59 71     	ld hl,Album_de_fotos_disparos+1
 778+ 966E 7E               ld a,(hl)
 779+ 966F A7               and a
 780+ 9670 C8               ret z
 781+ 9671
 782+ 9671 3A 3D 89     	ld a,(Numero_de_disparotes)
 783+ 9674 A7           	and a
 784+ 9675 C8           	ret z
 785+ 9676 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 967A 31 58 71     	ld sp,Album_de_fotos_disparos
 787+ 967D
 788+ 967D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 967F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9680 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9681
 792+ 9681 ED 73 15 89  	ld (Stack_2),sp
 793+ 9685 ED 7B 13 89  	ld sp,(Stack)
 794+ 9689
 795+ 9689              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9689
 797+ 9689 3E CD        	ld a,$cd
 798+ 968B 32 93 96     	ld (Imprime2),a
 799+ 968E EB           	ex de,hl
 800+ 968F 22 94 96     	ld (Imprime2+1),hl
 801+ 9692 EB           	ex de,hl
 802+ 9693
 803+ 9693              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 9693
 805+ 9693 00 00 00     Imprime2 db 0,0,0
 806+ 9696
 807+ 9696 3A 3D 89     	ld a,(Numero_de_disparotes)
 808+ 9699 3D           	dec a
 809+ 969A 28 09        	jr z,1F
 810+ 969C 32 3D 89      	ld (Numero_de_disparotes),a
 811+ 969F
 812+ 969F ED 7B 15 89  	ld sp,(Stack_2)
 813+ 96A3 18 D8        	jr 2B
 814+ 96A5
 815+ 96A5 AF           1 xor a
 816+ 96A6 32 15 89     	ld (Stack_2),a
 817+ 96A9 C9           	ret
 818+ 96AA
 819+ 96AA              ; -----------------------------------------------------------------------------------
 820+ 96AA              ;
 821+ 96AA              ;	4/9/23
 822+ 96AA              ;
 823+ 96AA              ;	Rutina principal de pintado de Amadeus.
 824+ 96AA              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96AA
 826+ 96AA 21 B0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96AD 7E           	ld a,(hl)
 828+ 96AE A7           	and a
 829+ 96AF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96B0
 831+ 96B0 3A 0E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96B3 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96B4 C8           	ret z
 834+ 96B5
 835+ 96B5              ; -----------------------------------
 836+ 96B5
 837+ 96B5 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96B9 31 B0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96BC
 840+ 96BC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96BE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96BF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96C0
 844+ 96C0 ED 73 15 89  	ld (Stack_2),sp
 845+ 96C4 ED 7B 13 89  	ld sp,(Stack)
 846+ 96C8
 847+ 96C8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96C8
 849+ 96C8 3E CD        	ld a,$cd
 850+ 96CA 32 D2 96     	ld (Imprime_Amadeus),a
 851+ 96CD EB           	ex de,hl
 852+ 96CE 22 D3 96     	ld (Imprime_Amadeus+1),hl
 853+ 96D1 EB           	ex de,hl
 854+ 96D2
 855+ 96D2              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96D2
 857+ 96D2 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96D5
 859+ 96D5 ED 73 13 89  	ld (Stack),sp
 860+ 96D9
 861+ 96D9 3A 0E 89     	ld a,(Numero_de_malotes)
 862+ 96DC 3D           	dec a
 863+ 96DD 28 09        	jr z,1F
 864+ 96DF 32 0E 89      	ld (Numero_de_malotes),a
 865+ 96E2
 866+ 96E2 ED 7B 15 89  	ld sp,(Stack_2)
 867+ 96E6 18 D4        	jr 2B
 868+ 96E8
 869+ 96E8 AF           1 xor a
 870+ 96E9 32 15 89     	ld (Stack_2),a
 871+ 96EC
 872+ 96EC C9           	ret
# file closed: Draw_XOR.asm
1666  96ED              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96ED              ;   índices de Rutinas de impresión.
   2+ 96ED
   3+ 96ED FD 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96EF 2A 97            defw Pinta_Amadeus_3x2
   5+ 96F1
   6+ 96F1 80 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96F3 20 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96F5 D4 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96F7
  10+ 96F7 AA 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96F9 AE 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96FB 62 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96FD
  14+ 96FD
  15+ 96FD              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96FD              ;
  17+ 96FD              ;   12/12/22
  18+ 96FD              ;
  19+ 96FD              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96FD              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96FD              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96FD              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96FD              ;
  24+ 96FD              ;   Modifica: DE y HL.
  25+ 96FD
  26+ 96FD ED 73 13 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9701 FD F9        	ld sp,iy
  28+ 9703 06 10            ld b,16
  29+ 9705 D1           1 pop de
  30+ 9706 7B               ld a,e
  31+ 9707 AE               xor (hl)
  32+ 9708 77           	ld (hl),a
  33+ 9709 23           	inc hl
  34+ 970A 7A               ld a,d
  35+ 970B AE               xor (hl)
  36+ 970C 77           	ld (hl),a
  37+ 970D 2B           	dec hl
  38+ 970E 24           	inc h
  39+ 970F 7C               ld a,h
  40+ 9710 E6 07            and 7
  41+ 9712 20 0A            jr nz,2F
  42+ 9714 7D               ld a,l
  43+ 9715 C6 20            add a,$20
  44+ 9717 6F               ld l,a
  45+ 9718 38 04            jr c,2F
  46+ 971A 7C               ld a,h
  47+ 971B D6 08            sub 8
  48+ 971D 67               ld h,a
  49+ 971E 7C           2 ld a,h
  50+ 971F FE 58            cp $58
  51+ 9721 28 02            jr z,3F
  52+ 9723 10 E0            djnz 1B
  53+ 9725 ED 7B 13 89  3 ld sp,(Stack)
  54+ 9729 C9           	ret
  55+ 972A
  56+ 972A ED 73 13 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 972E FD F9        	ld sp,iy
  58+ 9730 06 08            ld b,8
  59+ 9732 D1           1 pop de
  60+ 9733 7B               ld a,e
  61+ 9734 AE               xor (hl)
  62+ 9735 77           	ld (hl),a
  63+ 9736 23           	inc hl
  64+ 9737 7A               ld a,d
  65+ 9738 AE               xor (hl)
  66+ 9739 77           	ld (hl),a
  67+ 973A 23           	inc hl
  68+ 973B D1           	pop de
  69+ 973C 7B               ld a,e
  70+ 973D AE               xor (hl)
  71+ 973E 77           	ld (hl),a
  72+ 973F 2B           	dec hl
  73+ 9740 2B           	dec hl
  74+ 9741 24           	inc h
  75+ 9742 7C               ld a,h
  76+ 9743 E6 07            and 7
  77+ 9745 20 0A            jr nz,2F
  78+ 9747 7D               ld a,l
  79+ 9748 C6 20            add a,$20
  80+ 974A 6F               ld l,a
  81+ 974B 38 04            jr c,2F
  82+ 974D 7C               ld a,h
  83+ 974E D6 08            sub 8
  84+ 9750 67               ld h,a
  85+ 9751 7C           2 ld a,h
  86+ 9752 FE 58            cp $58
  87+ 9754 28 25            jr z,4F
  88+ 9756 7A               ld a,d
  89+ 9757 AE               xor (hl)
  90+ 9758 77               ld (hl),a
  91+ 9759 D1           	pop de
  92+ 975A 23           	inc hl
  93+ 975B 7B               ld a,e
  94+ 975C AE               xor (hl)
  95+ 975D 77           	ld (hl),a
  96+ 975E 23           	inc hl
  97+ 975F 7A               ld a,d
  98+ 9760 AE               xor (hl)
  99+ 9761 77           	ld (hl),a
 100+ 9762 2B           	dec hl
 101+ 9763 2B           	dec hl
 102+ 9764 24           	inc h
 103+ 9765 7C               ld a,h
 104+ 9766 E6 07            and 7
 105+ 9768 20 0A            jr nz,3F
 106+ 976A 7D               ld a,l
 107+ 976B C6 20            add a,$20
 108+ 976D 6F               ld l,a
 109+ 976E 38 04            jr c,3F
 110+ 9770 7C               ld a,h
 111+ 9771 D6 08            sub 8
 112+ 9773 67               ld h,a
 113+ 9774 7C           3 ld a,h
 114+ 9775 FE 58            cp $58
 115+ 9777 28 02            jr z,4F
 116+ 9779 10 B7            djnz 1B
 117+ 977B ED 7B 13 89  4 ld sp,(Stack)
 118+ 977F C9           	ret
 119+ 9780
 120+ 9780              ; ---------------------------------------------------
 121+ 9780
 122+ 9780 ED 73 13 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9784 FD F9        	ld sp,iy
 124+ 9786
 125+ 9786              ; >>>
 126+ 9786
 127+ 9786 06 10            ld b,16
 128+ 9788 D1           1 pop de
 129+ 9789 7A           	ld a,d
 130+ 978A AE           	xor (hl)
 131+ 978B 77           	ld (hl),a
 132+ 978C 24           	inc h
 133+ 978D 7C               ld a,h
 134+ 978E E6 07            and 7
 135+ 9790 20 0C            jr nz,2F
 136+ 9792 7D               ld a,l
 137+ 9793 C6 20            add a,$20
 138+ 9795 6F               ld l,a
 139+ 9796 38 06            jr c,2F
 140+ 9798 7C               ld a,h
 141+ 9799 D6 08            sub 8
 142+ 979B 67               ld h,a
 143+ 979C 18 00            jr 2F
 144+ 979E 7C           2 ld a,h
 145+ 979F FE 58            cp $58
 146+ 97A1 28 02            jr z,3F
 147+ 97A3 10 E3            djnz 1B
 148+ 97A5 ED 7B 13 89  3 ld sp,(Stack)
 149+ 97A9 C9           	ret
 150+ 97AA
 151+ 97AA ED 73 13 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97AE FD F9        	ld sp,iy
 153+ 97B0
 154+ 97B0              ; >>>
 155+ 97B0
 156+ 97B0 06 10            ld b,16
 157+ 97B2 D1           1 pop de
 158+ 97B3 7B           	ld a,e
 159+ 97B4 AE           	xor (hl)
 160+ 97B5 77           	ld (hl),a
 161+ 97B6 24           	inc h
 162+ 97B7 7C               ld a,h
 163+ 97B8 E6 07            and 7
 164+ 97BA 20 0C            jr nz,2F
 165+ 97BC 7D               ld a,l
 166+ 97BD C6 20            add a,$20
 167+ 97BF 6F               ld l,a
 168+ 97C0 38 06            jr c,2F
 169+ 97C2 7C               ld a,h
 170+ 97C3 D6 08            sub 8
 171+ 97C5 67               ld h,a
 172+ 97C6 18 00            jr 2F
 173+ 97C8 7C           2 ld a,h
 174+ 97C9 FE 58            cp $58
 175+ 97CB 28 02            jr z,3F
 176+ 97CD 10 E3            djnz 1B
 177+ 97CF ED 7B 13 89  3 ld sp,(Stack)
 178+ 97D3 C9           	ret
 179+ 97D4
 180+ 97D4              ; ---------------------------------------------------
 181+ 97D4
 182+ 97D4 ED 73 13 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97D8 FD F9        	ld sp,iy
 184+ 97DA 06 08            ld b,8
 185+ 97DC D1           1 pop de
 186+ 97DD 7A           	ld a,d
 187+ 97DE AE           	xor (hl)
 188+ 97DF 77           	ld (hl),a
 189+ 97E0 23           	inc hl
 190+ 97E1 D1           	pop de
 191+ 97E2 7B           	ld a,e
 192+ 97E3 AE           	xor (hl)
 193+ 97E4 77           	ld (hl),a
 194+ 97E5 2B           	dec hl
 195+ 97E6 24            	inc h
 196+ 97E7 7C               ld a,h
 197+ 97E8 E6 07            and 7
 198+ 97EA 20 0A            jr nz,2F
 199+ 97EC 7D               ld a,l
 200+ 97ED C6 20            add a,$20
 201+ 97EF 6F               ld l,a
 202+ 97F0 38 04            jr c,2F
 203+ 97F2 7C               ld a,h
 204+ 97F3 D6 08            sub 8
 205+ 97F5 67               ld h,a
 206+ 97F6 7C           2 ld a,h
 207+ 97F7 FE 58            cp $58
 208+ 97F9 28 20            jr z,4F
 209+ 97FB D1               pop de
 210+ 97FC 7B           	ld a,e
 211+ 97FD AE           	xor (hl)
 212+ 97FE 77           	ld (hl),a
 213+ 97FF 23           	inc hl
 214+ 9800 7A           	ld a,d
 215+ 9801 AE           	xor (hl)
 216+ 9802 77           	ld (hl),a
 217+ 9803 2B           	dec hl
 218+ 9804 24           	inc h
 219+ 9805 7C               ld a,h
 220+ 9806 E6 07            and 7
 221+ 9808 20 0A            jr nz,3F
 222+ 980A 7D               ld a,l
 223+ 980B C6 20            add a,$20
 224+ 980D 6F               ld l,a
 225+ 980E 38 04            jr c,3F
 226+ 9810 7C               ld a,h
 227+ 9811 D6 08            sub 8
 228+ 9813 67               ld h,a
 229+ 9814 7C           3 ld a,h
 230+ 9815 FE 58            cp $58
 231+ 9817 28 02            jr z,4F
 232+ 9819 10 C1            djnz 1B
 233+ 981B ED 7B 13 89  4 ld sp,(Stack)
 234+ 981F C9           	ret
 235+ 9820
 236+ 9820 ED 73 13 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9824 FD F9        	ld sp,iy
 238+ 9826 06 08            ld b,8
 239+ 9828 D1           1 pop de
 240+ 9829 D1           	pop de
 241+ 982A 7B           	ld a,e
 242+ 982B AE           	xor (hl)
 243+ 982C 77           	ld (hl),a
 244+ 982D 24            	inc h
 245+ 982E 7C               ld a,h
 246+ 982F E6 07            and 7
 247+ 9831 20 0A            jr nz,2F
 248+ 9833 7D               ld a,l
 249+ 9834 C6 20            add a,$20
 250+ 9836 6F               ld l,a
 251+ 9837 38 04            jr c,2F
 252+ 9839 7C               ld a,h
 253+ 983A D6 08            sub 8
 254+ 983C 67               ld h,a
 255+ 983D 7C           2 ld a,h
 256+ 983E FE 58            cp $58
 257+ 9840 28 1B            jr z,4F
 258+ 9842 D1               pop de
 259+ 9843 7A           	ld a,d
 260+ 9844 AE           	xor (hl)
 261+ 9845 77           	ld (hl),a
 262+ 9846 24           	inc h
 263+ 9847 7C               ld a,h
 264+ 9848 E6 07            and 7
 265+ 984A 20 0A            jr nz,3F
 266+ 984C 7D               ld a,l
 267+ 984D C6 20            add a,$20
 268+ 984F 6F               ld l,a
 269+ 9850 38 04            jr c,3F
 270+ 9852 7C               ld a,h
 271+ 9853 D6 08            sub 8
 272+ 9855 67               ld h,a
 273+ 9856 7C           3 ld a,h
 274+ 9857 FE 58            cp $58
 275+ 9859 28 02            jr z,4F
 276+ 985B 10 CB            djnz 1B
 277+ 985D ED 7B 13 89  4 ld sp,(Stack)
 278+ 9861 C9           	ret
 279+ 9862
 280+ 9862 ED 73 13 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9866 FD F9        	ld sp,iy
 282+ 9868 06 08            ld b,8
 283+ 986A D1           1 pop de
 284+ 986B 7B           	ld a,e
 285+ 986C AE           	xor (hl)
 286+ 986D 77           	ld (hl),a
 287+ 986E 23           	inc hl
 288+ 986F 7A           	ld a,d
 289+ 9870 AE           	xor (hl)
 290+ 9871 77           	ld (hl),a
 291+ 9872 2B           	dec hl
 292+ 9873 24             	inc h
 293+ 9874 7C               ld a,h
 294+ 9875 E6 07            and 7
 295+ 9877 20 0A            jr nz,2F
 296+ 9879 7D               ld a,l
 297+ 987A C6 20            add a,$20
 298+ 987C 6F               ld l,a
 299+ 987D 38 04            jr c,2F
 300+ 987F 7C               ld a,h
 301+ 9880 D6 08            sub 8
 302+ 9882 67               ld h,a
 303+ 9883 7C           2 ld a,h
 304+ 9884 FE 58            cp $58
 305+ 9886 28 21            jr z,4F
 306+ 9888 D1               pop de
 307+ 9889 7A           	ld a,d
 308+ 988A AE           	xor (hl)
 309+ 988B 77           	ld (hl),a
 310+ 988C 23           	inc hl
 311+ 988D D1               pop de
 312+ 988E 7B           	ld a,e
 313+ 988F AE           	xor (hl)
 314+ 9890 77           	ld (hl),a
 315+ 9891 2B           	dec hl
 316+ 9892 24           	inc h
 317+ 9893 7C               ld a,h
 318+ 9894 E6 07            and 7
 319+ 9896 20 0A            jr nz,3F
 320+ 9898 7D               ld a,l
 321+ 9899 C6 20            add a,$20
 322+ 989B 6F               ld l,a
 323+ 989C 38 04            jr c,3F
 324+ 989E 7C               ld a,h
 325+ 989F D6 08            sub 8
 326+ 98A1 67               ld h,a
 327+ 98A2 7C           3 ld a,h
 328+ 98A3 FE 58            cp $58
 329+ 98A5 28 02            jr z,4F
 330+ 98A7 10 C1            djnz 1B
 331+ 98A9 ED 7B 13 89  4 ld sp,(Stack)
 332+ 98AD C9           	ret
 333+ 98AE
 334+ 98AE ED 73 13 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98B2 FD F9        	ld sp,iy
 336+ 98B4 06 08            ld b,8
 337+ 98B6 D1           1 pop de
 338+ 98B7 7B           	ld a,e
 339+ 98B8 AE           	xor (hl)
 340+ 98B9 77           	ld (hl),a
 341+ 98BA 24            	inc h
 342+ 98BB 7C               ld a,h
 343+ 98BC E6 07            and 7
 344+ 98BE 20 0A            jr nz,2F
 345+ 98C0 7D               ld a,l
 346+ 98C1 C6 20            add a,$20
 347+ 98C3 6F               ld l,a
 348+ 98C4 38 04            jr c,2F
 349+ 98C6 7C               ld a,h
 350+ 98C7 D6 08            sub 8
 351+ 98C9 67               ld h,a
 352+ 98CA 7C           2 ld a,h
 353+ 98CB FE 58            cp $58
 354+ 98CD 28 1C            jr z,4F
 355+ 98CF D1               pop de
 356+ 98D0 7A           	ld a,d
 357+ 98D1 AE           	xor (hl)
 358+ 98D2 77           	ld (hl),a
 359+ 98D3 24           	inc h
 360+ 98D4 7C               ld a,h
 361+ 98D5 E6 07            and 7
 362+ 98D7 20 0A            jr nz,3F
 363+ 98D9 7D               ld a,l
 364+ 98DA C6 20            add a,$20
 365+ 98DC 6F               ld l,a
 366+ 98DD 38 04            jr c,3F
 367+ 98DF 7C               ld a,h
 368+ 98E0 D6 08            sub 8
 369+ 98E2 67               ld h,a
 370+ 98E3 7C           3 ld a,h
 371+ 98E4 FE 58            cp $58
 372+ 98E6 28 03            jr z,4F
 373+ 98E8 D1               pop de
 374+ 98E9 10 CB            djnz 1B
 375+ 98EB ED 7B 13 89  4 ld sp,(Stack)
 376+ 98EF C9           	ret
 377+ 98F0
 378+ 98F0              ; ---------------------------------------------------
 379+ 98F0              ;
 380+ 98F0              ;   27/02/23
 381+ 98F0              ;
 382+ 98F0              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98F0              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98F0              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98F0
 386+ 98F0 ED 73 13 89  Pinta_Disparo ld (Stack),sp
 387+ 98F4 FD F9            ld sp,iy
 388+ 98F6 06 03            ld b,3
 389+ 98F8 D1           1 pop de
 390+ 98F9 7B               ld a,e
 391+ 98FA AE               xor (hl)
 392+ 98FB 77               ld (hl),a
 393+ 98FC 23               inc hl
 394+ 98FD 7A               ld a,d
 395+ 98FE AE               xor (hl)
 396+ 98FF 77               ld (hl),a
 397+ 9900 2B               dec hl
 398+ 9901
 399+ 9901 24               inc h
 400+ 9902 7C               ld a,h
 401+ 9903 E6 07            and 7
 402+ 9905 20 0A            jr nz,2F
 403+ 9907 7D               ld a,l
 404+ 9908 C6 20            add a,$20
 405+ 990A 6F               ld l,a
 406+ 990B 38 04            jr c,2F
 407+ 990D 7C               ld a,h
 408+ 990E D6 08            sub 8
 409+ 9910 67               ld h,a
 410+ 9911 7C           2 ld a,h
 411+ 9912 FE 58            cp $58
 412+ 9914 28 02            jr z,3F
 413+ 9916
 414+ 9916 10 E0            djnz 1B
 415+ 9918 ED 7B 13 89  3 ld sp,(Stack)
 416+ 991C C9               ret
 417+ 991D
# file closed: Rutinas_de_impresion_sprites.asm
1667  991D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 991D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 991D              ;
   3+ 991D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 991D              ;
   5+ 991D              ; *****************************************************************************************************************************************************************************************
   6+ 991D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 991D
   8+ 991D 7C           calcula_tercio ld a,h
   9+ 991E E6 18        	and $18
  10+ 9920 CB 2F        	sra a
  11+ 9922 CB 2F        	sra a
  12+ 9924 CB 2F        	sra a
  13+ 9926 C9           	ret
  14+ 9927
# file closed: calcula_tercio.asm
1668  9927              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9927              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9927              ;
   3+ 9927              ;
   4+ 9927              ;	CLS.
   5+ 9927              ;
   6+ 9927              ;	Limpia la pantalla y define sus atributos.
   7+ 9927              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9927              ;
   9+ 9927              ;	COLORES: 0 ..... NEGRO
  10+ 9927              ;    		 1 ..... AZUL
  11+ 9927              ; 			 2 ..... ROJO
  12+ 9927              ;			 3 ..... MAGENTA
  13+ 9927              ; 			 4 ..... VERDE
  14+ 9927              ; 			 5 ..... CIAN
  15+ 9927              ;			 6 ..... AMARILLO
  16+ 9927              ; 			 7 ..... BLANCO
  17+ 9927              ;
  18+ 9927              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9927              ;
  20+ 9927              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9927
  22+ 9927
  23+ 9927 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 992A 11 01 40     	LD DE,$4001
  25+ 992D 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9930 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9932 ED B0        	LDIR
  28+ 9934 01 FF 02     	LD BC,767
  29+ 9937 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9938 ED B0        	LDIR
  31+ 993A C9           	ret
  32+ 993B
# file closed: Cls.asm
1669  993B              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 993B              ; ******************************************************************************************************************************************************************************************
   2+ 993B              ;
   3+ 993B              ;   20/05/23
   4+ 993B              ;
   5+ 993B              ;	Recompone_posicion_inicio
   6+ 993B              ;
   7+ 993B              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 993B              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 993B              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 993B              ;	_ a una u otra rutina.
  11+ 993B
  12+ 993B              Recompone_posicion_inicio
  13+ 993B
  14+ 993B 2A D7 88     	ld hl,(Posicion_inicio)
  15+ 993E 7D           	ld a,l
  16+ 993F E6 1F        	and $1f
  17+ 9941 28 16        	jr z,1F
  18+ 9943
  19+ 9943 FE 1F        	cp $1f
  20+ 9945 28 0D        	jr z,3F
  21+ 9947
  22+ 9947 21 00 89     	ld hl,Ctrl_2
  23+ 994A CB C6        	set 0,(hl)
  24+ 994C 2A C9 88     	ld hl,(Puntero_objeto)
  25+ 994F 22 03 89     	ld (Repone_puntero_objeto),hl
  26+ 9952 18 08        	jr 2F
  27+ 9954
  28+ 9954 CD F5 9A     3 call Mov_left
  29+ 9957 18 03        	jr 2F
  30+ 9959
  31+ 9959 CD D7 99     1 call Mov_right
  32+ 995C 21 00 F0     2 ld hl,Sprite_vacio
  33+ 995F 22 C9 88     	ld (Puntero_objeto),hl
  34+ 9962 C9           	ret
  35+ 9963
  36+ 9963              ; ******************************************************************************************************************************************************************************************
  37+ 9963              ;
  38+ 9963              ;   27/05/23
  39+ 9963              ;
  40+ 9963              ;	Mov_down
  41+ 9963              ;
  42+ 9963              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9963              ;
  44+ 9963              ;
  45+ 9963              Mov_down
  46+ 9963
  47+ 9963 CD C5 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9966              ;																	; _ repone (Puntero_objeto).
  49+ 9966 21 EF 88     	ld hl,Ctrl_0
  50+ 9969 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 996B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 996B              ; 																	; _ en el caso de que no lo haya.
  53+ 996B 3A DD 88     	ld a,(Vel_down)
  54+ 996E 47           	ld b,a
  55+ 996F 2A C7 88         ld hl,(Posicion_actual)
  56+ 9972 CD 1D 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9975 E6 02        	and 2
  58+ 9977 28 0F        	jr z,1F
  59+ 9979
  60+ 9979              ; Nos encontramos en el último tercio de pantalla.
  61+ 9979              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9979
  63+ 9979 7C           	ld a,h
  64+ 997A FE 57        	cp $57
  65+ 997C 20 0A        	jr nz,1F
  66+ 997E
  67+ 997E 7D           	ld a,l
  68+ 997F C6 20        	add $20
  69+ 9981 30 05        	jr nc,1F
  70+ 9983
  71+ 9983              ; ------------------------------
  72+ 9983              ;	call Reaparece_arriba
  73+ 9983 CD 82 9C     	call Reinicio
  74+ 9986              ; ------------------------------
  75+ 9986
  76+ 9986 18 08        	jr 3F
  77+ 9988 CD 0A 96     1 call NextScan
  78+ 998B 22 C7 88     	ld (Posicion_actual),hl
  79+ 998E 10 E2            djnz 2B
  80+ 9990 CD A8 9C     3 call Genera_coordenadas
  81+ 9993 C9           	ret
  82+ 9994
  83+ 9994              ; ******************************************************************************************************************************************************************************************
  84+ 9994              ;
  85+ 9994              ;   27/05/23
  86+ 9994              ;
  87+ 9994              ;	Mov_up
  88+ 9994              ;
  89+ 9994              ; 	Mueve el Sprite hacia arriba.
  90+ 9994              ;
  91+ 9994              ;
  92+ 9994              Mov_up
  93+ 9994
  94+ 9994 CD C5 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9997              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9997 21 EF 88     	ld hl,Ctrl_0
  97+ 999A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 999C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 999C              ; 																		; _ en el caso de que no lo haya.
 100+ 999C 3A DC 88     	ld a,(Vel_up)
 101+ 999F 47           	ld b,a
 102+ 99A0 2A C7 88     	ld hl,(Posicion_actual)
 103+ 99A3 CD 1D 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99A6 A7           	and a
 105+ 99A7 20 10        	jr nz,1F
 106+ 99A9
 107+ 99A9              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99A9              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99A9
 110+ 99A9 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99AA FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99AC 20 0B            jr nz,1F
 113+ 99AE 7D               ld a,l
 114+ 99AF D6 20            sub $20
 115+ 99B1 30 06            jr nc,1F
 116+ 99B3 25               dec h
 117+ 99B4
 118+ 99B4              ; -----------------------------
 119+ 99B4 CD 63 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99B7              ;	call Reinicio
 121+ 99B7              ; -----------------------------
 122+ 99B7
 123+ 99B7 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99B9 CD 19 96     1 call PreviousScan
 125+ 99BC 22 C7 88     	ld (Posicion_actual),hl
 126+ 99BF 10 E2            djnz 3B
 127+ 99C1 CD A8 9C     2 call Genera_coordenadas
 128+ 99C4 C9           	ret
 129+ 99C5
 130+ 99C5              ; -----------------------------
 131+ 99C5              ;
 132+ 99C5              ;	27/5/23
 133+ 99C5              ;
 134+ 99C5              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99C5              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99C5              ;
 137+ 99C5              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99C5              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99C5              ;
 140+ 99C5              ;	Modifica: A y (Puntero_objeto).
 141+ 99C5
 142+ 99C5 3A 00 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99C8 CB 47        	bit 0,a
 144+ 99CA C8           	ret z
 145+ 99CB CB 87        	res 0,a
 146+ 99CD 32 00 89     	ld (Ctrl_2),a
 147+ 99D0 2A 03 89     	ld hl,(Repone_puntero_objeto)
 148+ 99D3 22 C9 88     	ld (Puntero_objeto),hl
 149+ 99D6 C9           	ret
 150+ 99D7
 151+ 99D7              ; ******************************************************************************************************************************************************************************************
 152+ 99D7              ;
 153+ 99D7              ;	19/10/22
 154+ 99D7              ;
 155+ 99D7              ;	Mov_right.
 156+ 99D7              ;
 157+ 99D7              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99D7              ;
 159+ 99D7
 160+ 99D7 21 EF 88     Mov_right ld hl,Ctrl_0
 161+ 99DA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99DC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99DC              ; 																	; _ en el caso de que no lo haya.
 164+ 99DC 3A EF 88     	ld a,(Ctrl_0)
 165+ 99DF CB 77        	bit 6,a
 166+ 99E1 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99E3
 168+ 99E3 CD 11 9C     	call Stop_Amadeus_right
 169+ 99E6 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99E7 18 4D        	jr 8F
 171+ 99E9
 172+ 99E9 3A CB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99EC FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99EE 20 46        	jr nz,8F
 175+ 99F0
 176+ 99F0 3A CD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 99F3 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 99F4 28 40        	jr z,8F
 179+ 99F6
 180+ 99F6              ; ---------- ---------- ----------
 181+ 99F6              ;
 182+ 99F6              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 99F6
 184+ 99F6 3A DB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 99F9 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 99FB 28 11        	jr z,1F
 187+ 99FD 38 06        	jr c,6F
 188+ 99FF FE 04        	cp 4
 189+ 9A01 28 14        	jr z,7F
 190+ 9A03 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A05
 192+ 9A05              ; ---------- ---------- ----------
 193+ 9A05              ;
 194+ 9A05              ; Perfiles de velocidad
 195+ 9A05              ;
 196+ 9A05
 197+ 9A05 3A CD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A08 FE FE        	cp $fe
 199+ 9A0A 20 2A        	jr nz,8F
 200+ 9A0C 18 10        	jr 3F
 201+ 9A0E 3A CD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A11 FE FD        	cp $fd
 203+ 9A13 20 21        	jr nz,8F
 204+ 9A15 18 07        	jr 3F
 205+ 9A17 3A CD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A1A FE FB        	cp $fb
 207+ 9A1C 20 18        	jr nz,8F
 208+ 9A1E
 209+ 9A1E              ; ---------- ---------- ----------
 210+ 9A1E
 211+ 9A1E              3
 212+ 9A1E CD 51 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A21              ;	call Reinicio
 214+ 9A21
 215+ 9A21              ; ---------- ---------- ----------
 216+ 9A21              ;
 217+ 9A21              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A21
 219+ 9A21 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A23 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A24 CD 3D 9A     	call DESPLZ_DER
 222+ 9A27 C1           	pop bc
 223+ 9A28 10 F9        	djnz 5B
 224+ 9A2A 2A C7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A2D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A2E 22 C7 88     	ld (Posicion_actual),hl
 227+ 9A31 CD A8 9C     	call Genera_coordenadas
 228+ 9A34 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A36
 230+ 9A36              ; ---------- ---------- ----------
 231+ 9A36
 232+ 9A36 2A C7 88     8 ld hl,(Posicion_actual)
 233+ 9A39 CD 3D 9A     	call DESPLZ_DER
 234+ 9A3C C9           2 ret
 235+ 9A3D
 236+ 9A3D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A3D              ;
 238+ 9A3D              ;	22/9/22
 239+ 9A3D              ;
 240+ 9A3D
 241+ 9A3D CD 4C 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A40 CD 98 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A43 CD C1 9A         call Ciclo_completo
 244+ 9A46 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A49 CB FE        	set 7,(hl)
 246+ 9A4B C9           	ret
 247+ 9A4C
 248+ 9A4C              ; ******************************************************************************************************************************************************************************************
 249+ 9A4C              ;	15/02/23
 250+ 9A4C              ;
 251+ 9A4C
 252+ 9A4C 3A DB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A4F 47           	ld b,a
 254+ 9A50 2A D3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A53 23           1 inc hl
 256+ 9A54 23           	inc hl
 257+ 9A55 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A57 22 D3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A5A CD 8F 8C     	call Extrae_address
 260+ 9A5D 22 C9 88     	ld (Puntero_objeto),hl
 261+ 9A60
 262+ 9A60              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A60
 264+ 9A60              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A60              ; Cuántos movimientos hemos hecho ??
 266+ 9A60              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A60
 268+ 9A60 2A CF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A63 EB           	ex de,hl
 270+ 9A64 A7           	and a
 271+ 9A65 ED 52        	sbc hl,de
 272+ 9A67 CB 3D        	srl l
 273+ 9A69 3E 08        6 ld a,8
 274+ 9A6B 95           	sub l
 275+ 9A6C 30 1E        	jr nc,3F
 276+ 9A6E
 277+ 9A6E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A6E              ; B="0".
 279+ 9A6E
 280+ 9A6E 04           4 inc b
 281+ 9A6F 3C           	inc a
 282+ 9A70 20 FC        	jr nz,4B
 283+ 9A72 78           	ld a,b
 284+ 9A73 08           	ex af,af
 285+ 9A74 2A CF 88     	ld hl,(Indice_Sprite_der)
 286+ 9A77 23           5 inc hl
 287+ 9A78 23           	inc hl
 288+ 9A79 10 FC        	djnz 5B
 289+ 9A7B 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A7E CD 8F 8C     	call Extrae_address
 291+ 9A81 22 C9 88     	ld (Puntero_objeto),hl
 292+ 9A84
 293+ 9A84              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A84              ; _(Posicion_actual).
 295+ 9A84
 296+ 9A84 21 C7 88     	ld hl,Posicion_actual
 297+ 9A87 34           	inc (hl)
 298+ 9A88 08               ex af,af
 299+ 9A89 6F           	ld l,a
 300+ 9A8A 18 DD        	jr 6B
 301+ 9A8C
 302+ 9A8C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A8C
 304+ 9A8C 47           3 ld b,a
 305+ 9A8D 2A D1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A90 23           2 inc hl
 307+ 9A91 23           	inc hl
 308+ 9A92 10 FC        	djnz 2B
 309+ 9A94 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A97 C9           8 ret
 311+ 9A98
 312+ 9A98              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A98              ;
 314+ 9A98              ;	24/7/22
 315+ 9A98              ;
 316+ 9A98              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A98              ;
 318+ 9A98              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A98              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A98              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A98
 322+ 9A98 3A CD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A9B A7           	and a
 324+ 9A9C 20 1F        	jr nz,1F
 325+ 9A9E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AA0 32 CD 88         ld (CTRL_DESPLZ),a
 327+ 9AA3
 328+ 9AA3 21 C6 88     	ld hl,Columns
 329+ 9AA6 34           	inc (hl)
 330+ 9AA7 3A D9 88     	ld a,(Cuad_objeto)
 331+ 9AAA E6 01        	and 1
 332+ 9AAC 28 0F        	jr z,1F
 333+ 9AAE 2A C7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AB1 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AB2 22 C7 88     	ld (Posicion_actual),hl
 336+ 9AB5 CD A8 9C     	call Genera_coordenadas
 337+ 9AB8 CD 1D 9C     	call Inc_CTRL_DESPLZ
 338+ 9ABB 18 03        	jr 2F
 339+ 9ABD CD 1D 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AC0 C9           2 ret
 341+ 9AC1
 342+ 9AC1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AC1              ;
 344+ 9AC1              ;	24/7/22
 345+ 9AC1              ;
 346+ 9AC1              ;	Ciclo_completo.
 347+ 9AC1              ;
 348+ 9AC1              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AC1              ;
 350+ 9AC1              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AC1              ; 	Decrementamos (Columns).
 352+ 9AC1              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AC1              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AC1
 355+ 9AC1
 356+ 9AC1 3A CD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AC4 FE FF        	cp $ff
 358+ 9AC6 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AC8 E6 F0        	and $f0
 360+ 9ACA 20 28        	jr nz,3F
 361+ 9ACC
 362+ 9ACC              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9ACC
 364+ 9ACC 3A CD 88     	ld a,(CTRL_DESPLZ)
 365+ 9ACF 47           	ld b,a
 366+ 9AD0 3E F8        	ld a,$f8
 367+ 9AD2 80           	add b
 368+ 9AD3 32 CD 88     	ld (CTRL_DESPLZ),a
 369+ 9AD6 18 1C        	jr 3F
 370+ 9AD8 21 C6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9ADB 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9ADC AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9ADD 32 CD 88     	ld (CTRL_DESPLZ),a
 374+ 9AE0 3A D9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AE3 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AE5 20 0A        	jr nz,2F
 377+ 9AE7 2A C7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AEA 23           	inc hl
 379+ 9AEB 22 C7 88     	ld (Posicion_actual),hl
 380+ 9AEE CD A8 9C     	call Genera_coordenadas
 381+ 9AF1
 382+ 9AF1              ; Inicia el puntero de Sprite.
 383+ 9AF1
 384+ 9AF1 CD A6 8C     2 call Inicia_puntero_objeto_der
 385+ 9AF4 C9           3 ret
 386+ 9AF5
 387+ 9AF5              ; ******************************************************************************************************************************************************************************************
 388+ 9AF5              ;
 389+ 9AF5              ;	15/02/23
 390+ 9AF5              ;
 391+ 9AF5              ;	Mov_left.
 392+ 9AF5              ;
 393+ 9AF5              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9AF5              ;
 395+ 9AF5              Mov_left
 396+ 9AF5
 397+ 9AF5 21 EF 88     	ld hl,Ctrl_0
 398+ 9AF8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9AFA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9AFA              ; 																	; _ en el caso de que no lo haya.
 401+ 9AFA 3A EF 88     	ld a,(Ctrl_0)
 402+ 9AFD CB 77        	bit 6,a
 403+ 9AFF 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B01
 405+ 9B01 CD 17 9C     	call Stop_Amadeus_left
 406+ 9B04 C8           	ret z
 407+ 9B05 20 4A        	jr nz,8F
 408+ 9B07
 409+ 9B07 3A CB 88     11 ld a,(Coordenada_X)
 410+ 9B0A A7           	and a
 411+ 9B0B 20 44        	jr nz,8F
 412+ 9B0D
 413+ 9B0D 3A CD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B10 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B11 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B13
 417+ 9B13              ; ---------- ---------- ----------
 418+ 9B13
 419+ 9B13 3A DA 88     	ld a,(Vel_left)
 420+ 9B16 FE 02        	cp 2
 421+ 9B18 28 0F        	jr z,1F
 422+ 9B1A 38 04        	jr c,6F
 423+ 9B1C FE 04        	cp 4
 424+ 9B1E 28 12        	jr z,7F
 425+ 9B20
 426+ 9B20              ; ---------- ---------- ----------
 427+ 9B20
 428+ 9B20 3A CD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B23 FE F8        	cp $f8
 430+ 9B25 20 2A        	jr nz,8F
 431+ 9B27 18 10        	jr 4F
 432+ 9B29 3A CD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B2C FE F9        	cp $f9
 434+ 9B2E 20 21        	jr nz,8F
 435+ 9B30 18 07        	jr 4F
 436+ 9B32 3A CD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B35 FE FB        	cp $fb
 438+ 9B37 20 18        	jr nz,8F
 439+ 9B39
 440+ 9B39              ; ---------- ---------- ----------
 441+ 9B39
 442+ 9B39              4
 443+ 9B39 CD 3F 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B3C              ;	call Reinicio
 445+ 9B3C
 446+ 9B3C              ; ---------- ---------- ----------
 447+ 9B3C
 448+ 9B3C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B3E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B3F
 451+ 9B3F              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B3F              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B3F
 454+ 9B3F CD 58 9B     	call DESPLZ_IZQ
 455+ 9B42 C1           	pop bc
 456+ 9B43 10 F9        	djnz 5B
 457+ 9B45 2A C7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B48 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B49 22 C7 88     	ld (Posicion_actual),hl
 460+ 9B4C CD A8 9C     	call Genera_coordenadas
 461+ 9B4F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B51
 463+ 9B51              ; ---------- ---------- ----------
 464+ 9B51
 465+ 9B51              ; Movemos, no hay recolocación.
 466+ 9B51
 467+ 9B51 2A C7 88     8 ld hl,(Posicion_actual)
 468+ 9B54 CD 58 9B     	call DESPLZ_IZQ
 469+ 9B57 C9           2 ret
 470+ 9B58
 471+ 9B58              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B58              ;
 473+ 9B58              ;	22/9/22
 474+ 9B58
 475+ 9B58              DESPLZ_IZQ
 476+ 9B58
 477+ 9B58 CD 67 9B     	call Desplaza_izquierda
 478+ 9B5B CD B3 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B5E CD DB 9B     	call Ciclo_completo_2
 480+ 9B61 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B64 CB BE        	res 7,(hl)
 482+ 9B66 C9           	ret
 483+ 9B67
 484+ 9B67              Desplaza_izquierda
 485+ 9B67
 486+ 9B67 3A DA 88     	ld a,(Vel_left)
 487+ 9B6A 47           	ld b,a
 488+ 9B6B 2A D5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B6E 23           1 inc hl
 490+ 9B6F 23           	inc hl
 491+ 9B70 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B72 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B75 CD 8F 8C     	call Extrae_address
 494+ 9B78 22 C9 88     	ld (Puntero_objeto),hl
 495+ 9B7B
 496+ 9B7B              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B7B
 498+ 9B7B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B7B              ; Cuántos movimientos hemos hecho ??
 500+ 9B7B              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B7B
 502+ 9B7B 2A D1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B7E EB           	ex de,hl
 504+ 9B7F A7           	and a
 505+ 9B80 ED 52        	sbc hl,de
 506+ 9B82 CB 3D        	srl l
 507+ 9B84 3E 08        6 ld a,8
 508+ 9B86 95           	sub l
 509+ 9B87 30 1E        	jr nc,3F
 510+ 9B89
 511+ 9B89              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B89              ; B="0".
 513+ 9B89
 514+ 9B89 04           4 inc b
 515+ 9B8A 3C           	inc a
 516+ 9B8B 20 FC        	jr nz,4B
 517+ 9B8D 78           	ld a,b
 518+ 9B8E 08           	ex af,af
 519+ 9B8F 2A D1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B92 23           5 inc hl
 521+ 9B93 23           	inc hl
 522+ 9B94 10 FC        	djnz 5B
 523+ 9B96 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B99 CD 8F 8C     	call Extrae_address
 525+ 9B9C 22 C9 88     	ld (Puntero_objeto),hl
 526+ 9B9F
 527+ 9B9F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B9F              ; _(Posicion_actual).
 529+ 9B9F
 530+ 9B9F 21 C7 88     	ld hl,Posicion_actual
 531+ 9BA2 35           	dec (hl)
 532+ 9BA3 08           	ex af,af
 533+ 9BA4 6F           	ld l,a
 534+ 9BA5 18 DD        	jr 6B
 535+ 9BA7
 536+ 9BA7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BA7
 538+ 9BA7 47           3 ld b,a
 539+ 9BA8 2A CF 88     	ld hl,(Indice_Sprite_der)
 540+ 9BAB 23           2 inc hl
 541+ 9BAC 23           	inc hl
 542+ 9BAD 10 FC        	djnz 2B
 543+ 9BAF 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BB2 C9           8 ret
 545+ 9BB3
 546+ 9BB3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BB3              ;
 548+ 9BB3              ;	modifica_parametros_1er_DESPLZ
 549+ 9BB3              ;
 550+ 9BB3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BB3              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BB3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BB3
 554+ 9BB3 3A CD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BB6 A7           	and a
 556+ 9BB7 20 1E        	jr nz,1F
 557+ 9BB9 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BBA 32 CD 88         ld (CTRL_DESPLZ),a
 559+ 9BBD 21 C6 88     	ld hl,Columns
 560+ 9BC0 34           	inc (hl)
 561+ 9BC1 3A D9 88     	ld a,(Cuad_objeto)
 562+ 9BC4 E6 01        	and 1
 563+ 9BC6 20 0F        	jr nz,1F
 564+ 9BC8 2A C7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BCB 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BCC 22 C7 88     	ld (Posicion_actual),hl
 567+ 9BCF CD A8 9C     	call Genera_coordenadas
 568+ 9BD2 CD 2E 9C     	call Dec_CTRL_DESPLZ
 569+ 9BD5 18 03        	jr 2F
 570+ 9BD7 CD 2E 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BDA C9           2 ret
 572+ 9BDB
 573+ 9BDB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BDB
 575+ 9BDB 3A CD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BDE FE F7        	cp $f7
 577+ 9BE0 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BE2 30 2C        	jr nc,3F
 579+ 9BE4
 580+ 9BE4              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BE4
 582+ 9BE4 06 00        	ld b,0
 583+ 9BE6 04           4 inc b
 584+ 9BE7 3C           	inc a
 585+ 9BE8 FE F7        	cp $f7
 586+ 9BEA 20 FA        	jr nz,4B
 587+ 9BEC 3E FF        	ld a,$ff
 588+ 9BEE 90           	sub b
 589+ 9BEF 32 CD 88     	ld (CTRL_DESPLZ),a
 590+ 9BF2 18 1C        	jr 3F
 591+ 9BF4
 592+ 9BF4              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9BF4
 594+ 9BF4 21 C6 88     1 ld hl,Columns
 595+ 9BF7 35           	dec (hl)
 596+ 9BF8 AF           	xor a
 597+ 9BF9 32 CD 88     	ld (CTRL_DESPLZ),a
 598+ 9BFC 3A D9 88     	ld a,(Cuad_objeto)
 599+ 9BFF E6 01        	and 1
 600+ 9C01 28 0A        	jr z,2F
 601+ 9C03 2A C7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C06 2B           	dec hl
 603+ 9C07 22 C7 88     	ld (Posicion_actual),hl
 604+ 9C0A CD A8 9C     	call Genera_coordenadas
 605+ 9C0D
 606+ 9C0D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C0D
 608+ 9C0D CD B9 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C10 C9           3 ret
 610+ 9C11
 611+ 9C11              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C11              ;
 613+ 9C11              ;	19/10/22
 614+ 9C11              ;
 615+ 9C11              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C11              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C11
 618+ 9C11 3A CB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C14 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C16 C9           	ret
 621+ 9C17
 622+ 9C17              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C17              ;
 624+ 9C17              ;	19/10/22
 625+ 9C17              ;
 626+ 9C17              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C17              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C17
 629+ 9C17 3A CB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C1A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C1C C9           	ret
 632+ 9C1D
 633+ 9C1D              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C1D              ;
 635+ 9C1D              ;	24/7/22
 636+ 9C1D              ;
 637+ 9C1D              ;	Inc_CTRL_DESPLZ
 638+ 9C1D              ;
 639+ 9C1D              ;
 640+ 9C1D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C1D
 642+ 9C1D 21 CD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C20 3A DB 88     	ld a,(Vel_right)
 644+ 9C23 A7           	and a
 645+ 9C24 28 06        	jr z,1F
 646+ 9C26 47           	ld b,a
 647+ 9C27 34           3 inc (hl)
 648+ 9C28 10 FD        	djnz 3B
 649+ 9C2A 18 01        	jr 2F
 650+ 9C2C 34           1 inc (hl)
 651+ 9C2D C9           2 ret
 652+ 9C2E
 653+ 9C2E              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C2E              ;
 655+ 9C2E              ;	5/2/23
 656+ 9C2E              ;
 657+ 9C2E              ;	Dec_CTRL_DESPLZ
 658+ 9C2E              ;
 659+ 9C2E              ;
 660+ 9C2E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C2E
 662+ 9C2E 21 CD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C31 3A DA 88     	ld a,(Vel_left)
 664+ 9C34 A7           	and a
 665+ 9C35 28 06        	jr z,1F
 666+ 9C37 47           	ld b,a
 667+ 9C38 35           3 dec (hl)
 668+ 9C39 10 FD        	djnz 3B
 669+ 9C3B 18 01        	jr 2F
 670+ 9C3D 35           1 dec (hl)
 671+ 9C3E C9           2 ret
 672+ 9C3F
 673+ 9C3F              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C3F
 675+ 9C3F 2A C7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C42 01 1F 00     	ld bc,31
 677+ 9C45 A7           	and a
 678+ 9C46 ED 4A        	adc hl,bc
 679+ 9C48 22 C7 88     	ld (Posicion_actual),hl
 680+ 9C4B 21 EF 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C4E CB C6        	set 0,(hl)
 682+ 9C50 C9           	ret
 683+ 9C51
 684+ 9C51              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C51
 686+ 9C51 2A C7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C54 01 1F 00     	ld bc,31
 688+ 9C57 A7           	and a
 689+ 9C58 ED 42        	sbc hl,bc
 690+ 9C5A 22 C7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C5D 21 EF 88     	ld hl,Ctrl_0
 692+ 9C60 CB CE        	set 1,(hl)
 693+ 9C62 C9           	ret
 694+ 9C63
 695+ 9C63              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C63
 697+ 9C63 24           Reaparece_abajo inc h
 698+ 9C64 01 E0 17     	ld bc,$17e0
 699+ 9C67 A7           	and a
 700+ 9C68 ED 4A        	adc hl,bc
 701+ 9C6A 22 C7 88     	ld (Posicion_actual),hl
 702+ 9C6D 21 EF 88     	ld hl,Ctrl_0
 703+ 9C70 CB D6        	set 2,(hl)
 704+ 9C72 C9           	ret
 705+ 9C73
 706+ 9C73              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C73
 708+ 9C73 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C76 A7           	and a
 710+ 9C77 ED 42        	sbc hl,bc
 711+ 9C79 22 C7 88     	ld (Posicion_actual),hl
 712+ 9C7C 21 EF 88     	ld hl,Ctrl_0
 713+ 9C7F CB DE        	set 3,(hl)
 714+ 9C81 C9           	ret
 715+ 9C82
 716+ 9C82              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C82              ;
 718+ 9C82              ;	15/07/23
 719+ 9C82
 720+ 9C82              Reinicio
 721+ 9C82
 722+ 9C82              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C82
 724+ 9C82 AF           	xor a
 725+ 9C83 21 F4 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C86 CD A4 9C     	call Limpia_contenido_hl
 727+ 9C89
 728+ 9C89 21 C7 88     	ld hl,Posicion_actual
 729+ 9C8C CD A4 9C     	call Limpia_contenido_hl
 730+ 9C8F
 731+ 9C8F CD D4 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C92 CD 5E 9F     	call Inicia_Puntero_mov
 733+ 9C95
 734+ 9C95 21 F6 88     	ld hl,Incrementa_puntero
 735+ 9C98 06 05        	ld b,5
 736+ 9C9A 77           1 ld (hl),a
 737+ 9C9B 23           	inc hl
 738+ 9C9C 10 FC        	djnz 1B
 739+ 9C9E
 740+ 9C9E 21 00 89     	ld hl,Ctrl_2
 741+ 9CA1 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CA3
 743+ 9CA3 C9           	ret
 744+ 9CA4
 745+ 9CA4 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CA5 23           	inc hl
 747+ 9CA6 77           	ld (hl),a
 748+ 9CA7 C9           	ret
 749+ 9CA8
 750+ 9CA8
# file closed: Direcciones.asm
1670  9CA8              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CA8              ; ------------------------------------------------------------------------
   2+ 9CA8              ;
   3+ 9CA8              ;	02/04/23
   4+ 9CA8              ;
   5+ 9CA8              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CA8              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CA8              ;
   8+ 9CA8              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CA8              ;
  10+ 9CA8              ;	Modifica: A,BC y DE.
  11+ 9CA8
  12+ 9CA8 C5           Genera_coordenadas push bc
  13+ 9CA9 E5           	push hl
  14+ 9CAA D5           	push de
  15+ 9CAB
  16+ 9CAB 2A C7 88     	ld hl,(Posicion_actual)
  17+ 9CAE
  18+ 9CAE 7D           	ld a,l
  19+ 9CAF E6 1F        	and $1f
  20+ 9CB1 32 CB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CB4
  22+ 9CB4 CD 1D 99     	call calcula_tercio
  23+ 9CB7 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CB8
  25+ 9CB8 1E 00        	ld e,0
  26+ 9CBA 7D           	ld a,l
  27+ 9CBB E6 E0        	and $e0
  28+ 9CBD 28 01        	jr z,1F
  29+ 9CBF 04           	inc b
  30+ 9CC0
  31+ 9CC0 04           1 inc b
  32+ 9CC1 05           	dec b
  33+ 9CC2 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CC4              ;														; _ , salimos.
  35+ 9CC4 1C           3 inc e
  36+ 9CC5 D6 20        	sub 32
  37+ 9CC7 20 FB        	jr nz,3B
  38+ 9CC9 10 F5        	djnz 1B
  39+ 9CCB
  40+ 9CCB 7B           2 ld a,e
  41+ 9CCC 32 CC 88     	ld (Coordenada_y),a
  42+ 9CCF
  43+ 9CCF D1           	pop de
  44+ 9CD0 E1           	pop hl
  45+ 9CD1 C1           	pop bc
  46+ 9CD2
  47+ 9CD2 C9           	ret
  48+ 9CD3
  49+ 9CD3              ; ------------------------------------------------------------------------
  50+ 9CD3              ;	28/05/23
  51+ 9CD3              ;
  52+ 9CD3              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CD3              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CD3              ;
  55+ 9CD3              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CD3              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CD3              ;
  58+ 9CD3              ;		DE="$120d"
  59+ 9CD3              ;
  60+ 9CD3              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CD3              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CD3              ;
  63+ 9CD3              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CD3
  65+ 9CD3              ;	Modifica: A,BC y DE.
  66+ 9CD3
  67+ 9CD3
  68+ 9CD3              Genera_coordenadas_disparo
  69+ 9CD3
  70+ 9CD3              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CD3
  72+ 9CD3 7D           	ld a,l
  73+ 9CD4 E6 1F        	and $1f
  74+ 9CD6 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CD7 CD 1D 99     	call calcula_tercio
  76+ 9CDA 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CDB 1E 00        	ld e,0
  78+ 9CDD 7D           	ld a,l
  79+ 9CDE E6 E0        	and $e0
  80+ 9CE0 28 01        	jr z,1F
  81+ 9CE2 04           	inc b
  82+ 9CE3 1C           1 inc e
  83+ 9CE4 D6 20        	sub 32
  84+ 9CE6 20 FB        	jr nz,1B
  85+ 9CE8 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CEA C9           	ret
  87+ 9CEB
# file closed: Genera_coordenadas.asm
1671  9CEB              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9CEB              ; Relojes y temporizaciones.
   2+ 9CEB
   3+ 9CEB              ; ------------------------------------------------------
   4+ 9CEB              ;
   5+ 9CEB              ;	16/7/23
   6+ 9CEB              ;
   7+ 9CEB              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9CEB              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9CEB              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9CEB              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9CEB              ;
  12+ 9CEB              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9CEB              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9CEB
  15+ 9CEB              ; Disparo_entidad db 1
  16+ 9CEB              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9CEB              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9CEB
  19+ 9CEB              Habilita_disparos
  20+ 9CEB
  21+ 9CEB 7E           	ld a,(hl)
  22+ 9CEC A7           	and a
  23+ 9CED C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9CEE
  25+ 9CEE EB           	ex de,hl
  26+ 9CEF
  27+ 9CEF 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9CF0 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9CF1
  30+ 9CF1              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9CF1
  32+ 9CF1 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9CF2 7E           	ld a,(hl)
  34+ 9CF3 23           	inc hl
  35+ 9CF4 77           	ld (hl),a
  36+ 9CF5
  37+ 9CF5 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9CF6 3E 01        	ld a,1
  39+ 9CF8 77           	ld (hl),a
  40+ 9CF9 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1672  9CFA              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CFA
   2+ 9CFA
   3+ 9CFA              ;   07/07/23
   4+ 9CFA              ;
   5+ 9CFA              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CFA              ;
   7+ 9CFA              ;   Codificación:
   8+ 9CFA              ;
   9+ 9CFA              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CFA              ;
  11+ 9CFA              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CFA              ;
  13+ 9CFA              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CFA              ;
  15+ 9CFA              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CFA              ;
  17+ 9CFA              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CFA              ;                               ..... %01000010 Vel_up 4
  19+ 9CFA              ;                                               Vel_down 2
  20+ 9CFA              ;                               ..... $42
  21+ 9CFA              ;
  22+ 9CFA              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CFA              ;
  24+ 9CFA              ;                               ..... %01000010 Vel_left 4
  25+ 9CFA              ;                                               Vel_right 2
  26+ 9CFA              ;                               ..... $42
  27+ 9CFA              ;
  28+ 9CFA              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CFA              ;
  30+ 9CFA              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CFA              ;
  32+ 9CFA              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CFA              ;
  34+ 9CFA              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CFA              ;                                     $53
  36+ 9CFA              ;
  37+ 9CFA              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CFA              ;
  39+ 9CFA              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CFA              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CFA              ;
  42+ 9CFA              ;                       Arriba ..... $81
  43+ 9CFA              ;                       Arriba - izquierda ..... $a1
  44+ 9CFA              ;                       Arriba - derecha ..... $91
  45+ 9CFA              ;
  46+ 9CFA              ;                       Abajo ..... $41
  47+ 9CFA              ;                       Abajo - izquierda ..... $61
  48+ 9CFA              ;                       Abajo - derecha ..... $51
  49+ 9CFA              ;
  50+ 9CFA              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CFA              ;
  52+ 9CFA              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CFA              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CFA              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CFA              ;
  56+ 9CFA              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CFA              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CFA              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CFA              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CFA              ;
  61+ 9CFA              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CFA              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CFA              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CFA              ;
  65+ 9CFA              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CFA              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CFA              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CFA              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CFA
  70+ 9CFA              ; ----- ----- ----- ----- -----
  71+ 9CFA
  72+ 9CFA 26 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CFC 2E 9D            defw F_1
  74+ 9CFE 38 9D            defw F_2
  75+ 9D00 42 9D            defw Codo_abajo_derecha
  76+ 9D02 76 9D            defw Derecha_y_subiendo
  77+ 9D04 80 9D            defw Derecha_y_subiendo_1
  78+ 9D06 8A 9D            defw F_3
  79+ 9D08 94 9D            defw F_4
  80+ 9D0A 9E 9D            defw Derecha_y_bajando
  81+ 9D0C A8 9D            defw Derecha_y_bajando_1
  82+ 9D0E B2 9D            defw Derecha_y_bajando_2
  83+ 9D10 BC 9D            defw Codo_derecha_abajo
  84+ 9D12 EC 9D            defw Codo_abajo_izq.
  85+ 9D14 20 9E            defw Izquierda_y_subiendo
  86+ 9D16 2A 9E            defw Izquierda_y_subiendo_1
  87+ 9D18 34 9E            defw F_5
  88+ 9D1A 3E 9E            defw F_6
  89+ 9D1C 48 9E            defw Izquierda_y_bajando
  90+ 9D1E 52 9E            defw Izquierda_y_bajando_1
  91+ 9D20 5C 9E            defw Izquierda_y_bajando_2
  92+ 9D22 66 9E            defw Codo_izquierda_abajo
  93+ 9D24 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D26
  95+ 9D26 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D2A 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D2E
  98+ 9D2E 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D32 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D36 08 00
 100+ 9D38 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D3C 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D40 0F FE
 102+ 9D42
 103+ 9D42 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D46 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D4A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D4E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D52 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D56 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D5A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D5E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D62 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D66 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D6A 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D6E 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D72 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D76
 117+ 9D76 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D7A 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D7E 06 00
 119+ 9D80
 120+ 9D80 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D84 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D88 02 00
 122+ 9D8A
 123+ 9D8A 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D8E 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D92 04 00
 125+ 9D94 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D98 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D9C 08 00
 127+ 9D9E
 128+ 9D9E 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DA2 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DA6 02 00
 130+ 9DA8
 131+ 9DA8 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DAC 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DB0 06 00
 133+ 9DB2
 134+ 9DB2 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DB6 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DBA 06 00
 136+ 9DBC
 137+ 9DBC              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DBC
 139+ 9DBC 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DC0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DC4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DC8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DCC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DD0 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DD4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DD8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DDC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DE0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DE4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DE8 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DEC
 152+ 9DEC 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DF0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DF4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DF8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9DFC 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E00 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E04 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E08 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E0C 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E10 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E14 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E18 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E1C 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E20
 166+ 9E20 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E24 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E28 06 00
 168+ 9E2A
 169+ 9E2A 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E2E 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E32 02 00
 171+ 9E34
 172+ 9E34 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E38 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E3C 04 00
 174+ 9E3E 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E42 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E46 08 00
 176+ 9E48
 177+ 9E48 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E4C 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E50 02 00
 179+ 9E52
 180+ 9E52 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E56 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E5A 06 00
 182+ 9E5C
 183+ 9E5C 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E60 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E64 06 00
 185+ 9E66
 186+ 9E66 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E6A 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E6E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E72 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E76 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E7A 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E7E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E82 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E86 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E8A 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E8E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E92 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E96
 199+ 9E96              ; ----- ----- ----- ----- -----
 200+ 9E96              ;
 201+ 9E96              ;   27/06/23
 202+ 9E96
 203+ 9E96              Movimiento
 204+ 9E96
 205+ 9E96              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E96
 207+ 9E96              ;    ld hl,(Posicion_actual)
 208+ 9E96
 209+ 9E96 3A 00 89         ld a,(Ctrl_2)
 210+ 9E99 CB 57            bit 2,a
 211+ 9E9B 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E9D
 213+ 9E9D 2A F2 88         ld hl,(Puntero_mov)
 214+ 9EA0 7E               ld a,(hl)
 215+ 9EA1
 216+ 9EA1              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EA1
 218+ 9EA1              Inicia_desplazamiento.
 219+ 9EA1
 220+ 9EA1              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EA1
 222+ 9EA1 CD 95 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EA4
 224+ 9EA4              ; Iniciamos (Repetimos_mov).
 225+ 9EA4
 226+ 9EA4 7E               ld a,(hl)
 227+ 9EA5 E6 0F            and $0f
 228+ 9EA7 32 F8 88         ld (Repetimos_desplazamiento),a
 229+ 9EAA 32 F9 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EAD
 231+ 9EAD              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EAD
 233+ 9EAD 23               inc hl
 234+ 9EAE 7E               ld a,(hl)
 235+ 9EAF 32 FB 88         ld (Cola_de_desplazamiento),a
 236+ 9EB2 2B               dec hl
 237+ 9EB3
 238+ 9EB3 21 00 89         ld hl,Ctrl_2
 239+ 9EB6 CB D6            set 2,(hl)
 240+ 9EB8
 241+ 9EB8              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EB8              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EB8
 244+ 9EB8              Desplazamiento_iniciado
 245+ 9EB8
 246+ 9EB8 CD 69 9F         call Aplica_desplazamiento
 247+ 9EBB
 248+ 9EBB 3A 00 89         ld a,(Ctrl_2)
 249+ 9EBE CB 67            bit 4,a
 250+ 9EC0 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EC1
 252+ 9EC1 21 F8 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EC4 35               dec (hl)
 254+ 9EC5 C0               ret nz
 255+ 9EC6
 256+ 9EC6              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EC6              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EC6              ; Analiza (Cola_de_desplazamiento).
 259+ 9EC6
 260+ 9EC6 3A FB 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EC9 A7               and a
 262+ 9ECA CC BE 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9ECD 28 30            jr z,Reinicia_el_movimiento
 264+ 9ECF
 265+ 9ECF FE FF            cp $ff
 266+ 9ED1 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9ED3
 268+ 9ED3 FE FE            cp $fe
 269+ 9ED5 CC 42 9F         call z,Fijamos_bucle
 270+ 9ED8 28 25            jr z,Reinicia_el_movimiento
 271+ 9EDA
 272+ 9EDA FE FD            cp $fd
 273+ 9EDC 20 11            jr nz,1F
 274+ 9EDE
 275+ 9EDE              ; ---
 276+ 9EDE              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EDE
 278+ 9EDE 3A 00 89         ld a,(Ctrl_2)
 279+ 9EE1 CB 5F            bit 3,a
 280+ 9EE3 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EE5
 282+ 9EE5              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EE5
 284+ 9EE5 21 00 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EE8 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EEA
 287+ 9EEA CD 53 9F         call Inicia_Repetimos_movimiento
 288+ 9EED 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EEF              ; ---
 290+ 9EEF
 291+ 9EEF FE 01        1 cp 1
 292+ 9EF1 CA 2C 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9EF4
 294+ 9EF4 3D               dec a
 295+ 9EF5 32 FB 88         ld (Cola_de_desplazamiento),a
 296+ 9EF8
 297+ 9EF8 3A F9 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9EFB 32 F8 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9EFE              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9EFE C9               ret
 301+ 9EFF
 302+ 9EFF              Reinicia_el_movimiento
 303+ 9EFF
 304+ 9EFF 3A 00 89         ld a,(Ctrl_2)
 305+ 9F02 CB 5F            bit 3,a
 306+ 9F04 28 1B            jr z,2F
 307+ 9F06
 308+ 9F06              ; (Cola_de_desplazamiento)="254".
 309+ 9F06
 310+ 9F06 21 FA 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F09 35               dec (hl)
 312+ 9F0A 20 15            jr nz,2F
 313+ 9F0C
 314+ 9F0C              ; Fin de las repeticiones del último movimiento.
 315+ 9F0C
 316+ 9F0C 21 00 89         ld hl,Ctrl_2
 317+ 9F0F CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F11
 319+ 9F11 2A F2 88         ld hl,(Puntero_mov)
 320+ 9F14 23               inc hl
 321+ 9F15 23               inc hl
 322+ 9F16 23               inc hl
 323+ 9F17 22 F2 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F1A              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F1A 7E               ld a,(hl)
 326+ 9F1B 32 FB 88         ld (Cola_de_desplazamiento),a
 327+ 9F1E
 328+ 9F1E C3 C6 9E         jp Cola
 329+ 9F21
 330+ 9F21 CD 5E 9F     2 call Inicia_Puntero_mov
 331+ 9F24
 332+ 9F24 21 00 89         ld hl,Ctrl_2
 333+ 9F27 CB 96            res 2,(hl)
 334+ 9F29
 335+ 9F29 C3 96 9E         jp Movimiento
 336+ 9F2C
 337+ 9F2C              Siguiente_desplazamiento
 338+ 9F2C
 339+ 9F2C              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F2C              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F2C
 342+ 9F2C 21 00 89         ld hl,Ctrl_2
 343+ 9F2F CB 96            res 2,(hl)
 344+ 9F31
 345+ 9F31 2A F2 88         ld hl,(Puntero_mov)
 346+ 9F34 23               inc hl
 347+ 9F35 23               inc hl
 348+ 9F36 22 F2 88         ld (Puntero_mov),hl
 349+ 9F39
 350+ 9F39 7E               ld a,(hl)
 351+ 9F3A A7               and a
 352+ 9F3B CC BE 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F3E CA FF 9E         jp z,Reinicia_el_movimiento
 354+ 9F41
 355+ 9F41 C9               ret
 356+ 9F42              ; Subrutinas -----------------------------------------
 357+ 9F42              ; ---------- --------- --------- ---------- ----------
 358+ 9F42              ;
 359+ 9F42              ;   24/07/23
 360+ 9F42              ;
 361+ 9F42              ;   Fijamos_bucle
 362+ 9F42              ;
 363+ 9F42              ;
 364+ 9F42
 365+ 9F42              Fijamos_bucle
 366+ 9F42
 367+ 9F42 3A F6 88         ld a,(Incrementa_puntero)
 368+ 9F45 3C               inc a
 369+ 9F46 32 F7 88         ld (Incrementa_puntero_backup),a
 370+ 9F49
 371+ 9F49 CD BE 9F         call Incrementa_Puntero_indice_mov
 372+ 9F4C 2A F0 88         ld hl,(Puntero_indice_mov)
 373+ 9F4F 22 F4 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F52 C9               ret
 375+ 9F53
 376+ 9F53              ; ---------- --------- --------- ---------- ----------
 377+ 9F53              ;
 378+ 9F53              ;   07/7/23
 379+ 9F53              ;
 380+ 9F53              ;   Inicia_Repetimos_movimiento
 381+ 9F53              ;
 382+ 9F53              ;
 383+ 9F53
 384+ 9F53              Inicia_Repetimos_movimiento
 385+ 9F53
 386+ 9F53              ; Iniciamos (Repetimos_movimiento).
 387+ 9F53
 388+ 9F53 DD 2A F2 88      ld ix,(Puntero_mov)
 389+ 9F57 DD 7E 02         ld a,(ix+2)
 390+ 9F5A 32 FA 88         ld (Repetimos_movimiento),a
 391+ 9F5D
 392+ 9F5D C9               ret
 393+ 9F5E
 394+ 9F5E              ; ---------- --------- --------- ---------- ----------
 395+ 9F5E              ;
 396+ 9F5E              ;   26/6/23
 397+ 9F5E              ;
 398+ 9F5E              ;   Inicia_Puntero_mov
 399+ 9F5E              ;
 400+ 9F5E              ;
 401+ 9F5E
 402+ 9F5E 2A F0 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F61 5E               ld e,(hl)
 404+ 9F62 23               inc hl
 405+ 9F63 56               ld d,(hl)
 406+ 9F64 EB               ex de,hl
 407+ 9F65 22 F2 88         ld (Puntero_mov),hl
 408+ 9F68 C9               ret
 409+ 9F69
 410+ 9F69              ; ---------- --------- --------- ---------- ----------
 411+ 9F69              ;
 412+ 9F69              ;   27/06/23
 413+ 9F69              ;
 414+ 9F69              ;   Aplica_movimiento.
 415+ 9F69
 416+ 9F69              Aplica_desplazamiento
 417+ 9F69
 418+ 9F69              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F69
 420+ 9F69 2A F2 88         ld hl, (Puntero_mov)
 421+ 9F6C
 422+ 9F6C 7E               ld a,(hl)
 423+ 9F6D E6 F0            and $f0
 424+ 9F6F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F70
 426+ 9F70 CB 7E            bit 7,(hl)
 427+ 9F72 28 03            jr z,1F
 428+ 9F74 CD 94 99         call Mov_up
 429+ 9F77 2A F2 88     1 ld hl, (Puntero_mov)
 430+ 9F7A CB 76            bit 6,(hl)
 431+ 9F7C 28 03            jr z,2F
 432+ 9F7E CD 63 99         call Mov_down
 433+ 9F81 2A F2 88     2 ld hl, (Puntero_mov)
 434+ 9F84 CB 6E            bit 5,(hl)
 435+ 9F86 28 03            jr z,3F
 436+ 9F88 CD F5 9A         call Mov_left
 437+ 9F8B 2A F2 88     3 ld hl, (Puntero_mov)
 438+ 9F8E CB 66            bit 4,(hl)
 439+ 9F90 C8               ret z
 440+ 9F91 CD D7 99         call Mov_right
 441+ 9F94 C9               ret
 442+ 9F95
 443+ 9F95              ; ---------- --------- --------- ---------- ----------
 444+ 9F95              ;
 445+ 9F95              ;   26/06/23
 446+ 9F95              ;
 447+ 9F95              ;   Ajusta_velocidad_desplazamiento.
 448+ 9F95
 449+ 9F95              Ajusta_velocidad_desplazamiento
 450+ 9F95
 451+ 9F95              ; 1er byte de la cadena de movimiento.
 452+ 9F95              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9F95
 454+ 9F95 CD B3 9F         call Extrae_nibble_alto
 455+ 9F98
 456+ 9F98 32 DC 88         ld (Vel_up),a
 457+ 9F9B 79               ld a,c
 458+ 9F9C E6 0F            and $0f
 459+ 9F9E 32 DD 88         ld (Vel_down),a
 460+ 9FA1
 461+ 9FA1              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FA1              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FA1
 464+ 9FA1 23               inc hl
 465+ 9FA2 CD B3 9F         call Extrae_nibble_alto
 466+ 9FA5
 467+ 9FA5 32 DA 88         ld (Vel_left),a
 468+ 9FA8 79               ld a,c
 469+ 9FA9 E6 0F            and $0f
 470+ 9FAB 32 DB 88         ld (Vel_right),a
 471+ 9FAE
 472+ 9FAE              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FAE
 474+ 9FAE 23               inc hl
 475+ 9FAF 22 F2 88         ld (Puntero_mov),hl
 476+ 9FB2 C9               ret
 477+ 9FB3
 478+ 9FB3 06 04        Extrae_nibble_alto ld b,4
 479+ 9FB5 7E               ld a,(hl)
 480+ 9FB6 4F               ld c,a
 481+ 9FB7 E6 F0            and $f0
 482+ 9FB9 CB 3F        1 srl a
 483+ 9FBB 10 FC            djnz 1B
 484+ 9FBD C9               ret
 485+ 9FBE
 486+ 9FBE              ; ---------- --------- --------- ---------- ----------
 487+ 9FBE              ;
 488+ 9FBE              ;   5/7/23
 489+ 9FBE              ;
 490+ 9FBE              ;   Incrementa_Puntero_indice_mov
 491+ 9FBE
 492+ 9FBE              Incrementa_Puntero_indice_mov
 493+ 9FBE
 494+ 9FBE 21 F6 88         ld hl,Incrementa_puntero
 495+ 9FC1 34               inc (hl)
 496+ 9FC2
 497+ 9FC2 2A F0 88         ld hl,(Puntero_indice_mov)
 498+ 9FC5 01 02 00         ld bc,2
 499+ 9FC8 A7               and a
 500+ 9FC9 09               add hl,bc
 501+ 9FCA 22 F0 88         ld (Puntero_indice_mov),hl
 502+ 9FCD
 503+ 9FCD 7E               ld a,(hl)
 504+ 9FCE A7               and a
 505+ 9FCF
 506+ 9FCF              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FCF
 508+ 9FCF              ;    jr z,$
 509+ 9FCF
 510+ 9FCF              ;! Reinicia el Patrón de movimiento.
 511+ 9FCF
 512+ 9FCF CC D4 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FD2
 514+ 9FD2 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FD3
 516+ 9FD3 C9               ret
 517+ 9FD4
 518+ 9FD4
 519+ 9FD4              ; ---------- --------- --------- ---------- ----------
 520+ 9FD4              ;
 521+ 9FD4              ;   24/07/23
 522+ 9FD4              ;
 523+ 9FD4              ;   Inicializa_Puntero_indice_mov
 524+ 9FD4
 525+ 9FD4              Inicializa_Puntero_indice_mov
 526+ 9FD4
 527+ 9FD4              ; Existe etiqueta de bucle principal???
 528+ 9FD4
 529+ 9FD4 2A F4 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FD7 24               inc h
 531+ 9FD8 25               dec h
 532+ 9FD9 28 05            jr z,2F
 533+ 9FDB
 534+ 9FDB 22 F0 88         ld (Puntero_indice_mov),hl
 535+ 9FDE 18 14            jr 3F
 536+ 9FE0
 537+ 9FE0              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ 9FE0
 539+ 9FE0 3A F6 88     2 ld a,(Incrementa_puntero)
 540+ 9FE3 47               ld b,a
 541+ 9FE4
 542+ 9FE4 2A F0 88         ld hl,(Puntero_indice_mov)
 543+ 9FE7 2B           1 dec hl
 544+ 9FE8 2B               dec hl
 545+ 9FE9 10 FC            djnz 1B
 546+ 9FEB 22 F0 88         ld (Puntero_indice_mov),hl
 547+ 9FEE
 548+ 9FEE AF               xor a
 549+ 9FEF 32 F6 88         ld (Incrementa_puntero),a
 550+ 9FF2 18 06            jr 4F
 551+ 9FF4
 552+ 9FF4 3A F7 88     3 ld a,(Incrementa_puntero_backup)
 553+ 9FF7 32 F6 88         ld (Incrementa_puntero),a
 554+ 9FFA C9           4 ret
 555+ 9FFB
 556+ 9FFB
 557+ 9FFB
# file closed: Patrones_de_mov.asm
1673  9FFB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FFB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FFB              ;
   3+ 9FFB              ;	27/10/23
   4+ 9FFB              ;
   5+ 9FFB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FFB
   7+ 9FFB              ;	ADC HL,SP	LD (addr),SP
   8+ 9FFB              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FFB              ;	ADD IX,SP	LD SP,nn
  10+ 9FFB              ; 	ADD IY,SP	LD SP,HL
  11+ 9FFB              ;				LD SP,IX
  12+ 9FFB              ;	DEC SP		LD SP,IY
  13+ 9FFB
  14+ 9FFB              ;	EX (SP),HL
  15+ 9FFB              ;	EX (SP),IX
  16+ 9FFB              ;	EX (SP),IY
  17+ 9FFB
  18+ 9FFB              ;	INC SP
  19+ 9FFB
  20+ 9FFB                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 13 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 E5 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A 02 89         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 1B 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A EF 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 21 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A 19 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A 02 89         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 1B 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A EF 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 21 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B 13 89      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 19 89     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B 13 89  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 107+ 7FFC
 108+ 7FFC 5D               ld e,l
 109+ 7FFD 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 110+ 7FFE
 111+ 7FFE 2A 37 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 112+ 8001 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 113+ 8002 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 114+ 8003 72               ld (hl),d                                     ; _ álbum a otro.
 115+ 8004 FB               ei
 116+ 8005 C9               ret
 117+ 8006
 118+ 8006              ; ------------------------------------------------
 119+ 8006              ;
 120+ 8006              ;   8/11/23
 121+ 8006              ;
 122+ 8006              ;   La rutina estará situada justo después de:
 123+ 8006              ;   Almacen_de_parametros_DRAW equ $72bd ; ($72bd - $72fa) ; 61 bytes.
 124+ 8006
 125+ 8006              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 126+ 8006              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 127+ 8006
 128+ 8006                  org $72fb
 129+ 72FB
 130+ 72FB              Gestiona_albumes_de_fotos ; 14
 131+ 72FB
 132+ 72FB              ;! Recolocacion.
 133+ 72FB
 134+ 72FB              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 135+ 72FB              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 136+ 72FB
 137+ 72FB 3A 3C 89         ld a,(Ctrl_Semaforo)
 138+ 72FE CB 47            bit 0,a
 139+ 7300 28 62            jr z,7F
 140+ 7302
 141+ 7302              ; Doble recolocación ???. Album_de_fotos_2 y Album_de_fotos_1 vacíos ???
 142+ 7302
 143+ 7302 CB 5F            bit 3,a
 144+ 7304 28 1E            jr z,13F
 145+ 7306
 146+ 7306
 147+ 7306              ; DOBLE RECOLOCACIÓN. ----------- ------------ -----------
 148+ 7306
 149+ 7306              ; Album_de_fotos_1 y Album_de_fotos_2 están vacío pero ... Está Album_de_fotos_3 completo ???
 150+ 7306
 151+ 7306 3A 3B 89         ld a,(Semaforo)
 152+ 7309 CB 5F            bit 3,a
 153+ 730B 28 57            jr z,7F                     ;   No podemos hacer la doble recolocación!!! Album_de_fotos_3 está incompleto.
 154+ 730D
 155+ 730D              ; Volcamos Álbum_3 a Álbum_2
 156+ 730D              ;    ""    Álbum_2 a Álbum_1
 157+ 730D              ; Situamos (Stack_snapshot) al comienzo de Album_de_fotos_2.
 158+ 730D              ; Actualizamos (Semaforo)
 159+ 730D              ; Inicializamos (Ctrl_Semaforo)
 160+ 730D              ; Saltamos a 7F.
 161+ 730D
 162+ 730D CD E1 73         call Album3_a_Album2
 163+ 7310 CD 08 74         call Album2_a_Album1
 164+ 7313 CD 63 74         call Actualiza_punteros_de_albumes
 165+ 7316 CD 55 73         call Modifica_Stack_snapshot
 166+ 7319 21 3B 89     	ld hl,Semaforo
 167+ 731C CB 0E        	rrc (hl)
 168+ 731E AF               xor a
 169+ 731F 32 3C 89         ld (Ctrl_Semaforo),a
 170+ 7322 18 40            jr 7F
 171+ 7324
 172+ 7324              ; ------------ ---------------- ------------
 173+ 7324
 174+ 7324              ;   RECOLOCACIÓN SIMPLE.
 175+ 7324
 176+ 7324              ;   Album3_a_Album2 ?????
 177+ 7324
 178+ 7324 CB 4F        13 bit 1,a
 179+ 7326 20 0A            jr nz,10F
 180+ 7328
 181+ 7328              ;   Álbum_1 vacío.
 182+ 7328
 183+ 7328              ; Album_de_fotos_1 está vacío. Se ha completado Album_de_fotos_2 para volcar foto a Álbum_1 ???
 184+ 7328
 185+ 7328 3A 3B 89         ld a,(Semaforo)
 186+ 732B CB 57            bit 2,a
 187+ 732D 28 35            jr z,7F                      ; No puede haber recolocación. Album_de_fotos_2 está incompleto.
 188+ 732F
 189+ 732F CD 08 74         call Album2_a_Album1
 190+ 7332
 191+ 7332              ; Album3_a_Album2 !!!
 192+ 7332
 193+ 7332              ; Album_de_fotos_2 está vacío. Se ha completado el buffer ???. Está Album_de_fotos_3 completo??
 194+ 7332
 195+ 7332 3A 3B 89     10 ld a,(Semaforo)
 196+ 7335 CB 5F            bit 3,a
 197+ 7337 20 0B            jr nz,11F
 198+ 7339
 199+ 7339              ; Album_de_fotos_2 está vacío, (sus datos se han volcado a Album_de_fotos_1). Album_de_fotos_3 está incompleto por lo que no vamos a poder hacer el trasbase de datos del álbum_3 al álbum_2.
 200+ 7339              ; Activaremos el bit_3 de (Ctrl_Semaforo) para indicar este hecho.
 201+ 7339
 202+ 7339 21 3C 89         ld hl,Ctrl_Semaforo
 203+ 733C CB DE            set 3,(hl)
 204+ 733E CB 86            res 0,(hl)
 205+ 7340 CB 96            res 2,(hl)
 206+ 7342 18 20            jr 7F
 207+ 7344
 208+ 7344              ; Album_de_fotos_3 contiene un FRAME completo.
 209+ 7344              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 210+ 7344
 211+ 7344 CD E1 73     11 call Album3_a_Album2     ;   X-X-X-0
 212+ 7347 CD 55 73         call Modifica_Stack_snapshot
 213+ 734A
 214+ 734A 21 3C 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 215+ 734D CB 86            res 0,(hl)
 216+ 734F CB 8E            res 1,(hl)
 217+ 7351 CB 96            res 2,(hl)
 218+ 7353 18 0F            jr 7F
 219+ 7355
 220+ 7355 2A 2F 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 221+ 7358 CD 8F 8C     	call Extrae_address
 222+ 735B 22 19 89     	ld (Stack_snapshot),hl
 223+ 735E 21 3B 89     	ld hl,Semaforo
 224+ 7361 CB 0E        	rrc (hl)
 225+ 7363 C9               ret
 226+ 7364
 227+ 7364              ; #############################################################3
 228+ 7364
 229+ 7364              ;   En 1er lugar limpiamos el FRAME pintado.
 230+ 7364              ;   Vaciamos Album_de_fotos.
 231+ 7364
 232+ 7364              ;   Album_de_fotos. Contiene datos ???
 233+ 7364
 234+ 7364              ;! Cascada.
 235+ 7364
 236+ 7364 21 01 70     7 ld hl,Album_de_fotos+1
 237+ 7367 7E               ld a,(hl)
 238+ 7368 A7               and a
 239+ 7369 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 240+ 736B
 241+ 736B              ;   Hemos impreso Album_de_fotos.
 242+ 736B              ;   Limpiamos el álbum y actualizamos (End_Snapshot). !!!!!!!!!!!!!!
 243+ 736B
 244+ 736B 2A 1D 89         ld hl,(End_Snapshot)
 245+ 736E 01 00 70         ld bc,Album_de_fotos
 246+ 7371 11 01 70         ld de,Album_de_fotos+1
 247+ 7374 AF               xor a
 248+ 7375 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 249+ 7376
 250+ 7376 CD 56 74         call Limpia_album
 251+ 7379
 252+ 7379 21 00 00         ld hl,0
 253+ 737C 22 1D 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 254+ 737F
 255+ 737F              ; ----- ----- ----- -----
 256+ 737F
 257+ 737F              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 258+ 737F              ;   Album_de_fotos_1. Contiene un frame completo ???
 259+ 737F
 260+ 737F 3A 3B 89     3 ld a,(Semaforo)
 261+ 7382 CB 4F            bit 1,a
 262+ 7384 20 06            jr nz,4F
 263+ 7386
 264+ 7386              ;! Buffer vacío. El siguiente FRAME no se puede preparar. !!!!!!!!!!!!!!!!!!!!!!!!!
 265+ 7386              ;! Album_de_fotos_1 está incompleto.
 266+ 7386
 267+ 7386 21 3C 89         ld hl,Ctrl_Semaforo
 268+ 7389 CB E6            set 4,(hl)
 269+ 738B C9               ret
 270+ 738C
 271+ 738C              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 272+ 738C
 273+ 738C 21 57 70     4 ld hl,Album_de_fotos_1+1
 274+ 738F 7E               ld a,(hl)
 275+ 7390 A7               and a
 276+ 7391 28 03            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 277+ 7393
 278+ 7393              ; ----- ----- ----- -----
 279+ 7393              ; ----- ----- ----- -----
 280+ 7393
 281+ 7393 CD 2F 74         call Album1_a_Album
 282+ 7396
 283+ 7396              ;   Album_de_fotos_2.
 284+ 7396
 285+ 7396 3A 3C 89     1 ld a,(Ctrl_Semaforo)
 286+ 7399 CB 5F            bit 3,a
 287+ 739B 20 36            jr nz,8F
 288+ 739D
 289+ 739D              ;   El bit_3 de (Ctrl_Semaforo) activo, indica que después de reestructurar, Album_de_fotos_2 está vacío por que Album_de_fotos_3 no está completo.
 290+ 739D              ;   Tenemos que salir de la rutina sin modificar punteros para completar Album_de_fotos_3.
 291+ 739D              ;   Activaremos el bit_0 y el bit_1 de (Ctrl_Semaforo) para volver a reestructurar y volcar sus datos a Album_de_fotos_2.
 292+ 739D
 293+ 739D              ;   Contiene Frame completo ???
 294+ 739D
 295+ 739D 3A 3B 89     12 ld a,(Semaforo)
 296+ 73A0 CB 57            bit 2,a
 297+ 73A2 20 13            jr nz,5F
 298+ 73A4
 299+ 73A4              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 300+ 73A4
 301+ 73A4 21 AD 70         ld hl,Album_de_fotos_2+1
 302+ 73A7 7E               ld a,(hl)
 303+ 73A8 A7               and a
 304+ 73A9 20 04            jr nz,9F
 305+ 73AB
 306+ 73AB              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 307+ 73AB              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 308+ 73AB
 309+ 73AB CD 63 74         call Actualiza_punteros_de_albumes
 310+ 73AE C9               ret
 311+ 73AF
 312+ 73AF              ;   Album_de_fotos_2 no está completo pero contiene datos.
 313+ 73AF
 314+ 73AF 21 3C 89     9 ld hl,Ctrl_Semaforo
 315+ 73B2 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 316+ 73B4 CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 317+ 73B6 C9               ret
 318+ 73B7
 319+ 73B7 21 AD 70     5 ld hl,Album_de_fotos_2+1
 320+ 73BA 7E               ld a,(hl)
 321+ 73BB A7               and a
 322+ 73BC 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 323+ 73BE
 324+ 73BE              ; ----- ----- ----- -----
 325+ 73BE              ; ----- ----- ----- -----
 326+ 73BE              ; ----- ----- ----- -----
 327+ 73BE
 328+ 73BE              ;   Album_de_fotos_2 contiene un frame completo.
 329+ 73BE              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 330+ 73BE
 331+ 73BE CD 08 74         call Album2_a_Album1
 332+ 73C1
 333+ 73C1              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 334+ 73C1              ;   Album_de_fotos_3. Contiene un frame completo ???
 335+ 73C1
 336+ 73C1 3A 3B 89     2 ld a,(Semaforo)
 337+ 73C4 CB 5F            bit 3,a
 338+ 73C6 20 13            jr nz,6F
 339+ 73C8
 340+ 73C8              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 341+ 73C8
 342+ 73C8 21 03 71         ld hl,Album_de_fotos_3+1
 343+ 73CB 7E               ld a,(hl)
 344+ 73CC A7               and a
 345+ 73CD 20 04            jr nz,8F
 346+ 73CF
 347+ 73CF              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 348+ 73CF              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 349+ 73CF
 350+ 73CF CD 63 74         call Actualiza_punteros_de_albumes
 351+ 73D2 C9               ret
 352+ 73D3
 353+ 73D3              ;   Album_de_fotos_3 no está completo.
 354+ 73D3
 355+ 73D3 21 3C 89     8 ld hl,Ctrl_Semaforo
 356+ 73D6 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 357+ 73D8 CB CE            set 1,(hl)
 358+ 73DA C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 359+ 73DB
 360+ 73DB              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 361+ 73DB
 362+ 73DB 21 03 71     6 ld hl,Album_de_fotos_3+1
 363+ 73DE 7E               ld a,(hl)
 364+ 73DF A7               and a
 365+ 73E0 C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 366+ 73E1
 367+ 73E1              ; ----- ----- ----- -----
 368+ 73E1              ; ----- ----- ----- -----
 369+ 73E1              ; ----- ----- ----- -----
 370+ 73E1
 371+ 73E1 2A 2B 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 372+ 73E4 01 02 71         ld bc,Album_de_fotos_3                  ; Origen.
 373+ 73E7 11 AC 70         ld de,Album_de_fotos_2                  ; Destino.
 374+ 73EA
 375+ 73EA CD 56 74         call Limpia_album
 376+ 73ED
 377+ 73ED              ;   Actualizamos (End_Snapshot_2):
 378+ 73ED
 379+ 73ED A7               and a
 380+ 73EE ED 4A            adc hl,bc
 381+ 73F0 22 27 89         ld (End_Snapshot_2),hl
 382+ 73F3
 383+ 73F3              ;   Limpiamos Album_de_fotos_3.
 384+ 73F3
 385+ 73F3 2A 2B 89         ld hl,(End_Snapshot_3)
 386+ 73F6 01 02 71         ld bc,Album_de_fotos_3
 387+ 73F9 11 03 71         ld de,Album_de_fotos_3+1
 388+ 73FC AF               xor a
 389+ 73FD 02               ld (bc),a
 390+ 73FE CD 56 74         call Limpia_album
 391+ 7401
 392+ 7401              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 393+ 7401              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 394+ 7401
 395+ 7401 21 00 00         ld hl,0
 396+ 7404 22 2B 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 397+ 7407
 398+ 7407 C9               ret
 399+ 7408
 400+ 7408 2A 27 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 401+ 740B 01 AC 70         ld bc,Album_de_fotos_2                   ; Origen.
 402+ 740E 11 56 70         ld de,Album_de_fotos_1                   ; Destino.
 403+ 7411 CD 56 74         call Limpia_album
 404+ 7414
 405+ 7414              ;   Actualizamos (End_Snapshot_1):
 406+ 7414
 407+ 7414 A7               and a
 408+ 7415 ED 4A            adc hl,bc
 409+ 7417 22 23 89         ld (End_Snapshot_1),hl
 410+ 741A
 411+ 741A              ;   Limpiamos Album_de_fotos_2.
 412+ 741A
 413+ 741A 2A 27 89         ld hl,(End_Snapshot_2)
 414+ 741D 01 AC 70         ld bc,Album_de_fotos_2
 415+ 7420 11 AD 70         ld de,Album_de_fotos_2+1
 416+ 7423 AF               xor a
 417+ 7424 02               ld (bc),a
 418+ 7425 CD 56 74         call Limpia_album
 419+ 7428 21 00 00         ld hl,0
 420+ 742B 22 27 89         ld (End_Snapshot_2),hl                    ; Limpia (End_Snapshot_2).s
 421+ 742E C9               ret
 422+ 742F
 423+ 742F
 424+ 742F 2A 23 89     Album1_a_Album ld hl,(End_Snapshot_1)         ; Final, (origen).
 425+ 7432 01 56 70         ld bc,Album_de_fotos_1      ; Origen.
 426+ 7435 11 00 70         ld de,Album_de_fotos        ; Destino.
 427+ 7438
 428+ 7438 CD 56 74         call Limpia_album
 429+ 743B
 430+ 743B              ;   Calculamos (End_Snapshot)
 431+ 743B
 432+ 743B A7               and a
 433+ 743C ED 4A            adc hl,bc
 434+ 743E 22 1D 89         ld (End_Snapshot),hl
 435+ 7441
 436+ 7441              ;   Limpiamos Album_de_fotos_1.
 437+ 7441
 438+ 7441 2A 23 89         ld hl,(End_Snapshot_1)
 439+ 7444 01 56 70         ld bc,Album_de_fotos_1
 440+ 7447 11 57 70         ld de,Album_de_fotos_1+1
 441+ 744A AF               xor a
 442+ 744B 02               ld (bc),a
 443+ 744C
 444+ 744C CD 56 74         call Limpia_album
 445+ 744F
 446+ 744F 21 00 00         ld hl,0
 447+ 7452 22 23 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 448+ 7455 C9               ret
 449+ 7456
 450+ 7456              ; ----------------------------------------------------
 451+ 7456              ;
 452+ 7456              ;   10/8/23
 453+ 7456              ;
 454+ 7456              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 455+ 7456              ;
 456+ 7456              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 457+ 7456              ;           BC ..... Dirección de inicio del álbum.
 458+ 7456              ;           DE ..... Dirección de inicio del álbum. +1
 459+ 7456
 460+ 7456              ;    ld hl,(End_Snapshot)
 461+ 7456              ;    ld bc,Album_de_fotos
 462+ 7456              ;    ld de,Album_de_fotos+1
 463+ 7456
 464+ 7456              ;   MODIFICA: A,HL,BC y DE.
 465+ 7456
 466+ 7456              Limpia_album
 467+ 7456 D5               push de                     ; Guardo DESTINO.
 468+ 7457 C5               push bc                     ; Guardo ORIGEN.
 469+ 7458 ED 42            sbc hl,bc
 470+ 745A 4D               ld c,l
 471+ 745B 44               ld b,h
 472+ 745C E1               pop hl
 473+ 745D C5               push bc
 474+ 745E ED B0            ldir
 475+ 7460 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 476+ 7461 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 477+ 7462 C9               ret                         ; _ a otro).
 478+ 7463
 479+ 7463              ; --------------------------------------------------------------------------------------------
 480+ 7463              ;
 481+ 7463              ;   20/10/23
 482+ 7463
 483+ 7463              ;
 484+ 7463
 485+ 7463              Actualiza_punteros_de_albumes
 486+ 7463
 487+ 7463 2A 2F 89         ld hl,(Puntero_indice_album_de_fotos)
 488+ 7466 2B               dec hl
 489+ 7467 2B               dec hl
 490+ 7468 22 2F 89         ld (Puntero_indice_album_de_fotos),hl
 491+ 746B
 492+ 746B 2A 33 89         ld hl,(Puntero_indice_End_Snapshot)
 493+ 746E 2B               dec hl
 494+ 746F 2B               dec hl
 495+ 7470 22 33 89         ld (Puntero_indice_End_Snapshot),hl
 496+ 7473 CD 8F 8C         call Extrae_address
 497+ 7476 22 37 89         ld (Puntero_de_End_Snapshot),hl
 498+ 7479
 499+ 7479 C9               ret
 500+ 747A
# file closed: Guarda_foto_registros.asm
1674  747A
1675  747A              	SAVESNA "Pruebas.sna", START
1676  747A
1677  747A
1678  747A
1679  747A
# file closed: Banco_de_pruebas.asm
