# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 F6 88  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15
  42  AA15 3A 13 89     	ld a,(Contador_de_frames)
  43  AA18 FE 16        	cp $16
  44  AA1A 28 FE        	jr z,$
  45  AA1C
  46  AA1C
  47  AA1C
  48  AA1C
  49  AA1C 3E 01        	ld a,1
  50  AA1E D3 FE        	out ($fe),a
  51  AA20 CD 34 8D     	call Pinta_entidades
  52  AA23 CD 26 8D     	call Pinta_Amadeus
  53  AA26
  54  AA26 3E 00        	ld a,0
  55  AA28 D3 FE        	out ($fe),a
  56  AA2A
  57  AA2A 3E 02        	ld a,2
  58  AA2C D3 FE        	out ($fe),a
  59  AA2E CD 4A 8D     	call Guarda_parametros_DRAW
  60  AA31 CD 96 8C     	call Restore_Amadeus
  61  AA34 CD 9A 8A     	call Gestiona_Amadeus
  62  AA37 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  63  AA3A CD A8 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  64  AA3D
  65  AA3D              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  66  AA3D
  67  AA3D CD 56 8D     	call Recupera_parametros_DRAW
  68  AA40 CD 3E 8D     	call Actualiza_relojes
  69  AA43 3E 00        	ld a,0
  70  AA45 D3 FE        	out ($fe),a
  71  AA47
  72  AA47 FD E1        	pop iy
  73  AA49 DD E1        	pop ix
  74  AA4B F1           	pop af
  75  AA4C C1           	pop bc
  76  AA4D D1           	pop de
  77  AA4E E1           	pop hl
  78  AA4F D9           	exx
  79  AA50 C1           	pop bc
  80  AA51 D1           	pop de
  81  AA52 E1           	pop hl
  82  AA53 08           	ex af,af'
  83  AA54 F1           	pop af
  84  AA55 08           	ex af,af'
  85  AA56 D9           	exx
  86  AA57
  87  AA57 ED 7B F6 88  	ld sp,(Stack_3)
  88  AA5B
  89  AA5B FB           	ei
  90  AA5C C9           	ret
  91  AA5D
  92  AA5D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  93  AA5D
  94  AA5D              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA5D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA5D              ;
   3+ AA5D              ;	17/02/23
   4+ AA5D              ;
   5+ AA5D              ;	Sprites e índices.
   6+ AA5D
   7+ AA5D              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  95  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BD 85        	defw Caja_1
 100+ 856E FC 85        	defw Caja_2
 101+ 8570 3B 86        	defw Caja_3
 102+ 8572 7A 86        	defw Caja_4
 103+ 8574 B9 86        	defw Caja_5
 104+ 8576 F8 86        	defw Caja_6
 105+ 8578 37 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 8587
 117+ 8587 05           	db %00000101									; (Attr).
 118+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 858C
 121+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8590
 124+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 125+ 8592 04           	db 4 											; (Cuad_objeto).
 126+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 8597
 128+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8598
 130+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 859E
 132+ 859E 00 00        	db 0,0											; Variables_de_pintado
 133+ 85A0 00 00        	defw 0											;	" " " " " " "
 134+ 85A2 00 00        	defw 0											;	" " " " " " "
 135+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85A8
 137+ 85A8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85AA
 139+ 85AA 00           	db 0											; (Autoriza_movimiento).
 140+ 85AB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85AF 00 00
 141+ 85B1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85B4
 143+ 85B4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85B6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85B7
 146+ 85B7 00           	db 0 											; (Columnas).
 147+ 85B8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85BA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85BD
 150+ 85BD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85BD
 152+ 85BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85BF 00 00        	defw 0											; (Posicion_actual).
 154+ 85C1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85C6
 157+ 85C6 00           	db %00000000 									; (Attr).
 158+ 85C7
 159+ 85C7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85C9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85CF
 164+ 85CF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85D1 00           	db 0											; (Cuad_objeto).
 166+ 85D2
 167+ 85D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85D6
 169+ 85D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85D7
 171+ 85D7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85DD
 173+ 85DD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85DF 00 00        	defw 0											;	" " " " " " "
 175+ 85E1 00 00        	defw 0											;	" " " " " " "
 176+ 85E3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85E7
 178+ 85E7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 85E9
 180+ 85E9 00           	db 0											; (Autoriza_movimiento).
 181+ 85EA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 85EE 00 00
 182+ 85F0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 85F3
 184+ 85F3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 85F5 00           	db 0											; (Cola_de_desplazamiento).
 186+ 85F6
 187+ 85F6 00           	db 0 											; (Columnas).
 188+ 85F7 00 00        	defw 0											; (Limite_horizontal).
 189+ 85F9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 85FC
 191+ 85FC              ; ---------- ---------- ---------- ---------- ----------
 192+ 85FC
 193+ 85FC 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 85FE 00 00        	defw 0											; (Posicion_actual).
 195+ 8600 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8602 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8605
 198+ 8605 00           	db %00000000 									; (Attr).
 199+ 8606
 200+ 8606 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8608 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 860A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 860C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 860E
 205+ 860E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8610 00           	db 0											; (Cuad_objeto).
 207+ 8611
 208+ 8611 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8615
 210+ 8615 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8616
 212+ 8616 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 861C
 214+ 861C 00 00        	db 0,0											; Variables_de_pintado
 215+ 861E 00 00        	defw 0											;	" " " " " " "
 216+ 8620 00 00        	defw 0											;	" " " " " " "
 217+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8626
 219+ 8626 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8628
 221+ 8628 00           	db 0											; (Autoriza_movimiento).
 222+ 8629 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 862D 00 00
 223+ 862F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8632
 225+ 8632 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8634 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8635
 228+ 8635 00           	db 0 											; (Columnas).
 229+ 8636 00 00        	defw 0											; (Limite_horizontal).
 230+ 8638 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 863B
 232+ 863B              ; ---------- ---------- ---------- ---------- ----------
 233+ 863B
 234+ 863B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 863D 00 00        	defw 0											; (Posicion_actual).
 236+ 863F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8641 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8644
 239+ 8644 00           	db %00000000 									; (Attr).
 240+ 8645
 241+ 8645 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8647 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8649 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 864B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 864D
 246+ 864D 00 00        	defw 0											; (Posicion_inicio).
 247+ 864F 00           	db 0											; (Cuad_objeto).
 248+ 8650
 249+ 8650 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8654
 251+ 8654 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8655
 253+ 8655 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 865B
 255+ 865B 00 00        	db 0,0											; Variables_de_pintado
 256+ 865D 00 00        	defw 0											;	" " " " " " "
 257+ 865F 00 00        	defw 0											;	" " " " " " "
 258+ 8661 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8665
 260+ 8665 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8667
 262+ 8667 00           	db 0											; (Autoriza_movimiento).
 263+ 8668 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 866C 00 00
 264+ 866E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8671
 266+ 8671 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8673 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8674
 269+ 8674 00           	db 0 											; (Columnas).
 270+ 8675 00 00        	defw 0											; (Limite_horizontal).
 271+ 8677 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 867A
 273+ 867A              ; ---------- ---------- ---------- ---------- ----------
 274+ 867A
 275+ 867A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 867C 00 00        	defw 0											; (Posicion_actual).
 277+ 867E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 8680 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 8683
 280+ 8683 00           	db %00000000 									; (Attr).
 281+ 8684
 282+ 8684 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 8686 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 8688 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 868A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 868C
 287+ 868C 00 00        	defw 0											; (Posicion_inicio).
 288+ 868E 00           	db 0											; (Cuad_objeto).
 289+ 868F
 290+ 868F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 8693
 292+ 8693 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 8694
 294+ 8694 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 869A
 296+ 869A 00 00        	db 0,0											; Variables_de_pintado
 297+ 869C 00 00        	defw 0											;	" " " " " " "
 298+ 869E 00 00        	defw 0											;	" " " " " " "
 299+ 86A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A4
 301+ 86A4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86A6
 303+ 86A6 00           	db 0											; (Autoriza_movimiento).
 304+ 86A7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86AB 00 00
 305+ 86AD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86B0
 307+ 86B0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86B2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86B3
 310+ 86B3 00           	db 0 											; (Columnas).
 311+ 86B4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86B6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86B9
 314+ 86B9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86B9
 316+ 86B9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86BB 00 00        	defw 0											; (Posicion_actual).
 318+ 86BD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86BF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86C2
 321+ 86C2 00           	db %00000000 									; (Attr).
 322+ 86C3
 323+ 86C3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86C5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86C7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86C9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86CB
 328+ 86CB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86CD 00           	db 0											; (Cuad_objeto).
 330+ 86CE
 331+ 86CE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86D2
 333+ 86D2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86D3
 335+ 86D3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86D9
 337+ 86D9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86DB 00 00        	defw 0											;	" " " " " " "
 339+ 86DD 00 00        	defw 0											;	" " " " " " "
 340+ 86DF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E3
 342+ 86E3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 86E5
 344+ 86E5 00           	db 0											; (Autoriza_movimiento).
 345+ 86E6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 86EA 00 00
 346+ 86EC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 86EF
 348+ 86EF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 86F1 00           	db 0											; (Cola_de_desplazamiento).
 350+ 86F2
 351+ 86F2 00           	db 0 											; (Columnas).
 352+ 86F3 00 00        	defw 0											; (Limite_horizontal).
 353+ 86F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 86F8
 355+ 86F8              ; ---------- ---------- ---------- ---------- ----------
 356+ 86F8
 357+ 86F8 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 86FA 00 00        	defw 0											; (Posicion_actual).
 359+ 86FC 00 00        	defw 0 											; (Puntero_objeto).
 360+ 86FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8701
 362+ 8701 00           	db %00000000 									; (Attr).
 363+ 8702
 364+ 8702 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8704 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8706 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8708 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 870A
 369+ 870A 00 00        	defw 0											; (Posicion_inicio).
 370+ 870C 00           	db 0											; (Cuad_objeto).
 371+ 870D
 372+ 870D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8711
 374+ 8711 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8712
 376+ 8712 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8718
 378+ 8718 00 00        	db 0,0											; Variables_de_pintado
 379+ 871A 00 00        	defw 0											;	" " " " " " "
 380+ 871C 00 00        	defw 0											;	" " " " " " "
 381+ 871E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8722
 383+ 8722 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8724
 385+ 8724 00           	db 0											; (Autoriza_movimiento).
 386+ 8725 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8729 00 00
 387+ 872B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 872E
 389+ 872E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8730 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8731
 392+ 8731 00           	db 0 											; (Columnas).
 393+ 8732 00 00        	defw 0											; (Limite_horizontal).
 394+ 8734 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8737
 396+ 8737              ; ---------- ---------- ---------- ---------- ----------
 397+ 8737
 398+ 8737 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8739 00 00        	defw 0											; (Posicion_actual).
 400+ 873B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 873D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8740
 403+ 8740 00           	db %00000000 									; (Attr).
 404+ 8741
 405+ 8741 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8743 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8745 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8747 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8749
 410+ 8749 00 00        	defw 0											; (Posicion_inicio).
 411+ 874B 00           	db 0											; (Cuad_objeto).
 412+ 874C
 413+ 874C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8750
 415+ 8750 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8751
 417+ 8751 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8757
 419+ 8757 00 00        	db 0,0											; Variables_de_pintado
 420+ 8759 00 00        	defw 0											;	" " " " " " "
 421+ 875B 00 00        	defw 0											;	" " " " " " "
 422+ 875D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8761
 424+ 8761 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8763
 426+ 8763 00           	db 0											; (Autoriza_movimiento).
 427+ 8764 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8768 00 00
 428+ 876A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 876D
 430+ 876D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 876F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8770
 433+ 8770 00           	db 0 											; (Columnas).
 434+ 8771 00 00        	defw 0											; (Limite_horizontal).
 435+ 8773 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8776
 437+ 8776              ; -------------------------------------------------------------------------------------
 438+ 8776              ;
 439+ 8776              ;	20/05/23
 440+ 8776              ;
 441+ 8776              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8776              ;
 443+ 8776              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8776              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8776              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8776              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8776
 448+ 8776              Indice_de_entidades
 449+ 8776
 450+ 8776 7A 87        	defw Entidad_1
 451+ 8778 8A 87        	defw Entidad_2
 452+ 877A
 453+ 877A              ;	BADSAT, (Satélite malvado).
 454+ 877A
 455+ 877A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 877C 04           	db %00000100									; (Attr).
 457+ 877D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 877F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 8781 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 8783 01           	db 1											; (Cuad_objeto).
 461+ 8784 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 8788 3C 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 878A
 464+ 878A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 878C 02           	db %00000010									; (Attr).
 466+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 8791 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 8793 01           	db 1											; (Cuad_objeto).
 470+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 8798 3C 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 879A
# file closed: Cajas_y_disparos.asm
  96  879A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 879A              ; 13/05/23
   2+ 879A
   3+ 879A              Indice_de_niveles
   4+ 879A
   5+ 879A A8 87        	defw Nivel_1
   6+ 879C AA 87        	defw Nivel_2
   7+ 879E B7 87        	defw Nivel_3
   8+ 87A0 C7 87        	defw Nivel_4
   9+ 87A2 D9 87        	defw Nivel_5
  10+ 87A4              ;	...
  11+ 87A4              ;	...
  12+ 87A4              ;	+ Niveles ...
  13+ 87A4
  14+ 87A4 00 00        	defw 0
  15+ 87A6 00 00        	defw 0
  16+ 87A8
  17+ 87A8 04           Nivel_1 db 4	                                ; Nº de entidades.
  18+ 87A9 04           	db 4										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87AA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87AB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87AF 01 02
  21+ 87B1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87B5 01 02
  22+ 87B7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87B8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87BC 01
  24+ 87BD 03 01 01 01  	db 3,1,1,1,1
  24+ 87C1 01
  25+ 87C2 03 01 01 01  	db 3,1,1,1,1
  25+ 87C6 01
  26+ 87C7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87C8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87CC 01
  28+ 87CD 04 01 01 01  	db 4,1,1,1,1
  28+ 87D1 01
  29+ 87D2 04 01 01 01  	db 4,1,1,1,1
  29+ 87D6 01
  30+ 87D7 02 03        	db 2,3
  31+ 87D9 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87DA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87DE 01
  33+ 87DF 05 01 01 01  	db 5,1,1,1,1
  33+ 87E3 01
  34+ 87E4 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87E8 01
  35+ 87E9 05 01 01 01  	db 5,1,1,1,1
  35+ 87ED 01
  36+ 87EE
  37+ 87EE              ;---------------------------------------------------------------------------------------------------------------
  38+ 87EE              ;
  39+ 87EE              ;   3/9/23
  40+ 87EE              ;
  41+ 87EE              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87EE              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87EE              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87EE              ;	_en la caja DRAW correspondiente.
  45+ 87EE              ;
  46+ 87EE              ;	MODIFICA: HL,DE y A.
  47+ 87EE              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87EE
  49+ 87EE              Inicializa_Punteros_de_nivel
  50+ 87EE
  51+ 87EE 21 9A 87     	ld hl,Indice_de_niveles
  52+ 87F1 22 1F 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 87F4 CD E6 8B     	call Extrae_address
  54+ 87F7 7E           	ld a,(hl)
  55+ 87F8 32 EA 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 87FB 23           	inc hl
  57+ 87FC 22 21 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 87FF C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8800
  60+ 8800              ;---------------------------------------------------------------------------------------------------------------
  61+ 8800              ;
  62+ 8800              ;   13/5/23
  63+ 8800              ;
  64+ 8800              ;	Destruye A,BC,HL,DE
  65+ 8800
  66+ 8800              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8800              ;	_del juego.
  68+ 8800
  69+ 8800              Prepara_cajas
  70+ 8800
  71+ 8800              ; Preparamos los punteros de las cajas.
  72+ 8800
  73+ 8800 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8803 CD E6 8B     	call Extrae_address
  75+ 8806 CD 43 88     	call Avanza_caja
  76+ 8809
  77+ 8809 CD 87 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 880C
  79+ 880C 2A 21 89     	ld hl,(Datos_de_nivel)
  80+ 880F
  81+ 880F              ; HL está en los datos del nivel correspondiente.
  82+ 880F              ; B actuará como contador de cajas.
  83+ 880F
  84+ 880F C5           1 push bc
  85+ 8810
  86+ 8810 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8811 CD 34 88     	call PreparaBC
  88+ 8814
  89+ 8814 21 76 87     	ld hl,Indice_de_entidades
  90+ 8817 CD 3C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 881A 22 F0 88         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 881D
  93+ 881D CD 4D 88     	call Datos_de_entidad_a_caja
  94+ 8820
  95+ 8820 2A E8 88     	ld hl,(Indice_restore_caja)
  96+ 8823 CD E6 8B     	call Extrae_address
  97+ 8826 CD 43 88     	call Avanza_caja
  98+ 8829
  99+ 8829 2A 21 89     	ld hl,(Datos_de_nivel)
 100+ 882C 23           	inc hl
 101+ 882D 22 21 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8830
 103+ 8830 C1           	pop bc
 104+ 8831 10 DC        	djnz 1B
 105+ 8833 C9           	ret
 106+ 8834
 107+ 8834 CB 27        PreparaBC sla a
 108+ 8836 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8838 4F           	ld c,a
 110+ 8839 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 883B C9           	ret
 112+ 883C
 113+ 883C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 883D ED 4A        	adc hl,bc
 115+ 883F CD E6 8B     	call Extrae_address
 116+ 8842 C9           	ret
 117+ 8843
 118+ 8843 22 E4 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8846 13           	inc de
 120+ 8847 13           	inc de
 121+ 8848 EB           	ex de,hl
 122+ 8849 22 E8 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 884C C9           	ret
 124+ 884D
 125+ 884D              Datos_de_entidad_a_caja
 126+ 884D
 127+ 884D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 884D
 129+ 884D
 130+ 884D ED 5B E4 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8851
 132+ 8851 01 02 00     	ld bc,2
 133+ 8854 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8856
 135+ 8856 01 07 00     	ld bc,7
 136+ 8859 CD 81 88     	call Situa_DE
 137+ 885C
 138+ 885C 01 05 00     	ld bc,5
 139+ 885F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8861
 141+ 8861 01 04 00     	ld bc,4
 142+ 8864 CD 81 88     	call Situa_DE
 143+ 8867
 144+ 8867 01 07 00     	ld bc,7
 145+ 886A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 886C
 147+ 886C 01 12 00     	ld bc,18
 148+ 886F CD 81 88     	call Situa_DE
 149+ 8872
 150+ 8872 01 02 00     	ld bc,2
 151+ 8875 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8877
 153+ 8877              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8877              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8877
 156+ 8877 01 0F 00     	ld bc,15									; *****
 157+ 887A CD 81 88     	call Situa_DE
 158+ 887D
 159+ 887D 3E 03        	ld a,3
 160+ 887F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8880
 162+ 8880 C9           	ret
 163+ 8881
 164+ 8881 EB           Situa_DE ex de,hl
 165+ 8882 A7           	and a
 166+ 8883 ED 4A        	adc hl,bc
 167+ 8885 EB           	ex de,hl
 168+ 8886 C9           	ret
 169+ 8887
 170+ 8887              ;---------------------------------------------------------------------------------------------------------------
 171+ 8887              ;
 172+ 8887              ;	21/5/23
 173+ 8887              ;
 174+ 8887              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 8887              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 8887              ;
 177+ 8887              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 8887              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 8887              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 8887              ;
 181+ 8887              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 8887              ;	MODIFICA: A y B.
 183+ 8887              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 8887
 185+ 8887              Admin_num_entidades
 186+ 8887
 187+ 8887              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 8887
 189+ 8887 3A EA 88     	ld a,(Numero_de_entidades)
 190+ 888A A7           	and a
 191+ 888B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 888B              ;	jr z,$
 193+ 888B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 888B
 195+ 888B 20 03        	jr nz,3F
 196+ 888D
 197+ 888D              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 888D
 199+ 888D CD EE 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 8890
 201+ 8890 3A EA 88     3 ld a,(Numero_de_entidades)
 202+ 8893 FE 0A        	cp 10
 203+ 8895 38 08        	jr c,1F
 204+ 8897
 205+ 8897              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 8897              ; Actualizamos variables.
 207+ 8897
 208+ 8897 3E 0A        	ld a,10
 209+ 8899 32 EB 88     	ld (Numero_parcial_de_entidades),a
 210+ 889C 47           	ld b,a
 211+ 889D 18 04        	jr 2F
 212+ 889F
 213+ 889F              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 889F              ; (Numero_de_entidades)="0".
 215+ 889F
 216+ 889F 32 EB 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88A2 47           	ld b,a
 218+ 88A3 C9           2 ret
# file closed: Niveles.asm
  97  88A4
  98  88A4              ; ******************************************************************************************************************************************************************************************
  99  88A4              ; Constantes.
 100  88A4              ; ******************************************************************************************************************************************************************************************
 101  88A4              ;
 102  88A4              ; 10/11/23
 103  88A4
 104  88A4              ;
 105  88A4              ; Constantes generales.
 106  88A4              ;
 107  88A4
 108  88A4              Sprite_vacio equ $f000
 109  88A4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 110  88A4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 111  88A4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 112  88A4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 113  88A4
 114  88A4              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 115  88A4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 116  88A4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 117  88A4              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 118  88A4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 119  88A4
 120  88A4              ;														; 55 Bytes.
 121  88A4
 122  88A4              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 123  88A4              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 124  88A4
 125  88A4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 126  88A4
 127  88A4              ; ******************************************************************************************************************************************************************************************
 128  88A4              ; Variables.
 129  88A4              ; ******************************************************************************************************************************************************************************************
 130  88A4              ;
 131  88A4              ; 10/11//23
 132  88A4              ;
 133  88A4              ; Variables de DRAW. (Motor principal).
 134  88A4              ;
 135  88A4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 136  88A4
 137  88A4 00           Filas db 0												; Filas. [DRAW]
 138  88A5 00           Columns db 0  											; Nº de columnas. [DRAW]
 139  88A6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 140  88A8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 141  88AA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 142  88AB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 143  88AC
 144  88AC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 145  88AC
 146  88AC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 147  88AD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 148  88AD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 149  88AD 00           Attr db 0												; Atributos de la entidad:
 150  88AE
 151  88AE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 152  88AE              ;
 153  88AE              ;	COLORES: 0 ..... NEGRO
 154  88AE              ;    		 1 ..... AZUL
 155  88AE              ; 			 2 ..... ROJO
 156  88AE              ;			 3 ..... MAGENTA
 157  88AE              ; 			 4 ..... VERDE
 158  88AE              ; 			 5 ..... CIAN
 159  88AE              ;			 6 ..... AMARILLO
 160  88AE              ; 			 7 ..... BLANCO
 161  88AE
 162  88AE 00 00        Indice_Sprite_der defw 0
 163  88B0 00 00        Indice_Sprite_izq defw 0
 164  88B2 00 00        Puntero_DESPLZ_der defw 0
 165  88B4 00 00        Puntero_DESPLZ_izq defw 0
 166  88B6
 167  88B6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 168  88B8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 169  88B9
 170  88B9              ; Variables de objeto. (Características).
 171  88B9
 172  88B9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 173  88BA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 174  88BB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 175  88BC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 176  88BD
 177  88BD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  88BE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  88BE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  88BE 00 00 00...  Variables_de_borrado ds 6
 181  88C4
 182  88C4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 183  88C6 00 00        	defw 0
 184  88C8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 185  88CA 00 00 00 00  	db 0,0,0,0
 186  88CE
 187  88CE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  88CE
 189  88CE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 190  88CF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 191  88CF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 192  88CF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 193  88CF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 194  88CF              ;
 195  88CF              ; 														DESCRIPCIÖN:
 196  88CF              ;
 197  88CF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 198  88CF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 199  88CF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 200  88CF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 201  88CF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 202  88CF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 203  88CF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 204  88CF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 205  88CF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 206  88CF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 207  88CF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 208  88CF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 209  88CF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 210  88CF              ;
 211  88CF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 212  88CF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 213  88CF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 214  88CF
 215  88CF              ; Movimiento. ------------------------------------------------------------------------------------------------------
 216  88CF
 217  88CF 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 218  88D1 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 219  88D3 00 00        Puntero_indice_mov_bucle defw 0							;
 220  88D5              ;
 221  88D5              ;
 222  88D5 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 223  88D6              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 224  88D6              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 225  88D6 00           Incrementa_puntero_backup db 0
 226  88D7 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 227  88D8              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 228  88D8 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 229  88D9 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 230  88DA 00           Cola_de_desplazamiento db 0								; Este byte indica:
 231  88DB              ;
 232  88DB              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 233  88DB              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 234  88DB              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 235  88DB              ;
 236  88DB              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 237  88DB              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 238  88DB              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 239  88DB              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 240  88DB              ;
 241  88DB              ;														;	"$ff" ..... Bucle infinito de repetición.
 242  88DB              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 243  88DB              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 244  88DB
 245  88DB
 246  88DB              ; Variables de funcionamiento. [DRAW].
 247  88DB
 248  88DB 00           Columnas db 0
 249  88DC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 250  88DE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 251  88DE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  88DF
 253  88DF              ; variables de control general.
 254  88DF
 255  88DF 00           Ctrl_2 db 0
 256  88E0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 257  88E0              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 258  88E0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 259  88E0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 260  88E0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 261  88E0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 262  88E0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 263  88E0              ;
 264  88E0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 265  88E0              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 266  88E0              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 267  88E0              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 268  88E0              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 269  88E0
 270  88E0 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 271  88E1
 272  88E1              ;! 61 Bytes por entidad.
 273  88E1
 274  88E1              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 275  88E1              ;					         		---------;      ;---------
 276  88E1
 277  88E1
 278  88E1              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 279  88E1
 280  88E1 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 281  88E2
 282  88E2              ;														DESCRIPCIÓN:
 283  88E2              ;
 284  88E2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 285  88E2              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 286  88E2              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 287  88E2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 288  88E2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 289  88E2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 290  88E2
 291  88E2              ;														BIT 3, Recarga de nueva oleada.
 292  88E2              ;														BIT 4, Recarga de nueva oleada.
 293  88E2              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 294  88E2              ;														BIT 6, **** Frame completo.
 295  88E2              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 296  88E2
 297  88E2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 298  88E4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 299  88E4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 300  88E4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 301  88E4
 302  88E4              ; Gestión de ENTIDADES y CAJAS.
 303  88E4
 304  88E4 00 00        Puntero_store_caja defw 0
 305  88E6 00 00        Puntero_restore_caja defw 0
 306  88E8 00 00        Indice_restore_caja defw 0
 307  88EA 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 308  88EB 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 309  88EC 00           Entidades_en_curso db 0									; ..... ..... .....
 310  88ED 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 311  88EE              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 312  88EE              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 313  88EE              ;														; _ (Numero_de_malotes)="0".
 314  88EE 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 315  88F0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 316  88F2              ;														; _ puntero (Indice_entidades).
 317  88F2
 318  88F2
 319  88F2              ;---------------------------------------------------------------------------------------------------------------
 320  88F2              ;
 321  88F2              ;	18/11/23
 322  88F2              ;
 323  88F2              ;	Álbumes.
 324  88F2
 325  88F2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 326  88F4              ;														; _variable para almacenar lo posición del puntero_
 327  88F4              ; 														; _de pila, SP.
 328  88F4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 329  88F6              ;														; La utiliza la rutina [Extrae_foto_registros].
 330  88F6 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 331  88F8 00 70        Stack_snapshot defw Album_de_fotos
 332  88FA 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 333  88FC
 334  88FC              ;End_Snapshot defw Album_de_fotos
 335  88FC              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 336  88FC 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 337  88FE              ;														; _el snapshot de los registros del siguiente disparo.
 338  88FE              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 339  88FE AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 340  8900
 341  8900              ; Gestión de Disparos.
 342  8900
 343  8900 00           Numero_de_disparotes db 0
 344  8901 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 345  8903 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 346  8905 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 347  8906              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 348  8906              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 349  8906 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 350  8908              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 351  8908              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 352  8908              ;														; _produzca colisión.
 353  8908 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 354  890A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 355  890A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 356  890D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 357  890D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 358  8910              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 359  8910 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 360  8912 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 361  8913
 362  8913              ;---------------------------------------------------------------------------------------------------------------
 363  8913
 364  8913              ; Relojes y temporizaciones.
 365  8913
 366  8913 00           Contador_de_frames db 0
 367  8914 00           Contador_de_frames_2 db 0
 368  8915
 369  8915 04           Clock_explosion db 4
 370  8916 1E           Clock_Entidades_en_curso db 30
 371  8917 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 372  8918              ;														; Repite la oleada de entidades.
 373  8918 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 374  8919 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 375  891A 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 376  891B
 377  891B 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 378  891C 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 379  891D 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 380  891E
 381  891E              ;---------------------------------------------------------------------------------------------------------------
 382  891E
 383  891E              ; Gestión de NIVELES.
 384  891E
 385  891E 00           Nivel db 0												; Nivel actual del juego.
 386  891F 00 00        Puntero_indice_NIVELES defw 0
 387  8921 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 388  8923              ; 														; _ que definen el NIVEL.
 389  8923              ; Y todo comienza aquí .....
 390  8923              ;
 391  8923              ; Rutina principal *************************************************************************************************************************************************************************
 392  8923              ;
 393  8923              ;	16/11/22
 394  8923
 395  8923              START
 396  8923
 397  8923 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 398  8926 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 399  8928 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 400  892A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 401  892C F3           	DI
 402  892D
 403  892D 3E 07        	ld a,%00000111
 404  892F CD 65 98     	call Cls
 405  8932
 406  8932 CD BF 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 407  8935
 408  8935              ; INICIALIZACIÓN.
 409  8935
 410  8935 CD EE 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 411  8938 CD 00 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 412  893B CD 4A 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 413  893E              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 414  893E CD 6F 8C     	call Restore_entidad
 415  8941
 416  8941 21 EB 88     	ld hl,Numero_parcial_de_entidades
 417  8944 46           	ld b,(hl)
 418  8945 04           	inc b
 419  8946 05           	dec b
 420  8947 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 421  8949
 422  8949              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 423  8949              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 424  8949              ;	Pintamos el resto de entidades:
 425  8949
 426  8949              ;	INICIA ENTIDADES !!!!!
 427  8949
 428  8949 C5           1 push bc  												; Guardo el contador de entidades.
 429  894A CD 1A 8B     	call Inicia_entidad
 430  894D C1           	pop bc
 431  894E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 432  8950
 433  8950              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 434  8950              ; (Esto se dá cuando se inicia una nueva oleada).
 435  8950
 436  8950 3A E1 88     	ld a,(Ctrl_1)
 437  8953 CB 5F        	bit 3,a
 438  8955 20 15        	jr nz,5F											; Loop
 439  8957
 440  8957              ; 	INICIA AMADEUS !!!!!
 441  8957
 442  8957 CD 96 8C     3 call Restore_Amadeus
 443  895A CD EC 8B     	call Inicia_Puntero_objeto
 444  895D CD 58 92     	call Draw
 445  8960 CD A0 7F     	call Guarda_foto_registros
 446  8963 CD F3 8C     	call Guarda_datos_de_borrado_Amadeus
 447  8966
 448  8966 11 7E 85     	ld de,Amadeus_db
 449  8969 CD A8 8C     	call Store_Amadeus
 450  896C
 451  896C              ; 	INICIA DISPAROS !!!!!
 452  896C
 453  896C              ;	call Inicia_Puntero_Disparo_Entidades
 454  896C              ;	call Inicia_Puntero_Disparo_Amadeus
 455  896C
 456  896C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 457  896C
 458  896C CD 4A 8B     5 call Inicia_punteros_de_cajas
 459  896F CD 6F 8C     	call Restore_entidad
 460  8972
 461  8972 3A E1 88     	ld a,(Ctrl_1)
 462  8975 CB 5F        	bit 3,a
 463  8977 28 07        	jr z,6F
 464  8979
 465  8979              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 466  8979
 467  8979 21 E1 88     	ld hl,Ctrl_1
 468  897C CB 9E        	res 3,(hl)
 469  897E 18 02        	jr Main
 470  8980
 471  8980              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 472  8980
 473  8980 FB           6 ei
 474  8981 76           	halt
 475  8982
 476  8982              ; ------------------------------------
 477  8982
 478  8982              Main
 479  8982              ;
 480  8982              ;	12/11/23
 481  8982
 482  8982              ; Aparece nueva entidad ???
 483  8982
 484  8982              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 485  8982              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 486  8982              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 487  8982              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 488  8982              ;														; _un 2º bloque.
 489  8982 3A 16 89     	ld a,(Clock_Entidades_en_curso)
 490  8985 47           	ld b,a
 491  8986 3A 13 89     	ld a,(Contador_de_frames)
 492  8989 B8           	cp b
 493  898A 28 07        	jr z,21F
 494  898C
 495  898C              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 496  898C              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 497  898C              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 498  898C              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 499  898C
 500  898C 3C           	inc a
 501  898D B8           	cp b
 502  898E 20 1B        	jr nz,13F
 503  8990
 504  8990 32 13 89     	ld (Contador_de_frames),a
 505  8993
 506  8993              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 507  8993              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 508  8993
 509  8993 3A EB 88     21 ld a,(Numero_parcial_de_entidades)
 510  8996 47           	ld b,a
 511  8997 3A EC 88     	ld a,(Entidades_en_curso)
 512  899A B8           	cp b
 513  899B 28 0E        	jr z,13F
 514  899D 30 0C        	jr nc,13F
 515  899F
 516  899F              ; --- --- --- --- ---
 517  899F
 518  899F 3C           	inc a
 519  89A0 32 EC 88     	ld (Entidades_en_curso),a
 520  89A3
 521  89A3              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 522  89A3
 523  89A3 3A 16 89     	ld a,(Clock_Entidades_en_curso)
 524  89A6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 525  89A6              ;! _ IMPREDECIBLE !!!!
 526  89A6 C6 32        	add 50
 527  89A8 32 16 89     	ld (Clock_Entidades_en_curso),a
 528  89AB
 529  89AB              ; -------------------------------------------------------------------------------------------------------------
 530  89AB
 531  89AB              ; Habilita disparos.
 532  89AB
 533  89AB 21 18 89     13 ld hl,Disparo_Amadeus
 534  89AE 11 1A 89     	ld de,CLOCK_repone_disparo_Amadeus
 535  89B1 CD 2D 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 536  89B4
 537  89B4 21 1B 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 538  89B7 11 1D 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 539  89BA CD 2D 9C     	call Habilita_disparos
 540  89BD
 541  89BD              ; COLISIONES.
 542  89BD
 543  89BD CD 3A 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 544  89C0
 545  89C0              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 546  89C0              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 547  89C0              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 548  89C0
 549  89C0 AF           	xor a
 550  89C1 32 05 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 551  89C4
 552  89C4 CD 4A 8B     	call Inicia_punteros_de_cajas
 553  89C7 CD 6F 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 554  89CA              ; 														; _ en DRAW.
 555  89CA 3A A4 88     	ld a,(Filas)
 556  89CD A7           	and a
 557  89CE 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 558  89D0 CD 81 8C     	call Incrementa_punteros_de_cajas
 559  89D3 18 F2        	jr 12B
 560  89D5
 561  89D5              ; ---------------------------------------------------------------------------------------
 562  89D5
 563  89D5 3A EB 88     10 ld a,(Numero_parcial_de_entidades)
 564  89D8 47               ld b,a
 565  89D9 A7           	and a
 566  89DA 20 14        	jr nz,11F
 567  89DC
 568  89DC 21 E1 88     	ld hl,Ctrl_1
 569  89DF CB 66        	bit 4,(hl)
 570  89E1 C2 6D 8A     	jp nz,16F
 571  89E4
 572  89E4              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 573  89E4
 574  89E4 21 E1 88     	ld hl,Ctrl_1
 575  89E7 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 576  89E9
 577  89E9 3A 13 89     	ld a,(Contador_de_frames)
 578  89EC 3C           	inc a
 579  89ED 32 17 89     	ld (Activa_recarga_cajas),a
 580  89F0
 581  89F0              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 582  89F0
 583  89F0 3A EC 88     11 ld a,(Entidades_en_curso)
 584  89F3 A7           	and a
 585  89F4 CA 6D 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 586  89F7 47           	ld b,a												; No hay entidades que gestionar.
 587  89F8
 588  89F8              ; Código que ejecutamos con cada entidad:
 589  89F8              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 590  89F8
 591  89F8 C5           15 push bc 												; Nº de entidades en curso.
 592  89F9
 593  89F9              ; Impacto ???
 594  89F9
 595  89F9 3A BD 88     22 ld a,(Impacto)
 596  89FC A7           	and a
 597  89FD 28 31        	jr z,8F
 598  89FF
 599  89FF              ; Hay Impacto en esta entidad.
 600  89FF
 601  89FF 21 15 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 602  8A02 35           	dec (hl)
 603  8A03 C2 67 8A     	jp nz,17F
 604  8A06
 605  8A06              ;! Velocidad de la animación de la explosión.
 606  8A06
 607  8A06 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 608  8A08              ;														; _,(velocidad de la explosión).
 609  8A08
 610  8A08              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 611  8A08
 612  8A08 CD 13 8D     	call Repone_datos_de_borrado
 613  8A0B CD 88 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 614  8A0E
 615  8A0E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 616  8A0E
 617  8A0E 3A DF 88     	ld a,(Ctrl_2)
 618  8A11 CB 4F        	bit 1,a
 619  8A13 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 620  8A15
 621  8A15              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 622  8A15
 623  8A15 3A AC 88     	ld a,(CTRL_DESPLZ)
 624  8A18 A7           	and a
 625  8A19 20 08        	jr nz,18F
 626  8A1B
 627  8A1B 21 84 84     	ld hl,Indice_Explosion_2x2-2
 628  8A1E 22 B2 88     	ld (Puntero_DESPLZ_der),hl
 629  8A21 18 06        	jr 19F
 630  8A23
 631  8A23 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 632  8A26 22 B2 88     	ld (Puntero_DESPLZ_der),hl
 633  8A29
 634  8A29 21 DF 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 635  8A2C CB CE        	set 1,(hl)
 636  8A2E 18 22        	jr 7F
 637  8A30
 638  8A30              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 639  8A30              ; _con las coordenadas de la entidad almacenada en DRAW.
 640  8A30
 641  8A30 3A E1 88     8 ld a,(Ctrl_1)
 642  8A33 CB 57        	bit 2,a
 643  8A35 28 1B        	jr z,7F
 644  8A37
 645  8A37 2A 08 89     	ld hl,(Coordenadas_disparo_certero)
 646  8A3A EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 647  8A3B              ;														; E contiene la coordenada_X del disparo.
 648  8A3B 2A AA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 649  8A3E              ;														; H FILA, (Coordenada_y de la entidad).
 650  8A3E A7           	and a
 651  8A3F ED 52        	sbc hl,de
 652  8A41
 653  8A41 CD 71 91     	call Determina_resultado_comparativa
 654  8A44
 655  8A44 78           	ld a,b
 656  8A45 A7           	and a
 657  8A46 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 658  8A48
 659  8A48              ; ----- ----- -----
 660  8A48
 661  8A48 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 662  8A4A 32 BD 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 663  8A4D
 664  8A4D 21 E1 88     	ld hl,Ctrl_1
 665  8A50 CB 96        	res 2,(hl)
 666  8A52
 667  8A52 CD B6 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 668  8A55
 669  8A55 3A CE 88     	ld a,(Ctrl_0)
 670  8A58 CB 67        	bit 4,a
 671  8A5A 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 672  8A5C
 673  8A5C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 674  8A5C              ; [[[
 675  8A5C CD ED 8C     	call Detecta_disparo_entidad
 676  8A5F              ; ]]]
 677  8A5F CD 2B 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 678  8A62
 679  8A62 21 CE 88     	ld hl,Ctrl_0
 680  8A65 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 681  8A67
 682  8A67 CD 34 8C     17 call Store_Restore_cajas
 683  8A6A
 684  8A6A C1           	pop bc
 685  8A6B 10 8B        	djnz 15B
 686  8A6D
 687  8A6D              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 688  8A6D              ; Hemos gestionado todas las unidades.
 689  8A6D              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 690  8A6D
 691  8A6D              ;	ld hl,Ctrl_1
 692  8A6D              ;	res 2,(hl)
 693  8A6D
 694  8A6D FB           16 ei
 695  8A6E 76           	halt
 696  8A6F              ; ----------------------------------------
 697  8A6F
 698  8A6F 3A E1 88     	ld a,(Ctrl_1) 										; Existe Loop?
 699  8A72 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 700  8A74 CA 82 89     	jp z,Main
 701  8A77
 702  8A77              ; RECARGA DE NUEVA OLEADA.
 703  8A77
 704  8A77 3A 13 89     	ld a,(Contador_de_frames)
 705  8A7A 47           	ld b,a
 706  8A7B 3A 17 89     	ld a,(Activa_recarga_cajas)
 707  8A7E B8           	cp b
 708  8A7F 28 08        	jr z,20F
 709  8A81
 710  8A81 21 E1 88     	ld hl,Ctrl_1
 711  8A84 CB E6        	set 4,(hl)
 712  8A86 C3 82 89     	jp Main
 713  8A89
 714  8A89 21 E1 88     20 ld hl,Ctrl_1
 715  8A8C CB A6        	res 4,(hl)
 716  8A8E
 717  8A8E 3A 13 89     	ld a,(Contador_de_frames)
 718  8A91
 719  8A91              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 720  8A91              ;! _ IMPREDECIBLE !!!!
 721  8A91
 722  8A91 C6 0A        	add 10
 723  8A93 32 16 89     	ld (Clock_Entidades_en_curso),a
 724  8A96
 725  8A96 C3 38 89     	jp 4B
 726  8A99
 727  8A99 C9           	ret
 728  8A9A
 729  8A9A              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 730  8A9A              ;
 731  8A9A              ;	16/11/23
 732  8A9A
 733  8A9A              Gestiona_Amadeus
 734  8A9A
 735  8A9A              ;! Activa/desactiva impacto con Amadeus.
 736  8A9A
 737  8A9A 3A BD 88     	ld a,(Impacto)
 738  8A9D A7           	and a
 739  8A9E 20 FE        	jr nz,$
 740  8AA0
 741  8AA0 CD 07 8B     	call Mov_Amadeus
 742  8AA3
 743  8AA3 3A CE 88     	ld a,(Ctrl_0)
 744  8AA6 CB 67        	bit 4,a
 745  8AA8 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 746  8AAA
 747  8AAA CD 2B 8B     	call Guarda_foto_entidad_a_pintar
 748  8AAD CD F3 8C     	call Guarda_datos_de_borrado_Amadeus
 749  8AB0
 750  8AB0 21 CE 88     14 ld hl,Ctrl_0
 751  8AB3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 752  8AB5
 753  8AB5              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 754  8AB5
 755  8AB5              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 756  8AB5
 757  8AB5              ;	call Calcula_numero_de_disparotes
 758  8AB5
 759  8AB5 C9           	ret
 760  8AB6
 761  8AB6              ; --------------------------------------------------------------------------------------------------------------
 762  8AB6              ;
 763  8AB6              ;	27/05/23
 764  8AB6
 765  8AB6              Mov_obj
 766  8AB6
 767  8AB6 3A DF 88     	ld a,(Ctrl_2)
 768  8AB9 CB 4F        	bit 1,a
 769  8ABB 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 770  8ABD
 771  8ABD              ; Explosión:
 772  8ABD
 773  8ABD 3A E0 88     	ld a,(Frames_explosion)
 774  8AC0 A7           	and a
 775  8AC1 20 11        	jr nz,4F
 776  8AC3
 777  8AC3              ; Una alimaña menos!!!!!!!!!1
 778  8AC3
 779  8AC3 CD B1 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 780  8AC6 21 EB 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 781  8AC9 35           	dec (hl)
 782  8ACA 21 EC 88     	ld hl,Entidades_en_curso
 783  8ACD 35           	dec (hl)
 784  8ACE 21 EA 88     	ld hl,Numero_de_entidades
 785  8AD1 35           	dec (hl)
 786  8AD2 18 32        	jr 3F
 787  8AD4
 788  8AD4              ; -----
 789  8AD4
 790  8AD4              ;	`Movemos´ la explosión.
 791  8AD4
 792  8AD4 2A B2 88     4 ld hl,(Puntero_DESPLZ_der)
 793  8AD7 23           	inc hl
 794  8AD8 23           	inc hl
 795  8AD9 22 B2 88     	ld (Puntero_DESPLZ_der),hl
 796  8ADC CD E6 8B     	call Extrae_address
 797  8ADF 22 A8 88     	ld (Puntero_objeto),hl
 798  8AE2
 799  8AE2 21 E0 88     	ld hl,Frames_explosion
 800  8AE5 35           	dec (hl)
 801  8AE6 18 1E        	jr 3F
 802  8AE8
 803  8AE8 AF           2 xor a
 804  8AE9 32 CE 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 805  8AEC
 806  8AEC              ; Movemos Entidades malignas.
 807  8AEC
 808  8AEC CD D8 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 809  8AEF
 810  8AEF 3A CE 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 811  8AF2 CB 67        	bit 4,a
 812  8AF4 C8           	ret z
 813  8AF5
 814  8AF5              ; Ha habido desplazamiento de la entidad maligna.
 815  8AF5              ; Ha llegado a zona de AMADEUS ???
 816  8AF5
 817  8AF5 3A AB 88     	ld a,(Coordenada_y)
 818  8AF8 FE 14        	cp $14
 819  8AFA D4 FF 8E     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 820  8AFD              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 821  8AFD              ; ---------
 822  8AFD
 823  8AFD CD 32 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 824  8B00 CD 13 8D     	call Repone_datos_de_borrado
 825  8B03 CD 88 8B     	call Limpia_Variables_de_borrado
 826  8B06
 827  8B06 C9           3 ret													; _de la misma.
 828  8B07
 829  8B07              ; --------------------------------------------------------------------------------------------------------------
 830  8B07              ;
 831  8B07              ;	29/1/23
 832  8B07
 833  8B07              Mov_Amadeus
 834  8B07
 835  8B07 CD D3 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 836  8B0A
 837  8B0A 3A CE 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 838  8B0D CB 67        	bit 4,a
 839  8B0F C8           	ret z
 840  8B10
 841  8B10              ; ---------
 842  8B10
 843  8B10 CD 32 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 844  8B13 CD 03 8D     	call Repone_datos_de_borrado_Amadeus
 845  8B16 CD 88 8B     	call Limpia_Variables_de_borrado
 846  8B19
 847  8B19 C9           	ret
 848  8B1A
 849  8B1A              ; -----------------------------------------------------------------------------------
 850  8B1A              ;
 851  8B1A              ;	16/11/23
 852  8B1A
 853  8B1A CD EC 8B     Inicia_entidad	call Inicia_Puntero_objeto
 854  8B1D CD 79 98     	call Recompone_posicion_inicio
 855  8B20 CD 58 92     	call Draw
 856  8B23 CD A0 7F     	call Guarda_foto_registros
 857  8B26 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 858  8B27              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 859  8B27 CD 34 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 860  8B2A C9           	ret
 861  8B2B
 862  8B2B              ; --------------------------------------------------------------------------------------------------------------
 863  8B2B              ;
 864  8B2B              ;	31/08/23
 865  8B2B              ;
 866  8B2B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 867  8B2B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 868  8B2B
 869  8B2B              Guarda_foto_entidad_a_pintar
 870  8B2B
 871  8B2B              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 872  8B2B
 873  8B2B CD 58 92     	call Draw
 874  8B2E CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 875  8B31 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 876  8B32
 877  8B32              ; --------------------------------------------------------------------------------------------------------------
 878  8B32              ;
 879  8B32              ;	19/9/23
 880  8B32
 881  8B32 21 A4 88     Prepara_var_pintado ld hl,Filas
 882  8B35 11 C4 88     	ld de,Variables_de_pintado
 883  8B38 01 08 00     	ld bc,8
 884  8B3B ED B0        	ldir
 885  8B3D C9           	ret
 886  8B3E
 887  8B3E              ; --------------------------------------------------------------------------------------------------------------
 888  8B3E
 889  8B3E 21 C4 88     Repone_pintar ld hl,Variables_de_pintado
 890  8B41 11 A4 88     	ld de,Filas
 891  8B44 01 08 00     	ld bc,8
 892  8B47 ED B0        	ldir
 893  8B49 C9           	ret
 894  8B4A
 895  8B4A              ; *************************************************************************************************************************************************************
 896  8B4A              ;
 897  8B4A              ; 8/1/23
 898  8B4A              ;
 899  8B4A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 900  8B4A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 901  8B4A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 902  8B4A
 903  8B4A              ; Destruye HL y DE !!!!!
 904  8B4A
 905  8B4A              Inicia_punteros_de_cajas
 906  8B4A
 907  8B4A 21 6C 85     	ld hl,Indice_de_cajas
 908  8B4D CD E6 8B         call Extrae_address
 909  8B50 22 E4 88         ld (Puntero_store_caja),hl
 910  8B53 21 6E 85     	ld hl,Indice_de_cajas+2
 911  8B56 22 E8 88     	ld (Indice_restore_caja),hl
 912  8B59 CD E6 8B     	call Extrae_address
 913  8B5C 22 E6 88     	ld (Puntero_restore_caja),hl
 914  8B5F C9               ret
 915  8B60
 916  8B60              ; *************************************************************************************************************************************************************
 917  8B60              ;
 918  8B60              ; 8/1/23
 919  8B60              ;
 920  8B60              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 921  8B60
 922  8B60 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 923  8B63 22 01 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 924  8B66 C9           	ret
 925  8B67 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 926  8B6A 22 03 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 927  8B6D C9           	ret
 928  8B6E
 929  8B6E              ; -------------------------------------------------------------------------------------------------------------
 930  8B6E              ;
 931  8B6E              ; 21/9/23
 932  8B6E              ;
 933  8B6E
 934  8B6E              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 935  8B6E
 936  8B6E              Limpia_album_Amadeus
 937  8B6E
 938  8B6E 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 939  8B71 7E           	ld a,(hl)
 940  8B72 A7           	and a
 941  8B73 C8           	ret z
 942  8B74
 943  8B74 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 944  8B77 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 945  8B7A 01 0B 00     	ld bc,11
 946  8B7D AF           	xor a
 947  8B7E 77           	ld (hl),a
 948  8B7F ED B0        	ldir
 949  8B81
 950  8B81 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 951  8B84 22 FE 88     	ld (End_Snapshot_Amadeus),hl
 952  8B87
 953  8B87 C9           	ret
 954  8B88
 955  8B88 21 BE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 956  8B8B 11 BF 88     	ld de,Variables_de_borrado+1
 957  8B8E 01 05 00     	ld bc,5
 958  8B91 AF           	xor a
 959  8B92 77           	ld (hl),a
 960  8B93 ED B0        	ldir
 961  8B95 C9           	ret
 962  8B96
 963  8B96              ; -------------------------------------------------------------------------------------------------------------
 964  8B96              ;
 965  8B96              ; 8/9/23
 966  8B96              ;
 967  8B96
 968  8B96              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
 969  8B96              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
 970  8B96
 971  8B96              Calcula_numero_de_malotes
 972  8B96
 973  8B96 21 00 70     	ld hl,Album_de_fotos
 974  8B99 EB           	ex de,hl
 975  8B9A 2A F8 88     	ld hl,(Stack_snapshot)
 976  8B9D
 977  8B9D 7C           	ld a,h
 978  8B9E A7           	and a
 979  8B9F 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
 980  8BA1
 981  8BA1 06 00        4 ld b,0
 982  8BA3 7D           	ld a,l
 983  8BA4 93           	sub e
 984  8BA5 28 07        	jr z,1F
 985  8BA7
 986  8BA7              ; Nº de malotes no es "0".
 987  8BA7
 988  8BA7 D6 06        2 sub 6
 989  8BA9 04           	inc b
 990  8BAA A7           	and a
 991  8BAB 20 FA        	jr nz,2B
 992  8BAD 78           	ld a,b
 993  8BAE
 994  8BAE 32 ED 88     1 ld (Numero_de_malotes),a
 995  8BB1 C9           	ret
 996  8BB2
 997  8BB2              ; -------------------------------------------------------------------------------------------------------------
 998  8BB2              ;
 999  8BB2              ; 8/9/23
1000  8BB2              ;
1001  8BB2
1002  8BB2              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1003  8BB2              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1004  8BB2
1005  8BB2              Calcula_malotes_Amadeus
1006  8BB2
1007  8BB2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1008  8BB5 EB           	ex de,hl
1009  8BB6 2A FE 88     	ld hl,(End_Snapshot_Amadeus)
1010  8BB9
1011  8BB9 7C           	ld a,h
1012  8BBA A7           	and a
1013  8BBB 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1014  8BBD
1015  8BBD 06 00        	ld b,0
1016  8BBF 7D           	ld a,l
1017  8BC0 93           	sub e
1018  8BC1 28 07        	jr z,1F
1019  8BC3
1020  8BC3              ; Nº de malotes no es "0".
1021  8BC3
1022  8BC3 D6 06        2 sub 6
1023  8BC5 04           	inc b
1024  8BC6 A7           	and a
1025  8BC7 20 FA        	jr nz,2B
1026  8BC9 78           	ld a,b
1027  8BCA
1028  8BCA 32 ED 88     1 ld (Numero_de_malotes),a
1029  8BCD C9           	ret
1030  8BCE
1031  8BCE              ; -------------------------------------------------------------------------------------------------------------
1032  8BCE              ;
1033  8BCE              ; 28/2/23
1034  8BCE              ;
1035  8BCE
1036  8BCE              Calcula_numero_de_disparotes
1037  8BCE
1038  8BCE 21 56 70     	ld hl,Album_de_fotos_disparos
1039  8BD1 EB           	ex de,hl
1040  8BD2 2A FC 88     	ld hl,(End_Snapshot_disparos)
1041  8BD5
1042  8BD5 06 00        	ld b,0
1043  8BD7 7D           	ld a,l
1044  8BD8 93           	sub e
1045  8BD9 28 07        	jr z,1F
1046  8BDB
1047  8BDB              ; Nº de malotes no es "0".
1048  8BDB
1049  8BDB D6 06        2 sub 6
1050  8BDD 04           	inc b
1051  8BDE A7           	and a
1052  8BDF 20 FA        	jr nz,2B
1053  8BE1 78           	ld a,b
1054  8BE2
1055  8BE2 32 00 89     1 ld (Numero_de_disparotes),a
1056  8BE5 C9           	ret
1057  8BE6
1058  8BE6              ; *************************************************************************************************************************************************************
1059  8BE6              ;
1060  8BE6              ; 20/10/22
1061  8BE6              ;
1062  8BE6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1063  8BE6              ;
1064  8BE6              ; Destruye el puntero y DE !!!!!
1065  8BE6
1066  8BE6 5E           Extrae_address ld e,(hl)
1067  8BE7 23           	inc hl
1068  8BE8 56           	ld d,(hl)
1069  8BE9 2B           	dec hl
1070  8BEA EB           	ex de,hl
1071  8BEB C9           	ret
1072  8BEC
1073  8BEC              ; *************************************************************************************************************************************************************
1074  8BEC              ;
1075  8BEC              ;	7/2/23
1076  8BEC              ;
1077  8BEC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1078  8BEC              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1079  8BEC              ;
1080  8BEC              ;   Destruye HL y BC !!!!!,
1081  8BEC              ;
1082  8BEC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1083  8BEC              ;					"0" ..... Izquierda.
1084  8BEC
1085  8BEC              Inicia_Puntero_objeto
1086  8BEC
1087  8BEC 3A B8 88     	ld a,(Cuad_objeto)
1088  8BEF E6 01        	and 1
1089  8BF1 F5           	push af
1090  8BF2 CC 10 8C     	call z,Inicia_puntero_objeto_izq
1091  8BF5 F1           	pop af
1092  8BF6 28 2B        	jr z,1F
1093  8BF8 CD FD 8B     	call Inicia_puntero_objeto_der
1094  8BFB 18 26        	jr 1F
1095  8BFD
1096  8BFD              ; Arrancamos desde la parte izquierda de la pantalla.
1097  8BFD              ; Iniciamos (Indice_Sprite_der).
1098  8BFD
1099  8BFD 2A AE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1100  8C00 22 B2 88     	ld (Puntero_DESPLZ_der),hl
1101  8C03 CD E6 8B     	call Extrae_address
1102  8C06 22 A8 88     	ld (Puntero_objeto),hl
1103  8C09
1104  8C09 2A B0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1105  8C0C 22 B4 88     	ld (Puntero_DESPLZ_izq),hl
1106  8C0F C9           	ret
1107  8C10
1108  8C10              ; Arrancamos desde la parte derecha de la pantalla.
1109  8C10              ; Iniciamos (Indice_Sprite_izq).
1110  8C10
1111  8C10 2A B0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1112  8C13 22 B4 88     	ld (Puntero_DESPLZ_izq),hl
1113  8C16 CD E6 8B     	call Extrae_address
1114  8C19 22 A8 88     	ld (Puntero_objeto),hl
1115  8C1C
1116  8C1C 2A AE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1117  8C1F 22 B2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1118  8C22 C9           	ret
1119  8C23
1120  8C23              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1121  8C23
1122  8C23 21 40 83     1 ld hl,Amadeus
1123  8C26 ED 4B A8 88  	ld bc,(Puntero_objeto)
1124  8C2A B7 ED 42     	sub hl,bc
1125  8C2D C0           	ret nz
1126  8C2E 21 CE 88     	ld hl,Ctrl_0
1127  8C31 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1128  8C33 C9           	ret 												; _de nuestra nave en los extremos.
1129  8C34
1130  8C34              ; *************************************************************************************************************************************************************
1131  8C34              ;
1132  8C34              ;	14/5/23
1133  8C34              ;
1134  8C34              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1135  8C34              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1136  8C34
1137  8C34              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1138  8C34              ;	_de la 2ª y 3ª entidad respectivamente.
1139  8C34
1140  8C34              Store_Restore_cajas
1141  8C34
1142  8C34 E5           	push hl
1143  8C35 D5           	push de
1144  8C36 C5            	push bc
1145  8C37
1146  8C37              ;	STORE !!!!!
1147  8C37              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1148  8C37
1149  8C37 21 A4 88     	ld hl,Filas
1150  8C3A ED 5B E4 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1151  8C3E 01 3D 00     	ld bc,61
1152  8C41 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1153  8C43
1154  8C43              ; 	Entidad_sospechosa. 20/4/23
1155  8C43
1156  8C43 3A BD 88     	ld a,(Impacto)
1157  8C46 A7           	and a
1158  8C47 28 0C        	jr z,1F
1159  8C49
1160  8C49 2A E4 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1161  8C4C 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1162  8C4F A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1163  8C50 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1164  8C52 22 06 89     	ld (Entidad_sospechosa_de_colision),hl
1165  8C55
1166  8C55              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1167  8C55
1168  8C55 2A E6 88     1 ld hl,(Puntero_restore_caja)
1169  8C58 7E           	ld a,(hl)
1170  8C59 A7           	and a
1171  8C5A F5           	push af
1172  8C5B 28 08        	jr z,2F
1173  8C5D
1174  8C5D 11 A4 88     	ld de,Filas
1175  8C60 01 3D 00     	ld bc,61
1176  8C63 ED B0        	ldir
1177  8C65
1178  8C65 CD 81 8C     2 call Incrementa_punteros_de_cajas
1179  8C68
1180  8C68 F1           	pop af
1181  8C69 28 EA        	jr z,1B
1182  8C6B
1183  8C6B C1           	pop bc
1184  8C6C D1           	pop de
1185  8C6D E1           	pop hl
1186  8C6E
1187  8C6E C9           	ret
1188  8C6F
1189  8C6F              ; **************************************************************************************************
1190  8C6F              ;
1191  8C6F              ;	12/05/23
1192  8C6F              ;
1193  8C6F              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1194  8C6F
1195  8C6F E5           Restore_entidad push hl
1196  8C70 D5           	push de
1197  8C71 C5            	push bc
1198  8C72
1199  8C72 2A E4 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1200  8C75 11 A4 88     	ld de,Filas
1201  8C78 01 3D 00     	ld bc,61
1202  8C7B ED B0        	ldir
1203  8C7D
1204  8C7D C1           	pop bc
1205  8C7E D1           	pop de
1206  8C7F E1           	pop hl
1207  8C80 C9           	ret
1208  8C81
1209  8C81              ; **************************************************************************************************
1210  8C81              ;
1211  8C81              ;	08/05/23
1212  8C81              ;
1213  8C81              ;	Incrementamos los dos punteros de entidades. (+1).
1214  8C81
1215  8C81              Incrementa_punteros_de_cajas
1216  8C81
1217  8C81 2A E6 88     	ld hl,(Puntero_restore_caja)
1218  8C84 22 E4 88     	ld (Puntero_store_caja),hl
1219  8C87 2A E8 88     	ld hl,(Indice_restore_caja)
1220  8C8A 23           	inc hl
1221  8C8B 23           	inc hl
1222  8C8C 22 E8 88     	ld (Indice_restore_caja),hl
1223  8C8F CD E6 8B         call Extrae_address
1224  8C92 22 E6 88         ld (Puntero_restore_caja),hl
1225  8C95 C9               ret
1226  8C96
1227  8C96              ; **************************************************************************************************
1228  8C96              ;
1229  8C96              ;	25/01/23
1230  8C96              ;
1231  8C96              ;	Restore_Amadeus
1232  8C96              ;
1233  8C96              ;	Cargamos en DRAW los parámetros de Amadeus.
1234  8C96              ;
1235  8C96
1236  8C96 E5           Restore_Amadeus	push hl
1237  8C97 D5           	push de
1238  8C98 C5            	push bc
1239  8C99 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1240  8C9C 11 A4 88     	ld de,Filas
1241  8C9F 01 3D 00     	ld bc,61
1242  8CA2 ED B0        	ldir
1243  8CA4 C1           	pop bc
1244  8CA5 D1           	pop de
1245  8CA6 E1           	pop hl
1246  8CA7 C9           	ret
1247  8CA8
1248  8CA8              ; *************************************************************************************************************************************************************
1249  8CA8              ;
1250  8CA8              ;	29/04/23
1251  8CA8              ;
1252  8CA8              ;	Store_Amadeus
1253  8CA8              ;
1254  8CA8              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1255  8CA8              ;
1256  8CA8              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1257  8CA8              ;
1258  8CA8              ;	DESTRUYE: HL y BC y DE.
1259  8CA8
1260  8CA8 21 A4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1261  8CAB 01 3D 00     	ld bc,61
1262  8CAE ED B0        	ldir
1263  8CB0 C9           	ret
1264  8CB1
1265  8CB1              ; -----------------------------------------------------------
1266  8CB1              ;
1267  8CB1              ;	27/04/23
1268  8CB1              ;
1269  8CB1              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1270  8CB1              ;
1271  8CB1              ;	Destruye: HL,BC,DE,A
1272  8CB1
1273  8CB1 21 A4 88     Borra_datos_entidad ld hl,Filas
1274  8CB4 01 3C 00     	ld bc,60
1275  8CB7 AF           	xor a
1276  8CB8 77           	ld (hl),a
1277  8CB9 11 A5 88     	ld de,Filas+1
1278  8CBC ED B0        	ldir
1279  8CBE C9           	ret
1280  8CBF
1281  8CBF              ; -----------------------------------------------------------
1282  8CBF
1283  8CBF              ; Teclado.
1284  8CBF
1285  8CBF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1286  8CC1 DB FE        	in a,($fe)
1287  8CC3 E6 01        	and $01
1288  8CC5 28 02        	jr z,1f
1289  8CC7 18 F6        	jr Pulsa_ENTER
1290  8CC9 C9           1 ret
1291  8CCA
1292  8CCA              ; **************************************************************************************************
1293  8CCA              ;
1294  8CCA              ; Temporización.
1295  8CCA
1296  8CCA              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1297  8CCA              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1298  8CCA              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1299  8CCA              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1300  8CCA
1301  8CCA              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1302  8CCA              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1303  8CCA              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1304  8CCA
1305  8CCA              ; A partir de $4f61 no hace falta DELAY.
1306  8CCA
1307  8CCA              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1308  8CCA
1309  8CCA 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1310  8CCD 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1311  8CCE 78           	LD A,B
1312  8CCF A7           	AND A
1313  8CD0 20 FB        	JR NZ,wait
1314  8CD2 C9           	RET
1315  8CD3
1316  8CD3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1317  8CD3              ;
1318  8CD3              ;	5/3/23
1319  8CD3              ;
1320  8CD3              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1321  8CD3
1322  8CD3              Movimiento_Amadeus
1323  8CD3
1324  8CD3              ; Disparo.
1325  8CD3
1326  8CD3              ;	ld a,(Disparo_Amadeus)
1327  8CD3              ;	and a
1328  8CD3              ;	jr nz,1F
1329  8CD3              ;	jr 2F
1330  8CD3
1331  8CD3              ;1 ld a,$f7													; "5" para disparar.
1332  8CD3              ;	in a,($fe)
1333  8CD3              ;	and $10
1334  8CD3
1335  8CD3              ;	push af
1336  8CD3              ;	call z,Genera_disparo
1337  8CD3              ;	pop af
1338  8CD3              ;	jr nz,2F
1339  8CD3
1340  8CD3              ;	ld a,(Disparo_Amadeus)
1341  8CD3              ;	xor 1
1342  8CD3              ;	ld (Disparo_Amadeus),a
1343  8CD3
1344  8CD3 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1345  8CD5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1346  8CD7 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1347  8CD9 CC 37 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1348  8CDC
1349  8CDC 3E F7        	ld a,$f7
1350  8CDE DB FE        	in a,($fe)
1351  8CE0 E6 01        	and $01
1352  8CE2 C8           	ret z
1353  8CE3
1354  8CE3 3E F7        	ld a,$f7
1355  8CE5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1356  8CE7 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1357  8CE9 CC 19 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1358  8CEC C9           	ret
1359  8CED
1360  8CED              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1361  8CED              ;
1362  8CED              ;	Rutina provisional para que los malotes cagen balas.
1363  8CED
1364  8CED              Detecta_disparo_entidad
1365  8CED
1366  8CED 3A 1B 89     	ld a,(Disparo_entidad)
1367  8CF0 A7           	and a
1368  8CF1 C8           	ret z
1369  8CF2
1370  8CF2              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1371  8CF2
1372  8CF2              ;	ld a,$7f				; Detecta SPACE.
1373  8CF2              ;	in a,($fe)
1374  8CF2              ;	and 1
1375  8CF2              ;	ret nz
1376  8CF2
1377  8CF2              ;	call Genera_disparo
1378  8CF2 C9           	ret
1379  8CF3
1380  8CF3              ; ----------------------------------------------------------------------
1381  8CF3              ;
1382  8CF3              ;	8/9/23
1383  8CF3
1384  8CF3 2A FE 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1385  8CF6 2B            	dec hl
1386  8CF7 7E           	ld a,(hl)
1387  8CF8 A7           	and a
1388  8CF9 C8           	ret z										; Salimos si es álbum está vacío.
1389  8CFA
1390  8CFA 11 C3 88     	ld de,Variables_de_borrado+5
1391  8CFD 01 06 00     	ld bc,6
1392  8D00 ED B8        	lddr
1393  8D02 C9           	ret
1394  8D03
1395  8D03              ; ----------------------------------------------------------------------
1396  8D03              ;
1397  8D03              ;	9/9/23
1398  8D03
1399  8D03              Repone_datos_de_borrado_Amadeus
1400  8D03
1401  8D03 21 BE 88     	ld hl,Variables_de_borrado
1402  8D06 11 AC 70     	ld de,Album_de_fotos_Amadeus
1403  8D09 01 06 00     	ld bc,6
1404  8D0C ED B0        	ldir
1405  8D0E
1406  8D0E EB           	ex de,hl
1407  8D0F 22 FE 88     	ld (End_Snapshot_Amadeus),hl
1408  8D12
1409  8D12 C9           	ret
1410  8D13
1411  8D13              ; ----------------------------------------------------------------------
1412  8D13              ;
1413  8D13              ;	27/10/23
1414  8D13              ;
1415  8D13
1416  8D13              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1417  8D13              ;	_ Album_de_fotos correspondiente.
1418  8D13
1419  8D13              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1420  8D13              ;	_ durante el proceso de escritura.
1421  8D13
1422  8D13              Repone_datos_de_borrado
1423  8D13
1424  8D13 F3           	di
1425  8D14
1426  8D14 ED 5B F8 88  	ld de,(Stack_snapshot)
1427  8D18 21 BE 88     	ld hl,Variables_de_borrado
1428  8D1B 01 06 00     	ld bc,6
1429  8D1E ED B0        	ldir
1430  8D20 FB           	ei
1431  8D21
1432  8D21 EB           	ex de,hl
1433  8D22 22 F8 88     	ld (Stack_snapshot),hl
1434  8D25
1435  8D25 C9           	ret
1436  8D26
1437  8D26              ; -----------------------------------------------------------------------------------
1438  8D26
1439  8D26              Pinta_Amadeus
1440  8D26
1441  8D26 3E 06        	ld a,6
1442  8D28 D3 FE            out ($fe),a										; Amarillo
1443  8D2A
1444  8D2A CD B2 8B        	call Calcula_malotes_Amadeus
1445  8D2D CD E8 95     	call Extrae_foto_Amadeus
1446  8D30 CD 6E 8B     	call Limpia_album_Amadeus
1447  8D33
1448  8D33 C9           	ret
1449  8D34
1450  8D34              Pinta_entidades
1451  8D34
1452  8D34 CD 96 8B     	call Calcula_numero_de_malotes
1453  8D37 CD 66 95     	call Extrae_foto_entidades
1454  8D3A CD FE 7F     	call Limpia_y_reinicia_Stack_Snapshot
1455  8D3D
1456  8D3D C9           	ret
1457  8D3E
1458  8D3E              ; -----------------------------------------------------------------------------------
1459  8D3E              ;
1460  8D3E              ;	12/11/23
1461  8D3E              ;
1462  8D3E              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1463  8D3E
1464  8D3E              Actualiza_relojes
1465  8D3E
1466  8D3E 21 13 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1467  8D41 34           	inc (hl)
1468  8D42
1469  8D42 34           	inc (hl)
1470  8D43 35           	dec (hl)
1471  8D44 C0           	ret nz
1472  8D45
1473  8D45 21 14 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1474  8D48 34           	inc (hl)
1475  8D49 C9           	ret
1476  8D4A
1477  8D4A              ; ---------------------------------------------------------------
1478  8D4A              ;
1479  8D4A              ;	27/9/23
1480  8D4A
1481  8D4A              Guarda_parametros_DRAW
1482  8D4A
1483  8D4A 21 A4 88     	ld hl,Filas
1484  8D4D 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1485  8D50 01 3D 00     	ld bc,61
1486  8D53 ED B0        	ldir
1487  8D55 C9           	ret
1488  8D56
1489  8D56              Recupera_parametros_DRAW
1490  8D56
1491  8D56 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1492  8D59 11 A4 88     	ld de,Filas
1493  8D5C 01 3D 00     	ld bc,61
1494  8D5F ED B0        	ldir
1495  8D61 C9           	ret
1496  8D62
1497  8D62              ; ---------------------------------------------------------------
1498  8D62
1499  8D62              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D62              ; ******************************************************************************************************************************************************************************************
   2+ 8D62              ;
   3+ 8D62              ;   21/07/23
   4+ 8D62              ;
   5+ 8D62              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D62              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D62              ;
   8+ 8D62              ;
   9+ 8D62              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D62              ;
  11+ 8D62              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D62              ;               _ hacen las entidades hacia abajo.
  13+ 8D62              ;
  14+ 8D62              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D62              ;
  16+ 8D62              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D62              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D62              ;
  19+ 8D62              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D62              ;           _ la bala.
  21+ 8D62              ;
  22+ 8D62              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D62              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D62              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D62              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D62              ;           _ en el momento de generarse la bala)).
  27+ 8D62
  28+ 8D62              Genera_disparo
  29+ 8D62
  30+ 8D62              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D62              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D62              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D62              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D62              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D62              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D62              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D62
  38+ 8D62              ; Exclusiones:
  39+ 8D62
  40+ 8D62 3A BC 88         ld a,(Vel_down)
  41+ 8D65 47               ld b,a
  42+ 8D66 3A 12 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D69 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D6A D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D6B 3A DB 88         ld a,(Columnas)
  46+ 8D6E 47               ld b,a
  47+ 8D6F 3A A5 88         ld a,(Columns)
  48+ 8D72 B8               cp b
  49+ 8D73 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D74
  51+ 8D74              ; ----- ----- -----
  52+ 8D74
  53+ 8D74 3A CE 88         ld a,(Ctrl_0)
  54+ 8D77 CB 77            bit 6,a
  55+ 8D79 20 06            jr nz,14F
  56+ 8D7B
  57+ 8D7B 3A AB 88         ld a,(Coordenada_y)
  58+ 8D7E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D80 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D81
  61+ 8D81 21 00 80     14 ld hl,Indice_disparo
  62+ 8D84 3A AC 88         ld a,(CTRL_DESPLZ)
  63+ 8D87 4F               ld c,a
  64+ 8D88 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D8A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D8A              ;                                            ""        ""       "f9", B="1"
  67+ 8D8A              ;                                            ""        ""       "fb", B="2"
  68+ 8D8A              ;                                            ""        ""       "fb", B="3"
  69+ 8D8A A7               and a
  70+ 8D8B 28 10            jr z,1F
  71+ 8D8D E6 01            and 1
  72+ 8D8F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D90
  74+ 8D90 79               ld a,c
  75+ 8D91 16 F9            ld d,$f9
  76+ 8D93 23           2 inc hl
  77+ 8D94 23               inc hl
  78+ 8D95 04               inc b
  79+ 8D96 BA               cp d
  80+ 8D97 28 04            jr z,1F
  81+ 8D99 14               inc d
  82+ 8D9A 14               inc d
  83+ 8D9B 18 F6            jr 2B
  84+ 8D9D
  85+ 8D9D CD E6 8B     1 call Extrae_address
  86+ 8DA0 E5               push hl
  87+ 8DA1 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8DA3 DD 21 2E 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8DA7
  90+ 8DA7              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8DA7              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8DA7
  93+ 8DA7 3A CE 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8DAA CB 77            bit 6,a
  95+ 8DAC 20 04            jr nz,19F
  96+ 8DAE
  97+ 8DAE AF               xor a
  98+ 8DAF 32 1B 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8DB2
 100+ 8DB2 3A B8 88     19 ld a,(Cuad_objeto)
 101+ 8DB5 FE 02            cp 2
 102+ 8DB7 38 66            jr c,3F
 103+ 8DB9 28 64            jr z,3F
 104+ 8DBB
 105+ 8DBB              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8DBB
 107+ 8DBB E6 01            and 1
 108+ 8DBD 28 30            jr z,4F
 109+ 8DBF
 110+ 8DBF              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8DBF              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8DBF              ;
 113+ 8DBF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8DBF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8DBF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8DBF
 117+ 8DBF 2A A6 88     	ld hl,(Posicion_actual)
 118+ 8DC2
 119+ 8DC2              ;   Amadeus o entidad ???.
 120+ 8DC2
 121+ 8DC2 3A CE 88         ld a,(Ctrl_0)
 122+ 8DC5 CB 77            bit 6,a
 123+ 8DC7 28 0A            jr z,8F
 124+ 8DC9
 125+ 8DC9              ; 	Dispara Amadeus.
 126+ 8DC9
 127+ 8DC9 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8DCB CD 57 95         call PreviousScan
 129+ 8DCE CD 57 95         call PreviousScan
 130+ 8DD1
 131+ 8DD1              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8DD1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8DD1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8DD1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8DD1
 136+ 8DD1 18 11            jr 10F
 137+ 8DD3
 138+ 8DD3              ; 	Dispara Entidad.
 139+ 8DD3
 140+ 8DD3 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8DD6              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8DD6
 143+ 8DD6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8DD6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8DD6
 146+ 8DD6 C5               push bc
 147+ 8DD7 06 10            ld b,16
 148+ 8DD9 CD 48 95     9 call NextScan
 149+ 8DDC 10 FB            djnz 9B
 150+ 8DDE C1               pop bc
 151+ 8DDF CD 49 8E         call Ajusta_disparo_parte_izquierda
 152+ 8DE2 18 06            jr 17F
 153+ 8DE4
 154+ 8DE4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8DE4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8DE4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8DE4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8DE4
 159+ 8DE4 CD 49 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8DE7 CD BE 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DEA              ;                                                      ; _al generar el disparo.
 162+ 8DEA
 163+ 8DEA              ; 	LLegados a este punto tendremos:
 164+ 8DEA              ;
 165+ 8DEA              ;       Puntero_objeto_disparo en IY.
 166+ 8DEA              ;       Rutinas_de_impresion en IX.
 167+ 8DEA              ;       Puntero_de_impresion en HL.
 168+ 8DEA              ;       Impacto/Dirección en BC.
 169+ 8DEA
 170+ 8DEA CD 51 8E     17 call Almacena_disparo
 171+ 8DED 18 52            jr 6F                                             ; RET.
 172+ 8DEF
 173+ 8DEF              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DEF              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DEF              ;
 176+ 8DEF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DEF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DEF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DEF
 180+ 8DEF 2A A6 88     4 ld hl,(Posicion_actual)
 181+ 8DF2
 182+ 8DF2              ;   Amadeus o entidad ???.
 183+ 8DF2
 184+ 8DF2 3A CE 88         ld a,(Ctrl_0)
 185+ 8DF5 CB 77            bit 6,a
 186+ 8DF7 28 0A            jr z,11F
 187+ 8DF9
 188+ 8DF9              ; 	Dispara Amadeus.
 189+ 8DF9
 190+ 8DF9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DFB CD 57 95         call PreviousScan
 192+ 8DFE CD 57 95         call PreviousScan
 193+ 8E01
 194+ 8E01              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8E01              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8E01              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8E01              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8E01
 199+ 8E01 18 11            jr 13F
 200+ 8E03
 201+ 8E03              ; 	Dispara Entidad.
 202+ 8E03
 203+ 8E03 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8E06              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8E06
 206+ 8E06              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8E06              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8E06
 209+ 8E06 C5               push bc
 210+ 8E07 06 10            ld b,16
 211+ 8E09 CD 48 95     12 call NextScan
 212+ 8E0C 10 FB            djnz 12B
 213+ 8E0E C1               pop bc
 214+ 8E0F
 215+ 8E0F CD 42 8E         call Ajusta_disparo_parte_derecha
 216+ 8E12 18 06            jr 18F
 217+ 8E14
 218+ 8E14              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E14              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E14              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E14              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E14
 223+ 8E14 CD 42 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E17 CD BE 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E1A              ;                                                       ; _al generar el disparo.
 226+ 8E1A
 227+ 8E1A              ; LLegados a este punto tendremos:
 228+ 8E1A              ;
 229+ 8E1A              ;       Puntero_objeto_disparo en IY.
 230+ 8E1A              ;       Rutinas_de_impresion en IX.
 231+ 8E1A              ;       Puntero_de_impresion en HL.
 232+ 8E1A              ;       Impacto/Dirección en BC.
 233+ 8E1A
 234+ 8E1A CD 51 8E     18 call Almacena_disparo
 235+ 8E1D 18 22            jr 6F                                               ; RET.
 236+ 8E1F
 237+ 8E1F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E1F
 239+ 8E1F 28 11        3 jr z,5F
 240+ 8E21
 241+ 8E21              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E21              ;
 243+ 8E21              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E21              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E21              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E21              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E21
 248+ 8E21              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E21              ;	   ""        ""       "f9", B="1"
 250+ 8E21              ;	   ""        ""       "fb", B="2"
 251+ 8E21              ; 	   ""        ""       "fb", B="3"
 252+ 8E21
 253+ 8E21 2A A6 88     	ld hl,(Posicion_actual)
 254+ 8E24 CD 48 95     	call NextScan
 255+ 8E27
 256+ 8E27              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E27              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E27              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E27              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E27
 261+ 8E27 CD 49 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E2A
 263+ 8E2A              ; 	No se produce impacto. B="$80"
 264+ 8E2A              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E2A
 266+ 8E2A 01 80 80         ld bc,$8080
 267+ 8E2D
 268+ 8E2D              ; 	LLegados a este punto tendremos:
 269+ 8E2D              ;
 270+ 8E2D              ;       Puntero_objeto_disparo en IY.
 271+ 8E2D              ;       Rutinas_de_impresion en IX.
 272+ 8E2D              ;       Puntero_de_impresion en HL.
 273+ 8E2D              ;       Impacto/Dirección en BC.
 274+ 8E2D
 275+ 8E2D CD 51 8E         call Almacena_disparo
 276+ 8E30 18 0F            jr 6F                                           ; RET.
 277+ 8E32
 278+ 8E32              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E32              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E32              ;
 281+ 8E32              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E32              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E32              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E32              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E32
 286+ 8E32 2A A6 88     5 ld hl,(Posicion_actual)
 287+ 8E35 CD 48 95     	call NextScan
 288+ 8E38
 289+ 8E38              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E38              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E38              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E38              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E38
 294+ 8E38 CD 42 8E         call Ajusta_disparo_parte_derecha
 295+ 8E3B
 296+ 8E3B              ; 	No se produce impacto. B="$80"
 297+ 8E3B              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E3B
 299+ 8E3B 01 80 80     15 ld bc,$8080
 300+ 8E3E
 301+ 8E3E              ; 	LLegados a este punto tendremos:
 302+ 8E3E              ;
 303+ 8E3E              ;       Puntero_objeto_disparo en IY.
 304+ 8E3E              ;       Rutinas_de_impresion en IX.
 305+ 8E3E              ;       Puntero_de_impresion en HL.
 306+ 8E3E              ;       Impacto/Dirección en BC.
 307+ 8E3E
 308+ 8E3E CD 51 8E         call Almacena_disparo
 309+ 8E41
 310+ 8E41 C9           6 ret
 311+ 8E42
 312+ 8E42              ; ----------------------------------------------------------------
 313+ 8E42              ;
 314+ 8E42              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E42              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E42              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E42
 318+ 8E42 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E43 FE 02            cp 2
 320+ 8E45 38 01            jr c,1F
 321+ 8E47 23               inc hl
 322+ 8E48 C9           1 ret
 323+ 8E49
 324+ 8E49 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E4A FE 01        	cp 1
 326+ 8E4C 20 01        	jr nz,1F
 327+ 8E4E 2B           	dec hl
 328+ 8E4F 2B           1 dec hl
 329+ 8E50 C9               ret
 330+ 8E51
 331+ 8E51              ; ----------------------------------------------------------------
 332+ 8E51              ;
 333+ 8E51              ;   25/02/23
 334+ 8E51              ;
 335+ 8E51              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E51              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E51              ;
 338+ 8E51              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E51              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E51
 341+ 8E51              Almacena_disparo
 342+ 8E51
 343+ 8E51 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E52 F1               pop af
 345+ 8E53 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E54
 347+ 8E54 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E55 E6 01            and 1
 349+ 8E57 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E59              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E59              ; 	Dispara AMADEUS.
 352+ 8E59
 353+ 8E59              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E59              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E59              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E59              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E59
 358+ 8E59 C5               push bc
 359+ 8E5A 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E5D 2A 03 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E60 A7               and a
 362+ 8E61 ED 42            sbc hl,bc
 363+ 8E63 CC 67 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E66 C1               pop bc
 365+ 8E67 28 54            jr z,4F
 366+ 8E69
 367+ 8E69 2A 03 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E6C 23               inc hl
 369+ 8E6D 23               inc hl
 370+ 8E6E 22 03 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E71              ;                                                   ; _ Disparo_(+1).
 372+ 8E71 18 18            jr 2F
 373+ 8E73
 374+ 8E73              ; Dispara una entidad.
 375+ 8E73
 376+ 8E73 C5           1 push bc
 377+ 8E74 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E77 2A 01 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E7A A7               and a
 380+ 8E7B ED 42            sbc hl,bc
 381+ 8E7D CC 60 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E80 C1               pop bc
 383+ 8E81 28 3A            jr z,4F
 384+ 8E83
 385+ 8E83 2A 01 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E86 23               inc hl
 387+ 8E87 23               inc hl
 388+ 8E88 22 01 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E8B              ;                                                   ; _ Disparo_(+1).
 390+ 8E8B CD E6 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E8E              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E8E              ;
 393+ 8E8E              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E8E              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E8E              ;                                                     Puntero_de_impresion en HL.
 396+ 8E8E              ;                                                     Impacto/Dirección en BC.
 397+ 8E8E
 398+ 8E8E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E8F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E90 23               inc hl                                          ; _ al siguiente.
 401+ 8E91 A7               and a
 402+ 8E92 20 C0            jr nz,3B
 403+ 8E94
 404+ 8E94 08               ex af,af
 405+ 8E95 ED 73 F2 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E99 F9               ld sp,hl
 407+ 8E9A
 408+ 8E9A DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E9C F5               push af                                         ; Puntero de impresión.
 410+ 8E9D FD E5            push iy                                         ; Puntero objeto.
 411+ 8E9F C5               push bc                                         ; Control.
 412+ 8EA0
 413+ 8EA0 ED 7B F2 88      ld sp,(Stack)
 414+ 8EA4
 415+ 8EA4              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8EA4
 417+ 8EA4 21 E1 88     	ld hl,Ctrl_1
 418+ 8EA7 CB C6        	set 0,(hl)
 419+ 8EA9
 420+ 8EA9 DD E5        	push ix
 421+ 8EAB E1               pop hl
 422+ 8EAC F5               push af
 423+ 8EAD DD E1            pop ix
 424+ 8EAF
 425+ 8EAF CD A0 7F     	call Guarda_foto_registros
 426+ 8EB2
 427+ 8EB2 21 E1 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8EB5 CB 86        	res 0,(hl)
 429+ 8EB7
 430+ 8EB7              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8EB7              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8EB7
 433+ 8EB7 CD 67 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8EBA CD 60 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8EBD
 436+ 8EBD C9           4 ret
 437+ 8EBE
 438+ 8EBE              ; ----------------------------------------------------------------
 439+ 8EBE              ;
 440+ 8EBE              ;   4/3/23
 441+ 8EBE              ;
 442+ 8EBE              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8EBE              ;   _ al generarse el disparo.
 444+ 8EBE              ;
 445+ 8EBE              ;       "$80" ..... No se produce colisión.
 446+ 8EBE              ;       "$81" ..... Se produce colisión.
 447+ 8EBE              ;
 448+ 8EBE              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8EBE              ;         _ que forman el disparo.
 450+ 8EBE
 451+ 8EBE
 452+ 8EBE              Comprueba_Colision
 453+ 8EBE
 454+ 8EBE              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8EBE
 456+ 8EBE FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8EC0 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8EC1
 459+ 8EC1 CD F7 8E         call Modifica_H_Velocidad_disparo
 460+ 8EC4
 461+ 8EC4 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8EC5 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8EC7 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8EC9
 465+ 8EC9 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8ECB CD E7 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8ECE
 468+ 8ECE 7B               ld a,e
 469+ 8ECF E6 01            and 1
 470+ 8ED1 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8ED3              ;                                                  ; _ para activar IMPACTO.
 472+ 8ED3 E1               pop hl
 473+ 8ED4 E5               push hl
 474+ 8ED5 CD 48 95         call NextScan
 475+ 8ED8
 476+ 8ED8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8ED9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8EDB 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8EDD              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8EDD 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8EDF CD E7 8E         call Bucle_2
 482+ 8EE2
 483+ 8EE2 43           1 ld b,e
 484+ 8EE3 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8EE4 FD E1            pop iy
 486+ 8EE6 C9               ret
 487+ 8EE7
 488+ 8EE7              ; ---------- ----------
 489+ 8EE7
 490+ 8EE7 06 02        Bucle_2 ld b,2
 491+ 8EE9 FD 7E 00     2 ld a,(iy)
 492+ 8EEC A6               and (hl)
 493+ 8EED 28 02            jr z,1F
 494+ 8EEF 1E 81            ld e,$81
 495+ 8EF1 23           1 inc hl
 496+ 8EF2 FD 23            inc iy
 497+ 8EF4 10 F3            djnz 2B
 498+ 8EF6 C9               ret
 499+ 8EF7
 500+ 8EF7              ; ---------- ----------
 501+ 8EF7              ;
 502+ 8EF7              ;   21/7/23
 503+ 8EF7
 504+ 8EF7              Modifica_H_Velocidad_disparo
 505+ 8EF7
 506+ 8EF7 3A 12 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8EFA FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EFC D0               ret nc                                         ; _ incrementamos H.
 509+ 8EFD 24               inc h
 510+ 8EFE
 511+ 8EFE C9               ret
 512+ 8EFF
 513+ 8EFF              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EFF              ;
 515+ 8EFF              ;   11/04/23
 516+ 8EFF              ;
 517+ 8EFF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EFF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EFF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EFF              ;
 521+ 8EFF              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8EFF
 523+ 8EFF              Compara_coordenadas_X
 524+ 8EFF
 525+ 8EFF              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EFF              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EFF
 528+ 8EFF              ; Preparamos registros:
 529+ 8EFF
 530+ 8EFF 21 AA 88         ld hl,Filas+6
 531+ 8F02 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8F03 23               inc hl
 533+ 8F04 23               inc hl
 534+ 8F05 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8F06 43               ld b,e
 536+ 8F07
 537+ 8F07 21 B8 88         ld hl,Filas+20
 538+ 8F0A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8F0B 21 0D 89         ld hl,Coordenadas_X_Entidad
 540+ 8F0E CD 2A 91         call Guarda_coordenadas_X
 541+ 8F11
 542+ 8F11              ; Preparamos registros:
 543+ 8F11
 544+ 8F11 21 84 85         ld hl,Amadeus_db+6
 545+ 8F14 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8F15 23               inc hl
 547+ 8F16 23               inc hl
 548+ 8F17 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8F18 7B               ld a,e
 550+ 8F19 08               ex af,af'
 551+ 8F1A 21 92 85         ld hl,Amadeus_db+20
 552+ 8F1D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8F1E 21 0A 89         ld hl,Coordenadas_X_Amadeus
 554+ 8F21 CD 2A 91         call Guarda_coordenadas_X
 555+ 8F24
 556+ 8F24              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8F24              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8F24
 559+ 8F24 04               inc b
 560+ 8F25 05               dec b
 561+ 8F26 28 04            jr z,1F
 562+ 8F28 06 03            ld b,3
 563+ 8F2A 18 02            jr 2F
 564+ 8F2C 06 02        1 ld b,2
 565+ 8F2E 08           2 ex af,af'
 566+ 8F2F 3C               inc a
 567+ 8F30 3D               dec a
 568+ 8F31 28 04            jr z,5F
 569+ 8F33 0E 03            ld c,3
 570+ 8F35 18 02            jr 6F
 571+ 8F37 0E 02        5 ld c,2
 572+ 8F39 79           6 ld a,c
 573+ 8F3A 08               ex af,af'
 574+ 8F3B 11 0D 89         ld de,Coordenadas_X_Entidad
 575+ 8F3E 1A           4 ld a,(de)
 576+ 8F3F 21 0A 89         ld hl,Coordenadas_X_Amadeus
 577+ 8F42 BE           3 cp (hl)
 578+ 8F43 28 0E            jr z,7F
 579+ 8F45 23               inc hl
 580+ 8F46 0D               dec c
 581+ 8F47 20 F9            jr nz,3B
 582+ 8F49 13               inc de
 583+ 8F4A 08               ex af,af'
 584+ 8F4B 4F               ld c,a
 585+ 8F4C 08               ex af,af'
 586+ 8F4D 10 EF            djnz 4B
 587+ 8F4F
 588+ 8F4F              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 8F4F
 590+ 8F4F CD 66 91     8 call Limpia_Coordenadas_X
 591+ 8F52 C9               ret
 592+ 8F53
 593+ 8F53 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 8F55 32 BD 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 8F58 21 05 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 8F5B CB D6            set 2,(hl)
 597+ 8F5D 18 F0            jr 8B
 598+ 8F5F
 599+ 8F5F              ; -----------------------------------------------------------------------
 600+ 8F5F              ;
 601+ 8F5F              ;   17/04/23
 602+ 8F5F              ;
 603+ 8F5F
 604+ 8F5F              Detecta_colision_nave_entidad
 605+ 8F5F
 606+ 8F5F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 8F5F
 608+ 8F5F 2A A6 88         ld hl,(Posicion_actual)
 609+ 8F62 CD A3 94         call Calcula_puntero_de_impresion
 610+ 8F65
 611+ 8F65              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 8F65              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 8F65
 614+ 8F65 DD E5            push ix
 615+ 8F67 E1               pop hl
 616+ 8F68 E5               push hl
 617+ 8F69
 618+ 8F69              ; ----- ----- -----
 619+ 8F69 1E 00            ld e,0                                         ; Indica impacto.
 620+ 8F6B 06 0A            ld b,10
 621+ 8F6D CD 9D 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 8F70 7B               ld a,e
 623+ 8F71 FE 05            cp 5
 624+ 8F73 38 0E            jr c,3F
 625+ 8F75
 626+ 8F75              ; LLegados a este punto:
 627+ 8F75              ;
 628+ 8F75              ;   HAY COLISIÓN !!!!!.
 629+ 8F75              ;
 630+ 8F75              ;   .db (Impacto) de Amadeus a "1".
 631+ 8F75              ;   SET el bit3 de (Impacto2).
 632+ 8F75              ;
 633+ 8F75              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 8F75
 635+ 8F75 21 97 85         ld hl,Amadeus_db+25
 636+ 8F78 36 01            ld (hl),1
 637+ 8F7A 21 05 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 8F7D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 8F7F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 8F81 18 18            jr 1F
 641+ 8F83
 642+ 8F83              ; -----
 643+ 8F83
 644+ 8F83 E1           3 pop hl
 645+ 8F84 CD 48 95         call NextScan
 646+ 8F87 E5               push hl
 647+ 8F88 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 8F89 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 8F8B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 8F8D 30 0C            jr nc,1F
 651+ 8F8F              ;                                                  ; _ 2º scanline si esto es así.
 652+ 8F8F 10 DC            djnz 2B
 653+ 8F91
 654+ 8F91              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 8F91
 656+ 8F91              ; LLegados a este punto:
 657+ 8F91              ;
 658+ 8F91              ;   NO HAY COLISIÓN !!!!!.
 659+ 8F91              ;
 660+ 8F91              ;   .db (Impacto) de Amadeus a "0".
 661+ 8F91              ;   RES el bit2 de (Impacto2).
 662+ 8F91              ;
 663+ 8F91              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F91              ;   Lo colocamos a "0".
 665+ 8F91
 666+ 8F91 21 05 89         ld hl,Impacto2
 667+ 8F94 CB 96            res 2,(hl)
 668+ 8F96 2A 06 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 8F99 36 00            ld (hl),0
 670+ 8F9B
 671+ 8F9B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 8F9C C9               ret
 673+ 8F9D
 674+ 8F9D               ; ---------- ----------
 675+ 8F9D
 676+ 8F9D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 8F9E 3A A5 88         ld a,(Columns)
 678+ 8FA1 47               ld b,a
 679+ 8FA2 FD 7E 00     2 ld a,(iy)
 680+ 8FA5 BE               cp (hl)
 681+ 8FA6 28 01            jr z,1F
 682+ 8FA8
 683+ 8FA8 1C               inc e
 684+ 8FA9
 685+ 8FA9 23           1 inc hl
 686+ 8FAA FD 23            inc iy
 687+ 8FAC 10 F4            djnz 2B
 688+ 8FAE C1               pop bc
 689+ 8FAF C9               ret
 690+ 8FB0
 691+ 8FB0              ; -------------------------------------------------------------------------------------------------------------
 692+ 8FB0              ;
 693+ 8FB0              ;   13/03/23
 694+ 8FB0              ;
 695+ 8FB0              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 8FB0              ;
 697+ 8FB0              ;   DESTRUYE: HL,BC,DE y A.
 698+ 8FB0
 699+ 8FB0 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 8FB3 7E               ld a,(hl)
 701+ 8FB4 A7               and a
 702+ 8FB5 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 8FB6
 704+ 8FB6 44               ld b,h
 705+ 8FB7 4D               ld c,l
 706+ 8FB8 2A FA 88         ld hl,(Stack_snapshot_disparos)
 707+ 8FBB E5               push hl
 708+ 8FBC A7               and a
 709+ 8FBD ED 42            sbc hl,bc
 710+ 8FBF E5               push hl
 711+ 8FC0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 8FC1
 713+ 8FC1 E1               pop hl
 714+ 8FC2 54               ld d,h
 715+ 8FC3 5D               ld e,l
 716+ 8FC4 1B               dec de
 717+ 8FC5 ED B8            lddr                                                ; Limpiamos.
 718+ 8FC7
 719+ 8FC7 21 56 70         ld hl,Album_de_fotos_disparos
 720+ 8FCA 22 FA 88         ld (Stack_snapshot_disparos),hl
 721+ 8FCD
 722+ 8FCD C9               ret
 723+ 8FCE
 724+ 8FCE              ; -------------------------------------------------------------------------------------------------------------
 725+ 8FCE              ;
 726+ 8FCE              ;   18/07/23
 727+ 8FCE              ;
 728+ 8FCE
 729+ 8FCE              Motor_de_disparos
 730+ 8FCE
 731+ 8FCE              ; Gestiona DISPAROS DE AMADEUS.
 732+ 8FCE
 733+ 8FCE 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 8FD1 2A 03 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 8FD4
 736+ 8FD4 CD E6 8B     2 call Extrae_address
 737+ 8FD7 7E               ld a,(hl)
 738+ 8FD8 A7               and a
 739+ 8FD9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 8FDB
 741+ 8FDB              ; ----- ----- ----- ----- ----- -----
 742+ 8FDB
 743+ 8FDB C5               push bc
 744+ 8FDC CD A0 90         call foto_disparo_a_borrar
 745+ 8FDF
 746+ 8FDF              ; Existe colisión con este disparo???
 747+ 8FDF
 748+ 8FDF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 8FE0 7E               ld a,(hl)
 750+ 8FE1 2B               dec hl
 751+ 8FE2 E6 01            and 1
 752+ 8FE4 28 1D            jr z,9F
 753+ 8FE6
 754+ 8FE6              ;   En este punto:
 755+ 8FE6              ;
 756+ 8FE6              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 8FE6              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 8FE6              ;   _con la entidad).
 759+ 8FE6              ;
 760+ 8FE6              ;   Disparo_2A defw 0                                ; Control.
 761+ 8FE6              ;    defw 0                                          ; Puntero objeto.
 762+ 8FE6              ;    defw 0                                          ; Puntero de impresión.
 763+ 8FE6              ;    defw 0                                          ; Rutina de impresión.
 764+ 8FE6
 765+ 8FE6 E5               push hl
 766+ 8FE7
 767+ 8FE7 06 04            ld b,4
 768+ 8FE9 23           19 inc hl
 769+ 8FEA 10 FD            djnz 19B
 770+ 8FEC
 771+ 8FEC CD E6 8B         call Extrae_address
 772+ 8FEF CD 15 9C         call Genera_coordenadas_disparo
 773+ 8FF2
 774+ 8FF2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 8FF2
 776+ 8FF2 21 08 89         ld hl,Coordenadas_disparo_certero
 777+ 8FF5 72               ld (hl),d
 778+ 8FF6 23               inc hl
 779+ 8FF7 73               ld (hl),e
 780+ 8FF8
 781+ 8FF8              ; Elimino el disparo de la base de datos.
 782+ 8FF8
 783+ 8FF8 E1               pop hl
 784+ 8FF9 CD 1F 91         call Elimina_disparo_de_base_de_datos
 785+ 8FFC 21 05 89         ld hl,Impacto2
 786+ 8FFF CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9001
 788+ 9001 18 06            jr 11F
 789+ 9003
 790+ 9003 CD C9 90     9 call Mueve_disparo
 791+ 9006 CD A0 90         call foto_disparo_a_borrar
 792+ 9009
 793+ 9009 C1           11 pop bc
 794+ 900A 18 04            jr 7F
 795+ 900C
 796+ 900C              ; ----- ----- ----- ----- ----- -----
 797+ 900C
 798+ 900C ED 42        1 sbc hl,bc
 799+ 900E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9010
 801+ 9010 2A 03 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9013 23               inc hl
 803+ 9014 23               inc hl
 804+ 9015 22 03 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9018 18 BA            jr 2B
 806+ 901A
 807+ 901A CD 67 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 901D              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 901D
 810+ 901D              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 901D
 812+ 901D 01 6A 85         ld bc,Disparo_11
 813+ 9020 2A 01 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9023
 815+ 9023 CD E6 8B     5 call Extrae_address
 816+ 9026 7E               ld a,(hl)
 817+ 9027 A7               and a
 818+ 9028 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 902A
 820+ 902A              ; ----- ----- ----- ----- ----- -----
 821+ 902A
 822+ 902A C5               push bc
 823+ 902B CD A0 90         call foto_disparo_a_borrar
 824+ 902E
 825+ 902E              ; Existe colisión con este disparo???
 826+ 902E
 827+ 902E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 902F 7E               ld a,(hl)
 829+ 9030 2B               dec hl
 830+ 9031 E6 01            and 1
 831+ 9033 28 4D            jr z,10F
 832+ 9035
 833+ 9035              ;! La colisión se produce con Amadeus???
 834+ 9035              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9035
 836+ 9035 E5               push hl
 837+ 9036
 838+ 9036 06 04            ld b,4
 839+ 9038 23           16 inc hl
 840+ 9039 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 903B
 842+ 903B CD E6 8B         call Extrae_address
 843+ 903E CD 15 9C         call Genera_coordenadas_disparo
 844+ 9041
 845+ 9041 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9042 FE 16            cp $16
 847+ 9044 38 2A            jr c,15F
 848+ 9046
 849+ 9046
 850+ 9046              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9046
 852+ 9046 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9047
 854+ 9047              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9047
 856+ 9047
 857+ 9047 2A 10 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 904A
 859+ 904A              ; Coordenada X de Amadeus en D.
 860+ 904A
 861+ 904A 7D               ld a,l
 862+ 904B E6 1F            and $1F
 863+ 904D 57               ld d,a
 864+ 904E
 865+ 904E 21 86 85         ld hl,Amadeus_db+8
 866+ 9051 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9052
 868+ 9052 21 0A 89         ld hl,Coordenadas_X_Amadeus
 869+ 9055 CD 2A 91         call Guarda_coordenadas_X
 870+ 9058
 871+ 9058 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9059
 873+ 9059              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9059
 875+ 9059 06 02            ld b,2
 876+ 905B C5           20 push bc
 877+ 905C
 878+ 905C 06 03            ld b,3
 879+ 905E 21 0A 89         ld hl,Coordenadas_X_Amadeus
 880+ 9061 7E           18 ld a,(hl)
 881+ 9062 BA               cp d
 882+ 9063 20 04            jr nz,17F
 883+ 9065
 884+ 9065              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9065
 886+ 9065 C1               pop bc
 887+ 9066 E1               pop hl
 888+ 9067 18 0D            jr 14F
 889+ 9069
 890+ 9069 23           17 inc hl
 891+ 906A 10 F5            djnz 18B
 892+ 906C
 893+ 906C 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 906D
 895+ 906D C1               pop bc
 896+ 906E 10 EB            djnz 20B
 897+ 9070
 898+ 9070
 899+ 9070              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9070              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9070
 902+ 9070 E1           15 pop hl
 903+ 9071 23               inc hl
 904+ 9072 35               dec (hl)
 905+ 9073 2B               dec hl
 906+ 9074 18 0C            jr 10F
 907+ 9076
 908+ 9076              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9076              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9076
 911+ 9076 E5           14 push hl
 912+ 9077 CD 1F 91         call Elimina_disparo_de_base_de_datos
 913+ 907A 21 05 89         ld hl,Impacto2
 914+ 907D CB CE            set 1,(hl)
 915+ 907F E1               pop hl
 916+ 9080 18 06            jr 12F
 917+ 9082
 918+ 9082              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9082
 920+ 9082 CD C9 90     10 call Mueve_disparo
 921+ 9085 CD A0 90         call foto_disparo_a_borrar
 922+ 9088 C1           12 pop bc
 923+ 9089
 924+ 9089 18 04            jr 8F
 925+ 908B
 926+ 908B              ; ----- ----- ----- ----- ----- -----
 927+ 908B
 928+ 908B ED 42        4 sbc hl,bc
 929+ 908D 28 0A            jr z,6F
 930+ 908F
 931+ 908F 2A 01 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9092 23               inc hl
 933+ 9093 23               inc hl
 934+ 9094 22 01 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9097 18 8A            jr 5B
 936+ 9099
 937+ 9099 CD 60 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 909C CD 66 91         call Limpia_Coordenadas_X
 939+ 909F C9               ret
 940+ 90A0
 941+ 90A0              ; ------------------------------------------------------------------
 942+ 90A0
 943+ 90A0              foto_disparo_a_borrar
 944+ 90A0
 945+ 90A0 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 90A1 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 90A2 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 90A3
 949+ 90A3 E5               push hl
 950+ 90A4 23               inc hl
 951+ 90A5 23               inc hl
 952+ 90A6 ED 73 F2 88      ld (Stack),sp
 953+ 90AA F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 90AB FD E1            pop iy
 955+ 90AD DD E1            pop ix
 956+ 90AF E1               pop hl
 957+ 90B0 ED 7B F2 88      ld sp,(Stack)
 958+ 90B4 3A E1 88         ld a,(Ctrl_1)
 959+ 90B7 CB C7            set 0,a
 960+ 90B9 32 E1 88         ld (Ctrl_1),a
 961+ 90BC CD A0 7F         call Guarda_foto_registros
 962+ 90BF 3A E1 88         ld a,(Ctrl_1)
 963+ 90C2 CB 87            res 0,a
 964+ 90C4 32 E1 88         ld (Ctrl_1),a
 965+ 90C7 E1               pop hl
 966+ 90C8 C9               ret
 967+ 90C9
 968+ 90C9              ;---------------------------------------------------
 969+ 90C9              ;
 970+ 90C9              ;   18/07/23
 971+ 90C9              ;
 972+ 90C9
 973+ 90C9              Mueve_disparo
 974+ 90C9
 975+ 90C9              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 90C9              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 90C9              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 90C9
 979+ 90C9 E5               push hl
 980+ 90CA
 981+ 90CA 7E               ld a,(hl)
 982+ 90CB
 983+ 90CB 06 04            ld b,4
 984+ 90CD 23           1 inc hl
 985+ 90CE 10 FD            djnz 1B
 986+ 90D0
 987+ 90D0              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 90D0
 989+ 90D0 CD E6 8B         call Extrae_address
 990+ 90D3
 991+ 90D3 E6 01            and 1
 992+ 90D5 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 90D7
 994+ 90D7              ; Disparo hacia arriba, (Amadeus).
 995+ 90D7
 996+ 90D7              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 90D7              ; _ de la dificultad.
 998+ 90D7
 999+ 90D7 CD 57 95         call PreviousScan
1000+ 90DA CD 57 95         call PreviousScan
1001+ 90DD CD 57 95         call PreviousScan
1002+ 90E0 CD 57 95         call PreviousScan
1003+ 90E3
1004+ 90E3              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 90E3
1006+ 90E3 7C               ld a,h
1007+ 90E4 FE 40            cp $40
1008+ 90E6 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 90E8
1010+ 90E8              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 90E8
1012+ 90E8 EB               ex de,hl
1013+ 90E9 06 04            ld b,4
1014+ 90EB 2B           6 dec hl
1015+ 90EC 10 FD            djnz 6B
1016+ 90EE
1017+ 90EE CD 1F 91         call Elimina_disparo_de_base_de_datos
1018+ 90F1 E1               pop hl
1019+ 90F2 18 10            jr 7F
1020+ 90F4
1021+ 90F4              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 90F4              ; HL contiene el puntero de impresión del disparo.
1023+ 90F4              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 90F4
1025+ 90F4 D5           3 push de
1026+ 90F5 C5               push bc
1027+ 90F6
1028+ 90F6 CD BE 8E         call Comprueba_Colision
1029+ 90F9
1030+ 90F9              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 90F9
1032+ 90F9 78               ld a,b
1033+ 90FA
1034+ 90FA C1               pop bc
1035+ 90FB D1               pop de
1036+ 90FC
1037+ 90FC EB               ex de,hl
1038+ 90FD
1039+ 90FD 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 90FE 23               inc hl                                      ; _ movimiento.
1041+ 90FF 72               ld (hl),d
1042+ 9100
1043+ 9100 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9101
1045+ 9101 23               inc hl                                      ; _ en curso.
1046+ 9102 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9103 2B               dec hl
1048+ 9104
1049+ 9104 C9           7 ret
1050+ 9105
1051+ 9105              ; Disparo hacia abajo, (Entidad).
1052+ 9105
1053+ 9105 3A 12 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9108 47               ld b,a
1055+ 9109
1056+ 9109 CD 48 95     4 call NextScan
1057+ 910C 10 FB            djnz 4B
1058+ 910E
1059+ 910E              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 910E
1061+ 910E 7C               ld a,h
1062+ 910F FE 58            cp $58
1063+ 9111 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9113
1065+ 9113 EB               ex de,hl
1066+ 9114 06 04            ld b,4
1067+ 9116 2B           5 dec hl
1068+ 9117 10 FD            djnz 5B
1069+ 9119
1070+ 9119 CD 1F 91         call Elimina_disparo_de_base_de_datos
1071+ 911C E1               pop hl
1072+ 911D 18 E5            jr 7B
1073+ 911F
1074+ 911F              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 911F
1076+ 911F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9122 AF               xor a
1078+ 9123 77               ld (hl),a
1079+ 9124 54               ld d,h
1080+ 9125 5D               ld e,l
1081+ 9126 13               inc de
1082+ 9127 ED B0            ldir
1083+ 9129 C9               ret
1084+ 912A
1085+ 912A              ; -----------------------------------------------------------------
1086+ 912A              ;
1087+ 912A              ;   19/7/23
1088+ 912A              ;
1089+ 912A              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 912A              ;
1091+ 912A              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 912A              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 912A              ;
1094+ 912A              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 912A              ;
1096+ 912A              ;   INPUTS:
1097+ 912A              ;
1098+ 912A              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 912A              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 912A
1101+ 912A              ;   MODIFICA: A, HL, BC y DE.
1102+ 912A
1103+ 912A              Guarda_coordenadas_X
1104+ 912A
1105+ 912A 7B               ld a,e
1106+ 912B A7               and a
1107+ 912C 20 04            jr nz,1F
1108+ 912E
1109+ 912E 06 02            ld b,2
1110+ 9130 18 02            jr 2F
1111+ 9132
1112+ 9132 06 03        1 ld b,3
1113+ 9134 72           2 ld (hl),d
1114+ 9135 23               inc hl
1115+ 9136 14               inc d
1116+ 9137 10 FB            djnz 2B
1117+ 9139
1118+ 9139 C9               ret
1119+ 913A
1120+ 913A              ; -----------------------------------------------------------------
1121+ 913A              ;
1122+ 913A              ;   12/04/23
1123+ 913A              ;
1124+ 913A
1125+ 913A 3A 05 89     Selector_de_impactos ld a,(Impacto2)
1126+ 913D A7               and a
1127+ 913E C8               ret z
1128+ 913F
1129+ 913F FE 04            cp 4
1130+ 9141 20 09            jr nz,1F
1131+ 9143
1132+ 9143
1133+ 9143              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9143
1135+ 9143 CD 5F 8F         call Detecta_colision_nave_entidad
1136+ 9146
1137+ 9146 21 05 89         ld hl,Impacto2
1138+ 9149 CB 5E            bit 3,(hl)
1139+ 914B C0               ret nz                                               ; Existe colisión, RET.
1140+ 914C
1141+ 914C              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 914C              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 914C
1144+ 914C 21 05 89     1 ld hl,Impacto2
1145+ 914F CB 4E            bit 1,(hl)
1146+ 9151 28 07            jr z,2F
1147+ 9153
1148+ 9153 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9156 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9158 18 0B            jr 3F
1151+ 915A
1152+ 915A 21 05 89     2 ld hl,Impacto2
1153+ 915D CB 46            bit 0,(hl)
1154+ 915F C8               ret z
1155+ 9160
1156+ 9160              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9160
1158+ 9160 21 E1 88         ld hl,Ctrl_1
1159+ 9163 CB D6            set 2,(hl)
1160+ 9165
1161+ 9165 C9           3 ret
1162+ 9166
1163+ 9166              ; -----------------------------------------------------------------
1164+ 9166              ;
1165+ 9166              ;   19/7/23
1166+ 9166              ;
1167+ 9166              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9166
1169+ 9166 AF           Limpia_Coordenadas_X xor a
1170+ 9167 06 06            ld b,6
1171+ 9169 21 0A 89         ld hl,Coordenadas_X_Amadeus
1172+ 916C 77           1 ld (hl),a
1173+ 916D 23               inc hl
1174+ 916E 10 FC            djnz 1B
1175+ 9170 C9               ret
1176+ 9171
1177+ 9171              ; -----------------------------------------------------------------
1178+ 9171              ;
1179+ 9171              ;   25/04/23
1180+ 9171              ;
1181+ 9171
1182+ 9171              Determina_resultado_comparativa
1183+ 9171
1184+ 9171              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9171              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9171              ;
1187+ 9171              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9171              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9171              ;
1190+ 9171              ;   SBC HL,DE
1191+ 9171
1192+ 9171              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9171              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9171
1195+ 9171              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9171              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9171
1198+ 9171
1199+ 9171 3A B8 88         ld a,(Cuad_objeto)
1200+ 9174 FE 02            cp 2
1201+ 9176 28 26            jr z,2F
1202+ 9178 38 24            jr c,2F
1203+ 917A
1204+ 917A              ; Cuadrantes 3º y 4º
1205+ 917A
1206+ 917A E6 01            and 1
1207+ 917C 28 10            jr z,4F
1208+ 917E
1209+ 917E              ; Cuadrante 3º
1210+ 917E
1211+ 917E 7C               ld a,h
1212+ 917F 06 00            ld b,0
1213+ 9181
1214+ 9181 CD 0C 92         call Compara_cositas_H3
1215+ 9184
1216+ 9184 04               inc b
1217+ 9185 05               dec b
1218+ 9186 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9187
1220+ 9187 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9188 06 00            ld b,0
1222+ 918A
1223+ 918A CD 1E 92         call Compara_cositas_L3
1224+ 918D C9               ret
1225+ 918E
1226+ 918E              ; Cuadrante 4º
1227+ 918E
1228+ 918E 7C           4 ld a,h
1229+ 918F 06 00            ld b,0
1230+ 9191
1231+ 9191 CD 30 92         call Compara_cositas_H4
1232+ 9194
1233+ 9194 04               inc b
1234+ 9195 05               dec b
1235+ 9196 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9197
1237+ 9197 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9198 06 00            ld b,0
1239+ 919A
1240+ 919A CD 46 92         call Compara_cositas_L4
1241+ 919D C9               ret
1242+ 919E
1243+ 919E              ; Cuadrantes 1º y 2º.
1244+ 919E
1245+ 919E 28 10        2 jr z,3F
1246+ 91A0
1247+ 91A0              ; 1er Cuadrante
1248+ 91A0
1249+ 91A0 7C               ld a,h
1250+ 91A1 06 00            ld b,0
1251+ 91A3
1252+ 91A3 CD E4 91         call Compara_cositas_H1
1253+ 91A6
1254+ 91A6 04               inc b
1255+ 91A7 05               dec b
1256+ 91A8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 91A9
1258+ 91A9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 91AA 06 00            ld b,0
1260+ 91AC
1261+ 91AC CD FA 91         call Compara_cositas_L1
1262+ 91AF C9               ret
1263+ 91B0
1264+ 91B0
1265+ 91B0              ; 2º Cuadrante
1266+ 91B0
1267+ 91B0 7C           3 ld a,h
1268+ 91B1 06 00            ld b,0
1269+ 91B3
1270+ 91B3 CD C0 91         call Compara_cositas_H2
1271+ 91B6
1272+ 91B6 04               inc b
1273+ 91B7 05               dec b
1274+ 91B8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 91B9
1276+ 91B9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 91BA 06 00            ld b,0
1278+ 91BC
1279+ 91BC CD D2 91         call Compara_cositas_L2
1280+ 91BF C9               ret
1281+ 91C0
1282+ 91C0 A7           Compara_cositas_H2 and a
1283+ 91C1 28 0D            jr z,1F
1284+ 91C3              ;    cp $fd
1285+ 91C3              ;    jr z,1F
1286+ 91C3              ;    cp $fe
1287+ 91C3              ;    jr z,1F
1288+ 91C3 FE FF            cp $ff
1289+ 91C5 28 09            jr z,1F
1290+ 91C7 FE 01            cp $01
1291+ 91C9 28 05            jr z,1F
1292+ 91CB FE 02            cp $02
1293+ 91CD 28 01            jr z,1F
1294+ 91CF C0               ret nz
1295+ 91D0 04           1 inc b
1296+ 91D1 C9               ret
1297+ 91D2
1298+ 91D2 A7           Compara_cositas_L2 and a
1299+ 91D3 28 0D            jr z,1F
1300+ 91D5              ;    cp $fd
1301+ 91D5              ;    jr z,1F
1302+ 91D5 FE FE            cp $fe
1303+ 91D7 28 09            jr z,1F
1304+ 91D9 FE FF            cp $ff
1305+ 91DB 28 05            jr z,1F
1306+ 91DD FE 01            cp $01
1307+ 91DF 28 01            jr z,1F
1308+ 91E1              ;    cp $02
1309+ 91E1              ;    jr z,1F
1310+ 91E1 C0               ret nz
1311+ 91E2 04           1 inc b
1312+ 91E3 C9               ret
1313+ 91E4
1314+ 91E4 A7           Compara_cositas_H1 and a
1315+ 91E5 28 11            jr z,1F
1316+ 91E7              ;    cp $fd
1317+ 91E7              ;    jr z,1F
1318+ 91E7              ;    cp $fe
1319+ 91E7              ;    jr z,1F
1320+ 91E7 FE FF            cp $ff
1321+ 91E9 28 0D            jr z,1F
1322+ 91EB FE 01            cp $01
1323+ 91ED 28 09            jr z,1F
1324+ 91EF FE 02            cp $02
1325+ 91F1 28 05            jr z,1F
1326+ 91F3 FE 03            cp $03
1327+ 91F5 28 01            jr z,1F
1328+ 91F7 C0               ret nz
1329+ 91F8 04           1 inc b
1330+ 91F9 C9               ret
1331+ 91FA
1332+ 91FA A7           Compara_cositas_L1 and a
1333+ 91FB 28 0D            jr z,1F
1334+ 91FD              ;    cp $fd
1335+ 91FD              ;    jr z,1F
1336+ 91FD              ;    cp $fe
1337+ 91FD              ;    jr z,1F
1338+ 91FD              ;    cp $ff
1339+ 91FD              ;    jr z,1F
1340+ 91FD FE 01            cp $01
1341+ 91FF 28 09            jr z,1F
1342+ 9201 FE 02            cp $02
1343+ 9203 28 05            jr z,1F
1344+ 9205 FE 03            cp $03
1345+ 9207 28 01            jr z,1F
1346+ 9209 C0               ret nz
1347+ 920A 04           1 inc b
1348+ 920B C9               ret
1349+ 920C
1350+ 920C A7           Compara_cositas_H3 and a
1351+ 920D 28 0D            jr z,1F
1352+ 920F              ;    cp $fd
1353+ 920F              ;    jr z,1F
1354+ 920F FE FE            cp $fe
1355+ 9211 28 09            jr z,1F
1356+ 9213 FE FF            cp $ff
1357+ 9215 28 05            jr z,1F
1358+ 9217 FE 01            cp $01
1359+ 9219 28 01            jr z,1F
1360+ 921B              ;    cp $02
1361+ 921B              ;    jr z,1F
1362+ 921B              ;    cp $03
1363+ 921B              ;    jr z,1F
1364+ 921B C0               ret nz
1365+ 921C 04           1 inc b
1366+ 921D C9               ret
1367+ 921E
1368+ 921E A7           Compara_cositas_L3 and a
1369+ 921F 28 0D            jr z,1F
1370+ 9221              ;    cp $fd
1371+ 9221              ;    jr z,1F
1372+ 9221              ;    cp $fe
1373+ 9221              ;    jr z,1F
1374+ 9221              ;    cp $ff
1375+ 9221              ;    jr z,1F
1376+ 9221 FE 01            cp $01
1377+ 9223 28 09            jr z,1F
1378+ 9225 FE 02            cp $02
1379+ 9227 28 05            jr z,1F
1380+ 9229 FE 03            cp $03
1381+ 922B 28 01            jr z,1F
1382+ 922D C0               ret nz
1383+ 922E 04           1 inc b
1384+ 922F C9               ret
1385+ 9230
1386+ 9230 A7           Compara_cositas_H4 and a
1387+ 9231 28 11            jr z,1F
1388+ 9233 FE FD            cp $fd
1389+ 9235 28 0D            jr z,1F
1390+ 9237 FE FE            cp $fe
1391+ 9239 28 09            jr z,1F
1392+ 923B FE FF            cp $ff
1393+ 923D 28 05            jr z,1F
1394+ 923F FE 01            cp $01
1395+ 9241 28 01            jr z,1F
1396+ 9243              ;    cp $02
1397+ 9243              ;    jr z,1F
1398+ 9243              ;    cp $03
1399+ 9243              ;    jr z,1F
1400+ 9243 C0               ret nz
1401+ 9244 04           1 inc b
1402+ 9245 C9               ret
1403+ 9246
1404+ 9246 A7           Compara_cositas_L4 and a
1405+ 9247 28 0D            jr z,1F
1406+ 9249              ;    cp $fd
1407+ 9249              ;    jr z,1F
1408+ 9249 FE FE            cp $fe
1409+ 924B 28 09            jr z,1F
1410+ 924D FE FF            cp $ff
1411+ 924F 28 05            jr z,1F
1412+ 9251 FE 01            cp $01
1413+ 9253 28 01            jr z,1F
1414+ 9255              ;    cp $02
1415+ 9255              ;    jr z,1F
1416+ 9255              ;    cp $03
1417+ 9255              ;    jr z,1F
1418+ 9255 C0               ret nz
1419+ 9256 04           1 inc b
1420+ 9257 C9               ret
# file closed: Disparo.asm
1500  9258              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9258              ; ******************************************************************************************************************************************************************************************
   2+ 9258              ;
   3+ 9258              ; 26/06/23
   4+ 9258              ;
   5+ 9258              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9258
   7+ 9258 CD 3C 95     Draw call Prepara_draw
   8+ 925B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 925C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 925D 28 05        	jr z,2F
  11+ 925F
  12+ 925F 3A B8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9262 18 0C        	jr 1F
  14+ 9264
  15+ 9264 2A B6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9267 22 A6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 926A CD F9 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 926D              ;													; _la esquina superior izquierda de la pantalla.
  19+ 926D CD A0 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9270
  21+ 9270 3A CE 88     1 ld a,(Ctrl_0)
  22+ 9273 CB 6F        	bit 5,a
  23+ 9275 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9277
  25+ 9277 CD 8F 92     	call Comprueba_limite_horizontal
  26+ 927A CD 1F 93     	call Comprueba_limite_vertical
  27+ 927D
  28+ 927D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 927D              ; -----------------------
  30+ 927D              ; -----------------------
  31+ 927D              ; -----------------------
  32+ 927D
  33+ 927D CD 6C 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9280 CD A3 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9283 CD 02 95     	call Define_rutina_de_impresion
  36+ 9286
  37+ 9286 3A CE 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9289 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 928B 32 CE 88     	ld (Ctrl_0),a
  40+ 928E
  41+ 928E C9           	ret
  42+ 928F
  43+ 928F              ; *******************************************************************************************************************************************************************************************
  44+ 928F              ;	21/01/23
  45+ 928F              ;
  46+ 928F              ; 	Comprueba_limite_horizontal.
  47+ 928F              ;
  48+ 928F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 928F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 928F              ;
  51+ 928F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 928F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 928F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 928F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 928F
  56+ 928F
  57+ 928F
  58+ 928F 3A CE 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9292 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9294 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9296 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9298 32 CE 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 929B 18 09            jr 6F
  64+ 929D CB 5F        1 bit 3,a
  65+ 929F 28 0A            jr z,2F
  66+ 92A1 E6 F7            and $f7
  67+ 92A3 32 CE 88         ld (Ctrl_0),a
  68+ 92A6 CD F9 93     6 call Inicializacion
  69+ 92A9 18 5B            jr 5F
  70+ 92AB E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 92AC
  72+ 92AC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 92AC              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 92AC
  75+ 92AC EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 92AD 2A DC 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 92B0 CD 5B 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 92B3 67           	ld h,a
  79+ 92B4 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 92B5 CD 5B 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 92B8 67           	ld h,a
  82+ 92B9 A7           	and a
  83+ 92BA ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 92BC 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 92BD 3A B8 88     	ld a,(Cuad_objeto)
  86+ 92C0 FE 02        	cp 2
  87+ 92C2 38 1E        	jr c,3F
  88+ 92C4 28 1C        	jr z,3F
  89+ 92C6 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 92C7 28 23            jr z,7F
  91+ 92C9 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 92CB 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 92CD E1           	pop hl
  94+ 92CE
  95+ 92CE              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 92CE              ; _para indicar con E="2" en caso necesario.
  97+ 92CE
  98+ 92CE E5               push hl
  99+ 92CF C5               push bc
 100+ 92D0 CD 5B 98     	call calcula_tercio
 101+ 92D3 FE 01        	cp 1
 102+ 92D5 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 92D7 CD 07 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 92DA 28 26            jr z,9F
 105+ 92DC 38 24            jr c,9F
 106+ 92DE 1E 00        11 ld e,0
 107+ 92E0 18 22            jr 8F
 108+ 92E2 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 92E3 28 07        	jr z, 7F
 110+ 92E5 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 92E7 1E 00         	ld e,0
 112+ 92E9 E1           	pop hl
 113+ 92EA 18 04        	jr 4F
 114+ 92EC 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 92EE 18 15            jr 10F
 116+ 92F0
 117+ 92F0              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 92F0              ; _para indicar con E="2" en caso necesario.
 119+ 92F0
 120+ 92F0 E5           4 push hl
 121+ 92F1 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 92F2 CD 5B 98     	call calcula_tercio
 123+ 92F5 FE 01        	cp 1
 124+ 92F7 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 92F9 CD 07 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 92FC 28 04            jr z,9F
 127+ 92FE 30 02            jr nc,9F
 128+ 9300 18 02        	jr 8F
 129+ 9302 1E 02        9 ld e,2
 130+ 9304 C1           8 pop bc
 131+ 9305 E1           10 pop hl
 132+ 9306 C9           5 ret
 133+ 9307
 134+ 9307              ; --------------------
 135+ 9307              ;
 136+ 9307              ; 25/08/22
 137+ 9307
 138+ 9307 CD 5B 98     Comprueba_centro call calcula_tercio
 139+ 930A 67               ld h,a
 140+ 930B 08           	ex af,af
 141+ 930C FE 02        	cp 2
 142+ 930E 38 07        	jr c,1F
 143+ 9310 28 05        	jr z,1F
 144+ 9312 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9315 18 03        	jr 2F
 146+ 9317 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 931A 08           2 ex af,af
 148+ 931B A7               and a
 149+ 931C ED 42            sbc hl,bc
 150+ 931E C9               ret
 151+ 931F
 152+ 931F              ; *********************************************************************************************************************************************************************************************
 153+ 931F              ;
 154+ 931F              ;   16/8/22
 155+ 931F              ;
 156+ 931F              ;	Comprueba_limite_vertical
 157+ 931F              ;
 158+ 931F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 931F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 931F              ;
 161+ 931F
 162+ 931F 2A A6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9322 7D           	ld a,l
 164+ 9323 E6 1F        	and $1F
 165+ 9325 57           	ld d,a
 166+ 9326 3A DE 88     	ld a,(Limite_vertical)
 167+ 9329 BA           	cp d 											; Límite - Posición.
 168+ 932A 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 932B 3A B8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 932E CB 47        	bit 0,a
 171+ 9330 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9332
 173+ 9332              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9332
 175+ 9332 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9333 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9335
 178+ 9335              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9335              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9335
 181+ 9335 3A AA 88         ld a,(Coordenada_X)
 182+ 9338 16 0F            ld d,Centro_izquierda
 183+ 933A A7               and a
 184+ 933B 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 933C 28 1E            jr z,3F
 186+ 933E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9340              ;                                                    ; _salimos sin modificar nada.
 188+ 9340 18 0E            jr 2F
 189+ 9342 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9343 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9345
 192+ 9345              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9345              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9345
 195+ 9345 3A AA 88         ld a,(Coordenada_X)
 196+ 9348 16 10            ld d,Centro_derecha
 197+ 934A A7               and a
 198+ 934B 92               sub d
 199+ 934C 28 0E            jr z,3F
 200+ 934E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9350              ;                                                    ; _salimos sin modificar nada.
 202+ 9350 CB 43        2 bit 0,e
 203+ 9352 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9354 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9355 CD E9 93         call Modificaccionne
 206+ 9358 C1           	pop bc
 207+ 9359 CD F9 93         call Inicializacion
 208+ 935C C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 935D
 210+ 935D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 935D
 212+ 935D C5           4 push bc
 213+ 935E 01 A5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9361 0A           	ld a,(bc)
 215+ 9362 3D           	dec a
 216+ 9363 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9364 7D           	ld a,l
 218+ 9365 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9366 CB 47        	bit 0,a
 220+ 9368 28 03        	jr z,5F
 221+ 936A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 936B 18 2E        	jr 7F
 223+ 936D
 224+ 936D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 936D
 226+ 936D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 936E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 936F 3A CE 88     	ld a,(Ctrl_0)
 229+ 9372 CB 4F        	bit 1,a
 230+ 9374 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9376 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9377
 233+ 9377              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9377
 235+ 9377 1C               inc e
 236+ 9378 1D               dec e
 237+ 9379 20 07            jr nz,12F
 238+ 937B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 937C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 937D 22 A6 88     	ld (Posicion_actual),hl
 241+ 9380 18 44        13 jr 9F
 242+ 9382 CB 43        12 bit 0,e
 243+ 9384 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9386              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9386 C1           	pop bc
 246+ 9387 18 D3        	jr 3B
 247+ 9389 80           14 add b
 248+ 938A 6F               ld l,a
 249+ 938B 22 A6 88     	ld (Posicion_actual),hl
 250+ 938E CD E9 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9391 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9393 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9395 32 CE 88         ld (Ctrl_0),a
 254+ 9398 F1           	pop af
 255+ 9399 18 2B        	jr 9F
 256+ 939B
 257+ 939B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 939B
 259+ 939B F5           7 push af
 260+ 939C 3A CE 88     	ld a,(Ctrl_0)
 261+ 939F CB 47        	bit 0,a
 262+ 93A1 20 1D        	jr nz,8F
 263+ 93A3 F1           	pop af
 264+ 93A4
 265+ 93A4              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 93A4
 267+ 93A4 1C           	inc e
 268+ 93A5 1D               dec e
 269+ 93A6 20 07            jr nz,10F
 270+ 93A8 90           	sub b
 271+ 93A9 6F               ld l,a
 272+ 93AA 22 A6 88     	ld (Posicion_actual),hl
 273+ 93AD 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 93AF              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 93AF CB 43        10 bit 0,e
 276+ 93B1 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 93B3              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 93B3 C1           	pop bc
 279+ 93B4 18 A6        	jr 3B
 280+ 93B6 90           16 sub b
 281+ 93B7 6F               ld l,a
 282+ 93B8 22 A6 88     	ld (Posicion_actual),hl
 283+ 93BB CD E9 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 93BE 18 06            jr 9F
 285+ 93C0 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 93C2 32 CE 88         ld (Ctrl_0),a
 287+ 93C5 F1           	pop af
 288+ 93C6 C1           9 pop bc
 289+ 93C7 1E 00        	ld e,0
 290+ 93C9 CD F9 93         call Inicializacion
 291+ 93CC F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 93CD 08           	ex af,af
 293+ 93CE F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 93CF 18 8B            jr 3B
 295+ 93D1
 296+ 93D1              ; --------------------
 297+ 93D1
 298+ 93D1 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 93D3 CD 57 95     1 call PreviousScan
 300+ 93D6 10 FB            djnz 1B
 301+ 93D8 22 A6 88     	ld (Posicion_actual),hl
 302+ 93DB AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 93DC C9           	ret
 304+ 93DD
 305+ 93DD              ; --------------------
 306+ 93DD
 307+ 93DD 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 93DF CD 48 95     1 call NextScan
 309+ 93E2 10 FB            djnz 1B
 310+ 93E4 22 A6 88     	ld (Posicion_actual),hl
 311+ 93E7 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 93E8 C9           	ret
 313+ 93E9
 314+ 93E9              ; --------------------
 315+ 93E9              ;
 316+ 93E9              ;	22/01/23
 317+ 93E9              ;
 318+ 93E9              ;	E="1". Hemos cambiado de cuadrante.
 319+ 93E9              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 93E9              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 93E9
 322+ 93E9
 323+ 93E9              Modificaccionne
 324+ 93E9
 325+ 93E9 3A B8 88     	ld a,(Cuad_objeto)
 326+ 93EC FE 02        	cp 2
 327+ 93EE CC D1 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 93F1 DC D1 93         call c,Modifica_Pos_actual
 329+ 93F4 C8           	ret z
 330+ 93F5 CD DD 93         call Modifica_Pos_actual2
 331+ 93F8 C9               ret
 332+ 93F9
 333+ 93F9              ; *************************************************************************************************************************************************************************************************
 334+ 93F9              ;
 335+ 93F9              ;	13/8/22
 336+ 93F9              ;
 337+ 93F9              ;	Inicializacion
 338+ 93F9              ;
 339+ 93F9              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 93F9              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 93F9              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 93F9              ;
 343+ 93F9              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 93F9              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 93F9              ;	_ desaparece/aparece.
 346+ 93F9
 347+ 93F9              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 93F9              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 93F9              ;
 350+ 93F9              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 93F9              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 93F9              ; 		   [E] ="0"
 353+ 93F9
 354+ 93F9              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 93F9
 356+ 93F9 CD 5B 98     Inicializacion call calcula_tercio
 357+ 93FC 28 36        	jr z,primit
 358+ 93FE E6 02        	and 2
 359+ 9400 20 07        	jr nz,segmit
 360+ 9402 7D           	ld a,l
 361+ 9403 FE 7F        	cp $7f
 362+ 9405 38 2D        	jr c,primit
 363+ 9407 28 2B        	jr z,primit
 364+ 9409 CD 66 94     segmit call column
 365+ 940C 38 13        	jr c,tercuad
 366+ 940E 3E 04        cuarcuad ld a,4
 367+ 9410 32 B8 88     	ld (Cuad_objeto),a
 368+ 9413 21 20 48     	ld hl,$4820
 369+ 9416 22 DC 88     	ld (Limite_horizontal),hl
 370+ 9419 21 DE 88     	ld hl,Limite_vertical
 371+ 941C 36 0D        	ld (hl),$0d
 372+ 941E 08           	ex af,af
 373+ 941F 18 3C        	jr 1F
 374+ 9421              tercuad
 375+ 9421 3E 03        	ld a,3
 376+ 9423 32 B8 88     	ld (Cuad_objeto),a
 377+ 9426 21 20 48     	ld hl,$4820
 378+ 9429 22 DC 88     	ld (Limite_horizontal),hl
 379+ 942C 21 DE 88     	ld hl,Limite_vertical
 380+ 942F 36 12        	ld (hl),$12
 381+ 9431 08           	ex af,af
 382+ 9432 18 29        	jr 1F
 383+ 9434 CD 66 94     primit call column
 384+ 9437 38 13        	jr c, primcuad
 385+ 9439              segcuad
 386+ 9439 3E 02        	ld a,2
 387+ 943B 32 B8 88     	ld (Cuad_objeto),a
 388+ 943E 21 C0 4F     	ld hl,$4fc0
 389+ 9441 22 DC 88     	ld (Limite_horizontal),hl
 390+ 9444 21 DE 88     	ld hl,Limite_vertical
 391+ 9447 36 0D        	ld (hl),$0d
 392+ 9449 08           	ex af,af
 393+ 944A 18 11        	jr 1F
 394+ 944C              primcuad
 395+ 944C 3E 01        	ld a,1
 396+ 944E 32 B8 88     	ld (Cuad_objeto),a
 397+ 9451 21 C0 4F     	ld hl,$4fc0
 398+ 9454 22 DC 88     	ld (Limite_horizontal),hl
 399+ 9457 21 DE 88     	ld hl,Limite_vertical
 400+ 945A 36 12        	ld (hl),$12
 401+ 945C 08           	ex af,af
 402+ 945D CD EA 9B     1 call Genera_coordenadas
 403+ 9460 21 CE 88     	ld hl,Ctrl_0
 404+ 9463 CB EE        	set 5,(hl)
 405+ 9465 C9           	ret
 406+ 9466
 407+ 9466              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9466
 409+ 9466              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9466              ;
 411+ 9466              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9466
 413+ 9466 7D           column ld a,l
 414+ 9467 E6 1F        	and $1f
 415+ 9469 FE 10         	cp $10
 416+ 946B C9            	ret
 417+ 946C
 418+ 946C              ; --------------------------------------------------------------------------------------------------------------------
 419+ 946C              ;
 420+ 946C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 946C              ;
 422+ 946C              ; 14/12/22
 423+ 946C              ;
 424+ 946C              ;	Modifica: A y BC.
 425+ 946C
 426+ 946C 3A B8 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 946F E6 01        	and 1
 428+ 9471 28 17        	jr z,1F
 429+ 9473
 430+ 9473              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9473
 432+ 9473 3A AA 88     	ld a,(Coordenada_X)
 433+ 9476 47           	ld b,a
 434+ 9477 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9478 79           	ld a,c
 436+ 9479 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 947A 38 08        	jr c,2F
 438+ 947C 47           	ld b,a
 439+ 947D 79           	ld a,c
 440+ 947E 90           	sub b
 441+ 947F 32 DB 88     	ld (Columnas),a
 442+ 9482 18 1B        	jr 4F
 443+ 9484 79           2 ld a,c
 444+ 9485 32 DB 88     	ld (Columnas),a
 445+ 9488 18 15        	jr 4F
 446+ 948A
 447+ 948A              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 948A
 449+ 948A 3A AA 88     1 ld a,(Coordenada_X)
 450+ 948D 81           	add c
 451+ 948E 3D           	dec a
 452+ 948F D6 1F        	sub $1f
 453+ 9491 38 08        	jr c,3F
 454+ 9493 47           	ld b,a
 455+ 9494 79           	ld a,c
 456+ 9495 90           	sub b
 457+ 9496 32 DB 88     	ld (Columnas),a
 458+ 9499 18 04        	jr 4F
 459+ 949B 79           3 ld a,c
 460+ 949C 32 DB 88     	ld (Columnas),a
 461+ 949F D9           4 exx
 462+ 94A0 4F           	ld c,a
 463+ 94A1 D9           	exx
 464+ 94A2 C9            ret
 465+ 94A3
 466+ 94A3              ; --------------------------------------------------------------------------------------------------------------------
 467+ 94A3              ;
 468+ 94A3              ;   19/7/23
 469+ 94A3              ;
 470+ 94A3              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 94A3              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 94A3              ;
 473+ 94A3              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 94A3              ;			HL e IY Contienen (Puntero_objeto).
 475+ 94A3              ;
 476+ 94A3              ;	DESTRUYE: HL,B Y A.
 477+ 94A3
 478+ 94A3 3A B8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 94A6 FE 02        	cp 2
 480+ 94A8 38 18        	jr c,1F
 481+ 94AA 28 16        	jr z,1F
 482+ 94AC E6 01        	and 1
 483+ 94AE 28 0D        	jr z,3F
 484+ 94B0
 485+ 94B0              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 94B0
 487+ 94B0 CD F6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 94B3
 489+ 94B3 7D           9 ld a,l
 490+ 94B4 E6 1F        	and $1f
 491+ 94B6 28 2A        	jr z,7F
 492+ 94B8 2B           	dec hl
 493+ 94B9 10 F8        	djnz 9B
 494+ 94BB 18 25        	jr 7F
 495+ 94BD
 496+ 94BD              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 94BD
 498+ 94BD 2A A6 88     3 ld hl,(Posicion_actual)
 499+ 94C0 18 20        	jr 7F
 500+ 94C2
 501+ 94C2 28 14        1 jr z,2F
 502+ 94C4
 503+ 94C4              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 94C4
 505+ 94C4 CD F6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 94C7
 507+ 94C7 7D           4 ld a,l
 508+ 94C8 E6 1F        	and $1f
 509+ 94CA 28 03        	jr z,6F
 510+ 94CC 2B           	dec hl
 511+ 94CD 10 F8        	djnz 4B
 512+ 94CF 06 0F        6 ld b,15
 513+ 94D1 CD 57 95     5 call PreviousScan
 514+ 94D4 10 FB        	djnz 5B
 515+ 94D6 18 0A        	jr 7F
 516+ 94D8
 517+ 94D8              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 94D8
 519+ 94D8 CD F6 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 94DB 06 0F        	ld b,15
 521+ 94DD CD 57 95     8 call PreviousScan
 522+ 94E0 10 FB        	djnz 8B
 523+ 94E2
 524+ 94E2 E5           7 push hl
 525+ 94E3 DD E1        	pop ix
 526+ 94E5
 527+ 94E5 2A A8 88     	ld hl,(Puntero_objeto)
 528+ 94E8 E5           	push hl
 529+ 94E9 FD E1        	pop iy
 530+ 94EB
 531+ 94EB              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 94EB
 533+ 94EB 3A CE 88     	ld a,(Ctrl_0)
 534+ 94EE CB 77        	bit 6,a
 535+ 94F0 C8           	ret z
 536+ 94F1
 537+ 94F1              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 94F1              ; _ entidad / Amadeus´.
 539+ 94F1
 540+ 94F1 DD 22 10 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 94F5
 542+ 94F5 C9           	ret
 543+ 94F6
 544+ 94F6              ; --------------------------------------------------------------------------------------------------------------------
 545+ 94F6              ;
 546+ 94F6              ;	2/1/23
 547+ 94F6              ;
 548+ 94F6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 94F6              ;
 550+ 94F6              ;	Tras esta rutina tenemos:
 551+ 94F6              ;
 552+ 94F6              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 94F6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 94F6              ;
 555+ 94F6              ;	DESTRUYE!!!!! HL,B y A.
 556+ 94F6
 557+ 94F6 2A A6 88     Operandos ld hl,(Posicion_actual)
 558+ 94F9 3A DB 88     	ld a,(Columnas)
 559+ 94FC 3D           	dec a
 560+ 94FD 20 01        	jr nz,1F
 561+ 94FF 3C           	inc a
 562+ 9500 47           1 ld b,a
 563+ 9501 C9           	ret
 564+ 9502
 565+ 9502              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9502              ;
 567+ 9502              ;	3/1/23
 568+ 9502              ;
 569+ 9502              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9502              ;
 571+ 9502              ;	Destruye: A,B,HL y DE.
 572+ 9502
 573+ 9502              Define_rutina_de_impresion
 574+ 9502
 575+ 9502 3A A5 88     	ld a,(Columns)
 576+ 9505 47           	ld b,a
 577+ 9506 3A DB 88     	ld a,(Columnas)
 578+ 9509 B8           	cp b
 579+ 950A 20 0D        	jr nz,2f
 580+ 950C
 581+ 950C              ;	La entidad se imprime entera.
 582+ 950C
 583+ 950C 21 2B 96     	ld hl, Indice_entidades_completas
 584+ 950F E6 01        	and 1
 585+ 9511 28 02        	jr z,1F
 586+ 9513
 587+ 9513 23           	inc hl
 588+ 9514 23           	inc hl
 589+ 9515
 590+ 9515 CD E6 8B     1 call Extrae_address
 591+ 9518 C9           	ret		;	ret
 592+ 9519
 593+ 9519              ;	La entidad no se imprime entera en pantalla.
 594+ 9519
 595+ 9519 3A B8 88     2 ld a,(Cuad_objeto)
 596+ 951C E6 01        	and 1
 597+ 951E 28 17        	jr z,3F
 598+ 9520
 599+ 9520              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9520
 601+ 9520 21 2F 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9523 3A A5 88     4 ld a,(Columns)
 603+ 9526 E6 01        	and 1
 604+ 9528 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 952A
 606+ 952A 23           	inc hl
 607+ 952B 23           	inc hl
 608+ 952C
 609+ 952C 3A DB 88     	ld a,(Columnas)
 610+ 952F E6 01        	and 1
 611+ 9531 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9533
 613+ 9533 23           	inc hl
 614+ 9534 23           	inc hl
 615+ 9535
 616+ 9535 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9537
 618+ 9537 21 35 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 953A 18 E7        	jr 4B
 620+ 953C
 621+ 953C              ; --------------------------------------------------------------------------------------------------------------------
 622+ 953C              ;
 623+ 953C              ;	Prepara_draw
 624+ 953C              ;
 625+ 953C              ;	Es una rutina de carga.
 626+ 953C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 953C              ;
 628+ 953C              ;	FUNCIONAMIENTO:
 629+ 953C              ;
 630+ 953C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 953C              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 953C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 953C              ;
 634+ 953C              ;	DESTRUYE:
 635+ 953C              ;
 636+ 953C              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 953C
 638+ 953C 21 A4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 953F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9540 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9541 4E           	ld c,(hl)
 642+ 9542 2A A6 88     	ld hl,(Posicion_actual)
 643+ 9545 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9547 C9           	ret
 645+ 9548
 646+ 9548              ;----------------------------------------------------------------------------------------------------------------
 647+ 9548              ;
 648+ 9548              ;	5/08/22
 649+ 9548              ;
 650+ 9548              ;   NextScan.
 651+ 9548              ;
 652+ 9548              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9548              ;
 654+ 9548              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9548              ;
 656+ 9548              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9548              ;
 658+ 9548              ;       DESTRUIDOS: AF y HL !!!
 659+ 9548              ;
 660+ 9548              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9548              ;
 662+ 9548
 663+ 9548 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9549 7C               ld a,h
 665+ 954A E6 07            and 7
 666+ 954C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 954D
 668+ 954D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 954E C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9550 6F               ld l,a
 671+ 9551 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9552
 673+ 9552 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9553 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9555 67               ld h,a
 676+ 9556 C9               ret
 677+ 9557
 678+ 9557              ;----------------------------------------------------------------------------------------------------------------
 679+ 9557              ;
 680+ 9557              ;	5/08/22
 681+ 9557              ;
 682+ 9557              ;   PreviousScan.
 683+ 9557              ;
 684+ 9557              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9557              ;
 686+ 9557              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9557              ;
 688+ 9557              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9557              ;
 690+ 9557              ;       DESTRUIDOS: AF y HL !!!
 691+ 9557              ;
 692+ 9557              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9557              ;
 694+ 9557
 695+ 9557 7C           PreviousScan ld a,h
 696+ 9558 25               dec h               ; Dec H.
 697+ 9559 E6 07            and 7
 698+ 955B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 955C
 700+ 955C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 955D D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 955F 6F               ld l,a
 703+ 9560 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9561
 705+ 9561 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9562 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9564 67               ld h,a
 708+ 9565 C9               ret
 709+ 9566
 710+ 9566              ; -----------------------------------------------------------------------------------
 711+ 9566              ;
 712+ 9566              ;	31/7/23
 713+ 9566              ;
 714+ 9566              ;	Rutina principal de pintado de entidades.
 715+ 9566              ;	Extrae la foto del frame, (entidades).
 716+ 9566
 717+ 9566              Extrae_foto_entidades
 718+ 9566
 719+ 9566 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9569 7E           	ld a,(hl)
 721+ 956A A7           	and a
 722+ 956B C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 956C
 724+ 956C              ;	No hay datos, (entidades para pintar en este frame).
 725+ 956C
 726+ 956C 3A ED 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 956F A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9570 C8           	ret z
 729+ 9571
 730+ 9571              ; -----------------------------------
 731+ 9571
 732+ 9571 ED 73 F2 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9575 31 00 70     	ld sp,Album_de_fotos
 734+ 9578
 735+ 9578 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 957A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 957B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 957C
 739+ 957C ED 73 F4 88  	ld (Stack_2),sp
 740+ 9580 ED 7B F2 88  	ld sp,(Stack)
 741+ 9584
 742+ 9584              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9584
 744+ 9584 3E CD        	ld a,$cd
 745+ 9586 32 8E 95     	ld (Imprime),a
 746+ 9589 EB           	ex de,hl
 747+ 958A 22 8F 95     	ld (Imprime+1),hl
 748+ 958D EB           	ex de,hl
 749+ 958E
 750+ 958E              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 958E
 752+ 958E 00 00 00     Imprime db 0,0,0
 753+ 9591
 754+ 9591 ED 73 F2 88  	ld (Stack),sp
 755+ 9595
 756+ 9595 3A ED 88     	ld a,(Numero_de_malotes)
 757+ 9598 3D           	dec a
 758+ 9599 28 09        	jr z,1F
 759+ 959B 32 ED 88      	ld (Numero_de_malotes),a
 760+ 959E
 761+ 959E ED 7B F4 88  	ld sp,(Stack_2)
 762+ 95A2 18 D4        	jr 2B
 763+ 95A4
 764+ 95A4 AF           1 xor a
 765+ 95A5 32 F4 88     	ld (Stack_2),a
 766+ 95A8
 767+ 95A8 C9           	ret
 768+ 95A9
 769+ 95A9              ; -----------------------------------------------------------------------------------
 770+ 95A9              ;
 771+ 95A9              ;	28/2/23
 772+ 95A9              ;
 773+ 95A9              ;	Pinta los disparos generados.
 774+ 95A9
 775+ 95A9              Extrae_foto_disparos
 776+ 95A9
 777+ 95A9 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 95AC 7E               ld a,(hl)
 779+ 95AD A7               and a
 780+ 95AE C8               ret z
 781+ 95AF
 782+ 95AF 3A 00 89     	ld a,(Numero_de_disparotes)
 783+ 95B2 A7           	and a
 784+ 95B3 C8           	ret z
 785+ 95B4 ED 73 F2 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 95B8 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 95BB
 788+ 95BB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 95BD E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 95BE D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 95BF
 792+ 95BF ED 73 F4 88  	ld (Stack_2),sp
 793+ 95C3 ED 7B F2 88  	ld sp,(Stack)
 794+ 95C7
 795+ 95C7              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 95C7
 797+ 95C7 3E CD        	ld a,$cd
 798+ 95C9 32 D1 95     	ld (Imprime2),a
 799+ 95CC EB           	ex de,hl
 800+ 95CD 22 D2 95     	ld (Imprime2+1),hl
 801+ 95D0 EB           	ex de,hl
 802+ 95D1
 803+ 95D1              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 95D1
 805+ 95D1 00 00 00     Imprime2 db 0,0,0
 806+ 95D4
 807+ 95D4 3A 00 89     	ld a,(Numero_de_disparotes)
 808+ 95D7 3D           	dec a
 809+ 95D8 28 09        	jr z,1F
 810+ 95DA 32 00 89      	ld (Numero_de_disparotes),a
 811+ 95DD
 812+ 95DD ED 7B F4 88  	ld sp,(Stack_2)
 813+ 95E1 18 D8        	jr 2B
 814+ 95E3
 815+ 95E3 AF           1 xor a
 816+ 95E4 32 F4 88     	ld (Stack_2),a
 817+ 95E7 C9           	ret
 818+ 95E8
 819+ 95E8              ; -----------------------------------------------------------------------------------
 820+ 95E8              ;
 821+ 95E8              ;	4/9/23
 822+ 95E8              ;
 823+ 95E8              ;	Rutina principal de pintado de Amadeus.
 824+ 95E8              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 95E8
 826+ 95E8 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 95EB 7E           	ld a,(hl)
 828+ 95EC A7           	and a
 829+ 95ED C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 95EE
 831+ 95EE 3A ED 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 95F1 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 95F2 C8           	ret z
 834+ 95F3
 835+ 95F3              ; -----------------------------------
 836+ 95F3
 837+ 95F3 ED 73 F2 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 95F7 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 95FA
 840+ 95FA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 95FC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 95FD D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 95FE
 844+ 95FE ED 73 F4 88  	ld (Stack_2),sp
 845+ 9602 ED 7B F2 88  	ld sp,(Stack)
 846+ 9606
 847+ 9606              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9606
 849+ 9606 3E CD        	ld a,$cd
 850+ 9608 32 10 96     	ld (Imprime_Amadeus),a
 851+ 960B EB           	ex de,hl
 852+ 960C 22 11 96     	ld (Imprime_Amadeus+1),hl
 853+ 960F EB           	ex de,hl
 854+ 9610
 855+ 9610              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 9610
 857+ 9610 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9613
 859+ 9613 ED 73 F2 88  	ld (Stack),sp
 860+ 9617
 861+ 9617 3A ED 88     	ld a,(Numero_de_malotes)
 862+ 961A 3D           	dec a
 863+ 961B 28 09        	jr z,1F
 864+ 961D 32 ED 88      	ld (Numero_de_malotes),a
 865+ 9620
 866+ 9620 ED 7B F4 88  	ld sp,(Stack_2)
 867+ 9624 18 D4        	jr 2B
 868+ 9626
 869+ 9626 AF           1 xor a
 870+ 9627 32 F4 88     	ld (Stack_2),a
 871+ 962A
 872+ 962A C9           	ret
# file closed: Draw_XOR.asm
1501  962B              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 962B              ;   índices de Rutinas de impresión.
   2+ 962B
   3+ 962B 3B 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 962D 68 96            defw Pinta_Amadeus_3x2
   5+ 962F
   6+ 962F BE 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9631 5E 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9633 12 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9635
  10+ 9635 E8 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9637 EC 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9639 A0 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 963B
  14+ 963B
  15+ 963B              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 963B              ;
  17+ 963B              ;   12/12/22
  18+ 963B              ;
  19+ 963B              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 963B              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 963B              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 963B              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 963B              ;
  24+ 963B              ;   Modifica: DE y HL.
  25+ 963B
  26+ 963B ED 73 F2 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 963F FD F9        	ld sp,iy
  28+ 9641 06 10            ld b,16
  29+ 9643 D1           1 pop de
  30+ 9644 7B               ld a,e
  31+ 9645 AE               xor (hl)
  32+ 9646 77           	ld (hl),a
  33+ 9647 23           	inc hl
  34+ 9648 7A               ld a,d
  35+ 9649 AE               xor (hl)
  36+ 964A 77           	ld (hl),a
  37+ 964B 2B           	dec hl
  38+ 964C 24           	inc h
  39+ 964D 7C               ld a,h
  40+ 964E E6 07            and 7
  41+ 9650 20 0A            jr nz,2F
  42+ 9652 7D               ld a,l
  43+ 9653 C6 20            add a,$20
  44+ 9655 6F               ld l,a
  45+ 9656 38 04            jr c,2F
  46+ 9658 7C               ld a,h
  47+ 9659 D6 08            sub 8
  48+ 965B 67               ld h,a
  49+ 965C 7C           2 ld a,h
  50+ 965D FE 58            cp $58
  51+ 965F 28 02            jr z,3F
  52+ 9661 10 E0            djnz 1B
  53+ 9663 ED 7B F2 88  3 ld sp,(Stack)
  54+ 9667 C9           	ret
  55+ 9668
  56+ 9668 ED 73 F2 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 966C FD F9        	ld sp,iy
  58+ 966E 06 08            ld b,8
  59+ 9670 D1           1 pop de
  60+ 9671 7B               ld a,e
  61+ 9672 AE               xor (hl)
  62+ 9673 77           	ld (hl),a
  63+ 9674 23           	inc hl
  64+ 9675 7A               ld a,d
  65+ 9676 AE               xor (hl)
  66+ 9677 77           	ld (hl),a
  67+ 9678 23           	inc hl
  68+ 9679 D1           	pop de
  69+ 967A 7B               ld a,e
  70+ 967B AE               xor (hl)
  71+ 967C 77           	ld (hl),a
  72+ 967D 2B           	dec hl
  73+ 967E 2B           	dec hl
  74+ 967F 24           	inc h
  75+ 9680 7C               ld a,h
  76+ 9681 E6 07            and 7
  77+ 9683 20 0A            jr nz,2F
  78+ 9685 7D               ld a,l
  79+ 9686 C6 20            add a,$20
  80+ 9688 6F               ld l,a
  81+ 9689 38 04            jr c,2F
  82+ 968B 7C               ld a,h
  83+ 968C D6 08            sub 8
  84+ 968E 67               ld h,a
  85+ 968F 7C           2 ld a,h
  86+ 9690 FE 58            cp $58
  87+ 9692 28 25            jr z,4F
  88+ 9694 7A               ld a,d
  89+ 9695 AE               xor (hl)
  90+ 9696 77               ld (hl),a
  91+ 9697 D1           	pop de
  92+ 9698 23           	inc hl
  93+ 9699 7B               ld a,e
  94+ 969A AE               xor (hl)
  95+ 969B 77           	ld (hl),a
  96+ 969C 23           	inc hl
  97+ 969D 7A               ld a,d
  98+ 969E AE               xor (hl)
  99+ 969F 77           	ld (hl),a
 100+ 96A0 2B           	dec hl
 101+ 96A1 2B           	dec hl
 102+ 96A2 24           	inc h
 103+ 96A3 7C               ld a,h
 104+ 96A4 E6 07            and 7
 105+ 96A6 20 0A            jr nz,3F
 106+ 96A8 7D               ld a,l
 107+ 96A9 C6 20            add a,$20
 108+ 96AB 6F               ld l,a
 109+ 96AC 38 04            jr c,3F
 110+ 96AE 7C               ld a,h
 111+ 96AF D6 08            sub 8
 112+ 96B1 67               ld h,a
 113+ 96B2 7C           3 ld a,h
 114+ 96B3 FE 58            cp $58
 115+ 96B5 28 02            jr z,4F
 116+ 96B7 10 B7            djnz 1B
 117+ 96B9 ED 7B F2 88  4 ld sp,(Stack)
 118+ 96BD C9           	ret
 119+ 96BE
 120+ 96BE              ; ---------------------------------------------------
 121+ 96BE
 122+ 96BE ED 73 F2 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 96C2 FD F9        	ld sp,iy
 124+ 96C4
 125+ 96C4              ; >>>
 126+ 96C4
 127+ 96C4 06 10            ld b,16
 128+ 96C6 D1           1 pop de
 129+ 96C7 7A           	ld a,d
 130+ 96C8 AE           	xor (hl)
 131+ 96C9 77           	ld (hl),a
 132+ 96CA 24           	inc h
 133+ 96CB 7C               ld a,h
 134+ 96CC E6 07            and 7
 135+ 96CE 20 0C            jr nz,2F
 136+ 96D0 7D               ld a,l
 137+ 96D1 C6 20            add a,$20
 138+ 96D3 6F               ld l,a
 139+ 96D4 38 06            jr c,2F
 140+ 96D6 7C               ld a,h
 141+ 96D7 D6 08            sub 8
 142+ 96D9 67               ld h,a
 143+ 96DA 18 00            jr 2F
 144+ 96DC 7C           2 ld a,h
 145+ 96DD FE 58            cp $58
 146+ 96DF 28 02            jr z,3F
 147+ 96E1 10 E3            djnz 1B
 148+ 96E3 ED 7B F2 88  3 ld sp,(Stack)
 149+ 96E7 C9           	ret
 150+ 96E8
 151+ 96E8 ED 73 F2 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 96EC FD F9        	ld sp,iy
 153+ 96EE
 154+ 96EE              ; >>>
 155+ 96EE
 156+ 96EE 06 10            ld b,16
 157+ 96F0 D1           1 pop de
 158+ 96F1 7B           	ld a,e
 159+ 96F2 AE           	xor (hl)
 160+ 96F3 77           	ld (hl),a
 161+ 96F4 24           	inc h
 162+ 96F5 7C               ld a,h
 163+ 96F6 E6 07            and 7
 164+ 96F8 20 0C            jr nz,2F
 165+ 96FA 7D               ld a,l
 166+ 96FB C6 20            add a,$20
 167+ 96FD 6F               ld l,a
 168+ 96FE 38 06            jr c,2F
 169+ 9700 7C               ld a,h
 170+ 9701 D6 08            sub 8
 171+ 9703 67               ld h,a
 172+ 9704 18 00            jr 2F
 173+ 9706 7C           2 ld a,h
 174+ 9707 FE 58            cp $58
 175+ 9709 28 02            jr z,3F
 176+ 970B 10 E3            djnz 1B
 177+ 970D ED 7B F2 88  3 ld sp,(Stack)
 178+ 9711 C9           	ret
 179+ 9712
 180+ 9712              ; ---------------------------------------------------
 181+ 9712
 182+ 9712 ED 73 F2 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9716 FD F9        	ld sp,iy
 184+ 9718 06 08            ld b,8
 185+ 971A D1           1 pop de
 186+ 971B 7A           	ld a,d
 187+ 971C AE           	xor (hl)
 188+ 971D 77           	ld (hl),a
 189+ 971E 23           	inc hl
 190+ 971F D1           	pop de
 191+ 9720 7B           	ld a,e
 192+ 9721 AE           	xor (hl)
 193+ 9722 77           	ld (hl),a
 194+ 9723 2B           	dec hl
 195+ 9724 24            	inc h
 196+ 9725 7C               ld a,h
 197+ 9726 E6 07            and 7
 198+ 9728 20 0A            jr nz,2F
 199+ 972A 7D               ld a,l
 200+ 972B C6 20            add a,$20
 201+ 972D 6F               ld l,a
 202+ 972E 38 04            jr c,2F
 203+ 9730 7C               ld a,h
 204+ 9731 D6 08            sub 8
 205+ 9733 67               ld h,a
 206+ 9734 7C           2 ld a,h
 207+ 9735 FE 58            cp $58
 208+ 9737 28 20            jr z,4F
 209+ 9739 D1               pop de
 210+ 973A 7B           	ld a,e
 211+ 973B AE           	xor (hl)
 212+ 973C 77           	ld (hl),a
 213+ 973D 23           	inc hl
 214+ 973E 7A           	ld a,d
 215+ 973F AE           	xor (hl)
 216+ 9740 77           	ld (hl),a
 217+ 9741 2B           	dec hl
 218+ 9742 24           	inc h
 219+ 9743 7C               ld a,h
 220+ 9744 E6 07            and 7
 221+ 9746 20 0A            jr nz,3F
 222+ 9748 7D               ld a,l
 223+ 9749 C6 20            add a,$20
 224+ 974B 6F               ld l,a
 225+ 974C 38 04            jr c,3F
 226+ 974E 7C               ld a,h
 227+ 974F D6 08            sub 8
 228+ 9751 67               ld h,a
 229+ 9752 7C           3 ld a,h
 230+ 9753 FE 58            cp $58
 231+ 9755 28 02            jr z,4F
 232+ 9757 10 C1            djnz 1B
 233+ 9759 ED 7B F2 88  4 ld sp,(Stack)
 234+ 975D C9           	ret
 235+ 975E
 236+ 975E ED 73 F2 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9762 FD F9        	ld sp,iy
 238+ 9764 06 08            ld b,8
 239+ 9766 D1           1 pop de
 240+ 9767 D1           	pop de
 241+ 9768 7B           	ld a,e
 242+ 9769 AE           	xor (hl)
 243+ 976A 77           	ld (hl),a
 244+ 976B 24            	inc h
 245+ 976C 7C               ld a,h
 246+ 976D E6 07            and 7
 247+ 976F 20 0A            jr nz,2F
 248+ 9771 7D               ld a,l
 249+ 9772 C6 20            add a,$20
 250+ 9774 6F               ld l,a
 251+ 9775 38 04            jr c,2F
 252+ 9777 7C               ld a,h
 253+ 9778 D6 08            sub 8
 254+ 977A 67               ld h,a
 255+ 977B 7C           2 ld a,h
 256+ 977C FE 58            cp $58
 257+ 977E 28 1B            jr z,4F
 258+ 9780 D1               pop de
 259+ 9781 7A           	ld a,d
 260+ 9782 AE           	xor (hl)
 261+ 9783 77           	ld (hl),a
 262+ 9784 24           	inc h
 263+ 9785 7C               ld a,h
 264+ 9786 E6 07            and 7
 265+ 9788 20 0A            jr nz,3F
 266+ 978A 7D               ld a,l
 267+ 978B C6 20            add a,$20
 268+ 978D 6F               ld l,a
 269+ 978E 38 04            jr c,3F
 270+ 9790 7C               ld a,h
 271+ 9791 D6 08            sub 8
 272+ 9793 67               ld h,a
 273+ 9794 7C           3 ld a,h
 274+ 9795 FE 58            cp $58
 275+ 9797 28 02            jr z,4F
 276+ 9799 10 CB            djnz 1B
 277+ 979B ED 7B F2 88  4 ld sp,(Stack)
 278+ 979F C9           	ret
 279+ 97A0
 280+ 97A0 ED 73 F2 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97A4 FD F9        	ld sp,iy
 282+ 97A6 06 08            ld b,8
 283+ 97A8 D1           1 pop de
 284+ 97A9 7B           	ld a,e
 285+ 97AA AE           	xor (hl)
 286+ 97AB 77           	ld (hl),a
 287+ 97AC 23           	inc hl
 288+ 97AD 7A           	ld a,d
 289+ 97AE AE           	xor (hl)
 290+ 97AF 77           	ld (hl),a
 291+ 97B0 2B           	dec hl
 292+ 97B1 24             	inc h
 293+ 97B2 7C               ld a,h
 294+ 97B3 E6 07            and 7
 295+ 97B5 20 0A            jr nz,2F
 296+ 97B7 7D               ld a,l
 297+ 97B8 C6 20            add a,$20
 298+ 97BA 6F               ld l,a
 299+ 97BB 38 04            jr c,2F
 300+ 97BD 7C               ld a,h
 301+ 97BE D6 08            sub 8
 302+ 97C0 67               ld h,a
 303+ 97C1 7C           2 ld a,h
 304+ 97C2 FE 58            cp $58
 305+ 97C4 28 21            jr z,4F
 306+ 97C6 D1               pop de
 307+ 97C7 7A           	ld a,d
 308+ 97C8 AE           	xor (hl)
 309+ 97C9 77           	ld (hl),a
 310+ 97CA 23           	inc hl
 311+ 97CB D1               pop de
 312+ 97CC 7B           	ld a,e
 313+ 97CD AE           	xor (hl)
 314+ 97CE 77           	ld (hl),a
 315+ 97CF 2B           	dec hl
 316+ 97D0 24           	inc h
 317+ 97D1 7C               ld a,h
 318+ 97D2 E6 07            and 7
 319+ 97D4 20 0A            jr nz,3F
 320+ 97D6 7D               ld a,l
 321+ 97D7 C6 20            add a,$20
 322+ 97D9 6F               ld l,a
 323+ 97DA 38 04            jr c,3F
 324+ 97DC 7C               ld a,h
 325+ 97DD D6 08            sub 8
 326+ 97DF 67               ld h,a
 327+ 97E0 7C           3 ld a,h
 328+ 97E1 FE 58            cp $58
 329+ 97E3 28 02            jr z,4F
 330+ 97E5 10 C1            djnz 1B
 331+ 97E7 ED 7B F2 88  4 ld sp,(Stack)
 332+ 97EB C9           	ret
 333+ 97EC
 334+ 97EC ED 73 F2 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 97F0 FD F9        	ld sp,iy
 336+ 97F2 06 08            ld b,8
 337+ 97F4 D1           1 pop de
 338+ 97F5 7B           	ld a,e
 339+ 97F6 AE           	xor (hl)
 340+ 97F7 77           	ld (hl),a
 341+ 97F8 24            	inc h
 342+ 97F9 7C               ld a,h
 343+ 97FA E6 07            and 7
 344+ 97FC 20 0A            jr nz,2F
 345+ 97FE 7D               ld a,l
 346+ 97FF C6 20            add a,$20
 347+ 9801 6F               ld l,a
 348+ 9802 38 04            jr c,2F
 349+ 9804 7C               ld a,h
 350+ 9805 D6 08            sub 8
 351+ 9807 67               ld h,a
 352+ 9808 7C           2 ld a,h
 353+ 9809 FE 58            cp $58
 354+ 980B 28 1C            jr z,4F
 355+ 980D D1               pop de
 356+ 980E 7A           	ld a,d
 357+ 980F AE           	xor (hl)
 358+ 9810 77           	ld (hl),a
 359+ 9811 24           	inc h
 360+ 9812 7C               ld a,h
 361+ 9813 E6 07            and 7
 362+ 9815 20 0A            jr nz,3F
 363+ 9817 7D               ld a,l
 364+ 9818 C6 20            add a,$20
 365+ 981A 6F               ld l,a
 366+ 981B 38 04            jr c,3F
 367+ 981D 7C               ld a,h
 368+ 981E D6 08            sub 8
 369+ 9820 67               ld h,a
 370+ 9821 7C           3 ld a,h
 371+ 9822 FE 58            cp $58
 372+ 9824 28 03            jr z,4F
 373+ 9826 D1               pop de
 374+ 9827 10 CB            djnz 1B
 375+ 9829 ED 7B F2 88  4 ld sp,(Stack)
 376+ 982D C9           	ret
 377+ 982E
 378+ 982E              ; ---------------------------------------------------
 379+ 982E              ;
 380+ 982E              ;   27/02/23
 381+ 982E              ;
 382+ 982E              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 982E              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 982E              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 982E
 386+ 982E ED 73 F2 88  Pinta_Disparo ld (Stack),sp
 387+ 9832 FD F9            ld sp,iy
 388+ 9834 06 03            ld b,3
 389+ 9836 D1           1 pop de
 390+ 9837 7B               ld a,e
 391+ 9838 AE               xor (hl)
 392+ 9839 77               ld (hl),a
 393+ 983A 23               inc hl
 394+ 983B 7A               ld a,d
 395+ 983C AE               xor (hl)
 396+ 983D 77               ld (hl),a
 397+ 983E 2B               dec hl
 398+ 983F
 399+ 983F 24               inc h
 400+ 9840 7C               ld a,h
 401+ 9841 E6 07            and 7
 402+ 9843 20 0A            jr nz,2F
 403+ 9845 7D               ld a,l
 404+ 9846 C6 20            add a,$20
 405+ 9848 6F               ld l,a
 406+ 9849 38 04            jr c,2F
 407+ 984B 7C               ld a,h
 408+ 984C D6 08            sub 8
 409+ 984E 67               ld h,a
 410+ 984F 7C           2 ld a,h
 411+ 9850 FE 58            cp $58
 412+ 9852 28 02            jr z,3F
 413+ 9854
 414+ 9854 10 E0            djnz 1B
 415+ 9856 ED 7B F2 88  3 ld sp,(Stack)
 416+ 985A C9               ret
 417+ 985B
# file closed: Rutinas_de_impresion_sprites.asm
1502  985B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 985B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 985B              ;
   3+ 985B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 985B              ;
   5+ 985B              ; *****************************************************************************************************************************************************************************************
   6+ 985B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 985B
   8+ 985B 7C           calcula_tercio ld a,h
   9+ 985C E6 18        	and $18
  10+ 985E CB 2F        	sra a
  11+ 9860 CB 2F        	sra a
  12+ 9862 CB 2F        	sra a
  13+ 9864 C9           	ret
  14+ 9865
# file closed: calcula_tercio.asm
1503  9865              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9865              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9865              ;
   3+ 9865              ;
   4+ 9865              ;	CLS.
   5+ 9865              ;
   6+ 9865              ;	Limpia la pantalla y define sus atributos.
   7+ 9865              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9865              ;
   9+ 9865              ;	COLORES: 0 ..... NEGRO
  10+ 9865              ;    		 1 ..... AZUL
  11+ 9865              ; 			 2 ..... ROJO
  12+ 9865              ;			 3 ..... MAGENTA
  13+ 9865              ; 			 4 ..... VERDE
  14+ 9865              ; 			 5 ..... CIAN
  15+ 9865              ;			 6 ..... AMARILLO
  16+ 9865              ; 			 7 ..... BLANCO
  17+ 9865              ;
  18+ 9865              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9865              ;
  20+ 9865              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9865
  22+ 9865
  23+ 9865 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9868 11 01 40     	LD DE,$4001
  25+ 986B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 986E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9870 ED B0        	LDIR
  28+ 9872 01 FF 02     	LD BC,767
  29+ 9875 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9876 ED B0        	LDIR
  31+ 9878 C9           	ret
  32+ 9879
# file closed: Cls.asm
1504  9879              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9879              ; ******************************************************************************************************************************************************************************************
   2+ 9879              ;
   3+ 9879              ;   20/05/23
   4+ 9879              ;
   5+ 9879              ;	Recompone_posicion_inicio
   6+ 9879              ;
   7+ 9879              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9879              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9879              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9879              ;	_ a una u otra rutina.
  11+ 9879
  12+ 9879              Recompone_posicion_inicio
  13+ 9879
  14+ 9879 2A B6 88     	ld hl,(Posicion_inicio)
  15+ 987C 7D           	ld a,l
  16+ 987D E6 1F        	and $1f
  17+ 987F 28 16        	jr z,1F
  18+ 9881
  19+ 9881 FE 1F        	cp $1f
  20+ 9883 28 0D        	jr z,3F
  21+ 9885
  22+ 9885 21 DF 88     	ld hl,Ctrl_2
  23+ 9888 CB C6        	set 0,(hl)
  24+ 988A 2A A8 88     	ld hl,(Puntero_objeto)
  25+ 988D 22 E2 88     	ld (Repone_puntero_objeto),hl
  26+ 9890 18 08        	jr 2F
  27+ 9892
  28+ 9892 CD 37 9A     3 call Mov_left
  29+ 9895 18 03        	jr 2F
  30+ 9897
  31+ 9897 CD 19 99     1 call Mov_right
  32+ 989A 21 00 F0     2 ld hl,Sprite_vacio
  33+ 989D 22 A8 88     	ld (Puntero_objeto),hl
  34+ 98A0 C9           	ret
  35+ 98A1
  36+ 98A1              ; ******************************************************************************************************************************************************************************************
  37+ 98A1              ;
  38+ 98A1              ;   27/05/23
  39+ 98A1              ;
  40+ 98A1              ;	Mov_down
  41+ 98A1              ;
  42+ 98A1              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98A1              ;
  44+ 98A1              ;
  45+ 98A1              Mov_down
  46+ 98A1
  47+ 98A1 CD 07 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98A4              ;																	; _ repone (Puntero_objeto).
  49+ 98A4 21 CE 88     	ld hl,Ctrl_0
  50+ 98A7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98A9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98A9              ; 																	; _ en el caso de que no lo haya.
  53+ 98A9 3A BC 88     	ld a,(Vel_down)
  54+ 98AC 47           	ld b,a
  55+ 98AD 2A A6 88         ld hl,(Posicion_actual)
  56+ 98B0 CD 5B 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98B3 E6 02        	and 2
  58+ 98B5 28 13        	jr z,1F
  59+ 98B7
  60+ 98B7              ; Nos encontramos en el último tercio de pantalla.
  61+ 98B7              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98B7
  63+ 98B7 7C           	ld a,h
  64+ 98B8 FE 57        	cp $57
  65+ 98BA 20 0E        	jr nz,1F
  66+ 98BC
  67+ 98BC 7D           	ld a,l
  68+ 98BD C6 20        	add $20
  69+ 98BF 30 09        	jr nc,1F
  70+ 98C1
  71+ 98C1              ; ------------------------------
  72+ 98C1              ;	call Reaparece_arriba
  73+ 98C1 F3           	di
  74+ 98C2 18 FE        	jr $
  75+ 98C4 FB           	ei
  76+ 98C5
  77+ 98C5 CD C4 9B     	call Reinicio
  78+ 98C8              ; ------------------------------
  79+ 98C8
  80+ 98C8 18 08        	jr 3F
  81+ 98CA CD 48 95     1 call NextScan
  82+ 98CD 22 A6 88     	ld (Posicion_actual),hl
  83+ 98D0 10 DE            djnz 2B
  84+ 98D2 CD EA 9B     3 call Genera_coordenadas
  85+ 98D5 C9           	ret
  86+ 98D6
  87+ 98D6              ; ******************************************************************************************************************************************************************************************
  88+ 98D6              ;
  89+ 98D6              ;   27/05/23
  90+ 98D6              ;
  91+ 98D6              ;	Mov_up
  92+ 98D6              ;
  93+ 98D6              ; 	Mueve el Sprite hacia arriba.
  94+ 98D6              ;
  95+ 98D6              ;
  96+ 98D6              Mov_up
  97+ 98D6
  98+ 98D6 CD 07 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  99+ 98D9              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 100+ 98D9 21 CE 88     	ld hl,Ctrl_0
 101+ 98DC CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 102+ 98DE              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 103+ 98DE              ; 																		; _ en el caso de que no lo haya.
 104+ 98DE 3A BB 88     	ld a,(Vel_up)
 105+ 98E1 47           	ld b,a
 106+ 98E2 2A A6 88     	ld hl,(Posicion_actual)
 107+ 98E5 CD 5B 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 108+ 98E8 A7           	and a
 109+ 98E9 20 10        	jr nz,1F
 110+ 98EB
 111+ 98EB              ; Nos encontramos en el 1er tercio de pantalla.
 112+ 98EB              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 113+ 98EB
 114+ 98EB 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 115+ 98EC FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 116+ 98EE 20 0B            jr nz,1F
 117+ 98F0 7D               ld a,l
 118+ 98F1 D6 20            sub $20
 119+ 98F3 30 06            jr nc,1F
 120+ 98F5 25               dec h
 121+ 98F6
 122+ 98F6              ; -----------------------------
 123+ 98F6 CD A5 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 124+ 98F9              ;	call Reinicio
 125+ 98F9              ; -----------------------------
 126+ 98F9
 127+ 98F9 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 128+ 98FB CD 57 95     1 call PreviousScan
 129+ 98FE 22 A6 88     	ld (Posicion_actual),hl
 130+ 9901 10 E2            djnz 3B
 131+ 9903 CD EA 9B     2 call Genera_coordenadas
 132+ 9906 C9           	ret
 133+ 9907
 134+ 9907              ; -----------------------------
 135+ 9907              ;
 136+ 9907              ;	27/5/23
 137+ 9907              ;
 138+ 9907              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 139+ 9907              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 140+ 9907              ;
 141+ 9907              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 142+ 9907              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 143+ 9907              ;
 144+ 9907              ;	Modifica: A y (Puntero_objeto).
 145+ 9907
 146+ 9907 3A DF 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 147+ 990A CB 47        	bit 0,a
 148+ 990C C8           	ret z
 149+ 990D CB 87        	res 0,a
 150+ 990F 32 DF 88     	ld (Ctrl_2),a
 151+ 9912 2A E2 88     	ld hl,(Repone_puntero_objeto)
 152+ 9915 22 A8 88     	ld (Puntero_objeto),hl
 153+ 9918 C9           	ret
 154+ 9919
 155+ 9919              ; ******************************************************************************************************************************************************************************************
 156+ 9919              ;
 157+ 9919              ;	19/10/22
 158+ 9919              ;
 159+ 9919              ;	Mov_right.
 160+ 9919              ;
 161+ 9919              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 162+ 9919              ;
 163+ 9919
 164+ 9919 21 CE 88     Mov_right ld hl,Ctrl_0
 165+ 991C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 166+ 991E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 167+ 991E              ; 																	; _ en el caso de que no lo haya.
 168+ 991E 3A CE 88     	ld a,(Ctrl_0)
 169+ 9921 CB 77        	bit 6,a
 170+ 9923 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 171+ 9925
 172+ 9925 CD 53 9B     	call Stop_Amadeus_right
 173+ 9928 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 174+ 9929 18 4D        	jr 8F
 175+ 992B
 176+ 992B 3A AA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 177+ 992E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 178+ 9930 20 46        	jr nz,8F
 179+ 9932
 180+ 9932 3A AC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 181+ 9935 A7           	and a 															; _[3] para continuar con el DESPLZ.
 182+ 9936 28 40        	jr z,8F
 183+ 9938
 184+ 9938              ; ---------- ---------- ----------
 185+ 9938              ;
 186+ 9938              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 187+ 9938
 188+ 9938 3A BA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 189+ 993B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 190+ 993D 28 11        	jr z,1F
 191+ 993F 38 06        	jr c,6F
 192+ 9941 FE 04        	cp 4
 193+ 9943 28 14        	jr z,7F
 194+ 9945 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 195+ 9947
 196+ 9947              ; ---------- ---------- ----------
 197+ 9947              ;
 198+ 9947              ; Perfiles de velocidad
 199+ 9947              ;
 200+ 9947
 201+ 9947 3A AC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 202+ 994A FE FE        	cp $fe
 203+ 994C 20 2A        	jr nz,8F
 204+ 994E 18 10        	jr 3F
 205+ 9950 3A AC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 206+ 9953 FE FD        	cp $fd
 207+ 9955 20 21        	jr nz,8F
 208+ 9957 18 07        	jr 3F
 209+ 9959 3A AC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 210+ 995C FE FB        	cp $fb
 211+ 995E 20 18        	jr nz,8F
 212+ 9960
 213+ 9960              ; ---------- ---------- ----------
 214+ 9960
 215+ 9960              3
 216+ 9960 CD 93 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 217+ 9963              ;	call Reinicio
 218+ 9963
 219+ 9963              ; ---------- ---------- ----------
 220+ 9963              ;
 221+ 9963              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 222+ 9963
 223+ 9963 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 224+ 9965 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 225+ 9966 CD 7F 99     	call DESPLZ_DER
 226+ 9969 C1           	pop bc
 227+ 996A 10 F9        	djnz 5B
 228+ 996C 2A A6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 229+ 996F 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 230+ 9970 22 A6 88     	ld (Posicion_actual),hl
 231+ 9973 CD EA 9B     	call Genera_coordenadas
 232+ 9976 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 233+ 9978
 234+ 9978              ; ---------- ---------- ----------
 235+ 9978
 236+ 9978 2A A6 88     8 ld hl,(Posicion_actual)
 237+ 997B CD 7F 99     	call DESPLZ_DER
 238+ 997E C9           2 ret
 239+ 997F
 240+ 997F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 241+ 997F              ;
 242+ 997F              ;	22/9/22
 243+ 997F              ;
 244+ 997F
 245+ 997F CD 8E 99     DESPLZ_DER call Desplaza_derecha
 246+ 9982 CD DA 99         call modifica_parametros_1er_DESPLZ_2
 247+ 9985 CD 03 9A         call Ciclo_completo
 248+ 9988 21 CE 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 249+ 998B CB FE        	set 7,(hl)
 250+ 998D C9           	ret
 251+ 998E
 252+ 998E              ; ******************************************************************************************************************************************************************************************
 253+ 998E              ;	15/02/23
 254+ 998E              ;
 255+ 998E
 256+ 998E 3A BA 88     Desplaza_derecha ld a,(Vel_right)
 257+ 9991 47           	ld b,a
 258+ 9992 2A B2 88     	ld hl,(Puntero_DESPLZ_der)
 259+ 9995 23           1 inc hl
 260+ 9996 23           	inc hl
 261+ 9997 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 262+ 9999 22 B2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 263+ 999C CD E6 8B     	call Extrae_address
 264+ 999F 22 A8 88     	ld (Puntero_objeto),hl
 265+ 99A2
 266+ 99A2              ; Modifica (Puntero_DESPLZ_izq).
 267+ 99A2
 268+ 99A2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 269+ 99A2              ; Cuántos movimientos hemos hecho ??
 270+ 99A2              ; DE contiene (Puntero_DESPLZ_der).
 271+ 99A2
 272+ 99A2 2A AE 88     7 ld hl,(Indice_Sprite_der)
 273+ 99A5 EB           	ex de,hl
 274+ 99A6 A7           	and a
 275+ 99A7 ED 52        	sbc hl,de
 276+ 99A9 CB 3D        	srl l
 277+ 99AB 3E 08        6 ld a,8
 278+ 99AD 95           	sub l
 279+ 99AE 30 1E        	jr nc,3F
 280+ 99B0
 281+ 99B0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 282+ 99B0              ; B="0".
 283+ 99B0
 284+ 99B0 04           4 inc b
 285+ 99B1 3C           	inc a
 286+ 99B2 20 FC        	jr nz,4B
 287+ 99B4 78           	ld a,b
 288+ 99B5 08           	ex af,af
 289+ 99B6 2A AE 88     	ld hl,(Indice_Sprite_der)
 290+ 99B9 23           5 inc hl
 291+ 99BA 23           	inc hl
 292+ 99BB 10 FC        	djnz 5B
 293+ 99BD 22 B2 88     	ld (Puntero_DESPLZ_der),hl
 294+ 99C0 CD E6 8B     	call Extrae_address
 295+ 99C3 22 A8 88     	ld (Puntero_objeto),hl
 296+ 99C6
 297+ 99C6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 298+ 99C6              ; _(Posicion_actual).
 299+ 99C6
 300+ 99C6 21 A6 88     	ld hl,Posicion_actual
 301+ 99C9 34           	inc (hl)
 302+ 99CA 08               ex af,af
 303+ 99CB 6F           	ld l,a
 304+ 99CC 18 DD        	jr 6B
 305+ 99CE
 306+ 99CE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 307+ 99CE
 308+ 99CE 47           3 ld b,a
 309+ 99CF 2A B0 88     	ld hl,(Indice_Sprite_izq)
 310+ 99D2 23           2 inc hl
 311+ 99D3 23           	inc hl
 312+ 99D4 10 FC        	djnz 2B
 313+ 99D6 22 B4 88     	ld (Puntero_DESPLZ_izq),hl
 314+ 99D9 C9           8 ret
 315+ 99DA
 316+ 99DA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 317+ 99DA              ;
 318+ 99DA              ;	24/7/22
 319+ 99DA              ;
 320+ 99DA              ;	modifica_parametros_1er_DESPLZ_2
 321+ 99DA              ;
 322+ 99DA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 323+ 99DA              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 324+ 99DA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 325+ 99DA
 326+ 99DA 3A AC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 327+ 99DD A7           	and a
 328+ 99DE 20 1F        	jr nz,1F
 329+ 99E0 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 330+ 99E2 32 AC 88         ld (CTRL_DESPLZ),a
 331+ 99E5
 332+ 99E5 21 A5 88     	ld hl,Columns
 333+ 99E8 34           	inc (hl)
 334+ 99E9 3A B8 88     	ld a,(Cuad_objeto)
 335+ 99EC E6 01        	and 1
 336+ 99EE 28 0F        	jr z,1F
 337+ 99F0 2A A6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 338+ 99F3 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 339+ 99F4 22 A6 88     	ld (Posicion_actual),hl
 340+ 99F7 CD EA 9B     	call Genera_coordenadas
 341+ 99FA CD 5F 9B     	call Inc_CTRL_DESPLZ
 342+ 99FD 18 03        	jr 2F
 343+ 99FF CD 5F 9B     1 call Inc_CTRL_DESPLZ
 344+ 9A02 C9           2 ret
 345+ 9A03
 346+ 9A03              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 347+ 9A03              ;
 348+ 9A03              ;	24/7/22
 349+ 9A03              ;
 350+ 9A03              ;	Ciclo_completo.
 351+ 9A03              ;
 352+ 9A03              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 353+ 9A03              ;
 354+ 9A03              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 355+ 9A03              ; 	Decrementamos (Columns).
 356+ 9A03              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 357+ 9A03              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 358+ 9A03
 359+ 9A03
 360+ 9A03 3A AC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 361+ 9A06 FE FF        	cp $ff
 362+ 9A08 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 363+ 9A0A E6 F0        	and $f0
 364+ 9A0C 20 28        	jr nz,3F
 365+ 9A0E
 366+ 9A0E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 367+ 9A0E
 368+ 9A0E 3A AC 88     	ld a,(CTRL_DESPLZ)
 369+ 9A11 47           	ld b,a
 370+ 9A12 3E F8        	ld a,$f8
 371+ 9A14 80           	add b
 372+ 9A15 32 AC 88     	ld (CTRL_DESPLZ),a
 373+ 9A18 18 1C        	jr 3F
 374+ 9A1A 21 A5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 375+ 9A1D 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 376+ 9A1E AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 377+ 9A1F 32 AC 88     	ld (CTRL_DESPLZ),a
 378+ 9A22 3A B8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 379+ 9A25 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 380+ 9A27 20 0A        	jr nz,2F
 381+ 9A29 2A A6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 382+ 9A2C 23           	inc hl
 383+ 9A2D 22 A6 88     	ld (Posicion_actual),hl
 384+ 9A30 CD EA 9B     	call Genera_coordenadas
 385+ 9A33
 386+ 9A33              ; Inicia el puntero de Sprite.
 387+ 9A33
 388+ 9A33 CD FD 8B     2 call Inicia_puntero_objeto_der
 389+ 9A36 C9           3 ret
 390+ 9A37
 391+ 9A37              ; ******************************************************************************************************************************************************************************************
 392+ 9A37              ;
 393+ 9A37              ;	15/02/23
 394+ 9A37              ;
 395+ 9A37              ;	Mov_left.
 396+ 9A37              ;
 397+ 9A37              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 398+ 9A37              ;
 399+ 9A37              Mov_left
 400+ 9A37
 401+ 9A37 21 CE 88     	ld hl,Ctrl_0
 402+ 9A3A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 403+ 9A3C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 404+ 9A3C              ; 																	; _ en el caso de que no lo haya.
 405+ 9A3C 3A CE 88     	ld a,(Ctrl_0)
 406+ 9A3F CB 77        	bit 6,a
 407+ 9A41 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 408+ 9A43
 409+ 9A43 CD 59 9B     	call Stop_Amadeus_left
 410+ 9A46 C8           	ret z
 411+ 9A47 20 4A        	jr nz,8F
 412+ 9A49
 413+ 9A49 3A AA 88     11 ld a,(Coordenada_X)
 414+ 9A4C A7           	and a
 415+ 9A4D 20 44        	jr nz,8F
 416+ 9A4F
 417+ 9A4F 3A AC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 418+ 9A52 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 419+ 9A53 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 420+ 9A55
 421+ 9A55              ; ---------- ---------- ----------
 422+ 9A55
 423+ 9A55 3A B9 88     	ld a,(Vel_left)
 424+ 9A58 FE 02        	cp 2
 425+ 9A5A 28 0F        	jr z,1F
 426+ 9A5C 38 04        	jr c,6F
 427+ 9A5E FE 04        	cp 4
 428+ 9A60 28 12        	jr z,7F
 429+ 9A62
 430+ 9A62              ; ---------- ---------- ----------
 431+ 9A62
 432+ 9A62 3A AC 88     6 ld a,(CTRL_DESPLZ)
 433+ 9A65 FE F8        	cp $f8
 434+ 9A67 20 2A        	jr nz,8F
 435+ 9A69 18 10        	jr 4F
 436+ 9A6B 3A AC 88     1 ld a,(CTRL_DESPLZ)
 437+ 9A6E FE F9        	cp $f9
 438+ 9A70 20 21        	jr nz,8F
 439+ 9A72 18 07        	jr 4F
 440+ 9A74 3A AC 88     7 ld a,(CTRL_DESPLZ)
 441+ 9A77 FE FB        	cp $fb
 442+ 9A79 20 18        	jr nz,8F
 443+ 9A7B
 444+ 9A7B              ; ---------- ---------- ----------
 445+ 9A7B
 446+ 9A7B              4
 447+ 9A7B CD 81 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 448+ 9A7E              ;	call Reinicio
 449+ 9A7E
 450+ 9A7E              ; ---------- ---------- ----------
 451+ 9A7E
 452+ 9A7E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 453+ 9A80 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 454+ 9A81
 455+ 9A81              ;	ld hl,(Indice_Sprite_izq)
 456+ 9A81              ;	ld (Puntero_DESPLZ_izq),hl
 457+ 9A81
 458+ 9A81 CD 9A 9A     	call DESPLZ_IZQ
 459+ 9A84 C1           	pop bc
 460+ 9A85 10 F9        	djnz 5B
 461+ 9A87 2A A6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 462+ 9A8A 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 463+ 9A8B 22 A6 88     	ld (Posicion_actual),hl
 464+ 9A8E CD EA 9B     	call Genera_coordenadas
 465+ 9A91 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 466+ 9A93
 467+ 9A93              ; ---------- ---------- ----------
 468+ 9A93
 469+ 9A93              ; Movemos, no hay recolocación.
 470+ 9A93
 471+ 9A93 2A A6 88     8 ld hl,(Posicion_actual)
 472+ 9A96 CD 9A 9A     	call DESPLZ_IZQ
 473+ 9A99 C9           2 ret
 474+ 9A9A
 475+ 9A9A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 476+ 9A9A              ;
 477+ 9A9A              ;	22/9/22
 478+ 9A9A
 479+ 9A9A              DESPLZ_IZQ
 480+ 9A9A
 481+ 9A9A CD A9 9A     	call Desplaza_izquierda
 482+ 9A9D CD F5 9A         call modifica_parametros_1er_DESPLZ
 483+ 9AA0 CD 1D 9B     	call Ciclo_completo_2
 484+ 9AA3 21 CE 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 485+ 9AA6 CB BE        	res 7,(hl)
 486+ 9AA8 C9           	ret
 487+ 9AA9
 488+ 9AA9              Desplaza_izquierda
 489+ 9AA9
 490+ 9AA9 3A B9 88     	ld a,(Vel_left)
 491+ 9AAC 47           	ld b,a
 492+ 9AAD 2A B4 88     	ld hl,(Puntero_DESPLZ_izq)
 493+ 9AB0 23           1 inc hl
 494+ 9AB1 23           	inc hl
 495+ 9AB2 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 496+ 9AB4 22 B4 88     	ld (Puntero_DESPLZ_izq),hl
 497+ 9AB7 CD E6 8B     	call Extrae_address
 498+ 9ABA 22 A8 88     	ld (Puntero_objeto),hl
 499+ 9ABD
 500+ 9ABD              ; Modifica (Puntero_DESPLZ_der).
 501+ 9ABD
 502+ 9ABD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 503+ 9ABD              ; Cuántos movimientos hemos hecho ??
 504+ 9ABD              ; DE contiene (Puntero_DESPLZ_izq).
 505+ 9ABD
 506+ 9ABD 2A B0 88     7 ld hl,(Indice_Sprite_izq)
 507+ 9AC0 EB           	ex de,hl
 508+ 9AC1 A7           	and a
 509+ 9AC2 ED 52        	sbc hl,de
 510+ 9AC4 CB 3D        	srl l
 511+ 9AC6 3E 08        6 ld a,8
 512+ 9AC8 95           	sub l
 513+ 9AC9 30 1E        	jr nc,3F
 514+ 9ACB
 515+ 9ACB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 516+ 9ACB              ; B="0".
 517+ 9ACB
 518+ 9ACB 04           4 inc b
 519+ 9ACC 3C           	inc a
 520+ 9ACD 20 FC        	jr nz,4B
 521+ 9ACF 78           	ld a,b
 522+ 9AD0 08           	ex af,af
 523+ 9AD1 2A B0 88     	ld hl,(Indice_Sprite_izq)
 524+ 9AD4 23           5 inc hl
 525+ 9AD5 23           	inc hl
 526+ 9AD6 10 FC        	djnz 5B
 527+ 9AD8 22 B4 88     	ld (Puntero_DESPLZ_izq),hl
 528+ 9ADB CD E6 8B     	call Extrae_address
 529+ 9ADE 22 A8 88     	ld (Puntero_objeto),hl
 530+ 9AE1
 531+ 9AE1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 532+ 9AE1              ; _(Posicion_actual).
 533+ 9AE1
 534+ 9AE1 21 A6 88     	ld hl,Posicion_actual
 535+ 9AE4 35           	dec (hl)
 536+ 9AE5 08           	ex af,af
 537+ 9AE6 6F           	ld l,a
 538+ 9AE7 18 DD        	jr 6B
 539+ 9AE9
 540+ 9AE9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 541+ 9AE9
 542+ 9AE9 47           3 ld b,a
 543+ 9AEA 2A AE 88     	ld hl,(Indice_Sprite_der)
 544+ 9AED 23           2 inc hl
 545+ 9AEE 23           	inc hl
 546+ 9AEF 10 FC        	djnz 2B
 547+ 9AF1 22 B2 88     	ld (Puntero_DESPLZ_der),hl
 548+ 9AF4 C9           8 ret
 549+ 9AF5
 550+ 9AF5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 551+ 9AF5              ;
 552+ 9AF5              ;	modifica_parametros_1er_DESPLZ
 553+ 9AF5              ;
 554+ 9AF5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 555+ 9AF5              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 556+ 9AF5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 557+ 9AF5
 558+ 9AF5 3A AC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 559+ 9AF8 A7           	and a
 560+ 9AF9 20 1E        	jr nz,1F
 561+ 9AFB 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 562+ 9AFC 32 AC 88         ld (CTRL_DESPLZ),a
 563+ 9AFF 21 A5 88     	ld hl,Columns
 564+ 9B02 34           	inc (hl)
 565+ 9B03 3A B8 88     	ld a,(Cuad_objeto)
 566+ 9B06 E6 01        	and 1
 567+ 9B08 20 0F        	jr nz,1F
 568+ 9B0A 2A A6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 569+ 9B0D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 570+ 9B0E 22 A6 88     	ld (Posicion_actual),hl
 571+ 9B11 CD EA 9B     	call Genera_coordenadas
 572+ 9B14 CD 70 9B     	call Dec_CTRL_DESPLZ
 573+ 9B17 18 03        	jr 2F
 574+ 9B19 CD 70 9B     1 call Dec_CTRL_DESPLZ
 575+ 9B1C C9           2 ret
 576+ 9B1D
 577+ 9B1D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 578+ 9B1D
 579+ 9B1D 3A AC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 580+ 9B20 FE F7        	cp $f7
 581+ 9B22 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 582+ 9B24 30 2C        	jr nc,3F
 583+ 9B26
 584+ 9B26              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 585+ 9B26
 586+ 9B26 06 00        	ld b,0
 587+ 9B28 04           4 inc b
 588+ 9B29 3C           	inc a
 589+ 9B2A FE F7        	cp $f7
 590+ 9B2C 20 FA        	jr nz,4B
 591+ 9B2E 3E FF        	ld a,$ff
 592+ 9B30 90           	sub b
 593+ 9B31 32 AC 88     	ld (CTRL_DESPLZ),a
 594+ 9B34 18 1C        	jr 3F
 595+ 9B36
 596+ 9B36              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 597+ 9B36
 598+ 9B36 21 A5 88     1 ld hl,Columns
 599+ 9B39 35           	dec (hl)
 600+ 9B3A AF           	xor a
 601+ 9B3B 32 AC 88     	ld (CTRL_DESPLZ),a
 602+ 9B3E 3A B8 88     	ld a,(Cuad_objeto)
 603+ 9B41 E6 01        	and 1
 604+ 9B43 28 0A        	jr z,2F
 605+ 9B45 2A A6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 606+ 9B48 2B           	dec hl
 607+ 9B49 22 A6 88     	ld (Posicion_actual),hl
 608+ 9B4C CD EA 9B     	call Genera_coordenadas
 609+ 9B4F
 610+ 9B4F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 611+ 9B4F
 612+ 9B4F CD 10 8C     2 call Inicia_puntero_objeto_izq
 613+ 9B52 C9           3 ret
 614+ 9B53
 615+ 9B53              ; ---------- ---------- ---------- ---------- ---------- ----------
 616+ 9B53              ;
 617+ 9B53              ;	19/10/22
 618+ 9B53              ;
 619+ 9B53              ;	(cp 29) para un Amadeus de 3 Columns.
 620+ 9B53              ;	(cp 30)   ""  ""    ""     2 Columns.
 621+ 9B53
 622+ 9B53 3A AA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 623+ 9B56 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 624+ 9B58 C9           	ret
 625+ 9B59
 626+ 9B59              ; ---------- ---------- ---------- ---------- ---------- ----------
 627+ 9B59              ;
 628+ 9B59              ;	19/10/22
 629+ 9B59              ;
 630+ 9B59              ;	(cp 2) para un Amadeus de 3 Columns.
 631+ 9B59              ;	(cp 1)   ""  ""    ""     2 Columns.
 632+ 9B59
 633+ 9B59 3A AA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 634+ 9B5C FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 635+ 9B5E C9           	ret
 636+ 9B5F
 637+ 9B5F              ; ---------- ---------- ---------- ---------- ---------- ----------
 638+ 9B5F              ;
 639+ 9B5F              ;	24/7/22
 640+ 9B5F              ;
 641+ 9B5F              ;	Inc_CTRL_DESPLZ
 642+ 9B5F              ;
 643+ 9B5F              ;
 644+ 9B5F              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 645+ 9B5F
 646+ 9B5F 21 AC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 647+ 9B62 3A BA 88     	ld a,(Vel_right)
 648+ 9B65 A7           	and a
 649+ 9B66 28 06        	jr z,1F
 650+ 9B68 47           	ld b,a
 651+ 9B69 34           3 inc (hl)
 652+ 9B6A 10 FD        	djnz 3B
 653+ 9B6C 18 01        	jr 2F
 654+ 9B6E 34           1 inc (hl)
 655+ 9B6F C9           2 ret
 656+ 9B70
 657+ 9B70              ; ---------- ---------- ---------- ---------- ---------- ----------
 658+ 9B70              ;
 659+ 9B70              ;	5/2/23
 660+ 9B70              ;
 661+ 9B70              ;	Dec_CTRL_DESPLZ
 662+ 9B70              ;
 663+ 9B70              ;
 664+ 9B70              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 665+ 9B70
 666+ 9B70 21 AC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 667+ 9B73 3A B9 88     	ld a,(Vel_left)
 668+ 9B76 A7           	and a
 669+ 9B77 28 06        	jr z,1F
 670+ 9B79 47           	ld b,a
 671+ 9B7A 35           3 dec (hl)
 672+ 9B7B 10 FD        	djnz 3B
 673+ 9B7D 18 01        	jr 2F
 674+ 9B7F 35           1 dec (hl)
 675+ 9B80 C9           2 ret
 676+ 9B81
 677+ 9B81              ; ---------- ---------- ---------- ---------- ---------- ----------
 678+ 9B81
 679+ 9B81 2A A6 88     Reaparece_derecha ld hl,(Posicion_actual)
 680+ 9B84 01 1F 00     	ld bc,31
 681+ 9B87 A7           	and a
 682+ 9B88 ED 4A        	adc hl,bc
 683+ 9B8A 22 A6 88     	ld (Posicion_actual),hl
 684+ 9B8D 21 CE 88     	ld hl,Ctrl_0														; $xxx1
 685+ 9B90 CB C6        	set 0,(hl)
 686+ 9B92 C9           	ret
 687+ 9B93
 688+ 9B93              ; ---------- ---------- ---------- ---------- ---------- ----------
 689+ 9B93
 690+ 9B93 2A A6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 691+ 9B96 01 1F 00     	ld bc,31
 692+ 9B99 A7           	and a
 693+ 9B9A ED 42        	sbc hl,bc
 694+ 9B9C 22 A6 88     	ld (Posicion_actual),hl 											; $xx1x
 695+ 9B9F 21 CE 88     	ld hl,Ctrl_0
 696+ 9BA2 CB CE        	set 1,(hl)
 697+ 9BA4 C9           	ret
 698+ 9BA5
 699+ 9BA5              ; ---------- ---------- ---------- ---------- ---------- ----------
 700+ 9BA5
 701+ 9BA5 24           Reaparece_abajo inc h
 702+ 9BA6 01 E0 17     	ld bc,$17e0
 703+ 9BA9 A7           	and a
 704+ 9BAA ED 4A        	adc hl,bc
 705+ 9BAC 22 A6 88     	ld (Posicion_actual),hl
 706+ 9BAF 21 CE 88     	ld hl,Ctrl_0
 707+ 9BB2 CB D6        	set 2,(hl)
 708+ 9BB4 C9           	ret
 709+ 9BB5
 710+ 9BB5              ; ---------- ---------- ---------- ---------- ---------- ----------
 711+ 9BB5
 712+ 9BB5 01 E0 17     Reaparece_arriba ld bc,$17e0
 713+ 9BB8 A7           	and a
 714+ 9BB9 ED 42        	sbc hl,bc
 715+ 9BBB 22 A6 88     	ld (Posicion_actual),hl
 716+ 9BBE 21 CE 88     	ld hl,Ctrl_0
 717+ 9BC1 CB DE        	set 3,(hl)
 718+ 9BC3 C9           	ret
 719+ 9BC4
 720+ 9BC4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 721+ 9BC4              ;
 722+ 9BC4              ;	15/07/23
 723+ 9BC4
 724+ 9BC4              Reinicio
 725+ 9BC4
 726+ 9BC4              ; Vamos a reiniciar los punteros y variables de movimiento.
 727+ 9BC4
 728+ 9BC4 AF           	xor a
 729+ 9BC5 21 D3 88     	ld hl,Puntero_indice_mov_bucle
 730+ 9BC8 CD E6 9B     	call Limpia_contenido_hl
 731+ 9BCB
 732+ 9BCB 21 A6 88     	ld hl,Posicion_actual
 733+ 9BCE CD E6 9B     	call Limpia_contenido_hl
 734+ 9BD1
 735+ 9BD1 CD 16 9F     	call Inicializa_Puntero_indice_mov
 736+ 9BD4 CD A0 9E     	call Inicia_Puntero_mov
 737+ 9BD7
 738+ 9BD7 21 D5 88     	ld hl,Incrementa_puntero
 739+ 9BDA 06 05        	ld b,5
 740+ 9BDC 77           1 ld (hl),a
 741+ 9BDD 23           	inc hl
 742+ 9BDE 10 FC        	djnz 1B
 743+ 9BE0
 744+ 9BE0 21 DF 88     	ld hl,Ctrl_2
 745+ 9BE3 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 746+ 9BE5
 747+ 9BE5 C9           	ret
 748+ 9BE6
 749+ 9BE6 77           Limpia_contenido_hl	ld (hl),a
 750+ 9BE7 23           	inc hl
 751+ 9BE8 77           	ld (hl),a
 752+ 9BE9 C9           	ret
 753+ 9BEA
 754+ 9BEA
# file closed: Direcciones.asm
1505  9BEA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9BEA              ; ------------------------------------------------------------------------
   2+ 9BEA              ;
   3+ 9BEA              ;	02/04/23
   4+ 9BEA              ;
   5+ 9BEA              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9BEA              ;	Fila superior "0", Columna izquierda "0".
   7+ 9BEA              ;
   8+ 9BEA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9BEA              ;
  10+ 9BEA              ;	Modifica: A,BC y DE.
  11+ 9BEA
  12+ 9BEA C5           Genera_coordenadas push bc
  13+ 9BEB E5           	push hl
  14+ 9BEC D5           	push de
  15+ 9BED
  16+ 9BED 2A A6 88     	ld hl,(Posicion_actual)
  17+ 9BF0
  18+ 9BF0 7D           	ld a,l
  19+ 9BF1 E6 1F        	and $1f
  20+ 9BF3 32 AA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9BF6
  22+ 9BF6 CD 5B 98     	call calcula_tercio
  23+ 9BF9 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9BFA
  25+ 9BFA 1E 00        	ld e,0
  26+ 9BFC 7D           	ld a,l
  27+ 9BFD E6 E0        	and $e0
  28+ 9BFF 28 01        	jr z,1F
  29+ 9C01 04           	inc b
  30+ 9C02
  31+ 9C02 04           1 inc b
  32+ 9C03 05           	dec b
  33+ 9C04 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C06              ;														; _ , salimos.
  35+ 9C06 1C           3 inc e
  36+ 9C07 D6 20        	sub 32
  37+ 9C09 20 FB        	jr nz,3B
  38+ 9C0B 10 F5        	djnz 1B
  39+ 9C0D
  40+ 9C0D 7B           2 ld a,e
  41+ 9C0E 32 AB 88     	ld (Coordenada_y),a
  42+ 9C11
  43+ 9C11 D1           	pop de
  44+ 9C12 E1           	pop hl
  45+ 9C13 C1           	pop bc
  46+ 9C14
  47+ 9C14 C9           	ret
  48+ 9C15
  49+ 9C15              ; ------------------------------------------------------------------------
  50+ 9C15              ;	28/05/23
  51+ 9C15              ;
  52+ 9C15              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C15              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C15              ;
  55+ 9C15              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C15              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C15              ;
  58+ 9C15              ;		DE="$120d"
  59+ 9C15              ;
  60+ 9C15              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C15              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C15              ;
  63+ 9C15              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C15
  65+ 9C15              ;	Modifica: A,BC y DE.
  66+ 9C15
  67+ 9C15
  68+ 9C15              Genera_coordenadas_disparo
  69+ 9C15
  70+ 9C15              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C15
  72+ 9C15 7D           	ld a,l
  73+ 9C16 E6 1F        	and $1f
  74+ 9C18 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C19 CD 5B 98     	call calcula_tercio
  76+ 9C1C 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C1D 1E 00        	ld e,0
  78+ 9C1F 7D           	ld a,l
  79+ 9C20 E6 E0        	and $e0
  80+ 9C22 28 01        	jr z,1F
  81+ 9C24 04           	inc b
  82+ 9C25 1C           1 inc e
  83+ 9C26 D6 20        	sub 32
  84+ 9C28 20 FB        	jr nz,1B
  85+ 9C2A 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C2C C9           	ret
  87+ 9C2D
# file closed: Genera_coordenadas.asm
1506  9C2D              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C2D              ; Relojes y temporizaciones.
   2+ 9C2D
   3+ 9C2D              ; ------------------------------------------------------
   4+ 9C2D              ;
   5+ 9C2D              ;	16/7/23
   6+ 9C2D              ;
   7+ 9C2D              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C2D              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C2D              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C2D              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C2D              ;
  12+ 9C2D              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C2D              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C2D
  15+ 9C2D              ; Disparo_entidad db 1
  16+ 9C2D              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C2D              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C2D
  19+ 9C2D              Habilita_disparos
  20+ 9C2D
  21+ 9C2D 7E           	ld a,(hl)
  22+ 9C2E A7           	and a
  23+ 9C2F C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C30
  25+ 9C30 EB           	ex de,hl
  26+ 9C31
  27+ 9C31 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C32 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C33
  30+ 9C33              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C33
  32+ 9C33 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C34 7E           	ld a,(hl)
  34+ 9C35 23           	inc hl
  35+ 9C36 77           	ld (hl),a
  36+ 9C37
  37+ 9C37 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C38 3E 01        	ld a,1
  39+ 9C3A 77           	ld (hl),a
  40+ 9C3B C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1507  9C3C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C3C
   2+ 9C3C
   3+ 9C3C              ;   07/07/23
   4+ 9C3C              ;
   5+ 9C3C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C3C              ;
   7+ 9C3C              ;   Codificación:
   8+ 9C3C              ;
   9+ 9C3C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C3C              ;
  11+ 9C3C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C3C              ;
  13+ 9C3C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C3C              ;
  15+ 9C3C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C3C              ;
  17+ 9C3C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C3C              ;                               ..... %01000010 Vel_up 4
  19+ 9C3C              ;                                               Vel_down 2
  20+ 9C3C              ;                               ..... $42
  21+ 9C3C              ;
  22+ 9C3C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C3C              ;
  24+ 9C3C              ;                               ..... %01000010 Vel_left 4
  25+ 9C3C              ;                                               Vel_right 2
  26+ 9C3C              ;                               ..... $42
  27+ 9C3C              ;
  28+ 9C3C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C3C              ;
  30+ 9C3C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C3C              ;
  32+ 9C3C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C3C              ;
  34+ 9C3C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C3C              ;                                     $53
  36+ 9C3C              ;
  37+ 9C3C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C3C              ;
  39+ 9C3C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C3C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C3C              ;
  42+ 9C3C              ;                       Arriba ..... $81
  43+ 9C3C              ;                       Arriba - izquierda ..... $a1
  44+ 9C3C              ;                       Arriba - derecha ..... $91
  45+ 9C3C              ;
  46+ 9C3C              ;                       Abajo ..... $41
  47+ 9C3C              ;                       Abajo - izquierda ..... $61
  48+ 9C3C              ;                       Abajo - derecha ..... $51
  49+ 9C3C              ;
  50+ 9C3C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C3C              ;
  52+ 9C3C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C3C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C3C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C3C              ;
  56+ 9C3C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C3C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C3C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C3C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C3C              ;
  61+ 9C3C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C3C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C3C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C3C              ;
  65+ 9C3C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C3C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C3C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C3C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C3C
  70+ 9C3C              ; ----- ----- ----- ----- -----
  71+ 9C3C
  72+ 9C3C 68 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C3E 70 9C            defw F_1
  74+ 9C40 7A 9C            defw F_2
  75+ 9C42 84 9C            defw Codo_abajo_derecha
  76+ 9C44 B8 9C            defw Derecha_y_subiendo
  77+ 9C46 C2 9C            defw Derecha_y_subiendo_1
  78+ 9C48 CC 9C            defw F_3
  79+ 9C4A D6 9C            defw F_4
  80+ 9C4C E0 9C            defw Derecha_y_bajando
  81+ 9C4E EA 9C            defw Derecha_y_bajando_1
  82+ 9C50 F4 9C            defw Derecha_y_bajando_2
  83+ 9C52 FE 9C            defw Codo_derecha_abajo
  84+ 9C54 2E 9D            defw Codo_abajo_izq.
  85+ 9C56 62 9D            defw Izquierda_y_subiendo
  86+ 9C58 6C 9D            defw Izquierda_y_subiendo_1
  87+ 9C5A 76 9D            defw F_5
  88+ 9C5C 80 9D            defw F_6
  89+ 9C5E 8A 9D            defw Izquierda_y_bajando
  90+ 9C60 94 9D            defw Izquierda_y_bajando_1
  91+ 9C62 9E 9D            defw Izquierda_y_bajando_2
  92+ 9C64 A8 9D            defw Codo_izquierda_abajo
  93+ 9C66 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C68
  95+ 9C68 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C6C 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C70
  98+ 9C70 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C74 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C78 08 00
 100+ 9C7A 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C7E 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C82 0F FE
 102+ 9C84
 103+ 9C84 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C88 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C8C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C90 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C94 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C98 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C9C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9CA0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9CA4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CA8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CAC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9CB0 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9CB4 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9CB8
 117+ 9CB8 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9CBC 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9CC0 06 00
 119+ 9CC2
 120+ 9CC2 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9CC6 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9CCA 02 00
 122+ 9CCC
 123+ 9CCC 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9CD0 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9CD4 04 00
 125+ 9CD6 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9CDA 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9CDE 08 00
 127+ 9CE0
 128+ 9CE0 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9CE4 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9CE8 02 00
 130+ 9CEA
 131+ 9CEA 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9CEE 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9CF2 06 00
 133+ 9CF4
 134+ 9CF4 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9CF8 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CFC 06 00
 136+ 9CFE
 137+ 9CFE              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CFE
 139+ 9CFE 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D02 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D06 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D0A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D0E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D12 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D16 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D1A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D1E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D22 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D26 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D2A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D2E
 152+ 9D2E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D32 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D36 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D3A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D3E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D42 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D46 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D4A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D4E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D52 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D56 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D5A 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D5E 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D62
 166+ 9D62 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D66 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D6A 06 00
 168+ 9D6C
 169+ 9D6C 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D70 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D74 02 00
 171+ 9D76
 172+ 9D76 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D7A 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D7E 04 00
 174+ 9D80 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D84 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D88 08 00
 176+ 9D8A
 177+ 9D8A 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D8E 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D92 02 00
 179+ 9D94
 180+ 9D94 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D98 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D9C 06 00
 182+ 9D9E
 183+ 9D9E 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9DA2 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DA6 06 00
 185+ 9DA8
 186+ 9DA8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DAC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9DB0 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9DB4 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9DB8 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9DBC 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9DC0 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9DC4 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9DC8 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9DCC 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9DD0 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9DD4 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9DD8
 199+ 9DD8              ; ----- ----- ----- ----- -----
 200+ 9DD8              ;
 201+ 9DD8              ;   27/06/23
 202+ 9DD8
 203+ 9DD8              Movimiento
 204+ 9DD8
 205+ 9DD8              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9DD8
 207+ 9DD8              ;    ld hl,(Posicion_actual)
 208+ 9DD8
 209+ 9DD8 3A DF 88         ld a,(Ctrl_2)
 210+ 9DDB CB 57            bit 2,a
 211+ 9DDD 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9DDF
 213+ 9DDF 2A D1 88         ld hl,(Puntero_mov)
 214+ 9DE2 7E               ld a,(hl)
 215+ 9DE3
 216+ 9DE3              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9DE3
 218+ 9DE3              Inicia_desplazamiento.
 219+ 9DE3
 220+ 9DE3              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9DE3
 222+ 9DE3 CD D7 9E         call Ajusta_velocidad_desplazamiento
 223+ 9DE6
 224+ 9DE6              ; Iniciamos (Repetimos_mov).
 225+ 9DE6
 226+ 9DE6 7E               ld a,(hl)
 227+ 9DE7 E6 0F            and $0f
 228+ 9DE9 32 D7 88         ld (Repetimos_desplazamiento),a
 229+ 9DEC 32 D8 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9DEF
 231+ 9DEF              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9DEF
 233+ 9DEF 23               inc hl
 234+ 9DF0 7E               ld a,(hl)
 235+ 9DF1 32 DA 88         ld (Cola_de_desplazamiento),a
 236+ 9DF4 2B               dec hl
 237+ 9DF5
 238+ 9DF5 21 DF 88         ld hl,Ctrl_2
 239+ 9DF8 CB D6            set 2,(hl)
 240+ 9DFA
 241+ 9DFA              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9DFA              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9DFA
 244+ 9DFA              Desplazamiento_iniciado
 245+ 9DFA
 246+ 9DFA CD AB 9E         call Aplica_desplazamiento
 247+ 9DFD
 248+ 9DFD 3A DF 88         ld a,(Ctrl_2)
 249+ 9E00 CB 67            bit 4,a
 250+ 9E02 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E03
 252+ 9E03 21 D7 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E06 35               dec (hl)
 254+ 9E07 C0               ret nz
 255+ 9E08
 256+ 9E08              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E08              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E08              ; Analiza (Cola_de_desplazamiento).
 259+ 9E08
 260+ 9E08 3A DA 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E0B A7               and a
 262+ 9E0C CC 00 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E0F 28 30            jr z,Reinicia_el_movimiento
 264+ 9E11
 265+ 9E11 FE FF            cp $ff
 266+ 9E13 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E15
 268+ 9E15 FE FE            cp $fe
 269+ 9E17 CC 84 9E         call z,Fijamos_bucle
 270+ 9E1A 28 25            jr z,Reinicia_el_movimiento
 271+ 9E1C
 272+ 9E1C FE FD            cp $fd
 273+ 9E1E 20 11            jr nz,1F
 274+ 9E20
 275+ 9E20              ; ---
 276+ 9E20              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E20
 278+ 9E20 3A DF 88         ld a,(Ctrl_2)
 279+ 9E23 CB 5F            bit 3,a
 280+ 9E25 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E27
 282+ 9E27              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E27
 284+ 9E27 21 DF 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E2A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E2C
 287+ 9E2C CD 95 9E         call Inicia_Repetimos_movimiento
 288+ 9E2F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E31              ; ---
 290+ 9E31
 291+ 9E31 FE 01        1 cp 1
 292+ 9E33 CA 6E 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E36
 294+ 9E36 3D               dec a
 295+ 9E37 32 DA 88         ld (Cola_de_desplazamiento),a
 296+ 9E3A
 297+ 9E3A 3A D8 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E3D 32 D7 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E40              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E40 C9               ret
 301+ 9E41
 302+ 9E41              Reinicia_el_movimiento
 303+ 9E41
 304+ 9E41 3A DF 88         ld a,(Ctrl_2)
 305+ 9E44 CB 5F            bit 3,a
 306+ 9E46 28 1B            jr z,2F
 307+ 9E48
 308+ 9E48              ; (Cola_de_desplazamiento)="254".
 309+ 9E48
 310+ 9E48 21 D9 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E4B 35               dec (hl)
 312+ 9E4C 20 15            jr nz,2F
 313+ 9E4E
 314+ 9E4E              ; Fin de las repeticiones del último movimiento.
 315+ 9E4E
 316+ 9E4E 21 DF 88         ld hl,Ctrl_2
 317+ 9E51 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9E53
 319+ 9E53 2A D1 88         ld hl,(Puntero_mov)
 320+ 9E56 23               inc hl
 321+ 9E57 23               inc hl
 322+ 9E58 23               inc hl
 323+ 9E59 22 D1 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9E5C              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9E5C 7E               ld a,(hl)
 326+ 9E5D 32 DA 88         ld (Cola_de_desplazamiento),a
 327+ 9E60
 328+ 9E60 C3 08 9E         jp Cola
 329+ 9E63
 330+ 9E63 CD A0 9E     2 call Inicia_Puntero_mov
 331+ 9E66
 332+ 9E66 21 DF 88         ld hl,Ctrl_2
 333+ 9E69 CB 96            res 2,(hl)
 334+ 9E6B
 335+ 9E6B C3 D8 9D         jp Movimiento
 336+ 9E6E
 337+ 9E6E              Siguiente_desplazamiento
 338+ 9E6E
 339+ 9E6E              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9E6E              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9E6E
 342+ 9E6E 21 DF 88         ld hl,Ctrl_2
 343+ 9E71 CB 96            res 2,(hl)
 344+ 9E73
 345+ 9E73 2A D1 88         ld hl,(Puntero_mov)
 346+ 9E76 23               inc hl
 347+ 9E77 23               inc hl
 348+ 9E78 22 D1 88         ld (Puntero_mov),hl
 349+ 9E7B
 350+ 9E7B 7E               ld a,(hl)
 351+ 9E7C A7               and a
 352+ 9E7D CC 00 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9E80 CA 41 9E         jp z,Reinicia_el_movimiento
 354+ 9E83
 355+ 9E83 C9               ret
 356+ 9E84
 357+ 9E84              ; Subrutinas -----------------------------------------
 358+ 9E84              ; ---------- --------- --------- ---------- ----------
 359+ 9E84              ;
 360+ 9E84              ;   24/07/23
 361+ 9E84              ;
 362+ 9E84              ;   Fijamos_bucle
 363+ 9E84              ;
 364+ 9E84              ;
 365+ 9E84
 366+ 9E84              Fijamos_bucle
 367+ 9E84
 368+ 9E84 3A D5 88         ld a,(Incrementa_puntero)
 369+ 9E87 3C               inc a
 370+ 9E88 32 D6 88         ld (Incrementa_puntero_backup),a
 371+ 9E8B
 372+ 9E8B CD 00 9F         call Incrementa_Puntero_indice_mov
 373+ 9E8E 2A CF 88         ld hl,(Puntero_indice_mov)
 374+ 9E91 22 D3 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9E94 C9               ret
 376+ 9E95
 377+ 9E95              ; ---------- --------- --------- ---------- ----------
 378+ 9E95              ;
 379+ 9E95              ;   07/7/23
 380+ 9E95              ;
 381+ 9E95              ;   Inicia_Repetimos_movimiento
 382+ 9E95              ;
 383+ 9E95              ;
 384+ 9E95
 385+ 9E95              Inicia_Repetimos_movimiento
 386+ 9E95
 387+ 9E95              ; Iniciamos (Repetimos_movimiento).
 388+ 9E95
 389+ 9E95 DD 2A D1 88      ld ix,(Puntero_mov)
 390+ 9E99 DD 7E 02         ld a,(ix+2)
 391+ 9E9C 32 D9 88         ld (Repetimos_movimiento),a
 392+ 9E9F
 393+ 9E9F C9               ret
 394+ 9EA0
 395+ 9EA0              ; ---------- --------- --------- ---------- ----------
 396+ 9EA0              ;
 397+ 9EA0              ;   26/6/23
 398+ 9EA0              ;
 399+ 9EA0              ;   Inicia_Puntero_mov
 400+ 9EA0              ;
 401+ 9EA0              ;
 402+ 9EA0
 403+ 9EA0 2A CF 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9EA3 5E               ld e,(hl)
 405+ 9EA4 23               inc hl
 406+ 9EA5 56               ld d,(hl)
 407+ 9EA6 EB               ex de,hl
 408+ 9EA7 22 D1 88         ld (Puntero_mov),hl
 409+ 9EAA C9               ret
 410+ 9EAB
 411+ 9EAB              ; ---------- --------- --------- ---------- ----------
 412+ 9EAB              ;
 413+ 9EAB              ;   27/06/23
 414+ 9EAB              ;
 415+ 9EAB              ;   Aplica_movimiento.
 416+ 9EAB
 417+ 9EAB              Aplica_desplazamiento
 418+ 9EAB
 419+ 9EAB              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9EAB
 421+ 9EAB 2A D1 88         ld hl, (Puntero_mov)
 422+ 9EAE
 423+ 9EAE 7E               ld a,(hl)
 424+ 9EAF E6 F0            and $f0
 425+ 9EB1 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9EB2
 427+ 9EB2 CB 7E            bit 7,(hl)
 428+ 9EB4 28 03            jr z,1F
 429+ 9EB6 CD D6 98         call Mov_up
 430+ 9EB9 2A D1 88     1 ld hl, (Puntero_mov)
 431+ 9EBC CB 76            bit 6,(hl)
 432+ 9EBE 28 03            jr z,2F
 433+ 9EC0 CD A1 98         call Mov_down
 434+ 9EC3 2A D1 88     2 ld hl, (Puntero_mov)
 435+ 9EC6 CB 6E            bit 5,(hl)
 436+ 9EC8 28 03            jr z,3F
 437+ 9ECA CD 37 9A         call Mov_left
 438+ 9ECD 2A D1 88     3 ld hl, (Puntero_mov)
 439+ 9ED0 CB 66            bit 4,(hl)
 440+ 9ED2 C8               ret z
 441+ 9ED3 CD 19 99         call Mov_right
 442+ 9ED6 C9               ret
 443+ 9ED7
 444+ 9ED7              ; ---------- --------- --------- ---------- ----------
 445+ 9ED7              ;
 446+ 9ED7              ;   26/06/23
 447+ 9ED7              ;
 448+ 9ED7              ;   Ajusta_velocidad_desplazamiento.
 449+ 9ED7
 450+ 9ED7              Ajusta_velocidad_desplazamiento
 451+ 9ED7
 452+ 9ED7              ; 1er byte de la cadena de movimiento.
 453+ 9ED7              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9ED7
 455+ 9ED7 CD F5 9E         call Extrae_nibble_alto
 456+ 9EDA
 457+ 9EDA 32 BB 88         ld (Vel_up),a
 458+ 9EDD 79               ld a,c
 459+ 9EDE E6 0F            and $0f
 460+ 9EE0 32 BC 88         ld (Vel_down),a
 461+ 9EE3
 462+ 9EE3              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9EE3              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9EE3
 465+ 9EE3 23               inc hl
 466+ 9EE4 CD F5 9E         call Extrae_nibble_alto
 467+ 9EE7
 468+ 9EE7 32 B9 88         ld (Vel_left),a
 469+ 9EEA 79               ld a,c
 470+ 9EEB E6 0F            and $0f
 471+ 9EED 32 BA 88         ld (Vel_right),a
 472+ 9EF0
 473+ 9EF0              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9EF0
 475+ 9EF0 23               inc hl
 476+ 9EF1 22 D1 88         ld (Puntero_mov),hl
 477+ 9EF4 C9               ret
 478+ 9EF5
 479+ 9EF5 06 04        Extrae_nibble_alto ld b,4
 480+ 9EF7 7E               ld a,(hl)
 481+ 9EF8 4F               ld c,a
 482+ 9EF9 E6 F0            and $f0
 483+ 9EFB CB 3F        1 srl a
 484+ 9EFD 10 FC            djnz 1B
 485+ 9EFF C9               ret
 486+ 9F00
 487+ 9F00              ; ---------- --------- --------- ---------- ----------
 488+ 9F00              ;
 489+ 9F00              ;   5/7/23
 490+ 9F00              ;
 491+ 9F00              ;   Incrementa_Puntero_indice_mov
 492+ 9F00
 493+ 9F00              Incrementa_Puntero_indice_mov
 494+ 9F00
 495+ 9F00 21 D5 88         ld hl,Incrementa_puntero
 496+ 9F03 34               inc (hl)
 497+ 9F04
 498+ 9F04 2A CF 88         ld hl,(Puntero_indice_mov)
 499+ 9F07 01 02 00         ld bc,2
 500+ 9F0A A7               and a
 501+ 9F0B 09               add hl,bc
 502+ 9F0C 22 CF 88         ld (Puntero_indice_mov),hl
 503+ 9F0F
 504+ 9F0F 7E               ld a,(hl)
 505+ 9F10 A7               and a
 506+ 9F11
 507+ 9F11              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F11
 509+ 9F11              ;    jr z,$
 510+ 9F11
 511+ 9F11              ;! Reinicia el Patrón de movimiento.
 512+ 9F11
 513+ 9F11 CC 16 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F14
 515+ 9F14 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F15
 517+ 9F15 C9               ret
 518+ 9F16
 519+ 9F16
 520+ 9F16              ; ---------- --------- --------- ---------- ----------
 521+ 9F16              ;
 522+ 9F16              ;   24/07/23
 523+ 9F16              ;
 524+ 9F16              ;   Inicializa_Puntero_indice_mov
 525+ 9F16
 526+ 9F16              Inicializa_Puntero_indice_mov
 527+ 9F16
 528+ 9F16              ; Existe etiqueta de bucle principal???
 529+ 9F16
 530+ 9F16 2A D3 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F19 24               inc h
 532+ 9F1A 25               dec h
 533+ 9F1B 28 05            jr z,2F
 534+ 9F1D
 535+ 9F1D 22 CF 88         ld (Puntero_indice_mov),hl
 536+ 9F20 18 14            jr 3F
 537+ 9F22
 538+ 9F22              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F22
 540+ 9F22 3A D5 88     2 ld a,(Incrementa_puntero)
 541+ 9F25 47               ld b,a
 542+ 9F26
 543+ 9F26 2A CF 88         ld hl,(Puntero_indice_mov)
 544+ 9F29 2B           1 dec hl
 545+ 9F2A 2B               dec hl
 546+ 9F2B 10 FC            djnz 1B
 547+ 9F2D 22 CF 88         ld (Puntero_indice_mov),hl
 548+ 9F30
 549+ 9F30 AF               xor a
 550+ 9F31 32 D5 88         ld (Incrementa_puntero),a
 551+ 9F34 18 06            jr 4F
 552+ 9F36
 553+ 9F36 3A D6 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F39 32 D5 88         ld (Incrementa_puntero),a
 555+ 9F3C C9           4 ret
 556+ 9F3D
 557+ 9F3D
 558+ 9F3D
# file closed: Patrones_de_mov.asm
1508  9F3D              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F3D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F3D              ;
   3+ 9F3D              ;	27/10/23
   4+ 9F3D              ;
   5+ 9F3D              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F3D
   7+ 9F3D              ;	ADC HL,SP	LD (addr),SP
   8+ 9F3D              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F3D              ;	ADD IX,SP	LD SP,nn
  10+ 9F3D              ; 	ADD IY,SP	LD SP,HL
  11+ 9F3D              ;				LD SP,IX
  12+ 9F3D              ;	DEC SP		LD SP,IY
  13+ 9F3D
  14+ 9F3D              ;	EX (SP),HL
  15+ 9F3D              ;	EX (SP),IX
  16+ 9F3D              ;	EX (SP),IY
  17+ 9F3D
  18+ 9F3D              ;	INC SP
  19+ 9F3D
  20+ 9F3D                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 F2 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 C4 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A E1 88         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A FA 88         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A CE 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A FE 88         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A F8 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A E1 88         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 FA 88         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A CE 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 FE 88         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B F2 88      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 F8 88     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B F2 88  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC FB               ei
 107+ 7FFD C9               ret
 108+ 7FFE
 109+ 7FFE              ; -----------------------------------------------------------------------------
 110+ 7FFE              ;
 111+ 7FFE              ;   20/11/23
 112+ 7FFE
 113+ 7FFE              Limpia_y_reinicia_Stack_Snapshot
 114+ 7FFE
 115+ 7FFE              ;   Limpia Album_de_fotos.
 116+ 7FFE
 117+ 7FFE 2A F8 88         ld hl,(Stack_snapshot)
 118+ 8001 E5               push hl
 119+ 8002
 120+ 8002 01 00 70         ld bc,Album_de_fotos
 121+ 8005 A7               and a
 122+ 8006 ED 42            sbc hl,bc
 123+ 8008 45               ld b,l
 124+ 8009
 125+ 8009 E1               pop hl
 126+ 800A 2B               dec hl
 127+ 800B
 128+ 800B 36 00        1 ld (hl),0
 129+ 800D 2B               dec hl
 130+ 800E 10 FB            djnz 1B
 131+ 8010
 132+ 8010              ;   Reinicializa (Stack_snapshot).
 133+ 8010
 134+ 8010 23               inc hl
 135+ 8011 22 F8 88         ld (Stack_snapshot),hl
 136+ 8014
 137+ 8014 C9               ret
# file closed: Guarda_foto_registros.asm
1509  8015
1510  8015              	SAVESNA "Pruebas.sna", START
1511  8015
1512  8015
1513  8015
1514  8015
# file closed: Banco_de_pruebas.asm
