# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 74 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD DA A2     	call Pinta_disparos_Amadeus
  74  82F6 CD A5 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 9D 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD BF 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 9B 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 9B 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 9E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD DD 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	06/12/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6B
  98+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A73 08 00
 100+ 8A75
 101+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7D 0F FE
 103+ 8A7F
 104+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB3
 118+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABB 06 00
 120+ 8ABD
 121+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC5 02 00
 123+ 8AC7
 124+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACF 04 00
 126+ 8AD1
 127+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD9 08 00
 129+ 8ADB
 130+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE3 02 00
 132+ 8AE5
 133+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AED 06 00
 135+ 8AEF
 136+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF7 06 00
 138+ 8AF9
 139+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF9
 141+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B29
 154+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5D
 168+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B65 06 00
 170+ 8B67
 171+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6F 02 00
 173+ 8B71
 174+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B79 04 00
 176+ 8B7B
 177+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B83 08 00
 179+ 8B85
 180+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8D 02 00
 182+ 8B8F
 183+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B97 06 00
 185+ 8B99
 186+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA1 06 00
 188+ 8BA3
 189+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD3
 202+ 8BD3
 203+ 8BD3
 204+ 8BD3
 205+ 8BD3
 206+ 8BD3
 207+ 8BD3
 208+ 8BD3
 209+ 8BD3
 210+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 F0 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 14           Nivel_1 db 20									; Nº de entidades.
  16+ 8BDC 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BE0 01
  17+ 8BE1 01 01 01 01  	db 1,1,1,1,1
  17+ 8BE5 01
  18+ 8BE6 01 01 01 01  	db 1,1,1,1,1
  18+ 8BEA 01
  19+ 8BEB 01 01 01 01  	db 1,1,1,1,1
  19+ 8BEF 01
  20+ 8BF0
  21+ 8BF0 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 8BF1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  22+ 8BF5 01 02
  23+ 8BF7 02 01 01 01  	db 2,1,1,1,1,2
  23+ 8BFB 01 02
  24+ 8BFD
# file closed: Niveles.asm
 150  8BFD
 151  8BFD              ; --------------------------------------------------------------------------------
 152  8BFD              ;
 153  8BFD              ; 12/05/24
 154  8BFD              ;
 155  8BFD              ; Parámetros DRAW.
 156  8BFD              ;
 157  8BFD
 158  8BFD              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BFD
 160  8BFD 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BFE              ;															- Patrón de movimiento.
 162  8BFE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BFF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8C00
 165  8C00 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8C01              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8C01
 168  8C01              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8C01              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8C01              ; Ejemplos.
 171  8C01
 172  8C01              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8C01              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8C01              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8C01              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8C01              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8C01
 178  8C01 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8C02              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8C02              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8C02
 182  8C02 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8C04              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8C04
 185  8C04 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8C06
 187  8C06              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8C06
 189  8C06 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8C08              ;														; _palabras que componen el "movimiento_masticado".
 191  8C08
 192  8C08              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8C08
 194  8C08 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8C09              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8C09              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8C09              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8C09              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8C09
 200  8C09 00           Ctrl_2 db 0
 201  8C0A              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8C0A              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8C0A              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8C0A              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8C0A              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8C0A              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8C0A              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8C0A              ;
 209  8C0A              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8C0A              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8C0A              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8C0A              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8C0A              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8C0A              ;														BIT 4, ???
 215  8C0A              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8C0A
 217  8C0A 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8C0B              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8C0B              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8C0B              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8C0B              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8C0B              ;
 223  8C0B              ; 														DESCRIPCIÖN:
 224  8C0B              ;
 225  8C0B              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8C0B              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8C0B              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8C0B              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8C0B              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8C0B              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8C0B              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8C0B              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8C0B              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8C0B              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8C0B              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8C0B              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8C0B              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8C0B              ;
 239  8C0B              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8C0B              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8C0B              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8C0B
 243  8C0B              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8C0B
 245  8C0B 00           Filas db 0												; Filas. [DRAW]
 246  8C0C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8C0D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C0F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C11
 250  8C11              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C11
 252  8C11 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C12              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C12              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C12
 256  8C12              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C12
 258  8C12              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C12              ;
 260  8C12              ;	COLORES: 0 ..... NEGRO
 261  8C12              ;    		 1 ..... AZUL
 262  8C12              ; 			 2 ..... ROJO
 263  8C12              ;			 3 ..... MAGENTA
 264  8C12              ; 			 4 ..... VERDE
 265  8C12              ; 			 5 ..... CIAN
 266  8C12              ;			 6 ..... AMARILLO
 267  8C12              ; 			 7 ..... BLANCO
 268  8C12
 269  8C12 00 00        Indice_Sprite_der defw 0
 270  8C14 00 00        Indice_Sprite_izq defw 0
 271  8C16 00 00        Puntero_DESPLZ_der defw 0
 272  8C18 00 00        Puntero_DESPLZ_izq defw 0
 273  8C1A
 274  8C1A 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C1C 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C1D 00           Columnas db 0
 277  8C1E 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C20              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C20 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C21
 281  8C21              ; variables de control general.
 282  8C21
 283  8C21 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C22
 285  8C22              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C22
 287  8C22              Perfiles_de_velocidad
 288  8C22
 289  8C22 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C23 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C24 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C25 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C26
 294  8C26              ; Contadores de 16 bits.
 295  8C26
 296  8C26 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C28 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C2A 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C2C 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C2E
 301  8C2E              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C2E
 303  8C2E 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C30 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C32 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C34              ;
 307  8C34              ;
 308  8C34 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C35              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C35              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C35 00           Incrementa_puntero_backup db 0
 312  8C36 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C37              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C37 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C38 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C39 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C3A              ;
 318  8C3A              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C3A              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C3A              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C3A              ;
 322  8C3A              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C3A              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C3A              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C3A              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C3A              ;
 327  8C3A              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C3A              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C3A              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C3A
 331  8C3A 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C3B
 333  8C3B              ;														DESCRIPCIÓN:
 334  8C3B              ;
 335  8C3B              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C3B              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C3B              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C3B              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C3B              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C3B              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C3B
 342  8C3B              ;														BIT 3, Recarga de nueva oleada.
 343  8C3B              ;														BIT 4, Recarga de nueva oleada.
 344  8C3B              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C3B              ;														BIT 6, **** Frame completo.
 346  8C3B              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C3B
 348  8C3B 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C3D              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C3D              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C3D              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C3D
 353  8C3D              ; Gestión de ENTIDADES y CAJAS.
 354  8C3D
 355  8C3D 00 00        Puntero_store_caja defw 0
 356  8C3F 00 00        Puntero_restore_caja defw 0
 357  8C41 00 00        Indice_restore_caja defw 0
 358  8C43 00 00        Puntero_indice_master defw 0
 359  8C45
 360  8C45 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C46 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C47 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C48
 364  8C48 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C4A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C4C              ;														; _ puntero (Indice_entidades).
 367  8C4C
 368  8C4C              ;---------------------------------------------------------------------------------------------------------------
 369  8C4C              ;
 370  8C4C              ;	13/10/24
 371  8C4C              ;
 372  8C4C              ;	Álbumes.
 373  8C4C
 374  8C4C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C4E              ;														; _variable para almacenar lo posición del puntero_
 376  8C4E              ; 														; _de pila, SP.
 377  8C4E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C50              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C50
 380  8C50              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C50
 382  8C50 00 00        Album_de_pintado defw 0
 383  8C52 00 00        Album_de_borrado defw 0
 384  8C54 00 00        Album_de_pintado_Amadeus defw 0
 385  8C56 00 00        Album_de_borrado_Amadeus defw 0
 386  8C58
 387  8C58 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C5A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C5C
 390  8C5C 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C5E 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C60
 393  8C60
 394  8C60 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C62
 396  8C62 00           Num_de_bytes_album_de_disparos db 0
 397  8C63 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C64
 399  8C64 07           Numero_de_disparos_de_entidades db 7
 400  8C65
 401  8C65 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C66 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C67
 404  8C67 00 00        Techo_Scanlines_album defw 0
 405  8C69 00 00        Techo_Scanlines_album_2 defw 0
 406  8C6B 00           Switch db 0
 407  8C6C 00 00        Techo defw 0
 408  8C6E 00 00        Scanlines_album_SP defw 0
 409  8C70 00 89        India_SP defw Tabla_de_pintado
 410  8C72 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C74
 412  8C74 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C75              ;
 414  8C75              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C75              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C75              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C75              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C75              ;																Habilita el borrado/pintado de sprites.
 419  8C75              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C75              ;																_ a la baja.
 421  8C75              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C75              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C75              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C75              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C75              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C75              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C75
 428  8C75 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 429  8C76              ;
 430  8C76              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 431  8C76
 432  8C76 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C77              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 434  8C77              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 435  8C77
 436  8C77              ; Gestión de Disparos.
 437  8C77
 438  8C77 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C79 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 440  8C7B 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C7C
 442  8C7C              ;
 443  8C7C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C7C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C7C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C7C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C7C
 448  8C7C
 449  8C7C
 450  8C7C
 451  8C7C
 452  8C7C
 453  8C7C
 454  8C7C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C7E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C7E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C7E
 458  8C7E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C80              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C80 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C83              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C83 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C86              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C86
 465  8C86              ;---------------------------------------------------------------------------------------------------------------
 466  8C86
 467  8C86              ; Relojes y temporizaciones.
 468  8C86
 469  8C86 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 470  8C87 05           Clock_explosion_Amadeus db 5
 471  8C88 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C89
 473  8C89 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C8B F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 475  8C8D 00           Numero_rnd_disparos db 0
 476  8C8E
 477  8C8E 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 478  8C90 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 479  8C91 A0           CLOCK_disparos_de_entidades db $a0
 480  8C92
 481  8C92              ;---------------------------------------------------------------------------------------------------------------
 482  8C92
 483  8C92              ; Gestión de NIVELES.
 484  8C92
 485  8C92 00           Nivel db 0												; Nivel actual del juego.
 486  8C93 00 00        Puntero_indice_NIVELES defw 0
 487  8C95 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 488  8C97              ; 														; _ que definen el NIVEL.
 489  8C97
 490  8C97              ; ---------------------------------------------------------------------------------------------------------------
 491  8C97
 492  8C97              ; Temporizaciones Shield.
 493  8C97
 494  8C97 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 495  8C9B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 496  8C9D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 497  8C9E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 498  8C9F 00           Shield_3 db 0
 499  8CA0
 500  8CA0 07           Lives db 7
 501  8CA1
 502  8CA1              ; 	INICIO  *************************************************************************************************************************************************************************
 503  8CA1              ;
 504  8CA1              ;	13/11/24
 505  8CA1
 506  8CA1              START
 507  8CA1
 508  8CA1 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 509  8CA4 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 510  8CA6 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 511  8CA8 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 512  8CAA F3           	DI
 513  8CAB
 514  8CAB              ; Limpiamos pantalla.
 515  8CAB
 516  8CAB 3E 07        	ld a,%00000111
 517  8CAD CD 56 95     	call Cls
 518  8CB0 CD B4 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 519  8CB3
 520  8CB3              INICIALIZACION
 521  8CB3
 522  8CB3 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 523  8CB5 CD 4F 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 524  8CB8 CD 38 8F     	call Extrae_numero_aleatorio_y_avanza
 525  8CBB 6F           	ld l,a
 526  8CBC 26 00        	ld h,0
 527  8CBE 22 8E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8CC1
 529  8CC1              ;	Inicia los álbumes de líneas.
 530  8CC1
 531  8CC1 CD 06 91     	call Inicia_albumes_de_lineas
 532  8CC4 CD 16 91     	call Inicia_albumes_de_lineas_Amadeus
 533  8CC7 CD 23 91     	call Inicia_albumes_de_disparos
 534  8CCA
 535  8CCA              ;	Inicia 1er Nivel.
 536  8CCA
 537  8CCA CD B1 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 538  8CCD CD 7F 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 539  8CD0              ;														   _reponiendo entidades eliminadas.
 540  8CD0 CD E5 93     	call Prepara_Cajas_de_Entidades
 541  8CD3
 542  8CD3 CD 36 94     	call Inicia_Amadeus
 543  8CD6
 544  8CD6              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 545  8CD6              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 546  8CD6              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 547  8CD6 11 AE 89     	ld de,Amadeus_BOX
 548  8CD9 CD 25 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 549  8CDC CD 79 94     	call Limpiamos_bandeja_DRAW
 550  8CDF
 551  8CDF              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 552  8CDF
 553  8CDF 06 3C        	ld b,60
 554  8CE1 CD F7 9D     2 call Amadeus_a_izquierda
 555  8CE4 10 FB        	djnz 2B
 556  8CE6
 557  8CE6 CD E4 90     	call Genera_datos_de_impresion_Amadeus
 558  8CE9
 559  8CE9              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 560  8CE9
 561  8CE9 CD 3F 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 562  8CEC
 563  8CEC CD BF 91     	call Inicia_Shield
 564  8CEF
 565  8CEF 2A 6E 8C     6 ld hl,(Scanlines_album_SP)
 566  8CF2 22 67 8C     	ld (Techo_Scanlines_album),hl
 567  8CF5
 568  8CF5 2A 52 8C     	ld hl,(Album_de_borrado)
 569  8CF8 22 6E 8C     	ld (Scanlines_album_SP),hl
 570  8CFB
 571  8CFB 21 00 89     	ld hl,Tabla_de_pintado
 572  8CFE 22 70 8C     	ld (India_SP),hl
 573  8D01
 574  8D01 21 74 8C     	ld hl,Ctrl_3
 575  8D04 CB C6        	set 0,(hl) 											; Indica Frame completo.
 576  8D06 CB D6        	set 2,(hl)
 577  8D08 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 578  8D0A
 579  8D0A FB           	ei 													; Ha de apuntar a $5c3a.
 580  8D0B
 581  8D0B 76           	halt
 582  8D0C
 583  8D0C              ; ------------------------------------
 584  8D0C
 585  8D0C              Main
 586  8D0C              ;
 587  8D0C              ; 07/11/24.
 588  8D0C
 589  8D0C              ; Gestión de disparos.
 590  8D0C
 591  8D0C CD 0D 8F     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 592  8D0F CD EB 9F     	call Motor_de_disparos_entidades
 593  8D12 CD 86 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 594  8D15
 595  8D15              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 596  8D15              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 597  8D15              ; Este hecho lo indica el bit2 de (Impacto2).
 598  8D15
 599  8D15 CD 27 A4     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 600  8D18
 601  8D18              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 602  8D18
 603  8D18 21 91 8C     	ld hl,CLOCK_disparos_de_entidades
 604  8D1B 35           	dec (hl)
 605  8D1C CC 4E 8E     	call z,Autoriza_disparo_de_entidades
 606  8D1F
 607  8D1F 2A 8E 8C     	ld hl,(Clock_next_entity)
 608  8D22 ED 4B 78 5C  	ld bc,(FRAMES)
 609  8D26 A7           	and a
 610  8D27 ED 42        	sbc hl,bc
 611  8D29 20 21        	jr nz,1F
 612  8D2B
 613  8D2B              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 614  8D2B
 615  8D2B CD 38 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 616  8D2E CD 4F 8F     	call Define_Clock_next_entity
 617  8D31
 618  8D31              ; GESTIÓN DE ENTIDADES.
 619  8D31
 620  8D31              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 621  8D31              ; _ (Clock_next_entity) para la siguiente entidad.
 622  8D31
 623  8D31              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 624  8D31              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 625  8D31              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 626  8D31
 627  8D31 21 46 8C     	ld hl,Numero_parcial_de_entidades
 628  8D34 46           	ld b,(hl)
 629  8D35
 630  8D35 04           	inc b
 631  8D36 05           	dec b
 632  8D37
 633  8D37 F3           	di
 634  8D38 28 FE        	jr z,$													;! Nivel superado !!!!!
 635  8D3A FB           	ei
 636  8D3B
 637  8D3B 3A 47 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 638  8D3E B8           	cp b
 639  8D3F 28 0B        	jr z,1F
 640  8D41 30 09        	jr nc,1F
 641  8D43
 642  8D43              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 643  8D43
 644  8D43 3C           	inc a
 645  8D44 32 47 8C     	ld (Entidades_en_curso),a
 646  8D47
 647  8D47 21 75 8C     	ld hl,Ctrl_4
 648  8D4A CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 649  8D4C
 650  8D4C              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 651  8D4C
 652  8D4C              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 653  8D4C              ;	call Define_Clock_next_entity
 654  8D4C
 655  8D4C 3A 47 8C     1 ld a,(Entidades_en_curso)
 656  8D4F A7           	and a
 657  8D50 CA F4 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 658  8D53 47           	ld b,a													; No hay entidades que gestionar.
 659  8D54
 660  8D54              ; ( Código que ejecutamos con cada entidad: ).
 661  8D54
 662  8D54              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 663  8D54              ;
 664  8D54              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 665  8D54
 666  8D54 21 00 89     	ld hl,Tabla_de_pintado
 667  8D57 22 70 8C     	ld (India_SP),hl
 668  8D5A
 669  8D5A 21 74 8C     	ld hl,Ctrl_3
 670  8D5D CB D6        	set 2,(hl)
 671  8D5F CD E2 8E     	call Change
 672  8D62
 673  8D62 C5           2 push bc 												; Nº de entidades en curso.
 674  8D63
 675  8D63 DD 2A 3D 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 676  8D67 CD 90 91     	call Salta_caja_de_entidades_vacia
 677  8D6A
 678  8D6A              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 679  8D6A
 680  8D6A DD 7E 00     	ld a,(ix+0)
 681  8D6D CB 7F        	bit 7,a
 682  8D6F 28 11        	jr z,5F
 683  8D71
 684  8D71              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 685  8D71
 686  8D71 21 75 8C     	ld hl,Ctrl_4
 687  8D74 CB 46        	bit 0,(hl)
 688  8D76 CC 9F 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 689  8D79 28 E8        	jr z,6B
 690  8D7B
 691  8D7B CB 86        	res 0,(hl)											; Restaura bit "despertador".
 692  8D7D CB BF        	res 7,a
 693  8D7F DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 694  8D82
 695  8D82              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 696  8D82              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 697  8D82
 698  8D82 3A 7B 8C     5 ld a,(Impacto2)
 699  8D85 CB 5F        	bit 3,a
 700  8D87 C4 1D A2     	call nz,Compara_con_coordenadas_de_disparo
 701  8D8A
 702  8D8A              ; Existe colisión entre esta entidad y Amadeus ???
 703  8D8A
 704  8D8A DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 705  8D8D CB 4F        	bit 1,a
 706  8D8F C4 AA 92     	call nz,Genera_explosion
 707  8D92 20 43        	jr nz,Gestiona_siguiente_entidad
 708  8D94
 709  8D94 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 710  8D97 A7           	and a
 711  8D98 28 0C        	jr z,3F
 712  8D9A
 713  8D9A              ; IMPACTO en entidad por colisión con Amadeus.
 714  8D9A
 715  8D9A              ; 5/7/24
 716  8D9A              ; Nota importante:
 717  8D9A              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 718  8D9A              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 719  8D9A              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 720  8D9A
 721  8D9A 3A B2 89     	ld a,(Impacto_Amadeus)
 722  8D9D A7           	and a
 723  8D9E C4 AA 92     	call nz,Genera_explosion
 724  8DA1 20 34        	jr nz,Gestiona_siguiente_entidad
 725  8DA3
 726  8DA3              ; Falsa colisión !!!
 727  8DA3
 728  8DA3 32 01 8C     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 729  8DA6
 730  8DA6              ; -------------------------------------------
 731  8DA6
 732  8DA6 CD 93 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 733  8DA9 CD BA 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 734  8DAC CD 83 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 735  8DAF
 736  8DAF DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 737  8DB1 DD 2A 02 8C  	ld ix,(Puntero_de_impresion)
 738  8DB5 CD 96 95     	call Genera_datos_de_impresion
 739  8DB8 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 740  8DBA
 741  8DBA CD 9C 94     	call Decrementa_Contador_de_mov_masticados
 742  8DBD
 743  8DBD              ; -------------------------------------------
 744  8DBD
 745  8DBD              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 746  8DBD
 747  8DBD 2A 02 8C     	ld hl,(Puntero_de_impresion)
 748  8DC0 CD 6A 95     	call Genera_coordenadas
 749  8DC3
 750  8DC3 ED 4B FE 8B  	ld bc,(Coordenada_X)
 751  8DC7
 752  8DC7 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 753  8DCA DD 70 02     	ld (ix+2),b
 754  8DCD
 755  8DCD              ; TODO: Generamos disparo ???
 756  8DCD
 757  8DCD 3A 66 8C     	ld a,(Permiso_de_disparo_Entidades)
 758  8DD0 A7           	and a
 759  8DD1 C4 63 8E     	call nz,Entidad_genera_disparo_si_procede
 760  8DD4
 761  8DD4 CD A1 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 762  8DD7
 763  8DD7              Gestiona_siguiente_entidad
 764  8DD7
 765  8DD7 CD 9F 91     	call Incrementa_punteros_de_cajas
 766  8DDA
 767  8DDA C1           	pop bc
 768  8DDB 10 85        	djnz 2B
 769  8DDD
 770  8DDD              ; Hemos gestionado todas las entidades.
 771  8DDD              ; ----- ----- -----
 772  8DDD
 773  8DDD CD A7 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 774  8DE0 CD BE 8F     	call Ordena_tabla_de_impresion
 775  8DE3 CD 3F 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 776  8DE6
 777  8DE6 CD 64 8F     	call Borra_diferencia
 778  8DE9
 779  8DE9 3A 74 8C     	ld a,(Ctrl_3)
 780  8DEC CB 5F        	bit 3,a
 781  8DEE 20 04        	jr nz,Gestion_de_Amadeus
 782  8DF0
 783  8DF0 EB           	ex de,hl
 784  8DF1 71           	ld (hl),c
 785  8DF2 2C           	inc l
 786  8DF3 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 787  8DF4
 788  8DF4              ;! GESTIONA AMADEUS !!!!!!!!!!
 789  8DF4
 790  8DF4              Gestion_de_Amadeus
 791  8DF4
 792  8DF4 21 74 8C     	ld hl,Ctrl_3
 793  8DF7 CB 76        	bit 6,(hl)
 794  8DF9 28 13        	jr z,Amadeus_vivo
 795  8DFB
 796  8DFB              ; Amadeus ha sido destruido.
 797  8DFB              ; Decrementa (Temp_new_live).
 798  8DFB
 799  8DFB 21 88 8C     	ld hl,Temp_new_live
 800  8DFE 35           	dec (hl)
 801  8DFF 20 26        	jr nz,End_frame
 802  8E01
 803  8E01              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 804  8E01
 805  8E01 21 A0 8C     	ld hl,Lives
 806  8E04 35           	dec (hl)
 807  8E05
 808  8E05              ;! Fin del juego
 809  8E05
 810  8E05 F3           	di
 811  8E06 28 FE        	jr z,$														;! GAME OVER !!!!!
 812  8E08 FB           	ei
 813  8E09
 814  8E09              ; Nueva nave.
 815  8E09
 816  8E09 CD 80 8E     	call Reinicia_Amadeus
 817  8E0C 18 19        	jr End_frame
 818  8E0E
 819  8E0E              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 820  8E0E
 821  8E0E              Amadeus_vivo
 822  8E0E
 823  8E0E 3A B2 89     	ld a,(Impacto_Amadeus)
 824  8E11 A7           	and a
 825  8E12 C4 1A 93     	call nz, Genera_explosion_Amadeus
 826  8E15 20 10        	jr nz, End_frame
 827  8E17
 828  8E17 CD 87 92     	call Teclado
 829  8E1A 21 74 8C     	ld hl,Ctrl_3
 830  8E1D
 831  8E1D CB 6E        	bit 5,(hl)
 832  8E1F 28 06        	jr z,End_frame
 833  8E21
 834  8E21              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 835  8E21
 836  8E21 CD FD 8E     	call Change_Amadeus
 837  8E24 CD E4 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 838  8E27
 839  8E27              End_frame
 840  8E27
 841  8E27              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 842  8E27              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 843  8E27
 844  8E27 CD 48 A1     	call Genera_datos_de_impresion_disparos_Entidades
 845  8E2A CD 0C A3     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 846  8E2D CD 62 A2     	call Calcula_bytes_pintado_disparos
 847  8E30 CD 6F A2     	call Limpia_album_de_pintado_disparos_entidades
 848  8E33
 849  8E33              ; ------------ ------------- --------------
 850  8E33
 851  8E33 2A 52 8C     	ld hl,(Album_de_borrado)
 852  8E36 22 6E 8C     	ld (Scanlines_album_SP),hl
 853  8E39
 854  8E39 21 74 8C     	ld hl,Ctrl_3
 855  8E3C CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8E3E CB 9E        	res 3,(hl)
 857  8E40 CB A6        	res 4,(hl)
 858  8E42
 859  8E42 21 75 8C     	ld hl,Ctrl_4
 860  8E45 CB 86        	res 0,(hl)
 861  8E47
 862  8E47 AF           	xor a
 863  8E48 D3 FE        	out ($fe),a
 864  8E4A
 865  8E4A 76           	halt
 866  8E4B
 867  8E4B C3 0C 8D     	jp Main
 868  8E4E
 869  8E4E              ;------------------------------------------
 870  8E4E              ;
 871  8E4E              ;	07/11/24
 872  8E4E
 873  8E4E              Autoriza_disparo_de_entidades
 874  8E4E
 875  8E4E 3E 01        	ld a,1
 876  8E50 32 66 8C     	ld (Permiso_de_disparo_Entidades),a
 877  8E53
 878  8E53 3A 90 8C     	ld a,(Repone_CLOCK_disparos)
 879  8E56 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 880  8E58 38 02        	jr c,1F
 881  8E5A
 882  8E5A              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 883  8E5A              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 884  8E5A              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 885  8E5A
 886  8E5A D6 04        	sub 4								; Aumenta la cadencia del disparo.
 887  8E5C
 888  8E5C 32 90 8C     1 ld (Repone_CLOCK_disparos),a
 889  8E5F 32 91 8C     	ld (CLOCK_disparos_de_entidades),a
 890  8E62
 891  8E62 C9           	ret
 892  8E63
 893  8E63              ;------------------------------------------
 894  8E63              ;
 895  8E63              ;	14/09/24
 896  8E63              ;
 897  8E63              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 898  8E63
 899  8E63              Entidad_genera_disparo_si_procede
 900  8E63
 901  8E63 2A 8B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 902  8E66 CB 06        	rlc (hl)
 903  8E68
 904  8E68 DC 98 A1     	call c,Genera_disparo_de_entidad_maldosa
 905  8E6B
 906  8E6B C9           	ret
 907  8E6C
 908  8E6C              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 909  8E6C              ;
 910  8E6C              ;	30/09/24
 911  8E6C
 912  8E6C              Actuaiza_sp_de_disparos_de_entidades
 913  8E6C
 914  8E6C 2A 8B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 915  8E6F 23           	inc hl
 916  8E70 22 8B 8C     	ld (Puntero_num_aleatorios_disparos),hl
 917  8E73
 918  8E73 11 FD 88     	ld de,Numeros_aleatorios+7
 919  8E76 7B           	ld a,e
 920  8E77 95           	sub l
 921  8E78 C0           	ret nz
 922  8E79
 923  8E79 21 F6 88     1 ld hl,Numeros_aleatorios
 924  8E7C 22 8B 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 925  8E7F C9           	ret
 926  8E80
 927  8E80              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 928  8E80              ;
 929  8E80              ;	24/07/24
 930  8E80
 931  8E80              Reinicia_Amadeus
 932  8E80
 933  8E80              ;	Reinicia posición y estado.
 934  8E80
 935  8E80 21 CF 50     	ld hl,$50cf
 936  8E83 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 937  8E86 21 CC DC     	ld hl,$dccc
 938  8E89 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 939  8E8C 21 3D 00     	ld hl,$003d
 940  8E8F 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 941  8E92
 942  8E92              ;	limpiamos el álbum de borrado.
 943  8E92
 944  8E92 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
 945  8E95
 946  8E95 AF           	xor a
 947  8E96 77           	ld (hl),a
 948  8E97
 949  8E97 E5           	push hl
 950  8E98 D1           	pop de
 951  8E99 13           	inc de
 952  8E9A
 953  8E9A 01 23 00     	ld bc,35
 954  8E9D ED B0        	ldir
 955  8E9F
 956  8E9F CD E4 90     	call Genera_datos_de_impresion_Amadeus
 957  8EA2
 958  8EA2              ;	Reinicia temporizaciones.
 959  8EA2
 960  8EA2 CD BF 91     	call Inicia_Shield
 961  8EA5
 962  8EA5 3E 5A        	ld a,90
 963  8EA7 32 9D 8C     	ld (Shield),a
 964  8EAA
 965  8EAA 3E 64        	ld a,100
 966  8EAC 32 88 8C     	ld (Temp_new_live),a
 967  8EAF
 968  8EAF              ; 	Restauramos el FLAG: Amadeus vivo.
 969  8EAF
 970  8EAF 21 74 8C     	ld hl,Ctrl_3
 971  8EB2 CB B6        	res 6,(hl)
 972  8EB4
 973  8EB4              ;	Fuerza la impresión de la nave en el siguiente frame.
 974  8EB4
 975  8EB4 21 74 8C      	ld hl,Ctrl_3
 976  8EB7 CB EE        	set 5,(hl)
 977  8EB9
 978  8EB9 C9           	ret
 979  8EBA
 980  8EBA              ; --------------------------------------------------------------------------------------------------------------
 981  8EBA              ;
 982  8EBA              ;	23/11/24
 983  8EBA
 984  8EBA              Ajusta_velocidad_entidad
 985  8EBA
 986  8EBA DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 987  8EBD A7           	and a
 988  8EBE C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 989  8EBF              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 990  8EBF              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 991  8EBF
 992  8EBF
 993  8EBF              ; Incrementa (Contador_de_vueltas)x2.
 994  8EBF              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 995  8EBF
 996  8EBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 997  8EBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 998  8EBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 999  8EBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1000  8EBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1001  8EBF
1002  8EBF
1003  8EBF CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1004  8EC1 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1005  8EC4 E6 10        	and $10
1006  8EC6 C8           	ret z
1007  8EC7
1008  8EC7              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1009  8EC7
1010  8EC7 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1011  8ECA CB 2F        	sra a
1012  8ECC CB 2F        	sra a
1013  8ECE DD 77 0B     	ld (ix+11),a
1014  8ED1
1015  8ED1 DD 6E 07     	ld l,(ix+7)
1016  8ED4 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1017  8ED7
1018  8ED7              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1019  8ED7 23           	inc hl
1020  8ED8 23           	inc hl
1021  8ED9 23           	inc hl
1022  8EDA 23           	inc hl
1023  8EDB              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1024  8EDB
1025  8EDB DD 75 07     	ld (ix+7),l
1026  8EDE DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1027  8EE1
1028  8EE1 C9           	ret
1029  8EE2
1030  8EE2              ; --------------------------------------------------------------------------------------------------------------
1031  8EE2              ;
1032  8EE2              ;	25/08/24
1033  8EE2
1034  8EE2              Change
1035  8EE2
1036  8EE2 3A 6B 8C     	ld a,(Switch)
1037  8EE5 EE 01        	xor 1
1038  8EE7 32 6B 8C     	ld (Switch),a
1039  8EEA 2A 50 8C     	ld hl,(Album_de_pintado)
1040  8EED ED 5B 52 8C  	ld de,(Album_de_borrado)
1041  8EF1 EB           	ex de,hl
1042  8EF2 22 50 8C     	ld (Album_de_pintado),hl
1043  8EF5 22 6E 8C     	ld (Scanlines_album_SP),hl
1044  8EF8 ED 53 52 8C  	ld (Album_de_borrado),de
1045  8EFC C9           	ret
1046  8EFD
1047  8EFD              Change_Amadeus
1048  8EFD
1049  8EFD 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
1050  8F00 ED 5B 56 8C  	ld de,(Album_de_borrado_Amadeus)
1051  8F04 EB           	ex de,hl
1052  8F05 22 54 8C     	ld (Album_de_pintado_Amadeus),hl
1053  8F08 ED 53 56 8C  	ld (Album_de_borrado_Amadeus),de
1054  8F0C C9           	ret
1055  8F0D
1056  8F0D              Change_Disparos
1057  8F0D
1058  8F0D              ; Álbumes de Amadeus.
1059  8F0D
1060  8F0D 2A 58 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1061  8F10 ED 5B 5A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1062  8F14 EB           	ex de,hl
1063  8F15 22 58 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1064  8F18 ED 53 5A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1065  8F1C CD 57 A2     	call Limpia_album_de_pintado_disparos_Amadeus
1066  8F1F
1067  8F1F              ; Álbumes de entidades.
1068  8F1F
1069  8F1F 2A 5C 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1070  8F22 ED 5B 5E 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1071  8F26 EB           	ex de,hl
1072  8F27 22 5C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1073  8F2A ED 53 5E 8C  	ld (Album_de_borrado_disparos_Entidades),de
1074  8F2E 22 60 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1075  8F31
1076  8F31 3A 62 8C     	ld a,(Num_de_bytes_album_de_disparos)
1077  8F34 32 63 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1078  8F37
1079  8F37 C9           	ret
1080  8F38
1081  8F38              ; ------------------------------------
1082  8F38              ;
1083  8F38              ; 1/05/24
1084  8F38
1085  8F38              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1086  8F38              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1087  8F38
1088  8F38              ;	DESTRUYE: HL,DE,A
1089  8F38              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1090  8F38
1091  8F38              ;	Variables implicadas: (RND_SP).
1092  8F38
1093  8F38              Extrae_numero_aleatorio_y_avanza
1094  8F38
1095  8F38 21 FD 88     	ld hl,Numeros_aleatorios+7
1096  8F3B EB           	ex de,hl
1097  8F3C 2A 89 8C     	ld hl,(RND_SP)
1098  8F3F
1099  8F3F 7B           	ld a,e
1100  8F40 95           	sub l
1101  8F41 20 06        	jr nz,1F
1102  8F43
1103  8F43              ; Sitúa HL al principio de la tabla de nº aleatorios.
1104  8F43
1105  8F43 21 F6 88     	ld hl,Numeros_aleatorios
1106  8F46 22 89 8C     	ld (RND_SP),HL
1107  8F49
1108  8F49              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1109  8F49
1110  8F49 7E           1 ld a,(hl)
1111  8F4A 23           	inc hl
1112  8F4B 22 89 8C     	ld (RND_SP),hl
1113  8F4E C9           	ret
1114  8F4F
1115  8F4F              ; ------------------------------------
1116  8F4F              ;
1117  8F4F              ; 1/05/24
1118  8F4F
1119  8F4F              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1120  8F4F              ; (1 a 4 segundos).
1121  8F4F              ; Actualizamos (Clock_next_entity) con A.
1122  8F4F
1123  8F4F              ;	DESTRUYE: A y B.
1124  8F4F              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1125  8F4F              ;			 Actualiza (Clock_next_entity) con A.
1126  8F4F
1127  8F4F              ;	Variables implicadas: (Clock_next_entity).
1128  8F4F
1129  8F4F              ; Notas:
1130  8F4F
1131  8F4F              ; 	$32 1 seg.
1132  8F4F              ; 	$64 2 seg.
1133  8F4F              ; 	$96 3 seg.
1134  8F4F              ; 	$c8 4 seg.
1135  8F4F              ; 	$fa 5 seg.
1136  8F4F
1137  8F4F              ; $ffff 1310,7 seg, 22 minutos.
1138  8F4F
1139  8F4F              ;	$0100  5 seg. aproximadamente.
1140  8F4F              ;	$0200 10 seg. aproximadamente.
1141  8F4F              ;	$0300 15 seg. aproximadamente.
1142  8F4F              ;	$0400 20 seg. aproximadamente.
1143  8F4F              ;	$0500 25 seg. aproximadamente.
1144  8F4F              ;	$0600 30 seg. aproximadamente.
1145  8F4F
1146  8F4F              Define_Clock_next_entity
1147  8F4F
1148  8F4F FE 34        	cp $34
1149  8F51 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1150  8F53
1151  8F53              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1152  8F53
1153  8F53 4F           3 ld c,a
1154  8F54 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1155  8F56 2A 78 5C     	ld hl,(FRAMES)
1156  8F59 A7           	and a
1157  8F5A ED 4A        	adc hl,bc
1158  8F5C 22 8E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1159  8F5F C9           	ret
1160  8F60
1161  8F60 3E 34        1 ld a,$34
1162  8F62 18 EF        	jr 3B
1163  8F64
1164  8F64              ; ------------------------------------
1165  8F64              ;
1166  8F64              ; 18/03/24
1167  8F64
1168  8F64              Borra_diferencia
1169  8F64
1170  8F64 ED 4B 6E 8C  	ld bc,(Scanlines_album_SP)
1171  8F68
1172  8F68 3A 6B 8C     	ld a,(Switch)
1173  8F6B A7           	and a
1174  8F6C 28 08        	jr z,2F
1175  8F6E
1176  8F6E 2A 69 8C     	ld hl,(Techo_Scanlines_album_2)
1177  8F71 11 69 8C     	ld de,Techo_Scanlines_album_2
1178  8F74 18 06        	jr 3F
1179  8F76
1180  8F76 2A 67 8C     2 ld hl,(Techo_Scanlines_album)
1181  8F79 11 67 8C     	ld de,Techo_Scanlines_album
1182  8F7C
1183  8F7C              ; Diferencia.
1184  8F7C
1185  8F7C ED 42        3 sbc hl,bc
1186  8F7E
1187  8F7E C8           	ret z
1188  8F7F D8           	ret c
1189  8F80
1190  8F80              ; Nuevo techo, (más bajo que el anterior).
1191  8F80              ; Fijamos nuevo techo y borramos bytes sobrantes.
1192  8F80
1193  8F80 EB           	ex de,hl
1194  8F81
1195  8F81 71           	ld (hl),c
1196  8F82 2C           	inc l
1197  8F83 70           	ld (hl),b
1198  8F84
1199  8F84 AF           	xor a
1200  8F85 43           	ld b,e
1201  8F86
1202  8F86 2A 6E 8C     	ld hl,(Scanlines_album_SP)
1203  8F89
1204  8F89 77           1 ld (hl),a
1205  8F8A 23           	inc hl
1206  8F8B 10 FC        	djnz 1B
1207  8F8D
1208  8F8D              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1209  8F8D
1210  8F8D 21 74 8C     	ld hl,Ctrl_3
1211  8F90 CB DE        	set 3,(hl)
1212  8F92
1213  8F92 C9           	ret
1214  8F93
1215  8F93              ; --------------------------------------------------------------------------------------------------------------
1216  8F93              ;
1217  8F93              ;	23/11/24
1218  8F93              ;
1219  8F93              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1220  8F93
1221  8F93              Entidad_a_Tabla_de_pintado
1222  8F93
1223  8F93              ; Almacena la Coordenada Y de la entidad en curso.
1224  8F93
1225  8F93              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1226  8F93
1227  8F93 DD 7E 02     	ld a,(ix+2)
1228  8F96 2A 70 8C     	ld hl,(India_SP)
1229  8F99 77           	ld (hl),a
1230  8F9A 2C           	inc l
1231  8F9B
1232  8F9B              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1233  8F9B
1234  8F9B ED 5B 6E 8C  	ld de,(Scanlines_album_SP)
1235  8F9F
1236  8F9F 73           	ld (hl),e
1237  8FA0 2C           	inc l
1238  8FA1 72           	ld (hl),d
1239  8FA2 2C           	inc l
1240  8FA3
1241  8FA3 22 70 8C     	ld (India_SP),hl
1242  8FA6
1243  8FA6 C9           	ret
1244  8FA7
1245  8FA7              ; --------------------------------------------------------------------------------------------------------------
1246  8FA7              ;
1247  8FA7              ;	27/03/24
1248  8FA7              ;
1249  8FA7
1250  8FA7              Inicializa_India_y_limpia_Tabla_de_impresion
1251  8FA7
1252  8FA7 2A 70 8C     	ld hl,(India_SP)
1253  8FAA 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1254  8FAD
1255  8FAD 79           	ld a,c
1256  8FAE 95           	sub l
1257  8FAF 28 06        	jr z,2F
1258  8FB1 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1259  8FB2              ;														; _ y pasamos a inicializar (India_SP).
1260  8FB2 AF           	xor a
1261  8FB3
1262  8FB3 77           1 ld (hl),a
1263  8FB4 2C           	inc l
1264  8FB5 10 FC        	djnz 1B												; Limpia Tabla.
1265  8FB7
1266  8FB7 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1267  8FBA 22 70 8C     	ld (India_SP),hl
1268  8FBD
1269  8FBD C9           	ret
1270  8FBE
1271  8FBE              ; --------------------------------------------------------------------------------------------------------------
1272  8FBE              ;
1273  8FBE              ;	31/3/24
1274  8FBE
1275  8FBE              Ordena_tabla_de_impresion
1276  8FBE
1277  8FBE              ; 5794 T/states.
1278  8FBE              ; 6278 T/states.
1279  8FBE              ; 5310 T/states.
1280  8FBE
1281  8FBE              ; Inicializamos punteros (India_SP) e (India_2_SP).
1282  8FBE              ; Inicializamos contador de comparaciones, [C].
1283  8FBE              ; Cargamos los registros A y B para efectuar comparación.
1284  8FBE
1285  8FBE FD 2E 00     	ld iyl,0
1286  8FC1
1287  8FC1 3A 47 8C     	ld a,(Entidades_en_curso)
1288  8FC4 FE 04        	cp 4 	;	4
1289  8FC6 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1290  8FC7
1291  8FC7 3D           	dec a
1292  8FC8 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1293  8FC9 51           	ld d,c 										; Copia de respaldo.
1294  8FCA
1295  8FCA 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1296  8FCB
1297  8FCB 21 03 89     	ld hl,Tabla_de_pintado+3
1298  8FCE 46           	ld b,(hl)
1299  8FCF 22 72 8C     	ld (India_2_SP),hl
1300  8FD2
1301  8FD2 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1302  8FD3 DC FB 8F     	call c, Avanza_India_2_SP
1303  8FD6 CC FB 8F     	call z, Avanza_India_2_SP
1304  8FD9
1305  8FD9 FD 2D        	dec iyl
1306  8FDB 28 18        	jr z,2F
1307  8FDD
1308  8FDD
1309  8FDD              ; --------------------------------------------------------------------------------------------------------------
1310  8FDD              ;
1311  8FDD              ;	7/4/24
1312  8FDD
1313  8FDD              Trueque
1314  8FDD
1315  8FDD              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1316  8FDD              ;  			A contiene en nº de fila de (India_SP).
1317  8FDD              ;			HL contiene (India_2_SP).
1318  8FDD
1319  8FDD D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1320  8FDE E5           	push hl										; Preservo (India_2_SP).
1321  8FDF
1322  8FDF ED 5B 70 8C  	ld de,(India_SP)
1323  8FE3 EB           	ex de,hl
1324  8FE4 70           	ld (hl),b
1325  8FE5 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1326  8FE6
1327  8FE6 CD 27 90     	call Intercambia_1_byte
1328  8FE9 CD 27 90     	call Intercambia_1_byte
1329  8FEC
1330  8FEC
1331  8FEC              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1332  8FEC              ; Recuperamos (India_2_SP) en HL.
1333  8FEC
1334  8FEC 2A 70 8C     	ld hl,(India_SP)
1335  8FEF 7E           	ld a,(hl)
1336  8FF0
1337  8FF0 E1           	pop hl
1338  8FF1 D1           	pop de
1339  8FF2
1340  8FF2              ; --------------------------------------------------------------------------------------------------------------
1341  8FF2
1342  8FF2 CD FB 8F     	call Avanza_India_2_SP
1343  8FF5
1344  8FF5 14           2 inc d
1345  8FF6 15           	dec d
1346  8FF7 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1347  8FF8 18 D8        	jr 1B
1348  8FFA
1349  8FFA C9           	ret
1350  8FFB
1351  8FFB              ; ----- ----- ----- ----- -----
1352  8FFB
1353  8FFB              Avanza_India_2_SP
1354  8FFB
1355  8FFB 0D           	dec c
1356  8FFC 28 0A        	jr z,Avanza_punteros_indios
1357  8FFE
1358  8FFE FD 2C        	inc iyl
1359  9000
1360  9000 2C           	inc l
1361  9001 2C           	inc l
1362  9002 2C           	inc l
1363  9003
1364  9003 46           	ld b,(hl)
1365  9004 22 72 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1366  9007
1367  9007 C9           	ret
1368  9008
1369  9008              ; ----- ----- ----- ----- -----
1370  9008
1371  9008              Avanza_punteros_indios
1372  9008
1373  9008 15           	dec d
1374  9009 28 15        	jr z,Prepara_salida
1375  900B
1376  900B 4A           	ld c,d
1377  900C
1378  900C 2A 70 8C     	ld hl,(India_SP)
1379  900F 2C           	inc l
1380  9010 2C           	inc l
1381  9011 2C           	inc l
1382  9012 7E           	ld a,(hl)
1383  9013 22 70 8C     	ld (India_SP),hl
1384  9016
1385  9016 2C           	inc l
1386  9017 2C           	inc l
1387  9018 2C           	inc l
1388  9019 46           	ld b,(hl)
1389  901A 22 72 8C     	ld (India_2_SP),hl
1390  901D
1391  901D FD 2C        	inc iyl
1392  901F
1393  901F C9           	ret
1394  9020
1395  9020              Prepara_salida
1396  9020
1397  9020 21 00 89     	ld hl,Tabla_de_pintado
1398  9023 22 70 8C     	ld (India_SP),hl
1399  9026 C9           	ret
1400  9027
1401  9027
1402  9027 2C           Intercambia_1_byte inc l
1403  9028 1C           	inc e
1404  9029 46           	ld b,(hl)
1405  902A 1A           	ld a,(de)
1406  902B EB           	ex de,hl
1407  902C 70           	ld (hl),b
1408  902D 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1409  902E C9           	ret
1410  902F
1411  902F              ; -----------------------------------------------------------------------------------
1412  902F              ;
1413  902F              ;	20/01/24
1414  902F              ;
1415  902F              ;
1416  902F
1417  902F              Construye_movimientos_masticados_entidad
1418  902F
1419  902F 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1420  9032 E5           	push hl
1421  9033 CD 76 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1422  9036              ;															; _ el (Contador_de_mov_masticados).
1423  9036 CD 5B 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1424  9039              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1425  9039 CD 7D 9A     	call Recompone_posicion_inicio
1426  903C
1427  903C CD AD 97     1 call Draw
1428  903F CD 5B 90     	call Guarda_movimiento_masticado
1429  9042
1430  9042 CD 2A 9E     	call Movimiento
1431  9045
1432  9045 3A 74 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1433  9048 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1434  904A 28 F0        	jr z,1B
1435  904C
1436  904C              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1437  904C              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1438  904C
1439  904C E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1440  904D 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1441  9050
1442  9050              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1443  9050
1444  9050 CD 8E 9F     	call Situa_en_contador_general_de_mov_masticados
1445  9053
1446  9053              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1447  9053              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1448  9053
1449  9053 ED 4B 06 8C  	ld bc,(Contador_de_mov_masticados)
1450  9057
1451  9057 71           	ld (hl),c
1452  9058 23           	inc hl
1453  9059 70           	ld (hl),b
1454  905A
1455  905A C9           	ret
1456  905B
1457  905B              ; -----------------------------------------------------------------------------------
1458  905B              ;
1459  905B              ;	28/12/23
1460  905B              ;
1461  905B              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1462  905B              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1463  905B
1464  905B              Guarda_movimiento_masticado
1465  905B
1466  905B ED 73 4C 8C  	ld (Stack),sp
1467  905F ED 7B 04 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1468  9063
1469  9063 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1470  9065 FD E5            push iy 												; Pushea Puntero_objeto.
1471  9067
1472  9067 ED 7B 4C 8C      ld sp,(Stack)
1473  906B
1474  906B 2A 06 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1475  906E 23           	inc hl
1476  906F 22 06 8C     	ld (Contador_de_mov_masticados),hl
1477  9072
1478  9072 CD 76 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1479  9075              ;															; _ el (Contador_de_mov_masticados).
1480  9075 C9               ret
1481  9076
1482  9076              ; --------------------------------------------------------------------------------------------------------------
1483  9076              ;
1484  9076              ;	12/1/24
1485  9076              ;
1486  9076              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1487  9076
1488  9076              Actualiza_Puntero_de_almacen_de_mov_masticados
1489  9076
1490  9076 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1491  9079 01 04 00     	ld bc,4
1492  907C A7           	and a
1493  907D ED 4A        	adc hl,bc
1494  907F 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1495  9082 C9           	ret
1496  9083
1497  9083              ; ------------------------------------------
1498  9083              ;
1499  9083              ;	23/11/24
1500  9083              ;
1501  9083              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1502  9083
1503  9083
1504  9083              Obtenemos_puntero_de_impresion
1505  9083
1506  9083 DD 6E 07     	ld l,(ix+7)
1507  9086 DD 66 08     	ld h,(ix+8)
1508  9089
1509  9089              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1510  9089
1511  9089 ED 73 4C 8C  	ld (Stack),sp
1512  908D F9           	ld sp,hl
1513  908E
1514  908E AF           	xor a
1515  908F 67           	ld h,a
1516  9090 6C           	ld l,h															; ld hl,"0"
1517  9091
1518  9091 D1           	pop de															; (Puntero_objeto) en DE.
1519  9092 C1           	pop bc
1520  9093
1521  9093              ; 	Almacena (Puntero_de_impresion) en caja.
1522  9093
1523  9093 DD 71 05     	ld (ix+5),c
1524  9096 DD 70 06     	ld (ix+6),b
1525  9099
1526  9099 ED 43 02 8C  	ld (Puntero_de_impresion),bc
1527  909D
1528  909D              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1529  909D
1530  909D 39           	add hl,sp
1531  909E DD 75 07     	ld (ix+7),l
1532  90A1 DD 74 08     	ld (ix+8),h
1533  90A4
1534  90A4 C1           	pop bc
1535  90A5
1536  90A5 79           	ld a,c
1537  90A6 80           	add b															; Comprueba si ya no hay datos en el almacén.
1538  90A7
1539  90A7 ED 7B 4C 8C  	ld sp,(Stack)
1540  90AB
1541  90AB CC AA 94     	call z,Reinicia_entidad_maliciosa
1542  90AE
1543  90AE C9           	ret
1544  90AF
1545  90AF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1546  90AF              ;
1547  90AF              ;	25/11/24
1548  90AF
1549  90AF              Cargamos_registros_con_explosion
1550  90AF
1551  90AF DD 6E 07     	ld l,(ix+7)
1552  90B2 DD 66 08     	ld h,(ix+8)
1553  90B5 CD 55 91     	call Extrae_address
1554  90B8 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1555  90B9
1556  90B9 DD 6E 05     	ld l,(ix+5)
1557  90BC DD 66 06     	ld h,(ix+6)
1558  90BF
1559  90BF E5           	push hl
1560  90C0 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1561  90C2
1562  90C2 C9           	ret
1563  90C3
1564  90C3
1565  90C3              Cargamos_registros_con_explosion_Amadeus
1566  90C3
1567  90C3 2A B5 89     	ld hl,(Pamm_Amadeus)
1568  90C6 CD 55 91     	call Extrae_address
1569  90C9
1570  90C9 5D           	ld e,l
1571  90CA 54           	ld d,h
1572  90CB
1573  90CB DD 2A B3 89  	ld ix,(p.imp.amadeus)
1574  90CF
1575  90CF C9           	ret
1576  90D0
1577  90D0              ; --------------------------------------------------------------------------------------------------------------
1578  90D0              ;
1579  90D0              ;	17/06/24
1580  90D0              ;
1581  90D0              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1582  90D0              ;
1583  90D0              ;	IX contiene el puntero de impresión.
1584  90D0              ;	DE contiene (Puntero_objeto).
1585  90D0
1586  90D0
1587  90D0              Cargamos_registros_con_mov_masticado_Amadeus
1588  90D0
1589  90D0 ED 73 4C 8C  	ld (Stack),sp
1590  90D4 ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1591  90D8 D1           	pop de 															; DE contiene Puntero_objeto
1592  90D9 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1593  90DB DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1594  90DF ED 7B 4C 8C  	ld sp,(Stack)
1595  90E3 C9           	ret
1596  90E4
1597  90E4              ; ---------------------------------------------------------------------------------------------------------------------
1598  90E4              ;
1599  90E4              ;	18/6/24
1600  90E4              ;
1601  90E4              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1602  90E4
1603  90E4              Genera_datos_de_impresion_Amadeus
1604  90E4
1605  90E4 3A B2 89     	ld a,(Impacto_Amadeus)
1606  90E7 A7           	and a
1607  90E8 20 03        	jr nz,1F
1608  90EA
1609  90EA              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1610  90EA              ; _apuntando a la correspondiente explosión.
1611  90EA
1612  90EA CD D0 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1613  90ED
1614  90ED DD 7D        1 ld a,ixl
1615  90EF E6 1F        	and $1f
1616  90F1 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1617  90F4
1618  90F4 2A 6E 8C     	ld hl,(Scanlines_album_SP)
1619  90F7 E5           	push hl
1620  90F8
1621  90F8 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
1622  90FB 22 6E 8C     	ld (Scanlines_album_SP),hl
1623  90FE
1624  90FE CD 96 95     	call Genera_datos_de_impresion
1625  9101
1626  9101 E1           	pop hl
1627  9102 22 6E 8C     	ld (Scanlines_album_SP),hl
1628  9105
1629  9105 C9           	ret
1630  9106
1631  9106              ; ---------------------------------------------------------------------------------------------------------------------
1632  9106              ;
1633  9106              ;	13/03/24
1634  9106              ;
1635  9106              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1636  9106
1637  9106              Inicia_albumes_de_lineas
1638  9106
1639  9106 21 00 80     	ld hl,Scanlines_album
1640  9109 22 50 8C     	ld (Album_de_pintado),hl
1641  910C 22 6E 8C     	ld (Scanlines_album_SP),hl
1642  910F
1643  910F 21 1A 81     	ld hl,Scanlines_album_2
1644  9112 22 52 8C     	ld (Album_de_borrado),hl
1645  9115
1646  9115 C9           	ret
1647  9116
1648  9116              Inicia_albumes_de_lineas_Amadeus
1649  9116
1650  9116 21 34 82     	ld hl,Amadeus_scanlines_album
1651  9119 22 54 8C     	ld (Album_de_pintado_Amadeus),hl
1652  911C 21 58 82     	ld hl,Amadeus_scanlines_album_2
1653  911F 22 56 8C     	ld (Album_de_borrado_Amadeus),hl
1654  9122
1655  9122 C9           	ret
1656  9123
1657  9123              Inicia_albumes_de_disparos
1658  9123
1659  9123 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1660  9126 22 58 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1661  9129 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1662  912C 22 5A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1663  912F
1664  912F 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1665  9132 22 5C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1666  9135 22 60 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1667  9138
1668  9138 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1669  913B 22 5E 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1670  913E
1671  913E C9           	ret
1672  913F
1673  913F              ; ---------------------------------------------------------------------------------------------------------------------
1674  913F              ;
1675  913F              ; 8/1/23
1676  913F              ;
1677  913F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1678  913F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1679  913F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1680  913F
1681  913F              ; Destruye HL y DE !!!!!
1682  913F
1683  913F              Inicia_punteros_de_cajas
1684  913F
1685  913F 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1686  9142 CD 55 91         call Extrae_address
1687  9145 22 3D 8C         ld (Puntero_store_caja),hl
1688  9148 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1689  914B 22 41 8C     	ld (Indice_restore_caja),hl
1690  914E CD 55 91     	call Extrae_address
1691  9151 22 3F 8C     	ld (Puntero_restore_caja),hl
1692  9154 C9               ret
1693  9155
1694  9155              ; *************************************************************************************************************************************************************
1695  9155
1696  9155              ;
1697  9155              ; 20/10/22
1698  9155              ;
1699  9155              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1700  9155              ;
1701  9155              ; Destruye el puntero y DE !!!!!
1702  9155
1703  9155 5E           Extrae_address ld e,(hl)
1704  9156 23           	inc hl
1705  9157 56           	ld d,(hl)
1706  9158 2B           	dec hl
1707  9159 EB           	ex de,hl
1708  915A C9           	ret
1709  915B
1710  915B              ; *************************************************************************************************************************************************************
1711  915B              ;
1712  915B              ;	20/1/24
1713  915B              ;
1714  915B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1715  915B              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1716  915B              ;
1717  915B              ;   Destruye HL y BC !!!!!,
1718  915B              ;
1719  915B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1720  915B              ;					"0" ..... Izquierda.
1721  915B
1722  915B              Inicia_Puntero_objeto
1723  915B
1724  915B 3A 1C 8C     	ld a,(Cuad_objeto)
1725  915E E6 01        	and 1
1726  9160 F5           	push af
1727  9161 CC 7D 91     	call z,Inicia_puntero_objeto_izq
1728  9164 F1           	pop af
1729  9165 C8           	ret z
1730  9166 CD 6A 91     	call Inicia_puntero_objeto_der
1731  9169 C9           	ret
1732  916A
1733  916A              ; Arrancamos desde la parte izquierda de la pantalla.
1734  916A              ; Iniciamos (Indice_Sprite_der).
1735  916A
1736  916A 2A 12 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1737  916D 22 16 8C     	ld (Puntero_DESPLZ_der),hl
1738  9170 CD 55 91     	call Extrae_address
1739  9173 22 0F 8C     	ld (Puntero_objeto),hl
1740  9176
1741  9176 2A 14 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1742  9179 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
1743  917C C9           	ret
1744  917D
1745  917D              ; Arrancamos desde la parte derecha de la pantalla.
1746  917D              ; Iniciamos (Indice_Sprite_izq).
1747  917D
1748  917D 2A 14 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1749  9180 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
1750  9183 CD 55 91     	call Extrae_address
1751  9186 22 0F 8C     	ld (Puntero_objeto),hl
1752  9189
1753  9189 2A 12 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1754  918C 22 16 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1755  918F C9           	ret
1756  9190
1757  9190              ; **************************************************************************************************
1758  9190              ;
1759  9190              ;	27/11/24
1760  9190              ;
1761  9190              ;	INPUT: IX contiene (Puntero_store_caja).
1762  9190              ;
1763  9190              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1764  9190
1765  9190              Salta_caja_de_entidades_vacia
1766  9190
1767  9190 DD 7E 00     	ld a,(ix+0)
1768  9193 A7           	and a
1769  9194 C0           	ret nz
1770  9195
1771  9195 CD 9F 91     	call Incrementa_punteros_de_cajas
1772  9198 DD 2A 3D 8C  	ld ix,(Puntero_store_caja)
1773  919C 18 F2        	jr Salta_caja_de_entidades_vacia
1774  919E
1775  919E C9           	ret
1776  919F
1777  919F              ; **************************************************************************************************
1778  919F              ;
1779  919F              ;	08/05/23
1780  919F              ;
1781  919F              ;	Incrementamos los dos punteros de entidades. (+1).
1782  919F
1783  919F              Incrementa_punteros_de_cajas
1784  919F
1785  919F 2A 3F 8C     	ld hl,(Puntero_restore_caja)
1786  91A2 22 3D 8C     	ld (Puntero_store_caja),hl
1787  91A5 2A 41 8C     	ld hl,(Indice_restore_caja)
1788  91A8 23           	inc hl
1789  91A9 23           	inc hl
1790  91AA 22 41 8C     	ld (Indice_restore_caja),hl
1791  91AD CD 55 91         call Extrae_address
1792  91B0 22 3F 8C         ld (Puntero_restore_caja),hl
1793  91B3 C9               ret
1794  91B4
1795  91B4              ; -----------------------------------------------------------
1796  91B4
1797  91B4              ; Teclado.
1798  91B4
1799  91B4 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1800  91B6 DB FE        	in a,($fe)
1801  91B8 E6 01        	and $01
1802  91BA 28 02        	jr z,1f
1803  91BC 18 F6        	jr Pulsa_ENTER
1804  91BE C9           1 ret
1805  91BF
1806  91BF              ; **************************************************************************************************
1807  91BF              ;
1808  91BF              ; Temporización.
1809  91BF
1810  91BF              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1811  91BF              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1812  91BF              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1813  91BF              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1814  91BF
1815  91BF              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1816  91BF              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1817  91BF              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1818  91BF
1819  91BF              ; A partir de $4f61 no hace falta DELAY.
1820  91BF
1821  91BF              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1822  91BF
1823  91BF              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1824  91BF              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1825  91BF              ;	LD A,B
1826  91BF              ;	AND A
1827  91BF              ;	JR NZ,wait
1828  91BF              ;	RET
1829  91BF
1830  91BF              ; ---------------------------------------------------------------------------------------------------------------
1831  91BF              ;
1832  91BF              ;	13/07/24
1833  91BF              ;
1834  91BF
1835  91BF              Inicia_Shield
1836  91BF
1837  91BF 21 97 8C     	ld hl,Datos_Shield
1838  91C2 22 9B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1839  91C5
1840  91C5 7E           	ld a,(hl)
1841  91C6 32 9E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1842  91C9
1843  91C9 3E 01        	ld a,1
1844  91CB 32 9F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1845  91CE
1846  91CE C9           	ret
1847  91CF
1848  91CF              ; ---------- ---------- ---------- ---------- ----------
1849  91CF              ;
1850  91CF              ;	30/11/24
1851  91CF              ;
1852  91CF              ;	Limpia la caja de entidades de una entidad eliminada.
1853  91CF              ;
1854  91CF              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
1855  91CF              ;	MODIFY: A,BC,DE y HL.
1856  91CF
1857  91CF              Limpia_caja_de_entidades
1858  91CF
1859  91CF DD E5        	push ix
1860  91D1 E1           	pop hl
1861  91D2 AF           	xor a
1862  91D3 77           	ld (hl),a
1863  91D4 5D           	ld e,l
1864  91D5 54           	ld d,h
1865  91D6 1C           	inc e
1866  91D7 01 0B 00     	ld bc,11
1867  91DA ED B0        	ldir
1868  91DC C9           	ret
1869  91DD
1870  91DD              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1871  91DD              ;
1872  91DD              ;	4/6/24
1873  91DD              ;
1874  91DD              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1875  91DD              ;
1876  91DD              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1877  91DD              ;
1878  91DD
1879  91DD              Actualiza_pantalla
1880  91DD
1881  91DD 3E 02        	ld a,2
1882  91DF D3 FE        	out ($fe),a
1883  91E1
1884  91E1 3A 74 8C     	ld a,(Ctrl_3)
1885  91E4 CB 57        	bit 2,a
1886  91E6 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1887  91E8
1888  91E8              Borrando_entidades
1889  91E8
1890  91E8 2A 6E 8C     	ld hl,(Scanlines_album_SP)
1891  91EB CD 55 91     	call Extrae_address
1892  91EE 24           	inc h
1893  91EF 25           	dec h
1894  91F0 28 05        	jr z,Pintando_entidades
1895  91F2 CD 8A 96     	call Pinta_Sprites
1896  91F5 18 F1        	jr Borrando_entidades
1897  91F7
1898  91F7              Pintando_entidades
1899  91F7
1900  91F7 2A 70 8C     	ld hl,(India_SP)
1901  91FA 2C           	inc l
1902  91FB CD 55 91     	call Extrae_address
1903  91FE 24           	inc h
1904  91FF 25           	dec h
1905  9200 28 0E        	jr z,Ejecuta_escudo
1906  9202 1C           	inc e
1907  9203 1C           	inc e
1908  9204 ED 53 70 8C  	ld (India_SP),de
1909  9208 CD 55 91     	call Extrae_address
1910  920B CD 8A 96     	call Pinta_Sprites
1911  920E 18 E7        	jr Pintando_entidades
1912  9210
1913  9210              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1914  9210
1915  9210              Ejecuta_escudo
1916  9210
1917  9210 3A 9D 8C     	ld a,(Shield)
1918  9213 A7           	and a
1919  9214 20 2F        	jr nz,Aplica_Shield
1920  9216
1921  9216              Borrando_Amadeus
1922  9216
1923  9216 21 74 8C     	ld hl,Ctrl_3
1924  9219 CB 6E        	bit 5,(hl)
1925  921B 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1926  921D
1927  921D 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
1928  9220 CD 55 91     	call Extrae_address
1929  9223 24           	inc h
1930  9224 25           	dec h
1931  9225 28 03        	jr z,Pintando_Amadeus
1932  9227 CD 8A 96     	call Pinta_Sprites
1933  922A
1934  922A              Pintando_Amadeus
1935  922A
1936  922A 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
1937  922D CD 55 91     	call Extrae_address
1938  9230 24           	inc h
1939  9231 25           	dec h
1940  9232 28 03        	jr z,1F
1941  9234 CD 8A 96     	call Pinta_Sprites
1942  9237
1943  9237              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1944  9237
1945  9237 21 74 8C     1 ld hl,Ctrl_3
1946  923A CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1947  923C CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1948  923E CB AE        	res 5,(hl)
1949  9240
1950  9240 3E 01        	ld a,1												; Borde azul.
1951  9242 D3 FE        	out ($fe),a
1952  9244
1953  9244 C9           	ret
1954  9245
1955  9245              Aplica_Shield
1956  9245
1957  9245              ;	Bit 1 "1" (Shield_3) Sólo borra.
1958  9245              ;		  "0"     ""     Borra/Pinta.
1959  9245              ;	Bit 2    ""  RET.	 No borra, no pinta.
1960  9245
1961  9245 21 9F 8C     	ld hl,Shield_3
1962  9248
1963  9248 CB 5E        	bit 3,(hl)
1964  924A 20 DE        	jr nz,Pintando_Amadeus
1965  924C
1966  924C CB 56        	bit 2,(hl)
1967  924E 20 E7        	jr nz,1B
1968  9250
1969  9250 CB 4E        	bit 1,(hl)
1970  9252 C4 59 92     	call nz,Borra_Amadeus_shield
1971  9255
1972  9255 28 BF        	jr z,Borrando_Amadeus
1973  9257 18 DE        	jr 1B
1974  9259
1975  9259              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1976  9259
1977  9259              Borra_Amadeus_shield
1978  9259
1979  9259 3A 74 8C     	ld a,(Ctrl_3)
1980  925C CB 6F        	bit 5,a
1981  925E 28 08        	jr z,1F
1982  9260
1983  9260 2A 56 8C     	ld hl,(Album_de_borrado_Amadeus)
1984  9263 CD 55 91     	call Extrae_address
1985  9266 18 06        	jr 2F
1986  9268
1987  9268 2A 54 8C     1 ld hl,(Album_de_pintado_Amadeus)
1988  926B CD 55 91     	call Extrae_address
1989  926E
1990  926E CD 8A 96     2 call Pinta_Sprites
1991  9271
1992  9271 AF           	xor a
1993  9272 3C           	inc a											; Asegura NZ en la salida de la rutina.
1994  9273
1995  9273 C9           	ret
1996  9274
1997  9274              Pinta_Amadeus_shield
1998  9274
1999  9274 2A 54 8C     	ld hl,(Album_de_pintado_Amadeus)
2000  9277 CD 55 91     	call Extrae_address
2001  927A CD 8A 96     	call Pinta_Sprites
2002  927D
2003  927D AF           	xor a
2004  927E 3C           	inc a											; Asegura NZ en la salida de la rutina.
2005  927F
2006  927F C9           	ret
2007  9280
2008  9280              Borra_Pinta_Amadeus_shield
2009  9280
2010  9280 CD 59 92     	call Borra_Amadeus_shield
2011  9283 CD 74 92     	call Pinta_Amadeus_shield
2012  9286 C9           	ret
2013  9287
2014  9287              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2015  9287              ;
2016  9287              ;	19/6/24
2017  9287              ;
2018  9287
2019  9287              Teclado
2020  9287
2021  9287              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2022  9287
2023  9287 3E F7        	ld a,$f7												; "5" para disparar.
2024  9289 DB FE        	in a,($fe)
2025  928B E6 10        	and $10
2026  928D
2027  928D CC 2B A3     	call z,Genera_disparo_Amadeus
2028  9290
2029  9290 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2030  9292 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2031  9294 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2032  9296 CC F7 9D         call z,Amadeus_a_izquierda
2033  9299
2034  9299 3E F7        	ld a,$f7
2035  929B DB FE        	in a,($fe)
2036  929D E6 01        	and $01
2037  929F C8           	ret z
2038  92A0
2039  92A0 3E F7        	ld a,$f7
2040  92A2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2041  92A4 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2042  92A6 CC 0F 9E     	call z,Amadeus_a_derecha
2043  92A9
2044  92A9 C9           	ret
2045  92AA
2046  92AA              ; ------------------------------------------------------------------------------------------------------------------------
2047  92AA              ;
2048  92AA              ;	06/07/24
2049  92AA              ;
2050  92AA
2051  92AA              Genera_explosion
2052  92AA
2053  92AA 21 86 8C     	ld hl,Clock_explosion
2054  92AD 35           	dec (hl)
2055  92AE 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2056  92B0
2057  92B0              Borra_entidad_colisionada
2058  92B0
2059  92B0 CD 93 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2060  92B3
2061  92B3 DD E5        	push ix
2062  92B5 CD AF 90     	call Cargamos_registros_con_explosion
2063  92B8 CD 96 95     	call Genera_datos_de_impresion
2064  92BB DD E1        	pop ix
2065  92BD
2066  92BD AF           	xor a
2067  92BE 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2068  92BF
2069  92BF C9           	ret
2070  92C0
2071  92C0              Siguiente_frame_explosion
2072  92C0
2073  92C0 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2074  92C2
2075  92C2              ; Avanza Frame de explosión.
2076  92C2
2077  92C2 DD 6E 07     	ld l,(ix+7)
2078  92C5 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2079  92C8
2080  92C8 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2081  92CB
2082  92CB 79           	ld a,c
2083  92CC 95           	sub l
2084  92CD 20 41        	jr nz,1F
2085  92CF
2086  92CF
2087  92CF              ; Fín de la entidad !!!!!!!!!!!!!
2088  92CF              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2089  92CF
2090  92CF              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2091  92CF              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2092  92CF              ; Entidades_en_curso db 0								; Entidades en pantalla.
2093  92CF
2094  92CF              ; La entidad eliminada, es la última del nivel ?
2095  92CF
2096  92CF 3A 45 8C     	ld a,(Numero_de_entidades)
2097  92D2 A7           	and a
2098  92D3 28 30        	jr z,2F
2099  92D5
2100  92D5              ; Decrementa (Numero_de_entidades)
2101  92D5
2102  92D5 3D           	dec a
2103  92D6 32 45 8C     	ld (Numero_de_entidades),a
2104  92D9 21 47 8C     	ld hl,Entidades_en_curso
2105  92DC 35           	dec (hl)
2106  92DD
2107  92DD              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2108  92DD              ; IX apunta al 1er .db de la entidad eliminada.
2109  92DD
2110  92DD 2A 43 8C     	ld hl,(Puntero_indice_master)
2111  92E0 CD 55 91     	call Extrae_address
2112  92E3
2113  92E3 DD E5        	push ix
2114  92E5 D1           	pop de
2115  92E6
2116  92E6 01 0C 00     	ld bc,12
2117  92E9 ED B0        	ldir
2118  92EB
2119  92EB              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2120  92EB
2121  92EB CD 83 90     	call Obtenemos_puntero_de_impresion
2122  92EE
2123  92EE DD 6E 05     	ld l,(ix+5)
2124  92F1 2C           	inc l
2125  92F2 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2126  92F5
2127  92F5 CD 6A 95     	call Genera_coordenadas
2128  92F8
2129  92F8 ED 4B FE 8B  	ld bc,(Coordenada_X)
2130  92FC
2131  92FC DD 71 01     	ld (ix+1),c
2132  92FF DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2133  9302
2134  9302 AF           	xor a
2135  9303 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2136  9304
2137  9304 C9           	ret
2138  9305
2139  9305              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2140  9305
2141  9305 21 46 8C     2 ld hl,Numero_parcial_de_entidades
2142  9308 35           	dec (hl)
2143  9309 23           	inc hl
2144  930A 35           	dec (hl)
2145  930B
2146  930B CD CF 91     	call Limpia_caja_de_entidades
2147  930E 18 A0        	jr Borra_entidad_colisionada
2148  9310
2149  9310 23           1 inc hl
2150  9311 23           	inc hl
2151  9312
2152  9312 DD 75 07     	ld (ix+7),l
2153  9315 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2154  9318
2155  9318 18 96        	jr Borra_entidad_colisionada
2156  931A
2157  931A              ; ----- ----- ----- ----- -----
2158  931A
2159  931A              Genera_explosion_Amadeus
2160  931A
2161  931A 21 87 8C     	ld hl,Clock_explosion_Amadeus
2162  931D 35           	dec (hl)
2163  931E 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2164  9320
2165  9320              Borra_Amadeus_impactado
2166  9320
2167  9320 CD FD 8E     	call Change_Amadeus
2168  9323 CD C3 90     	call Cargamos_registros_con_explosion_Amadeus
2169  9326 CD E4 90     	call Genera_datos_de_impresion_Amadeus
2170  9329
2171  9329 21 74 8C     	ld hl,Ctrl_3
2172  932C CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2173  932E
2174  932E AF           	xor a
2175  932F 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2176  9330
2177  9330 C9           	ret
2178  9331
2179  9331              Siguiente_frame_explosion_Amadeus
2180  9331
2181  9331 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2182  9333
2183  9333              ; Avanza Frame de explosión.
2184  9333
2185  9333 2A B5 89     	ld hl,(Pamm_Amadeus)
2186  9336 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2187  9339
2188  9339 79           	ld a,c
2189  933A 95           	sub l
2190  933B 20 0B        	jr nz,1F
2191  933D
2192  933D              ; Fín de Amadeus !!!!!!!!!!!!!
2193  933D              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2194  933D
2195  933D AF           	xor a
2196  933E 32 B2 89     	ld (Impacto_Amadeus),a
2197  9341 21 74 8C     	ld hl,Ctrl_3
2198  9344 CB F6        	set 6,(hl)
2199  9346
2200  9346 18 D8        	jr Borra_Amadeus_impactado
2201  9348
2202  9348 23           1 inc hl
2203  9349 23           	inc hl
2204  934A 22 B5 89     	ld (Pamm_Amadeus),hl
2205  934D 18 D1        	jr Borra_Amadeus_impactado
2206  934F
2207  934F              ; ---------------------------------------------------------------
2208  934F
2209  934F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 934F              ; ******************************************************************************************************************************************************************************************
   2+ 934F              ;
   3+ 934F              ;   21/04/24
   4+ 934F              ;
   5+ 934F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 934F              ;   (XOR) bit a bit.
   7+ 934F              ;
   8+ 934F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 934F
  10+ 934F              Derivando_RND
  11+ 934F
  12+ 934F 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9352
  14+ 9352 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9354 C5               push bc
  16+ 9355              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9355 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9358              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9358
  20+ 9358 A7           6 and a                                 ; Carry a "0".
  21+ 9359 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 935B 30 02            jr nc,1F
  23+ 935D
  24+ 935D CB C1            set 0,c
  25+ 935F
  26+ 935F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9360 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9362 5F               ld e,a
  29+ 9363
  30+ 9363 7A               ld a,d
  31+ 9364 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9366 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9368
  34+ 9368 CB 3F            srl a
  35+ 936A
  36+ 936A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 936B
  38+ 936B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 936C 28 04            jr z,4F
  40+ 936E
  41+ 936E CB FF            set 7,a
  42+ 9370 18 02            jr 5F
  43+ 9372
  44+ 9372 CB BF        4 res 7,a
  45+ 9374
  46+ 9374 CB 21        5 sla c
  47+ 9376 10 E0            djnz 6B
  48+ 9378
  49+ 9378 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9379
  51+ 9379 77               ld (hl),a
  52+ 937A 23               inc hl
  53+ 937B C1               pop bc
  54+ 937C 10 D4            djnz 3B
  55+ 937E
  56+ 937E C9               ret
  57+ 937F
  58+ 937F
  59+ 937F
# file closed: RND_Derivando.asm
2210  937F              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 937F              ;---------------------------------------------------------------------------------------------------------------
   2+ 937F              ;
   3+ 937F              ;   13/11/24
   4+ 937F
   5+ 937F              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 937F
   7+ 937F              Genera_movimientos_masticados_del_nivel
   8+ 937F
   9+ 937F              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 937F
  11+ 937F              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 937F              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 937F              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 937F
  15+ 937F 2D           	dec l
  16+ 9380 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9381 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9382 4E           	ld c,(hl)
  19+ 9383
  20+ 9383 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9384 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9385
  23+ 9385              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9385
  25+ 9385 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9386
  27+ 9386 CD C4 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9389
  29+ 9389              ;	Caja Master inicializada ???
  30+ 9389
  31+ 9389 7E           	ld a,(hl)
  32+ 938A A7           	and a
  33+ 938B 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 938D
  35+ 938D              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 938D
  37+ 938D C1           	pop bc
  38+ 938E 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 938F C5           	push bc
  40+ 9390
  41+ 9390 CD 64 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9393 CD F8 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9396
  44+ 9396 3A FD 8B     	ld a,(Tipo)
  45+ 9399 CD D4 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 939C
  47+ 939C              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 939C
  49+ 939C              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 939C              ;	ld a,(hl)
  51+ 939C              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 939C
  53+ 939C              ;	ld hl,Posicion_inicio
  54+ 939C              ;	ld (hl),a
  55+ 939C
  56+ 939C              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 939C              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 939C
  59+ 939C CD 2F 90     	call Construye_movimientos_masticados_entidad
  60+ 939F
  61+ 939F 2A 43 8C     	ld hl,(Puntero_indice_master)
  62+ 93A2 CD 55 91     	call Extrae_address
  63+ 93A5
  64+ 93A5 5D           	ld e,l
  65+ 93A6 54           	ld d,h
  66+ 93A7
  67+ 93A7 CD 25 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 93AA
  69+ 93AA              Movimientos_masticados_construidos
  70+ 93AA
  71+ 93AA C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 93AB
  73+ 93AB E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 93AC 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 93AD
  76+ 93AD 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 93AE 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 93B0
  79+ 93B0 C9           	ret
  80+ 93B1
  81+ 93B1              ;---------------------------------------------------------------------------------------------------------------
  82+ 93B1              ;
  83+ 93B1              ;   9/11/24
  84+ 93B1              ;
  85+ 93B1              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 93B1              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 93B1              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 93B1              ;	_ de la 1ª entidad del Nivel.
  89+ 93B1              ;
  90+ 93B1              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 93B1
  92+ 93B1              ;	MODIFICA: HL,DE y A.
  93+ 93B1              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 93B1
  95+ 93B1              Inicializa_1er_Nivel
  96+ 93B1
  97+ 93B1              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 93B1
  99+ 93B1 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 93B4 CD 55 91     	call Extrae_address
 101+ 93B7 ED 53 93 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 93BB
 103+ 93BB 7E           	ld a,(hl)
 104+ 93BC 32 45 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 93BF
 106+ 93BF 2C           	inc l
 107+ 93C0 22 95 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 93C3
 109+ 93C3 C9           	ret
 110+ 93C4
 111+ 93C4              ; ----------------------
 112+ 93C4              ;
 113+ 93C4              ;	13/11/24
 114+ 93C4              ;
 115+ 93C4
 116+ 93C4              Situa_en_Caja_Master
 117+ 93C4
 118+ 93C4 CD E3 94         call Calcula_salto_en_BC
 119+ 93C7 21 58 89         ld hl,Indice_de_cajas_master
 120+ 93CA A7               and a
 121+ 93CB ED 4A            adc hl,bc
 122+ 93CD 22 43 8C       	ld (Puntero_indice_master),hl
 123+ 93D0 CD 55 91     	call Extrae_address
 124+ 93D3 C9           	ret
 125+ 93D4
 126+ 93D4              ; ----------------------
 127+ 93D4
 128+ 93D4              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 93D4              ; 	ld bc,4
 130+ 93D4              ; 	ldir
 131+ 93D4              ; 	ret
 132+ 93D4
 133+ 93D4 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 93D5 CD E3 94         call Calcula_salto_en_BC
 135+ 93D8 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 93DB A7               and a
 137+ 93DC ED 4A            adc hl,bc
 138+ 93DE CD 55 91         call Extrae_address
 139+ 93E1 22 2E 8C         ld (Puntero_indice_mov),hl
 140+ 93E4 C9               ret
 141+ 93E5
 142+ 93E5              ;---------------------------------------------------------------------------------------------------------------
 143+ 93E5              ;
 144+ 93E5              ;   13/11/24
 145+ 93E5              ;
 146+ 93E5              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 93E5
 148+ 93E5
 149+ 93E5              Prepara_Cajas_de_Entidades
 150+ 93E5
 151+ 93E5              ; Preparamos los punteros de las cajas de entidades:
 152+ 93E5
 153+ 93E5 CD 3F 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 93E8              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 93E8 CD 2E 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 93EB
 157+ 93EB 2A 95 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 93EE
 159+ 93EE              ; En este punto:
 160+ 93EE              ;
 161+ 93EE              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 93EE              ; B contiene (Numero_parcial_de_entidades).
 163+ 93EE
 164+ 93EE C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 93EF
 166+ 93EF 7E           	ld a,(hl)
 167+ 93F0
 168+ 93F0 CD C4 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 93F3
 170+ 93F3 ED 5B 3D 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 93F7
 172+ 93F7 D5           	push de
 173+ 93F8 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 93FA
 175+ 93FA 01 0C 00     	ld bc,12
 176+ 93FD ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 93FF              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 93FF
 179+ 93FF              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 93FF              ;
 181+ 93FF              ;
 182+ 93FF              ; ------------------------------------------------------ IX
 183+ 93FF              ; ------------------------------------------------------ IX
 184+ 93FF              ; ------------------------------------------------------ IX
 185+ 93FF              ; ------------------------------------------------------ IX
 186+ 93FF
 187+ 93FF DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 9401
 189+ 9401 CD 83 90     	call Obtenemos_puntero_de_impresion
 190+ 9404
 191+ 9404 DD 6E 05     	ld l,(ix+5)
 192+ 9407 2C           	inc l
 193+ 9408 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 940B
 195+ 940B D5           	push de														; Push (Puntero_objeto).
 196+ 940C E5           	push hl														; Push (Puntero_de_impresion).
 197+ 940D
 198+ 940D CD 6A 95     	call Genera_coordenadas
 199+ 9410
 200+ 9410 ED 4B FE 8B  	ld bc,(Coordenada_X)
 201+ 9414
 202+ 9414 DD 71 01     	ld (ix+1),c
 203+ 9417 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 941A
 205+ 941A CD 93 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 941D
 207+ 941D DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 941F D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 9420
 210+ 9420 CD 96 95     	call Genera_datos_de_impresion
 211+ 9423
 212+ 9423 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 9425
 214+ 9425              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 9425
 216+ 9425 CD 9C 94     	call Decrementa_Contador_de_mov_masticados
 217+ 9428 CD 79 94     	call Limpiamos_bandeja_DRAW
 218+ 942B CD 9F 91     	call Incrementa_punteros_de_cajas
 219+ 942E
 220+ 942E              ; Siguiente entidad del Nivel.
 221+ 942E
 222+ 942E 2A 95 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 9431 23           	inc hl 														; _ entidad del Nivel.
 224+ 9432
 225+ 9432 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 9433
 227+ 9433 10 B9        	djnz 1B
 228+ 9435
 229+ 9435 C9           	ret
 230+ 9436
 231+ 9436              ; -------------------------------------------------------------------------------------------------------------------
 232+ 9436              ;
 233+ 9436              ;	27/5/24
 234+ 9436              ;
 235+ 9436              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 9436              ;
 237+ 9436
 238+ 9436              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 9436              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 9436
 241+ 9436 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 9439 CD F8 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 943C
 244+ 943C
 245+ 943C              Construye_movimientos_masticados_Amadeus
 246+ 943C
 247+ 943C 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 943F CD 76 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 9442              ;															; _ el (Contador_de_mov_masticados).
 250+ 9442 CD 5B 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 9445              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 9445
 253+ 9445              ; Generamos movimientos masticados de Amadeus.
 254+ 9445
 255+ 9445 06 79        	ld b,121												; $0079, 121d.
 256+ 9447
 257+ 9447 C5           1 push bc
 258+ 9448 CD AD 97     	call Draw
 259+ 944B CD 5B 90     	call Guarda_movimiento_masticado
 260+ 944E
 261+ 944E CD 21 9B     	call Mov_right
 262+ 9451 CD 21 9B     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 9454
 264+ 9454 C1           	pop bc
 265+ 9455 10 F0        	djnz 1B
 266+ 9457
 267+ 9457              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 9457
 269+ 9457              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 9457              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 9457
 272+ 9457 2A 04 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 945A 01 08 00     	ld bc,8
 274+ 945D A7           	and a
 275+ 945E ED 42        	sbc hl,bc
 276+ 9460 22 04 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 9463
 278+ 9463 C9           	ret
 279+ 9464
 280+ 9464              ; ---------------------------------------------------------------------
 281+ 9464              ;
 282+ 9464              ;	10/02/24
 283+ 9464              ;
 284+ 9464              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 9464              ;
 286+ 9464              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 9464
 288+ 9464              Definicion_segun_tipo
 289+ 9464
 290+ 9464 CD E3 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 9467 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 946A CD EE 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 946D C9           	ret
 294+ 946E
 295+ 946E              ; ---------------------------------------------------------------------
 296+ 946E              ;
 297+ 946E              ;	6/7/24
 298+ 946E
 299+ 946E
 300+ 946E              Store_Restore_cajas
 301+ 946E
 302+ 946E ED 5B 3D 8C  	ld de,(Puntero_store_caja)
 303+ 9472 CD 25 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 9475 CD 9F 91     	call Incrementa_punteros_de_cajas
 305+ 9478 C9           	ret
 306+ 9479
 307+ 9479              ; ---------------------------------------------------------------------
 308+ 9479              ;
 309+ 9479              ;	23/6/24
 310+ 9479              ;
 311+ 9479              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 9479              ;
 313+ 9479              ;	MODIFY: HL
 314+ 9479
 315+ 9479              Limpiamos_bandeja_DRAW
 316+ 9479
 317+ 9479 ED 73 4C 8C  	ld (Stack),sp
 318+ 947D 31 22 8C     	ld sp,Vel_left
 319+ 9480
 320+ 9480 AF           	xor a
 321+ 9481 67           	ld h,a
 322+ 9482 6F           	ld l,a
 323+ 9483
 324+ 9483 E5           	push hl
 325+ 9484 E5           	push hl
 326+ 9485 E5           	push hl
 327+ 9486 E5           	push hl
 328+ 9487 E5           	push hl
 329+ 9488 E5           	push hl
 330+ 9489 E5           	push hl
 331+ 948A E5           	push hl
 332+ 948B E5           	push hl
 333+ 948C E5           	push hl
 334+ 948D E5           	push hl
 335+ 948E E5           	push hl
 336+ 948F E5           	push hl
 337+ 9490 E5           	push hl
 338+ 9491 E5           	push hl
 339+ 9492 E5           	push hl
 340+ 9493 E5           	push hl
 341+ 9494 E5           	push hl
 342+ 9495
 343+ 9495 33           	inc sp
 344+ 9496
 345+ 9496 E5           	push hl
 346+ 9497 ED 7B 4C 8C  	ld sp,(Stack)
 347+ 949B
 348+ 949B C9           	ret
 349+ 949C
 350+ 949C              ; ---------------------------------------------------------------------
 351+ 949C              ;
 352+ 949C              ;	23/11/24
 353+ 949C              ;
 354+ 949C              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 949C
 356+ 949C              Decrementa_Contador_de_mov_masticados
 357+ 949C
 358+ 949C DD 6E 09     	ld l,(ix+9)
 359+ 949F DD 66 0A     	ld h,(ix+10)
 360+ 94A2
 361+ 94A2 2B           	dec hl
 362+ 94A3
 363+ 94A3 DD 75 09     	ld (ix+9),l
 364+ 94A6 DD 74 0A     	ld (ix+10),h
 365+ 94A9
 366+ 94A9 C9           	ret
 367+ 94AA
 368+ 94AA              ; ---------------------------------------------------------------------
 369+ 94AA              ;
 370+ 94AA              ;	24/11/24
 371+ 94AA
 372+ 94AA              Reinicia_entidad_maliciosa
 373+ 94AA
 374+ 94AA              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 94AA
 376+ 94AA CD 8E 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 94AD CD 9B 9F     	call Transfiere_datos_de_contadores
 378+ 94B0
 379+ 94B0              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 94B0
 381+ 94B0 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 94B3 CD 64 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 94B6
 384+ 94B6 7D           	ld a,l
 385+ 94B7 C6 0B        	add 11
 386+ 94B9 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 94BA
 388+ 94BA CD 55 91     	call Extrae_address
 389+ 94BD
 390+ 94BD DD 75 07     	ld (ix+7),l
 391+ 94C0 DD 74 08     	ld (ix+8),h
 392+ 94C3
 393+ 94C3 CD 83 90     	call Obtenemos_puntero_de_impresion
 394+ 94C6
 395+ 94C6              ; Incrementa (Contador_de_vueltas)x2.
 396+ 94C6              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 94C6
 398+ 94C6              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 94C6              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 94C6              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 94C6              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 94C6              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 94C6
 404+ 94C6 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 405+ 94CA
 406+ 94CA DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 94CD CB 2F        	sra a
 408+ 94CF CB 2F        	sra a
 409+ 94D1
 410+ 94D1 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 94D4
 412+ 94D4 3E 40        	ld a,$40
 413+ 94D6 DD BE 03     	cp (ix+3)
 414+ 94D9 C0           	ret nz
 415+ 94DA
 416+ 94DA              ; Límitador.
 417+ 94DA
 418+ 94DA              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 94DA
 420+ 94DA DD CB 03 2E  	sra (ix+3)
 421+ 94DE DD CB 0B 2E  	sra (ix+11)
 422+ 94E2
 423+ 94E2 C9           	ret
 424+ 94E3
 425+ 94E3              ;	------------------------------------------------------------------------------------
 426+ 94E3              ;
 427+ 94E3              ;	09/11/24
 428+ 94E3              ;
 429+ 94E3              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 94E3              ;
 431+ 94E3              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 94E3              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 94E3
 434+ 94E3 A7           Calcula_salto_en_BC and a
 435+ 94E4 28 04        	jr z,1F
 436+ 94E6 CB 27        	sla a
 437+ 94E8 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 94EA 4F           1 ld c,a
 439+ 94EB 06 00        	ld b,0
 440+ 94ED C9           	ret
 441+ 94EE
 442+ 94EE              ; ------------------------------------------------------------------
 443+ 94EE              ;
 444+ 94EE              ;	19/1/24
 445+ 94EE              ;
 446+ 94EE              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 94EE              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 94EE
 449+ 94EE A7           Situa_en_datos_de_definicion and a
 450+ 94EF ED 4A        	adc hl,bc
 451+ 94F1 CD 55 91     	call Extrae_address
 452+ 94F4 22 4A 8C         ld (Datos_de_entidad),hl
 453+ 94F7 C9           	ret
 454+ 94F8
 455+ 94F8              ; ----------------------------------------------------------------------------------------------------------
 456+ 94F8              ;
 457+ 94F8              ;	24/6/24
 458+ 94F8              ;
 459+ 94F8              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 94F8              ;	_ de entidad.
 461+ 94F8              ;
 462+ 94F8              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 94F8              ;
 464+ 94F8              ;
 465+ 94F8              ;	MODIFICA: HL,DE y BC
 466+ 94F8
 467+ 94F8
 468+ 94F8              Definicion_de_entidad_a_bandeja_DRAW
 469+ 94F8
 470+ 94F8 11 FD 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 94FB 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 94FC 12           	ld (de),a
 473+ 94FD 23           	inc hl
 474+ 94FE              ;
 475+ 94FE 11 0B 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 9501 01 02 00     	ld bc,2
 477+ 9504 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 9506              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 9506 11 00 8C     	ld de,Contador_de_vueltas
 480+ 9509 7E           	ld a,(hl)
 481+ 950A 12           	ld (de),a
 482+ 950B 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 950C
 484+ 950C 11 12 8C     	ld de,Indice_Sprite_der
 485+ 950F 01 04 00     	ld bc,4
 486+ 9512 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 9514
 488+ 9514 11 1A 8C     	ld de,Posicion_inicio
 489+ 9517 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 951A ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 951C
 492+ 951C 11 04 8C     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 951F 01 02 00     	ld bc,2
 494+ 9522 ED B0        	ldir
 495+ 9524
 496+ 9524 C9           	ret
 497+ 9525
 498+ 9525              ; ----------------------------------------------------------------------------------------------------------
 499+ 9525              ;
 500+ 9525              ;	1/8/24
 501+ 9525              ;
 502+ 9525
 503+ 9525              Parametros_de_bandeja_DRAW_a_caja
 504+ 9525
 505+ 9525 21 FD 8B     	ld hl,Bandeja_DRAW
 506+ 9528 01 0C 00     	ld bc,12
 507+ 952B ED B0        	ldir
 508+ 952D C9           	ret
 509+ 952E
 510+ 952E              ;---------------------------------------------------------------------------------------------------------------
 511+ 952E              ;
 512+ 952E              ;	13/11/24
 513+ 952E              ;
 514+ 952E              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 952E              ;
 516+ 952E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 952E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 952E
 519+ 952E              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 952E              ;			- Actualiza (Numero_de_entidades).
 521+ 952E
 522+ 952E              ;	MODIFICA: A y B.
 523+ 952E
 524+ 952E
 525+ 952E              Inicializa_Numero_parcial_de_entidades
 526+ 952E
 527+ 952E 3A 45 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 9531 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 9533 38 0E        	jr c,1F
 530+ 9535 28 0C        	jr z,1F
 531+ 9537
 532+ 9537              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 9537              ; Actualizamos variables.
 534+ 9537
 535+ 9537 D6 06        	sub 6
 536+ 9539 32 45 8C     	ld (Numero_de_entidades),a
 537+ 953C 3E 06        	ld a,6
 538+ 953E 32 46 8C     	ld (Numero_parcial_de_entidades),a
 539+ 9541 47           	ld b,a
 540+ 9542 C9           	ret
 541+ 9543
 542+ 9543              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 9543              ; (Numero_de_entidades)="0".
 544+ 9543
 545+ 9543 32 46 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 9546 47           	ld b,a
 547+ 9547 AF           	xor a
 548+ 9548 32 45 8C     	ld (Numero_de_entidades),a
 549+ 954B C9           	ret
 550+ 954C
# file closed: Rutinas_de_inicio_y_niveles.asm
2211  954C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 954C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 954C              ;
   3+ 954C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 954C              ;
   5+ 954C              ; *****************************************************************************************************************************************************************************************
   6+ 954C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 954C
   8+ 954C 7C           calcula_tercio ld a,h
   9+ 954D E6 18        	and $18
  10+ 954F CB 2F        	sra a
  11+ 9551 CB 2F        	sra a
  12+ 9553 CB 2F        	sra a
  13+ 9555 C9           	ret
  14+ 9556
# file closed: calcula_tercio.asm
2212  9556              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9556              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9556              ;
   3+ 9556              ;
   4+ 9556              ;	CLS.
   5+ 9556              ;
   6+ 9556              ;	Limpia la pantalla y define sus atributos.
   7+ 9556              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9556              ;
   9+ 9556              ;	COLORES: 0 ..... NEGRO
  10+ 9556              ;    		 1 ..... AZUL
  11+ 9556              ; 			 2 ..... ROJO
  12+ 9556              ;			 3 ..... MAGENTA
  13+ 9556              ; 			 4 ..... VERDE
  14+ 9556              ; 			 5 ..... CIAN
  15+ 9556              ;			 6 ..... AMARILLO
  16+ 9556              ; 			 7 ..... BLANCO
  17+ 9556              ;
  18+ 9556              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9556              ;
  20+ 9556              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9556
  22+ 9556
  23+ 9556 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9559 11 01 40     	LD DE,$4001
  25+ 955C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 955F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9561 ED B0        	LDIR
  28+ 9563 01 FF 02     	LD BC,767
  29+ 9566 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9567 ED B0        	LDIR
  31+ 9569 C9           	ret
  32+ 956A
# file closed: Cls.asm
2213  956A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 956A              ; ------------------------------------------------------------------------
   2+ 956A              ;
   3+ 956A              ;	30/1/24
   4+ 956A              ;
   5+ 956A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 956A              ;	Fila superior "0", Columna izquierda "0".
   7+ 956A              ;
   8+ 956A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 956A              ;
  10+ 956A              ;	Modifica: A,BC y DE.
  11+ 956A
  12+ 956A              Genera_coordenadas
  13+ 956A
  14+ 956A 7D           	ld a,l
  15+ 956B E6 1F        	and $1f
  16+ 956D
  17+ 956D 32 FE 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9570
  19+ 9570 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9571 FE 40        	cp $40
  21+ 9573 38 1C        	jr c,4F
  22+ 9575
  23+ 9575 CD 4C 95     	call calcula_tercio
  24+ 9578 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9579
  26+ 9579 1E 00        	ld e,0
  27+ 957B 7D           	ld a,l
  28+ 957C E6 E0        	and $e0
  29+ 957E 28 01        	jr z,1F
  30+ 9580 04           	inc b
  31+ 9581
  32+ 9581 04           1 inc b
  33+ 9582 05           	dec b
  34+ 9583 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9585              ;														; _ , salimos.
  36+ 9585 1C           3 inc e
  37+ 9586 D6 20        	sub 32
  38+ 9588 20 FB        	jr nz,3B
  39+ 958A 10 F5        	djnz 1B
  40+ 958C
  41+ 958C 7B           2 ld a,e
  42+ 958D 32 FF 8B     	ld (Coordenada_y),a
  43+ 9590 C9           	ret
  44+ 9591
  45+ 9591 AF           4 xor a
  46+ 9592 32 FF 8B     	ld (Coordenada_y),a
  47+ 9595 C9           	ret
  48+ 9596
# file closed: Genera_coordenadas.asm
2214  9596              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9596              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9596              ;
   3+ 9596              ;	20/09/24
   4+ 9596              ;
   5+ 9596              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9596              ;   DE contiene Puntero_objeto.
   7+ 9596              ;   IX contiene el Puntero de impresión.
   8+ 9596
   9+ 9596              Genera_datos_de_impresion
  10+ 9596
  11+ 9596 ED 73 4C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 959A
  13+ 959A 2A 6E 8C         ld hl,(Scanlines_album_SP)
  14+ 959D
  15+ 959D 3E 05            ld a,5
  16+ 959F 85               add l
  17+ 95A0 6F               ld l,a
  18+ 95A1
  19+ 95A1 F9               ld sp,hl
  20+ 95A2 22 6E 8C         ld (Scanlines_album_SP),hl
  21+ 95A5
  22+ 95A5 21 00 00         ld hl,0
  23+ 95A8
  24+ 95A8 DD E5            push ix
  25+ 95AA 3B               dec sp
  26+ 95AB ED 7A            adc hl,sp
  27+ 95AD D5               push de
  28+ 95AE
  29+ 95AE              ; Recuperamos SP.
  30+ 95AE
  31+ 95AE ED 7B 4C 8C      ld sp,(Stack)
  32+ 95B2
  33+ 95B2 E5               push hl
  34+ 95B3 F1               pop af
  35+ 95B4 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 95B5
  37+ 95B5              ; Tenemos el encabezado listo.
  38+ 95B5              ; Preparamos registros para generar los scanlines.
  39+ 95B5
  40+ 95B5 DD E5            push ix
  41+ 95B7 E1               pop hl                                          ; 1er scanline en HL.
  42+ 95B8
  43+ 95B8 ED 5B 6E 8C      ld de,(Scanlines_album_SP)
  44+ 95BC
  45+ 95BC              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 95BC              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 95BC
  48+ 95BC 7C               ld a,h
  49+ 95BD FE 50            cp $50
  50+ 95BF 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 95C1
  52+ 95C1 20 05            jr nz,2F
  53+ 95C3
  54+ 95C3 7D               ld a,l
  55+ 95C4 FE E0            cp $e0
  56+ 95C6 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 95C8
  58+ 95C8 7D           2 ld a,l
  59+ 95C9 FE C0            cp $c0
  60+ 95CB D2 61 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 95CE
  62+ 95CE              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 95CE
  64+ 95CE CD 5F 9A         call NextScan
  65+ 95D1 EB               ex de,hl
  66+ 95D2
  67+ 95D2 73               ld (hl),e
  68+ 95D3 23               inc hl
  69+ 95D4 72               ld (hl),d
  70+ 95D5 23               inc hl
  71+ 95D6
  72+ 95D6 EB               ex de,hl
  73+ 95D7
  74+ 95D7 CD 5F 9A         call NextScan
  75+ 95DA EB               ex de,hl
  76+ 95DB
  77+ 95DB 73               ld (hl),e
  78+ 95DC 23               inc hl
  79+ 95DD 72               ld (hl),d
  80+ 95DE 23               inc hl
  81+ 95DF
  82+ 95DF EB               ex de,hl
  83+ 95E0
  84+ 95E0 CD 5F 9A         call NextScan
  85+ 95E3 EB               ex de,hl
  86+ 95E4
  87+ 95E4 73               ld (hl),e
  88+ 95E5 23               inc hl
  89+ 95E6 72               ld (hl),d
  90+ 95E7 23               inc hl
  91+ 95E8
  92+ 95E8 EB               ex de,hl
  93+ 95E9
  94+ 95E9 CD 5F 9A         call NextScan
  95+ 95EC EB               ex de,hl
  96+ 95ED
  97+ 95ED 73               ld (hl),e
  98+ 95EE 23               inc hl
  99+ 95EF 72               ld (hl),d
 100+ 95F0 23               inc hl
 101+ 95F1
 102+ 95F1 EB               ex de,hl
 103+ 95F2
 104+ 95F2 CD 5F 9A         call NextScan
 105+ 95F5 EB               ex de,hl
 106+ 95F6
 107+ 95F6 73               ld (hl),e
 108+ 95F7 23               inc hl
 109+ 95F8 72               ld (hl),d
 110+ 95F9 23               inc hl
 111+ 95FA
 112+ 95FA EB               ex de,hl
 113+ 95FB
 114+ 95FB CD 5F 9A         call NextScan
 115+ 95FE EB               ex de,hl
 116+ 95FF
 117+ 95FF 73               ld (hl),e
 118+ 9600 23               inc hl
 119+ 9601 72               ld (hl),d
 120+ 9602 23               inc hl
 121+ 9603
 122+ 9603 EB               ex de,hl
 123+ 9604
 124+ 9604 CD 5F 9A         call NextScan
 125+ 9607 EB               ex de,hl
 126+ 9608
 127+ 9608 73               ld (hl),e
 128+ 9609 23               inc hl
 129+ 960A 72               ld (hl),d
 130+ 960B 23               inc hl
 131+ 960C
 132+ 960C EB               ex de,hl
 133+ 960D
 134+ 960D CD 5F 9A         call NextScan
 135+ 9610 EB               ex de,hl
 136+ 9611
 137+ 9611 73               ld (hl),e
 138+ 9612 23               inc hl
 139+ 9613 72               ld (hl),d
 140+ 9614 23               inc hl
 141+ 9615
 142+ 9615 EB               ex de,hl
 143+ 9616
 144+ 9616 CD 5F 9A         call NextScan
 145+ 9619 EB               ex de,hl
 146+ 961A
 147+ 961A 73               ld (hl),e
 148+ 961B 23               inc hl
 149+ 961C 72               ld (hl),d
 150+ 961D 23               inc hl
 151+ 961E
 152+ 961E EB               ex de,hl
 153+ 961F
 154+ 961F CD 5F 9A         call NextScan
 155+ 9622 EB               ex de,hl
 156+ 9623
 157+ 9623 73               ld (hl),e
 158+ 9624 23               inc hl
 159+ 9625 72               ld (hl),d
 160+ 9626 23               inc hl
 161+ 9627
 162+ 9627 EB               ex de,hl
 163+ 9628
 164+ 9628 CD 5F 9A         call NextScan
 165+ 962B EB               ex de,hl
 166+ 962C
 167+ 962C 73               ld (hl),e
 168+ 962D 23               inc hl
 169+ 962E 72               ld (hl),d
 170+ 962F 23               inc hl
 171+ 9630
 172+ 9630 EB               ex de,hl
 173+ 9631
 174+ 9631 CD 5F 9A         call NextScan
 175+ 9634 EB               ex de,hl
 176+ 9635
 177+ 9635 73               ld (hl),e
 178+ 9636 23               inc hl
 179+ 9637 72               ld (hl),d
 180+ 9638 23               inc hl
 181+ 9639
 182+ 9639 EB               ex de,hl
 183+ 963A
 184+ 963A CD 5F 9A         call NextScan
 185+ 963D EB               ex de,hl
 186+ 963E
 187+ 963E 73               ld (hl),e
 188+ 963F 23               inc hl
 189+ 9640 72               ld (hl),d
 190+ 9641 23               inc hl
 191+ 9642
 192+ 9642 EB               ex de,hl
 193+ 9643
 194+ 9643 CD 5F 9A         call NextScan
 195+ 9646 EB               ex de,hl
 196+ 9647
 197+ 9647 73               ld (hl),e
 198+ 9648 23               inc hl
 199+ 9649 72               ld (hl),d
 200+ 964A 23               inc hl
 201+ 964B
 202+ 964B EB               ex de,hl
 203+ 964C
 204+ 964C CD 5F 9A         call NextScan
 205+ 964F EB               ex de,hl
 206+ 9650
 207+ 9650              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 9650              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 9650              ;   _ generar sus scanlines.
 210+ 9650
 211+ 9650              ;    ld (Puntero_de_impresion_disparo),de
 212+ 9650
 213+ 9650 73               ld (hl),e
 214+ 9651 23               inc hl
 215+ 9652 72               ld (hl),d
 216+ 9653 23               inc hl
 217+ 9654
 218+ 9654              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 9654
 220+ 9654 22 6E 8C         ld (Scanlines_album_SP),hl
 221+ 9657
 222+ 9657 EB               ex de,hl
 223+ 9658
 224+ 9658              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 9658
 226+ 9658              ;    call NextScan
 227+ 9658              ;    call NextScan
 228+ 9658
 229+ 9658 22 79 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 965B
 231+ 965B              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 965B
 233+ 965B 08               ex af,af
 234+ 965C
 235+ 965C F5               push af
 236+ 965D E1               pop hl
 237+ 965E
 238+ 965E 36 10            ld (hl),16
 239+ 9660
 240+ 9660 C9               ret
 241+ 9661
 242+ 9661              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 9661
 244+ 9661              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 9661
 246+ 9661 3E 57            ld a,$57
 247+ 9663 94               sub h
 248+ 9664 47               ld b,a
 249+ 9665
 250+ 9665 3E DF            ld a,$df
 251+ 9667 BD               cp l
 252+ 9668 38 04            jr c,1F
 253+ 966A
 254+ 966A 3E 08            ld a,8
 255+ 966C 80               add b
 256+ 966D 47               ld b,a
 257+ 966E
 258+ 966E              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 966E              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 966E
 261+ 966E 48           1 ld c,b
 262+ 966F 0C               inc c
 263+ 9670
 264+ 9670 04               inc b
 265+ 9671 05               dec b
 266+ 9672 20 02            jr nz,3F
 267+ 9674
 268+ 9674 18 0B            jr 6F
 269+ 9676
 270+ 9676 CD 5F 9A     3 call NextScan
 271+ 9679 EB               ex de,hl
 272+ 967A
 273+ 967A 73               ld (hl),e
 274+ 967B 23               inc hl
 275+ 967C 72               ld (hl),d
 276+ 967D 23               inc hl
 277+ 967E
 278+ 967E EB               ex de,hl
 279+ 967F 10 F5            djnz 3B
 280+ 9681
 281+ 9681 ED 53 6E 8C  6 ld (Scanlines_album_SP),de
 282+ 9685
 283+ 9685 08           5 ex af,af
 284+ 9686 F5               push af
 285+ 9687 E1               pop hl
 286+ 9688
 287+ 9688 71               ld (hl),c
 288+ 9689
 289+ 9689 C9               ret
 290+ 968A
# file closed: Genera_datos_de_impresion.asm
2215  968A              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 968A              ; -----------------------------------------------------------------------------
   2+ 968A              ;
   3+ 968A              ;   11/03/24
   4+ 968A              ;
   5+ 968A
   6+ 968A              Pinta_Sprites
   7+ 968A
   8+ 968A              ;    ld hl,(Scanlines_album_SP)
   9+ 968A              ;    call Extrae_address
  10+ 968A
  11+ 968A              ;    inc h
  12+ 968A              ;    dec h
  13+ 968A              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 968A
  15+ 968A ED 73 4C 8C      ld (Stack),sp
  16+ 968E
  17+ 968E EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 968F              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 968F 2C               inc l
  20+ 9690 2C               inc l
  21+ 9691
  22+ 9691 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9692
  24+ 9692 2C               inc l
  25+ 9693 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9694
  27+ 9694              ;   Seleccionamos rutina de impresión:
  28+ 9694
  29+ 9694 3E 10            ld a,16
  30+ 9696 B8               cp b
  31+ 9697 C2 93 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 969A
  33+ 969A              ;   Rutinas:
  34+ 969A
  35+ 969A              Pinta_rapido    ;   1520 t/states.
  36+ 969A
  37+ 969A E1               pop hl
  38+ 969B
  39+ 969B 1A               ld a,(de)
  40+ 969C AE               xor (hl)
  41+ 969D 77               ld (hl),a
  42+ 969E 2C               inc l
  43+ 969F 1C               inc e
  44+ 96A0 1A               ld a,(de)
  45+ 96A1 AE               xor (hl)
  46+ 96A2 77               ld (hl),a
  47+ 96A3 2C               inc l
  48+ 96A4 1C               inc e
  49+ 96A5 1A               ld a,(de)
  50+ 96A6 AE               xor (hl)
  51+ 96A7 77               ld (hl),a
  52+ 96A8 13               inc de
  53+ 96A9
  54+ 96A9 E1               pop hl
  55+ 96AA
  56+ 96AA 1A               ld a,(de)
  57+ 96AB AE               xor (hl)
  58+ 96AC 77               ld (hl),a
  59+ 96AD 2C               inc l
  60+ 96AE 1C               inc e
  61+ 96AF 1A               ld a,(de)
  62+ 96B0 AE               xor (hl)
  63+ 96B1 77               ld (hl),a
  64+ 96B2 2C               inc l
  65+ 96B3 1C               inc e
  66+ 96B4 1A               ld a,(de)
  67+ 96B5 AE               xor (hl)
  68+ 96B6 77               ld (hl),a
  69+ 96B7 13               inc de
  70+ 96B8
  71+ 96B8 E1               pop hl
  72+ 96B9
  73+ 96B9 1A               ld a,(de)
  74+ 96BA AE               xor (hl)
  75+ 96BB 77               ld (hl),a
  76+ 96BC 2C               inc l
  77+ 96BD 1C               inc e
  78+ 96BE 1A               ld a,(de)
  79+ 96BF AE               xor (hl)
  80+ 96C0 77               ld (hl),a
  81+ 96C1 2C               inc l
  82+ 96C2 1C               inc e
  83+ 96C3 1A               ld a,(de)
  84+ 96C4 AE               xor (hl)
  85+ 96C5 77               ld (hl),a
  86+ 96C6 13               inc de
  87+ 96C7
  88+ 96C7 E1               pop hl
  89+ 96C8
  90+ 96C8 1A               ld a,(de)
  91+ 96C9 AE               xor (hl)
  92+ 96CA 77               ld (hl),a
  93+ 96CB 2C               inc l
  94+ 96CC 1C               inc e
  95+ 96CD 1A               ld a,(de)
  96+ 96CE AE               xor (hl)
  97+ 96CF 77               ld (hl),a
  98+ 96D0 2C               inc l
  99+ 96D1 1C               inc e
 100+ 96D2 1A               ld a,(de)
 101+ 96D3 AE               xor (hl)
 102+ 96D4 77               ld (hl),a
 103+ 96D5 13               inc de
 104+ 96D6
 105+ 96D6 E1               pop hl
 106+ 96D7
 107+ 96D7 1A               ld a,(de)
 108+ 96D8 AE               xor (hl)
 109+ 96D9 77               ld (hl),a
 110+ 96DA 2C               inc l
 111+ 96DB 1C               inc e
 112+ 96DC 1A               ld a,(de)
 113+ 96DD AE               xor (hl)
 114+ 96DE 77               ld (hl),a
 115+ 96DF 2C               inc l
 116+ 96E0 1C               inc e
 117+ 96E1 1A               ld a,(de)
 118+ 96E2 AE               xor (hl)
 119+ 96E3 77               ld (hl),a
 120+ 96E4 13               inc de
 121+ 96E5
 122+ 96E5 E1               pop hl
 123+ 96E6
 124+ 96E6 1A               ld a,(de)
 125+ 96E7 AE               xor (hl)
 126+ 96E8 77               ld (hl),a
 127+ 96E9 2C               inc l
 128+ 96EA 1C               inc e
 129+ 96EB 1A               ld a,(de)
 130+ 96EC AE               xor (hl)
 131+ 96ED 77               ld (hl),a
 132+ 96EE 2C               inc l
 133+ 96EF 1C               inc e
 134+ 96F0 1A               ld a,(de)
 135+ 96F1 AE               xor (hl)
 136+ 96F2 77               ld (hl),a
 137+ 96F3 13               inc de
 138+ 96F4
 139+ 96F4 E1               pop hl
 140+ 96F5
 141+ 96F5 1A               ld a,(de)
 142+ 96F6 AE               xor (hl)
 143+ 96F7 77               ld (hl),a
 144+ 96F8 2C               inc l
 145+ 96F9 1C               inc e
 146+ 96FA 1A               ld a,(de)
 147+ 96FB AE               xor (hl)
 148+ 96FC 77               ld (hl),a
 149+ 96FD 2C               inc l
 150+ 96FE 1C               inc e
 151+ 96FF 1A               ld a,(de)
 152+ 9700 AE               xor (hl)
 153+ 9701 77               ld (hl),a
 154+ 9702 13               inc de
 155+ 9703
 156+ 9703 E1               pop hl
 157+ 9704
 158+ 9704 1A               ld a,(de)
 159+ 9705 AE               xor (hl)
 160+ 9706 77               ld (hl),a
 161+ 9707 2C               inc l
 162+ 9708 1C               inc e
 163+ 9709 1A               ld a,(de)
 164+ 970A AE               xor (hl)
 165+ 970B 77               ld (hl),a
 166+ 970C 2C               inc l
 167+ 970D 1C               inc e
 168+ 970E 1A               ld a,(de)
 169+ 970F AE               xor (hl)
 170+ 9710 77               ld (hl),a
 171+ 9711 13               inc de
 172+ 9712
 173+ 9712 E1               pop hl
 174+ 9713
 175+ 9713 1A               ld a,(de)
 176+ 9714 AE               xor (hl)
 177+ 9715 77               ld (hl),a
 178+ 9716 2C               inc l
 179+ 9717 1C               inc e
 180+ 9718 1A               ld a,(de)
 181+ 9719 AE               xor (hl)
 182+ 971A 77               ld (hl),a
 183+ 971B 2C               inc l
 184+ 971C 1C               inc e
 185+ 971D 1A               ld a,(de)
 186+ 971E AE               xor (hl)
 187+ 971F 77               ld (hl),a
 188+ 9720 13               inc de
 189+ 9721
 190+ 9721 E1               pop hl
 191+ 9722
 192+ 9722 1A               ld a,(de)
 193+ 9723 AE               xor (hl)
 194+ 9724 77               ld (hl),a
 195+ 9725 2C               inc l
 196+ 9726 1C               inc e
 197+ 9727 1A               ld a,(de)
 198+ 9728 AE               xor (hl)
 199+ 9729 77               ld (hl),a
 200+ 972A 2C               inc l
 201+ 972B 1C               inc e
 202+ 972C 1A               ld a,(de)
 203+ 972D AE               xor (hl)
 204+ 972E 77               ld (hl),a
 205+ 972F 13               inc de
 206+ 9730
 207+ 9730 E1               pop hl
 208+ 9731
 209+ 9731 1A               ld a,(de)
 210+ 9732 AE               xor (hl)
 211+ 9733 77               ld (hl),a
 212+ 9734 2C               inc l
 213+ 9735 1C               inc e
 214+ 9736 1A               ld a,(de)
 215+ 9737 AE               xor (hl)
 216+ 9738 77               ld (hl),a
 217+ 9739 2C               inc l
 218+ 973A 1C               inc e
 219+ 973B 1A               ld a,(de)
 220+ 973C AE               xor (hl)
 221+ 973D 77               ld (hl),a
 222+ 973E 13               inc de
 223+ 973F
 224+ 973F E1               pop hl
 225+ 9740
 226+ 9740 1A               ld a,(de)
 227+ 9741 AE               xor (hl)
 228+ 9742 77               ld (hl),a
 229+ 9743 2C               inc l
 230+ 9744 1C               inc e
 231+ 9745 1A               ld a,(de)
 232+ 9746 AE               xor (hl)
 233+ 9747 77               ld (hl),a
 234+ 9748 2C               inc l
 235+ 9749 1C               inc e
 236+ 974A 1A               ld a,(de)
 237+ 974B AE               xor (hl)
 238+ 974C 77               ld (hl),a
 239+ 974D 13               inc de
 240+ 974E
 241+ 974E E1               pop hl
 242+ 974F
 243+ 974F 1A               ld a,(de)
 244+ 9750 AE               xor (hl)
 245+ 9751 77               ld (hl),a
 246+ 9752 2C               inc l
 247+ 9753 1C               inc e
 248+ 9754 1A               ld a,(de)
 249+ 9755 AE               xor (hl)
 250+ 9756 77               ld (hl),a
 251+ 9757 2C               inc l
 252+ 9758 1C               inc e
 253+ 9759 1A               ld a,(de)
 254+ 975A AE               xor (hl)
 255+ 975B 77               ld (hl),a
 256+ 975C 13               inc de
 257+ 975D
 258+ 975D E1               pop hl
 259+ 975E
 260+ 975E 1A               ld a,(de)
 261+ 975F AE               xor (hl)
 262+ 9760 77               ld (hl),a
 263+ 9761 2C               inc l
 264+ 9762 1C               inc e
 265+ 9763 1A               ld a,(de)
 266+ 9764 AE               xor (hl)
 267+ 9765 77               ld (hl),a
 268+ 9766 2C               inc l
 269+ 9767 1C               inc e
 270+ 9768 1A               ld a,(de)
 271+ 9769 AE               xor (hl)
 272+ 976A 77               ld (hl),a
 273+ 976B 13               inc de
 274+ 976C
 275+ 976C E1               pop hl
 276+ 976D
 277+ 976D 1A               ld a,(de)
 278+ 976E AE               xor (hl)
 279+ 976F 77               ld (hl),a
 280+ 9770 2C               inc l
 281+ 9771 1C               inc e
 282+ 9772 1A               ld a,(de)
 283+ 9773 AE               xor (hl)
 284+ 9774 77               ld (hl),a
 285+ 9775 2C               inc l
 286+ 9776 1C               inc e
 287+ 9777 1A               ld a,(de)
 288+ 9778 AE               xor (hl)
 289+ 9779 77               ld (hl),a
 290+ 977A 13               inc de
 291+ 977B
 292+ 977B E1               pop hl
 293+ 977C
 294+ 977C 1A               ld a,(de)
 295+ 977D AE               xor (hl)
 296+ 977E 77               ld (hl),a
 297+ 977F 2C               inc l
 298+ 9780 1C               inc e
 299+ 9781 1A               ld a,(de)
 300+ 9782 AE               xor (hl)
 301+ 9783 77               ld (hl),a
 302+ 9784 2C               inc l
 303+ 9785 1C               inc e
 304+ 9786 1A               ld a,(de)
 305+ 9787 AE               xor (hl)
 306+ 9788 77               ld (hl),a
 307+ 9789 13               inc de
 308+ 978A
 309+ 978A ED 73 6E 8C      ld (Scanlines_album_SP),sp
 310+ 978E ED 7B 4C 8C      ld sp,(Stack)
 311+ 9792 C9               ret
 312+ 9793
 313+ 9793              Pinta_lento
 314+ 9793
 315+ 9793 E1           1 pop hl
 316+ 9794
 317+ 9794 1A               ld a,(de)
 318+ 9795 AE               xor (hl)
 319+ 9796 77               ld (hl),a
 320+ 9797 2C               inc l
 321+ 9798 1C               inc e
 322+ 9799 1A               ld a,(de)
 323+ 979A AE               xor (hl)
 324+ 979B 77               ld (hl),a
 325+ 979C 2C               inc l
 326+ 979D 1C               inc e
 327+ 979E 1A               ld a,(de)
 328+ 979F AE               xor (hl)
 329+ 97A0 77               ld (hl),a
 330+ 97A1 13               inc de
 331+ 97A2
 332+ 97A2 10 EF            djnz 1B
 333+ 97A4
 334+ 97A4 ED 73 6E 8C      ld (Scanlines_album_SP),sp
 335+ 97A8 ED 7B 4C 8C      ld sp,(Stack)
 336+ 97AC C9               ret
# file closed: Pinta_Sprites.asm
2216  97AD              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 97AD              ; ******************************************************************************************************************************************************************************************
   2+ 97AD              ;
   3+ 97AD              ; 26/06/23
   4+ 97AD              ;
   5+ 97AD              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 97AD
   7+ 97AD              Draw
   8+ 97AD
   9+ 97AD CD 53 9A     	call Prepara_draw
  10+ 97B0 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 97B1 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 97B2 28 05        	jr z,2F
  13+ 97B4
  14+ 97B4 3A 1C 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 97B7 18 0C        	jr 1F
  16+ 97B9
  17+ 97B9 2A 1A 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 97BC 22 0D 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 97BF CD 4B 99     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 97C2              ;													; _la esquina superior izquierda de la pantalla.
  21+ 97C2
  22+ 97C2 CD F2 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 97C5
  24+ 97C5 3A 0A 8C     1 ld a,(Ctrl_0)
  25+ 97C8 CB 6F        	bit 5,a
  26+ 97CA 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 97CC
  28+ 97CC CD E1 97     	call Comprueba_limite_horizontal
  29+ 97CF CD 71 98     	call Comprueba_limite_vertical
  30+ 97D2
  31+ 97D2              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 97D2              ; -----------------------
  33+ 97D2              ; -----------------------
  34+ 97D2              ; -----------------------
  35+ 97D2
  36+ 97D2 CD C7 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 97D5 CD FE 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 97D8
  39+ 97D8 3A 0A 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 97DB CB AF        	res 5,a											; _a ser de utilidad.
  41+ 97DD 32 0A 8C     	ld (Ctrl_0),a
  42+ 97E0
  43+ 97E0 C9           	ret
  44+ 97E1
  45+ 97E1              ; *******************************************************************************************************************************************************************************************
  46+ 97E1              ;	21/01/23
  47+ 97E1              ;
  48+ 97E1              ; 	Comprueba_limite_horizontal.
  49+ 97E1              ;
  50+ 97E1              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 97E1              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 97E1              ;
  53+ 97E1              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 97E1              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 97E1              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 97E1              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 97E1
  58+ 97E1
  59+ 97E1
  60+ 97E1 3A 0A 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 97E4 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 97E6 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 97E8 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 97EA 32 0A 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 97ED 18 09            jr 6F
  66+ 97EF CB 5F        1 bit 3,a
  67+ 97F1 28 0A            jr z,2F
  68+ 97F3 E6 F7            and $f7
  69+ 97F5 32 0A 8C         ld (Ctrl_0),a
  70+ 97F8 CD 4B 99     6 call Inicializacion
  71+ 97FB 18 5B            jr 5F
  72+ 97FD E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 97FE
  74+ 97FE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 97FE              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 97FE
  77+ 97FE EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 97FF 2A 1E 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9802 CD 4C 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9805 67           	ld h,a
  81+ 9806 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9807 CD 4C 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 980A 67           	ld h,a
  84+ 980B A7           	and a
  85+ 980C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 980E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 980F 3A 1C 8C     	ld a,(Cuad_objeto)
  88+ 9812 FE 02        	cp 2
  89+ 9814 38 1E        	jr c,3F
  90+ 9816 28 1C        	jr z,3F
  91+ 9818 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9819 28 23            jr z,7F
  93+ 981B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 981D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 981F E1           	pop hl
  96+ 9820
  97+ 9820              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9820              ; _para indicar con E="2" en caso necesario.
  99+ 9820
 100+ 9820 E5               push hl
 101+ 9821 C5               push bc
 102+ 9822 CD 4C 95     	call calcula_tercio
 103+ 9825 FE 01        	cp 1
 104+ 9827 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9829 CD 59 98         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 982C 28 26            jr z,9F
 107+ 982E 38 24            jr c,9F
 108+ 9830 1E 00        11 ld e,0
 109+ 9832 18 22            jr 8F
 110+ 9834 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9835 28 07        	jr z, 7F
 112+ 9837 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9839 1E 00         	ld e,0
 114+ 983B E1           	pop hl
 115+ 983C 18 04        	jr 4F
 116+ 983E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9840 18 15            jr 10F
 118+ 9842
 119+ 9842              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9842              ; _para indicar con E="2" en caso necesario.
 121+ 9842
 122+ 9842 E5           4 push hl
 123+ 9843 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9844 CD 4C 95     	call calcula_tercio
 125+ 9847 FE 01        	cp 1
 126+ 9849 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 984B CD 59 98         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 984E 28 04            jr z,9F
 129+ 9850 30 02            jr nc,9F
 130+ 9852 18 02        	jr 8F
 131+ 9854 1E 02        9 ld e,2
 132+ 9856 C1           8 pop bc
 133+ 9857 E1           10 pop hl
 134+ 9858 C9           5 ret
 135+ 9859
 136+ 9859              ; --------------------
 137+ 9859              ;
 138+ 9859              ; 25/08/22
 139+ 9859
 140+ 9859 CD 4C 95     Comprueba_centro call calcula_tercio
 141+ 985C 67               ld h,a
 142+ 985D 08           	ex af,af
 143+ 985E FE 02        	cp 2
 144+ 9860 38 07        	jr c,1F
 145+ 9862 28 05        	jr z,1F
 146+ 9864 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9867 18 03        	jr 2F
 148+ 9869 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 986C 08           2 ex af,af
 150+ 986D A7               and a
 151+ 986E ED 42            sbc hl,bc
 152+ 9870 C9               ret
 153+ 9871
 154+ 9871              ; *********************************************************************************************************************************************************************************************
 155+ 9871              ;
 156+ 9871              ;   16/8/22
 157+ 9871              ;
 158+ 9871              ;	Comprueba_limite_vertical
 159+ 9871              ;
 160+ 9871              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9871              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9871              ;
 163+ 9871
 164+ 9871 2A 0D 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9874 7D           	ld a,l
 166+ 9875 E6 1F        	and $1F
 167+ 9877 57           	ld d,a
 168+ 9878 3A 20 8C     	ld a,(Limite_vertical)
 169+ 987B BA           	cp d 											; Límite - Posición.
 170+ 987C 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 987D 3A 1C 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9880 CB 47        	bit 0,a
 173+ 9882 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9884
 175+ 9884              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9884
 177+ 9884 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9885 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9887
 180+ 9887              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9887              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9887
 183+ 9887 3A FE 8B         ld a,(Coordenada_X)
 184+ 988A 16 0F            ld d,Centro_izquierda
 185+ 988C A7               and a
 186+ 988D 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 988E 28 1E            jr z,3F
 188+ 9890 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9892              ;                                                    ; _salimos sin modificar nada.
 190+ 9892 18 0E            jr 2F
 191+ 9894 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9895 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9897
 194+ 9897              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9897              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9897
 197+ 9897 3A FE 8B         ld a,(Coordenada_X)
 198+ 989A 16 10            ld d,Centro_derecha
 199+ 989C A7               and a
 200+ 989D 92               sub d
 201+ 989E 28 0E            jr z,3F
 202+ 98A0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 98A2              ;                                                    ; _salimos sin modificar nada.
 204+ 98A2 CB 43        2 bit 0,e
 205+ 98A4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 98A6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 98A7 CD 3B 99         call Modificaccionne
 208+ 98AA C1           	pop bc
 209+ 98AB CD 4B 99         call Inicializacion
 210+ 98AE C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 98AF
 212+ 98AF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 98AF
 214+ 98AF C5           4 push bc
 215+ 98B0 01 0C 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 98B3 0A           	ld a,(bc)
 217+ 98B4 3D           	dec a
 218+ 98B5 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 98B6 7D           	ld a,l
 220+ 98B7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 98B8 CB 47        	bit 0,a
 222+ 98BA 28 03        	jr z,5F
 223+ 98BC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 98BD 18 2E        	jr 7F
 225+ 98BF
 226+ 98BF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 98BF
 228+ 98BF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 98C0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 98C1 3A 0A 8C     	ld a,(Ctrl_0)
 231+ 98C4 CB 4F        	bit 1,a
 232+ 98C6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 98C8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 98C9
 235+ 98C9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 98C9
 237+ 98C9 1C               inc e
 238+ 98CA 1D               dec e
 239+ 98CB 20 07            jr nz,12F
 240+ 98CD 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 98CE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 98CF 22 0D 8C     	ld (Posicion_actual),hl
 243+ 98D2 18 44        13 jr 9F
 244+ 98D4 CB 43        12 bit 0,e
 245+ 98D6 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 98D8              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 98D8 C1           	pop bc
 248+ 98D9 18 D3        	jr 3B
 249+ 98DB 80           14 add b
 250+ 98DC 6F               ld l,a
 251+ 98DD 22 0D 8C     	ld (Posicion_actual),hl
 252+ 98E0 CD 3B 99         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 98E3 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 98E5 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 98E7 32 0A 8C         ld (Ctrl_0),a
 256+ 98EA F1           	pop af
 257+ 98EB 18 2B        	jr 9F
 258+ 98ED
 259+ 98ED              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 98ED
 261+ 98ED F5           7 push af
 262+ 98EE 3A 0A 8C     	ld a,(Ctrl_0)
 263+ 98F1 CB 47        	bit 0,a
 264+ 98F3 20 1D        	jr nz,8F
 265+ 98F5 F1           	pop af
 266+ 98F6
 267+ 98F6              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 98F6
 269+ 98F6 1C           	inc e
 270+ 98F7 1D               dec e
 271+ 98F8 20 07            jr nz,10F
 272+ 98FA 90           	sub b
 273+ 98FB 6F               ld l,a
 274+ 98FC 22 0D 8C     	ld (Posicion_actual),hl
 275+ 98FF 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9901              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9901 CB 43        10 bit 0,e
 278+ 9903 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9905              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9905 C1           	pop bc
 281+ 9906 18 A6        	jr 3B
 282+ 9908 90           16 sub b
 283+ 9909 6F               ld l,a
 284+ 990A 22 0D 8C     	ld (Posicion_actual),hl
 285+ 990D CD 3B 99         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9910 18 06            jr 9F
 287+ 9912 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9914 32 0A 8C         ld (Ctrl_0),a
 289+ 9917 F1           	pop af
 290+ 9918 C1           9 pop bc
 291+ 9919 1E 00        	ld e,0
 292+ 991B CD 4B 99         call Inicializacion
 293+ 991E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 991F 08           	ex af,af
 295+ 9920 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9921 18 8B            jr 3B
 297+ 9923
 298+ 9923              ; --------------------
 299+ 9923
 300+ 9923 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9925 CD 6E 9A     1 call PreviousScan
 302+ 9928 10 FB            djnz 1B
 303+ 992A 22 0D 8C     	ld (Posicion_actual),hl
 304+ 992D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 992E C9           	ret
 306+ 992F
 307+ 992F              ; --------------------
 308+ 992F
 309+ 992F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9931 CD 5F 9A     1 call NextScan
 311+ 9934 10 FB            djnz 1B
 312+ 9936 22 0D 8C     	ld (Posicion_actual),hl
 313+ 9939 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 993A C9           	ret
 315+ 993B
 316+ 993B              ; --------------------
 317+ 993B              ;
 318+ 993B              ;	22/01/23
 319+ 993B              ;
 320+ 993B              ;	E="1". Hemos cambiado de cuadrante.
 321+ 993B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 993B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 993B
 324+ 993B
 325+ 993B              Modificaccionne
 326+ 993B
 327+ 993B 3A 1C 8C     	ld a,(Cuad_objeto)
 328+ 993E FE 02        	cp 2
 329+ 9940 CC 23 99         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9943 DC 23 99         call c,Modifica_Pos_actual
 331+ 9946 C8           	ret z
 332+ 9947 CD 2F 99         call Modifica_Pos_actual2
 333+ 994A C9               ret
 334+ 994B
 335+ 994B              ; *************************************************************************************************************************************************************************************************
 336+ 994B              ;
 337+ 994B              ;	13/8/22
 338+ 994B              ;
 339+ 994B              ;	Inicializacion
 340+ 994B              ;
 341+ 994B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 994B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 994B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 994B              ;
 345+ 994B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 994B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 994B              ;	_ desaparece/aparece.
 348+ 994B
 349+ 994B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 994B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 994B              ;
 352+ 994B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 994B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 994B              ; 		   [E] ="0"
 355+ 994B
 356+ 994B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 994B
 358+ 994B CD 4C 95     Inicializacion call calcula_tercio
 359+ 994E 28 36        	jr z,primit
 360+ 9950 E6 02        	and 2
 361+ 9952 20 07        	jr nz,segmit
 362+ 9954 7D           	ld a,l
 363+ 9955 FE 7F        	cp $7f
 364+ 9957 38 2D        	jr c,primit
 365+ 9959 28 2B        	jr z,primit
 366+ 995B CD C1 99     segmit call column
 367+ 995E 38 13        	jr c,tercuad
 368+ 9960 3E 04        cuarcuad ld a,4
 369+ 9962 32 1C 8C     	ld (Cuad_objeto),a
 370+ 9965 21 20 48     	ld hl,$4820
 371+ 9968 22 1E 8C     	ld (Limite_horizontal),hl
 372+ 996B 21 20 8C     	ld hl,Limite_vertical
 373+ 996E 36 0D        	ld (hl),$0d
 374+ 9970 08           	ex af,af
 375+ 9971 18 3C        	jr 1F
 376+ 9973              tercuad
 377+ 9973 3E 03        	ld a,3
 378+ 9975 32 1C 8C     	ld (Cuad_objeto),a
 379+ 9978 21 20 48     	ld hl,$4820
 380+ 997B 22 1E 8C     	ld (Limite_horizontal),hl
 381+ 997E 21 20 8C     	ld hl,Limite_vertical
 382+ 9981 36 12        	ld (hl),$12
 383+ 9983 08           	ex af,af
 384+ 9984 18 29        	jr 1F
 385+ 9986 CD C1 99     primit call column
 386+ 9989 38 13        	jr c, primcuad
 387+ 998B              segcuad
 388+ 998B 3E 02        	ld a,2
 389+ 998D 32 1C 8C     	ld (Cuad_objeto),a
 390+ 9990 21 C0 4F     	ld hl,$4fc0
 391+ 9993 22 1E 8C     	ld (Limite_horizontal),hl
 392+ 9996 21 20 8C     	ld hl,Limite_vertical
 393+ 9999 36 0D        	ld (hl),$0d
 394+ 999B 08           	ex af,af
 395+ 999C 18 11        	jr 1F
 396+ 999E              primcuad
 397+ 999E 3E 01        	ld a,1
 398+ 99A0 32 1C 8C     	ld (Cuad_objeto),a
 399+ 99A3 21 C0 4F     	ld hl,$4fc0
 400+ 99A6 22 1E 8C     	ld (Limite_horizontal),hl
 401+ 99A9 21 20 8C     	ld hl,Limite_vertical
 402+ 99AC 36 12        	ld (hl),$12
 403+ 99AE 08           	ex af,af
 404+ 99AF
 405+ 99AF C5           1 push bc
 406+ 99B0 E5           	push hl
 407+ 99B1 D5           	push de
 408+ 99B2
 409+ 99B2 2A 0D 8C     	ld hl,(Posicion_actual)
 410+ 99B5 CD 6A 95     	call Genera_coordenadas
 411+ 99B8
 412+ 99B8 D1           	pop de
 413+ 99B9 E1           	pop hl
 414+ 99BA C1           	pop bc
 415+ 99BB
 416+ 99BB 21 0A 8C     	ld hl,Ctrl_0
 417+ 99BE CB EE        	set 5,(hl)
 418+ 99C0 C9           	ret
 419+ 99C1
 420+ 99C1              ; ------------------------------------------------------------------------------------------------------------------
 421+ 99C1
 422+ 99C1              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 99C1              ;
 424+ 99C1              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 99C1
 426+ 99C1 7D           column ld a,l
 427+ 99C2 E6 1F        	and $1f
 428+ 99C4 FE 10         	cp $10
 429+ 99C6 C9            	ret
 430+ 99C7
 431+ 99C7              ; --------------------------------------------------------------------------------------------------------------------
 432+ 99C7              ;
 433+ 99C7              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 99C7              ;
 435+ 99C7              ; 14/12/22
 436+ 99C7              ;
 437+ 99C7              ;	Modifica: A y BC.
 438+ 99C7
 439+ 99C7 3A 1C 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 99CA E6 01        	and 1
 441+ 99CC 28 17        	jr z,1F
 442+ 99CE
 443+ 99CE              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 99CE
 445+ 99CE 3A FE 8B     	ld a,(Coordenada_X)
 446+ 99D1 47           	ld b,a
 447+ 99D2 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 99D3 79           	ld a,c
 449+ 99D4 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 99D5 38 08        	jr c,2F
 451+ 99D7 47           	ld b,a
 452+ 99D8 79           	ld a,c
 453+ 99D9 90           	sub b
 454+ 99DA 32 1D 8C     	ld (Columnas),a
 455+ 99DD 18 1B        	jr 4F
 456+ 99DF 79           2 ld a,c
 457+ 99E0 32 1D 8C     	ld (Columnas),a
 458+ 99E3 18 15        	jr 4F
 459+ 99E5
 460+ 99E5              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 99E5
 462+ 99E5 3A FE 8B     1 ld a,(Coordenada_X)
 463+ 99E8 81           	add c
 464+ 99E9 3D           	dec a
 465+ 99EA D6 1F        	sub $1f
 466+ 99EC 38 08        	jr c,3F
 467+ 99EE 47           	ld b,a
 468+ 99EF 79           	ld a,c
 469+ 99F0 90           	sub b
 470+ 99F1 32 1D 8C     	ld (Columnas),a
 471+ 99F4 18 04        	jr 4F
 472+ 99F6 79           3 ld a,c
 473+ 99F7 32 1D 8C     	ld (Columnas),a
 474+ 99FA D9           4 exx
 475+ 99FB 4F           	ld c,a
 476+ 99FC D9           	exx
 477+ 99FD C9            ret
 478+ 99FE
 479+ 99FE              ; --------------------------------------------------------------------------------------------------------------------
 480+ 99FE              ;
 481+ 99FE              ;   19/7/23
 482+ 99FE              ;
 483+ 99FE              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 99FE              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 99FE              ;
 486+ 99FE              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 99FE              ;			HL e IY Contienen (Puntero_objeto).
 488+ 99FE              ;
 489+ 99FE              ;	DESTRUYE: HL,B Y A.
 490+ 99FE
 491+ 99FE 3A 1C 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9A01 FE 02        	cp 2
 493+ 9A03 38 18        	jr c,1F
 494+ 9A05 28 16        	jr z,1F
 495+ 9A07 E6 01        	and 1
 496+ 9A09 28 0D        	jr z,3F
 497+ 9A0B
 498+ 9A0B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9A0B
 500+ 9A0B CD 47 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9A0E
 502+ 9A0E 7D           9 ld a,l
 503+ 9A0F E6 1F        	and $1f
 504+ 9A11 28 2A        	jr z,7F
 505+ 9A13 2B           	dec hl
 506+ 9A14 10 F8        	djnz 9B
 507+ 9A16 18 25        	jr 7F
 508+ 9A18
 509+ 9A18              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9A18
 511+ 9A18 2A 0D 8C     3 ld hl,(Posicion_actual)
 512+ 9A1B 18 20        	jr 7F
 513+ 9A1D
 514+ 9A1D 28 14        1 jr z,2F
 515+ 9A1F
 516+ 9A1F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9A1F
 518+ 9A1F CD 47 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9A22
 520+ 9A22 7D           4 ld a,l
 521+ 9A23 E6 1F        	and $1f
 522+ 9A25 28 03        	jr z,6F
 523+ 9A27 2B           	dec hl
 524+ 9A28 10 F8        	djnz 4B
 525+ 9A2A 06 0F        6 ld b,15
 526+ 9A2C CD 6E 9A     5 call PreviousScan
 527+ 9A2F 10 FB        	djnz 5B
 528+ 9A31 18 0A        	jr 7F
 529+ 9A33
 530+ 9A33              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9A33
 532+ 9A33 CD 47 9A     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9A36 06 0F        	ld b,15
 534+ 9A38 CD 6E 9A     8 call PreviousScan
 535+ 9A3B 10 FB        	djnz 8B
 536+ 9A3D
 537+ 9A3D E5           7 push hl
 538+ 9A3E DD E1        	pop ix
 539+ 9A40
 540+ 9A40 2A 0F 8C     	ld hl,(Puntero_objeto)
 541+ 9A43 E5           	push hl
 542+ 9A44 FD E1        	pop iy
 543+ 9A46
 544+ 9A46 C9           	ret
 545+ 9A47
 546+ 9A47              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9A47              ;
 548+ 9A47              ;	2/1/23
 549+ 9A47              ;
 550+ 9A47              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9A47              ;
 552+ 9A47              ;	Tras esta rutina tenemos:
 553+ 9A47              ;
 554+ 9A47              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9A47              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9A47              ;
 557+ 9A47              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9A47
 559+ 9A47 2A 0D 8C     Operandos ld hl,(Posicion_actual)
 560+ 9A4A 3A 1D 8C     	ld a,(Columnas)
 561+ 9A4D 3D           	dec a
 562+ 9A4E 20 01        	jr nz,1F
 563+ 9A50 3C           	inc a
 564+ 9A51 47           1 ld b,a
 565+ 9A52 C9           	ret
 566+ 9A53
 567+ 9A53              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9A53              ;
 569+ 9A53              ;	Prepara_draw
 570+ 9A53              ;
 571+ 9A53              ;	Es una rutina de carga.
 572+ 9A53              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9A53              ;
 574+ 9A53              ;	FUNCIONAMIENTO:
 575+ 9A53              ;
 576+ 9A53              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9A53              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9A53              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9A53              ;
 580+ 9A53              ;	DESTRUYE:
 581+ 9A53              ;
 582+ 9A53              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9A53
 584+ 9A53 21 0B 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9A56 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9A57 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9A58 4E           	ld c,(hl)
 588+ 9A59 2A 0D 8C     	ld hl,(Posicion_actual)
 589+ 9A5C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9A5E C9           	ret
 591+ 9A5F
 592+ 9A5F              ;----------------------------------------------------------------------------------------------------------------
 593+ 9A5F              ;
 594+ 9A5F              ;	5/08/22
 595+ 9A5F              ;
 596+ 9A5F              ;   NextScan.
 597+ 9A5F              ;
 598+ 9A5F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9A5F              ;
 600+ 9A5F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9A5F              ;
 602+ 9A5F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9A5F              ;
 604+ 9A5F              ;       DESTRUIDOS: AF y HL !!!
 605+ 9A5F              ;
 606+ 9A5F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9A5F              ;
 608+ 9A5F
 609+ 9A5F 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9A60 7C               ld a,h
 611+ 9A61 E6 07            and 7
 612+ 9A63 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9A64
 614+ 9A64 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9A65 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9A67 6F               ld l,a
 617+ 9A68 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9A69
 619+ 9A69 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9A6A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9A6C 67               ld h,a
 622+ 9A6D C9               ret
 623+ 9A6E
 624+ 9A6E              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A6E              ;
 626+ 9A6E              ;	5/08/22
 627+ 9A6E              ;
 628+ 9A6E              ;   PreviousScan.
 629+ 9A6E              ;
 630+ 9A6E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A6E              ;
 632+ 9A6E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A6E              ;
 634+ 9A6E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A6E              ;
 636+ 9A6E              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A6E              ;
 638+ 9A6E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A6E              ;
 640+ 9A6E
 641+ 9A6E 7C           PreviousScan ld a,h
 642+ 9A6F 25               dec h               ; Dec H.
 643+ 9A70 E6 07            and 7
 644+ 9A72 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A73
 646+ 9A73 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A74 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A76 6F               ld l,a
 649+ 9A77 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A78
 651+ 9A78 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A79 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A7B 67               ld h,a
 654+ 9A7C C9               ret
 655+ 9A7D
 656+ 9A7D
 657+ 9A7D
 658+ 9A7D
 659+ 9A7D
 660+ 9A7D
 661+ 9A7D
 662+ 9A7D
 663+ 9A7D
 664+ 9A7D
 665+ 9A7D
 666+ 9A7D
# file closed: Draw_XOR.asm
2217  9A7D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A7D
   2+ 9A7D              ; ******************************************************************************************************************************************************************************************
   3+ 9A7D              ;
   4+ 9A7D              ;   20/05/23
   5+ 9A7D              ;
   6+ 9A7D              ;	Recompone_posicion_inicio
   7+ 9A7D              ;
   8+ 9A7D              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A7D              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A7D              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A7D              ;	_ a una u otra rutina.
  12+ 9A7D
  13+ 9A7D              Recompone_posicion_inicio
  14+ 9A7D
  15+ 9A7D 2A 1A 8C     	ld hl,(Posicion_inicio)
  16+ 9A80 7D           	ld a,l
  17+ 9A81 E6 1F        	and $1f
  18+ 9A83 28 16        	jr z,1F
  19+ 9A85
  20+ 9A85 FE 1F        	cp $1f
  21+ 9A87 28 0D        	jr z,3F
  22+ 9A89
  23+ 9A89 21 09 8C     	ld hl,Ctrl_2
  24+ 9A8C CB C6        	set 0,(hl)
  25+ 9A8E 2A 0F 8C     	ld hl,(Puntero_objeto)
  26+ 9A91 22 3B 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A94 18 08        	jr 2F
  28+ 9A96
  29+ 9A96 CD 44 9C     3 call Mov_left
  30+ 9A99 18 03        	jr 2F
  31+ 9A9B
  32+ 9A9B CD 21 9B     1 call Mov_right
  33+ 9A9E 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9AA1 22 0F 8C     	ld (Puntero_objeto),hl
  35+ 9AA4 C9           	ret
  36+ 9AA5
  37+ 9AA5              ; ******************************************************************************************************************************************************************************************
  38+ 9AA5              ;
  39+ 9AA5              ;   27/05/23
  40+ 9AA5              ;
  41+ 9AA5              ;	Mov_down
  42+ 9AA5              ;
  43+ 9AA5              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9AA5              ;
  45+ 9AA5              ;
  46+ 9AA5              Mov_down
  47+ 9AA5
  48+ 9AA5 CD 0F 9B     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9AA8              ;																	; _ repone (Puntero_objeto).
  50+ 9AA8 21 0A 8C     	ld hl,Ctrl_0
  51+ 9AAB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9AAD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9AAD              ; 																	; _ en el caso de que no lo haya.
  54+ 9AAD 3A 25 8C     	ld a,(Vel_down)
  55+ 9AB0 47           	ld b,a
  56+ 9AB1 2A 0D 8C         ld hl,(Posicion_actual)
  57+ 9AB4 CD 4C 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9AB7 E6 02        	and 2
  59+ 9AB9 28 17        	jr z,1F
  60+ 9ABB
  61+ 9ABB              ; Nos encontramos en el último tercio de pantalla.
  62+ 9ABB              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9ABB
  64+ 9ABB 7C           	ld a,h
  65+ 9ABC FE 57        	cp $57
  66+ 9ABE 20 12        	jr nz,1F
  67+ 9AC0
  68+ 9AC0 7D           	ld a,l
  69+ 9AC1 C6 20        	add $20
  70+ 9AC3 30 0D        	jr nc,1F
  71+ 9AC5
  72+ 9AC5              ; ------------------------------
  73+ 9AC5              ;
  74+ 9AC5              ;	12/01/24
  75+ 9AC5
  76+ 9AC5              ;	call Reaparece_arriba
  77+ 9AC5 CD D1 9D     	call Reinicio
  78+ 9AC8
  79+ 9AC8              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9AC8
  81+ 9AC8 3A 74 8C     	ld a,(Ctrl_3)
  82+ 9ACB CB CF        	set 1,a
  83+ 9ACD 32 74 8C     	ld (Ctrl_3),a
  84+ 9AD0
  85+ 9AD0 18 08        	jr 3F
  86+ 9AD2              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9AD2              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9AD2              ; ------------------------------
  89+ 9AD2
  90+ 9AD2 CD 5F 9A     1 call NextScan
  91+ 9AD5 22 0D 8C     	ld (Posicion_actual),hl
  92+ 9AD8 10 DA            djnz 2B
  93+ 9ADA CD 6A 95     3 call Genera_coordenadas
  94+ 9ADD C9           	ret
  95+ 9ADE
  96+ 9ADE              ; ******************************************************************************************************************************************************************************************
  97+ 9ADE              ;
  98+ 9ADE              ;   27/05/23
  99+ 9ADE              ;
 100+ 9ADE              ;	Mov_up
 101+ 9ADE              ;
 102+ 9ADE              ; 	Mueve el Sprite hacia arriba.
 103+ 9ADE              ;
 104+ 9ADE              ;
 105+ 9ADE              Mov_up
 106+ 9ADE
 107+ 9ADE CD 0F 9B     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9AE1              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9AE1 21 0A 8C     	ld hl,Ctrl_0
 110+ 9AE4 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9AE6              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9AE6              ; 																		; _ en el caso de que no lo haya.
 113+ 9AE6 3A 24 8C     	ld a,(Vel_up)
 114+ 9AE9 47           	ld b,a
 115+ 9AEA 2A 0D 8C     	ld hl,(Posicion_actual)
 116+ 9AED CD 4C 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9AF0 A7           	and a
 118+ 9AF1 20 10        	jr nz,1F
 119+ 9AF3
 120+ 9AF3              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9AF3              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9AF3
 123+ 9AF3 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9AF4 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9AF6 20 0B            jr nz,1F
 126+ 9AF8 7D               ld a,l
 127+ 9AF9 D6 20            sub $20
 128+ 9AFB 30 06            jr nc,1F
 129+ 9AFD 25               dec h
 130+ 9AFE
 131+ 9AFE              ; -----------------------------
 132+ 9AFE CD B2 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9B01              ;	call Reinicio
 134+ 9B01              ; -----------------------------
 135+ 9B01
 136+ 9B01 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9B03 CD 6E 9A     1 call PreviousScan
 138+ 9B06 22 0D 8C     	ld (Posicion_actual),hl
 139+ 9B09 10 E2            djnz 3B
 140+ 9B0B CD 6A 95     2 call Genera_coordenadas
 141+ 9B0E C9           	ret
 142+ 9B0F
 143+ 9B0F              ; -----------------------------
 144+ 9B0F              ;
 145+ 9B0F              ;	27/5/23
 146+ 9B0F              ;
 147+ 9B0F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9B0F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9B0F              ;
 150+ 9B0F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9B0F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9B0F              ;
 153+ 9B0F              ;	Modifica: A y (Puntero_objeto).
 154+ 9B0F
 155+ 9B0F 3A 09 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9B12 CB 47        	bit 0,a
 157+ 9B14 C8           	ret z
 158+ 9B15 CB 87        	res 0,a
 159+ 9B17 32 09 8C     	ld (Ctrl_2),a
 160+ 9B1A 2A 3B 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9B1D 22 0F 8C     	ld (Puntero_objeto),hl
 162+ 9B20 C9           	ret
 163+ 9B21
 164+ 9B21              ; ******************************************************************************************************************************************************************************************
 165+ 9B21              ;
 166+ 9B21              ;	19/10/22
 167+ 9B21              ;
 168+ 9B21              ;	Mov_right.
 169+ 9B21              ;
 170+ 9B21              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9B21              ;
 172+ 9B21
 173+ 9B21 3A 0A 8C     Mov_right ld a,(Ctrl_0)
 174+ 9B24 CB 77        	bit 6,a
 175+ 9B26 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9B28
 177+ 9B28 CD 60 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9B2B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9B2C
 180+ 9B2C 21 0A 8C     	ld hl,Ctrl_0
 181+ 9B2F CB E6        	set 4,(hl)
 182+ 9B31 18 52        	jr 8F
 183+ 9B33
 184+ 9B33 21 0A 8C     10 ld hl,Ctrl_0
 185+ 9B36 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9B38              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9B38              ; 																	; _ en el caso de que no lo haya.
 188+ 9B38 3A FE 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9B3B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9B3D 20 46        	jr nz,8F
 191+ 9B3F
 192+ 9B3F 3A 11 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9B42 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9B43 28 40        	jr z,8F
 195+ 9B45
 196+ 9B45              ; ---------- ---------- ----------
 197+ 9B45              ;
 198+ 9B45              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9B45
 200+ 9B45 3A 23 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9B48 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9B4A 28 11        	jr z,1F
 203+ 9B4C 38 06        	jr c,6F
 204+ 9B4E FE 04        	cp 4
 205+ 9B50 28 14        	jr z,7F
 206+ 9B52 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9B54
 208+ 9B54              ; ---------- ---------- ----------
 209+ 9B54              ;
 210+ 9B54              ; Perfiles de velocidad
 211+ 9B54              ;
 212+ 9B54
 213+ 9B54 3A 11 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9B57 FE FE        	cp $fe
 215+ 9B59 20 2A        	jr nz,8F
 216+ 9B5B 18 10        	jr 3F
 217+ 9B5D 3A 11 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9B60 FE FD        	cp $fd
 219+ 9B62 20 21        	jr nz,8F
 220+ 9B64 18 07        	jr 3F
 221+ 9B66 3A 11 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9B69 FE FB        	cp $fb
 223+ 9B6B 20 18        	jr nz,8F
 224+ 9B6D
 225+ 9B6D              ; ---------- ---------- ----------
 226+ 9B6D
 227+ 9B6D              3
 228+ 9B6D CD A0 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B70              ;	call Reinicio
 230+ 9B70
 231+ 9B70              ; ---------- ---------- ----------
 232+ 9B70              ;
 233+ 9B70              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B70
 235+ 9B70 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B72 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B73 CD 8C 9B     	call DESPLZ_DER
 238+ 9B76 C1           	pop bc
 239+ 9B77 10 F9        	djnz 5B
 240+ 9B79 2A 0D 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B7C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B7D 22 0D 8C     	ld (Posicion_actual),hl
 243+ 9B80 CD 6A 95     	call Genera_coordenadas
 244+ 9B83 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B85
 246+ 9B85              ; ---------- ---------- ----------
 247+ 9B85
 248+ 9B85 2A 0D 8C     8 ld hl,(Posicion_actual)
 249+ 9B88 CD 8C 9B     	call DESPLZ_DER
 250+ 9B8B C9           2 ret
 251+ 9B8C
 252+ 9B8C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B8C              ;
 254+ 9B8C              ;	22/9/22
 255+ 9B8C              ;
 256+ 9B8C
 257+ 9B8C CD 9B 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B8F CD E7 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B92 CD 10 9C         call Ciclo_completo
 260+ 9B95 21 0A 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B98 CB FE        	set 7,(hl)
 262+ 9B9A C9           	ret
 263+ 9B9B
 264+ 9B9B              ; ******************************************************************************************************************************************************************************************
 265+ 9B9B              ;	15/02/23
 266+ 9B9B              ;
 267+ 9B9B
 268+ 9B9B 3A 23 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B9E 47           	ld b,a
 270+ 9B9F 2A 16 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9BA2 23           1 inc hl
 272+ 9BA3 23           	inc hl
 273+ 9BA4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9BA6 22 16 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9BA9 CD 55 91     	call Extrae_address
 276+ 9BAC 22 0F 8C     	ld (Puntero_objeto),hl
 277+ 9BAF
 278+ 9BAF              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9BAF
 280+ 9BAF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9BAF              ; Cuántos movimientos hemos hecho ??
 282+ 9BAF              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9BAF
 284+ 9BAF 2A 12 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9BB2 EB           	ex de,hl
 286+ 9BB3 A7           	and a
 287+ 9BB4 ED 52        	sbc hl,de
 288+ 9BB6 CB 3D        	srl l
 289+ 9BB8 3E 08        6 ld a,8
 290+ 9BBA 95           	sub l
 291+ 9BBB 30 1E        	jr nc,3F
 292+ 9BBD
 293+ 9BBD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9BBD              ; B="0".
 295+ 9BBD
 296+ 9BBD 04           4 inc b
 297+ 9BBE 3C           	inc a
 298+ 9BBF 20 FC        	jr nz,4B
 299+ 9BC1 78           	ld a,b
 300+ 9BC2 08           	ex af,af
 301+ 9BC3 2A 12 8C     	ld hl,(Indice_Sprite_der)
 302+ 9BC6 23           5 inc hl
 303+ 9BC7 23           	inc hl
 304+ 9BC8 10 FC        	djnz 5B
 305+ 9BCA 22 16 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9BCD CD 55 91     	call Extrae_address
 307+ 9BD0 22 0F 8C     	ld (Puntero_objeto),hl
 308+ 9BD3
 309+ 9BD3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9BD3              ; _(Posicion_actual).
 311+ 9BD3
 312+ 9BD3 21 0D 8C     	ld hl,Posicion_actual
 313+ 9BD6 34           	inc (hl)
 314+ 9BD7 08               ex af,af
 315+ 9BD8 6F           	ld l,a
 316+ 9BD9 18 DD        	jr 6B
 317+ 9BDB
 318+ 9BDB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9BDB
 320+ 9BDB 47           3 ld b,a
 321+ 9BDC 2A 14 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9BDF 23           2 inc hl
 323+ 9BE0 23           	inc hl
 324+ 9BE1 10 FC        	djnz 2B
 325+ 9BE3 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9BE6 C9           8 ret
 327+ 9BE7
 328+ 9BE7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9BE7              ;
 330+ 9BE7              ;	24/7/22
 331+ 9BE7              ;
 332+ 9BE7              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9BE7              ;
 334+ 9BE7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9BE7              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9BE7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9BE7
 338+ 9BE7 3A 11 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9BEA A7           	and a
 340+ 9BEB 20 1F        	jr nz,1F
 341+ 9BED D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9BEF 32 11 8C         ld (CTRL_DESPLZ),a
 343+ 9BF2
 344+ 9BF2 21 0C 8C     	ld hl,Columns
 345+ 9BF5 34           	inc (hl)
 346+ 9BF6 3A 1C 8C     	ld a,(Cuad_objeto)
 347+ 9BF9 E6 01        	and 1
 348+ 9BFB 28 0F        	jr z,1F
 349+ 9BFD 2A 0D 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9C00 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9C01 22 0D 8C     	ld (Posicion_actual),hl
 352+ 9C04 CD 6A 95     	call Genera_coordenadas
 353+ 9C07 CD 6C 9D     	call Inc_CTRL_DESPLZ
 354+ 9C0A 18 03        	jr 2F
 355+ 9C0C CD 6C 9D     1 call Inc_CTRL_DESPLZ
 356+ 9C0F C9           2 ret
 357+ 9C10
 358+ 9C10              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9C10              ;
 360+ 9C10              ;	24/7/22
 361+ 9C10              ;
 362+ 9C10              ;	Ciclo_completo.
 363+ 9C10              ;
 364+ 9C10              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9C10              ;
 366+ 9C10              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9C10              ; 	Decrementamos (Columns).
 368+ 9C10              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9C10              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9C10
 371+ 9C10
 372+ 9C10 3A 11 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9C13 FE FF        	cp $ff
 374+ 9C15 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9C17 E6 F0        	and $f0
 376+ 9C19 20 28        	jr nz,3F
 377+ 9C1B
 378+ 9C1B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9C1B
 380+ 9C1B 3A 11 8C     	ld a,(CTRL_DESPLZ)
 381+ 9C1E 47           	ld b,a
 382+ 9C1F 3E F8        	ld a,$f8
 383+ 9C21 80           	add b
 384+ 9C22 32 11 8C     	ld (CTRL_DESPLZ),a
 385+ 9C25 18 1C        	jr 3F
 386+ 9C27 21 0C 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9C2A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9C2B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9C2C 32 11 8C     	ld (CTRL_DESPLZ),a
 390+ 9C2F 3A 1C 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9C32 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9C34 20 0A        	jr nz,2F
 393+ 9C36 2A 0D 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9C39 23           	inc hl
 395+ 9C3A 22 0D 8C     	ld (Posicion_actual),hl
 396+ 9C3D CD 6A 95     	call Genera_coordenadas
 397+ 9C40
 398+ 9C40              ; Inicia el puntero de Sprite.
 399+ 9C40
 400+ 9C40 CD 6A 91     2 call Inicia_puntero_objeto_der
 401+ 9C43 C9           3 ret
 402+ 9C44
 403+ 9C44              ; ******************************************************************************************************************************************************************************************
 404+ 9C44              ;
 405+ 9C44              ;	15/02/23
 406+ 9C44              ;
 407+ 9C44              ;	Mov_left.
 408+ 9C44              ;
 409+ 9C44              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9C44              ;
 411+ 9C44              Mov_left
 412+ 9C44
 413+ 9C44 21 0A 8C     	ld hl,Ctrl_0
 414+ 9C47 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9C49              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9C49              ; 																	; _ en el caso de que no lo haya.
 417+ 9C49 3A 0A 8C     	ld a,(Ctrl_0)
 418+ 9C4C CB 77        	bit 6,a
 419+ 9C4E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9C50
 421+ 9C50 CD 66 9D     	call Stop_Amadeus_left
 422+ 9C53 C8           	ret z
 423+ 9C54 20 4A        	jr nz,8F
 424+ 9C56
 425+ 9C56 3A FE 8B     11 ld a,(Coordenada_X)
 426+ 9C59 A7           	and a
 427+ 9C5A 20 44        	jr nz,8F
 428+ 9C5C
 429+ 9C5C 3A 11 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9C5F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9C60 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9C62
 433+ 9C62              ; ---------- ---------- ----------
 434+ 9C62
 435+ 9C62 3A 22 8C     	ld a,(Vel_left)
 436+ 9C65 FE 02        	cp 2
 437+ 9C67 28 0F        	jr z,1F
 438+ 9C69 38 04        	jr c,6F
 439+ 9C6B FE 04        	cp 4
 440+ 9C6D 28 12        	jr z,7F
 441+ 9C6F
 442+ 9C6F              ; ---------- ---------- ----------
 443+ 9C6F
 444+ 9C6F 3A 11 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9C72 FE F8        	cp $f8
 446+ 9C74 20 2A        	jr nz,8F
 447+ 9C76 18 10        	jr 4F
 448+ 9C78 3A 11 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C7B FE F9        	cp $f9
 450+ 9C7D 20 21        	jr nz,8F
 451+ 9C7F 18 07        	jr 4F
 452+ 9C81 3A 11 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C84 FE FB        	cp $fb
 454+ 9C86 20 18        	jr nz,8F
 455+ 9C88
 456+ 9C88              ; ---------- ---------- ----------
 457+ 9C88
 458+ 9C88              4
 459+ 9C88 CD 8E 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C8B              ;	call Reinicio
 461+ 9C8B
 462+ 9C8B              ; ---------- ---------- ----------
 463+ 9C8B
 464+ 9C8B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C8D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C8E
 467+ 9C8E              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C8E              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C8E
 470+ 9C8E CD A7 9C     	call DESPLZ_IZQ
 471+ 9C91 C1           	pop bc
 472+ 9C92 10 F9        	djnz 5B
 473+ 9C94 2A 0D 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C97 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C98 22 0D 8C     	ld (Posicion_actual),hl
 476+ 9C9B CD 6A 95     	call Genera_coordenadas
 477+ 9C9E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9CA0
 479+ 9CA0              ; ---------- ---------- ----------
 480+ 9CA0
 481+ 9CA0              ; Movemos, no hay recolocación.
 482+ 9CA0
 483+ 9CA0 2A 0D 8C     8 ld hl,(Posicion_actual)
 484+ 9CA3 CD A7 9C     	call DESPLZ_IZQ
 485+ 9CA6 C9           2 ret
 486+ 9CA7
 487+ 9CA7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9CA7              ;
 489+ 9CA7              ;	22/9/22
 490+ 9CA7
 491+ 9CA7              DESPLZ_IZQ
 492+ 9CA7
 493+ 9CA7 CD B6 9C     	call Desplaza_izquierda
 494+ 9CAA CD 02 9D         call modifica_parametros_1er_DESPLZ
 495+ 9CAD CD 2A 9D     	call Ciclo_completo_2
 496+ 9CB0 21 0A 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9CB3 CB BE        	res 7,(hl)
 498+ 9CB5 C9           	ret
 499+ 9CB6
 500+ 9CB6              Desplaza_izquierda
 501+ 9CB6
 502+ 9CB6 3A 22 8C     	ld a,(Vel_left)
 503+ 9CB9 47           	ld b,a
 504+ 9CBA 2A 18 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9CBD 23           1 inc hl
 506+ 9CBE 23           	inc hl
 507+ 9CBF 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9CC1 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9CC4 CD 55 91     	call Extrae_address
 510+ 9CC7 22 0F 8C     	ld (Puntero_objeto),hl
 511+ 9CCA
 512+ 9CCA              ; Modifica (Puntero_DESPLZ_der).
 513+ 9CCA
 514+ 9CCA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9CCA              ; Cuántos movimientos hemos hecho ??
 516+ 9CCA              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9CCA
 518+ 9CCA 2A 14 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9CCD EB           	ex de,hl
 520+ 9CCE A7           	and a
 521+ 9CCF ED 52        	sbc hl,de
 522+ 9CD1 CB 3D        	srl l
 523+ 9CD3 3E 08        6 ld a,8
 524+ 9CD5 95           	sub l
 525+ 9CD6 30 1E        	jr nc,3F
 526+ 9CD8
 527+ 9CD8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9CD8              ; B="0".
 529+ 9CD8
 530+ 9CD8 04           4 inc b
 531+ 9CD9 3C           	inc a
 532+ 9CDA 20 FC        	jr nz,4B
 533+ 9CDC 78           	ld a,b
 534+ 9CDD 08           	ex af,af
 535+ 9CDE 2A 14 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9CE1 23           5 inc hl
 537+ 9CE2 23           	inc hl
 538+ 9CE3 10 FC        	djnz 5B
 539+ 9CE5 22 18 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9CE8 CD 55 91     	call Extrae_address
 541+ 9CEB 22 0F 8C     	ld (Puntero_objeto),hl
 542+ 9CEE
 543+ 9CEE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9CEE              ; _(Posicion_actual).
 545+ 9CEE
 546+ 9CEE 21 0D 8C     	ld hl,Posicion_actual
 547+ 9CF1 35           	dec (hl)
 548+ 9CF2 08           	ex af,af
 549+ 9CF3 6F           	ld l,a
 550+ 9CF4 18 DD        	jr 6B
 551+ 9CF6
 552+ 9CF6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9CF6
 554+ 9CF6 47           3 ld b,a
 555+ 9CF7 2A 12 8C     	ld hl,(Indice_Sprite_der)
 556+ 9CFA 23           2 inc hl
 557+ 9CFB 23           	inc hl
 558+ 9CFC 10 FC        	djnz 2B
 559+ 9CFE 22 16 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9D01 C9           8 ret
 561+ 9D02
 562+ 9D02              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9D02              ;
 564+ 9D02              ;	modifica_parametros_1er_DESPLZ
 565+ 9D02              ;
 566+ 9D02              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9D02              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9D02              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9D02
 570+ 9D02 3A 11 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9D05 A7           	and a
 572+ 9D06 20 1E        	jr nz,1F
 573+ 9D08 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9D09 32 11 8C         ld (CTRL_DESPLZ),a
 575+ 9D0C 21 0C 8C     	ld hl,Columns
 576+ 9D0F 34           	inc (hl)
 577+ 9D10 3A 1C 8C     	ld a,(Cuad_objeto)
 578+ 9D13 E6 01        	and 1
 579+ 9D15 20 0F        	jr nz,1F
 580+ 9D17 2A 0D 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9D1A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9D1B 22 0D 8C     	ld (Posicion_actual),hl
 583+ 9D1E CD 6A 95     	call Genera_coordenadas
 584+ 9D21 CD 7D 9D     	call Dec_CTRL_DESPLZ
 585+ 9D24 18 03        	jr 2F
 586+ 9D26 CD 7D 9D     1 call Dec_CTRL_DESPLZ
 587+ 9D29 C9           2 ret
 588+ 9D2A
 589+ 9D2A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9D2A
 591+ 9D2A 3A 11 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9D2D FE F7        	cp $f7
 593+ 9D2F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9D31 30 2C        	jr nc,3F
 595+ 9D33
 596+ 9D33              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9D33
 598+ 9D33 06 00        	ld b,0
 599+ 9D35 04           4 inc b
 600+ 9D36 3C           	inc a
 601+ 9D37 FE F7        	cp $f7
 602+ 9D39 20 FA        	jr nz,4B
 603+ 9D3B 3E FF        	ld a,$ff
 604+ 9D3D 90           	sub b
 605+ 9D3E 32 11 8C     	ld (CTRL_DESPLZ),a
 606+ 9D41 18 1C        	jr 3F
 607+ 9D43
 608+ 9D43              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9D43
 610+ 9D43 21 0C 8C     1 ld hl,Columns
 611+ 9D46 35           	dec (hl)
 612+ 9D47 AF           	xor a
 613+ 9D48 32 11 8C     	ld (CTRL_DESPLZ),a
 614+ 9D4B 3A 1C 8C     	ld a,(Cuad_objeto)
 615+ 9D4E E6 01        	and 1
 616+ 9D50 28 0A        	jr z,2F
 617+ 9D52 2A 0D 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9D55 2B           	dec hl
 619+ 9D56 22 0D 8C     	ld (Posicion_actual),hl
 620+ 9D59 CD 6A 95     	call Genera_coordenadas
 621+ 9D5C
 622+ 9D5C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9D5C
 624+ 9D5C CD 7D 91     2 call Inicia_puntero_objeto_izq
 625+ 9D5F C9           3 ret
 626+ 9D60
 627+ 9D60              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9D60              ;
 629+ 9D60              ;	19/10/22
 630+ 9D60              ;
 631+ 9D60              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9D60              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9D60
 634+ 9D60 3A FE 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9D63 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9D65 C9           	ret
 637+ 9D66
 638+ 9D66              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9D66              ;
 640+ 9D66              ;	19/10/22
 641+ 9D66              ;
 642+ 9D66              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9D66              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9D66
 645+ 9D66 3A FE 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9D69 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9D6B C9           	ret
 648+ 9D6C
 649+ 9D6C              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9D6C              ;
 651+ 9D6C              ;	24/7/22
 652+ 9D6C              ;
 653+ 9D6C              ;	Inc_CTRL_DESPLZ
 654+ 9D6C              ;
 655+ 9D6C              ;
 656+ 9D6C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9D6C
 658+ 9D6C 21 11 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D6F 3A 23 8C     	ld a,(Vel_right)
 660+ 9D72 A7           	and a
 661+ 9D73 28 06        	jr z,1F
 662+ 9D75 47           	ld b,a
 663+ 9D76 34           3 inc (hl)
 664+ 9D77 10 FD        	djnz 3B
 665+ 9D79 18 01        	jr 2F
 666+ 9D7B 34           1 inc (hl)
 667+ 9D7C C9           2 ret
 668+ 9D7D
 669+ 9D7D              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D7D              ;
 671+ 9D7D              ;	5/2/23
 672+ 9D7D              ;
 673+ 9D7D              ;	Dec_CTRL_DESPLZ
 674+ 9D7D              ;
 675+ 9D7D              ;
 676+ 9D7D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D7D
 678+ 9D7D 21 11 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D80 3A 22 8C     	ld a,(Vel_left)
 680+ 9D83 A7           	and a
 681+ 9D84 28 06        	jr z,1F
 682+ 9D86 47           	ld b,a
 683+ 9D87 35           3 dec (hl)
 684+ 9D88 10 FD        	djnz 3B
 685+ 9D8A 18 01        	jr 2F
 686+ 9D8C 35           1 dec (hl)
 687+ 9D8D C9           2 ret
 688+ 9D8E
 689+ 9D8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D8E
 691+ 9D8E 2A 0D 8C     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D91 01 1F 00     	ld bc,31
 693+ 9D94 A7           	and a
 694+ 9D95 ED 4A        	adc hl,bc
 695+ 9D97 22 0D 8C     	ld (Posicion_actual),hl
 696+ 9D9A 21 0A 8C     	ld hl,Ctrl_0														; $xxx1
 697+ 9D9D CB C6        	set 0,(hl)
 698+ 9D9F C9           	ret
 699+ 9DA0
 700+ 9DA0              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9DA0
 702+ 9DA0 2A 0D 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9DA3 01 1F 00     	ld bc,31
 704+ 9DA6 A7           	and a
 705+ 9DA7 ED 42        	sbc hl,bc
 706+ 9DA9 22 0D 8C     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9DAC 21 0A 8C     	ld hl,Ctrl_0
 708+ 9DAF CB CE        	set 1,(hl)
 709+ 9DB1 C9           	ret
 710+ 9DB2
 711+ 9DB2              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9DB2
 713+ 9DB2 24           Reaparece_abajo inc h
 714+ 9DB3 01 E0 17     	ld bc,$17e0
 715+ 9DB6 A7           	and a
 716+ 9DB7 ED 4A        	adc hl,bc
 717+ 9DB9 22 0D 8C     	ld (Posicion_actual),hl
 718+ 9DBC 21 0A 8C     	ld hl,Ctrl_0
 719+ 9DBF CB D6        	set 2,(hl)
 720+ 9DC1 C9           	ret
 721+ 9DC2
 722+ 9DC2              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9DC2
 724+ 9DC2 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9DC5 A7           	and a
 726+ 9DC6 ED 42        	sbc hl,bc
 727+ 9DC8 22 0D 8C     	ld (Posicion_actual),hl
 728+ 9DCB 21 0A 8C     	ld hl,Ctrl_0
 729+ 9DCE CB DE        	set 3,(hl)
 730+ 9DD0 C9           	ret
 731+ 9DD1
 732+ 9DD1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9DD1              ;
 734+ 9DD1              ;	15/07/23
 735+ 9DD1
 736+ 9DD1              Reinicio
 737+ 9DD1
 738+ 9DD1              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9DD1
 740+ 9DD1 AF           	xor a
 741+ 9DD2 21 32 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9DD5 CD F3 9D     	call Limpia_contenido_hl
 743+ 9DD8
 744+ 9DD8 21 0D 8C     	ld hl,Posicion_actual
 745+ 9DDB CD F3 9D     	call Limpia_contenido_hl
 746+ 9DDE
 747+ 9DDE CD D4 93     	call Situa_Puntero_indice_mov
 748+ 9DE1 CD F2 9E     	call Inicia_Puntero_mov
 749+ 9DE4
 750+ 9DE4 21 34 8C     	ld hl,Incrementa_puntero
 751+ 9DE7 06 05        	ld b,5
 752+ 9DE9 77           1 ld (hl),a
 753+ 9DEA 23           	inc hl
 754+ 9DEB 10 FC        	djnz 1B
 755+ 9DED
 756+ 9DED 21 09 8C     	ld hl,Ctrl_2
 757+ 9DF0 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9DF2
 759+ 9DF2 C9           	ret
 760+ 9DF3
 761+ 9DF3 77           Limpia_contenido_hl	ld (hl),a
 762+ 9DF4 23           	inc hl
 763+ 9DF5 77           	ld (hl),a
 764+ 9DF6 C9           	ret
 765+ 9DF7
 766+ 9DF7              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9DF7              ;
 768+ 9DF7              ;	18/6/24
 769+ 9DF7              ;
 770+ 9DF7
 771+ 9DF7              Amadeus_a_izquierda
 772+ 9DF7
 773+ 9DF7              ;	Actualiza contador de movimientos.
 774+ 9DF7
 775+ 9DF7 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9DFA 35           	dec (hl)
 777+ 9DFB 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9DFD
 779+ 9DFD 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9E00 2B           	dec hl
 781+ 9E01 2B           	dec hl
 782+ 9E02 2B           	dec hl
 783+ 9E03 2B           	dec hl
 784+ 9E04 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9E07
 786+ 9E07 21 74 8C     	ld hl,Ctrl_3
 787+ 9E0A CB EE        	set 5,(hl)
 788+ 9E0C
 789+ 9E0C C9           	ret
 790+ 9E0D
 791+ 9E0D 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9E0E C9           	ret
 793+ 9E0F
 794+ 9E0F
 795+ 9E0F              Amadeus_a_derecha
 796+ 9E0F
 797+ 9E0F              ;	Actualiza contador de movimientos.
 798+ 9E0F
 799+ 9E0F 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9E12 34           	inc (hl)
 801+ 9E13 3E 7A        	ld a,$7a
 802+ 9E15 BE           	cp (hl)
 803+ 9E16 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9E18
 805+ 9E18 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9E1B 23           	inc hl
 807+ 9E1C 23           	inc hl
 808+ 9E1D 23           	inc hl
 809+ 9E1E 23           	inc hl
 810+ 9E1F 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9E22
 812+ 9E22 21 74 8C     	ld hl,Ctrl_3
 813+ 9E25 CB EE        	set 5,(hl)
 814+ 9E27 C9           	ret
 815+ 9E28
 816+ 9E28 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9E29 C9           	ret
# file closed: Direcciones.asm
2218  9E2A              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9E2A              ; ----- ----- ----- ----- -----
   2+ 9E2A              ;
   3+ 9E2A              ;   28/12/23
   4+ 9E2A
   5+ 9E2A              Movimiento
   6+ 9E2A
   7+ 9E2A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9E2A
   9+ 9E2A 3A 09 8C         ld a,(Ctrl_2)
  10+ 9E2D CB 57            bit 2,a
  11+ 9E2F 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9E31
  13+ 9E31 2A 30 8C         ld hl,(Puntero_mov)
  14+ 9E34 7E               ld a,(hl)
  15+ 9E35
  16+ 9E35              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9E35
  18+ 9E35              Inicia_desplazamiento.
  19+ 9E35
  20+ 9E35              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9E35
  22+ 9E35 CD 28 9F         call Ajusta_velocidad_desplazamiento
  23+ 9E38
  24+ 9E38              ; Iniciamos (Repetimos_mov).
  25+ 9E38
  26+ 9E38 7E               ld a,(hl)
  27+ 9E39 E6 0F            and $0f
  28+ 9E3B 32 36 8C         ld (Repetimos_desplazamiento),a
  29+ 9E3E 32 37 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9E41
  31+ 9E41              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9E41
  33+ 9E41 23               inc hl
  34+ 9E42 7E               ld a,(hl)
  35+ 9E43 32 39 8C         ld (Cola_de_desplazamiento),a
  36+ 9E46 2B               dec hl
  37+ 9E47
  38+ 9E47 21 09 8C         ld hl,Ctrl_2
  39+ 9E4A CB D6            set 2,(hl)
  40+ 9E4C
  41+ 9E4C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9E4C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9E4C
  44+ 9E4C              Desplazamiento_iniciado
  45+ 9E4C
  46+ 9E4C CD FC 9E         call Aplica_desplazamiento
  47+ 9E4F
  48+ 9E4F              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9E4F
  50+ 9E4F 3A 74 8C         ld a,(Ctrl_3)
  51+ 9E52 CB 4F            bit 1,a
  52+ 9E54 C0               ret nz
  53+ 9E55
  54+ 9E55 21 36 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9E58 35               dec (hl)
  56+ 9E59 C0               ret nz
  57+ 9E5A
  58+ 9E5A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9E5A              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9E5A              ; Analiza (Cola_de_desplazamiento).
  61+ 9E5A
  62+ 9E5A 3A 39 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9E5D A7               and a
  64+ 9E5E CC 51 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9E61 28 30            jr z,Reinicia_el_movimiento
  66+ 9E63
  67+ 9E63 FE FF            cp $ff
  68+ 9E65 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9E67
  70+ 9E67 FE FE            cp $fe
  71+ 9E69 CC D6 9E         call z,Fijamos_bucle
  72+ 9E6C 28 25            jr z,Reinicia_el_movimiento
  73+ 9E6E
  74+ 9E6E FE FD            cp $fd
  75+ 9E70 20 11            jr nz,1F
  76+ 9E72
  77+ 9E72              ; ---
  78+ 9E72              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E72
  80+ 9E72 3A 09 8C         ld a,(Ctrl_2)
  81+ 9E75 CB 5F            bit 3,a
  82+ 9E77 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E79
  84+ 9E79              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E79
  86+ 9E79 21 09 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E7C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E7E
  89+ 9E7E CD E7 9E         call Inicia_Repetimos_movimiento
  90+ 9E81 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E83              ; ---
  92+ 9E83
  93+ 9E83 FE 01        1 cp 1
  94+ 9E85 CA C0 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E88
  96+ 9E88 3D               dec a
  97+ 9E89 32 39 8C         ld (Cola_de_desplazamiento),a
  98+ 9E8C
  99+ 9E8C 3A 37 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E8F 32 36 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E92              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E92 C9               ret
 103+ 9E93
 104+ 9E93              Reinicia_el_movimiento
 105+ 9E93
 106+ 9E93 3A 09 8C         ld a,(Ctrl_2)
 107+ 9E96 CB 5F            bit 3,a
 108+ 9E98 28 1B            jr z,2F
 109+ 9E9A
 110+ 9E9A              ; (Cola_de_desplazamiento)="254".
 111+ 9E9A
 112+ 9E9A 21 38 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E9D 35               dec (hl)
 114+ 9E9E 20 15            jr nz,2F
 115+ 9EA0
 116+ 9EA0              ; Fin de las repeticiones del último movimiento.
 117+ 9EA0
 118+ 9EA0 21 09 8C         ld hl,Ctrl_2
 119+ 9EA3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9EA5
 121+ 9EA5 2A 30 8C         ld hl,(Puntero_mov)
 122+ 9EA8 23               inc hl
 123+ 9EA9 23               inc hl
 124+ 9EAA 23               inc hl
 125+ 9EAB 22 30 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9EAE              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9EAE 7E               ld a,(hl)
 128+ 9EAF 32 39 8C         ld (Cola_de_desplazamiento),a
 129+ 9EB2
 130+ 9EB2 C3 5A 9E         jp Cola
 131+ 9EB5
 132+ 9EB5 CD F2 9E     2 call Inicia_Puntero_mov
 133+ 9EB8
 134+ 9EB8 21 09 8C         ld hl,Ctrl_2
 135+ 9EBB CB 96            res 2,(hl)
 136+ 9EBD
 137+ 9EBD C3 2A 9E         jp Movimiento
 138+ 9EC0
 139+ 9EC0              Siguiente_desplazamiento
 140+ 9EC0
 141+ 9EC0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9EC0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9EC0
 144+ 9EC0 21 09 8C         ld hl,Ctrl_2
 145+ 9EC3 CB 96            res 2,(hl)
 146+ 9EC5
 147+ 9EC5 2A 30 8C         ld hl,(Puntero_mov)
 148+ 9EC8 23               inc hl
 149+ 9EC9 23               inc hl
 150+ 9ECA 22 30 8C         ld (Puntero_mov),hl
 151+ 9ECD
 152+ 9ECD 7E               ld a,(hl)
 153+ 9ECE A7               and a
 154+ 9ECF CC 51 9F         call z,Incrementa_Puntero_indice_mov
 155+ 9ED2 CA 93 9E         jp z,Reinicia_el_movimiento
 156+ 9ED5
 157+ 9ED5 C9               ret
 158+ 9ED6
 159+ 9ED6              ; Subrutinas -----------------------------------------
 160+ 9ED6              ; ---------- --------- --------- ---------- ----------
 161+ 9ED6              ;
 162+ 9ED6              ;   24/07/23
 163+ 9ED6              ;
 164+ 9ED6              ;   Fijamos_bucle
 165+ 9ED6              ;
 166+ 9ED6              ;
 167+ 9ED6
 168+ 9ED6              Fijamos_bucle
 169+ 9ED6
 170+ 9ED6 3A 34 8C         ld a,(Incrementa_puntero)
 171+ 9ED9 3C               inc a
 172+ 9EDA 32 35 8C         ld (Incrementa_puntero_backup),a
 173+ 9EDD
 174+ 9EDD CD 51 9F         call Incrementa_Puntero_indice_mov
 175+ 9EE0 2A 2E 8C         ld hl,(Puntero_indice_mov)
 176+ 9EE3 22 32 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9EE6 C9               ret
 178+ 9EE7
 179+ 9EE7              ; ---------- --------- --------- ---------- ----------
 180+ 9EE7              ;
 181+ 9EE7              ;   07/7/23
 182+ 9EE7              ;
 183+ 9EE7              ;   Inicia_Repetimos_movimiento
 184+ 9EE7              ;
 185+ 9EE7              ;
 186+ 9EE7
 187+ 9EE7              Inicia_Repetimos_movimiento
 188+ 9EE7
 189+ 9EE7              ; Iniciamos (Repetimos_movimiento).
 190+ 9EE7
 191+ 9EE7 DD 2A 30 8C      ld ix,(Puntero_mov)
 192+ 9EEB DD 7E 02         ld a,(ix+2)
 193+ 9EEE 32 38 8C         ld (Repetimos_movimiento),a
 194+ 9EF1
 195+ 9EF1 C9               ret
 196+ 9EF2
 197+ 9EF2              ; ---------- --------- --------- ---------- ----------
 198+ 9EF2              ;
 199+ 9EF2              ;   26/6/23
 200+ 9EF2              ;
 201+ 9EF2              ;   Inicia_Puntero_mov
 202+ 9EF2              ;
 203+ 9EF2              ;
 204+ 9EF2
 205+ 9EF2 2A 2E 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9EF5 CD 55 91         call Extrae_address
 207+ 9EF8 22 30 8C         ld (Puntero_mov),hl
 208+ 9EFB C9               ret
 209+ 9EFC
 210+ 9EFC              ; ---------- --------- --------- ---------- ----------
 211+ 9EFC              ;
 212+ 9EFC              ;   27/06/23
 213+ 9EFC              ;
 214+ 9EFC              ;   Aplica_movimiento.
 215+ 9EFC
 216+ 9EFC              Aplica_desplazamiento
 217+ 9EFC
 218+ 9EFC              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9EFC
 220+ 9EFC 2A 30 8C         ld hl, (Puntero_mov)
 221+ 9EFF
 222+ 9EFF 7E               ld a,(hl)
 223+ 9F00 E6 F0            and $f0
 224+ 9F02 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9F03
 226+ 9F03 CB 7E            bit 7,(hl)
 227+ 9F05 28 03            jr z,1F
 228+ 9F07 CD DE 9A         call Mov_up
 229+ 9F0A 2A 30 8C     1 ld hl, (Puntero_mov)
 230+ 9F0D CB 76            bit 6,(hl)
 231+ 9F0F 28 03            jr z,2F
 232+ 9F11 CD A5 9A         call Mov_down
 233+ 9F14
 234+ 9F14              ; Se ha aplicado reinicio ???
 235+ 9F14              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9F14
 237+ 9F14              ;    ld a,(Ctrl_3)
 238+ 9F14              ;    bit 1,a
 239+ 9F14              ;    ret nz
 240+ 9F14
 241+ 9F14 2A 30 8C     2 ld hl, (Puntero_mov)
 242+ 9F17 CB 6E            bit 5,(hl)
 243+ 9F19 28 03            jr z,3F
 244+ 9F1B CD 44 9C         call Mov_left
 245+ 9F1E 2A 30 8C     3 ld hl, (Puntero_mov)
 246+ 9F21 CB 66            bit 4,(hl)
 247+ 9F23 C8               ret z
 248+ 9F24 CD 21 9B         call Mov_right
 249+ 9F27 C9               ret
 250+ 9F28
 251+ 9F28              ; ---------- --------- --------- ---------- ----------
 252+ 9F28              ;
 253+ 9F28              ;   26/06/23
 254+ 9F28              ;
 255+ 9F28              ;   Ajusta_velocidad_desplazamiento.
 256+ 9F28
 257+ 9F28              Ajusta_velocidad_desplazamiento
 258+ 9F28
 259+ 9F28              ; 1er byte de la cadena de movimiento.
 260+ 9F28              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9F28
 262+ 9F28 CD 46 9F         call Extrae_nibble_alto
 263+ 9F2B
 264+ 9F2B 32 24 8C         ld (Vel_up),a
 265+ 9F2E 79               ld a,c
 266+ 9F2F E6 0F            and $0f
 267+ 9F31 32 25 8C         ld (Vel_down),a
 268+ 9F34
 269+ 9F34              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9F34              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9F34
 272+ 9F34 23               inc hl
 273+ 9F35 CD 46 9F         call Extrae_nibble_alto
 274+ 9F38
 275+ 9F38 32 22 8C         ld (Vel_left),a
 276+ 9F3B 79               ld a,c
 277+ 9F3C E6 0F            and $0f
 278+ 9F3E 32 23 8C         ld (Vel_right),a
 279+ 9F41
 280+ 9F41              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9F41
 282+ 9F41 23               inc hl
 283+ 9F42 22 30 8C         ld (Puntero_mov),hl
 284+ 9F45 C9               ret
 285+ 9F46
 286+ 9F46 06 04        Extrae_nibble_alto ld b,4
 287+ 9F48 7E               ld a,(hl)
 288+ 9F49 4F               ld c,a
 289+ 9F4A E6 F0            and $f0
 290+ 9F4C CB 3F        1 srl a
 291+ 9F4E 10 FC            djnz 1B
 292+ 9F50 C9               ret
 293+ 9F51
 294+ 9F51              ; ---------- --------- --------- ---------- ----------
 295+ 9F51              ;
 296+ 9F51              ;   5/7/23
 297+ 9F51              ;
 298+ 9F51              ;   Incrementa_Puntero_indice_mov
 299+ 9F51
 300+ 9F51              Incrementa_Puntero_indice_mov
 301+ 9F51
 302+ 9F51 21 34 8C         ld hl,Incrementa_puntero
 303+ 9F54 34               inc (hl)
 304+ 9F55
 305+ 9F55 2A 2E 8C         ld hl,(Puntero_indice_mov)
 306+ 9F58 01 02 00         ld bc,2
 307+ 9F5B A7               and a
 308+ 9F5C 09               add hl,bc
 309+ 9F5D 22 2E 8C         ld (Puntero_indice_mov),hl
 310+ 9F60
 311+ 9F60 7E               ld a,(hl)
 312+ 9F61 A7               and a
 313+ 9F62
 314+ 9F62              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9F62
 316+ 9F62              ;    jr z,$
 317+ 9F62
 318+ 9F62              ;! Reinicia el Patrón de movimiento.
 319+ 9F62
 320+ 9F62 CC 67 9F         call z,Inicializa_Puntero_indice_mov_2
 321+ 9F65
 322+ 9F65 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9F66
 324+ 9F66 C9               ret
 325+ 9F67
 326+ 9F67              ; ---------- --------- --------- ---------- ----------
 327+ 9F67              ;
 328+ 9F67              ;   15/01/24
 329+ 9F67              ;
 330+ 9F67              ;   Inicializa_Puntero_indice_mov
 331+ 9F67
 332+ 9F67              Inicializa_Puntero_indice_mov_2
 333+ 9F67
 334+ 9F67              ; Existe etiqueta de bucle principal???
 335+ 9F67
 336+ 9F67 2A 32 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9F6A 24               inc h
 338+ 9F6B 25               dec h
 339+ 9F6C 28 05            jr z,2F
 340+ 9F6E
 341+ 9F6E 22 2E 8C         ld (Puntero_indice_mov),hl
 342+ 9F71 18 14            jr 3F
 343+ 9F73
 344+ 9F73              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F73
 346+ 9F73 3A 34 8C     2 ld a,(Incrementa_puntero)
 347+ 9F76 47               ld b,a
 348+ 9F77
 349+ 9F77 2A 2E 8C         ld hl,(Puntero_indice_mov)
 350+ 9F7A 2B           1 dec hl
 351+ 9F7B 2B               dec hl
 352+ 9F7C 10 FC            djnz 1B
 353+ 9F7E 22 2E 8C         ld (Puntero_indice_mov),hl
 354+ 9F81
 355+ 9F81 AF               xor a
 356+ 9F82 32 34 8C         ld (Incrementa_puntero),a
 357+ 9F85 18 06            jr 4F
 358+ 9F87
 359+ 9F87 3A 35 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F8A 32 34 8C         ld (Incrementa_puntero),a
 361+ 9F8D C9           4 ret
 362+ 9F8E
 363+ 9F8E              ; ----------------------------------------------------------------------
 364+ 9F8E              ;
 365+ 9F8E              ;   24/11/24
 366+ 9F8E              ;
 367+ 9F8E              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F8E
 369+ 9F8E DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F91 CD E3 94         call Calcula_salto_en_BC
 371+ 9F94 21 26 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F97 A7               and a
 373+ 9F98 ED 4A            adc hl,bc
 374+ 9F9A C9               ret
 375+ 9F9B
 376+ 9F9B              ; ----------------------------------------------------------------------
 377+ 9F9B              ;
 378+ 9F9B              ;   24/11/24
 379+ 9F9B              ;
 380+ 9F9B              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F9B              ;
 382+ 9F9B              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F9B
 384+ 9F9B 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F9C 23               inc hl
 386+ 9F9D 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F9E DD 71 09         ld (ix+9),c
 388+ 9FA1 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9FA4 C9               ret
 390+ 9FA5
# file closed: Movimiento.asm
2219  9FA5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9FA5              ; --------------------------------------------------------------------------------------
   2+ 9FA5              ;
   3+ 9FA5              ;   25/10/24
   4+ 9FA5              ;
   5+ 9FA5
   6+ 9FA5              Pinta_disparos_Entidades
   7+ 9FA5
   8+ 9FA5 ED 73 4C 8C      ld (Stack),sp
   9+ 9FA9 ED 7B 5E 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9FAD
  11+ 9FAD 3E 02            ld a,2
  12+ 9FAF 08               ex af,af
  13+ 9FB0
  14+ 9FB0 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9FB2              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9FB2              ;                                     _ No encontraría "0".
  17+ 9FB2 FD E1        4 pop iy
  18+ 9FB4 D1               pop de                          ; 1er .db IYL
  19+ 9FB5              ;                                   ; 2º  .db IYH
  20+ 9FB5              ;                                   ; 3er .db E.
  21+ 9FB5              ;   Album vacío ???
  22+ 9FB5
  23+ 9FB5 FD 7D            ld a,iyl
  24+ 9FB7 FD 84            add iyh
  25+ 9FB9 83               add e
  26+ 9FBA 28 1F            jr z,1F
  27+ 9FBC
  28+ 9FBC              ;   Imprime album, (contiene datos).
  29+ 9FBC
  30+ 9FBC 3B               dec sp
  31+ 9FBD
  32+ 9FBD E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9FBE
  34+ 9FBE              ; Imprime el 1er scanline del disparo.
  35+ 9FBE
  36+ 9FBE FD 7D            ld a,iyl
  37+ 9FC0 AE               xor (hl)
  38+ 9FC1 77               ld (hl),a
  39+ 9FC2
  40+ 9FC2 2C               inc l
  41+ 9FC3
  42+ 9FC3 FD 7C            ld a,iyh
  43+ 9FC5 AE               xor (hl)
  44+ 9FC6 77               ld (hl),a
  45+ 9FC7
  46+ 9FC7 2C               inc l
  47+ 9FC8
  48+ 9FC8 7B               ld a,e
  49+ 9FC9 AE               xor (hl)
  50+ 9FCA 77               ld (hl),a
  51+ 9FCB
  52+ 9FCB              ; Imprime el 2º scanline del disparo.
  53+ 9FCB
  54+ 9FCB E1               pop hl
  55+ 9FCC
  56+ 9FCC FD 7D            ld a,iyl
  57+ 9FCE AE               xor (hl)
  58+ 9FCF 77               ld (hl),a
  59+ 9FD0
  60+ 9FD0 2C               inc l
  61+ 9FD1
  62+ 9FD1 FD 7C            ld a,iyh
  63+ 9FD3 AE               xor (hl)
  64+ 9FD4 77               ld (hl),a
  65+ 9FD5
  66+ 9FD5 2C               inc l
  67+ 9FD6
  68+ 9FD6 7B               ld a,e
  69+ 9FD7 AE               xor (hl)
  70+ 9FD8 77               ld (hl),a
  71+ 9FD9
  72+ 9FD9 10 D7            djnz 4B
  73+ 9FDB
  74+ 9FDB 08           1 ex af,af
  75+ 9FDC 3D               dec a
  76+ 9FDD 20 05            jr nz,2F
  77+ 9FDF
  78+ 9FDF ED 7B 4C 8C      ld sp,(Stack)
  79+ 9FE3 C9               ret
  80+ 9FE4
  81+ 9FE4 ED 7B 5C 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9FE8 08               ex af,af
  83+ 9FE9 18 C5            jr 3B
  84+ 9FEB
  85+ 9FEB              ; --------------------------------------------------------------------------------------
  86+ 9FEB              ;
  87+ 9FEB              ;   2/12/24
  88+ 9FEB              ;
  89+ 9FEB
  90+ 9FEB              Motor_de_disparos_entidades
  91+ 9FEB
  92+ 9FEB 3A 64 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9FEE FE 07            cp 7
  94+ 9FF0 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9FF1
  96+ 9FF1 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9FF3 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ 9FF6
  99+ 9FF6 CD 55 91     1 call Extrae_address
 100+ 9FF9 1C               inc e
 101+ 9FFA 1C               inc e
 102+ 9FFB ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9FFF
 104+ 9FFF               ; Caja vacía ???
 105+ 9FFF
 106+ 9FFF 2D               dec l
 107+ A000 7E               ld a,(hl)
 108+ A001 A7               and a
 109+ A002 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A004
 111+ A004              ; --- Trabajamos con caja:
 112+ A004
 113+ A004 2C               inc l
 114+ A005
 115+ A005              ; --- Existe posibilidad de impacto ???
 116+ A005
 117+ A005 3A 9D 8C         ld a,(Shield)
 118+ A008 A7               and a
 119+ A009 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A00B
 121+ A00B CB 46            bit 0,(hl)
 122+ A00D C4 4D A0         call nz, Comprueba_impacto_con_Amadeus
 123+ A010 20 37            jr nz,3F
 124+ A012
 125+ A012 CD D4 A0     6 call Rota_disparo_si_procede
 126+ A015
 127+ A015              ; ------------------------------------------------------------
 128+ A015
 129+ A015 2D               dec l
 130+ A016 2D               dec l
 131+ A017
 132+ A017 CD 55 91         call Extrae_address
 133+ A01A
 134+ A01A              ;   (Puntero_de_impresion) del disparo en HL
 135+ A01A              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A01A
 137+ A01A 3A 76 8C         ld a,(Ctrl_5)
 138+ A01D CB 57            bit 2,a
 139+ A01F 28 09            jr z,4F
 140+ A021
 141+ A021 CB 97            res 2,a
 142+ A023 32 76 8C         ld (Ctrl_5),a
 143+ A026 2C               inc l
 144+ A027 2C               inc l
 145+ A028 18 0C            jr 5F
 146+ A02A
 147+ A02A CB 5F        4 bit 3,a
 148+ A02C 28 08            jr z,5F
 149+ A02E
 150+ A02E CB 9F            res 3,a
 151+ A030 32 76 8C         ld (Ctrl_5),a
 152+ A033 2D               dec l
 153+ A034 2D               dec l
 154+ A035 2D               dec l
 155+ A036
 156+ A036              ; ---------------------------------------------------------------------
 157+ A036
 158+ A036              ;! Velocidad del disparo de entidades.
 159+ A036
 160+ A036 CD 5F 9A     5 call NextScan
 161+ A039 CD 5F 9A         call NextScan
 162+ A03C
 163+ A03C              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A03C
 165+ A03C CD B1 A0         call Fin_de_disparo_de_entidad
 166+ A03F
 167+ A03F EB               ex de,hl
 168+ A040
 169+ A040 73               ld (hl),e
 170+ A041 23               inc hl
 171+ A042 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A043
 173+ A043 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A046 18 02            jr 2F
 175+ A048
 176+ A048 C9               ret
 177+ A049
 178+ A049 EB           3 ex de,hl
 179+ A04A 10 AA        2 djnz 1B
 180+ A04C
 181+ A04C C9               ret
 182+ A04D
 183+ A04D              ; ------------- ------------- ------------
 184+ A04D              ;
 185+ A04D              ;   1/11/24
 186+ A04D
 187+ A04D              Comprueba_impacto_con_Amadeus
 188+ A04D
 189+ A04D              ;   El disparo se encuentra en zona de Amadeus.
 190+ A04D              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A04D
 192+ A04D              ;   Modificamos registros, así que guardamos ...
 193+ A04D
 194+ A04D C5               push bc
 195+ A04E E5               push hl
 196+ A04F D5               push de
 197+ A050
 198+ A050 2D               dec l
 199+ A051 2D               dec l
 200+ A052
 201+ A052 CD 55 91         call Extrae_address
 202+ A055
 203+ A055 3A AF 89         ld a,(CX_Amadeus)
 204+ A058 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A059
 206+ A059 7D               ld a,l
 207+ A05A E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A05C
 209+ A05C 06 03            ld b,3
 210+ A05E
 211+ A05E B9           1 cp c
 212+ A05F 28 15            jr z,Coincidencia
 213+ A061 0C               inc c
 214+ A062 10 FA            djnz 1B
 215+ A064
 216+ A064 0D               dec c
 217+ A065 0D               dec c
 218+ A066 0D               dec c
 219+ A067
 220+ A067 3C               inc a
 221+ A068 B9               cp c
 222+ A069 28 0B            jr z,Coincidencia
 223+ A06B
 224+ A06B 3C               inc a
 225+ A06C B9               cp c
 226+ A06D 28 07            jr z,Coincidencia
 227+ A06F
 228+ A06F D1           2 pop de
 229+ A070 E1               pop hl
 230+ A071 C1               pop bc
 231+ A072
 232+ A072              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A072
 234+ A072 CB 86            res 0,(hl)
 235+ A074 AF               xor a                       ; Z before RET.
 236+ A075 C9               ret
 237+ A076
 238+ A076              Coincidencia
 239+ A076
 240+ A076              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A076              ;   Existe posibilidad de impacto.
 242+ A076              ;   Vamos a averiguarlo ...
 243+ A076
 244+ A076 1D               dec e
 245+ A077 1D               dec e
 246+ A078 1D               dec e
 247+ A079
 248+ A079              ; DE en Puntero_objeto del disparo.
 249+ A079              ; HL en Puntero_de_impresión del disparo.
 250+ A079
 251+ A079              ; Comparador:
 252+ A079
 253+ A079 06 03            ld b,3
 254+ A07B
 255+ A07B 1A           3 ld a,(de)
 256+ A07C 4F               ld c,a
 257+ A07D A6               and (hl)
 258+ A07E B9               cp c
 259+ A07F 20 06            jr nz,Amadeus_impactado
 260+ A081
 261+ A081 2C               inc l
 262+ A082 1C               inc e
 263+ A083
 264+ A083 10 F6            djnz 3B
 265+ A085
 266+ A085 18 E8            jr 2B
 267+ A087
 268+ A087              Amadeus_impactado
 269+ A087
 270+ A087              ; Borramos disparo.
 271+ A087
 272+ A087              ;   Exclusion.
 273+ A087
 274+ A087 D1               pop de
 275+ A088 E1               pop hl
 276+ A089
 277+ A089 E5               push hl
 278+ A08A D5               push de
 279+ A08B
 280+ A08B CD 3F A1         call Borra_6_bytes
 281+ A08E
 282+ A08E 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A091 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A092
 285+ A092              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A092
 287+ A092 21 B2 89         ld hl,Impacto_Amadeus
 288+ A095 36 01            ld (hl),1
 289+ A097
 290+ A097              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A097              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A097
 293+ A097 3A B3 89         ld a,(p.imp.amadeus)
 294+ A09A FE DE            cp $de
 295+ A09C 20 04            jr nz,1F
 296+ A09E
 297+ A09E 3D               dec a
 298+ A09F 32 B3 89         ld (p.imp.amadeus),a
 299+ A0A2
 300+ A0A2              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A0A2
 302+ A0A2 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A0A5 21 B5 89         ld hl,Pamm_Amadeus
 304+ A0A8
 305+ A0A8 73               ld (hl),e
 306+ A0A9 23               inc hl
 307+ A0AA 72               ld (hl),d
 308+ A0AB
 309+ A0AB D1               pop de
 310+ A0AC E1               pop hl
 311+ A0AD C1               pop bc
 312+ A0AE
 313+ A0AE AF               xor a
 314+ A0AF 3C               inc a               ; NZ before RET.
 315+ A0B0 C9               ret
 316+ A0B1
 317+ A0B1              ; ------------- ------------- ------------
 318+ A0B1              ;
 319+ A0B1              ;   31/10/24
 320+ A0B1
 321+ A0B1              Fin_de_disparo_de_entidad
 322+ A0B1
 323+ A0B1              ; Estamos en zona de Amadeus ??
 324+ A0B1
 325+ A0B1 7C               ld a,h
 326+ A0B2 FE 54            cp $54
 327+ A0B4 38 0D            jr c,1F
 328+ A0B6
 329+ A0B6 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A0B7
 331+ A0B7 5D               ld e,l
 332+ A0B8 54               ld d,h
 333+ A0B9
 334+ A0B9 21 E0 57         ld hl,$57e0
 335+ A0BC ED 52            sbc hl,de
 336+ A0BE
 337+ A0BE 38 6F            jr c,Elimina_disparo_entidad
 338+ A0C0
 339+ A0C0 6B               ld l,e
 340+ A0C1 62               ld h,d
 341+ A0C2
 342+ A0C2 D1               pop de
 343+ A0C3
 344+ A0C3 7C           1 ld a,h
 345+ A0C4 FE 50            cp $50
 346+ A0C6 D8               ret c
 347+ A0C7
 348+ A0C7 7D               ld a,l
 349+ A0C8 FE C0            cp $c0
 350+ A0CA D8               ret c
 351+ A0CB
 352+ A0CB              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A0CB              ; Así podremos comprobar si hay colisión más adelante.
 354+ A0CB
 355+ A0CB 1C               inc e
 356+ A0CC 1C               inc e
 357+ A0CD
 358+ A0CD EB               ex de,hl
 359+ A0CE CB C6            set 0,(hl)
 360+ A0D0 EB               ex de,hl
 361+ A0D1
 362+ A0D1 1D               dec e
 363+ A0D2 1D               dec e
 364+ A0D3
 365+ A0D3 C9               ret
 366+ A0D4
 367+ A0D4              ; ----------------------------------------------------------
 368+ A0D4              ;
 369+ A0D4              ;   08/10/24
 370+ A0D4
 371+ A0D4              ;   Estructura de un disparo de entidades.
 372+ A0D4
 373+ A0D4              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A0D4              ; 	defw 0											; Puntero de impresión.
 375+ A0D4              ;	defw 0											; Control.
 376+ A0D4
 377+ A0D4              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A0D4              ;   _de la entidad en el momento de disparar.
 379+ A0D4
 380+ A0D4              ;   El byte alto muestra la siguiente información:
 381+ A0D4              ;
 382+ A0D4              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A0D4              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A0D4              ;
 385+ A0D4              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A0D4              ;
 387+ A0D4              ;                        10xx ..... Izquierda.
 388+ A0D4              ;                        01xx ..... Derecha.
 389+ A0D4              ;                        00xx ..... Recto.
 390+ A0D4
 391+ A0D4              Rota_disparo_si_procede
 392+ A0D4
 393+ A0D4              ;   Nos situamos en el byte alto de (Control).
 394+ A0D4
 395+ A0D4 CB 76            bit 6,(hl)
 396+ A0D6 20 2D            jr nz,Rota_a_derecha
 397+ A0D8 CB 7E            bit 7,(hl)
 398+ A0DA C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A0DB
 400+ A0DB              Rota_a_izq
 401+ A0DB
 402+ A0DB E5               push hl
 403+ A0DC
 404+ A0DC 7D               ld a,l
 405+ A0DD D6 05            sub 5
 406+ A0DF 6F               ld l,a
 407+ A0E0
 408+ A0E0 E5               push hl
 409+ A0E1 FD E1            pop iy
 410+ A0E3
 411+ A0E3 A7               and a
 412+ A0E4
 413+ A0E4 FD CB 02 16      rl (iy+02)
 414+ A0E8 FD CB 01 16      rl (iy+01)
 415+ A0EC FD CB 00 16      rl (iy+00)
 416+ A0F0
 417+ A0F0 30 3B            jr nc,Exit
 418+ A0F2
 419+ A0F2              ; Desplazamiento completo hasta Carry.
 420+ A0F2              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A0F2
 422+ A0F2 FD 36 02 03      ld (iy+02),$03
 423+ A0F6 FD 36 01 00      ld (iy+01),$00
 424+ A0FA FD 36 00 00      ld (iy+00),$00
 425+ A0FE
 426+ A0FE 21 76 8C         ld hl,Ctrl_5
 427+ A101 CB DE            set 3,(hl)
 428+ A103
 429+ A103 18 28            jr Exit
 430+ A105
 431+ A105              Rota_a_derecha
 432+ A105
 433+ A105 E5               push hl
 434+ A106
 435+ A106 7D               ld a,l
 436+ A107 D6 05            sub 5
 437+ A109 6F               ld l,a
 438+ A10A
 439+ A10A E5               push hl
 440+ A10B FD E1            pop iy
 441+ A10D
 442+ A10D A7               and a
 443+ A10E
 444+ A10E FD CB 00 1E      rr (iy+00)
 445+ A112 FD CB 01 1E      rr (iy+01)
 446+ A116 FD CB 02 1E      rr (iy+02)
 447+ A11A
 448+ A11A 30 11            jr nc,Exit
 449+ A11C
 450+ A11C              ; Desplazamiento completo hasta Carry.
 451+ A11C              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A11C
 453+ A11C FD 36 00 01      ld (iy+00),$01
 454+ A120 FD 36 01 80      ld (iy+01),$80
 455+ A124 FD 36 02 00      ld (iy+02),$00
 456+ A128
 457+ A128 21 76 8C         ld hl,Ctrl_5
 458+ A12B CB D6            set 2,(hl)
 459+ A12D
 460+ A12D E1           Exit pop hl
 461+ A12E C9               ret
 462+ A12F
 463+ A12F              ; ------------ ----------- ------------
 464+ A12F              ;
 465+ A12F              ;   25/9/24
 466+ A12F
 467+ A12F              Elimina_disparo_entidad
 468+ A12F
 469+ A12F 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A132 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A133
 472+ A133 E1               pop hl
 473+ A134 E5               push hl
 474+ A135
 475+ A135 2C               inc l
 476+ A136 2C               inc l
 477+ A137
 478+ A137 CD 3F A1         call Borra_6_bytes
 479+ A13A
 480+ A13A D1               pop de
 481+ A13B
 482+ A13B 21 00 00         ld hl,0
 483+ A13E
 484+ A13E C9               ret
 485+ A13F
 486+ A13F              ; ----- ----- ----- ----- -----
 487+ A13F
 488+ A13F              Borra_6_bytes
 489+ A13F
 490+ A13F 16 06            ld d,6                                                    ; Contador
 491+ A141 AF               xor a                                                     ; Borrador
 492+ A142 77           1 ld (hl),a
 493+ A143 2D               dec l
 494+ A144 15               dec d
 495+ A145 20 FB            jr nz,1B
 496+ A147
 497+ A147 C9               ret
 498+ A148
 499+ A148              ; --------------------------------------------------------------------------------------
 500+ A148              ;
 501+ A148              ;   12/10/24
 502+ A148              ;
 503+ A148
 504+ A148              Genera_datos_de_impresion_disparos_Entidades
 505+ A148
 506+ A148 3E 07            ld a,7
 507+ A14A 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A14B
 509+ A14B              ; ---------------
 510+ A14B
 511+ A14B              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A14B
 513+ A14B 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A14E
 515+ A14E CD 55 91     1 call Extrae_address
 516+ A151
 517+ A151 13               inc de
 518+ A152 13               inc de
 519+ A153
 520+ A153 ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A157
 522+ A157 2D               dec l
 523+ A158 7E               ld a,(hl)
 524+ A159 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A15A 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A15C
 527+ A15C              ; ----- ----- ----- -----
 528+ A15C
 529+ A15C 2D               dec l
 530+ A15D CD 55 91         call Extrae_address
 531+ A160 E5               push hl
 532+ A161
 533+ A161 1D               dec e
 534+ A162
 535+ A162 EB               ex de,hl
 536+ A163
 537+ A163 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A164 2D               dec l
 539+ A165 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A166 2D               dec l
 541+ A167 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A168
 543+ A168 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A169
 545+ A169              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A169
 547+ A169 FD 2A 60 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A16D FD 73 00         ld (iy+0),e
 549+ A170 FD 70 01         ld (iy+1),b
 550+ A173 FD 71 02         ld (iy+2),c
 551+ A176
 552+ A176 FD 75 03         ld (iy+3),l
 553+ A179 FD 74 04         ld (iy+4),h
 554+ A17C
 555+ A17C CD 5F 9A         call NextScan
 556+ A17F
 557+ A17F FD 75 05         ld (iy+5),l
 558+ A182 FD 74 06         ld (iy+6),h
 559+ A185
 560+ A185 FD E5            push iy
 561+ A187 E1               pop hl
 562+ A188
 563+ A188 3E 07            ld a,7
 564+ A18A 85               add l
 565+ A18B 6F               ld l,a
 566+ A18C
 567+ A18C 22 60 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A18F
 569+ A18F              ; ----- ----- ----- -----
 570+ A18F
 571+ A18F              Situa_en_siguiente_caja
 572+ A18F
 573+ A18F 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A190 3D               dec a
 575+ A191 C8               ret z
 576+ A192
 577+ A192 08               ex af,af
 578+ A193 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A196 18 B6            jr 1B
 580+ A198
 581+ A198              ; --------------------------------------------------------------------------------------
 582+ A198              ;
 583+ A198              ;   12/10/24
 584+ A198              ;
 585+ A198
 586+ A198              Genera_disparo_de_entidad_maldosa
 587+ A198
 588+ A198              ;   Estructura de un disparo de entidades.
 589+ A198
 590+ A198              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A198              ; 	defw 0											; Puntero de impresión.
 592+ A198              ;	defw 0											; Control.
 593+ A198
 594+ A198              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A198              ;   _de la entidad en el momento de disparar.
 596+ A198
 597+ A198              ;   El byte de control muestra la siguiente información:
 598+ A198
 599+ A198              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A198              ;
 601+ A198              ;                        10xx ..... Izquierda.
 602+ A198              ;                        01xx ..... Derecha.
 603+ A198              ;                        00xx ..... Recto.
 604+ A198
 605+ A198              ;*  Exclusiones.
 606+ A198
 607+ A198              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A198              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A198
 610+ A198 3A 64 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A19B A7               and a
 612+ A19C C8               ret z
 613+ A19D
 614+ A19D 3A FF 8B         ld a,(Coordenada_y)
 615+ A1A0 A7               and a
 616+ A1A1 C8               ret z
 617+ A1A2
 618+ A1A2 3D               dec a
 619+ A1A3 C8               ret z
 620+ A1A4
 621+ A1A4 FE 10            cp 16
 622+ A1A6 D0               ret nc
 623+ A1A7
 624+ A1A7              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A1A7              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A1A7              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A1A7
 628+ A1A7 21 66 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A1AA 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A1AB
 631+ A1AB              ;   Decrementa el numero de disparos de entidades.
 632+ A1AB
 633+ A1AB 21 64 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A1AE 35               dec (hl)
 635+ A1AF
 636+ A1AF 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A1B2
 638+ A1B2 CD 55 91     1 call Extrae_address
 639+ A1B5
 640+ A1B5 13               inc de
 641+ A1B6 13               inc de
 642+ A1B7
 643+ A1B7 ED 53 77 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A1BB
 645+ A1BB              ;   Comprobamos si la caja está vacía.
 646+ A1BB
 647+ A1BB 2D               dec l
 648+ A1BC 7E               ld a,(hl)
 649+ A1BD A7               and a
 650+ A1BE 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A1C0 2C               inc l
 652+ A1C1
 653+ A1C1              ;   Caja vacía, vamos a generar un disparo.
 654+ A1C1              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A1C1
 656+ A1C1 CD E2 A1         call Genera_byte_inclinacion
 657+ A1C4
 658+ A1C4 7E               ld a,(hl)
 659+ A1C5 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A1C6
 661+ A1C6 2D               dec l
 662+ A1C7
 663+ A1C7 CD FE A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A1CA
 665+ A1CA 70               ld (hl),b
 666+ A1CB 2D               dec l
 667+ A1CC 71               ld (hl),c
 668+ A1CD
 669+ A1CD 2D               dec l
 670+ A1CE
 671+ A1CE              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A1CE
 673+ A1CE FD 7E 02         ld a,(iy+02)
 674+ A1D1 77               ld (hl),a
 675+ A1D2 2D               dec l
 676+ A1D3
 677+ A1D3 FD 7E 01         ld a,(iy+01)
 678+ A1D6 77               ld (hl),a
 679+ A1D7 2D               dec l
 680+ A1D8
 681+ A1D8 FD 7E 00         ld a,(iy+00)
 682+ A1DB 77               ld (hl),a
 683+ A1DC
 684+ A1DC C9               ret
 685+ A1DD
 686+ A1DD              ;   --- --- ---
 687+ A1DD
 688+ A1DD              Situa_en_siguiente_disparo
 689+ A1DD
 690+ A1DD 2A 77 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A1E0 18 D0            jr 1B
 692+ A1E2
 693+ A1E2              ; --------------------------------------------------------------------------------------
 694+ A1E2              ;
 695+ A1E2              ;   09/10/24
 696+ A1E2              ;
 697+ A1E2
 698+ A1E2              Genera_byte_inclinacion
 699+ A1E2
 700+ A1E2              ; Determina tendencia del disparo.
 701+ A1E2
 702+ A1E2 3A AF 89         ld a,(CX_Amadeus)
 703+ A1E5 47               ld b,a
 704+ A1E6 3A FE 8B         ld a,(Coordenada_X)
 705+ A1E9 90               sub b
 706+ A1EA 38 07            jr c,Disparo_a_derecha
 707+ A1EC
 708+ A1EC FE 06        Disparo_a_izquierda cp 6
 709+ A1EE
 710+ A1EE D8               ret c
 711+ A1EF C8               ret z
 712+ A1F0
 713+ A1F0 CB FE            set 7,(hl)
 714+ A1F2 C9               ret
 715+ A1F3
 716+ A1F3 47           Disparo_a_derecha ld b,a
 717+ A1F4 3E FF            ld a,$ff
 718+ A1F6 90               sub b
 719+ A1F7
 720+ A1F7 FE 05            cp 5
 721+ A1F9
 722+ A1F9 D8               ret c
 723+ A1FA C8               ret z
 724+ A1FB
 725+ A1FB CB F6            set 6,(hl)
 726+ A1FD C9               ret
 727+ A1FE
 728+ A1FE              ; --------------------------------------------------------------------------------------
 729+ A1FE              ;
 730+ A1FE              ;   09/10/24
 731+ A1FE              ;
 732+ A1FE
 733+ A1FE              Modifica_puntero_de_impresion
 734+ A1FE
 735+ A1FE              ;   Puntero de impresión del disparo en BC.
 736+ A1FE
 737+ A1FE E5               push hl
 738+ A1FF
 739+ A1FF 2A 79 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A202 CD 5F 9A         call NextScan
 741+ A205
 742+ A205 4D               ld c,l
 743+ A206 44               ld b,h
 744+ A207
 745+ A207 E1               pop hl
 746+ A208
 747+ A208 08               ex af,af
 748+ A209 CB 77            bit 6,a
 749+ A20B 28 06            jr z,1F
 750+ A20D
 751+ A20D FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A211 0C               inc c
 753+ A212 C9               ret
 754+ A213
 755+ A213 CB 7F        1 bit 7,a
 756+ A215 28 F6            jr z,2B
 757+ A217
 758+ A217 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A21B 0D               dec c
 760+ A21C
 761+ A21C C9               ret
 762+ A21D
 763+ A21D              ; --------------------------------------------------------------------------------------
 764+ A21D              ;
 765+ A21D              ;   28/11/24
 766+ A21D              ;
 767+ A21D
 768+ A21D              Compara_con_coordenadas_de_disparo
 769+ A21D
 770+ A21D DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A220 47               ld b,a
 772+ A221 3A 7E 8C         ld a,(Coordenadas_disparo_certero)
 773+ A224 90               sub b
 774+ A225
 775+ A225              ; A = "0" ok
 776+ A225              ; A = "1" ok
 777+ A225
 778+ A225 28 08            jr z,Comprueba_coordenada_X
 779+ A227 3D               dec a
 780+ A228 28 05            jr z,Comprueba_coordenada_X
 781+ A22A
 782+ A22A              ; A = "$ff" ok
 783+ A22A
 784+ A22A FE FE            cp $fe
 785+ A22C 28 01            jr z,Comprueba_coordenada_X
 786+ A22E
 787+ A22E C9               ret
 788+ A22F
 789+ A22F              Comprueba_coordenada_X
 790+ A22F
 791+ A22F DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A232 47               ld b,a
 793+ A233 21 7F 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A236 7E               ld a,(hl)
 795+ A237 90               sub b
 796+ A238
 797+ A238              ; A = "0" ok
 798+ A238              ; A = "1" ok
 799+ A238
 800+ A238 28 09            jr z,Activa_Impacto_en_entidad
 801+ A23A 3D               dec a
 802+ A23B 28 06            jr z,Activa_Impacto_en_entidad
 803+ A23D
 804+ A23D              ; A = "2" ok
 805+ A23D
 806+ A23D 3D               dec a
 807+ A23E 28 03            jr z,Activa_Impacto_en_entidad
 808+ A240
 809+ A240              ; A = "$ff"
 810+ A240
 811+ A240 FE FD            cp $fd
 812+ A242 C0               ret nz
 813+ A243
 814+ A243              Activa_Impacto_en_entidad
 815+ A243
 816+ A243              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A243
 818+ A243 3E 02            ld a,2
 819+ A245 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A248
 821+ A248              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A248
 823+ A248 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A24B
 825+ A24B DD 73 07         ld (ix+7),e
 826+ A24E DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A251
 828+ A251              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A251
 830+ A251 21 7B 8C         ld hl,Impacto2
 831+ A254 CB 9E            res 3,(hl)
 832+ A256
 833+ A256 C9               ret
 834+ A257
 835+ A257              ; --------------------------------------------------------------------------------------
 836+ A257              ;
 837+ A257              ;   13/10/24
 838+ A257              ;
 839+ A257
 840+ A257              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A257
 842+ A257              Limpia_album_de_pintado_disparos_Amadeus
 843+ A257
 844+ A257 2A 58 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A25A 06 06            ld b,6
 846+ A25C AF               xor a
 847+ A25D 77           1 ld (hl),a
 848+ A25E 2C               inc l
 849+ A25F 10 FC            djnz 1B
 850+ A261
 851+ A261 C9               ret
 852+ A262
 853+ A262              ; --------------------------------------------------------------------------------------
 854+ A262              ;
 855+ A262              ;   29/09/24
 856+ A262              ;
 857+ A262
 858+ A262              Calcula_bytes_pintado_disparos
 859+ A262
 860+ A262 2A 5C 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A265 45               ld b,l
 862+ A266 2A 60 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A269 7D               ld a,l
 864+ A26A
 865+ A26A 90               sub b
 866+ A26B 32 62 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A26E
 868+ A26E C9               ret
 869+ A26F
 870+ A26F              ; --------------------------------------------------------------------------------------
 871+ A26F              ;
 872+ A26F              ;   26/10/24
 873+ A26F              ;
 874+ A26F              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A26F              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A26F              ;   _disparos que el álbum del FRAME actual).
 877+ A26F
 878+ A26F              Limpia_album_de_pintado_disparos_entidades
 879+ A26F
 880+ A26F 21 63 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A272 7E               ld a,(hl)
 882+ A273 2D               dec l
 883+ A274 46               ld b,(hl)
 884+ A275 90               sub b
 885+ A276
 886+ A276 D8               ret c
 887+ A277 C8               ret z
 888+ A278
 889+ A278 F5               push af
 890+ A279 80               add b
 891+ A27A 77               ld (hl),a
 892+ A27B F1               pop af
 893+ A27C
 894+ A27C              ; Clean.
 895+ A27C
 896+ A27C 47           2 ld b,a
 897+ A27D AF               xor a
 898+ A27E 2A 60 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A281 77           1 ld (hl),a
 900+ A282 23               inc hl
 901+ A283 10 FC            djnz 1B
 902+ A285
 903+ A285 C9               ret
 904+ A286
 905+ A286              ; --------------------------------------------------------------------------------------
 906+ A286              ;
 907+ A286              ;   29/09/24
 908+ A286              ;
 909+ A286
 910+ A286              Motor_Disparos_Amadeus
 911+ A286
 912+ A286 21 1D 89         ld hl,Disparo_Amad+1
 913+ A289
 914+ A289 34               inc (hl)
 915+ A28A 35               dec (hl)
 916+ A28B
 917+ A28B C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A28C
 919+ A28C              ;   Esta caja contiene un disparo.
 920+ A28C
 921+ A28C CD 93 A2         call Consulta_Impacto
 922+ A28F CC AC A2         call z,Mueve_disparo_Amadeus
 923+ A292
 924+ A292 C9               ret
 925+ A293
 926+ A293              ; ----------------------
 927+ A293              ;
 928+ A293              ;
 929+ A293              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A293              ;
 931+ A293              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A293
 933+ A293
 934+ A293              Consulta_Impacto
 935+ A293
 936+ A293              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A293              ;   _sea lo más coherente posible.
 938+ A293
 939+ A293 E5               push hl
 940+ A294 2B               dec hl
 941+ A295 CD 88 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A298 E1               pop hl
 943+ A299 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A29A
 945+ A29A C8               ret z
 946+ A29B
 947+ A29B 3A 7B 8C         ld a,(Impacto2)
 948+ A29E CB DF            set 3,a
 949+ A2A0 32 7B 8C         ld (Impacto2),a
 950+ A2A3
 951+ A2A3 E5               push hl
 952+ A2A4 CD 75 A3         call Genera_coordenadas_de_disparo_Amadeus
 953+ A2A7 E1               pop hl
 954+ A2A8 CD C5 A2         call Elimina_disparo_Amadeus
 955+ A2AB
 956+ A2AB C9               ret
 957+ A2AC
 958+ A2AC              ; ----------------------
 959+ A2AC              ;
 960+ A2AC              ;
 961+ A2AC              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A2AC
 963+ A2AC              Mueve_disparo_Amadeus
 964+ A2AC
 965+ A2AC CD 55 91         call Extrae_address
 966+ A2AF
 967+ A2AF CD 6E 9A         call PreviousScan
 968+ A2B2 CD 6E 9A         call PreviousScan
 969+ A2B5 CD 6E 9A         call PreviousScan
 970+ A2B8 CD 6E 9A         call PreviousScan
 971+ A2BB
 972+ A2BB              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A2BB
 974+ A2BB 7C               ld a,h
 975+ A2BC D6 40            sub $40
 976+ A2BE EB               ex de,hl
 977+ A2BF 38 04            jr c,Elimina_disparo_Amadeus
 978+ A2C1
 979+ A2C1               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A2C1
 981+ A2C1 73               ld (hl),e
 982+ A2C2 23               inc hl
 983+ A2C3 72               ld (hl),d
 984+ A2C4
 985+ A2C4 C9               ret
 986+ A2C5
 987+ A2C5              ; ----------------------
 988+ A2C5              ;
 989+ A2C5              ;   29/9/24
 990+ A2C5
 991+ A2C5              Elimina_disparo_Amadeus
 992+ A2C5
 993+ A2C5              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A2C5              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A2C5
 996+ A2C5              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A2C5              ;   	defw 0											; Puntero de impresión.
 998+ A2C5
 999+ A2C5 2B               dec hl
1000+ A2C6 2B               dec hl
1001+ A2C7
1002+ A2C7 AF               xor a
1003+ A2C8 77               ld (hl),a
1004+ A2C9 23               inc hl
1005+ A2CA 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A2CB
1007+ A2CB 23               inc hl
1008+ A2CC 77               ld (hl),a
1009+ A2CD 23               inc hl
1010+ A2CE 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A2CF
1012+ A2CF 3E 01            ld a,1
1013+ A2D1 32 65 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A2D4
1015+ A2D4 CD 57 A2         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A2D7
1017+ A2D7 AF               xor a
1018+ A2D8 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A2D9
1020+ A2D9 C9               ret
1021+ A2DA
1022+ A2DA              ; --------------------------------------------------------------------------------------
1023+ A2DA              ;
1024+ A2DA              ;   13/10/24
1025+ A2DA              ;
1026+ A2DA
1027+ A2DA              Pinta_disparos_Amadeus
1028+ A2DA
1029+ A2DA 06 02            ld b,2
1030+ A2DC ED 73 4C 8C      ld (Stack),sp
1031+ A2E0 ED 7B 5A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A2E4 D1           3 pop de
1033+ A2E5 14               inc d
1034+ A2E6 15               dec d
1035+ A2E7 28 1C            jr z,1F
1036+ A2E9 E1               pop hl
1037+ A2EA
1038+ A2EA              Imprime_scanlines_en_pantalla
1039+ A2EA
1040+ A2EA              ; 1er scanline
1041+ A2EA
1042+ A2EA 1A               ld a,(de)
1043+ A2EB AE               xor (hl)
1044+ A2EC 77               ld (hl),a
1045+ A2ED
1046+ A2ED 1C               inc e
1047+ A2EE 2C               inc l
1048+ A2EF
1049+ A2EF 1A               ld a,(de)
1050+ A2F0 AE               xor (hl)
1051+ A2F1 77               ld (hl),a
1052+ A2F2
1053+ A2F2 1D               dec e
1054+ A2F3 E1               pop hl
1055+ A2F4
1056+ A2F4              ; 2º scanline
1057+ A2F4
1058+ A2F4 1A               ld a,(de)
1059+ A2F5 AE               xor (hl)
1060+ A2F6 77               ld (hl),a
1061+ A2F7
1062+ A2F7 1C               inc e
1063+ A2F8 2C               inc l
1064+ A2F9
1065+ A2F9 1A               ld a,(de)
1066+ A2FA AE               xor (hl)
1067+ A2FB 77               ld (hl),a
1068+ A2FC
1069+ A2FC 1D               dec e
1070+ A2FD
1071+ A2FD 18 06            jr 1F
1072+ A2FF
1073+ A2FF ED 7B 58 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A303 18 DF            jr 3B
1075+ A305 10 F8        1 djnz 2B
1076+ A307 ED 7B 4C 8C      ld sp,(Stack)
1077+ A30B C9               ret
1078+ A30C
1079+ A30C              ; --------------------------------------------------------------------------------------
1080+ A30C              ;
1081+ A30C              ;   13/10/24
1082+ A30C              ;
1083+ A30C              ;   Modifica: HL,BC y DE.
1084+ A30C
1085+ A30C
1086+ A30C              Genera_datos_de_impresion_disparos_Amadeus
1087+ A30C
1088+ A30C ED 73 4C 8C      ld (Stack),sp
1089+ A310 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A313 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A314
1092+ A314 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A315 15               dec d
1094+ A316
1095+ A316 28 0E            jr z,Salida
1096+ A318
1097+ A318              Genera_scanlines_de_disparo_Amadeus
1098+ A318
1099+ A318 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A319              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A319 ED 7B 58 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A31D
1103+ A31D C1               pop bc
1104+ A31E C1               pop bc
1105+ A31F C1               pop bc
1106+ A320
1107+ A320 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A321 CD 6E 9A         call PreviousScan
1109+ A324 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A325 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A326
1112+ A326              Salida
1113+ A326
1114+ A326 ED 7B 4C 8C      ld sp,(Stack)
1115+ A32A
1116+ A32A C9               ret
1117+ A32B
1118+ A32B              ; --------------------------------------------------------------------------------------
1119+ A32B              ;
1120+ A32B              ;   12/09/24
1121+ A32B              ;
1122+ A32B
1123+ A32B              Genera_disparo_Amadeus
1124+ A32B
1125+ A32B              ;*  Exclusiones.
1126+ A32B
1127+ A32B 3A 65 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A32E A7               and a
1129+ A32F C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A330
1131+ A330 3D               dec a
1132+ A331 32 65 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A334
1134+ A334              Define_puntero_objeto_disparo
1135+ A334
1136+ A334              ;   Inicializamos contador.
1137+ A334
1138+ A334 06 00            ld b,0
1139+ A336
1140+ A336 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A339 2C               inc l
1142+ A33A
1143+ A33A 3E 80            ld a,$80
1144+ A33C BE               cp (hl)
1145+ A33D 28 0D            jr z,1F
1146+ A33F
1147+ A33F 04               inc b
1148+ A340
1149+ A340 3E 60            ld a,$60
1150+ A342 BE               cp (hl)
1151+ A343 28 07            jr z,1F
1152+ A345
1153+ A345
1154+ A345 04               inc b
1155+ A346
1156+ A346 3E 18            ld a,$18
1157+ A348 BE               cp (hl)
1158+ A349 28 01            jr z,1F
1159+ A34B
1160+ A34B 04               inc b
1161+ A34C
1162+ A34C              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A34C
1164+ A34C              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A34C
1166+ A34C CD 6E 9A     1 call PreviousScan
1167+ A34F
1168+ A34F 78               ld a,b
1169+ A350 CB 3F            srl a
1170+ A352 28 03            jr z,4F
1171+ A354
1172+ A354              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A354 E5               push hl
1174+ A355 18 02            jr 5F
1175+ A357 2D           4 dec l
1176+ A358 E5               push hl
1177+ A359              ; ---
1178+ A359
1179+ A359              ;   Calcula el Puntero_objeto del disparo.
1180+ A359
1181+ A359 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A35C 04               inc b
1183+ A35D 05               dec b
1184+ A35E 28 04            jr z,2F
1185+ A360
1186+ A360              ;   Nos desplazamos por el índice de disparos.
1187+ A360
1188+ A360 2C           3 inc l
1189+ A361 2C               inc l
1190+ A362 10 FC            djnz 3B
1191+ A364
1192+ A364              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A364 CD 55 91     2 call Extrae_address
1194+ A367 E5               push hl
1195+ A368              ; ---
1196+ A368
1197+ A368              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A368              ; HL en el 1er .db de la caja.
1199+ A368
1200+ A368 21 1C 89         ld hl,Disparo_Amad
1201+ A36B
1202+ A36B 06 02            ld b,2
1203+ A36D
1204+ A36D D1           6 pop de
1205+ A36E 73               ld (hl),e
1206+ A36F 23               inc hl
1207+ A370 72               ld (hl),d
1208+ A371 23               inc hl
1209+ A372
1210+ A372 10 F9            djnz 6B
1211+ A374
1212+ A374 C9               ret
1213+ A375
1214+ A375              Genera_coordenadas_de_disparo_Amadeus
1215+ A375
1216+ A375              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A375              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A375              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A375
1220+ A375 CD 55 91         call Extrae_address
1221+ A378 CD 6A 95         call Genera_coordenadas
1222+ A37B
1223+ A37B 3D               dec a
1224+ A37C
1225+ A37C 21 7E 8C         ld hl,Coordenadas_disparo_certero
1226+ A37F 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A380 23               inc hl
1228+ A381 3A FE 8B         ld a,(Coordenada_X)
1229+ A384 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A385
1231+ A385 AF               xor a
1232+ A386 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A387
1234+ A387 C9               ret
1235+ A388
1236+ A388              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A388              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A388              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A388
1240+ A388              ; ----------------------------------------------
1241+ A388              ;
1242+ A388              ;   27/08/24
1243+ A388              ;
1244+ A388              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A388              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A388
1247+ A388              Detecta_impacto_en_disparo_de_Amadeus
1248+ A388
1249+ A388              Extraccion_de_datos
1250+ A388
1251+ A388 13               inc de
1252+ A389 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A38A
1254+ A38A 5E               ld e,(hl)
1255+ A38B 23               inc hl
1256+ A38C 56               ld d,(hl)
1257+ A38D
1258+ A38D 23               inc hl
1259+ A38E
1260+ A38E 4E               ld c,(hl)
1261+ A38F 23               inc hl
1262+ A390 46               ld b,(hl)
1263+ A391
1264+ A391 C5               push bc
1265+ A392 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A393
1267+ A393              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A393
1269+ A393 CD 6E 9A         call PreviousScan
1270+ A396 CD 6E 9A         call PreviousScan
1271+ A399
1272+ A399              Detecta_impacto_
1273+ A399
1274+ A399 1A               ld a,(de)
1275+ A39A A6               and (hl)
1276+ A39B C0               ret nz
1277+ A39C
1278+ A39C 13               inc de
1279+ A39D 23               inc hl
1280+ A39E
1281+ A39E 1A               ld a,(de)
1282+ A39F A6               and (hl)
1283+ A3A0 C9               ret
1284+ A3A1
1285+ A3A1              ; -------------------------------------------------------------------------------------------------------------
1286+ A3A1              ;
1287+ A3A1              ;   25/11//24
1288+ A3A1              ;
1289+ A3A1              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A3A1              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A3A1              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A3A1              ;
1293+ A3A1              ;   MODIFICA: HL,DE,BC y A.
1294+ A3A1              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A3A1              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A3A1
1297+ A3A1              Colision_Entidad_Amadeus
1298+ A3A1
1299+ A3A1              ; Posible contacto de entidad con Amadeus. ?????
1300+ A3A1
1301+ A3A1              ; Exclusiones:
1302+ A3A1
1303+ A3A1 3A 9D 8C         ld a,(Shield)
1304+ A3A4 A7               and a
1305+ A3A5 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A3A6
1307+ A3A6 21 74 8C         ld hl,Ctrl_3
1308+ A3A9 CB 76            bit 6,(hl)
1309+ A3AB C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A3AC
1311+ A3AC 21 7B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A3AF CB 56            bit 2,(hl)
1313+ A3B1 C0               ret nz
1314+ A3B2
1315+ A3B2 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A3B5 FE 14        	cp $14
1317+ A3B7 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A3B8
1319+ A3B8 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A3BB A7               and a
1321+ A3BC C0               ret nz
1322+ A3BD
1323+ A3BD              Genera_coordenadas_X
1324+ A3BD
1325+ A3BD              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A3BD              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A3BD
1328+ A3BD              ;   Limpiamos almacenes.
1329+ A3BD
1330+ A3BD              ;    call Limpia_Coordenadas_X
1331+ A3BD
1332+ A3BD              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A3BD
1334+ A3BD 21 80 8C         ld hl,Coordenadas_X_Entidad
1335+ A3C0 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A3C3 CD E9 A3         call Guarda_coordenadas_X
1337+ A3C6
1338+ A3C6              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A3C6
1340+ A3C6 3A AF 89         ld a,(CX_Amadeus)
1341+ A3C9 CD E9 A3         call Guarda_coordenadas_X
1342+ A3CC
1343+ A3CC DD E5            push ix
1344+ A3CE CD FD A3         call Compara_coordenadas_X
1345+ A3D1 DD E1            pop ix
1346+ A3D3
1347+ A3D3 C0               ret nz
1348+ A3D4
1349+ A3D4 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A3D6 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A3D9
1352+ A3D9 DD 7D            ld a,ixl
1353+ A3DB C6 04            add 4
1354+ A3DD DD 6F            ld ixl,a
1355+ A3DF
1356+ A3DF DD 22 7C 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A3E3
1358+ A3E3 21 7B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A3E6 CB D6            set 2,(hl)
1360+ A3E8
1361+ A3E8 C9               ret
1362+ A3E9
1363+ A3E9               ; ----- ----- ----- ----- -----
1364+ A3E9
1365+ A3E9 77           Guarda_coordenadas_X ld (hl),a
1366+ A3EA 3C               inc a
1367+ A3EB 2C               inc l
1368+ A3EC 77               ld (hl),a
1369+ A3ED 3C               inc a
1370+ A3EE 2C               inc l
1371+ A3EF 77               ld (hl),a
1372+ A3F0 2C               inc l
1373+ A3F1 C9               ret
1374+ A3F2
1375+ A3F2 AF           Limpia_Coordenadas_X xor a
1376+ A3F3 06 06            ld b,6
1377+ A3F5 21 83 8C         ld hl,Coordenadas_X_Amadeus
1378+ A3F8 77           1 ld (hl),a
1379+ A3F9 23               inc hl
1380+ A3FA 10 FC            djnz 1B
1381+ A3FC C9               ret
1382+ A3FD
1383+ A3FD              ; ----- ----- ----- ----- -----
1384+ A3FD
1385+ A3FD              Compara_coordenadas_X
1386+ A3FD
1387+ A3FD DD 21 80 8C      ld ix,Coordenadas_X_Entidad
1388+ A401 DD 7E 00         ld a,(ix+0)
1389+ A404 CD 12 A4         call Comparando
1390+ A407 C8               ret z
1391+ A408
1392+ A408 3C               inc a
1393+ A409 CD 21 A4         call Comparando_1
1394+ A40C C8               ret z
1395+ A40D
1396+ A40D 3C               inc a
1397+ A40E CD 21 A4         call Comparando_1
1398+ A411 C9               ret
1399+ A412
1400+ A412              ; ----- ----- ----- ----- -----
1401+ A412              ;
1402+ A412              ;   4/12/23
1403+ A412              ;
1404+ A412              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A412
1406+ A412              Comparando
1407+ A412
1408+ A412 DD 2C            inc ixl
1409+ A414 DD 2C            inc ixl
1410+ A416 DD 2C            inc ixl
1411+ A418
1412+ A418 DD 46 00         ld b,(ix+0)
1413+ A41B DD 4E 01         ld c,(ix+1)
1414+ A41E DD 56 02         ld d,(ix+2)
1415+ A421
1416+ A421 B8           Comparando_1 cp b
1417+ A422 C8               ret z
1418+ A423 B9               cp c
1419+ A424 C8               ret z
1420+ A425 BA               cp d
1421+ A426 C9               ret
1422+ A427
1423+ A427              ; -----------------------------------------------------------------------
1424+ A427              ;
1425+ A427              ;   04/7/24
1426+ A427              ;
1427+ A427
1428+ A427              Detecta_colision_nave_entidad
1429+ A427
1430+ A427              ; Exclusiones:
1431+ A427
1432+ A427              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A427
1434+ A427 21 7B 8C     	ld hl,Impacto2
1435+ A42A CB 56        	bit 2,(hl)
1436+ A42C C8           	ret z
1437+ A42D
1438+ A42D              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A42D
1440+ A42D 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A430 CD 55 91         call Extrae_address
1442+ A433 54               ld d,h
1443+ A434 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A435
1445+ A435 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A438 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A43A FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A43D
1449+ A43D C5           1 push bc
1450+ A43E 06 03            ld b,3
1451+ A440 E5               push hl
1452+ A441
1453+ A441              ; .db
1454+ A441
1455+ A441 1A           3 ld a,(de)
1456+ A442 A7               and a
1457+ A443 20 03            jr nz,4F
1458+ A445
1459+ A445 2C               inc l
1460+ A446 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A448
1462+ A448 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A44A 28 04            jr z,2F
1464+ A44C
1465+ A44C              ; Impacto.
1466+ A44C FD 2D            dec iyl
1467+ A44E 28 22            jr z,5F
1468+ A450
1469+ A450 1C           2 inc e
1470+ A451 10 EE            djnz 3B
1471+ A453
1472+ A453 E1               pop hl
1473+ A454
1474+ A454              ; Hay salto de línea en el puntero de impresión ???
1475+ A454
1476+ A454 7C               ld a,h
1477+ A455 D6 57            sub $57
1478+ A457 20 0A            jr nz,6F
1479+ A459
1480+ A459              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A459
1482+ A459 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A45C 3E 20            ld a,$20
1484+ A45E A7               and a
1485+ A45F 85               add l
1486+ A460 6F               ld l,a
1487+ A461 18 01            jr 7F
1488+ A463
1489+ A463 24           6 inc h
1490+ A464
1491+ A464 C1           7 pop bc
1492+ A465 10 D6            djnz 1B
1493+ A467
1494+ A467              ;   Fin de la comparativa.
1495+ A467
1496+ A467              ;   NO HAY COLISIÓN !!!!!.
1497+ A467              ;
1498+ A467              ;   .db (Impacto) de Amadeus a "0".
1499+ A467              ;   RES el bit2 de (Impacto2).
1500+ A467              ;
1501+ A467              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A467              ;   Lo colocamos a "0".
1503+ A467
1504+ A467 21 7B 8C         ld hl,Impacto2
1505+ A46A CB 96            res 2,(hl)
1506+ A46C 2A 7C 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A46F 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A471 C9               ret
1509+ A472
1510+ A472              ;   COLISIÓN !!!!!.
1511+ A472              ;
1512+ A472              ;   .db (Impacto) de Amadeus a "1".
1513+ A472              ;   SET el bit3 de (Impacto2).
1514+ A472              ;
1515+ A472              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A472
1517+ A472 E1           5 pop hl
1518+ A473 C1               pop bc
1519+ A474
1520+ A474 21 B2 89         ld hl,Impacto_Amadeus
1521+ A477 36 01            ld (hl),1
1522+ A479 21 7B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A47C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A47E
1525+ A47E 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A481 2A 7C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A484
1528+ A484 23               inc hl
1529+ A485 23               inc hl
1530+ A486 23               inc hl
1531+ A487
1532+ A487 73               ld (hl),e
1533+ A488 23               inc hl
1534+ A489 72               ld (hl),d
1535+ A48A
1536+ A48A              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A48A
1538+ A48A 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A48D 21 B5 89         ld hl,Pamm_Amadeus
1540+ A490
1541+ A490 73               ld (hl),e
1542+ A491 23               inc hl
1543+ A492 72               ld (hl),d
1544+ A493
1545+ A493 C9               ret
1546+ A494
1547+ A494
1548+ A494
# file closed: Disparo.asm
2220  A494
2221  A494              	SAVESNA "Pruebas.sna", START
2222  A494
2223  A494
2224  A494
2225  A494
# file closed: Banco_de_pruebas.asm
