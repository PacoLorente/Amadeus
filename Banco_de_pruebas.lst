# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 43 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  9+  83E8              ;                    _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA 1E 47        	defw $471e                                      ; (Posicion_inicio).
199+  84FC 02           	db 2											; (Cuad_objeto).
200+  84FD
201+  84FD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 4E 95 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0	; (Puntero_indice_mov) / (Puntero_mov).
216+  851B
217+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
218+  851E
219+  851E 00           	db 0 											; (Columnas).
220+  851F 00 00        	defw 0											; (Limite_horizontal).
221+  8521 00           	db 0											; (Limite_vertical).
222+  8522
223+  8522              ; ---------- ---------- ---------- ---------- ----------
224+  8522
225+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
226+  8524 00 00        	defw 0                                          ; (Posicion_actual).
227+  8526 00 00        	defw 0											; (Puntero_objeto).
228+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
229+  852B
230+  852B 04           	db %00000100									; (Attr).
231+  852C
232+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
233+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
234+  8530
235+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
236+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
237+  8534
238+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
239+  8536 01           	db 1											; (Cuad_objeto).
240+  8537
241+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
242+  853B
243+  853B 00 00        	db 0,0											; Variables_de_borrado
244+  853D 00 00        	defw 0										 	;	" " " " " " "
245+  853F 00 00        	defw 0											;	" " " " " " "
246+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
247+  8545
248+  8545 00 00        	db 0,0											; Variables_de_pintado
249+  8547 00 00        	defw 0											;	" " " " " " "
250+  8549 00 00        	defw 0											;	" " " " " " "
251+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
252+  854F
253+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
254+  8551
255+  8551 50 95 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
256+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
257+  8558
258+  8558 00           	db 0 											; (Columnas).
259+  8559 00 00        	defw 0											; (Limite_horizontal).
260+  855B 00           	db 0											; (Limite_vertical).
261+  855C
262+  855C              ; ---------- ---------- ---------- ---------- ----------
263+  855C
264+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
265+  855E 00 00        	defw 0                                          ; (Posicion_actual).
266+  8560 00 00        	defw 0 											; (Puntero_objeto).
267+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
268+  8565
269+  8565 01           	db %00000001									; (Attr).
270+  8566
271+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
272+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
273+  856A
274+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
275+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
276+  856E
277+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
278+  8570 00           	db 0											; (Cuad_objeto).
279+  8571
280+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
281+  8575
282+  8575 00 00        	db 0,0											; Variables_de_borrado
283+  8577 00 00        	defw 0										 	;	" " " " " " "
284+  8579 00 00        	defw 0											;	" " " " " " "
285+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
286+  857F
287+  857F 00 00        	db 0,0											; Variables_de_pintado
288+  8581 00 00        	defw 0											;	" " " " " " "
289+  8583 00 00        	defw 0											;	" " " " " " "
290+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
291+  8589
292+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
293+  858B
294+  858B 40 95 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
295+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
296+  8592
297+  8592 00           	db 0 											; (Columnas).
298+  8593 00 00        	defw 0											; (Limite_horizontal).
299+  8595 00           	db 0											; (Limite_vertical).
300+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 50 95        Puntero_indice_mov defw Indice_mov_Onda_senoidal
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
163   85D1
164   85D1
165   85D1
166   85D1
167   85D1
168   85D1
169   85D1              ; Gestión de ENTIDADES.
170   85D1
171   85D1 00 00        Puntero_store_entidades defw 0
172   85D3 00 00        Puntero_restore_entidades defw 0
173   85D5 00 00        Indice_restore defw 0
174   85D7 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
175   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
176   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
177   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
178   85D9              ;														; _ (Numero_de_malotes)="0".
179   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
180   85DB              ;														; _variable para almacenar lo posición del puntero_
181   85DB              ; 														; _de pila, SP.
182   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
183   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
184   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
185   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
186   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
187   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E1              ;														; _el snapshot de los registros del siguiente disparo.
189   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
190   85E1
191   85E1              ; Gestión de Disparos.
192   85E1
193   85E1 00           Numero_de_disparotes db 0
194   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
195   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
196   85E6 00           Impacto db 0											; Este byte indica que se ha producido impacto:
197   85E7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
198   85E7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
199   85E7 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
200   85EA              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
201   85EA              ; Gestión de FRAMES.
202   85EA
203   85EA 00           Switch db 0
204   85EB
205   85EB              ; Variables de Raster y localización en pantalla.
206   85EB
207   85EB 00 FF        Temp_Raster defw $ff00
208   85ED
209   85ED              ; Rutina principal *************************************************************************************************************************************************************************
210   85ED              ;
211   85ED              ;	14/11/22
212   85ED
213   85ED 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
214   85F0
215   85F0 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
216   85F2 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
217   85F4 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
218   85F6 F3           	DI
219   85F7
220   85F7 3E 01        	ld a,1
221   85F9 D3 FE        	out ($fe),a
222   85FB
223   85FB 3E 07        	ld a,%00000111
224   85FD CD 64 91     	call Cls
225   8600
226   8600              ;	call Pinta_FILAS
227   8600
228   8600 CD 59 88     	call Pulsa_ENTER
229   8603
230   8603 21 D7 85     	ld hl,Numero_de_entidades
231   8606 46           	ld b,(hl)
232   8607 04           	inc b
233   8608 05           	dec b
234   8609 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
235   860B
236   860B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
237   860B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
238   860B              ;	Pintamos el resto de entidades:
239   860B
240   860B CD 52 87     	call Inicia_punteros_de_entidades
241   860E
242   860E              ;	INICIA ENTIDADES!!!!!
243   860E
244   860E C5           1 push bc  												; Guardo el contador de entidades.
245   860F CD AC 87      	call Inicia_Puntero_objeto
246   8612 CD B4 8B     	call Draw
247   8615 CD A0 7F     	call Guarda_foto_registros
248   8618 CD F4 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
249   861B C1           	pop bc
250   861C 10 F0        	djnz 1B  											; Decremento el contador de entidades.
251   861E
252   861E              ; 	INICIA AMADEUS!!!!!
253   861E
254   861E CD 35 88     3 call Restore_Amadeus
255   8621 CD AC 87     	call Inicia_Puntero_objeto
256   8624 CD B4 8B     	call Draw
257   8627 CD A0 7F     	call Guarda_foto_registros
258   862A CD 47 88     	call Store_Amadeus
259   862D
260   862D              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
261   862D
262   862D CD 68 87     	call Inicia_Puntero_Disparo_Entidades
263   8630 CD 6F 87     	call Inicia_Puntero_Disparo_Amadeus
264   8633
265   8633              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
266   8633
267   8633 CD 52 87     	call Inicia_punteros_de_entidades
268   8636 CD 23 88     	call Restore_Primera_entidad
269   8639
270   8639 3A D7 85     	ld a,(Numero_de_entidades)
271   863C 3C           	inc a
272   863D 32 D8 85     	ld (Numero_de_malotes),a
273   8640
274   8640 FB           2 ei
275   8641 18 FD        	jr 2B
276   8643
277   8643              ; -----------------------------------------------------------------------------------
278   8643
279   8643              Frame
280   8643
281   8643              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
282   8643              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
283   8643
284   8643 3E 02            ld a,2
285   8645 D3 FE            out ($fe),a
286   8647 CD B8 8E     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
287   864A CD F1 8E     	call Extrae_foto_disparos
288   864D 3E 01            ld a,1
289   864F D3 FE            out ($fe),a
290   8651
291   8651              ; ----------------------------------------------------------------------
292   8651
293   8651              ;	Existe colisión?????
294   8651
295   8651 3A E6 85     	ld a,(Impacto)
296   8654 A7           	and a
297   8655 28 02        	jr z,5F
298   8657
299   8657              ; A="1" Impacto en entidad por disparo de Amadeus.
300   8657              ; A="2"	Impacto en Amadeus por disparo en entidad.
301   8657
302   8657 18 FE        	jr $
303   8659
304   8659 AF           5 xor a
305   865A 32 E6 85     	ld (Impacto),a										; Flag (Impacto) a "0".
306   865D
307   865D CD 46 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
308   8660 CD 64 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
309   8663
310   8663 21 00 70     	ld hl,Album_de_fotos
311   8666 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
312   8669              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
313   8669 3A D7 85         ld a,(Numero_de_entidades)
314   866C 47               ld b,a
315   866D A7           	and a
316   866E 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
317   8670
318   8670 C5           2 push bc
319   8671 CD BD 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
320   8674
321   8674 3A C3 85     	ld a,(Ctrl_0)
322   8677 CB 67        	bit 4,a
323   8679 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
324   867B
325   867B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
326   867B              ; Las entidades sólo generan disparo cuando se mueven.
327   867B              ; 16/02/23.
328   867B              ; [[[
329   867B CD 90 88     	call Detecta_disparo_entidad
330   867E              ; ]]]
331   867E CD 19 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
332   8681
333   8681 21 C3 85     1 ld hl,Ctrl_0
334   8684 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
335   8686 AF           	xor a
336   8687 32 C4 85     	ld (Obj_dibujado),a
337   868A
338   868A CD F4 87     6 call Store_Restore_entidades
339   868D C1           	pop bc
340   868E 10 E0        	djnz 2B
341   8690
342   8690              ; Tras la gestión de las entidades, ... AMADEUS.
343   8690
344   8690 CD 35 88     4 call Restore_Amadeus
345   8693 CD EA 86     	call Mov_Amadeus
346   8696 3A C3 85     	ld a,(Ctrl_0)
347   8699 CB 67        	bit 4,a
348   869B 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
349   869D CD 19 87     	call Guarda_foto_entidad_a_pintar
350   86A0
351   86A0 21 C3 85     3 ld hl,Ctrl_0
352   86A3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
353   86A5 AF           	xor a
354   86A6 32 C4 85     	ld (Obj_dibujado),a
355   86A9 CD 47 88     	call Store_Amadeus
356   86AC
357   86AC              ; -----
358   86AC
359   86AC CD 52 87     	call Inicia_punteros_de_entidades
360   86AF CD 23 88     	call Restore_Primera_entidad
361   86B2
362   86B2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
363   86B2
364   86B2 CD 76 87     	call Calcula_numero_de_malotes
365   86B5 CD 8E 87     	call Calcula_numero_de_disparotes
366   86B8
367   86B8 3E 04        	ld a,4
368   86BA D3 FE        	out ($fe),a
369   86BC C9           	ret
370   86BD
371   86BD              ; --------------------------------------------------------------------------------------------------------------
372   86BD              ;
373   86BD              ;	27/03/23
374   86BD
375   86BD              Mov_obj
376   86BD
377   86BD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
378   86BD
379   86BD AF           	xor a
380   86BE 32 C4 85     	ld (Obj_dibujado),a
381   86C1 CD 23 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
382   86C4              ;														; Obj_dibujado="0".
383   86C4              ; Movemos Entidades malignas.
384   86C4
385   86C4 2A C5 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
386   86C7 24           	inc h                                               ; Salimos de la rutina.
387   86C8 25           	dec h
388   86C9 C8           	ret z
389   86CA
390   86CA CD 52 95     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
391   86CD
392   86CD 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
393   86D0 CB 67        	bit 4,a
394   86D2 C8           	ret z
395   86D3
396   86D3              ; Ha habido desplazamiento de la entidad maligna, :-).
397   86D3              ; Ha llegado a zona de AMADEUS ???
398   86D3
399   86D3 3A 9D 85     	ld a,(Coordenada_y)
400   86D6 FE 14        	cp $14
401   86D8 D4 43 8A     	call nc, Detecta_colision_nave_entidad
402   86DB
403   86DB              ; ---------
404   86DB
405   86DB 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
406   86DD 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
407   86E0 CD 23 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
408   86E3 CD 3A 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
409   86E6 CD 09 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
410   86E9 C9           	ret													; _de la misma.
411   86EA
412   86EA              ; --------------------------------------------------------------------------------------------------------------
413   86EA              ;
414   86EA              ;	29/1/23
415   86EA
416   86EA              Mov_Amadeus
417   86EA
418   86EA AF           	xor a
419   86EB 32 C4 85     	ld (Obj_dibujado),a
420   86EE CD 23 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
421   86F1              ;														; Obj_dibujado="0".
422   86F1              ; Movemos Amadeus.
423   86F1
424   86F1 CD 6D 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
425   86F4 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
426   86F7 CB 67        	bit 4,a
427   86F9 C8           	ret z
428   86FA
429   86FA              ; ---------
430   86FA
431   86FA 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
432   86FC 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
433   86FF CD 23 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
434   8702 CD 3A 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
435   8705 CD 09 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
436   8708 C9           	ret													; _de la nave.
437   8709
438   8709              ; --------------------------------------------------------------------------------------------------------------
439   8709              ;
440   8709              ;	31/01/23
441   8709              ;
442   8709              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
443   8709
444   8709              Guarda_foto_entidad_a_borrar
445   8709
446   8709 CD 8E 8E     	call Prepara_draw
447   870C CD C8 8D     	call calcula_CColumnass
448   870F CD FF 8D     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
449   8712 CD 54 8E     	call Define_rutina_de_impresion
450   8715 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
451   8718 C9           	ret
452   8719
453   8719              ; --------------------------------------------------------------------------------------------------------------
454   8719              ;
455   8719              ;	31/01/23
456   8719              ;
457   8719              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
458   8719              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
459   8719
460   8719              Guarda_foto_entidad_a_pintar
461   8719
462   8719 CD 46 87     	call Repone_pintar
463   871C CD B4 8B     	call Draw
464   871F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
465   8722 C9           	ret
466   8723
467   8723              ; --------------------------------------------------------------------------------------------------------------
468   8723              ;
469   8723              ;
470   8723
471   8723 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
472   8726 3A C4 85     	ld a,(Obj_dibujado)
473   8729 A7           	and a
474   872A 28 05        	jr z,1F
475   872C 11 B9 85     	ld de,Variables_de_pintado
476   872F 18 03        	jr 2F
477   8731 11 AF 85     1 ld de,Variables_de_borrado
478   8734 01 08 00     2 ld bc,8
479   8737 ED B0        	ldir
480   8739 C9           	ret
481   873A
482   873A              ; --------------------------------------------------------------------------------------------------------------
483   873A
484   873A 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
485   873D 11 96 85     	ld de,Filas
486   8740 01 08 00     	ld bc,8
487   8743 ED B0        	ldir
488   8745 C9           	ret
489   8746
490   8746 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
491   8749 11 96 85     	ld de,Filas
492   874C 01 08 00     	ld bc,8
493   874F ED B0        	ldir
494   8751 C9           	ret
495   8752
496   8752              ; *************************************************************************************************************************************************************
497   8752              ;
498   8752              ; 8/1/23
499   8752              ;
500   8752              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
501   8752              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
502   8752              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
503   8752
504   8752              ; Destruye HL y DE !!!!!
505   8752
506   8752              Inicia_punteros_de_entidades
507   8752
508   8752 21 68 84     	ld hl,Indice_de_entidades
509   8755 CD A6 87         call Extrae_address
510   8758 22 D1 85         ld (Puntero_store_entidades),hl
511   875B 21 6A 84     	ld hl,Indice_de_entidades+2
512   875E 22 D5 85     	ld (Indice_restore),hl
513   8761 CD A6 87     	call Extrae_address
514   8764 22 D3 85     	ld (Puntero_restore_entidades),hl
515   8767 C9               ret
516   8768
517   8768              ; *************************************************************************************************************************************************************
518   8768              ;
519   8768              ; 8/1/23
520   8768              ;
521   8768              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
522   8768
523   8768 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
524   876B 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
525   876E C9           	ret
526   876F 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
527   8772 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
528   8775 C9           	ret
529   8776
530   8776              ; -------------------------------------------------------------------------------------------------------------
531   8776              ;
532   8776              ; 28/2/23
533   8776              ;
534   8776
535   8776              Calcula_numero_de_malotes
536   8776
537   8776 21 00 70     	ld hl,Album_de_fotos
538   8779 EB           	ex de,hl
539   877A 2A DD 85     	ld hl,(Stack_snapshot)
540   877D
541   877D 06 00        	ld b,0
542   877F 7D           	ld a,l
543   8780 93           	sub e
544   8781 28 07        	jr z,1F
545   8783
546   8783              ; Nº de malotes no es "0".
547   8783
548   8783 D6 06        2 sub 6
549   8785 04           	inc b
550   8786 A7           	and a
551   8787 20 FA        	jr nz,2B
552   8789 78           	ld a,b
553   878A
554   878A 32 D8 85     1 ld (Numero_de_malotes),a
555   878D C9           	ret
556   878E
557   878E              ; -------------------------------------------------------------------------------------------------------------
558   878E              ;
559   878E              ; 28/2/23
560   878E              ;
561   878E
562   878E              Calcula_numero_de_disparotes
563   878E
564   878E 21 60 70     	ld hl,Album_de_fotos_disparos
565   8791 EB           	ex de,hl
566   8792 2A DF 85     	ld hl,(Stack_snapshot_disparos)
567   8795
568   8795 06 00        	ld b,0
569   8797 7D           	ld a,l
570   8798 93           	sub e
571   8799 28 07        	jr z,1F
572   879B
573   879B              ; Nº de malotes no es "0".
574   879B
575   879B D6 06        2 sub 6
576   879D 04           	inc b
577   879E A7           	and a
578   879F 20 FA        	jr nz,2B
579   87A1 78           	ld a,b
580   87A2
581   87A2 32 E1 85     1 ld (Numero_de_disparotes),a
582   87A5 C9           	ret
583   87A6              ; *************************************************************************************************************************************************************
584   87A6              ;
585   87A6              ; 20/10/22
586   87A6              ;
587   87A6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
588   87A6              ;
589   87A6              ; Destruye el puntero y DE !!!!!
590   87A6
591   87A6 5E           Extrae_address ld e,(hl)
592   87A7 23           	inc hl
593   87A8 56           	ld d,(hl)
594   87A9 2B           	dec hl
595   87AA EB           	ex de,hl
596   87AB C9           	ret
597   87AC
598   87AC              ; *************************************************************************************************************************************************************
599   87AC              ;
600   87AC              ;	7/2/23
601   87AC              ;
602   87AC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
603   87AC              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
604   87AC              ;
605   87AC              ;   Destruye HL y BC !!!!!,
606   87AC              ;
607   87AC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
608   87AC              ;					"0" ..... Izquierda.
609   87AC
610   87AC              Inicia_Puntero_objeto
611   87AC
612   87AC 3A AA 85     	ld a,(Cuad_objeto)
613   87AF E6 01        	and 1
614   87B1 F5           	push af
615   87B2 CC D0 87     	call z,Inicia_puntero_objeto_izq
616   87B5 F1           	pop af
617   87B6 28 2B        	jr z,1F
618   87B8 CD BD 87     	call Inicia_puntero_objeto_der
619   87BB 18 26        	jr 1F
620   87BD
621   87BD              ; Arrancamos desde la parte izquierda de la pantalla.
622   87BD              ; Iniciamos (Indice_Sprite_der).
623   87BD
624   87BD 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
625   87C0 22 A4 85     	ld (Puntero_DESPLZ_der),hl
626   87C3 CD A6 87     	call Extrae_address
627   87C6 22 9A 85     	ld (Puntero_objeto),hl
628   87C9
629   87C9 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
630   87CC              ;	call Extrae_address
631   87CC 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
632   87CF C9           	ret
633   87D0
634   87D0              ; Arrancamos desde la parte derecha de la pantalla.
635   87D0              ; Iniciamos (Indice_Sprite_izq).
636   87D0
637   87D0 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
638   87D3 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
639   87D6 CD A6 87     	call Extrae_address
640   87D9 22 9A 85     	ld (Puntero_objeto),hl
641   87DC
642   87DC 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
643   87DF              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
644   87DF 22 A4 85     	ld (Puntero_DESPLZ_der),hl
645   87E2 C9           	ret
646   87E3
647   87E3              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
648   87E3
649   87E3 21 38 83     1 ld hl,Amadeus
650   87E6 ED 4B 9A 85  	ld bc,(Puntero_objeto)
651   87EA B7 ED 42     	sub hl,bc
652   87ED C0           	ret nz
653   87EE 21 C3 85     	ld hl,Ctrl_0
654   87F1 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
655   87F3 C9           	ret 												; _de nuestra nave en los extremos.
656   87F4
657   87F4              ; *************************************************************************************************************************************************************
658   87F4              ;
659   87F4              ;	8/1/23
660   87F4              ;
661   87F4              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
662   87F4              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
663   87F4
664   87F4              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
665   87F4              ;	_de la 2ª y 3ª entidad respectivamente.
666   87F4
667   87F4              Store_Restore_entidades
668   87F4
669   87F4 E5           	push hl
670   87F5 D5           	push de
671   87F6 C5            	push bc
672   87F7
673   87F7              ;	STORE !!!!!
674   87F7              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
675   87F7
676   87F7 21 96 85     	ld hl,Filas
677   87FA ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
678   87FE 01 3A 00     	ld bc,58
679   8801 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
680   8803
681   8803              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
682   8803
683   8803 2A D3 85     	ld hl,(Puntero_restore_entidades)
684   8806 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
685   8809 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
686   880C 01 3A 00     	ld bc,58
687   880F ED B0        	ldir
688   8811
689   8811              ;	Incrementa RESTORE !!!!!
690   8811
691   8811 2A D5 85         ld hl,(Indice_restore)
692   8814 23           	inc hl
693   8815 23           	inc hl
694   8816 22 D5 85     	ld (Indice_restore),hl
695   8819 CD A6 87         call Extrae_address
696   881C 22 D3 85         ld (Puntero_restore_entidades),hl
697   881F C1           	pop bc
698   8820 D1           	pop de
699   8821 E1           	pop hl
700   8822 C9           	ret
701   8823
702   8823              ; **************************************************************************************************
703   8823              ;
704   8823              ;	29/10/22
705   8823              ;
706   8823              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
707   8823
708   8823 E5           Restore_Primera_entidad push hl
709   8824 D5           	push de
710   8825 C5            	push bc
711   8826 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
712   8829 11 96 85     	ld de,Filas
713   882C 01 3A 00     	ld bc,58
714   882F ED B0        	ldir
715   8831 C1           	pop bc
716   8832 D1           	pop de
717   8833 E1           	pop hl
718   8834 C9           	ret
719   8835
720   8835              ; **************************************************************************************************
721   8835              ;
722   8835              ;	25/01/23
723   8835              ;
724   8835              ;	Restore_Amadeus
725   8835              ;
726   8835              ;	Cargamos en DRAW los parámetros de Amadeus.
727   8835              ;
728   8835
729   8835 E5           Restore_Amadeus	push hl
730   8836 D5           	push de
731   8837 C5            	push bc
732   8838 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
733   883B 11 96 85     	ld de,Filas
734   883E 01 3A 00     	ld bc,58
735   8841 ED B0        	ldir
736   8843 C1           	pop bc
737   8844 D1           	pop de
738   8845 E1           	pop hl
739   8846 C9           	ret
740   8847
741   8847              ; *************************************************************************************************************************************************************
742   8847              ;
743   8847              ;	29/01/23
744   8847              ;
745   8847              ;	Store_Amadeus
746   8847              ;
747   8847              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
748   8847              ;
749   8847
750   8847 E5           Store_Amadeus push hl
751   8848 D5           	push de
752   8849 C5            	push bc
753   884A 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
754   884D 11 74 84     	ld de,Amadeus_db
755   8850 01 3A 00     	ld bc,58
756   8853 ED B0        	ldir
757   8855 C1           	pop bc
758   8856 D1           	pop de
759   8857 E1           	pop hl
760   8858 C9           	ret
761   8859
762   8859              ; **************************************************************************************************
763   8859
764   8859              ; Teclado.
765   8859
766   8859 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
767   885B DB FE        	in a,($fe)
768   885D E6 01        	and $01
769   885F 28 02        	jr z,1f
770   8861 18 F6        	jr Pulsa_ENTER
771   8863 C9           1 ret
772   8864
773   8864              ; **************************************************************************************************
774   8864              ;
775   8864              ; Temporización.
776   8864
777   8864              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
778   8864              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
779   8864              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
780   8864              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
781   8864
782   8864              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
783   8864              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
784   8864              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
785   8864
786   8864              ; A partir de $4f61 no hace falta DELAY.
787   8864
788   8864              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
789   8864
790   8864 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
791   8867 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
792   8868 78           	LD A,B
793   8869 A7           	AND A
794   886A 20 FB        	JR NZ,wait
795   886C C9           	RET
796   886D
797   886D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
798   886D              ;
799   886D              ;	5/3/23
800   886D              ;
801   886D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
802   886D
803   886D              Movimiento_Amadeus
804   886D
805   886D              ; Disparo.
806   886D
807   886D 3E F7        	ld a,$f7												; "5" para disparar.
808   886F DB FE        	in a,($fe)
809   8871 E6 10        	and $10
810   8873 CC C4 88     	call z,Genera_disparo
811   8876
812   8876 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
813   8878 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
814   887A E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
815   887C CC F2 92         call z,Mov_left											;			"			"			"			"			"			"			"			"
816   887F 3E F7        	ld a,$f7
817   8881 DB FE        	in a,($fe)
818   8883 E6 01        	and $01
819   8885 C8           	ret z
820   8886
821   8886 3E F7        	ld a,$f7
822   8888 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
823   888A E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
824   888C CC D4 91     	call z,Mov_right										;			"			"			"			"			"			"			"			"
825   888F C9           	ret
826   8890
827   8890              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
828   8890              ;
829   8890              ;	Rutina provisional para que los malotes cagen balas.
830   8890
831   8890 3E 7F        Detecta_disparo_entidad ld a,$7f
832   8892 DB FE        	in a,($fe)
833   8894 E6 01        	and 1
834   8896 C0           	ret nz
835   8897 CD C4 88     	call Genera_disparo
836   889A C9           	ret
837   889B
838   889B              ; Pinta indicadores de FILAS. ------------------------------------------------------
839   889B
840   889B 21 10 40     Pinta_FILAS ld hl,$4010
841   889E              ;	ld b,9
842   889E              ;2 push hl
843   889E              ;	push bc
844   889E 06 BF        	ld b,$bf
845   88A0 36 80        1 ld (hl),%10000000
846   88A2 CD 9A 8E     	call NextScan
847   88A5 10 F9        	djnz 1B
848   88A7              ;	pop bc
849   88A7              ;	pop hl
850   88A7              ;	inc l
851   88A7              ;	djnz 2B
852   88A7 06 03        	ld b,3
853   88A9 21 00 47         ld hl,$4700
854   88AC CD B2 88     3 call Bucle_1
855   88AF 10 FB            djnz 3B
856   88B1 C9               ret
857   88B2
858   88B2 C5           Bucle_1 push bc
859   88B3 E5                   push hl
860   88B4 D1                   pop de
861   88B5 13                   inc de
862   88B6 01 FF 00             ld bc,255
863   88B9 36 FF                ld (hl),255
864   88BB ED B0                ldir
865   88BD 23                   inc hl
866   88BE 3E 07                ld a,7
867   88C0 84                   add a,h
868   88C1 67                   ld h,a
869   88C2 C1                   pop bc
870   88C3 C9                   ret
871   88C4
872   88C4              ; ---------------------------------------------------------------
873   88C4
874   88C4              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88C4              ; ******************************************************************************************************************************************************************************************
  2+  88C4              ;
  3+  88C4              ;   27/03/23
  4+  88C4              ;
  5+  88C4              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88C4              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88C4              ;
  8+  88C4              ;
  9+  88C4              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88C4              ;
 11+  88C4              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88C4              ;               _ hacen las entidades hacia abajo.
 13+  88C4              ;
 14+  88C4              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88C4              ;
 16+  88C4              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88C4              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88C4              ;
 19+  88C4              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88C4              ;           _ la bala.
 21+  88C4              ;
 22+  88C4              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88C4              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88C4              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88C4              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88C4              ;           _ en el momento de generarse la bala)).
 27+  88C4
 28+  88C4              Genera_disparo
 29+  88C4
 30+  88C4              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88C4              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88C4              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88C4              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88C4              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88C4              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88C4              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88C4
 38+  88C4              ; Exclusiones:
 39+  88C4
 40+  88C4 3A CC 85         ld a,(Columnas)
 41+  88C7 47               ld b,a
 42+  88C8 3A 97 85         ld a,(Columns)
 43+  88CB B8               cp b
 44+  88CC C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88CD
 46+  88CD              ; ----- ----- -----
 47+  88CD
 48+  88CD 3A C3 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
 49+  88D0 CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
 50+  88D2 20 06            jr nz,16F
 51+  88D4
 52+  88D4 3A 9D 85         ld a,(Coordenada_y)
 53+  88D7 FE 14            cp $14
 54+  88D9 D0               ret nc
 55+  88DA
 56+  88DA              ; ----- ----- -----
 57+  88DA
 58+  88DA              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 59+  88DA
 60+  88DA 21 F2 83     16 ld hl,ON_Disparo_2A
 61+  88DD CD A6 87         call Extrae_address
 62+  88E0 24               inc h
 63+  88E1 25               dec h
 64+  88E2 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 65+  88E4
 66+  88E4 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 67+  88E7 A7               and a
 68+  88E8 ED 52            sbc hl,de
 69+  88EA D0               ret nc
 70+  88EB
 71+  88EB              ; ----- ----- -----
 72+  88EB
 73+  88EB 21 00 80     14 ld hl,Indice_disparo
 74+  88EE 3A 9E 85         ld a,(CTRL_DESPLZ)
 75+  88F1 4F               ld c,a
 76+  88F2 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 77+  88F4              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 78+  88F4              ;                                            ""        ""       "f9", B="1"
 79+  88F4              ;                                            ""        ""       "fb", B="2"
 80+  88F4              ;                                            ""        ""       "fb", B="3"
 81+  88F4 A7               and a
 82+  88F5 28 10            jr z,1F
 83+  88F7 E6 01            and 1
 84+  88F9 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 85+  88FA
 86+  88FA 79               ld a,c
 87+  88FB 16 F9            ld d,$f9
 88+  88FD 23           2 inc hl
 89+  88FE 23               inc hl
 90+  88FF 04               inc b
 91+  8900 BA               cp d
 92+  8901 28 04            jr z,1F
 93+  8903 14               inc d
 94+  8904 14               inc d
 95+  8905 18 F6            jr 2B
 96+  8907
 97+  8907 CD A6 87     1 call Extrae_address
 98+  890A E5               push hl
 99+  890B FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
100+  890D DD 21 2D 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
101+  8911
102+  8911              ;	Se cumplen las condiciones necesarias para generar un disparo.
103+  8911              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
104+  8911
105+  8911 3A AA 85     	ld a,(Cuad_objeto)
106+  8914 FE 02            cp 2
107+  8916 38 60            jr c,3F
108+  8918 28 5E            jr z,3F
109+  891A
110+  891A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
111+  891A
112+  891A E6 01            and 1
113+  891C 28 2D            jr z,4F
114+  891E
115+  891E              ; 	Estamos en el 3er cuadrante de pantalla.
116+  891E              ; 	3er CUAD. ----- ----- ----- ----- -----
117+  891E              ;
118+  891E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
119+  891E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
120+  891E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
121+  891E
122+  891E 2A 98 85     	ld hl,(Posicion_actual)
123+  8921
124+  8921              ;   Amadeus o entidad ???.
125+  8921
126+  8921 3A C3 85         ld a,(Ctrl_0)
127+  8924 CB 77            bit 6,a
128+  8926 28 0D            jr z,8F
129+  8928
130+  8928              ; 	Dispara Amadeus.
131+  8928
132+  8928 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
133+  892A CD A9 8E         call PreviousScan
134+  892D CD A9 8E         call PreviousScan
135+  8930
136+  8930              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
137+  8930              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
138+  8930              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
139+  8930              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
140+  8930
141+  8930 CD A2 89         call Ajusta_disparo_parte_izquierda
142+  8933 18 0E            jr 10F
143+  8935
144+  8935              ; 	Dispara Entidad.
145+  8935
146+  8935 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
147+  8937
148+  8937              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
149+  8937              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
150+  8937
151+  8937 C5               push bc
152+  8938 06 10            ld b,16
153+  893A CD 9A 8E     9 call NextScan
154+  893D 10 FB            djnz 9B
155+  893F C1               pop bc
156+  8940
157+  8940              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
158+  8940              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
159+  8940              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
160+  8940              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
161+  8940
162+  8940 CD A2 89         call Ajusta_disparo_parte_izquierda
163+  8943
164+  8943 CD 17 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
165+  8946              ;                                                   ; _al generar el disparo.
166+  8946
167+  8946              ; 	LLegados a este punto tendremos:
168+  8946              ;
169+  8946              ;       Puntero_objeto_disparo en IY.
170+  8946              ;       Rutinas_de_impresion en IX.
171+  8946              ;       Puntero_de_impresion en HL.
172+  8946              ;       Impacto/Dirección en BC.
173+  8946
174+  8946 CD AA 89         call Almacena_disparo
175+  8949 18 4F            jr 6F                                           ; RET.
176+  894B
177+  894B
178+  894B              ; 	Estamos en el 4º cuadrante de pantalla.
179+  894B              ; 	4º CUAD. ----- ----- ----- ----- -----
180+  894B              ;
181+  894B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
182+  894B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
183+  894B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
184+  894B
185+  894B 2A 98 85     4 ld hl,(Posicion_actual)
186+  894E
187+  894E              ;   Amadeus o entidad ???.
188+  894E
189+  894E 3A C3 85         ld a,(Ctrl_0)
190+  8951 CB 77            bit 6,a
191+  8953 28 0D            jr z,11F
192+  8955
193+  8955              ; 	Dispara Amadeus.
194+  8955
195+  8955 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
196+  8957 CD A9 8E         call PreviousScan
197+  895A CD A9 8E         call PreviousScan
198+  895D
199+  895D              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
200+  895D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
201+  895D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
202+  895D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
203+  895D
204+  895D CD 9B 89         call Ajusta_disparo_parte_derecha
205+  8960 18 0E            jr 13F
206+  8962
207+  8962              ; 	Dispara Entidad.
208+  8962
209+  8962 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
210+  8964
211+  8964              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
212+  8964              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
213+  8964
214+  8964 C5               push bc
215+  8965
216+  8965 06 10            ld b,16
217+  8967 CD 9A 8E     12 call NextScan
218+  896A 10 FB            djnz 12B
219+  896C
220+  896C C1               pop bc
221+  896D
222+  896D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
223+  896D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
224+  896D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
225+  896D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
226+  896D
227+  896D CD 9B 89         call Ajusta_disparo_parte_derecha
228+  8970
229+  8970 CD 17 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
230+  8973              ;                                                     ; _al generar el disparo.
231+  8973
232+  8973              ; LLegados a este punto tendremos:
233+  8973              ;
234+  8973              ;       Puntero_objeto_disparo en IY.
235+  8973              ;       Rutinas_de_impresion en IX.
236+  8973              ;       Puntero_de_impresion en HL.
237+  8973              ;       Impacto/Dirección en BC.
238+  8973
239+  8973 CD AA 89         call Almacena_disparo
240+  8976 18 22            jr 6F                                           ; RET.
241+  8978
242+  8978              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
243+  8978
244+  8978 28 11        3 jr z,5F
245+  897A
246+  897A              ; 	1er CUAD. ----- ----- ----- ----- -----
247+  897A              ;
248+  897A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
249+  897A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
250+  897A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
251+  897A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
252+  897A
253+  897A              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
254+  897A              ;	   ""        ""       "f9", B="1"
255+  897A              ;	   ""        ""       "fb", B="2"
256+  897A              ; 	   ""        ""       "fb", B="3"
257+  897A
258+  897A 2A 98 85     	ld hl,(Posicion_actual)
259+  897D CD 9A 8E     	call NextScan
260+  8980
261+  8980              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
262+  8980              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
263+  8980              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
264+  8980              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
265+  8980
266+  8980 CD A2 89         call Ajusta_disparo_parte_izquierda
267+  8983
268+  8983              ; 	No se produce impacto. B="$80"
269+  8983              ; 	Dirección del proyectil hacia abajo. C="$80"
270+  8983
271+  8983 01 80 80         ld bc,$8080
272+  8986
273+  8986              ; 	LLegados a este punto tendremos:
274+  8986              ;
275+  8986              ;       Puntero_objeto_disparo en IY.
276+  8986              ;       Rutinas_de_impresion en IX.
277+  8986              ;       Puntero_de_impresion en HL.
278+  8986              ;       Impacto/Dirección en BC.
279+  8986
280+  8986 CD AA 89         call Almacena_disparo
281+  8989 18 0F            jr 6F                                           ; RET.
282+  898B
283+  898B              ; 	Estamos en el 2º cuadrante de pantalla.
284+  898B              ; 	2º CUAD. ----- ----- ----- ----- -----
285+  898B              ;
286+  898B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
287+  898B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
288+  898B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
289+  898B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
290+  898B
291+  898B 2A 98 85     5 ld hl,(Posicion_actual)
292+  898E CD 9A 8E     	call NextScan
293+  8991
294+  8991              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
295+  8991              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
296+  8991              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
297+  8991              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
298+  8991
299+  8991 CD 9B 89         call Ajusta_disparo_parte_derecha
300+  8994
301+  8994              ; 	No se produce impacto. B="$80"
302+  8994              ; 	Dirección del proyectil hacia abajo. C="80"
303+  8994
304+  8994 01 80 80     15 ld bc,$8080
305+  8997
306+  8997              ; 	LLegados a este punto tendremos:
307+  8997              ;
308+  8997              ;       Puntero_objeto_disparo en IY.
309+  8997              ;       Rutinas_de_impresion en IX.
310+  8997              ;       Puntero_de_impresion en HL.
311+  8997              ;       Impacto/Dirección en BC.
312+  8997
313+  8997 CD AA 89         call Almacena_disparo
314+  899A
315+  899A C9           6 ret
316+  899B
317+  899B              ; ----------------------------------------------------------------
318+  899B              ;
319+  899B              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
320+  899B              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
321+  899B              ;	_ (lado izq. o derecho), de la entidad que lo genera.
322+  899B
323+  899B 78           Ajusta_disparo_parte_derecha ld a,b
324+  899C FE 02            cp 2
325+  899E 38 01            jr c,1F
326+  89A0 23               inc hl
327+  89A1 C9           1 ret
328+  89A2
329+  89A2 78           Ajusta_disparo_parte_izquierda ld a,b
330+  89A3 FE 01        	cp 1
331+  89A5 20 01        	jr nz,1F
332+  89A7 2B           	dec hl
333+  89A8 2B           1 dec hl
334+  89A9 C9               ret
335+  89AA
336+  89AA              ; ----------------------------------------------------------------
337+  89AA              ;
338+  89AA              ;   25/02/23
339+  89AA              ;
340+  89AA              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
341+  89AA              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
342+  89AA
343+  89AA              Almacena_disparo
344+  89AA
345+  89AA E5               push hl  										; HL contiene el puntero de impresión.
346+  89AB F1               pop af
347+  89AC 08               ex af,af                                        ; Puntero_de_impresion en AF'.
348+  89AD
349+  89AD 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
350+  89AE E6 01            and 1
351+  89B0 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
352+  89B2              ;                                                   ; _ es Amadeus o una entidad la que dispara.
353+  89B2              ; 	Dispara AMADEUS.
354+  89B2
355+  89B2              ;	Comprobamos que a Amadeus aún le quedan disparos.
356+  89B2              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
357+  89B2              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
358+  89B2              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
359+  89B2
360+  89B2 C5               push bc
361+  89B3 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
362+  89B6 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
363+  89B9 A7               and a
364+  89BA ED 42            sbc hl,bc
365+  89BC CC 6F 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
366+  89BF C1               pop bc
367+  89C0 28 54            jr z,4F
368+  89C2
369+  89C2 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
370+  89C5 23               inc hl
371+  89C6 23               inc hl
372+  89C7 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
373+  89CA              ;                                                   ; _ Disparo_(+1).
374+  89CA 18 18            jr 2F
375+  89CC
376+  89CC              ; Dispara una entidad.
377+  89CC
378+  89CC C5           1 push bc
379+  89CD 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
380+  89D0 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
381+  89D3 A7               and a
382+  89D4 ED 42            sbc hl,bc
383+  89D6 CC 68 87         call z,Inicia_Puntero_Disparo_Entidades
384+  89D9 C1               pop bc
385+  89DA 28 3A            jr z,4F
386+  89DC
387+  89DC 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
388+  89DF 23               inc hl
389+  89E0 23               inc hl
390+  89E1 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
391+  89E4              ;                                                   ; _ Disparo_(+1).
392+  89E4 CD A6 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
393+  89E7              ;                                                   ; _ los 8 bytes que definen el disparo:
394+  89E7              ;
395+  89E7              ;                                                     Puntero_objeto_disparo en IY.
396+  89E7              ;                                                     Rutinas_de_impresion en IX.
397+  89E7              ;                                                     Puntero_de_impresion en HL.
398+  89E7              ;                                                     Impacto/Dirección en BC.
399+  89E7
400+  89E7 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
401+  89E8 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
402+  89E9 23               inc hl                                          ; _ al siguiente.
403+  89EA A7               and a
404+  89EB 20 C0            jr nz,3B
405+  89ED
406+  89ED 08               ex af,af
407+  89EE ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
408+  89F2 F9               ld sp,hl
409+  89F3
410+  89F3 DD E5            push ix                                         ; Rutina de impresión.
411+  89F5 F5               push af                                         ; Puntero de impresión.
412+  89F6 FD E5            push iy                                         ; Puntero objeto.
413+  89F8 C5               push bc                                         ; Control.
414+  89F9
415+  89F9 ED 7B D9 85      ld sp,(Stack)
416+  89FD
417+  89FD              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
418+  89FD
419+  89FD 21 D0 85     	ld hl,Ctrl_1
420+  8A00 CB C6        	set 0,(hl)
421+  8A02
422+  8A02 DD E5        	push ix
423+  8A04 E1               pop hl
424+  8A05 F5               push af
425+  8A06 DD E1            pop ix
426+  8A08
427+  8A08 CD A0 7F     	call Guarda_foto_registros
428+  8A0B
429+  8A0B 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
430+  8A0E CB 86        	res 0,(hl)
431+  8A10
432+  8A10              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
433+  8A10              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
434+  8A10
435+  8A10 CD 6F 87         call Inicia_Puntero_Disparo_Amadeus
436+  8A13 CD 68 87         call Inicia_Puntero_Disparo_Entidades
437+  8A16
438+  8A16 C9           4 ret
439+  8A17
440+  8A17              ; ----------------------------------------------------------------
441+  8A17              ;
442+  8A17              ;   4/3/23
443+  8A17              ;
444+  8A17              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
445+  8A17              ;   _ al generarse el disparo.
446+  8A17              ;
447+  8A17              ;       "$80" ..... No se produce colisión.
448+  8A17              ;       "$81" ..... Se produce colisión.
449+  8A17
450+  8A17              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
451+  8A17              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
452+  8A17
453+  8A17
454+  8A17 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
455+  8A19 E5               push hl                                        ; Puntero de impresión.
456+  8A1A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
457+  8A1C CD 33 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
458+  8A1F E1               pop hl
459+  8A20 E5               push hl
460+  8A21 CD 9A 8E         call NextScan
461+  8A24
462+  8A24 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
463+  8A25 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
464+  8A27 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
465+  8A29              ;                                                  ; _ 2º scanline si esto es así.
466+  8A29 1E 80            ld e,$80                                       ; ----- ( ) -----
467+  8A2B CD 33 8A         call Bucle_2
468+  8A2E
469+  8A2E 43           2 ld b,e
470+  8A2F E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
471+  8A30 FD E1            pop iy
472+  8A32 C9               ret
473+  8A33
474+  8A33               ; ---------- ----------
475+  8A33
476+  8A33 06 02        Bucle_2 ld b,2
477+  8A35 FD 7E 00     2 ld a,(iy)
478+  8A38 A6               and (hl)
479+  8A39 28 02            jr z,1F
480+  8A3B 1E 81            ld e,$81
481+  8A3D 23           1 inc hl
482+  8A3E FD 23            inc iy
483+  8A40 10 F3            djnz 2B
484+  8A42 C9               ret
485+  8A43
486+  8A43              ; -------------------------------------------------------------------------------------------------------------
487+  8A43              ;
488+  8A43              ;   01/04/23
489+  8A43              ;
490+  8A43              ;
491+  8A43              ;
492+  8A43
493+  8A43 18 FE        Detecta_colision_nave_entidad jr $
494+  8A45
495+  8A45
496+  8A45
497+  8A45
498+  8A45
499+  8A45 C9               ret
500+  8A46
501+  8A46
502+  8A46
503+  8A46
504+  8A46
505+  8A46              ; -------------------------------------------------------------------------------------------------------------
506+  8A46              ;
507+  8A46              ;   13/03/23
508+  8A46              ;
509+  8A46              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
510+  8A46              ;
511+  8A46              ;   DESTRUYE: HL,BC,DE y A.
512+  8A46
513+  8A46 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
514+  8A49 7E               ld a,(hl)
515+  8A4A A7               and a
516+  8A4B C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
517+  8A4C
518+  8A4C 44               ld b,h
519+  8A4D 4D               ld c,l
520+  8A4E 2A DF 85         ld hl,(Stack_snapshot_disparos)
521+  8A51 E5               push hl
522+  8A52 A7               and a
523+  8A53 ED 42            sbc hl,bc
524+  8A55 E5               push hl
525+  8A56 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
526+  8A57
527+  8A57 E1               pop hl
528+  8A58 54               ld d,h
529+  8A59 5D               ld e,l
530+  8A5A 1B               dec de
531+  8A5B ED B8            lddr                                                ; Limpiamos.
532+  8A5D
533+  8A5D 21 60 70         ld hl,Album_de_fotos_disparos
534+  8A60 22 DF 85         ld (Stack_snapshot_disparos),hl
535+  8A63
536+  8A63 C9               ret
537+  8A64
538+  8A64              ; -------------------------------------------------------------------------------------------------------------
539+  8A64              ;
540+  8A64              ;   28/03/23
541+  8A64              ;
542+  8A64
543+  8A64 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
544+  8A67 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
545+  8A6A
546+  8A6A CD A6 87     2 call Extrae_address
547+  8A6D 7E               ld a,(hl)
548+  8A6E A7               and a
549+  8A6F 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
550+  8A71
551+  8A71              ; ----- ----- ----- ----- ----- -----
552+  8A71
553+  8A71 C5               push bc
554+  8A72 CD 0E 8B         call foto_disparo_a_borrar
555+  8A75
556+  8A75              ; Existe colisión con este disparo???
557+  8A75
558+  8A75 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
559+  8A76 7E               ld a,(hl)
560+  8A77 2B               dec hl
561+  8A78 E6 01            and 1
562+  8A7A 28 0C            jr z,9F
563+  8A7C
564+  8A7C              ; Elimino el disparo de la base de datos.
565+  8A7C
566+  8A7C E5               push hl
567+  8A7D CD 88 8B         call Elimina_disparo_de_base_de_datos
568+  8A80 E1               pop hl
569+  8A81 3E 01            ld a,1
570+  8A83 32 E6 85         ld (Impacto),a                                       ; Indicamos que se ha producido Impacto en una entidad.
571+  8A86 18 06            jr 11F
572+  8A88
573+  8A88 CD 37 8B     9 call Mueve_disparo
574+  8A8B CD 0E 8B         call foto_disparo_a_borrar
575+  8A8E
576+  8A8E C1           11 pop bc
577+  8A8F
578+  8A8F 18 04            jr 7F
579+  8A91
580+  8A91              ; ----- ----- ----- ----- ----- -----
581+  8A91
582+  8A91 ED 42        1 sbc hl,bc
583+  8A93 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
584+  8A95
585+  8A95 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
586+  8A98 23               inc hl
587+  8A99 23               inc hl
588+  8A9A 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
589+  8A9D 18 CB            jr 2B
590+  8A9F
591+  8A9F CD 6F 87     3 call Inicia_Puntero_Disparo_Amadeus
592+  8AA2
593+  8AA2 01 66 84         ld bc,Disparo_11
594+  8AA5 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
595+  8AA8
596+  8AA8 CD A6 87     5 call Extrae_address
597+  8AAB 7E               ld a,(hl)
598+  8AAC A7               and a
599+  8AAD 28 4D            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
600+  8AAF
601+  8AAF              ; ----- ----- ----- ----- ----- -----
602+  8AAF
603+  8AAF C5               push bc
604+  8AB0 CD 0E 8B         call foto_disparo_a_borrar
605+  8AB3
606+  8AB3              ; Existe colisión con este disparo???
607+  8AB3
608+  8AB3 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
609+  8AB4 7E               ld a,(hl)
610+  8AB5 2B               dec hl
611+  8AB6 E6 01            and 1
612+  8AB8 28 39            jr z,10F
613+  8ABA
614+  8ABA              ; La colisión se produce con Amadeus???
615+  8ABA              ; Amadeus siempre tiene (Coordenada_y)="$16".
616+  8ABA
617+  8ABA E5               push hl
618+  8ABB
619+  8ABB 06 04            ld b,4
620+  8ABD 23           16 inc hl
621+  8ABE 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
622+  8AC0
623+  8AC0 CD A6 87         call Extrae_address
624+  8AC3 CD B1 94         call Genera_coordenadas_disparo
625+  8AC6 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
626+  8AC7 FE 16            cp $16
627+  8AC9 38 16            jr c,15F
628+  8ACB
629+  8ACB              ; (Colisiones en filas 16 y 17).
630+  8ACB
631+  8ACB D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
632+  8ACC CD 93 8B         call Guarda_coordenadas_X_de_Amadeus
633+  8ACF D1               pop de                                               ; Coordenadas del disparo en DE. D Coordenada_X.
634+  8AD0
635+  8AD0 21 E7 85         ld hl,Coordenadas_X_Amadeus
636+  8AD3 7E               ld a,(hl)
637+  8AD4 BA           18 cp d
638+  8AD5 20 03            jr nz,17F
639+  8AD7
640+  8AD7              ; Colisión Amadeus !!!!!!!!!!
641+  8AD7
642+  8AD7 E1               pop hl
643+  8AD8 18 0D            jr 14F
644+  8ADA
645+  8ADA 23           17 inc hl
646+  8ADB 7E               ld a,(hl)
647+  8ADC A7               and a
648+  8ADD 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
649+  8ADF 18 F3            jr 18B
650+  8AE1
651+  8AE1              ; No hay colisión. Amadeus se encuentra en una línea inferior.
652+  8AE1              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
653+  8AE1
654+  8AE1 E1           15  pop hl
655+  8AE2 23               inc hl
656+  8AE3 35               dec (hl)
657+  8AE4 2B               dec hl
658+  8AE5 18 0C            jr 10F
659+  8AE7
660+  8AE7              ; -----------------------debug
661+  8AE7
662+  8AE7              ; Elimino el disparo de la base de datos.
663+  8AE7
664+  8AE7 E5           14 push hl
665+  8AE8 CD 88 8B         call Elimina_disparo_de_base_de_datos
666+  8AEB E1               pop hl
667+  8AEC
668+  8AEC 3E 02            ld a,2                                               ; Indicamos que se ha producido Impacto en Amadeus.
669+  8AEE 32 E6 85         ld (Impacto),a
670+  8AF1 18 06            jr 12F
671+  8AF3
672+  8AF3 CD 37 8B     10 call Mueve_disparo
673+  8AF6 CD 0E 8B         call foto_disparo_a_borrar
674+  8AF9 C1           12 pop bc
675+  8AFA
676+  8AFA 18 04            jr 8F
677+  8AFC
678+  8AFC              ; ----- ----- ----- ----- ----- -----
679+  8AFC
680+  8AFC ED 42        4 sbc hl,bc
681+  8AFE 28 0A            jr z,6F
682+  8B00
683+  8B00 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
684+  8B03 23               inc hl
685+  8B04 23               inc hl
686+  8B05 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
687+  8B08 18 9E            jr 5B
688+  8B0A
689+  8B0A CD 68 87     6 call Inicia_Puntero_Disparo_Entidades
690+  8B0D C9               ret
691+  8B0E
692+  8B0E              ; ------------------------------------------------------------------
693+  8B0E
694+  8B0E              foto_disparo_a_borrar
695+  8B0E
696+  8B0E 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
697+  8B0F A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
698+  8B10 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
699+  8B11
700+  8B11 E5               push hl
701+  8B12 23               inc hl
702+  8B13 23               inc hl
703+  8B14 ED 73 D9 85      ld (Stack),sp
704+  8B18 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
705+  8B19 FD E1            pop iy
706+  8B1B DD E1            pop ix
707+  8B1D E1               pop hl
708+  8B1E ED 7B D9 85      ld sp,(Stack)
709+  8B22 3A D0 85         ld a,(Ctrl_1)
710+  8B25 CB C7            set 0,a
711+  8B27 32 D0 85         ld (Ctrl_1),a
712+  8B2A CD A0 7F         call Guarda_foto_registros
713+  8B2D 3A D0 85         ld a,(Ctrl_1)
714+  8B30 CB 87            res 0,a
715+  8B32 32 D0 85         ld (Ctrl_1),a
716+  8B35 E1               pop hl
717+  8B36 C9               ret
718+  8B37
719+  8B37 E5           Mueve_disparo push hl
720+  8B38 7E               ld a,(hl)
721+  8B39 06 04            ld b,4
722+  8B3B 23           1 inc hl
723+  8B3C 10 FD            djnz 1B
724+  8B3E
725+  8B3E              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
726+  8B3E
727+  8B3E CD A6 87         call Extrae_address
728+  8B41
729+  8B41 E6 01            and 1
730+  8B43 28 2A            jr z,2F
731+  8B45
732+  8B45              ; Disparo hacia arriba, (Amadeus).
733+  8B45
734+  8B45              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
735+  8B45              ; _ de la dificultad.
736+  8B45
737+  8B45 CD A9 8E         call PreviousScan
738+  8B48 CD A9 8E         call PreviousScan
739+  8B4B CD A9 8E         call PreviousScan
740+  8B4E
741+  8B4E              ; Detecta si el disparo de Amadeus sale de pantalla:
742+  8B4E
743+  8B4E 7C               ld a,h
744+  8B4F FE 40            cp $40
745+  8B51 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
746+  8B53
747+  8B53              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
748+  8B53
749+  8B53 EB               ex de,hl
750+  8B54 06 04            ld b,4
751+  8B56 2B           6 dec hl
752+  8B57 10 FD            djnz 6B
753+  8B59
754+  8B59 CD 88 8B         call Elimina_disparo_de_base_de_datos
755+  8B5C
756+  8B5C 18 0C            jr 4F
757+  8B5E
758+  8B5E              ; Se ha desplazado la bala, compruebo colisión.
759+  8B5E
760+  8B5E D5           3 push de
761+  8B5F C5               push bc
762+  8B60 CD 17 8A         call Comprueba_Colision
763+  8B63 78               ld a,b
764+  8B64 C1               pop bc
765+  8B65 D1               pop de
766+  8B66
767+  8B66 EB               ex de,hl
768+  8B67
769+  8B67 73               ld (hl),e
770+  8B68 23               inc hl
771+  8B69 72               ld (hl),d
772+  8B6A
773+  8B6A E1           4 pop hl
774+  8B6B 23               inc hl
775+  8B6C 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
776+  8B6D 2B               dec hl
777+  8B6E C9               ret
778+  8B6F
779+  8B6F              ; Disparo hacia abajo, (Entidad).
780+  8B6F
781+  8B6F              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
782+  8B6F              ; _ de la dificultad.
783+  8B6F
784+  8B6F CD 9A 8E     2 call NextScan
785+  8B72 CD 9A 8E         call NextScan
786+  8B75 CD 9A 8E         call NextScan
787+  8B78
788+  8B78              ; Detecta si el disparo de la entidad sale de la pantalla.
789+  8B78
790+  8B78 7C               ld a,h
791+  8B79 FE 58            cp $58
792+  8B7B 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
793+  8B7D
794+  8B7D EB               ex de,hl
795+  8B7E 06 04            ld b,4
796+  8B80 2B           5 dec hl
797+  8B81 10 FD            djnz 5B
798+  8B83
799+  8B83 CD 88 8B         call Elimina_disparo_de_base_de_datos
800+  8B86
801+  8B86 18 E2            jr 4B
802+  8B88
803+  8B88              ; HL apunta al primer byte de la base de datos del disparo.
804+  8B88 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
805+  8B8B AF               xor a
806+  8B8C 77               ld (hl),a
807+  8B8D 54               ld d,h
808+  8B8E 5D               ld e,l
809+  8B8F 13               inc de
810+  8B90 ED B0            ldir
811+  8B92 C9               ret
812+  8B93
813+  8B93              ; -----------------------------------------------------------------
814+  8B93              ;
815+  8B93              ;   Guarda las Coordenadas_X que ocupa Amadeus en la pantalla.
816+  8B93              ;
817+  8B93              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
818+  8B93              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
819+  8B93              ;
820+  8B93              ;   En función de si el cuadrante de pantalla en el que se encuentra la nave, es par o impar,_
821+  8B93              ;   _ las columnas guardadas irán en orden creciente o decreciente.
822+  8B93              ;
823+  8B93              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus.
824+  8B93              ;
825+  8B93              ;   MODIFICA: A, HL, DE y C
826+  8B93
827+  8B93 21 7A 84     Guarda_coordenadas_X_de_Amadeus ld hl,Amadeus_db+6
828+  8B96 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
829+  8B97 23               inc hl
830+  8B98 23               inc hl
831+  8B99 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
832+  8B9A
833+  8B9A 21 88 84         ld hl,Amadeus_db+20
834+  8B9D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
835+  8B9E
836+  8B9E
837+  8B9E 21 E7 85         ld hl,Coordenadas_X_Amadeus
838+  8BA1 72               ld (hl),d
839+  8BA2
840+  8BA2 79           3 ld a,c
841+  8BA3 E6 01            and 1
842+  8BA5 20 03            jr nz,1F
843+  8BA7 14               inc d
844+  8BA8 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
845+  8BAA
846+  8BAA              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
847+  8BAA              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
848+  8BAA
849+  8BAA 15           1 dec d
850+  8BAB 23           2 inc hl
851+  8BAC 72               ld (hl),d
852+  8BAD
853+  8BAD 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
854+  8BAE A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
855+  8BAF C8               ret z
856+  8BB0
857+  8BB0 AF               xor a
858+  8BB1 5F               ld e,a
859+  8BB2 18 EE            jr 3B
# file closed: Disparo.asm
875   8BB4              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8BB4              ; ******************************************************************************************************************************************************************************************
  2+  8BB4              ;
  3+  8BB4              ; 01/23
  4+  8BB4              ;
  5+  8BB4              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8BB4
  7+  8BB4 CD 8E 8E     Draw call Prepara_draw
  8+  8BB7 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8BB8 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8BB9 28 05        	jr z,2F
 11+  8BBB
 12+  8BBB 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8BBE 18 0C        	jr 1F
 14+  8BC0 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8BC3 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8BC6 CD 55 8D     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8BC9              ;													; _la esquina superior izquierda de la pantalla.
 18+  8BC9 CD D4 95     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8BCC 3A C3 85     1 ld a,(Ctrl_0)
 20+  8BCF CB 6F        	bit 5,a
 21+  8BD1 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8BD3
 23+  8BD3 CD EB 8B     	call Comprueba_limite_horizontal
 24+  8BD6 CD 7B 8C     	call Comprueba_limite_vertical
 25+  8BD9
 26+  8BD9              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8BD9
 28+  8BD9 CD C8 8D     3 call calcula_CColumnass
 29+  8BDC CD FF 8D     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8BDF CD 54 8E     	call Define_rutina_de_impresion
 31+  8BE2
 32+  8BE2 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8BE5 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8BE7 32 C3 85     	ld (Ctrl_0),a
 35+  8BEA
 36+  8BEA C9           	ret
 37+  8BEB
 38+  8BEB              ; *******************************************************************************************************************************************************************************************
 39+  8BEB              ;	21/01/23
 40+  8BEB              ;
 41+  8BEB              ; 	Comprueba_limite_horizontal.
 42+  8BEB              ;
 43+  8BEB              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8BEB              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8BEB              ;
 46+  8BEB              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8BEB              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8BEB              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8BEB              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8BEB
 51+  8BEB
 52+  8BEB
 53+  8BEB 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8BEE CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8BF0 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8BF2 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8BF4 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8BF7 18 09            jr 6F
 59+  8BF9 CB 5F        1 bit 3,a
 60+  8BFB 28 0A            jr z,2F
 61+  8BFD E6 F7            and $f7
 62+  8BFF 32 C3 85         ld (Ctrl_0),a
 63+  8C02 CD 55 8D     6 call Inicializacion
 64+  8C05 18 5B            jr 5F
 65+  8C07 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8C08
 67+  8C08              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8C08              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8C08
 70+  8C08 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8C09 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8C0C CD 5A 91     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8C0F 67           	ld h,a
 74+  8C10 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8C11 CD 5A 91     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8C14 67           	ld h,a
 77+  8C15 A7           	and a
 78+  8C16 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8C18 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8C19 3A AA 85     	ld a,(Cuad_objeto)
 81+  8C1C FE 02        	cp 2
 82+  8C1E 38 1E        	jr c,3F
 83+  8C20 28 1C        	jr z,3F
 84+  8C22 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8C23 28 23            jr z,7F
 86+  8C25 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8C27 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8C29 E1           	pop hl
 89+  8C2A
 90+  8C2A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8C2A              ; _para indicar con E="2" en caso necesario.
 92+  8C2A
 93+  8C2A E5               push hl
 94+  8C2B C5               push bc
 95+  8C2C CD 5A 91     	call calcula_tercio
 96+  8C2F FE 01        	cp 1
 97+  8C31 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8C33 CD 63 8C         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8C36 28 26            jr z,9F
100+  8C38 38 24            jr c,9F
101+  8C3A 1E 00        11 ld e,0
102+  8C3C 18 22            jr 8F
103+  8C3E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8C3F 28 07        	jr z, 7F
105+  8C41 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8C43 1E 00         	ld e,0
107+  8C45 E1           	pop hl
108+  8C46 18 04        	jr 4F
109+  8C48 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8C4A 18 15            jr 10F
111+  8C4C
112+  8C4C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8C4C              ; _para indicar con E="2" en caso necesario.
114+  8C4C
115+  8C4C E5           4 push hl
116+  8C4D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8C4E CD 5A 91     	call calcula_tercio
118+  8C51 FE 01        	cp 1
119+  8C53 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8C55 CD 63 8C         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8C58 28 04            jr z,9F
122+  8C5A 30 02            jr nc,9F
123+  8C5C 18 02        	jr 8F
124+  8C5E 1E 02        9 ld e,2
125+  8C60 C1           8 pop bc
126+  8C61 E1           10 pop hl
127+  8C62 C9           5 ret
128+  8C63
129+  8C63              ; --------------------
130+  8C63              ;
131+  8C63              ; 25/08/22
132+  8C63
133+  8C63 CD 5A 91     Comprueba_centro call calcula_tercio
134+  8C66 67               ld h,a
135+  8C67 08           	ex af,af
136+  8C68 FE 02        	cp 2
137+  8C6A 38 07        	jr c,1F
138+  8C6C 28 05        	jr z,1F
139+  8C6E 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8C71 18 03        	jr 2F
141+  8C73 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8C76 08           2 ex af,af
143+  8C77 A7               and a
144+  8C78 ED 42            sbc hl,bc
145+  8C7A C9               ret
146+  8C7B
147+  8C7B              ; *********************************************************************************************************************************************************************************************
148+  8C7B              ;
149+  8C7B              ;   16/8/22
150+  8C7B              ;
151+  8C7B              ;	Comprueba_limite_vertical
152+  8C7B              ;
153+  8C7B              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8C7B              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8C7B              ;
156+  8C7B
157+  8C7B 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8C7E 7D           	ld a,l
159+  8C7F E6 1F        	and $1F
160+  8C81 57           	ld d,a
161+  8C82 3A CF 85     	ld a,(Limite_vertical)
162+  8C85 BA           	cp d 											; Límite - Posición.
163+  8C86 08           	ex af,af 										; Resultado de CP d en F'.
164+  8C87 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8C8A CB 47        	bit 0,a
166+  8C8C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8C8E
168+  8C8E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8C8E
170+  8C8E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8C8F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8C91
173+  8C91              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8C91              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8C91
176+  8C91 3A 9C 85         ld a,(Coordenada_X)
177+  8C94 16 0F            ld d,Centro_izquierda
178+  8C96 A7               and a
179+  8C97 92               sub d 											 ; Posición - Centro_izquierda.
180+  8C98 28 1E            jr z,3F
181+  8C9A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8C9C              ;                                                    ; _salimos sin modificar nada.
183+  8C9C 18 0E            jr 2F
184+  8C9E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8C9F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8CA1
187+  8CA1              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8CA1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8CA1
190+  8CA1 3A 9C 85         ld a,(Coordenada_X)
191+  8CA4 16 10            ld d,Centro_derecha
192+  8CA6 A7               and a
193+  8CA7 92               sub d
194+  8CA8 28 0E            jr z,3F
195+  8CAA 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8CAC              ;                                                    ; _salimos sin modificar nada.
197+  8CAC CB 43        2 bit 0,e
198+  8CAE 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8CB0 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8CB1 CD 45 8D         call Modificaccionne
201+  8CB4 C1           	pop bc
202+  8CB5 CD 55 8D         call Inicializacion
203+  8CB8 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8CB9
205+  8CB9              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8CB9
207+  8CB9 C5           4 push bc
208+  8CBA 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8CBD 0A           	ld a,(bc)
210+  8CBE 3D           	dec a
211+  8CBF 47           	ld b,a 											 ; Columnas-1 en B.
212+  8CC0 7D           	ld a,l
213+  8CC1 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8CC2 CB 47        	bit 0,a
215+  8CC4 28 03        	jr z,5F
216+  8CC6 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8CC7 18 2E        	jr 7F
218+  8CC9
219+  8CC9              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8CC9
221+  8CC9 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8CCA F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8CCB 3A C3 85     	ld a,(Ctrl_0)
224+  8CCE CB 4F        	bit 1,a
225+  8CD0 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8CD2 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8CD3
228+  8CD3              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8CD3
230+  8CD3 1C               inc e
231+  8CD4 1D               dec e
232+  8CD5 20 07            jr nz,12F
233+  8CD7 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8CD8 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8CD9 22 98 85     	ld (Posicion_actual),hl
236+  8CDC 18 44        13 jr 9F
237+  8CDE CB 43        12 bit 0,e
238+  8CE0 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8CE2              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8CE2 C1           	pop bc
241+  8CE3 18 D3        	jr 3B
242+  8CE5 80           14 add b
243+  8CE6 6F               ld l,a
244+  8CE7 22 98 85     	ld (Posicion_actual),hl
245+  8CEA CD 45 8D         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8CED 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8CEF E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8CF1 32 C3 85         ld (Ctrl_0),a
249+  8CF4 F1           	pop af
250+  8CF5 18 2B        	jr 9F
251+  8CF7
252+  8CF7              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8CF7
254+  8CF7 F5           7 push af
255+  8CF8 3A C3 85     	ld a,(Ctrl_0)
256+  8CFB CB 47        	bit 0,a
257+  8CFD 20 1D        	jr nz,8F
258+  8CFF F1           	pop af
259+  8D00
260+  8D00              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8D00
262+  8D00 1C           	inc e
263+  8D01 1D               dec e
264+  8D02 20 07            jr nz,10F
265+  8D04 90           	sub b
266+  8D05 6F               ld l,a
267+  8D06 22 98 85     	ld (Posicion_actual),hl
268+  8D09 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8D0B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8D0B CB 43        10 bit 0,e
271+  8D0D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8D0F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8D0F C1           	pop bc
274+  8D10 18 A6        	jr 3B
275+  8D12 90           16 sub b
276+  8D13 6F               ld l,a
277+  8D14 22 98 85     	ld (Posicion_actual),hl
278+  8D17 CD 45 8D         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8D1A 18 06            jr 9F
280+  8D1C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8D1E 32 C3 85         ld (Ctrl_0),a
282+  8D21 F1           	pop af
283+  8D22 C1           9 pop bc
284+  8D23 1E 00        	ld e,0
285+  8D25 CD 55 8D         call Inicializacion
286+  8D28 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8D29 08           	ex af,af
288+  8D2A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8D2B 18 8B            jr 3B
290+  8D2D
291+  8D2D              ; --------------------
292+  8D2D
293+  8D2D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8D2F CD A9 8E     1 call PreviousScan
295+  8D32 10 FB            djnz 1B
296+  8D34 22 98 85     	ld (Posicion_actual),hl
297+  8D37 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8D38 C9           	ret
299+  8D39
300+  8D39              ; --------------------
301+  8D39
302+  8D39 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8D3B CD 9A 8E     1 call NextScan
304+  8D3E 10 FB            djnz 1B
305+  8D40 22 98 85     	ld (Posicion_actual),hl
306+  8D43 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8D44 C9           	ret
308+  8D45
309+  8D45              ; --------------------
310+  8D45              ;
311+  8D45              ;	22/01/23
312+  8D45              ;
313+  8D45              ;	E="1". Hemos cambiado de cuadrante.
314+  8D45              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8D45              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8D45
317+  8D45
318+  8D45              Modificaccionne
319+  8D45
320+  8D45 3A AA 85     	ld a,(Cuad_objeto)
321+  8D48 FE 02        	cp 2
322+  8D4A CC 2D 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8D4D DC 2D 8D         call c,Modifica_Pos_actual
324+  8D50 C8           	ret z
325+  8D51 CD 39 8D         call Modifica_Pos_actual2
326+  8D54 C9               ret
327+  8D55
328+  8D55              ; *************************************************************************************************************************************************************************************************
329+  8D55              ;
330+  8D55              ;	13/8/22
331+  8D55              ;
332+  8D55              ;	Inicializacion
333+  8D55              ;
334+  8D55              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8D55              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8D55              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8D55              ;
338+  8D55              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8D55              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8D55              ;	_ desaparece/aparece.
341+  8D55
342+  8D55              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8D55              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8D55              ;
345+  8D55              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8D55              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8D55              ; 		   [E] ="0"
348+  8D55
349+  8D55              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8D55
351+  8D55 CD 5A 91     Inicializacion call calcula_tercio
352+  8D58 28 36        	jr z,primit
353+  8D5A E6 02        	and 2
354+  8D5C 20 07        	jr nz,segmit
355+  8D5E 7D           	ld a,l
356+  8D5F FE 7F        	cp $7f
357+  8D61 38 2D        	jr c,primit
358+  8D63 28 2B        	jr z,primit
359+  8D65 CD C2 8D     segmit call column
360+  8D68 38 13        	jr c,tercuad
361+  8D6A 3E 04        cuarcuad ld a,4
362+  8D6C 32 AA 85     	ld (Cuad_objeto),a
363+  8D6F 21 20 48     	ld hl,$4820
364+  8D72 22 CD 85     	ld (Limite_horizontal),hl
365+  8D75 21 CF 85     	ld hl,Limite_vertical
366+  8D78 36 0D        	ld (hl),$0d
367+  8D7A 08           	ex af,af
368+  8D7B 18 3C        	jr 1F
369+  8D7D              tercuad
370+  8D7D 3E 03        	ld a,3
371+  8D7F 32 AA 85     	ld (Cuad_objeto),a
372+  8D82 21 20 48     	ld hl,$4820
373+  8D85 22 CD 85     	ld (Limite_horizontal),hl
374+  8D88 21 CF 85     	ld hl,Limite_vertical
375+  8D8B 36 12        	ld (hl),$12
376+  8D8D 08           	ex af,af
377+  8D8E 18 29        	jr 1F
378+  8D90 CD C2 8D     primit call column
379+  8D93 38 13        	jr c, primcuad
380+  8D95              segcuad
381+  8D95 3E 02        	ld a,2
382+  8D97 32 AA 85     	ld (Cuad_objeto),a
383+  8D9A 21 C0 4F     	ld hl,$4fc0
384+  8D9D 22 CD 85     	ld (Limite_horizontal),hl
385+  8DA0 21 CF 85     	ld hl,Limite_vertical
386+  8DA3 36 0D        	ld (hl),$0d
387+  8DA5 08           	ex af,af
388+  8DA6 18 11        	jr 1F
389+  8DA8              primcuad
390+  8DA8 3E 01        	ld a,1
391+  8DAA 32 AA 85     	ld (Cuad_objeto),a
392+  8DAD 21 C0 4F     	ld hl,$4fc0
393+  8DB0 22 CD 85     	ld (Limite_horizontal),hl
394+  8DB3 21 CF 85     	ld hl,Limite_vertical
395+  8DB6 36 12        	ld (hl),$12
396+  8DB8 08           	ex af,af
397+  8DB9 CD 86 94     1 call Genera_coordenadas
398+  8DBC 21 C3 85     	ld hl,Ctrl_0
399+  8DBF CB EE        	set 5,(hl)
400+  8DC1 C9           	ret
401+  8DC2
402+  8DC2              ; ------------------------------------------------------------------------------------------------------------------
403+  8DC2
404+  8DC2              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8DC2              ;
406+  8DC2              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8DC2
408+  8DC2 7D           column ld a,l
409+  8DC3 E6 1F        	and $1f
410+  8DC5 FE 10         	cp $10
411+  8DC7 C9            	ret
412+  8DC8
413+  8DC8              ; --------------------------------------------------------------------------------------------------------------------
414+  8DC8              ;
415+  8DC8              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8DC8              ;
417+  8DC8              ; 14/12/22
418+  8DC8              ;
419+  8DC8              ;	Modifica: A y BC.
420+  8DC8
421+  8DC8 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8DCB E6 01        	and 1
423+  8DCD 28 17        	jr z,1F
424+  8DCF
425+  8DCF              ; Nos encontramos en la parte izquierda de la pantalla
426+  8DCF
427+  8DCF 3A 9C 85     	ld a,(Coordenada_X)
428+  8DD2 47           	ld b,a
429+  8DD3 04           	inc b											; (Coordenada_X)+1 en B.
430+  8DD4 79           	ld a,c
431+  8DD5 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8DD6 38 08        	jr c,2F
433+  8DD8 47           	ld b,a
434+  8DD9 79           	ld a,c
435+  8DDA 90           	sub b
436+  8DDB 32 CC 85     	ld (Columnas),a
437+  8DDE 18 1B        	jr 4F
438+  8DE0 79           2 ld a,c
439+  8DE1 32 CC 85     	ld (Columnas),a
440+  8DE4 18 15        	jr 4F
441+  8DE6
442+  8DE6              ; Nos encontramos en la parte derecha de la pantalla.
443+  8DE6
444+  8DE6 3A 9C 85     1 ld a,(Coordenada_X)
445+  8DE9 81           	add c
446+  8DEA 3D           	dec a
447+  8DEB D6 1F        	sub $1f
448+  8DED 38 08        	jr c,3F
449+  8DEF 47           	ld b,a
450+  8DF0 79           	ld a,c
451+  8DF1 90           	sub b
452+  8DF2 32 CC 85     	ld (Columnas),a
453+  8DF5 18 04        	jr 4F
454+  8DF7 79           3 ld a,c
455+  8DF8 32 CC 85     	ld (Columnas),a
456+  8DFB D9           4 exx
457+  8DFC 4F           	ld c,a
458+  8DFD D9           	exx
459+  8DFE C9            ret
460+  8DFF
461+  8DFF              ; --------------------------------------------------------------------------------------------------------------------
462+  8DFF              ;
463+  8DFF              ; 7/1/23
464+  8DFF              ;
465+  8DFF              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8DFF              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8DFF              ;
468+  8DFF              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8DFF              ;	DESTRUYE: HL,B Y A.
470+  8DFF
471+  8DFF 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8E02 FE 02        	cp 2
473+  8E04 38 18        	jr c,1F
474+  8E06 28 16        	jr z,1F
475+  8E08 E6 01        	and 1
476+  8E0A 28 0D        	jr z,3F
477+  8E0C
478+  8E0C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8E0C
480+  8E0C CD 48 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8E0F
482+  8E0F 7D           9 ld a,l
483+  8E10 E6 1F        	and $1f
484+  8E12 28 2A        	jr z,7F
485+  8E14 2B           	dec hl
486+  8E15 10 F8        	djnz 9B
487+  8E17 18 25        	jr 7F
488+  8E19
489+  8E19              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8E19
491+  8E19 2A 98 85     3 ld hl,(Posicion_actual)
492+  8E1C 18 20        	jr 7F
493+  8E1E
494+  8E1E 28 14        1 jr z,2F
495+  8E20
496+  8E20              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8E20
498+  8E20 CD 48 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8E23 7D           4 ld a,l
500+  8E24 E6 1F        	and $1f
501+  8E26 28 03        	jr z,6F
502+  8E28 2B           	dec hl
503+  8E29 10 F8        	djnz 4B
504+  8E2B 06 0F        6 ld b,15
505+  8E2D CD A9 8E     5 call PreviousScan
506+  8E30 10 FB        	djnz 5B
507+  8E32 18 0A        	jr 7F
508+  8E34
509+  8E34              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8E34
511+  8E34 CD 48 8E     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8E37 06 0F        	ld b,15
513+  8E39 CD A9 8E     8 call PreviousScan
514+  8E3C 10 FB        	djnz 8B
515+  8E3E
516+  8E3E E5           7 push hl
517+  8E3F DD E1        	pop ix
518+  8E41
519+  8E41 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8E44 E5           	push hl
521+  8E45 FD E1        	pop iy
522+  8E47
523+  8E47 C9           	ret
524+  8E48
525+  8E48              ; --------------------------------------------------------------------------------------------------------------------
526+  8E48              ;
527+  8E48              ;	2/1/23
528+  8E48              ;
529+  8E48              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8E48              ;
531+  8E48              ;	Tras esta rutina tenemos:
532+  8E48              ;
533+  8E48              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8E48              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8E48              ;
536+  8E48              ;	DESTRUYE!!!!! HL,B y A.
537+  8E48
538+  8E48 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8E4B 3A CC 85     	ld a,(Columnas)
540+  8E4E 3D           	dec a
541+  8E4F 20 01        	jr nz,1F
542+  8E51 3C           	inc a
543+  8E52 47           1 ld b,a
544+  8E53 C9           	ret
545+  8E54
546+  8E54              ; --------------------------------------------------------------------------------------------------------------------
547+  8E54              ;
548+  8E54              ;	3/1/23
549+  8E54              ;
550+  8E54              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8E54              ;
552+  8E54              ;	Destruye: A,B,HL y DE.
553+  8E54
554+  8E54              Define_rutina_de_impresion
555+  8E54
556+  8E54 3A 97 85     	ld a,(Columns)
557+  8E57 47           	ld b,a
558+  8E58 3A CC 85     	ld a,(Columnas)
559+  8E5B B8           	cp b
560+  8E5C 20 0D        	jr nz,2f
561+  8E5E
562+  8E5E              ;	La entidad se imprime entera.
563+  8E5E
564+  8E5E 21 2A 8F     	ld hl, Indice_entidades_completas
565+  8E61 E6 01        	and 1
566+  8E63 28 02        	jr z,1F
567+  8E65
568+  8E65 23           	inc hl
569+  8E66 23           	inc hl
570+  8E67
571+  8E67 CD A6 87     1 call Extrae_address
572+  8E6A C9           	ret		;	ret
573+  8E6B
574+  8E6B              ;	La entidad no se imprime entera en pantalla.
575+  8E6B
576+  8E6B 3A AA 85     2 ld a,(Cuad_objeto)
577+  8E6E E6 01        	and 1
578+  8E70 28 17        	jr z,3F
579+  8E72
580+  8E72              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8E72
582+  8E72 21 2E 8F     	ld hl, Indice_entidades_incompletas_izquierda
583+  8E75 3A 97 85     4 ld a,(Columns)
584+  8E78 E6 01        	and 1
585+  8E7A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8E7C
587+  8E7C 23           	inc hl
588+  8E7D 23           	inc hl
589+  8E7E
590+  8E7E 3A CC 85     	ld a,(Columnas)
591+  8E81 E6 01        	and 1
592+  8E83 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8E85
594+  8E85 23           	inc hl
595+  8E86 23           	inc hl
596+  8E87
597+  8E87 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8E89
599+  8E89 21 34 8F     3 ld hl, Indice_entidades_incompletas_derecha
600+  8E8C 18 E7        	jr 4B
601+  8E8E
602+  8E8E              ; --------------------------------------------------------------------------------------------------------------------
603+  8E8E              ;
604+  8E8E              ;	Prepara_draw
605+  8E8E              ;
606+  8E8E              ;	Es una rutina de carga.
607+  8E8E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8E8E              ;
609+  8E8E              ;	FUNCIONAMIENTO:
610+  8E8E              ;
611+  8E8E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8E8E              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8E8E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8E8E              ;
615+  8E8E              ;	DESTRUYE:
616+  8E8E              ;
617+  8E8E              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8E8E
619+  8E8E 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8E91 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8E92 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8E93 4E           	ld c,(hl)
623+  8E94 2A 98 85     	ld hl,(Posicion_actual)
624+  8E97 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8E99 C9           	ret
626+  8E9A
627+  8E9A              ;----------------------------------------------------------------------------------------------------------------
628+  8E9A              ;
629+  8E9A              ;	5/08/22
630+  8E9A              ;
631+  8E9A              ;   NextScan.
632+  8E9A              ;
633+  8E9A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8E9A              ;
635+  8E9A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8E9A              ;
637+  8E9A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8E9A              ;
639+  8E9A              ;       DESTRUIDOS: AF y HL !!!
640+  8E9A              ;
641+  8E9A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8E9A              ;
643+  8E9A
644+  8E9A 24           NextScan inc h          ; Incrementamos el scanline.
645+  8E9B 7C               ld a,h
646+  8E9C E6 07            and 7
647+  8E9E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8E9F
649+  8E9F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8EA0 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8EA2 6F               ld l,a
652+  8EA3 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8EA4
654+  8EA4 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8EA5 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8EA7 67               ld h,a
657+  8EA8 C9               ret
658+  8EA9
659+  8EA9              ;----------------------------------------------------------------------------------------------------------------
660+  8EA9              ;
661+  8EA9              ;	5/08/22
662+  8EA9              ;
663+  8EA9              ;   PreviousScan.
664+  8EA9              ;
665+  8EA9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8EA9              ;
667+  8EA9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8EA9              ;
669+  8EA9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8EA9              ;
671+  8EA9              ;       DESTRUIDOS: AF y HL !!!
672+  8EA9              ;
673+  8EA9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8EA9              ;
675+  8EA9
676+  8EA9 7C           PreviousScan ld a,h
677+  8EAA 25               dec h               ; Dec H.
678+  8EAB E6 07            and 7
679+  8EAD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8EAE
681+  8EAE 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8EAF D6 20            sub $20             ; Vamos a comprobarlo...
683+  8EB1 6F               ld l,a
684+  8EB2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8EB3
686+  8EB3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8EB4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8EB6 67               ld h,a
689+  8EB7 C9               ret
690+  8EB8
691+  8EB8              ; -----------------------------------------------------------------------------------
692+  8EB8              ;
693+  8EB8              ;	28/2/23
694+  8EB8              ;
695+  8EB8              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8EB8              ;	Extrae fotos de Album_de_fotos.
697+  8EB8
698+  8EB8 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8EBB A7           	and a
700+  8EBC C8           	ret z
701+  8EBD ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8EC1 31 00 70     	ld sp,Album_de_fotos
703+  8EC4
704+  8EC4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8EC6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8EC7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8EC8
708+  8EC8 ED 73 DB 85  	ld (Stack_2),sp
709+  8ECC ED 7B D9 85  	ld sp,(Stack)
710+  8ED0
711+  8ED0              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8ED0
713+  8ED0 3E CD        	ld a,$cd
714+  8ED2 32 DA 8E     	ld (Imprime),a
715+  8ED5 EB           	ex de,hl
716+  8ED6 22 DB 8E     	ld (Imprime+1),hl
717+  8ED9 EB           	ex de,hl
718+  8EDA
719+  8EDA              ; Ejecuta la llamada:	CALL $xx,xx
720+  8EDA
721+  8EDA 00 00 00     Imprime db 0,0,0
722+  8EDD
723+  8EDD 3A D8 85     	ld a,(Numero_de_malotes)
724+  8EE0 3D           	dec a
725+  8EE1 28 09        	jr z,1F
726+  8EE3 32 D8 85      	ld (Numero_de_malotes),a
727+  8EE6
728+  8EE6 ED 7B DB 85   	ld sp,(Stack_2)
729+  8EEA 18 D8        	jr 2B
730+  8EEC
731+  8EEC AF           1 xor a
732+  8EED 32 DB 85     	ld (Stack_2),a
733+  8EF0 C9           	ret
734+  8EF1
735+  8EF1              ; -----------------------------------------------------------------------------------
736+  8EF1              ;
737+  8EF1              ;	28/2/23
738+  8EF1              ;
739+  8EF1              ;	Pinta los disparos generados.
740+  8EF1
741+  8EF1              Extrae_foto_disparos
742+  8EF1
743+  8EF1 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8EF4 A7           	and a
745+  8EF5 C8           	ret z
746+  8EF6 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8EFA 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8EFD
749+  8EFD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8EFF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8F00 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8F01
753+  8F01 ED 73 DB 85  	ld (Stack_2),sp
754+  8F05 ED 7B D9 85  	ld sp,(Stack)
755+  8F09
756+  8F09              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8F09
758+  8F09 3E CD        	ld a,$cd
759+  8F0B 32 13 8F     	ld (Imprime2),a
760+  8F0E EB           	ex de,hl
761+  8F0F 22 14 8F     	ld (Imprime2+1),hl
762+  8F12 EB           	ex de,hl
763+  8F13
764+  8F13              ; Ejecuta la llamada:	CALL $xx,xx
765+  8F13
766+  8F13 00 00 00     Imprime2 db 0,0,0
767+  8F16
768+  8F16 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8F19 3D           	dec a
770+  8F1A 28 09        	jr z,1F
771+  8F1C 32 E1 85      	ld (Numero_de_disparotes),a
772+  8F1F
773+  8F1F ED 7B DB 85  	ld sp,(Stack_2)
774+  8F23 18 D8        	jr 2B
775+  8F25
776+  8F25 AF           1 xor a
777+  8F26 32 DB 85     	ld (Stack_2),a
778+  8F29 C9           	ret
779+  8F2A
# file closed: Draw_XOR.asm
876   8F2A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8F2A              ;   índices de Rutinas de impresión.
  2+  8F2A
  3+  8F2A 3A 8F        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8F2C 67 8F            defw Pinta_Amadeus_3x2
  5+  8F2E
  6+  8F2E BD 8F        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8F30 5D 90            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8F32 11 90            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8F34
 10+  8F34 E7 8F        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8F36 EB 90            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8F38 9F 90            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8F3A
 14+  8F3A
 15+  8F3A              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8F3A              ;
 17+  8F3A              ;   12/12/22
 18+  8F3A              ;
 19+  8F3A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8F3A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8F3A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8F3A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8F3A              ;
 24+  8F3A              ;   Modifica: DE y HL.
 25+  8F3A
 26+  8F3A ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8F3E FD F9        	ld sp,iy
 28+  8F40 06 10            ld b,16
 29+  8F42 D1           1 pop de
 30+  8F43 7B               ld a,e
 31+  8F44 AE               xor (hl)
 32+  8F45 77           	ld (hl),a
 33+  8F46 23           	inc hl
 34+  8F47 7A               ld a,d
 35+  8F48 AE               xor (hl)
 36+  8F49 77           	ld (hl),a
 37+  8F4A 2B           	dec hl
 38+  8F4B 24           	inc h
 39+  8F4C 7C               ld a,h
 40+  8F4D E6 07            and 7
 41+  8F4F 20 0A            jr nz,2F
 42+  8F51 7D               ld a,l
 43+  8F52 C6 20            add a,$20
 44+  8F54 6F               ld l,a
 45+  8F55 38 04            jr c,2F
 46+  8F57 7C               ld a,h
 47+  8F58 D6 08            sub 8
 48+  8F5A 67               ld h,a
 49+  8F5B 7C           2 ld a,h
 50+  8F5C FE 58            cp $58
 51+  8F5E 28 02            jr z,3F
 52+  8F60 10 E0            djnz 1B
 53+  8F62 ED 7B D9 85  3 ld sp,(Stack)
 54+  8F66 C9           	ret
 55+  8F67
 56+  8F67 ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8F6B FD F9        	ld sp,iy
 58+  8F6D 06 08            ld b,8
 59+  8F6F D1           1 pop de
 60+  8F70 7B               ld a,e
 61+  8F71 AE               xor (hl)
 62+  8F72 77           	ld (hl),a
 63+  8F73 23           	inc hl
 64+  8F74 7A               ld a,d
 65+  8F75 AE               xor (hl)
 66+  8F76 77           	ld (hl),a
 67+  8F77 23           	inc hl
 68+  8F78 D1           	pop de
 69+  8F79 7B               ld a,e
 70+  8F7A AE               xor (hl)
 71+  8F7B 77           	ld (hl),a
 72+  8F7C 2B           	dec hl
 73+  8F7D 2B           	dec hl
 74+  8F7E 24           	inc h
 75+  8F7F 7C               ld a,h
 76+  8F80 E6 07            and 7
 77+  8F82 20 0A            jr nz,2F
 78+  8F84 7D               ld a,l
 79+  8F85 C6 20            add a,$20
 80+  8F87 6F               ld l,a
 81+  8F88 38 04            jr c,2F
 82+  8F8A 7C               ld a,h
 83+  8F8B D6 08            sub 8
 84+  8F8D 67               ld h,a
 85+  8F8E 7C           2 ld a,h
 86+  8F8F FE 58            cp $58
 87+  8F91 28 25            jr z,4F
 88+  8F93 7A               ld a,d
 89+  8F94 AE               xor (hl)
 90+  8F95 77               ld (hl),a
 91+  8F96 D1           	pop de
 92+  8F97 23           	inc hl
 93+  8F98 7B               ld a,e
 94+  8F99 AE               xor (hl)
 95+  8F9A 77           	ld (hl),a
 96+  8F9B 23           	inc hl
 97+  8F9C 7A               ld a,d
 98+  8F9D AE               xor (hl)
 99+  8F9E 77           	ld (hl),a
100+  8F9F 2B           	dec hl
101+  8FA0 2B           	dec hl
102+  8FA1 24           	inc h
103+  8FA2 7C               ld a,h
104+  8FA3 E6 07            and 7
105+  8FA5 20 0A            jr nz,3F
106+  8FA7 7D               ld a,l
107+  8FA8 C6 20            add a,$20
108+  8FAA 6F               ld l,a
109+  8FAB 38 04            jr c,3F
110+  8FAD 7C               ld a,h
111+  8FAE D6 08            sub 8
112+  8FB0 67               ld h,a
113+  8FB1 7C           3 ld a,h
114+  8FB2 FE 58            cp $58
115+  8FB4 28 02            jr z,4F
116+  8FB6 10 B7            djnz 1B
117+  8FB8 ED 7B D9 85  4 ld sp,(Stack)
118+  8FBC C9           	ret
119+  8FBD
120+  8FBD              ; ---------------------------------------------------
121+  8FBD
122+  8FBD ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8FC1 FD F9        	ld sp,iy
124+  8FC3
125+  8FC3              ; >>>
126+  8FC3
127+  8FC3 06 10            ld b,16
128+  8FC5 D1           1 pop de
129+  8FC6 7A           	ld a,d
130+  8FC7 AE           	xor (hl)
131+  8FC8 77           	ld (hl),a
132+  8FC9 24           	inc h
133+  8FCA 7C               ld a,h
134+  8FCB E6 07            and 7
135+  8FCD 20 0C            jr nz,2F
136+  8FCF 7D               ld a,l
137+  8FD0 C6 20            add a,$20
138+  8FD2 6F               ld l,a
139+  8FD3 38 06            jr c,2F
140+  8FD5 7C               ld a,h
141+  8FD6 D6 08            sub 8
142+  8FD8 67               ld h,a
143+  8FD9 18 00            jr 2F
144+  8FDB 7C           2 ld a,h
145+  8FDC FE 58            cp $58
146+  8FDE 28 02            jr z,3F
147+  8FE0 10 E3            djnz 1B
148+  8FE2 ED 7B D9 85  3 ld sp,(Stack)
149+  8FE6 C9           	ret
150+  8FE7
151+  8FE7 ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8FEB FD F9        	ld sp,iy
153+  8FED
154+  8FED              ; >>>
155+  8FED
156+  8FED 06 10            ld b,16
157+  8FEF D1           1 pop de
158+  8FF0 7B           	ld a,e
159+  8FF1 AE           	xor (hl)
160+  8FF2 77           	ld (hl),a
161+  8FF3 24           	inc h
162+  8FF4 7C               ld a,h
163+  8FF5 E6 07            and 7
164+  8FF7 20 0C            jr nz,2F
165+  8FF9 7D               ld a,l
166+  8FFA C6 20            add a,$20
167+  8FFC 6F               ld l,a
168+  8FFD 38 06            jr c,2F
169+  8FFF 7C               ld a,h
170+  9000 D6 08            sub 8
171+  9002 67               ld h,a
172+  9003 18 00            jr 2F
173+  9005 7C           2 ld a,h
174+  9006 FE 58            cp $58
175+  9008 28 02            jr z,3F
176+  900A 10 E3            djnz 1B
177+  900C ED 7B D9 85  3 ld sp,(Stack)
178+  9010 C9           	ret
179+  9011
180+  9011              ; ---------------------------------------------------
181+  9011
182+  9011 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  9015 FD F9        	ld sp,iy
184+  9017 06 08            ld b,8
185+  9019 D1           1 pop de
186+  901A 7A           	ld a,d
187+  901B AE           	xor (hl)
188+  901C 77           	ld (hl),a
189+  901D 23           	inc hl
190+  901E D1           	pop de
191+  901F 7B           	ld a,e
192+  9020 AE           	xor (hl)
193+  9021 77           	ld (hl),a
194+  9022 2B           	dec hl
195+  9023 24            	inc h
196+  9024 7C               ld a,h
197+  9025 E6 07            and 7
198+  9027 20 0A            jr nz,2F
199+  9029 7D               ld a,l
200+  902A C6 20            add a,$20
201+  902C 6F               ld l,a
202+  902D 38 04            jr c,2F
203+  902F 7C               ld a,h
204+  9030 D6 08            sub 8
205+  9032 67               ld h,a
206+  9033 7C           2 ld a,h
207+  9034 FE 58            cp $58
208+  9036 28 20            jr z,4F
209+  9038 D1               pop de
210+  9039 7B           	ld a,e
211+  903A AE           	xor (hl)
212+  903B 77           	ld (hl),a
213+  903C 23           	inc hl
214+  903D 7A           	ld a,d
215+  903E AE           	xor (hl)
216+  903F 77           	ld (hl),a
217+  9040 2B           	dec hl
218+  9041 24           	inc h
219+  9042 7C               ld a,h
220+  9043 E6 07            and 7
221+  9045 20 0A            jr nz,3F
222+  9047 7D               ld a,l
223+  9048 C6 20            add a,$20
224+  904A 6F               ld l,a
225+  904B 38 04            jr c,3F
226+  904D 7C               ld a,h
227+  904E D6 08            sub 8
228+  9050 67               ld h,a
229+  9051 7C           3 ld a,h
230+  9052 FE 58            cp $58
231+  9054 28 02            jr z,4F
232+  9056 10 C1            djnz 1B
233+  9058 ED 7B D9 85  4 ld sp,(Stack)
234+  905C C9           	ret
235+  905D
236+  905D ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  9061 FD F9        	ld sp,iy
238+  9063 06 08            ld b,8
239+  9065 D1           1 pop de
240+  9066 D1           	pop de
241+  9067 7B           	ld a,e
242+  9068 AE           	xor (hl)
243+  9069 77           	ld (hl),a
244+  906A 24            	inc h
245+  906B 7C               ld a,h
246+  906C E6 07            and 7
247+  906E 20 0A            jr nz,2F
248+  9070 7D               ld a,l
249+  9071 C6 20            add a,$20
250+  9073 6F               ld l,a
251+  9074 38 04            jr c,2F
252+  9076 7C               ld a,h
253+  9077 D6 08            sub 8
254+  9079 67               ld h,a
255+  907A 7C           2 ld a,h
256+  907B FE 58            cp $58
257+  907D 28 1B            jr z,4F
258+  907F D1               pop de
259+  9080 7A           	ld a,d
260+  9081 AE           	xor (hl)
261+  9082 77           	ld (hl),a
262+  9083 24           	inc h
263+  9084 7C               ld a,h
264+  9085 E6 07            and 7
265+  9087 20 0A            jr nz,3F
266+  9089 7D               ld a,l
267+  908A C6 20            add a,$20
268+  908C 6F               ld l,a
269+  908D 38 04            jr c,3F
270+  908F 7C               ld a,h
271+  9090 D6 08            sub 8
272+  9092 67               ld h,a
273+  9093 7C           3 ld a,h
274+  9094 FE 58            cp $58
275+  9096 28 02            jr z,4F
276+  9098 10 CB            djnz 1B
277+  909A ED 7B D9 85  4 ld sp,(Stack)
278+  909E C9           	ret
279+  909F
280+  909F ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  90A3 FD F9        	ld sp,iy
282+  90A5 06 08            ld b,8
283+  90A7 D1           1 pop de
284+  90A8 7B           	ld a,e
285+  90A9 AE           	xor (hl)
286+  90AA 77           	ld (hl),a
287+  90AB 23           	inc hl
288+  90AC 7A           	ld a,d
289+  90AD AE           	xor (hl)
290+  90AE 77           	ld (hl),a
291+  90AF 2B           	dec hl
292+  90B0 24             	inc h
293+  90B1 7C               ld a,h
294+  90B2 E6 07            and 7
295+  90B4 20 0A            jr nz,2F
296+  90B6 7D               ld a,l
297+  90B7 C6 20            add a,$20
298+  90B9 6F               ld l,a
299+  90BA 38 04            jr c,2F
300+  90BC 7C               ld a,h
301+  90BD D6 08            sub 8
302+  90BF 67               ld h,a
303+  90C0 7C           2 ld a,h
304+  90C1 FE 58            cp $58
305+  90C3 28 21            jr z,4F
306+  90C5 D1               pop de
307+  90C6 7A           	ld a,d
308+  90C7 AE           	xor (hl)
309+  90C8 77           	ld (hl),a
310+  90C9 23           	inc hl
311+  90CA D1               pop de
312+  90CB 7B           	ld a,e
313+  90CC AE           	xor (hl)
314+  90CD 77           	ld (hl),a
315+  90CE 2B           	dec hl
316+  90CF 24           	inc h
317+  90D0 7C               ld a,h
318+  90D1 E6 07            and 7
319+  90D3 20 0A            jr nz,3F
320+  90D5 7D               ld a,l
321+  90D6 C6 20            add a,$20
322+  90D8 6F               ld l,a
323+  90D9 38 04            jr c,3F
324+  90DB 7C               ld a,h
325+  90DC D6 08            sub 8
326+  90DE 67               ld h,a
327+  90DF 7C           3 ld a,h
328+  90E0 FE 58            cp $58
329+  90E2 28 02            jr z,4F
330+  90E4 10 C1            djnz 1B
331+  90E6 ED 7B D9 85  4 ld sp,(Stack)
332+  90EA C9           	ret
333+  90EB
334+  90EB ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  90EF FD F9        	ld sp,iy
336+  90F1 06 08            ld b,8
337+  90F3 D1           1 pop de
338+  90F4 7B           	ld a,e
339+  90F5 AE           	xor (hl)
340+  90F6 77           	ld (hl),a
341+  90F7 24            	inc h
342+  90F8 7C               ld a,h
343+  90F9 E6 07            and 7
344+  90FB 20 0A            jr nz,2F
345+  90FD 7D               ld a,l
346+  90FE C6 20            add a,$20
347+  9100 6F               ld l,a
348+  9101 38 04            jr c,2F
349+  9103 7C               ld a,h
350+  9104 D6 08            sub 8
351+  9106 67               ld h,a
352+  9107 7C           2 ld a,h
353+  9108 FE 58            cp $58
354+  910A 28 1C            jr z,4F
355+  910C D1               pop de
356+  910D 7A           	ld a,d
357+  910E AE           	xor (hl)
358+  910F 77           	ld (hl),a
359+  9110 24           	inc h
360+  9111 7C               ld a,h
361+  9112 E6 07            and 7
362+  9114 20 0A            jr nz,3F
363+  9116 7D               ld a,l
364+  9117 C6 20            add a,$20
365+  9119 6F               ld l,a
366+  911A 38 04            jr c,3F
367+  911C 7C               ld a,h
368+  911D D6 08            sub 8
369+  911F 67               ld h,a
370+  9120 7C           3 ld a,h
371+  9121 FE 58            cp $58
372+  9123 28 03            jr z,4F
373+  9125 D1               pop de
374+  9126 10 CB            djnz 1B
375+  9128 ED 7B D9 85  4 ld sp,(Stack)
376+  912C C9           	ret
377+  912D
378+  912D              ; ---------------------------------------------------
379+  912D              ;
380+  912D              ;   27/02/23
381+  912D              ;
382+  912D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  912D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  912D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  912D
386+  912D ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  9131 FD F9            ld sp,iy
388+  9133 06 02            ld b,2
389+  9135 D1           1 pop de
390+  9136 7B               ld a,e
391+  9137 AE               xor (hl)
392+  9138 77               ld (hl),a
393+  9139 23               inc hl
394+  913A 7A               ld a,d
395+  913B AE               xor (hl)
396+  913C 77               ld (hl),a
397+  913D 2B               dec hl
398+  913E
399+  913E 24               inc h
400+  913F 7C               ld a,h
401+  9140 E6 07            and 7
402+  9142 20 0A            jr nz,2F
403+  9144 7D               ld a,l
404+  9145 C6 20            add a,$20
405+  9147 6F               ld l,a
406+  9148 38 04            jr c,2F
407+  914A 7C               ld a,h
408+  914B D6 08            sub 8
409+  914D 67               ld h,a
410+  914E 7C           2 ld a,h
411+  914F FE 58            cp $58
412+  9151 28 02            jr z,3F
413+  9153
414+  9153 10 E0            djnz 1B
415+  9155 ED 7B D9 85  3 ld sp,(Stack)
416+  9159 C9               ret
417+  915A
# file closed: Rutinas_de_impresion_sprites.asm
877   915A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  915A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  915A              ;
  3+  915A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  915A              ;
  5+  915A              ; *****************************************************************************************************************************************************************************************
  6+  915A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  915A
  8+  915A 7C           calcula_tercio ld a,h
  9+  915B E6 18        	and $18
 10+  915D CB 2F        	sra a
 11+  915F CB 2F        	sra a
 12+  9161 CB 2F        	sra a
 13+  9163 C9           	ret
 14+  9164
# file closed: calcula_tercio.asm
878   9164              	include "Cls.asm"
# file opened: Cls.asm
  1+  9164              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  9164              ;
  3+  9164              ;
  4+  9164              ;	CLS.
  5+  9164              ;
  6+  9164              ;	Limpia la pantalla y define sus atributos.
  7+  9164              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  9164              ;
  9+  9164              ;	COLORES: 0 ..... NEGRO
 10+  9164              ;    		 1 ..... AZUL
 11+  9164              ; 			 2 ..... ROJO
 12+  9164              ;			 3 ..... MAGENTA
 13+  9164              ; 			 4 ..... VERDE
 14+  9164              ; 			 5 ..... CIAN
 15+  9164              ;			 6 ..... AMARILLO
 16+  9164              ; 			 7 ..... BLANCO
 17+  9164              ;
 18+  9164              ;	INPUT: A contiene los atributos de pantalla.
 19+  9164              ;
 20+  9164              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  9164
 22+  9164
 23+  9164 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  9167 11 01 40     	LD DE,$4001
 25+  916A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  916D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  916F ED B0        	LDIR
 28+  9171 01 FF 02     	LD BC,767
 29+  9174 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  9175 ED B0        	LDIR
 31+  9177 C9           	ret
 32+  9178
# file closed: Cls.asm
879   9178              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  9178              ; ******************************************************************************************************************************************************************************************
  2+  9178              ;
  3+  9178              ;   22/01/23
  4+  9178              ;
  5+  9178              ;	Mov_down
  6+  9178              ;
  7+  9178              ; 	Mueve el Sprite X px hacia abajo.
  8+  9178              ;
  9+  9178              ;
 10+  9178 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  917B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  917D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  917D              ; 																	; _ en el caso de que no lo haya.
 14+  917D 3A AE 85     	ld a,(Vel_down)
 15+  9180 47           	ld b,a
 16+  9181 2A 98 85         ld hl,(Posicion_actual)
 17+  9184 CD 5A 91     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  9187 E6 02        	and 2
 19+  9189 28 0F        	jr z,1F
 20+  918B
 21+  918B              ; Nos encontramos en el último tercio de pantalla.
 22+  918B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  918B
 24+  918B 7C           	ld a,h
 25+  918C FE 57        	cp $57
 26+  918E 20 0A        	jr nz,1F
 27+  9190 7D           	ld a,l
 28+  9191 C6 20        	add $20
 29+  9193 30 05        	jr nc,1F
 30+  9195
 31+  9195              ; ------------------------------
 32+  9195 CD 70 94     	call Reaparece_arriba
 33+  9198              ;	call Reinicio
 34+  9198              ; ------------------------------
 35+  9198
 36+  9198 18 08        	jr 3F
 37+  919A CD 9A 8E     1 call NextScan
 38+  919D 22 98 85     	ld (Posicion_actual),hl
 39+  91A0 10 E2            djnz 2B
 40+  91A2 CD 86 94     3 call Genera_coordenadas
 41+  91A5 C9           	ret
 42+  91A6
 43+  91A6              ; ******************************************************************************************************************************************************************************************
 44+  91A6              ;
 45+  91A6              ;   22/01/23
 46+  91A6              ;
 47+  91A6              ;	Mov_up
 48+  91A6              ;
 49+  91A6              ; 	Mueve el Sprite hacia arriba.
 50+  91A6              ;
 51+  91A6              ;
 52+  91A6 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  91A9 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  91AB              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  91AB              ; 																		; _ en el caso de que no lo haya.
 56+  91AB 3A AD 85     	ld a,(Vel_up)
 57+  91AE 47           	ld b,a
 58+  91AF 2A 98 85     	ld hl,(Posicion_actual)
 59+  91B2 CD 5A 91     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  91B5 A7           	and a
 61+  91B6 20 10        	jr nz,1F
 62+  91B8
 63+  91B8              ; Nos encontramos en el 1er tercio de pantalla.
 64+  91B8              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  91B8
 66+  91B8 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  91B9 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  91BB 20 0B            jr nz,1F
 69+  91BD 7D               ld a,l
 70+  91BE D6 20            sub $20
 71+  91C0 30 06            jr nc,1F
 72+  91C2 25               dec h
 73+  91C3
 74+  91C3              ; -----------------------------
 75+  91C3 CD 60 94         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  91C6              ;	call Reinicio
 77+  91C6              ; -----------------------------
 78+  91C6
 79+  91C6 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  91C8 CD A9 8E     1 call PreviousScan
 81+  91CB 22 98 85     	ld (Posicion_actual),hl
 82+  91CE 10 E2            djnz 3B
 83+  91D0 CD 86 94     2 call Genera_coordenadas
 84+  91D3 C9           	ret
 85+  91D4
 86+  91D4              ; ******************************************************************************************************************************************************************************************
 87+  91D4              ;
 88+  91D4              ;	19/10/22
 89+  91D4              ;
 90+  91D4              ;	Mov_right.
 91+  91D4              ;
 92+  91D4              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  91D4              ;
 94+  91D4
 95+  91D4 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  91D7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  91D9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  91D9              ; 																	; _ en el caso de que no lo haya.
 99+  91D9 3A C3 85     	ld a,(Ctrl_0)
100+  91DC CB 77        	bit 6,a
101+  91DE 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  91E0
103+  91E0 CD 0E 94     	call Stop_Amadeus_right
104+  91E3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  91E4 18 4D        	jr 8F
106+  91E6
107+  91E6 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  91E9 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  91EB 20 46        	jr nz,8F
110+  91ED
111+  91ED 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  91F0 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  91F1 28 40        	jr z,8F
114+  91F3
115+  91F3              ; ---------- ---------- ----------
116+  91F3              ;
117+  91F3              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  91F3
119+  91F3 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  91F6 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  91F8 28 11        	jr z,1F
122+  91FA 38 06        	jr c,6F
123+  91FC FE 04        	cp 4
124+  91FE 28 14        	jr z,7F
125+  9200 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9202
127+  9202              ; ---------- ---------- ----------
128+  9202              ;
129+  9202              ; Perfiles de velocidad
130+  9202              ;
131+  9202
132+  9202 3A 9E 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
133+  9205 FE FE        	cp $fe
134+  9207 20 2A        	jr nz,8F
135+  9209 18 10        	jr 3F
136+  920B 3A 9E 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
137+  920E FE FD        	cp $fd
138+  9210 20 21        	jr nz,8F
139+  9212 18 07        	jr 3F
140+  9214 3A 9E 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
141+  9217 FE FB        	cp $fb
142+  9219 20 18        	jr nz,8F
143+  921B
144+  921B              ; ---------- ---------- ----------
145+  921B
146+  921B              3
147+  921B CD 4E 94     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  921E              ;	call Reinicio
149+  921E
150+  921E              ; ---------- ---------- ----------
151+  921E              ;
152+  921E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  921E
154+  921E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9220 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  9221 CD 3A 92     	call DESPLZ_DER
157+  9224 C1           	pop bc
158+  9225 10 F9        	djnz 5B
159+  9227 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  922A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  922B 22 98 85     	ld (Posicion_actual),hl
162+  922E CD 86 94     	call Genera_coordenadas
163+  9231 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  9233
165+  9233              ; ---------- ---------- ----------
166+  9233
167+  9233 2A 98 85     8 ld hl,(Posicion_actual)
168+  9236 CD 3A 92     	call DESPLZ_DER
169+  9239 C9           2 ret
170+  923A
171+  923A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  923A              ;
173+  923A              ;	22/9/22
174+  923A              ;
175+  923A
176+  923A CD 49 92     DESPLZ_DER call Desplaza_derecha
177+  923D CD 95 92         call modifica_parametros_1er_DESPLZ_2
178+  9240 CD BE 92         call Ciclo_completo
179+  9243 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  9246 CB FE        	set 7,(hl)
181+  9248 C9           	ret
182+  9249
183+  9249              ; ******************************************************************************************************************************************************************************************
184+  9249              ;	15/02/23
185+  9249              ;
186+  9249
187+  9249 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  924C 47           	ld b,a
189+  924D 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  9250 23           1 inc hl
191+  9251 23           	inc hl
192+  9252 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  9254 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  9257 CD A6 87     	call Extrae_address
195+  925A 22 9A 85     	ld (Puntero_objeto),hl
196+  925D
197+  925D              ; Modifica (Puntero_DESPLZ_izq).
198+  925D
199+  925D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  925D              ; Cuántos movimientos hemos hecho ??
201+  925D              ; DE contiene (Puntero_DESPLZ_der).
202+  925D
203+  925D 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  9260 EB           	ex de,hl
205+  9261 A7           	and a
206+  9262 ED 52        	sbc hl,de
207+  9264 CB 3D        	srl l
208+  9266 3E 08        6 ld a,8
209+  9268 95           	sub l
210+  9269 30 1E        	jr nc,3F
211+  926B
212+  926B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  926B              ; B="0".
214+  926B
215+  926B 04           4 inc b
216+  926C 3C           	inc a
217+  926D 20 FC        	jr nz,4B
218+  926F 78           	ld a,b
219+  9270 08           	ex af,af
220+  9271 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  9274 23           5 inc hl
222+  9275 23           	inc hl
223+  9276 10 FC        	djnz 5B
224+  9278 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  927B CD A6 87     	call Extrae_address
226+  927E 22 9A 85     	ld (Puntero_objeto),hl
227+  9281
228+  9281              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  9281              ; _(Posicion_actual).
230+  9281
231+  9281 21 98 85     	ld hl,Posicion_actual
232+  9284 34           	inc (hl)
233+  9285 08               ex af,af
234+  9286 6F           	ld l,a
235+  9287 18 DD        	jr 6B
236+  9289
237+  9289              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  9289
239+  9289 47           3 ld b,a
240+  928A 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  928D 23           2 inc hl
242+  928E 23           	inc hl
243+  928F 10 FC        	djnz 2B
244+  9291 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  9294 C9           8 ret
246+  9295
247+  9295              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  9295              ;
249+  9295              ;	24/7/22
250+  9295              ;
251+  9295              ;	modifica_parametros_1er_DESPLZ_2
252+  9295              ;
253+  9295              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  9295              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  9295              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  9295
257+  9295 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  9298 A7           	and a
259+  9299 20 1F        	jr nz,1F
260+  929B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  929D 32 9E 85         ld (CTRL_DESPLZ),a
262+  92A0
263+  92A0 21 97 85     	ld hl,Columns
264+  92A3 34           	inc (hl)
265+  92A4 3A AA 85     	ld a,(Cuad_objeto)
266+  92A7 E6 01        	and 1
267+  92A9 28 0F        	jr z,1F
268+  92AB 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  92AE 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  92AF 22 98 85     	ld (Posicion_actual),hl
271+  92B2 CD 86 94     	call Genera_coordenadas
272+  92B5 CD 1A 94     	call Inc_CTRL_DESPLZ
273+  92B8 18 03        	jr 2F
274+  92BA CD 1A 94     1 call Inc_CTRL_DESPLZ
275+  92BD C9           2 ret
276+  92BE
277+  92BE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  92BE              ;
279+  92BE              ;	24/7/22
280+  92BE              ;
281+  92BE              ;	Ciclo_completo.
282+  92BE              ;
283+  92BE              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  92BE              ;
285+  92BE              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  92BE              ; 	Decrementamos (Columns).
287+  92BE              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  92BE              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  92BE
290+  92BE
291+  92BE 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  92C1 FE FF        	cp $ff
293+  92C3 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  92C5 E6 F0        	and $f0
295+  92C7 20 28        	jr nz,3F
296+  92C9
297+  92C9              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  92C9
299+  92C9 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  92CC 47           	ld b,a
301+  92CD 3E F8        	ld a,$f8
302+  92CF 80           	add b
303+  92D0 32 9E 85     	ld (CTRL_DESPLZ),a
304+  92D3 18 1C        	jr 3F
305+  92D5 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  92D8 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  92D9 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  92DA 32 9E 85     	ld (CTRL_DESPLZ),a
309+  92DD 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  92E0 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  92E2 20 0A        	jr nz,2F
312+  92E4 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  92E7 23           	inc hl
314+  92E8 22 98 85     	ld (Posicion_actual),hl
315+  92EB CD 86 94     	call Genera_coordenadas
316+  92EE
317+  92EE              ; Inicia el puntero de Sprite.
318+  92EE
319+  92EE CD BD 87     2 call Inicia_puntero_objeto_der
320+  92F1 C9           3 ret
321+  92F2
322+  92F2              ; ******************************************************************************************************************************************************************************************
323+  92F2              ;
324+  92F2              ;	15/02/23
325+  92F2              ;
326+  92F2              ;	Mov_left.
327+  92F2              ;
328+  92F2              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  92F2              ;
330+  92F2              Mov_left
331+  92F2
332+  92F2 21 C3 85     	ld hl,Ctrl_0
333+  92F5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  92F7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  92F7              ; 																	; _ en el caso de que no lo haya.
336+  92F7 3A C3 85     	ld a,(Ctrl_0)
337+  92FA CB 77        	bit 6,a
338+  92FC 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  92FE
340+  92FE CD 14 94     	call Stop_Amadeus_left
341+  9301 C8           	ret z
342+  9302 20 4A        	jr nz,8F
343+  9304
344+  9304 3A 9C 85     11 ld a,(Coordenada_X)
345+  9307 A7           	and a
346+  9308 20 44        	jr nz,8F
347+  930A
348+  930A 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  930D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  930E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9310
352+  9310              ; ---------- ---------- ----------
353+  9310
354+  9310 3A AB 85     	ld a,(Vel_left)
355+  9313 FE 02        	cp 2
356+  9315 28 0F        	jr z,1F
357+  9317 38 04        	jr c,6F
358+  9319 FE 04        	cp 4
359+  931B 28 12        	jr z,7F
360+  931D
361+  931D              ; ---------- ---------- ----------
362+  931D
363+  931D 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  9320 FE F9        	cp $f9
365+  9322 20 2A        	jr nz,8F
366+  9324 18 10        	jr 4F
367+  9326 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  9329 FE FA        	cp $fa
369+  932B 20 21        	jr nz,8F
370+  932D 18 07        	jr 4F
371+  932F 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  9332 FE FC        	cp $fc
373+  9334 20 18        	jr nz,8F
374+  9336
375+  9336              ; ---------- ---------- ----------
376+  9336
377+  9336              4
378+  9336 CD 3C 94     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  9339              ;	call Reinicio
380+  9339
381+  9339              ; ---------- ---------- ----------
382+  9339
383+  9339 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  933B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  933C
386+  933C              ;	ld hl,(Indice_Sprite_izq)
387+  933C              ;	ld (Puntero_DESPLZ_izq),hl
388+  933C
389+  933C CD 55 93     	call DESPLZ_IZQ
390+  933F C1           	pop bc
391+  9340 10 F9        	djnz 5B
392+  9342 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  9345 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  9346 22 98 85     	ld (Posicion_actual),hl
395+  9349 CD 86 94     	call Genera_coordenadas
396+  934C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  934E
398+  934E              ; ---------- ---------- ----------
399+  934E
400+  934E              ; Movemos, no hay recolocación.
401+  934E
402+  934E 2A 98 85     8 ld hl,(Posicion_actual)
403+  9351 CD 55 93     	call DESPLZ_IZQ
404+  9354 C9           2 ret
405+  9355
406+  9355              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
407+  9355              ;
408+  9355              ;	22/9/22
409+  9355
410+  9355              DESPLZ_IZQ
411+  9355
412+  9355 CD 64 93     	call Desplaza_izquierda
413+  9358 CD B0 93         call modifica_parametros_1er_DESPLZ
414+  935B CD D8 93     	call Ciclo_completo_2
415+  935E 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
416+  9361 CB BE        	res 7,(hl)
417+  9363 C9           	ret
418+  9364
419+  9364              Desplaza_izquierda
420+  9364
421+  9364 3A AB 85     	ld a,(Vel_left)
422+  9367 47           	ld b,a
423+  9368 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
424+  936B 23           1 inc hl
425+  936C 23           	inc hl
426+  936D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
427+  936F 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
428+  9372 CD A6 87     	call Extrae_address
429+  9375 22 9A 85     	ld (Puntero_objeto),hl
430+  9378
431+  9378              ; Modifica (Puntero_DESPLZ_der).
432+  9378
433+  9378              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
434+  9378              ; Cuántos movimientos hemos hecho ??
435+  9378              ; DE contiene (Puntero_DESPLZ_izq).
436+  9378
437+  9378 2A A2 85     7 ld hl,(Indice_Sprite_izq)
438+  937B EB           	ex de,hl
439+  937C A7           	and a
440+  937D ED 52        	sbc hl,de
441+  937F CB 3D        	srl l
442+  9381 3E 08        6 ld a,8
443+  9383 95           	sub l
444+  9384 30 1E        	jr nc,3F
445+  9386
446+  9386              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
447+  9386              ; B="0".
448+  9386
449+  9386 04           4 inc b
450+  9387 3C           	inc a
451+  9388 20 FC        	jr nz,4B
452+  938A 78           	ld a,b
453+  938B 08           	ex af,af
454+  938C 2A A2 85     	ld hl,(Indice_Sprite_izq)
455+  938F 23           5 inc hl
456+  9390 23           	inc hl
457+  9391 10 FC        	djnz 5B
458+  9393 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
459+  9396 CD A6 87     	call Extrae_address
460+  9399 22 9A 85     	ld (Puntero_objeto),hl
461+  939C
462+  939C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
463+  939C              ; _(Posicion_actual).
464+  939C
465+  939C 21 98 85     	ld hl,Posicion_actual
466+  939F 35           	dec (hl)
467+  93A0 08           	ex af,af
468+  93A1 6F           	ld l,a
469+  93A2 18 DD        	jr 6B
470+  93A4
471+  93A4              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
472+  93A4
473+  93A4 47           3 ld b,a
474+  93A5 2A A0 85     	ld hl,(Indice_Sprite_der)
475+  93A8 23           2 inc hl
476+  93A9 23           	inc hl
477+  93AA 10 FC        	djnz 2B
478+  93AC 22 A4 85     	ld (Puntero_DESPLZ_der),hl
479+  93AF C9           8 ret
480+  93B0
481+  93B0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
482+  93B0              ;
483+  93B0              ;	modifica_parametros_1er_DESPLZ
484+  93B0              ;
485+  93B0              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
486+  93B0              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
487+  93B0              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
488+  93B0
489+  93B0 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
490+  93B3 A7           	and a
491+  93B4 20 1E        	jr nz,1F
492+  93B6 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
493+  93B7 32 9E 85         ld (CTRL_DESPLZ),a
494+  93BA 21 97 85     	ld hl,Columns
495+  93BD 34           	inc (hl)
496+  93BE 3A AA 85     	ld a,(Cuad_objeto)
497+  93C1 E6 01        	and 1
498+  93C3 20 0F        	jr nz,1F
499+  93C5 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
500+  93C8 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
501+  93C9 22 98 85     	ld (Posicion_actual),hl
502+  93CC CD 86 94     	call Genera_coordenadas
503+  93CF CD 2B 94     	call Dec_CTRL_DESPLZ
504+  93D2 18 03        	jr 2F
505+  93D4 CD 2B 94     1 call Dec_CTRL_DESPLZ
506+  93D7 C9           2 ret
507+  93D8
508+  93D8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
509+  93D8
510+  93D8 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
511+  93DB FE F7        	cp $f7
512+  93DD 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
513+  93DF 30 2C        	jr nc,3F
514+  93E1
515+  93E1              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
516+  93E1
517+  93E1 06 00        	ld b,0
518+  93E3 04           4 inc b
519+  93E4 3C           	inc a
520+  93E5 FE F7        	cp $f7
521+  93E7 20 FA        	jr nz,4B
522+  93E9 3E FF        	ld a,$ff
523+  93EB 90           	sub b
524+  93EC 32 9E 85     	ld (CTRL_DESPLZ),a
525+  93EF 18 1C        	jr 3F
526+  93F1
527+  93F1              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
528+  93F1
529+  93F1 21 97 85     1 ld hl,Columns
530+  93F4 35           	dec (hl)
531+  93F5 AF           	xor a
532+  93F6 32 9E 85     	ld (CTRL_DESPLZ),a
533+  93F9 3A AA 85     	ld a,(Cuad_objeto)
534+  93FC E6 01        	and 1
535+  93FE 28 0A        	jr z,2F
536+  9400 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
537+  9403 2B           	dec hl
538+  9404 22 98 85     	ld (Posicion_actual),hl
539+  9407 CD 86 94     	call Genera_coordenadas
540+  940A
541+  940A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
542+  940A
543+  940A CD D0 87     2 call Inicia_puntero_objeto_izq
544+  940D C9           3 ret
545+  940E
546+  940E              ; ---------- ---------- ---------- ---------- ---------- ----------
547+  940E              ;
548+  940E              ;	19/10/22
549+  940E              ;
550+  940E              ;	(cp 29) para un Amadeus de 3 Columns.
551+  940E              ;	(cp 30)   ""  ""    ""     2 Columns.
552+  940E
553+  940E 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
554+  9411 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
555+  9413 C9           	ret
556+  9414
557+  9414              ; ---------- ---------- ---------- ---------- ---------- ----------
558+  9414              ;
559+  9414              ;	19/10/22
560+  9414              ;
561+  9414              ;	(cp 2) para un Amadeus de 3 Columns.
562+  9414              ;	(cp 1)   ""  ""    ""     2 Columns.
563+  9414
564+  9414 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
565+  9417 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
566+  9419 C9           	ret
567+  941A
568+  941A              ; ---------- ---------- ---------- ---------- ---------- ----------
569+  941A              ;
570+  941A              ;	24/7/22
571+  941A              ;
572+  941A              ;	Inc_CTRL_DESPLZ
573+  941A              ;
574+  941A              ;
575+  941A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
576+  941A
577+  941A 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
578+  941D 3A AC 85     	ld a,(Vel_right)
579+  9420 A7           	and a
580+  9421 28 06        	jr z,1F
581+  9423 47           	ld b,a
582+  9424 34           3 inc (hl)
583+  9425 10 FD        	djnz 3B
584+  9427 18 01        	jr 2F
585+  9429 34           1 inc (hl)
586+  942A C9           2 ret
587+  942B
588+  942B              ; ---------- ---------- ---------- ---------- ---------- ----------
589+  942B              ;
590+  942B              ;	5/2/23
591+  942B              ;
592+  942B              ;	Dec_CTRL_DESPLZ
593+  942B              ;
594+  942B              ;
595+  942B              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
596+  942B
597+  942B 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
598+  942E 3A AB 85     	ld a,(Vel_left)
599+  9431 A7           	and a
600+  9432 28 06        	jr z,1F
601+  9434 47           	ld b,a
602+  9435 35           3 dec (hl)
603+  9436 10 FD        	djnz 3B
604+  9438 18 01        	jr 2F
605+  943A 35           1 dec (hl)
606+  943B C9           2 ret
607+  943C
608+  943C              ; ---------- ---------- ---------- ---------- ---------- ----------
609+  943C
610+  943C 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
611+  943F 01 1F 00     	ld bc,31
612+  9442 A7           	and a
613+  9443 ED 4A        	adc hl,bc
614+  9445 22 98 85     	ld (Posicion_actual),hl
615+  9448 21 C3 85     	ld hl,Ctrl_0														; $xxx1
616+  944B CB C6        	set 0,(hl)
617+  944D C9           	ret
618+  944E
619+  944E              ; ---------- ---------- ---------- ---------- ---------- ----------
620+  944E
621+  944E 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
622+  9451 01 1F 00     	ld bc,31
623+  9454 A7           	and a
624+  9455 ED 42        	sbc hl,bc
625+  9457 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
626+  945A 21 C3 85     	ld hl,Ctrl_0
627+  945D CB CE        	set 1,(hl)
628+  945F C9           	ret
629+  9460
630+  9460              ; ---------- ---------- ---------- ---------- ---------- ----------
631+  9460
632+  9460 24           Reaparece_abajo inc h
633+  9461 01 E0 17     	ld bc,$17e0
634+  9464 A7           	and a
635+  9465 ED 4A        	adc hl,bc
636+  9467 22 98 85     	ld (Posicion_actual),hl
637+  946A 21 C3 85     	ld hl,Ctrl_0
638+  946D CB D6        	set 2,(hl)
639+  946F C9           	ret
640+  9470
641+  9470              ; ---------- ---------- ---------- ---------- ---------- ----------
642+  9470
643+  9470 01 E0 17     Reaparece_arriba ld bc,$17e0
644+  9473 A7           	and a
645+  9474 ED 42        	sbc hl,bc
646+  9476 22 98 85     	ld (Posicion_actual),hl
647+  9479 21 C3 85     	ld hl,Ctrl_0
648+  947C CB DE        	set 3,(hl)
649+  947E C9           	ret
650+  947F
651+  947F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
652+  947F
653+  947F 2A A8 85     Reinicio ld hl,(Posicion_inicio)
654+  9482 22 98 85     	ld (Posicion_actual),hl
655+  9485 C9           	ret
# file closed: Direcciones.asm
880   9486              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  9486              ; ------------------------------------------------------------------------
  2+  9486              ;
  3+  9486              ;	02/04/23
  4+  9486              ;
  5+  9486              ;	Proporciona las coordenadas del objeto a imprimir.
  6+  9486              ;	Fila superior "0", Columna izquierda "0".
  7+  9486              ;
  8+  9486              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  9+  9486              ;
 10+  9486              ;	Modifica: A,BC y DE.
 11+  9486
 12+  9486 C5           Genera_coordenadas push bc
 13+  9487 E5           	push hl
 14+  9488 D5           	push de
 15+  9489
 16+  9489 2A 98 85     	ld hl,(Posicion_actual)
 17+  948C
 18+  948C 7D           	ld a,l
 19+  948D E6 1F        	and $1f
 20+  948F 32 9C 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
 21+  9492
 22+  9492 CD 5A 91     	call calcula_tercio
 23+  9495 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
 24+  9496
 25+  9496 1E 00        	ld e,0
 26+  9498 7D           	ld a,l
 27+  9499 E6 E0        	and $e0
 28+  949B 28 01        	jr z,1F
 29+  949D 04           	inc b
 30+  949E
 31+  949E 04           1 inc b
 32+  949F 05           	dec b
 33+  94A0 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
 34+  94A2              ;														; _ , salimos.
 35+  94A2 1C           3 inc e
 36+  94A3 D6 20        	sub 32
 37+  94A5 20 FB        	jr nz,3B
 38+  94A7 10 F5        	djnz 1B
 39+  94A9
 40+  94A9 7B           2 ld a,e
 41+  94AA 32 9D 85     	ld (Coordenada_y),a
 42+  94AD
 43+  94AD D1           	pop de
 44+  94AE E1           	pop hl
 45+  94AF C1           	pop bc
 46+  94B0
 47+  94B0 C9           	ret
 48+  94B1
 49+  94B1              ; ------------------------------------------------------------------------
 50+  94B1              ;	28/03/23
 51+  94B1              ;
 52+  94B1              ;	Proporciona las coordenadas del disparo a imprimir.
 53+  94B1              ;	Fila superior "0", Columna izquierda "0".
 54+  94B1              ;
 55+  94B1              ;	Input: HL contendrá la posición del proyectil en pantalla.
 56+  94B1              ;	Output: DE contendrá las coordenadas del disparo:
 57+  94B1              ;
 58+  94B1              ;		DE="$120d"
 59+  94B1              ;
 60+  94B1              ;		D, (Coordenada_X), Columnas, $12
 61+  94B1              ;		E, (Coordenada_y), Filas, $0d
 62+  94B1              ;
 63+  94B1              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
 64+  94B1
 65+  94B1              ;	Modifica: A,BC y DE.
 66+  94B1
 67+  94B1
 68+  94B1              Genera_coordenadas_disparo
 69+  94B1
 70+  94B1              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
 71+  94B1
 72+  94B1 7D           	ld a,l
 73+  94B2 E6 1F        	and $1f
 74+  94B4 57           	ld d,a 												; Columnas en D. Coordenada_X.
 75+  94B5 CD 5A 91     	call calcula_tercio
 76+  94B8 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
 77+  94B9 1E 00        	ld e,0
 78+  94BB 7D           	ld a,l
 79+  94BC E6 E0        	and $e0
 80+  94BE 28 01        	jr z,1F
 81+  94C0 04           	inc b
 82+  94C1 1C           1 inc e
 83+  94C2 D6 20        	sub 32
 84+  94C4 20 FB        	jr nz,1B
 85+  94C6 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
 86+  94C8 C9           	ret
 87+  94C9
# file closed: Genera_coordenadas.asm
881   94C9              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  94C9
  2+  94C9
  3+  94C9              ;   11/8/22
  4+  94C9              ;
  5+  94C9              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  94C9              ;
  7+  94C9              ;   Mov_obj.asm
  8+  94C9              ;
  9+  94C9              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  94C9              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  94C9              ;
 12+  94C9              ;   Codificación:
 13+  94C9              ;
 14+  94C9              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  94C9
 16+  94C9              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  94C9
 18+  94C9 02 40 00     Arriba db 2,%01000000,0
 19+  94CC 02 80 00     Abajo db 2,%10000000,0
 20+  94CF 02 20 00     Derecha db 2,%00100000,0
 21+  94D2 02 10 00     Izquierda db 2,%00010000,0
 22+  94D5 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  94D9 60 42 60 40
 22+  94DD 63
 23+  94DE 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  94E2 22 A3 80 A0
 24+  94E6 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  94EA 84 A0 83 A0
 25+  94EE 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  94F2 80 A3 22 A0
 26+  94F6 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  94FA 40 60 42 60
 27+  94FE 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9502
 29+  9502 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 30+  9506 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 31+  950A 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
 31+  950E 84 00
 32+  9510 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 32+  9514 84 00
 33+  9516 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 34+  951A 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  951E 1F 1F 1F 1F
 35+  9522 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 35+  9526 1F 1F 1F 1F
 35+  952A 1F
 36+  952B 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 36+  952F 2F 2F 2F 2F
 36+  9533 2F 2F
 37+  9535 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 37+  9539 2F 2F 00
 38+  953C
 39+  953C              ; ----- ----- ----- ----- -----
 40+  953C
 41+  953C 1A 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  953E 16 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  9540 D2 94        Indice_mov_Izquierda defw Izquierda
 44+  9542 CF 94        Indice_mov_Derecha defw Derecha
 45+  9544 CC 94        Indice_mov_Abajo defw Abajo
 46+  9546 C9 94        Indice_mov_Arriba defw Arriba
 47+  9548 06 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  954A 0A 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  954C 02 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  954E 10 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9550 D5 94        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9552              ; ----- ----- ----- ----- -----
 53+  9552
 54+  9552 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  9555 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  9556 28 02            jr z,1F
 57+  9558 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  955A 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  955D C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  955F 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  9562              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  9562 2A C7 85         ld hl,(Puntero_mov)
 63+  9565 7E               ld a,(hl)
 64+  9566 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  9569 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  956A 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  956D
 68+  956D 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  9570 A7               and a
 70+  9571 20 0C            jr nz,12F
 71+  9573 2A C7 85         ld hl,(Puntero_mov)
 72+  9576 7E               ld a,(hl)
 73+  9577 A7               and a
 74+  9578 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  957A E6 0F            and $0f
 76+  957C 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  957F              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  957F 2A C7 85     12 ld hl,(Puntero_mov)
 79+  9582 CB 7E            bit 7,(hl)
 80+  9584 28 03            jr z,2F
 81+  9586 CD 78 91         call Mov_down
 82+  9589 2A C7 85     2 ld hl, (Puntero_mov)
 83+  958C CB 76            bit 6,(hl)
 84+  958E 28 03            jr z,3F
 85+  9590 CD A6 91         call Mov_up
 86+  9593 2A C7 85     3 ld hl, (Puntero_mov)
 87+  9596 CB 6E            bit 5,(hl)
 88+  9598 28 03            jr z,4F
 89+  959A CD D4 91         call Mov_right
 90+  959D 2A C7 85     4 ld hl, (Puntero_mov)
 91+  95A0 CB 66            bit 4,(hl)
 92+  95A2 28 03            jr z,5F
 93+  95A4 CD F2 92         call Mov_left
 94+  95A7
 95+  95A7              ; ---------- --------- --------- ---------- ----------
 96+  95A7
 97+  95A7 3A CB 85     5 ld a,(Repetimos_db)
 98+  95AA A7               and a
 99+  95AB 28 07            jr z,6F
100+  95AD 3D               dec a
101+  95AE 32 CB 85         ld (Repetimos_db),a
102+  95B1 28 01            jr z,6f
103+  95B3 C9           11 ret
104+  95B4 21 C9 85     6 ld hl,Contador_db_mov
105+  95B7 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  95B8 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  95BB 23               inc hl
108+  95BC 22 C7 85         ld (Puntero_mov),hl
109+  95BF 18 F2            jr 11B
110+  95C1 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  95C4 3A CA 85         ld a,(Incrementa_puntero)
112+  95C7 47               ld b,a
113+  95C8 23           8 inc hl
114+  95C9 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  95CB 5E               ld e,(hl)
116+  95CC 23               inc hl
117+  95CD 56               ld d,(hl)
118+  95CE EB               ex de,hl
119+  95CF 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  95D2 18 DF            jr 11B
121+  95D4
122+  95D4              ; ---------- --------- --------- ---------- ----------
123+  95D4              ;
124+  95D4              ;   11/8/22
125+  95D4              ;
126+  95D4              ;   Prepara_Puntero_mov
127+  95D4
128+  95D4 E5           Prepara_Puntero_mov push hl
129+  95D5 D5               push de
130+  95D6 2A C5 85         ld hl,(Puntero_indice_mov)
131+  95D9 5E               ld e,(hl)
132+  95DA 23               inc hl
133+  95DB 56               ld d,(hl)
134+  95DC EB               ex de,hl
135+  95DD 22 C7 85         ld (Puntero_mov),hl
136+  95E0 D1               pop de
137+  95E1 E1               pop hl
138+  95E2 C9               ret
139+  95E3
140+  95E3              ; ---------- --------- --------- ---------- ----------
141+  95E3              ;
142+  95E3              ;   11/8/22
143+  95E3              ;
144+  95E3              ;   Reinicia_el_movimiento
145+  95E3
146+  95E3 CD D4 95     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  95E6 AF               xor a
148+  95E7 32 C9 85         ld (Contador_db_mov),a
149+  95EA 32 CA 85         ld (Incrementa_puntero),a
150+  95ED C3 52 95         jp Movimiento
151+  95F0 C9               ret
152+  95F1              ; ---------- --------- --------- ---------- ----------
153+  95F1
154+  95F1
155+  95F1
156+  95F1
157+  95F1
158+  95F1
159+  95F1
160+  95F1
161+  95F1
162+  95F1
163+  95F1
164+  95F1
165+  95F1
166+  95F1
167+  95F1
168+  95F1
169+  95F1
170+  95F1
# file closed: Patrones_de_mov.asm
882   95F1              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  95F1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  95F1              ;
  3+  95F1              ;	3/1/23
  4+  95F1              ;
  5+  95F1              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  95F1
  7+  95F1              ;	ADC HL,SP	LD (addr),SP
  8+  95F1              ;	ADD HL,SP	LD SP,(addr)
  9+  95F1              ;	ADD IX,SP	LD SP,nn
 10+  95F1              ; 	ADD IY,SP	LD SP,HL
 11+  95F1              ;				LD SP,IX
 12+  95F1              ;	DEC SP		LD SP,IY
 13+  95F1
 14+  95F1              ;	EX (SP),HL
 15+  95F1              ;	EX (SP),IX
 16+  95F1              ;	EX (SP),IY
 17+  95F1
 18+  95F1              ;	INC SP
 19+  95F1
 20+  95F1
 21+  95F1                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
883   7FD4
884   7FD4              	SAVESNA "Pruebas.sna", START
885   7FD4
886   7FD4
887   7FD4
# file closed: Banco_de_pruebas.asm
