# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B4 8E     	call Frame
  15  A104 FB           	ei
  16  A105 ED 4D        	reti
  17  A107
  18  A107              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  A107
  20  A107              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A107              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A107              ;
   3+ A107              ;	17/02/23
   4+ A107              ;
   5+ A107              ;	Sprites e índices.
   6+ A107
   7+ A107              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 12 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 16 8A        	defw End_Snapshot_1
 267+ 8500 1A 8A        	defw End_Snapshot_2
 268+ 8502 1E 8A        	defw End_Snapshot_3
 269+ 8504 14 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 18 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1C 8A        	defw End_Snapshot_disparos_2
 272+ 850A 20 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 BA 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 BA 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  22  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BC 88        	defw Nivel_2
   7+ 88AD C9 88        	defw Nivel_3
   8+ 88AF D9 88        	defw Nivel_4
   9+ 88B1 EB 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 04           Nivel_1 db 4	                                ; Nº de entidades.
  19+ 88B8 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BC 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C1 01 02
  22+ 88C3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C7 01 02
  23+ 88C9 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88CA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CE 01
  25+ 88CF 03 01 01 01  	db 3,1,1,1,1
  25+ 88D3 01
  26+ 88D4 03 01 01 01  	db 3,1,1,1,1
  26+ 88D8 01
  27+ 88D9 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88DA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DE 01
  29+ 88DF 04 01 01 01  	db 4,1,1,1,1
  29+ 88E3 01
  30+ 88E4 04 01 01 01  	db 4,1,1,1,1
  30+ 88E8 01
  31+ 88E9 02 03        	db 2,3
  32+ 88EB 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88F0 01
  34+ 88F1 05 01 01 01  	db 5,1,1,1,1
  34+ 88F5 01
  35+ 88F6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88FA 01
  36+ 88FB 05 01 01 01  	db 5,1,1,1,1
  36+ 88FF 01
  37+ 8900
  38+ 8900              ;---------------------------------------------------------------------------------------------------------------
  39+ 8900              ;
  40+ 8900              ;   21/5/23
  41+ 8900              ;
  42+ 8900              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8900              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8900              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8900              ;	_en la caja DRAW correspondiente.
  46+ 8900              ;
  47+ 8900              ;	MODIFICA: HL,DE y A.
  48+ 8900              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8900
  50+ 8900              Inicializa_Punteros_de_nivel
  51+ 8900
  52+ 8900 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8903 22 4D 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8906 CD 8A 8D     	call Extrae_address
  55+ 8909 7E           	ld a,(hl)
  56+ 890A 32 02 8A     	ld (Numero_de_entidades),a
  57+ 890D 23           	inc hl
  58+ 890E 22 4F 8A     	ld (Datos_de_nivel),hl
  59+ 8911 C9           	ret
  60+ 8912
  61+ 8912              ;---------------------------------------------------------------------------------------------------------------
  62+ 8912              ;
  63+ 8912              ;   13/5/23
  64+ 8912              ;
  65+ 8912              ;	Destruye A,BC,HL,DE
  66+ 8912
  67+ 8912              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8912              ;	_del juego.
  69+ 8912
  70+ 8912              Prepara_cajas
  71+ 8912
  72+ 8912              ; Preparamos los punteros de las cajas.
  73+ 8912
  74+ 8912 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8915 CD 8A 8D     	call Extrae_address
  76+ 8918 CD 55 89     	call Avanza_caja
  77+ 891B
  78+ 891B CD 99 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891E
  80+ 891E 2A 4F 8A     	ld hl,(Datos_de_nivel)
  81+ 8921
  82+ 8921              ; HL está en los datos del nivel correspondiente.
  83+ 8921              ; B actuará como contador de cajas.
  84+ 8921
  85+ 8921 C5           1 push bc
  86+ 8922
  87+ 8922 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8923 CD 46 89     	call PreparaBC
  89+ 8926
  90+ 8926 21 85 88     	ld hl,Indice_de_entidades
  91+ 8929 CD 4E 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892C 22 08 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892F
  94+ 892F CD 5F 89     	call Datos_de_entidad_a_caja
  95+ 8932
  96+ 8932 2A 00 8A     	ld hl,(Indice_restore_caja)
  97+ 8935 CD 8A 8D     	call Extrae_address
  98+ 8938 CD 55 89     	call Avanza_caja
  99+ 893B
 100+ 893B 2A 4F 8A     	ld hl,(Datos_de_nivel)
 101+ 893E 23           	inc hl
 102+ 893F 22 4F 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8942
 104+ 8942 C1           	pop bc
 105+ 8943 10 DC        	djnz 1B
 106+ 8945 C9           	ret
 107+ 8946
 108+ 8946 CB 27        PreparaBC sla a
 109+ 8948 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 894A 4F           	ld c,a
 111+ 894B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894D C9           	ret
 113+ 894E
 114+ 894E A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894F ED 4A        	adc hl,bc
 116+ 8951 CD 8A 8D     	call Extrae_address
 117+ 8954 C9           	ret
 118+ 8955
 119+ 8955 22 FC 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8958 13           	inc de
 121+ 8959 13           	inc de
 122+ 895A EB           	ex de,hl
 123+ 895B 22 00 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895E C9           	ret
 125+ 895F
 126+ 895F              Datos_de_entidad_a_caja
 127+ 895F
 128+ 895F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895F
 130+ 895F
 131+ 895F ED 5B FC 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8963
 133+ 8963 01 02 00     	ld bc,2
 134+ 8966 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8968
 136+ 8968 01 07 00     	ld bc,7
 137+ 896B CD 93 89     	call Situa_DE
 138+ 896E
 139+ 896E 01 05 00     	ld bc,5
 140+ 8971 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8973
 142+ 8973 01 04 00     	ld bc,4
 143+ 8976 CD 93 89     	call Situa_DE
 144+ 8979
 145+ 8979 01 07 00     	ld bc,7
 146+ 897C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897E
 148+ 897E 01 18 00     	ld bc,24
 149+ 8981 CD 93 89     	call Situa_DE
 150+ 8984
 151+ 8984 01 02 00     	ld bc,2
 152+ 8987 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8989
 154+ 8989              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8989              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8989
 157+ 8989 01 0F 00     	ld bc,15									; *****
 158+ 898C CD 93 89     	call Situa_DE
 159+ 898F
 160+ 898F 3E 03        	ld a,3
 161+ 8991 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8992
 163+ 8992 C9           	ret
 164+ 8993
 165+ 8993 EB           Situa_DE ex de,hl
 166+ 8994 A7           	and a
 167+ 8995 ED 4A        	adc hl,bc
 168+ 8997 EB           	ex de,hl
 169+ 8998 C9           	ret
 170+ 8999
 171+ 8999              ;---------------------------------------------------------------------------------------------------------------
 172+ 8999              ;
 173+ 8999              ;	21/5/23
 174+ 8999              ;
 175+ 8999              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8999              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8999              ;
 178+ 8999              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8999              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8999              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8999              ;
 182+ 8999              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8999              ;	MODIFICA: A y B.
 184+ 8999              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8999
 186+ 8999              Admin_num_entidades
 187+ 8999
 188+ 8999              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8999
 190+ 8999 3A 02 8A     	ld a,(Numero_de_entidades)
 191+ 899C A7           	and a
 192+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899D              ;	jr z,$
 194+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899D
 196+ 899D 20 03        	jr nz,3F
 197+ 899F
 198+ 899F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899F
 200+ 899F CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A2
 202+ 89A2 3A 02 8A     3 ld a,(Numero_de_entidades)
 203+ 89A5 FE 0A        	cp 10
 204+ 89A7 38 08        	jr c,1F
 205+ 89A9
 206+ 89A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 89A9              ; Actualizamos variables.
 208+ 89A9
 209+ 89A9 3E 0A        	ld a,10
 210+ 89AB 32 03 8A     	ld (Numero_parcial_de_entidades),a
 211+ 89AE 47           	ld b,a
 212+ 89AF 18 04        	jr 2F
 213+ 89B1
 214+ 89B1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 89B1              ; (Numero_de_entidades)="0".
 216+ 89B1
 217+ 89B1 32 03 8A     1 ld (Numero_parcial_de_entidades),a
 218+ 89B4 47           	ld b,a
 219+ 89B5 C9           2 ret
# file closed: Niveles.asm
  23  89B6
  24  89B6              ; ******************************************************************************************************************************************************************************************
  25  89B6              ; Constantes.
  26  89B6              ; ******************************************************************************************************************************************************************************************
  27  89B6              ;
  28  89B6              ; 25/05/23
  29  89B6              ;
  30  89B6              ; Constantes generales.
  31  89B6              ;
  32  89B6
  33  89B6              Sprite_vacio equ $f000
  34  89B6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  89B6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  89B6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  89B6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  89B6
  39  89B6              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  89B6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  89B6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  42  89B6              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  89B6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  89B6              ;                               				        ; De momento situamos este almacén en $7060.
  45  89B6              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  46  89B6              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  47  89B6              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  48  89B6              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  49  89B6              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  50  89B6              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  51  89B6
  52  89B6              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  53  89B6
  54  89B6              ; ******************************************************************************************************************************************************************************************
  55  89B6              ; Variables.
  56  89B6              ; ******************************************************************************************************************************************************************************************
  57  89B6              ;
  58  89B6              ; 28/07/23
  59  89B6              ;
  60  89B6              ; Variables de DRAW. (Motor principal).
  61  89B6              ;
  62  89B6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  63  89B6
  64  89B6 00           Filas db 0												; Filas. [DRAW]
  65  89B7 00           Columns db 0  											; Nº de columnas. [DRAW]
  66  89B8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  67  89BA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  68  89BC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  69  89BD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  70  89BE
  71  89BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  72  89BE
  73  89BE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  74  89BF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  75  89BF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  76  89BF 00           Attr db 0												; Atributos de la entidad:
  77  89C0
  78  89C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  79  89C0              ;
  80  89C0              ;	COLORES: 0 ..... NEGRO
  81  89C0              ;    		 1 ..... AZUL
  82  89C0              ; 			 2 ..... ROJO
  83  89C0              ;			 3 ..... MAGENTA
  84  89C0              ; 			 4 ..... VERDE
  85  89C0              ; 			 5 ..... CIAN
  86  89C0              ;			 6 ..... AMARILLO
  87  89C0              ; 			 7 ..... BLANCO
  88  89C0
  89  89C0 00 00        Indice_Sprite_der defw 0
  90  89C2 00 00        Indice_Sprite_izq defw 0
  91  89C4 00 00        Puntero_DESPLZ_der defw 0
  92  89C6 00 00        Puntero_DESPLZ_izq defw 0
  93  89C8
  94  89C8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  95  89CA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  96  89CB
  97  89CB              ; Variables de objeto. (Características).
  98  89CB
  99  89CB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 100  89CC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 101  89CD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 102  89CE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 103  89CF
 104  89CF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 105  89D0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 106  89D0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 107  89D0
 108  89D0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 109  89D2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89D4 00 00        	defw 0
 111  89D6 00 00 00 00  	db 0,0,0,0
 112  89DA
 113  89DA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 114  89DC 00 00        	defw 0
 115  89DE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 116  89E0 00 00 00 00  	db 0,0,0,0
 117  89E4
 118  89E4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 119  89E4
 120  89E4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 121  89E5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 122  89E5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 123  89E5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 124  89E5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 125  89E5              ;
 126  89E5              ; 														DESCRIPCIÖN:
 127  89E5              ;
 128  89E5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 129  89E5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 130  89E5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 131  89E5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 132  89E5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 133  89E5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 134  89E5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 135  89E5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 136  89E5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 137  89E5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 138  89E5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 139  89E5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 140  89E5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 141  89E5              ;
 142  89E5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 143  89E5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 144  89E5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 145  89E5
 146  89E5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 147  89E6
 148  89E6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 149  89E6
 150  89E6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 151  89E7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 152  89E9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 153  89EB 00 00        Puntero_indice_mov_bucle defw 0							;
 154  89ED              ;
 155  89ED              ;
 156  89ED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 157  89EE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 158  89EE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 159  89EE 00           Incrementa_puntero_backup db 0
 160  89EF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 161  89F0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 162  89F0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 163  89F1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 164  89F2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 165  89F3              ;
 166  89F3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 167  89F3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 168  89F3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 169  89F3              ;
 170  89F3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 171  89F3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 172  89F3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 173  89F3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 174  89F3              ;
 175  89F3              ;														;	"$ff" ..... Bucle infinito de repetición.
 176  89F3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 177  89F3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 178  89F3
 179  89F3
 180  89F3              ; Variables de funcionamiento. [DRAW].
 181  89F3
 182  89F3 00           Columnas db 0
 183  89F4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 184  89F6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  89F7
 187  89F7              ; variables de control general.
 188  89F7
 189  89F7 00           Ctrl_2 db 0
 190  89F8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 191  89F8              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 192  89F8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 193  89F8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 194  89F8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 195  89F8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 196  89F8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 197  89F8              ;
 198  89F8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 199  89F8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 200  89F8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 201  89F8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 202  89F8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 203  89F8
 204  89F8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 205  89F9
 206  89F9              ;! 67 Bytes por entidad.
 207  89F9
 208  89F9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 209  89F9              ;					         		---------;      ;---------
 210  89F9
 211  89F9
 212  89F9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 213  89F9
 214  89F9 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 215  89FA
 216  89FA              ;														DESCRIPCIÓN:
 217  89FA              ;
 218  89FA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 219  89FA              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 220  89FA              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 221  89FA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 222  89FA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 223  89FA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 224  89FA
 225  89FA              ;														BIT 3, Recarga de nueva oleada.
 226  89FA              ;														BIT 4, Recarga de nueva oleada.
 227  89FA              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 228  89FA              ;														BIT 6, **** Frame completo.
 229  89FA
 230  89FA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 231  89FC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 232  89FC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 233  89FC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 234  89FC
 235  89FC
 236  89FC
 237  89FC              ; Gestión de ENTIDADES y CAJAS.
 238  89FC
 239  89FC 00 00        Puntero_store_caja defw 0
 240  89FE 00 00        Puntero_restore_caja defw 0
 241  8A00 00 00        Indice_restore_caja defw 0
 242  8A02 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 243  8A03 00           Numero_parcial_de_entidades db 0
 244  8A04 00           Entidades_en_curso db 0									; ..... ..... .....
 245  8A05 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 246  8A06              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 247  8A06              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 248  8A06              ;														; _ (Numero_de_malotes)="0".
 249  8A06 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 250  8A08 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 251  8A0A              ;														; _ puntero (Indice_entidades).
 252  8A0A
 253  8A0A
 254  8A0A              ;---------------------------------------------------------------------------------------------------------------
 255  8A0A              ;
 256  8A0A              ;	9/8/23
 257  8A0A              ;
 258  8A0A              ;	Álbumes.
 259  8A0A
 260  8A0A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 261  8A0C              ;														; _variable para almacenar lo posición del puntero_
 262  8A0C              ; 														; _de pila, SP.
 263  8A0C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 264  8A0E              ;														; La utiliza la rutina [Extrae_foto_registros].
 265  8A0E 00 00        Stack_snapshot defw 0
 266  8A10 00 00        Stack_snapshot_disparos defw 0
 267  8A12
 268  8A12 00 00        End_Snapshot defw 0
 269  8A14              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 270  8A14 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 271  8A16              ;														; _el snapshot de los registros del siguiente disparo.
 272  8A16              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 273  8A16 00 00        End_Snapshot_1 defw 0
 274  8A18 00 00        End_Snapshot_disparos_1 defw 0
 275  8A1A 00 00        End_Snapshot_2 defw 0
 276  8A1C 00 00        End_Snapshot_disparos_2 defw 0
 277  8A1E 00 00        End_Snapshot_3 defw 0
 278  8A20 00 00        End_Snapshot_disparos_3 defw 0
 279  8A22
 280  8A22 00 00        Puntero_indice_album_de_fotos defw 0
 281  8A24 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 282  8A26
 283  8A26 00 00        Puntero_indice_End_Snapshot defw 0
 284  8A28 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 285  8A2A 00 00        Puntero_de_End_Snapshot defw 0
 286  8A2C 00 00        Puntero_de_End_Snapshot_disparos defw 0
 287  8A2E
 288  8A2E              ;---------------------------------------------------------------------------------------------------------------
 289  8A2E
 290  8A2E              ; Gestión de Disparos.
 291  8A2E
 292  8A2E 00           Numero_de_disparotes db 0
 293  8A2F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 294  8A31 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 295  8A33 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 296  8A34              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 297  8A34              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 298  8A34 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 299  8A36              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 300  8A36              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 301  8A36              ;														; _produzca colisión.
 302  8A36 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 303  8A38              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 304  8A38 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 305  8A3B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 306  8A3B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 307  8A3E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 308  8A3E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 309  8A40 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 310  8A41
 311  8A41              ;---------------------------------------------------------------------------------------------------------------
 312  8A41
 313  8A41              ; Relojes y temporizaciones.
 314  8A41
 315  8A41 00           Contador_de_frames db 0
 316  8A42 00           Contador_de_frames_2 db 0
 317  8A43
 318  8A43 04           Clock_explosion db 4
 319  8A44 1E           Clock_Entidades_en_curso db 30
 320  8A45 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 321  8A46              ;														; Repite la oleada de entidades.
 322  8A46 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 323  8A47 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 324  8A48 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 325  8A49
 326  8A49 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 327  8A4A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 328  8A4B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 329  8A4C
 330  8A4C              ;---------------------------------------------------------------------------------------------------------------
 331  8A4C
 332  8A4C              ; Gestión de NIVELES.
 333  8A4C
 334  8A4C 00           Nivel db 0												; Nivel actual del juego.
 335  8A4D 00 00        Puntero_indice_NIVELES defw 0
 336  8A4F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 337  8A51              ; 														; _ que definen el NIVEL.
 338  8A51              ; Y todo comienza aquí .....
 339  8A51              ;
 340  8A51
 341  8A51 00 00        Guarda_puntero_objeto defw 0
 342  8A53
 343  8A53
 344  8A53              ; Rutina principal *************************************************************************************************************************************************************************
 345  8A53              ;
 346  8A53              ;	14/11/22
 347  8A53
 348  8A53              START
 349  8A53
 350  8A53 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 351  8A56 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 352  8A58 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 353  8A5A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 354  8A5C F3           	DI
 355  8A5D
 356  8A5D 3E 07        	ld a,%00000111
 357  8A5F CD F6 99     	call Cls
 358  8A62
 359  8A62 CD 63 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 360  8A65
 361  8A65              ; INICIALIZACIÓN.
 362  8A65
 363  8A65 CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 364  8A68
 365  8A68 CD 12 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 366  8A6B
 367  8A6B CD D6 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 368  8A6E              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 369  8A6E CD EC 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 370  8A71              ;													     ; _ malotes antes de guardar ninguna foto.
 371  8A71              ; ----------
 372  8A71
 373  8A71 CD 13 8E     	call Restore_entidad
 374  8A74
 375  8A74 21 03 8A     	ld hl,Numero_parcial_de_entidades
 376  8A77 46           	ld b,(hl)
 377  8A78 04           	inc b
 378  8A79 05           	dec b
 379  8A7A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 380  8A7C
 381  8A7C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 382  8A7C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 383  8A7C              ;	Pintamos el resto de entidades:
 384  8A7C
 385  8A7C              ;	INICIA ENTIDADES !!!!!
 386  8A7C
 387  8A7C C5           1 push bc  												; Guardo el contador de entidades.
 388  8A7D
 389  8A7D CD 7D 8C     	call Inicia_entidad
 390  8A80
 391  8A80 C1           	pop bc
 392  8A81 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 393  8A83
 394  8A83              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 395  8A83              ; (Esto se dá cuando se inicia una nueva oleada).
 396  8A83
 397  8A83 3A F9 89     	ld a,(Ctrl_1)
 398  8A86 CB 5F        	bit 3,a
 399  8A88 20 18        	jr nz,5F											; Loop
 400  8A8A
 401  8A8A              ; 	INICIA AMADEUS !!!!!
 402  8A8A
 403  8A8A CD 3A 8E     3 call Restore_Amadeus
 404  8A8D CD 90 8D     	call Inicia_Puntero_objeto
 405  8A90 CD 28 94     	call Draw
 406  8A93 CD A0 7F     	call Guarda_foto_registros
 407  8A96 11 A4 85     	ld de,Amadeus_db
 408  8A99 CD 4C 8E     	call Store_Amadeus
 409  8A9C
 410  8A9C              ; 	INICIA DISPAROS !!!!!
 411  8A9C
 412  8A9C CD 4C 8D     	call Inicia_Puntero_Disparo_Entidades
 413  8A9F CD 53 8D     	call Inicia_Puntero_Disparo_Amadeus
 414  8AA2
 415  8AA2              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 416  8AA2
 417  8AA2 CD D6 8C     5 call Inicia_punteros_de_cajas
 418  8AA5 CD 13 8E     	call Restore_entidad
 419  8AA8
 420  8AA8 3A F9 89     	ld a,(Ctrl_1)
 421  8AAB CB 5F        	bit 3,a
 422  8AAD 28 0A        	jr z,6F
 423  8AAF
 424  8AAF              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 425  8AAF
 426  8AAF 21 F9 89     	ld hl,Ctrl_1
 427  8AB2 CB 9E        	res 3,(hl)
 428  8AB4 CD 5A 8D     	call Calcula_numero_de_malotes
 429  8AB7 18 0A        	jr Main
 430  8AB9
 431  8AB9              ; ----------
 432  8AB9
 433  8AB9 3A 03 8A     6 ld a,(Numero_parcial_de_entidades)
 434  8ABC 3C           	inc a
 435  8ABD 32 05 8A     	ld (Numero_de_malotes),a
 436  8AC0
 437  8AC0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 438  8AC0              ; _ tenemos calculado (Numero_de_malotes).
 439  8AC0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 440  8AC0              ; _ para situarnos en el siguiente album.
 441  8AC0
 442  8AC0 CD 1D 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 443  8AC3
 444  8AC3              ; ------------------------------------
 445  8AC3
 446  8AC3              Main
 447  8AC3
 448  8AC3              ;
 449  8AC3              ;	3/8/23
 450  8AC3
 451  8AC3 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 452  8AC6 47           	ld b,a
 453  8AC7 3A 41 8A     	ld a,(Contador_de_frames)
 454  8ACA B8           	cp b
 455  8ACB 20 18        	jr nz,13F
 456  8ACD
 457  8ACD 3A 03 8A     	ld a,(Numero_parcial_de_entidades)
 458  8AD0 47           	ld b,a
 459  8AD1 3A 04 8A     	ld a,(Entidades_en_curso)
 460  8AD4 B8           	cp b
 461  8AD5 28 0E        	jr z,13F
 462  8AD7 30 0C        	jr nc,13F
 463  8AD9
 464  8AD9 3C           	inc a
 465  8ADA 32 04 8A     	ld (Entidades_en_curso),a
 466  8ADD
 467  8ADD 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 468  8AE0
 469  8AE0              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 470  8AE0              ;! _ IMPREDECIBLE !!!!
 471  8AE0
 472  8AE0 C6 64        	add 100
 473  8AE2 32 44 8A     	ld (Clock_Entidades_en_curso),a
 474  8AE5
 475  8AE5              ; Habilita disparos.
 476  8AE5
 477  8AE5 21 46 8A     13 ld hl,Disparo_Amadeus
 478  8AE8 11 48 8A     	ld de,CLOCK_repone_disparo_Amadeus
 479  8AEB CD BB A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 480  8AEE
 481  8AEE 21 49 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 482  8AF1 11 4B 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 483  8AF4 CD BB A0     	call Habilita_disparos
 484  8AF7
 485  8AF7              ; COLISIONES.
 486  8AF7
 487  8AF7 CD 0A 93     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 488  8AFA
 489  8AFA              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 490  8AFA              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 491  8AFA              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 492  8AFA
 493  8AFA AF           	xor a
 494  8AFB 32 33 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 495  8AFE
 496  8AFE CD D6 8C     	call Inicia_punteros_de_cajas
 497  8B01 CD 13 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 498  8B04              ; 														; _ en DRAW.
 499  8B04 3A B6 89     	ld a,(Filas)
 500  8B07 A7           	and a
 501  8B08 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 502  8B0A CD 25 8E     	call Incrementa_punteros_de_cajas
 503  8B0D 18 F2        	jr 12B
 504  8B0F
 505  8B0F              ; ---------------------------------------------------------------------------------------
 506  8B0F
 507  8B0F 3A 03 8A     10 ld a,(Numero_parcial_de_entidades)
 508  8B12 47               ld b,a
 509  8B13 A7           	and a
 510  8B14 20 14        	jr nz,11F
 511  8B16
 512  8B16 21 F9 89     	ld hl,Ctrl_1
 513  8B19 CB 66        	bit 4,(hl)
 514  8B1B C2 A7 8B     	jp nz,16F
 515  8B1E
 516  8B1E 21 F9 89     	ld hl,Ctrl_1
 517  8B21 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 518  8B23
 519  8B23 3A 41 8A     	ld a,(Contador_de_frames)
 520  8B26 3C           	inc a
 521  8B27 32 45 8A     	ld (Activa_recarga_cajas),a
 522  8B2A
 523  8B2A              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 524  8B2A
 525  8B2A 3A 04 8A     11 ld a,(Entidades_en_curso)
 526  8B2D A7           	and a
 527  8B2E CA A7 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 528  8B31 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 529  8B32
 530  8B32              ; Código que ejecutamos con cada entidad:
 531  8B32              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 532  8B32
 533  8B32 C5           15 push bc 												; Nº de entidades en curso.
 534  8B33
 535  8B33              ; Impacto ???
 536  8B33
 537  8B33 3A CF 89     	ld a,(Impacto)
 538  8B36 A7           	and a
 539  8B37 28 2D        	jr z,8F
 540  8B39
 541  8B39              ; Hay Impacto en esta entidad.
 542  8B39
 543  8B39 21 43 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 544  8B3C 35           	dec (hl)
 545  8B3D 20 62        	jr nz,17F
 546  8B3F
 547  8B3F              ;! Velocidad de la animación de la explosión.
 548  8B3F
 549  8B3F 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 550  8B41              ;														; _,(velocidad de la explosión).
 551  8B41 CD 8D 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 552  8B44
 553  8B44              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 554  8B44
 555  8B44 3A F7 89     	ld a,(Ctrl_2)
 556  8B47 CB 4F        	bit 1,a
 557  8B49 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 558  8B4B
 559  8B4B              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 560  8B4B
 561  8B4B 3A BE 89     	ld a,(CTRL_DESPLZ)
 562  8B4E A7           	and a
 563  8B4F 20 08        	jr nz,18F
 564  8B51
 565  8B51 21 84 84     	ld hl,Indice_Explosion_2x2-2
 566  8B54 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 567  8B57 18 06        	jr 19F
 568  8B59
 569  8B59 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 570  8B5C 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 571  8B5F
 572  8B5F 21 F7 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 573  8B62 CB CE        	set 1,(hl)
 574  8B64 18 22        	jr 7F
 575  8B66
 576  8B66              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 577  8B66              ; _con las coordenadas de la entidad almacenada en DRAW.
 578  8B66
 579  8B66 3A F9 89     8 ld a,(Ctrl_1)
 580  8B69 CB 57        	bit 2,a
 581  8B6B 28 1B        	jr z,7F
 582  8B6D
 583  8B6D 2A 36 8A     	ld hl,(Coordenadas_disparo_certero)
 584  8B70 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 585  8B71              ;														; E contiene la coordenada_X del disparo.
 586  8B71 2A BC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 587  8B74              ;														; H FILA, (Coordenada_y de la entidad).
 588  8B74 A7           	and a
 589  8B75 ED 52        	sbc hl,de
 590  8B77
 591  8B77 CD 41 93     	call Determina_resultado_comparativa
 592  8B7A
 593  8B7A 78           	ld a,b
 594  8B7B A7           	and a
 595  8B7C 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 596  8B7E
 597  8B7E              ; ----- ----- -----
 598  8B7E
 599  8B7E 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 600  8B80 32 CF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 601  8B83
 602  8B83 21 F9 89     	ld hl,Ctrl_1
 603  8B86 CB 96        	res 2,(hl)
 604  8B88
 605  8B88 CD FF 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 606  8B8B
 607  8B8B 3A E4 89     	ld a,(Ctrl_0)
 608  8B8E CB 67        	bit 4,a
 609  8B90 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 610  8B92
 611  8B92              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 612  8B92              ; [[[
 613  8B92 CD AE 8E     	call Detecta_disparo_entidad
 614  8B95              ; ]]]
 615  8B95 CD 9D 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 616  8B98
 617  8B98 21 E4 89     	ld hl,Ctrl_0
 618  8B9B CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 619  8B9D AF           	xor a
 620  8B9E 32 E5 89     	ld (Obj_dibujado),a
 621  8BA1
 622  8BA1 CD D8 8D     17 call Store_Restore_cajas
 623  8BA4
 624  8BA4 C1           	pop bc
 625  8BA5 10 8B        	djnz 15B
 626  8BA7
 627  8BA7              ; ------------------------------------
 628  8BA7
 629  8BA7              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 630  8BA7              ; Hemos gestionado todas las unidades.
 631  8BA7              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 632  8BA7
 633  8BA7              ;	ld hl,Ctrl_1
 634  8BA7              ;	res 2,(hl)
 635  8BA7
 636  8BA7              ; ------------------------------------
 637  8BA7
 638  8BA7              ; Tras la gestión de las entidades, ... AMADEUS.
 639  8BA7
 640  8BA7 CD 3A 8E     16 call Restore_Amadeus
 641  8BAA
 642  8BAA 3A CF 89     	ld a,(Impacto)
 643  8BAD A7           	and a
 644  8BAE 20 FE        	jr nz,$
 645  8BB0
 646  8BB0 CD 5E 8C     	call Mov_Amadeus
 647  8BB3
 648  8BB3 3A E4 89     	ld a,(Ctrl_0)
 649  8BB6 CB 67        	bit 4,a
 650  8BB8 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 651  8BBA
 652  8BBA CD 9D 8C     	call Guarda_foto_entidad_a_pintar
 653  8BBD
 654  8BBD 21 E4 89     14 ld hl,Ctrl_0
 655  8BC0 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 656  8BC2
 657  8BC2 AF           	xor a
 658  8BC3 32 E5 89     	ld (Obj_dibujado),a
 659  8BC6
 660  8BC6 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 661  8BC9 CD 4C 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 662  8BCC
 663  8BCC              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 664  8BCC
 665  8BCC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 666  8BCC
 667  8BCC              ;	call Calcula_numero_de_disparotes
 668  8BCC
 669  8BCC CD 1D 8D      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 670  8BCF              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 671  8BCF              ;														; _ interrupción.
 672  8BCF 3E 04        	ld a,4
 673  8BD1 D3 FE        	out ($fe),a
 674  8BD3
 675  8BD3              ; ----------------------------------------
 676  8BD3
 677  8BD3 3A F9 89     	ld a,(Ctrl_1) 										; Existe Loop?
 678  8BD6 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 679  8BD8 CA C3 8A     	jp z,Main
 680  8BDB
 681  8BDB              ; -----
 682  8BDB              ;	(((
 683  8BDB
 684  8BDB 3A 41 8A     	ld a,(Contador_de_frames)
 685  8BDE 47           	ld b,a
 686  8BDF 3A 45 8A     	ld a,(Activa_recarga_cajas)
 687  8BE2 B8           	cp b
 688  8BE3 28 08        	jr z,20F
 689  8BE5
 690  8BE5 21 F9 89     	ld hl,Ctrl_1
 691  8BE8 CB E6        	set 4,(hl)
 692  8BEA C3 C3 8A     	jp Main
 693  8BED
 694  8BED 21 F9 89     20 ld hl,Ctrl_1
 695  8BF0 CB A6        	res 4,(hl)
 696  8BF2 F3           	di
 697  8BF3
 698  8BF3 3A 41 8A     	ld a,(Contador_de_frames)
 699  8BF6
 700  8BF6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 701  8BF6              ;! _ IMPREDECIBLE !!!!
 702  8BF6
 703  8BF6 C6 0A        	add 10
 704  8BF8 32 44 8A     	ld (Clock_Entidades_en_curso),a
 705  8BFB
 706  8BFB C3 68 8A     	jp 4B
 707  8BFE
 708  8BFE C9           	ret
 709  8BFF
 710  8BFF              ; --------------------------------------------------------------------------------------------------------------
 711  8BFF              ;
 712  8BFF              ;	27/05/23
 713  8BFF
 714  8BFF              Mov_obj
 715  8BFF
 716  8BFF              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 717  8BFF
 718  8BFF 3A F7 89     	ld a,(Ctrl_2)
 719  8C02 CB 4F        	bit 1,a
 720  8C04 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 721  8C06
 722  8C06              ; Explosión:
 723  8C06
 724  8C06 3A F8 89     	ld a,(Frames_explosion)
 725  8C09 A7           	and a
 726  8C0A 20 11        	jr nz,4F
 727  8C0C
 728  8C0C              ; Una alimaña menos!!!!!!!!!1
 729  8C0C
 730  8C0C CD 55 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 731  8C0F 21 03 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 732  8C12 35           	dec (hl)
 733  8C13 21 04 8A     	ld hl,Entidades_en_curso
 734  8C16 35           	dec (hl)
 735  8C17 21 02 8A     	ld hl,Numero_de_entidades
 736  8C1A 35           	dec (hl)
 737  8C1B 18 40        	jr 3F
 738  8C1D
 739  8C1D              ; -----
 740  8C1D
 741  8C1D              ;	`Movemos´ la explosión.
 742  8C1D
 743  8C1D 2A C4 89     4 ld hl,(Puntero_DESPLZ_der)
 744  8C20 23           	inc hl
 745  8C21 23           	inc hl
 746  8C22 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 747  8C25 CD 8A 8D     	call Extrae_address
 748  8C28 22 BA 89     	ld (Puntero_objeto),hl
 749  8C2B
 750  8C2B 21 F8 89     	ld hl,Frames_explosion
 751  8C2E 35           	dec (hl)
 752  8C2F
 753  8C2F CD 8D 8C     	call Guarda_foto_entidad_a_borrar
 754  8C32 18 29        	jr 3F
 755  8C34
 756  8C34 AF           2 xor a
 757  8C35 32 E5 89     	ld (Obj_dibujado),a
 758  8C38 32 E4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 759  8C3B              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 760  8C3B              ; 														; _de la entidad.
 761  8C3B CD A7 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 762  8C3E              ;														; Obj_dibujado="0".
 763  8C3E              ; Movemos Entidades malignas.
 764  8C3E
 765  8C3E              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 766  8C3E              ;	and a 												; _a movernos. (Limitador_de_entidades).
 767  8C3E              ;	ret z
 768  8C3E
 769  8C3E CD 56 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 770  8C41
 771  8C41 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 772  8C44 CB 67        	bit 4,a
 773  8C46 C8           	ret z
 774  8C47
 775  8C47              ; Ha habido desplazamiento de la entidad maligna.
 776  8C47              ; Ha llegado a zona de AMADEUS ???
 777  8C47
 778  8C47 3A BD 89     	ld a,(Coordenada_y)
 779  8C4A FE 14        	cp $14
 780  8C4C D4 CF 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 781  8C4F              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 782  8C4F              ; ---------
 783  8C4F
 784  8C4F 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 785  8C51 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 786  8C54 CD A7 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 787  8C57 CD BE 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 788  8C5A CD 8D 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 789  8C5D C9           3 ret													; _de la misma.
 790  8C5E
 791  8C5E              ; --------------------------------------------------------------------------------------------------------------
 792  8C5E              ;
 793  8C5E              ;	29/1/23
 794  8C5E
 795  8C5E              Mov_Amadeus
 796  8C5E
 797  8C5E AF           	xor a
 798  8C5F 32 E5 89     	ld (Obj_dibujado),a
 799  8C62 CD A7 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 800  8C65              ;														; Obj_dibujado="0".
 801  8C65              ; Movemos Amadeus.
 802  8C65
 803  8C65 CD 77 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 804  8C68 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 805  8C6B CB 67        	bit 4,a
 806  8C6D C8           	ret z
 807  8C6E
 808  8C6E              ; ---------
 809  8C6E
 810  8C6E 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 811  8C70 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 812  8C73 CD A7 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 813  8C76 CD BE 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 814  8C79 CD 8D 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 815  8C7C C9           	ret													; _de la nave.
 816  8C7D
 817  8C7D              ; -----------------------------------------------------------------------------------
 818  8C7D
 819  8C7D CD 90 8D     Inicia_entidad	call Inicia_Puntero_objeto
 820  8C80 CD 0A 9A     	call Recompone_posicion_inicio
 821  8C83 CD 28 94     	call Draw
 822  8C86 CD A0 7F     	call Guarda_foto_registros
 823  8C89 CD D8 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 824  8C8C C9           	ret
 825  8C8D
 826  8C8D              ; --------------------------------------------------------------------------------------------------------------
 827  8C8D              ;
 828  8C8D              ;	31/01/23
 829  8C8D              ;
 830  8C8D              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 831  8C8D
 832  8C8D              Guarda_foto_entidad_a_borrar
 833  8C8D
 834  8C8D CD 0C 97     	call Prepara_draw
 835  8C90 CD 3C 96     	call calcula_CColumnass
 836  8C93 CD 73 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 837  8C96 CD D2 96     	call Define_rutina_de_impresion
 838  8C99 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 839  8C9C C9           	ret
 840  8C9D
 841  8C9D              ; --------------------------------------------------------------------------------------------------------------
 842  8C9D              ;
 843  8C9D              ;	31/01/23
 844  8C9D              ;
 845  8C9D              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 846  8C9D              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 847  8C9D
 848  8C9D              Guarda_foto_entidad_a_pintar
 849  8C9D
 850  8C9D CD CA 8C     	call Repone_pintar
 851  8CA0 CD 28 94     	call Draw
 852  8CA3 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 853  8CA6 C9           	ret
 854  8CA7
 855  8CA7              ; --------------------------------------------------------------------------------------------------------------
 856  8CA7              ;
 857  8CA7              ;
 858  8CA7
 859  8CA7 21 B6 89     Prepara_var_pintado_borrado	ld hl,Filas
 860  8CAA 3A E5 89     	ld a,(Obj_dibujado)
 861  8CAD A7           	and a
 862  8CAE 28 05        	jr z,1F
 863  8CB0 11 DA 89     	ld de,Variables_de_pintado
 864  8CB3 18 03        	jr 2F
 865  8CB5 11 D0 89     1 ld de,Variables_de_borrado
 866  8CB8 01 08 00     2 ld bc,8
 867  8CBB ED B0        	ldir
 868  8CBD C9           	ret
 869  8CBE
 870  8CBE              ; --------------------------------------------------------------------------------------------------------------
 871  8CBE
 872  8CBE 21 D0 89     Repone_borrar ld hl,Variables_de_borrado
 873  8CC1 11 B6 89     	ld de,Filas
 874  8CC4 01 08 00     	ld bc,8
 875  8CC7 ED B0        	ldir
 876  8CC9 C9           	ret
 877  8CCA
 878  8CCA 21 DA 89     Repone_pintar ld hl,Variables_de_pintado
 879  8CCD 11 B6 89     	ld de,Filas
 880  8CD0 01 08 00     	ld bc,8
 881  8CD3 ED B0        	ldir
 882  8CD5 C9           	ret
 883  8CD6
 884  8CD6              ; *************************************************************************************************************************************************************
 885  8CD6              ;
 886  8CD6              ; 8/1/23
 887  8CD6              ;
 888  8CD6              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 889  8CD6              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 890  8CD6              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 891  8CD6
 892  8CD6              ; Destruye HL y DE !!!!!
 893  8CD6
 894  8CD6              Inicia_punteros_de_cajas
 895  8CD6
 896  8CD6 21 8C 85     	ld hl,Indice_de_cajas
 897  8CD9 CD 8A 8D         call Extrae_address
 898  8CDC 22 FC 89         ld (Puntero_store_caja),hl
 899  8CDF 21 8E 85     	ld hl,Indice_de_cajas+2
 900  8CE2 22 00 8A     	ld (Indice_restore_caja),hl
 901  8CE5 CD 8A 8D     	call Extrae_address
 902  8CE8 22 FE 89     	ld (Puntero_restore_caja),hl
 903  8CEB C9               ret
 904  8CEC
 905  8CEC              ; ---------------------------------------------------------------
 906  8CEC              ;
 907  8CEC              ;	9/8/23
 908  8CEC              ;
 909  8CEC              ;	Inicialización y gestión de álbumes de fotos y cajas.
 910  8CEC
 911  8CEC              Inicia_punteros_de_albumes_y_malotes
 912  8CEC
 913  8CEC 21 EC 84     	ld hl,Indice_album_de_fotos
 914  8CEF 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 915  8CF2 CD 8A 8D     	call Extrae_address
 916  8CF5 22 0E 8A     	ld (Stack_snapshot),hl
 917  8CF8
 918  8CF8 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 919  8CFB 22 24 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 920  8CFE CD 8A 8D     	call Extrae_address
 921  8D01 22 10 8A     	ld (Stack_snapshot_disparos),hl
 922  8D04
 923  8D04 21 FC 84     	ld hl,Indice_End_Snapshot
 924  8D07 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 925  8D0A CD 8A 8D     	call Extrae_address
 926  8D0D 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 927  8D10
 928  8D10 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 929  8D13 22 28 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 930  8D16 CD 8A 8D     	call Extrae_address
 931  8D19 22 2C 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 932  8D1C
 933  8D1C C9           	ret
 934  8D1D
 935  8D1D              ;	12/8/23
 936  8D1D
 937  8D1D              Avanza_puntero_de_album_de_fotos_y_malotes
 938  8D1D
 939  8D1D              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 940  8D1D
 941  8D1D              ; Estamos en el último álbum del índice???.
 942  8D1D
 943  8D1D 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
 944  8D20 01 F2 84     	ld bc,Indice_album_de_fotos+6
 945  8D23 A7           	and a
 946  8D24 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 947  8D26 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 948  8D28
 949  8D28 21 F9 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 950  8D2B CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 951  8D2D 76           	halt
 952  8D2E C9           	ret
 953  8D2F
 954  8D2F 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 955  8D32 23           	inc hl
 956  8D33 23           	inc hl
 957  8D34 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 958  8D37 CD 8A 8D     	call Extrae_address
 959  8D3A 22 0E 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 960  8D3D
 961  8D3D 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
 962  8D40 23           	inc hl
 963  8D41 23           	inc hl
 964  8D42 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 965  8D45 CD 8A 8D     	call Extrae_address
 966  8D48 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 967  8D4B
 968  8D4B C9           	ret
 969  8D4C
 970  8D4C              ; *************************************************************************************************************************************************************
 971  8D4C              ;
 972  8D4C              ; 8/1/23
 973  8D4C              ;
 974  8D4C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 975  8D4C
 976  8D4C 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 977  8D4F 22 2F 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 978  8D52 C9           	ret
 979  8D53 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 980  8D56 22 31 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 981  8D59 C9           	ret
 982  8D5A
 983  8D5A              ; -------------------------------------------------------------------------------------------------------------
 984  8D5A              ;
 985  8D5A              ; 3/8/23
 986  8D5A              ;
 987  8D5A
 988  8D5A              Calcula_numero_de_malotes
 989  8D5A
 990  8D5A 21 00 70     	ld hl,Album_de_fotos
 991  8D5D EB           	ex de,hl
 992  8D5E 2A 12 8A     	ld hl,(End_Snapshot)
 993  8D61
 994  8D61 06 00        	ld b,0
 995  8D63 7D           	ld a,l
 996  8D64 93           	sub e
 997  8D65 28 07        	jr z,1F
 998  8D67
 999  8D67              ; Nº de malotes no es "0".
1000  8D67
1001  8D67 D6 06        2 sub 6
1002  8D69 04           	inc b
1003  8D6A A7           	and a
1004  8D6B 20 FA        	jr nz,2B
1005  8D6D 78           	ld a,b
1006  8D6E
1007  8D6E 32 05 8A     1 ld (Numero_de_malotes),a
1008  8D71 C9           	ret
1009  8D72
1010  8D72              ; -------------------------------------------------------------------------------------------------------------
1011  8D72              ;
1012  8D72              ; 28/2/23
1013  8D72              ;
1014  8D72
1015  8D72              Calcula_numero_de_disparotes
1016  8D72
1017  8D72 21 0D 72     	ld hl,Album_de_fotos_disparos
1018  8D75 EB           	ex de,hl
1019  8D76 2A 2C 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1020  8D79
1021  8D79 06 00        	ld b,0
1022  8D7B 7D           	ld a,l
1023  8D7C 93           	sub e
1024  8D7D 28 07        	jr z,1F
1025  8D7F
1026  8D7F              ; Nº de malotes no es "0".
1027  8D7F
1028  8D7F D6 06        2 sub 6
1029  8D81 04           	inc b
1030  8D82 A7           	and a
1031  8D83 20 FA        	jr nz,2B
1032  8D85 78           	ld a,b
1033  8D86
1034  8D86 32 2E 8A     1 ld (Numero_de_disparotes),a
1035  8D89 C9           	ret
1036  8D8A
1037  8D8A              ; *************************************************************************************************************************************************************
1038  8D8A              ;
1039  8D8A              ; 20/10/22
1040  8D8A              ;
1041  8D8A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1042  8D8A              ;
1043  8D8A              ; Destruye el puntero y DE !!!!!
1044  8D8A
1045  8D8A 5E           Extrae_address ld e,(hl)
1046  8D8B 23           	inc hl
1047  8D8C 56           	ld d,(hl)
1048  8D8D 2B           	dec hl
1049  8D8E EB           	ex de,hl
1050  8D8F C9           	ret
1051  8D90
1052  8D90              ; *************************************************************************************************************************************************************
1053  8D90              ;
1054  8D90              ;	7/2/23
1055  8D90              ;
1056  8D90              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1057  8D90              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1058  8D90              ;
1059  8D90              ;   Destruye HL y BC !!!!!,
1060  8D90              ;
1061  8D90              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1062  8D90              ;					"0" ..... Izquierda.
1063  8D90
1064  8D90              Inicia_Puntero_objeto
1065  8D90
1066  8D90 3A CA 89     	ld a,(Cuad_objeto)
1067  8D93 E6 01        	and 1
1068  8D95 F5           	push af
1069  8D96 CC B4 8D     	call z,Inicia_puntero_objeto_izq
1070  8D99 F1           	pop af
1071  8D9A 28 2B        	jr z,1F
1072  8D9C CD A1 8D     	call Inicia_puntero_objeto_der
1073  8D9F 18 26        	jr 1F
1074  8DA1
1075  8DA1              ; Arrancamos desde la parte izquierda de la pantalla.
1076  8DA1              ; Iniciamos (Indice_Sprite_der).
1077  8DA1
1078  8DA1 2A C0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1079  8DA4 22 C4 89     	ld (Puntero_DESPLZ_der),hl
1080  8DA7 CD 8A 8D     	call Extrae_address
1081  8DAA 22 BA 89     	ld (Puntero_objeto),hl
1082  8DAD
1083  8DAD 2A C2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1084  8DB0 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1085  8DB3 C9           	ret
1086  8DB4
1087  8DB4              ; Arrancamos desde la parte derecha de la pantalla.
1088  8DB4              ; Iniciamos (Indice_Sprite_izq).
1089  8DB4
1090  8DB4 2A C2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1091  8DB7 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1092  8DBA CD 8A 8D     	call Extrae_address
1093  8DBD 22 BA 89     	ld (Puntero_objeto),hl
1094  8DC0
1095  8DC0 2A C0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1096  8DC3 22 C4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1097  8DC6 C9           	ret
1098  8DC7
1099  8DC7              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1100  8DC7
1101  8DC7 21 40 83     1 ld hl,Amadeus
1102  8DCA ED 4B BA 89  	ld bc,(Puntero_objeto)
1103  8DCE B7 ED 42     	sub hl,bc
1104  8DD1 C0           	ret nz
1105  8DD2 21 E4 89     	ld hl,Ctrl_0
1106  8DD5 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1107  8DD7 C9           	ret 												; _de nuestra nave en los extremos.
1108  8DD8
1109  8DD8              ; *************************************************************************************************************************************************************
1110  8DD8              ;
1111  8DD8              ;	14/5/23
1112  8DD8              ;
1113  8DD8              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1114  8DD8              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1115  8DD8
1116  8DD8              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1117  8DD8              ;	_de la 2ª y 3ª entidad respectivamente.
1118  8DD8
1119  8DD8              Store_Restore_cajas
1120  8DD8
1121  8DD8 E5           	push hl
1122  8DD9 D5           	push de
1123  8DDA C5            	push bc
1124  8DDB
1125  8DDB              ;	STORE !!!!!
1126  8DDB              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1127  8DDB
1128  8DDB 21 B6 89     	ld hl,Filas
1129  8DDE ED 5B FC 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1130  8DE2 01 43 00     	ld bc,67
1131  8DE5 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1132  8DE7
1133  8DE7              ; 	Entidad_sospechosa. 20/4/23
1134  8DE7
1135  8DE7 3A CF 89     	ld a,(Impacto)
1136  8DEA A7           	and a
1137  8DEB 28 0C        	jr z,1F
1138  8DED
1139  8DED 2A FC 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1140  8DF0 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1141  8DF3 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1142  8DF4 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1143  8DF6 22 34 8A     	ld (Entidad_sospechosa_de_colision),hl
1144  8DF9
1145  8DF9              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1146  8DF9
1147  8DF9 2A FE 89     1 ld hl,(Puntero_restore_caja)
1148  8DFC 7E           	ld a,(hl)
1149  8DFD A7           	and a
1150  8DFE F5           	push af
1151  8DFF 28 08        	jr z,2F
1152  8E01
1153  8E01 11 B6 89     	ld de,Filas
1154  8E04 01 43 00     	ld bc,67
1155  8E07 ED B0        	ldir
1156  8E09
1157  8E09 CD 25 8E     2 call Incrementa_punteros_de_cajas
1158  8E0C F1           	pop af
1159  8E0D 28 EA        	jr z,1B
1160  8E0F
1161  8E0F C1           	pop bc
1162  8E10 D1           	pop de
1163  8E11 E1           	pop hl
1164  8E12
1165  8E12 C9           	ret
1166  8E13
1167  8E13              ; **************************************************************************************************
1168  8E13              ;
1169  8E13              ;	12/05/23
1170  8E13              ;
1171  8E13              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1172  8E13
1173  8E13 E5           Restore_entidad push hl
1174  8E14 D5           	push de
1175  8E15 C5            	push bc
1176  8E16
1177  8E16 2A FC 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1178  8E19 11 B6 89     	ld de,Filas
1179  8E1C 01 43 00     	ld bc,67
1180  8E1F ED B0        	ldir
1181  8E21
1182  8E21 C1           	pop bc
1183  8E22 D1           	pop de
1184  8E23 E1           	pop hl
1185  8E24 C9           	ret
1186  8E25
1187  8E25
1188  8E25              ; **************************************************************************************************
1189  8E25              ;
1190  8E25              ;	08/05/23
1191  8E25              ;
1192  8E25              ;	Incrementamos los dos punteros de entidades. (+1).
1193  8E25
1194  8E25 2A FE 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1195  8E28 22 FC 89     	ld (Puntero_store_caja),hl
1196  8E2B 2A 00 8A     	ld hl,(Indice_restore_caja)
1197  8E2E 23           	inc hl
1198  8E2F 23           	inc hl
1199  8E30 22 00 8A     	ld (Indice_restore_caja),hl
1200  8E33 CD 8A 8D         call Extrae_address
1201  8E36 22 FE 89         ld (Puntero_restore_caja),hl
1202  8E39 C9               ret
1203  8E3A
1204  8E3A              ; **************************************************************************************************
1205  8E3A              ;
1206  8E3A              ;	25/01/23
1207  8E3A              ;
1208  8E3A              ;	Restore_Amadeus
1209  8E3A              ;
1210  8E3A              ;	Cargamos en DRAW los parámetros de Amadeus.
1211  8E3A              ;
1212  8E3A
1213  8E3A E5           Restore_Amadeus	push hl
1214  8E3B D5           	push de
1215  8E3C C5            	push bc
1216  8E3D 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1217  8E40 11 B6 89     	ld de,Filas
1218  8E43 01 43 00     	ld bc,67
1219  8E46 ED B0        	ldir
1220  8E48 C1           	pop bc
1221  8E49 D1           	pop de
1222  8E4A E1           	pop hl
1223  8E4B C9           	ret
1224  8E4C
1225  8E4C              ; *************************************************************************************************************************************************************
1226  8E4C              ;
1227  8E4C              ;	29/04/23
1228  8E4C              ;
1229  8E4C              ;	Store_Amadeus
1230  8E4C              ;
1231  8E4C              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1232  8E4C              ;
1233  8E4C              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1234  8E4C              ;
1235  8E4C              ;	DESTRUYE: HL y BC y DE.
1236  8E4C
1237  8E4C 21 B6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1238  8E4F 01 43 00     	ld bc,67
1239  8E52 ED B0        	ldir
1240  8E54 C9           	ret
1241  8E55
1242  8E55              ; -----------------------------------------------------------
1243  8E55              ;
1244  8E55              ;	27/04/23
1245  8E55              ;
1246  8E55              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1247  8E55              ;
1248  8E55              ;	Destruye: HL,BC,DE,A
1249  8E55
1250  8E55 21 B6 89     Borra_datos_entidad ld hl,Filas
1251  8E58 01 42 00     	ld bc,66
1252  8E5B AF           	xor a
1253  8E5C 77           	ld (hl),a
1254  8E5D 11 B7 89     	ld de,Filas+1
1255  8E60 ED B0        	ldir
1256  8E62 C9           	ret
1257  8E63
1258  8E63              ; -----------------------------------------------------------
1259  8E63
1260  8E63              ; Teclado.
1261  8E63
1262  8E63 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1263  8E65 DB FE        	in a,($fe)
1264  8E67 E6 01        	and $01
1265  8E69 28 02        	jr z,1f
1266  8E6B 18 F6        	jr Pulsa_ENTER
1267  8E6D C9           1 ret
1268  8E6E
1269  8E6E              ; **************************************************************************************************
1270  8E6E              ;
1271  8E6E              ; Temporización.
1272  8E6E
1273  8E6E              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1274  8E6E              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1275  8E6E              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1276  8E6E              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1277  8E6E
1278  8E6E              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1279  8E6E              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1280  8E6E              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1281  8E6E
1282  8E6E              ; A partir de $4f61 no hace falta DELAY.
1283  8E6E
1284  8E6E              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1285  8E6E
1286  8E6E 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1287  8E71 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1288  8E72 78           	LD A,B
1289  8E73 A7           	AND A
1290  8E74 20 FB        	JR NZ,wait
1291  8E76 C9           	RET
1292  8E77
1293  8E77              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1294  8E77              ;
1295  8E77              ;	5/3/23
1296  8E77              ;
1297  8E77              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1298  8E77
1299  8E77              Movimiento_Amadeus
1300  8E77
1301  8E77              ; Disparo.
1302  8E77
1303  8E77 3A 46 8A     	ld a,(Disparo_Amadeus)
1304  8E7A A7           	and a
1305  8E7B 20 02        	jr nz,1F
1306  8E7D 18 15        	jr 2F
1307  8E7F
1308  8E7F 3E F7        1 ld a,$f7													; "5" para disparar.
1309  8E81 DB FE        	in a,($fe)
1310  8E83 E6 10        	and $10
1311  8E85
1312  8E85 F5           	push af
1313  8E86 CC 32 8F     	call z,Genera_disparo
1314  8E89 F1           	pop af
1315  8E8A 20 08        	jr nz,2F
1316  8E8C
1317  8E8C 3A 46 8A     	ld a,(Disparo_Amadeus)
1318  8E8F EE 01        	xor 1
1319  8E91 32 46 8A     	ld (Disparo_Amadeus),a
1320  8E94
1321  8E94 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1322  8E96 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1323  8E98 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1324  8E9A CC C4 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1325  8E9D 3E F7        	ld a,$f7
1326  8E9F DB FE        	in a,($fe)
1327  8EA1 E6 01        	and $01
1328  8EA3 C8           	ret z
1329  8EA4
1330  8EA4 3E F7        	ld a,$f7
1331  8EA6 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1332  8EA8 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1333  8EAA CC A6 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1334  8EAD C9           	ret
1335  8EAE
1336  8EAE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1337  8EAE              ;
1338  8EAE              ;	Rutina provisional para que los malotes cagen balas.
1339  8EAE
1340  8EAE              Detecta_disparo_entidad
1341  8EAE
1342  8EAE 3A 49 8A     	ld a,(Disparo_entidad)
1343  8EB1 A7           	and a
1344  8EB2 C8           	ret z
1345  8EB3
1346  8EB3              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1347  8EB3
1348  8EB3              ;	ld a,$7f				; Detecta SPACE.
1349  8EB3              ;	in a,($fe)
1350  8EB3              ;	and 1
1351  8EB3              ;	ret nz
1352  8EB3
1353  8EB3              ;	call Genera_disparo
1354  8EB3 C9           	ret
1355  8EB4
1356  8EB4              ; ----------------------------------------------------------------------
1357  8EB4              ;
1358  8EB4              ;	11/8/23
1359  8EB4
1360  8EB4              Frame
1361  8EB4
1362  8EB4              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1363  8EB4              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1364  8EB4
1365  8EB4              ; PINTAMOS.
1366  8EB4
1367  8EB4 F5           	push af
1368  8EB5 C5           	push bc
1369  8EB6 D5           	push de
1370  8EB7 E5           	push hl
1371  8EB8
1372  8EB8 3E 02            ld a,2
1373  8EBA D3 FE            out ($fe),a											; Rojo.
1374  8EBC
1375  8EBC              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1376  8EBC              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1377  8EBC
1378  8EBC              ;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
1379  8EBC
1380  8EBC 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
1381  8EBF 01 EC 84     	ld bc,Indice_album_de_fotos
1382  8EC2 A7           	and a
1383  8EC3 ED 42        	sbc hl,bc
1384  8EC5 28 61        	jr z,6F
1385  8EC7
1386  8EC7 CD 5A 8D     	call Calcula_numero_de_malotes
1387  8ECA
1388  8ECA              ;;! debuggg !!!
1389  8ECA 3A 42 8A     	ld a,(Contador_de_frames_2)
1390  8ECD FE 01        	cp 1
1391  8ECF 20 0C        	jr nz,4F
1392  8ED1 3A 41 8A     	ld a,(Contador_de_frames)
1393  8ED4 FE A5        	cp $a5 												; EL FRAME $a6 peta. Siempre existe petada
1394  8ED6 28 FE        	jr z,$
1395  8ED8 30 FE        	jr nc,$
1396  8EDA 2A 0E 8A     	ld hl,(Stack_snapshot)
1397  8EDD              ;;! debuggg !!!;
1398  8EDD
1399  8EDD CD 36 97     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1400  8EE0
1401  8EE0              ;	call Extrae_foto_disparos
1402  8EE0 3E 01            ld a,1
1403  8EE2 D3 FE            out ($fe),a											; Azul.
1404  8EE4
1405  8EE4              ; 	Gestiona albumes de fotos.
1406  8EE4
1407  8EE4              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1408  8EE4 CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1409  8EE7
1410  8EE7              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1411  8EE7
1412  8EE7 3A F9 89     	ld a,(Ctrl_1)
1413  8EEA CB 6F        	bit 5,a
1414  8EEC 20 24        	jr nz,1F
1415  8EEE
1416  8EEE              ; No hemos terminado de guardar el último FRAME.
1417  8EEE
1418  8EEE 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
1419  8EF1              ;	ld bc,Indice_album_de_fotos
1420  8EF1 2B           	dec hl
1421  8EF2 2B           	dec hl
1422  8EF3
1423  8EF3              ;	ld a,l
1424  8EF3              ;	sub c
1425  8EF3              ;	jr z,$
1426  8EF3
1427  8EF3 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
1428  8EF6
1429  8EF6 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
1430  8EF9 2B           	dec hl
1431  8EFA 2B           	dec hl
1432  8EFB 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
1433  8EFE CD 8A 8D     	call Extrae_address
1434  8F01 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
1435  8F04
1436  8F04 CD 8A 8D     	call Extrae_address
1437  8F07
1438  8F07              ; Esta vacío este album???
1439  8F07
1440  8F07 24           	inc h
1441  8F08 25           	dec h
1442  8F09 20 02        	jr nz,5F
1443  8F0B
1444  8F0B              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1445  8F0B
1446  8F0B 18 05        	jr 1F
1447  8F0D
1448  8F0D 22 0E 8A     5 ld (Stack_snapshot),hl
1449  8F10 18 09        	jr 2F
1450  8F12
1451  8F12              ; FRAME completo.
1452  8F12
1453  8F12 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1454  8F15 CD 8A 8D     	call Extrae_address
1455  8F18 22 0E 8A     	ld (Stack_snapshot),hl
1456  8F1B
1457  8F1B              ;	En este punto:
1458  8F1B
1459  8F1B              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1460  8F1B              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1461  8F1B
1462  8F1B              ; RELOJES.
1463  8F1B
1464  8F1B 21 41 8A     2 ld hl,Contador_de_frames
1465  8F1E 7E           	ld a,(hl)
1466  8F1F FE FF        	cp $ff
1467  8F21 20 04        	jr nz,3F
1468  8F23 34           	inc (hl)
1469  8F24
1470  8F24 21 42 8A     	ld hl,Contador_de_frames_2
1471  8F27 34           3 inc (hl)											; 0 - 255
1472  8F28
1473  8F28 21 F9 89     6 ld hl,Ctrl_1
1474  8F2B CB AE        	res 5,(hl)
1475  8F2D
1476  8F2D E1           	pop hl
1477  8F2E D1           	pop de
1478  8F2F C1           	pop bc
1479  8F30 F1           	pop af
1480  8F31
1481  8F31 C9           	ret
1482  8F32
1483  8F32              ; ---------------------------------------------------------------
1484  8F32
1485  8F32              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F32              ; ******************************************************************************************************************************************************************************************
   2+ 8F32              ;
   3+ 8F32              ;   21/07/23
   4+ 8F32              ;
   5+ 8F32              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F32              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F32              ;
   8+ 8F32              ;
   9+ 8F32              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F32              ;
  11+ 8F32              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F32              ;               _ hacen las entidades hacia abajo.
  13+ 8F32              ;
  14+ 8F32              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F32              ;
  16+ 8F32              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F32              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F32              ;
  19+ 8F32              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F32              ;           _ la bala.
  21+ 8F32              ;
  22+ 8F32              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F32              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F32              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F32              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F32              ;           _ en el momento de generarse la bala)).
  27+ 8F32
  28+ 8F32              Genera_disparo
  29+ 8F32
  30+ 8F32              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F32              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F32              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F32              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F32              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F32              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F32              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F32
  38+ 8F32              ; Exclusiones:
  39+ 8F32
  40+ 8F32 3A CE 89         ld a,(Vel_down)
  41+ 8F35 47               ld b,a
  42+ 8F36 3A 40 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F39 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F3A D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F3B 3A F3 89         ld a,(Columnas)
  46+ 8F3E 47               ld b,a
  47+ 8F3F 3A B7 89         ld a,(Columns)
  48+ 8F42 B8               cp b
  49+ 8F43 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F44
  51+ 8F44              ; ----- ----- -----
  52+ 8F44
  53+ 8F44 3A E4 89         ld a,(Ctrl_0)
  54+ 8F47 CB 77            bit 6,a
  55+ 8F49 20 06            jr nz,14F
  56+ 8F4B
  57+ 8F4B 3A BD 89         ld a,(Coordenada_y)
  58+ 8F4E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F50 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F51
  61+ 8F51 21 00 80     14 ld hl,Indice_disparo
  62+ 8F54 3A BE 89         ld a,(CTRL_DESPLZ)
  63+ 8F57 4F               ld c,a
  64+ 8F58 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F5A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F5A              ;                                            ""        ""       "f9", B="1"
  67+ 8F5A              ;                                            ""        ""       "fb", B="2"
  68+ 8F5A              ;                                            ""        ""       "fb", B="3"
  69+ 8F5A A7               and a
  70+ 8F5B 28 10            jr z,1F
  71+ 8F5D E6 01            and 1
  72+ 8F5F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F60
  74+ 8F60 79               ld a,c
  75+ 8F61 16 F9            ld d,$f9
  76+ 8F63 23           2 inc hl
  77+ 8F64 23               inc hl
  78+ 8F65 04               inc b
  79+ 8F66 BA               cp d
  80+ 8F67 28 04            jr z,1F
  81+ 8F69 14               inc d
  82+ 8F6A 14               inc d
  83+ 8F6B 18 F6            jr 2B
  84+ 8F6D
  85+ 8F6D CD 8A 8D     1 call Extrae_address
  86+ 8F70 E5               push hl
  87+ 8F71 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F73 DD 21 BF 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F77
  90+ 8F77              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F77              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F77
  93+ 8F77 3A E4 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F7A CB 77            bit 6,a
  95+ 8F7C 20 04            jr nz,19F
  96+ 8F7E
  97+ 8F7E AF               xor a
  98+ 8F7F 32 49 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F82
 100+ 8F82 3A CA 89     19 ld a,(Cuad_objeto)
 101+ 8F85 FE 02            cp 2
 102+ 8F87 38 66            jr c,3F
 103+ 8F89 28 64            jr z,3F
 104+ 8F8B
 105+ 8F8B              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F8B
 107+ 8F8B E6 01            and 1
 108+ 8F8D 28 30            jr z,4F
 109+ 8F8F
 110+ 8F8F              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F8F              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F8F              ;
 113+ 8F8F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F8F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F8F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F8F
 117+ 8F8F 2A B8 89     	ld hl,(Posicion_actual)
 118+ 8F92
 119+ 8F92              ;   Amadeus o entidad ???.
 120+ 8F92
 121+ 8F92 3A E4 89         ld a,(Ctrl_0)
 122+ 8F95 CB 77            bit 6,a
 123+ 8F97 28 0A            jr z,8F
 124+ 8F99
 125+ 8F99              ; 	Dispara Amadeus.
 126+ 8F99
 127+ 8F99 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F9B CD 27 97         call PreviousScan
 129+ 8F9E CD 27 97         call PreviousScan
 130+ 8FA1
 131+ 8FA1              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8FA1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8FA1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8FA1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8FA1
 136+ 8FA1 18 11            jr 10F
 137+ 8FA3
 138+ 8FA3              ; 	Dispara Entidad.
 139+ 8FA3
 140+ 8FA3 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8FA6              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8FA6
 143+ 8FA6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8FA6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8FA6
 146+ 8FA6 C5               push bc
 147+ 8FA7 06 10            ld b,16
 148+ 8FA9 CD 18 97     9 call NextScan
 149+ 8FAC 10 FB            djnz 9B
 150+ 8FAE C1               pop bc
 151+ 8FAF CD 19 90         call Ajusta_disparo_parte_izquierda
 152+ 8FB2 18 06            jr 17F
 153+ 8FB4
 154+ 8FB4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8FB4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8FB4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8FB4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8FB4
 159+ 8FB4 CD 19 90     10 call Ajusta_disparo_parte_izquierda
 160+ 8FB7 CD 8E 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8FBA              ;                                                      ; _al generar el disparo.
 162+ 8FBA
 163+ 8FBA              ; 	LLegados a este punto tendremos:
 164+ 8FBA              ;
 165+ 8FBA              ;       Puntero_objeto_disparo en IY.
 166+ 8FBA              ;       Rutinas_de_impresion en IX.
 167+ 8FBA              ;       Puntero_de_impresion en HL.
 168+ 8FBA              ;       Impacto/Dirección en BC.
 169+ 8FBA
 170+ 8FBA CD 21 90     17 call Almacena_disparo
 171+ 8FBD 18 52            jr 6F                                             ; RET.
 172+ 8FBF
 173+ 8FBF              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FBF              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FBF              ;
 176+ 8FBF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FBF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FBF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FBF
 180+ 8FBF 2A B8 89     4 ld hl,(Posicion_actual)
 181+ 8FC2
 182+ 8FC2              ;   Amadeus o entidad ???.
 183+ 8FC2
 184+ 8FC2 3A E4 89         ld a,(Ctrl_0)
 185+ 8FC5 CB 77            bit 6,a
 186+ 8FC7 28 0A            jr z,11F
 187+ 8FC9
 188+ 8FC9              ; 	Dispara Amadeus.
 189+ 8FC9
 190+ 8FC9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FCB CD 27 97         call PreviousScan
 192+ 8FCE CD 27 97         call PreviousScan
 193+ 8FD1
 194+ 8FD1              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FD1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FD1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FD1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FD1
 199+ 8FD1 18 11            jr 13F
 200+ 8FD3
 201+ 8FD3              ; 	Dispara Entidad.
 202+ 8FD3
 203+ 8FD3 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FD6              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FD6
 206+ 8FD6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FD6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FD6
 209+ 8FD6 C5               push bc
 210+ 8FD7 06 10            ld b,16
 211+ 8FD9 CD 18 97     12 call NextScan
 212+ 8FDC 10 FB            djnz 12B
 213+ 8FDE C1               pop bc
 214+ 8FDF
 215+ 8FDF CD 12 90         call Ajusta_disparo_parte_derecha
 216+ 8FE2 18 06            jr 18F
 217+ 8FE4
 218+ 8FE4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FE4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FE4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FE4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FE4
 223+ 8FE4 CD 12 90     13 call Ajusta_disparo_parte_derecha
 224+ 8FE7 CD 8E 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FEA              ;                                                       ; _al generar el disparo.
 226+ 8FEA
 227+ 8FEA              ; LLegados a este punto tendremos:
 228+ 8FEA              ;
 229+ 8FEA              ;       Puntero_objeto_disparo en IY.
 230+ 8FEA              ;       Rutinas_de_impresion en IX.
 231+ 8FEA              ;       Puntero_de_impresion en HL.
 232+ 8FEA              ;       Impacto/Dirección en BC.
 233+ 8FEA
 234+ 8FEA CD 21 90     18 call Almacena_disparo
 235+ 8FED 18 22            jr 6F                                               ; RET.
 236+ 8FEF
 237+ 8FEF              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FEF
 239+ 8FEF 28 11        3 jr z,5F
 240+ 8FF1
 241+ 8FF1              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FF1              ;
 243+ 8FF1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FF1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FF1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FF1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FF1
 248+ 8FF1              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FF1              ;	   ""        ""       "f9", B="1"
 250+ 8FF1              ;	   ""        ""       "fb", B="2"
 251+ 8FF1              ; 	   ""        ""       "fb", B="3"
 252+ 8FF1
 253+ 8FF1 2A B8 89     	ld hl,(Posicion_actual)
 254+ 8FF4 CD 18 97     	call NextScan
 255+ 8FF7
 256+ 8FF7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FF7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FF7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FF7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FF7
 261+ 8FF7 CD 19 90         call Ajusta_disparo_parte_izquierda
 262+ 8FFA
 263+ 8FFA              ; 	No se produce impacto. B="$80"
 264+ 8FFA              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FFA
 266+ 8FFA 01 80 80         ld bc,$8080
 267+ 8FFD
 268+ 8FFD              ; 	LLegados a este punto tendremos:
 269+ 8FFD              ;
 270+ 8FFD              ;       Puntero_objeto_disparo en IY.
 271+ 8FFD              ;       Rutinas_de_impresion en IX.
 272+ 8FFD              ;       Puntero_de_impresion en HL.
 273+ 8FFD              ;       Impacto/Dirección en BC.
 274+ 8FFD
 275+ 8FFD CD 21 90         call Almacena_disparo
 276+ 9000 18 0F            jr 6F                                           ; RET.
 277+ 9002
 278+ 9002              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9002              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9002              ;
 281+ 9002              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9002              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9002              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9002              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9002
 286+ 9002 2A B8 89     5 ld hl,(Posicion_actual)
 287+ 9005 CD 18 97     	call NextScan
 288+ 9008
 289+ 9008              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9008              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9008              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9008              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9008
 294+ 9008 CD 12 90         call Ajusta_disparo_parte_derecha
 295+ 900B
 296+ 900B              ; 	No se produce impacto. B="$80"
 297+ 900B              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 900B
 299+ 900B 01 80 80     15 ld bc,$8080
 300+ 900E
 301+ 900E              ; 	LLegados a este punto tendremos:
 302+ 900E              ;
 303+ 900E              ;       Puntero_objeto_disparo en IY.
 304+ 900E              ;       Rutinas_de_impresion en IX.
 305+ 900E              ;       Puntero_de_impresion en HL.
 306+ 900E              ;       Impacto/Dirección en BC.
 307+ 900E
 308+ 900E CD 21 90         call Almacena_disparo
 309+ 9011
 310+ 9011 C9           6 ret
 311+ 9012
 312+ 9012              ; ----------------------------------------------------------------
 313+ 9012              ;
 314+ 9012              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9012              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9012              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9012
 318+ 9012 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9013 FE 02            cp 2
 320+ 9015 38 01            jr c,1F
 321+ 9017 23               inc hl
 322+ 9018 C9           1 ret
 323+ 9019
 324+ 9019 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 901A FE 01        	cp 1
 326+ 901C 20 01        	jr nz,1F
 327+ 901E 2B           	dec hl
 328+ 901F 2B           1 dec hl
 329+ 9020 C9               ret
 330+ 9021
 331+ 9021              ; ----------------------------------------------------------------
 332+ 9021              ;
 333+ 9021              ;   25/02/23
 334+ 9021              ;
 335+ 9021              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9021              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9021              ;
 338+ 9021              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9021              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9021
 341+ 9021              Almacena_disparo
 342+ 9021
 343+ 9021 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9022 F1               pop af
 345+ 9023 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9024
 347+ 9024 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9025 E6 01            and 1
 349+ 9027 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9029              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9029              ; 	Dispara AMADEUS.
 352+ 9029
 353+ 9029              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9029              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9029              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9029              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9029
 358+ 9029 C5               push bc
 359+ 902A 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 902D 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9030 A7               and a
 362+ 9031 ED 42            sbc hl,bc
 363+ 9033 CC 53 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9036 C1               pop bc
 365+ 9037 28 54            jr z,4F
 366+ 9039
 367+ 9039 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 903C 23               inc hl
 369+ 903D 23               inc hl
 370+ 903E 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9041              ;                                                   ; _ Disparo_(+1).
 372+ 9041 18 18            jr 2F
 373+ 9043
 374+ 9043              ; Dispara una entidad.
 375+ 9043
 376+ 9043 C5           1 push bc
 377+ 9044 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9047 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 904A A7               and a
 380+ 904B ED 42            sbc hl,bc
 381+ 904D CC 4C 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9050 C1               pop bc
 383+ 9051 28 3A            jr z,4F
 384+ 9053
 385+ 9053 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9056 23               inc hl
 387+ 9057 23               inc hl
 388+ 9058 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 905B              ;                                                   ; _ Disparo_(+1).
 390+ 905B CD 8A 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 905E              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 905E              ;
 393+ 905E              ;                                                     Puntero_objeto_disparo en IY.
 394+ 905E              ;                                                     Rutinas_de_impresion en IX.
 395+ 905E              ;                                                     Puntero_de_impresion en HL.
 396+ 905E              ;                                                     Impacto/Dirección en BC.
 397+ 905E
 398+ 905E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 905F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9060 23               inc hl                                          ; _ al siguiente.
 401+ 9061 A7               and a
 402+ 9062 20 C0            jr nz,3B
 403+ 9064
 404+ 9064 08               ex af,af
 405+ 9065 ED 73 0A 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9069 F9               ld sp,hl
 407+ 906A
 408+ 906A DD E5            push ix                                         ; Rutina de impresión.
 409+ 906C F5               push af                                         ; Puntero de impresión.
 410+ 906D FD E5            push iy                                         ; Puntero objeto.
 411+ 906F C5               push bc                                         ; Control.
 412+ 9070
 413+ 9070 ED 7B 0A 8A      ld sp,(Stack)
 414+ 9074
 415+ 9074              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9074
 417+ 9074 21 F9 89     	ld hl,Ctrl_1
 418+ 9077 CB C6        	set 0,(hl)
 419+ 9079
 420+ 9079 DD E5        	push ix
 421+ 907B E1               pop hl
 422+ 907C F5               push af
 423+ 907D DD E1            pop ix
 424+ 907F
 425+ 907F CD A0 7F     	call Guarda_foto_registros
 426+ 9082
 427+ 9082 21 F9 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9085 CB 86        	res 0,(hl)
 429+ 9087
 430+ 9087              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9087              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9087
 433+ 9087 CD 53 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 908A CD 4C 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 908D
 436+ 908D C9           4 ret
 437+ 908E
 438+ 908E              ; ----------------------------------------------------------------
 439+ 908E              ;
 440+ 908E              ;   4/3/23
 441+ 908E              ;
 442+ 908E              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 908E              ;   _ al generarse el disparo.
 444+ 908E              ;
 445+ 908E              ;       "$80" ..... No se produce colisión.
 446+ 908E              ;       "$81" ..... Se produce colisión.
 447+ 908E              ;
 448+ 908E              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 908E              ;         _ que forman el disparo.
 450+ 908E
 451+ 908E
 452+ 908E              Comprueba_Colision
 453+ 908E
 454+ 908E              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 908E
 456+ 908E FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9090 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9091
 459+ 9091 CD C7 90         call Modifica_H_Velocidad_disparo
 460+ 9094
 461+ 9094 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9095 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9097 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9099
 465+ 9099 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 909B CD B7 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 909E
 468+ 909E 7B               ld a,e
 469+ 909F E6 01            and 1
 470+ 90A1 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 90A3              ;                                                  ; _ para activar IMPACTO.
 472+ 90A3 E1               pop hl
 473+ 90A4 E5               push hl
 474+ 90A5 CD 18 97         call NextScan
 475+ 90A8
 476+ 90A8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 90A9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 90AB 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 90AD              ;                                                  ; _ 2º scanline si esto es así.
 480+ 90AD 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 90AF CD B7 90         call Bucle_2
 482+ 90B2
 483+ 90B2 43           1 ld b,e
 484+ 90B3 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 90B4 FD E1            pop iy
 486+ 90B6 C9               ret
 487+ 90B7
 488+ 90B7              ; ---------- ----------
 489+ 90B7
 490+ 90B7 06 02        Bucle_2 ld b,2
 491+ 90B9 FD 7E 00     2 ld a,(iy)
 492+ 90BC A6               and (hl)
 493+ 90BD 28 02            jr z,1F
 494+ 90BF 1E 81            ld e,$81
 495+ 90C1 23           1 inc hl
 496+ 90C2 FD 23            inc iy
 497+ 90C4 10 F3            djnz 2B
 498+ 90C6 C9               ret
 499+ 90C7
 500+ 90C7              ; ---------- ----------
 501+ 90C7              ;
 502+ 90C7              ;   21/7/23
 503+ 90C7
 504+ 90C7              Modifica_H_Velocidad_disparo
 505+ 90C7
 506+ 90C7 3A 40 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90CA FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90CC D0               ret nc                                         ; _ incrementamos H.
 509+ 90CD 24               inc h
 510+ 90CE
 511+ 90CE C9               ret
 512+ 90CF
 513+ 90CF              ; -------------------------------------------------------------------------------------------------------------
 514+ 90CF              ;
 515+ 90CF              ;   11/04/23
 516+ 90CF              ;
 517+ 90CF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90CF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90CF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90CF              ;
 521+ 90CF              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90CF
 523+ 90CF              Compara_coordenadas_X
 524+ 90CF
 525+ 90CF              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90CF              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90CF
 528+ 90CF              ; Preparamos registros:
 529+ 90CF
 530+ 90CF 21 BC 89         ld hl,Filas+6
 531+ 90D2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90D3 23               inc hl
 533+ 90D4 23               inc hl
 534+ 90D5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90D6 43               ld b,e
 536+ 90D7
 537+ 90D7 21 CA 89         ld hl,Filas+20
 538+ 90DA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90DB 21 3B 8A         ld hl,Coordenadas_X_Entidad
 540+ 90DE CD FA 92         call Guarda_coordenadas_X
 541+ 90E1
 542+ 90E1              ; Preparamos registros:
 543+ 90E1
 544+ 90E1 21 AA 85         ld hl,Amadeus_db+6
 545+ 90E4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90E5 23               inc hl
 547+ 90E6 23               inc hl
 548+ 90E7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90E8 7B               ld a,e
 550+ 90E9 08               ex af,af'
 551+ 90EA 21 B8 85         ld hl,Amadeus_db+20
 552+ 90ED 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90EE 21 38 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90F1 CD FA 92         call Guarda_coordenadas_X
 555+ 90F4
 556+ 90F4              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90F4              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90F4
 559+ 90F4 04               inc b
 560+ 90F5 05               dec b
 561+ 90F6 28 04            jr z,1F
 562+ 90F8 06 03            ld b,3
 563+ 90FA 18 02            jr 2F
 564+ 90FC 06 02        1 ld b,2
 565+ 90FE 08           2 ex af,af'
 566+ 90FF 3C               inc a
 567+ 9100 3D               dec a
 568+ 9101 28 04            jr z,5F
 569+ 9103 0E 03            ld c,3
 570+ 9105 18 02            jr 6F
 571+ 9107 0E 02        5 ld c,2
 572+ 9109 79           6 ld a,c
 573+ 910A 08               ex af,af'
 574+ 910B 11 3B 8A         ld de,Coordenadas_X_Entidad
 575+ 910E 1A           4 ld a,(de)
 576+ 910F 21 38 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9112 BE           3 cp (hl)
 578+ 9113 28 0E            jr z,7F
 579+ 9115 23               inc hl
 580+ 9116 0D               dec c
 581+ 9117 20 F9            jr nz,3B
 582+ 9119 13               inc de
 583+ 911A 08               ex af,af'
 584+ 911B 4F               ld c,a
 585+ 911C 08               ex af,af'
 586+ 911D 10 EF            djnz 4B
 587+ 911F
 588+ 911F              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 911F
 590+ 911F CD 36 93     8 call Limpia_Coordenadas_X
 591+ 9122 C9               ret
 592+ 9123
 593+ 9123 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9125 32 CF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9128 21 33 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 912B CB D6            set 2,(hl)
 597+ 912D 18 F0            jr 8B
 598+ 912F
 599+ 912F              ; -----------------------------------------------------------------------
 600+ 912F              ;
 601+ 912F              ;   17/04/23
 602+ 912F              ;
 603+ 912F
 604+ 912F              Detecta_colision_nave_entidad
 605+ 912F
 606+ 912F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 912F
 608+ 912F 2A B8 89         ld hl,(Posicion_actual)
 609+ 9132 CD 73 96         call Calcula_puntero_de_impresion
 610+ 9135
 611+ 9135              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9135              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9135
 614+ 9135 DD E5            push ix
 615+ 9137 E1               pop hl
 616+ 9138 E5               push hl
 617+ 9139
 618+ 9139              ; ----- ----- -----
 619+ 9139 1E 00            ld e,0                                         ; Indica impacto.
 620+ 913B 06 0A            ld b,10
 621+ 913D CD 6D 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9140 7B               ld a,e
 623+ 9141 FE 05            cp 5
 624+ 9143 38 0E            jr c,3F
 625+ 9145
 626+ 9145              ; LLegados a este punto:
 627+ 9145              ;
 628+ 9145              ;   HAY COLISIÓN !!!!!.
 629+ 9145              ;
 630+ 9145              ;   .db (Impacto) de Amadeus a "1".
 631+ 9145              ;   SET el bit3 de (Impacto2).
 632+ 9145              ;
 633+ 9145              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9145
 635+ 9145 21 BD 85         ld hl,Amadeus_db+25
 636+ 9148 36 01            ld (hl),1
 637+ 914A 21 33 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 914D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 914F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9151 18 18            jr 1F
 641+ 9153
 642+ 9153              ; -----
 643+ 9153
 644+ 9153 E1           3 pop hl
 645+ 9154 CD 18 97         call NextScan
 646+ 9157 E5               push hl
 647+ 9158 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9159 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 915B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 915D 30 0C            jr nc,1F
 651+ 915F              ;                                                  ; _ 2º scanline si esto es así.
 652+ 915F 10 DC            djnz 2B
 653+ 9161
 654+ 9161              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9161
 656+ 9161              ; LLegados a este punto:
 657+ 9161              ;
 658+ 9161              ;   NO HAY COLISIÓN !!!!!.
 659+ 9161              ;
 660+ 9161              ;   .db (Impacto) de Amadeus a "0".
 661+ 9161              ;   RES el bit2 de (Impacto2).
 662+ 9161              ;
 663+ 9161              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9161              ;   Lo colocamos a "0".
 665+ 9161
 666+ 9161 21 33 8A         ld hl,Impacto2
 667+ 9164 CB 96            res 2,(hl)
 668+ 9166 2A 34 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9169 36 00            ld (hl),0
 670+ 916B
 671+ 916B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 916C C9               ret
 673+ 916D
 674+ 916D               ; ---------- ----------
 675+ 916D
 676+ 916D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 916E 3A B7 89         ld a,(Columns)
 678+ 9171 47               ld b,a
 679+ 9172 FD 7E 00     2 ld a,(iy)
 680+ 9175 BE               cp (hl)
 681+ 9176 28 01            jr z,1F
 682+ 9178
 683+ 9178 1C               inc e
 684+ 9179
 685+ 9179 23           1 inc hl
 686+ 917A FD 23            inc iy
 687+ 917C 10 F4            djnz 2B
 688+ 917E C1               pop bc
 689+ 917F C9               ret
 690+ 9180
 691+ 9180              ; -------------------------------------------------------------------------------------------------------------
 692+ 9180              ;
 693+ 9180              ;   13/03/23
 694+ 9180              ;
 695+ 9180              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9180              ;
 697+ 9180              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9180
 699+ 9180 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9183 7E               ld a,(hl)
 701+ 9184 A7               and a
 702+ 9185 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9186
 704+ 9186 44               ld b,h
 705+ 9187 4D               ld c,l
 706+ 9188 2A 10 8A         ld hl,(Stack_snapshot_disparos)
 707+ 918B E5               push hl
 708+ 918C A7               and a
 709+ 918D ED 42            sbc hl,bc
 710+ 918F E5               push hl
 711+ 9190 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9191
 713+ 9191 E1               pop hl
 714+ 9192 54               ld d,h
 715+ 9193 5D               ld e,l
 716+ 9194 1B               dec de
 717+ 9195 ED B8            lddr                                                ; Limpiamos.
 718+ 9197
 719+ 9197 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 919A 22 10 8A         ld (Stack_snapshot_disparos),hl
 721+ 919D
 722+ 919D C9               ret
 723+ 919E
 724+ 919E              ; -------------------------------------------------------------------------------------------------------------
 725+ 919E              ;
 726+ 919E              ;   18/07/23
 727+ 919E              ;
 728+ 919E
 729+ 919E              Motor_de_disparos
 730+ 919E
 731+ 919E              ; Gestiona DISPAROS DE AMADEUS.
 732+ 919E
 733+ 919E 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 91A1 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 91A4
 736+ 91A4 CD 8A 8D     2 call Extrae_address
 737+ 91A7 7E               ld a,(hl)
 738+ 91A8 A7               and a
 739+ 91A9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 91AB
 741+ 91AB              ; ----- ----- ----- ----- ----- -----
 742+ 91AB
 743+ 91AB C5               push bc
 744+ 91AC CD 70 92         call foto_disparo_a_borrar
 745+ 91AF
 746+ 91AF              ; Existe colisión con este disparo???
 747+ 91AF
 748+ 91AF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 91B0 7E               ld a,(hl)
 750+ 91B1 2B               dec hl
 751+ 91B2 E6 01            and 1
 752+ 91B4 28 1D            jr z,9F
 753+ 91B6
 754+ 91B6              ;   En este punto:
 755+ 91B6              ;
 756+ 91B6              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 91B6              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 91B6              ;   _con la entidad).
 759+ 91B6              ;
 760+ 91B6              ;   Disparo_2A defw 0                                ; Control.
 761+ 91B6              ;    defw 0                                          ; Puntero objeto.
 762+ 91B6              ;    defw 0                                          ; Puntero de impresión.
 763+ 91B6              ;    defw 0                                          ; Rutina de impresión.
 764+ 91B6
 765+ 91B6 E5               push hl
 766+ 91B7
 767+ 91B7 06 04            ld b,4
 768+ 91B9 23           19 inc hl
 769+ 91BA 10 FD            djnz 19B
 770+ 91BC
 771+ 91BC CD 8A 8D         call Extrae_address
 772+ 91BF CD A2 9D         call Genera_coordenadas_disparo
 773+ 91C2
 774+ 91C2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91C2
 776+ 91C2 21 36 8A         ld hl,Coordenadas_disparo_certero
 777+ 91C5 72               ld (hl),d
 778+ 91C6 23               inc hl
 779+ 91C7 73               ld (hl),e
 780+ 91C8
 781+ 91C8              ; Elimino el disparo de la base de datos.
 782+ 91C8
 783+ 91C8 E1               pop hl
 784+ 91C9 CD EF 92         call Elimina_disparo_de_base_de_datos
 785+ 91CC 21 33 8A         ld hl,Impacto2
 786+ 91CF CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91D1
 788+ 91D1 18 06            jr 11F
 789+ 91D3
 790+ 91D3 CD 99 92     9 call Mueve_disparo
 791+ 91D6 CD 70 92         call foto_disparo_a_borrar
 792+ 91D9
 793+ 91D9 C1           11 pop bc
 794+ 91DA 18 04            jr 7F
 795+ 91DC
 796+ 91DC              ; ----- ----- ----- ----- ----- -----
 797+ 91DC
 798+ 91DC ED 42        1 sbc hl,bc
 799+ 91DE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91E0
 801+ 91E0 2A 31 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91E3 23               inc hl
 803+ 91E4 23               inc hl
 804+ 91E5 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91E8 18 BA            jr 2B
 806+ 91EA
 807+ 91EA CD 53 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91ED              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91ED
 810+ 91ED              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91ED
 812+ 91ED 01 8A 85         ld bc,Disparo_11
 813+ 91F0 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91F3
 815+ 91F3 CD 8A 8D     5 call Extrae_address
 816+ 91F6 7E               ld a,(hl)
 817+ 91F7 A7               and a
 818+ 91F8 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91FA
 820+ 91FA              ; ----- ----- ----- ----- ----- -----
 821+ 91FA
 822+ 91FA C5               push bc
 823+ 91FB CD 70 92         call foto_disparo_a_borrar
 824+ 91FE
 825+ 91FE              ; Existe colisión con este disparo???
 826+ 91FE
 827+ 91FE 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91FF 7E               ld a,(hl)
 829+ 9200 2B               dec hl
 830+ 9201 E6 01            and 1
 831+ 9203 28 4D            jr z,10F
 832+ 9205
 833+ 9205              ;! La colisión se produce con Amadeus???
 834+ 9205              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9205
 836+ 9205 E5               push hl
 837+ 9206
 838+ 9206 06 04            ld b,4
 839+ 9208 23           16 inc hl
 840+ 9209 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 920B
 842+ 920B CD 8A 8D         call Extrae_address
 843+ 920E CD A2 9D         call Genera_coordenadas_disparo
 844+ 9211
 845+ 9211 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9212 FE 16            cp $16
 847+ 9214 38 2A            jr c,15F
 848+ 9216
 849+ 9216
 850+ 9216              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9216
 852+ 9216 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9217
 854+ 9217              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9217
 856+ 9217
 857+ 9217 2A 3E 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 921A
 859+ 921A              ; Coordenada X de Amadeus en D.
 860+ 921A
 861+ 921A 7D               ld a,l
 862+ 921B E6 1F            and $1F
 863+ 921D 57               ld d,a
 864+ 921E
 865+ 921E 21 AC 85         ld hl,Amadeus_db+8
 866+ 9221 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9222
 868+ 9222 21 38 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9225 CD FA 92         call Guarda_coordenadas_X
 870+ 9228
 871+ 9228 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9229
 873+ 9229              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9229
 875+ 9229 06 02            ld b,2
 876+ 922B C5           20 push bc
 877+ 922C
 878+ 922C 06 03            ld b,3
 879+ 922E 21 38 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9231 7E           18 ld a,(hl)
 881+ 9232 BA               cp d
 882+ 9233 20 04            jr nz,17F
 883+ 9235
 884+ 9235              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9235
 886+ 9235 C1               pop bc
 887+ 9236 E1               pop hl
 888+ 9237 18 0D            jr 14F
 889+ 9239
 890+ 9239 23           17 inc hl
 891+ 923A 10 F5            djnz 18B
 892+ 923C
 893+ 923C 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 923D
 895+ 923D C1               pop bc
 896+ 923E 10 EB            djnz 20B
 897+ 9240
 898+ 9240
 899+ 9240              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9240              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9240
 902+ 9240 E1           15 pop hl
 903+ 9241 23               inc hl
 904+ 9242 35               dec (hl)
 905+ 9243 2B               dec hl
 906+ 9244 18 0C            jr 10F
 907+ 9246
 908+ 9246              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9246              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9246
 911+ 9246 E5           14 push hl
 912+ 9247 CD EF 92         call Elimina_disparo_de_base_de_datos
 913+ 924A 21 33 8A         ld hl,Impacto2
 914+ 924D CB CE            set 1,(hl)
 915+ 924F E1               pop hl
 916+ 9250 18 06            jr 12F
 917+ 9252
 918+ 9252              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9252
 920+ 9252 CD 99 92     10 call Mueve_disparo
 921+ 9255 CD 70 92         call foto_disparo_a_borrar
 922+ 9258 C1           12 pop bc
 923+ 9259
 924+ 9259 18 04            jr 8F
 925+ 925B
 926+ 925B              ; ----- ----- ----- ----- ----- -----
 927+ 925B
 928+ 925B ED 42        4 sbc hl,bc
 929+ 925D 28 0A            jr z,6F
 930+ 925F
 931+ 925F 2A 2F 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9262 23               inc hl
 933+ 9263 23               inc hl
 934+ 9264 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9267 18 8A            jr 5B
 936+ 9269
 937+ 9269 CD 4C 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 926C CD 36 93         call Limpia_Coordenadas_X
 939+ 926F C9               ret
 940+ 9270
 941+ 9270              ; ------------------------------------------------------------------
 942+ 9270
 943+ 9270              foto_disparo_a_borrar
 944+ 9270
 945+ 9270 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9271 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9272 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9273
 949+ 9273 E5               push hl
 950+ 9274 23               inc hl
 951+ 9275 23               inc hl
 952+ 9276 ED 73 0A 8A      ld (Stack),sp
 953+ 927A F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 927B FD E1            pop iy
 955+ 927D DD E1            pop ix
 956+ 927F E1               pop hl
 957+ 9280 ED 7B 0A 8A      ld sp,(Stack)
 958+ 9284 3A F9 89         ld a,(Ctrl_1)
 959+ 9287 CB C7            set 0,a
 960+ 9289 32 F9 89         ld (Ctrl_1),a
 961+ 928C CD A0 7F         call Guarda_foto_registros
 962+ 928F 3A F9 89         ld a,(Ctrl_1)
 963+ 9292 CB 87            res 0,a
 964+ 9294 32 F9 89         ld (Ctrl_1),a
 965+ 9297 E1               pop hl
 966+ 9298 C9               ret
 967+ 9299
 968+ 9299              ;---------------------------------------------------
 969+ 9299              ;
 970+ 9299              ;   18/07/23
 971+ 9299              ;
 972+ 9299
 973+ 9299              Mueve_disparo
 974+ 9299
 975+ 9299              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9299              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9299              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9299
 979+ 9299 E5               push hl
 980+ 929A
 981+ 929A 7E               ld a,(hl)
 982+ 929B
 983+ 929B 06 04            ld b,4
 984+ 929D 23           1 inc hl
 985+ 929E 10 FD            djnz 1B
 986+ 92A0
 987+ 92A0              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 92A0
 989+ 92A0 CD 8A 8D         call Extrae_address
 990+ 92A3
 991+ 92A3 E6 01            and 1
 992+ 92A5 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 92A7
 994+ 92A7              ; Disparo hacia arriba, (Amadeus).
 995+ 92A7
 996+ 92A7              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 92A7              ; _ de la dificultad.
 998+ 92A7
 999+ 92A7 CD 27 97         call PreviousScan
1000+ 92AA CD 27 97         call PreviousScan
1001+ 92AD CD 27 97         call PreviousScan
1002+ 92B0 CD 27 97         call PreviousScan
1003+ 92B3
1004+ 92B3              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 92B3
1006+ 92B3 7C               ld a,h
1007+ 92B4 FE 40            cp $40
1008+ 92B6 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 92B8
1010+ 92B8              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 92B8
1012+ 92B8 EB               ex de,hl
1013+ 92B9 06 04            ld b,4
1014+ 92BB 2B           6 dec hl
1015+ 92BC 10 FD            djnz 6B
1016+ 92BE
1017+ 92BE CD EF 92         call Elimina_disparo_de_base_de_datos
1018+ 92C1 E1               pop hl
1019+ 92C2 18 10            jr 7F
1020+ 92C4
1021+ 92C4              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92C4              ; HL contiene el puntero de impresión del disparo.
1023+ 92C4              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92C4
1025+ 92C4 D5           3 push de
1026+ 92C5 C5               push bc
1027+ 92C6
1028+ 92C6 CD 8E 90         call Comprueba_Colision
1029+ 92C9
1030+ 92C9              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92C9
1032+ 92C9 78               ld a,b
1033+ 92CA
1034+ 92CA C1               pop bc
1035+ 92CB D1               pop de
1036+ 92CC
1037+ 92CC EB               ex de,hl
1038+ 92CD
1039+ 92CD 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92CE 23               inc hl                                      ; _ movimiento.
1041+ 92CF 72               ld (hl),d
1042+ 92D0
1043+ 92D0 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92D1
1045+ 92D1 23               inc hl                                      ; _ en curso.
1046+ 92D2 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92D3 2B               dec hl
1048+ 92D4
1049+ 92D4 C9           7 ret
1050+ 92D5
1051+ 92D5              ; Disparo hacia abajo, (Entidad).
1052+ 92D5
1053+ 92D5 3A 40 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92D8 47               ld b,a
1055+ 92D9
1056+ 92D9 CD 18 97     4 call NextScan
1057+ 92DC 10 FB            djnz 4B
1058+ 92DE
1059+ 92DE              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92DE
1061+ 92DE 7C               ld a,h
1062+ 92DF FE 58            cp $58
1063+ 92E1 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92E3
1065+ 92E3 EB               ex de,hl
1066+ 92E4 06 04            ld b,4
1067+ 92E6 2B           5 dec hl
1068+ 92E7 10 FD            djnz 5B
1069+ 92E9
1070+ 92E9 CD EF 92         call Elimina_disparo_de_base_de_datos
1071+ 92EC E1               pop hl
1072+ 92ED 18 E5            jr 7B
1073+ 92EF
1074+ 92EF              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92EF
1076+ 92EF 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92F2 AF               xor a
1078+ 92F3 77               ld (hl),a
1079+ 92F4 54               ld d,h
1080+ 92F5 5D               ld e,l
1081+ 92F6 13               inc de
1082+ 92F7 ED B0            ldir
1083+ 92F9 C9               ret
1084+ 92FA
1085+ 92FA              ; -----------------------------------------------------------------
1086+ 92FA              ;
1087+ 92FA              ;   19/7/23
1088+ 92FA              ;
1089+ 92FA              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92FA              ;
1091+ 92FA              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92FA              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92FA              ;
1094+ 92FA              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92FA              ;
1096+ 92FA              ;   INPUTS:
1097+ 92FA              ;
1098+ 92FA              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92FA              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92FA
1101+ 92FA              ;   MODIFICA: A, HL, BC y DE.
1102+ 92FA
1103+ 92FA              Guarda_coordenadas_X
1104+ 92FA
1105+ 92FA 7B               ld a,e
1106+ 92FB A7               and a
1107+ 92FC 20 04            jr nz,1F
1108+ 92FE
1109+ 92FE 06 02            ld b,2
1110+ 9300 18 02            jr 2F
1111+ 9302
1112+ 9302 06 03        1 ld b,3
1113+ 9304 72           2 ld (hl),d
1114+ 9305 23               inc hl
1115+ 9306 14               inc d
1116+ 9307 10 FB            djnz 2B
1117+ 9309
1118+ 9309 C9               ret
1119+ 930A
1120+ 930A              ; -----------------------------------------------------------------
1121+ 930A              ;
1122+ 930A              ;   12/04/23
1123+ 930A              ;
1124+ 930A
1125+ 930A 3A 33 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 930D A7               and a
1127+ 930E C8               ret z
1128+ 930F
1129+ 930F FE 04            cp 4
1130+ 9311 20 09            jr nz,1F
1131+ 9313
1132+ 9313
1133+ 9313              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9313
1135+ 9313 CD 2F 91         call Detecta_colision_nave_entidad
1136+ 9316
1137+ 9316 21 33 8A         ld hl,Impacto2
1138+ 9319 CB 5E            bit 3,(hl)
1139+ 931B C0               ret nz                                               ; Existe colisión, RET.
1140+ 931C
1141+ 931C              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 931C              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 931C
1144+ 931C 21 33 8A     1 ld hl,Impacto2
1145+ 931F CB 4E            bit 1,(hl)
1146+ 9321 28 07            jr z,2F
1147+ 9323
1148+ 9323 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9326 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9328 18 0B            jr 3F
1151+ 932A
1152+ 932A 21 33 8A     2 ld hl,Impacto2
1153+ 932D CB 46            bit 0,(hl)
1154+ 932F C8               ret z
1155+ 9330
1156+ 9330              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9330
1158+ 9330 21 F9 89         ld hl,Ctrl_1
1159+ 9333 CB D6            set 2,(hl)
1160+ 9335
1161+ 9335 C9           3 ret
1162+ 9336
1163+ 9336              ; -----------------------------------------------------------------
1164+ 9336              ;
1165+ 9336              ;   19/7/23
1166+ 9336              ;
1167+ 9336              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9336
1169+ 9336 AF           Limpia_Coordenadas_X xor a
1170+ 9337 06 06            ld b,6
1171+ 9339 21 38 8A         ld hl,Coordenadas_X_Amadeus
1172+ 933C 77           1 ld (hl),a
1173+ 933D 23               inc hl
1174+ 933E 10 FC            djnz 1B
1175+ 9340 C9               ret
1176+ 9341
1177+ 9341              ; -----------------------------------------------------------------
1178+ 9341              ;
1179+ 9341              ;   25/04/23
1180+ 9341              ;
1181+ 9341
1182+ 9341              Determina_resultado_comparativa
1183+ 9341
1184+ 9341              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9341              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9341              ;
1187+ 9341              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9341              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9341              ;
1190+ 9341              ;   SBC HL,DE
1191+ 9341
1192+ 9341              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9341              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9341
1195+ 9341              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9341              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9341
1198+ 9341
1199+ 9341 3A CA 89         ld a,(Cuad_objeto)
1200+ 9344 FE 02            cp 2
1201+ 9346 28 26            jr z,2F
1202+ 9348 38 24            jr c,2F
1203+ 934A
1204+ 934A              ; Cuadrantes 3º y 4º
1205+ 934A
1206+ 934A E6 01            and 1
1207+ 934C 28 10            jr z,4F
1208+ 934E
1209+ 934E              ; Cuadrante 3º
1210+ 934E
1211+ 934E 7C               ld a,h
1212+ 934F 06 00            ld b,0
1213+ 9351
1214+ 9351 CD DC 93         call Compara_cositas_H3
1215+ 9354
1216+ 9354 04               inc b
1217+ 9355 05               dec b
1218+ 9356 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9357
1220+ 9357 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9358 06 00            ld b,0
1222+ 935A
1223+ 935A CD EE 93         call Compara_cositas_L3
1224+ 935D C9               ret
1225+ 935E
1226+ 935E              ; Cuadrante 4º
1227+ 935E
1228+ 935E 7C           4 ld a,h
1229+ 935F 06 00            ld b,0
1230+ 9361
1231+ 9361 CD 00 94         call Compara_cositas_H4
1232+ 9364
1233+ 9364 04               inc b
1234+ 9365 05               dec b
1235+ 9366 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9367
1237+ 9367 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9368 06 00            ld b,0
1239+ 936A
1240+ 936A CD 16 94         call Compara_cositas_L4
1241+ 936D C9               ret
1242+ 936E
1243+ 936E              ; Cuadrantes 1º y 2º.
1244+ 936E
1245+ 936E 28 10        2 jr z,3F
1246+ 9370
1247+ 9370              ; 1er Cuadrante
1248+ 9370
1249+ 9370 7C               ld a,h
1250+ 9371 06 00            ld b,0
1251+ 9373
1252+ 9373 CD B4 93         call Compara_cositas_H1
1253+ 9376
1254+ 9376 04               inc b
1255+ 9377 05               dec b
1256+ 9378 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9379
1258+ 9379 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 937A 06 00            ld b,0
1260+ 937C
1261+ 937C CD CA 93         call Compara_cositas_L1
1262+ 937F C9               ret
1263+ 9380
1264+ 9380
1265+ 9380              ; 2º Cuadrante
1266+ 9380
1267+ 9380 7C           3 ld a,h
1268+ 9381 06 00            ld b,0
1269+ 9383
1270+ 9383 CD 90 93         call Compara_cositas_H2
1271+ 9386
1272+ 9386 04               inc b
1273+ 9387 05               dec b
1274+ 9388 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9389
1276+ 9389 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 938A 06 00            ld b,0
1278+ 938C
1279+ 938C CD A2 93         call Compara_cositas_L2
1280+ 938F C9               ret
1281+ 9390
1282+ 9390 A7           Compara_cositas_H2 and a
1283+ 9391 28 0D            jr z,1F
1284+ 9393              ;    cp $fd
1285+ 9393              ;    jr z,1F
1286+ 9393              ;    cp $fe
1287+ 9393              ;    jr z,1F
1288+ 9393 FE FF            cp $ff
1289+ 9395 28 09            jr z,1F
1290+ 9397 FE 01            cp $01
1291+ 9399 28 05            jr z,1F
1292+ 939B FE 02            cp $02
1293+ 939D 28 01            jr z,1F
1294+ 939F C0               ret nz
1295+ 93A0 04           1 inc b
1296+ 93A1 C9               ret
1297+ 93A2
1298+ 93A2 A7           Compara_cositas_L2 and a
1299+ 93A3 28 0D            jr z,1F
1300+ 93A5              ;    cp $fd
1301+ 93A5              ;    jr z,1F
1302+ 93A5 FE FE            cp $fe
1303+ 93A7 28 09            jr z,1F
1304+ 93A9 FE FF            cp $ff
1305+ 93AB 28 05            jr z,1F
1306+ 93AD FE 01            cp $01
1307+ 93AF 28 01            jr z,1F
1308+ 93B1              ;    cp $02
1309+ 93B1              ;    jr z,1F
1310+ 93B1 C0               ret nz
1311+ 93B2 04           1 inc b
1312+ 93B3 C9               ret
1313+ 93B4
1314+ 93B4 A7           Compara_cositas_H1 and a
1315+ 93B5 28 11            jr z,1F
1316+ 93B7              ;    cp $fd
1317+ 93B7              ;    jr z,1F
1318+ 93B7              ;    cp $fe
1319+ 93B7              ;    jr z,1F
1320+ 93B7 FE FF            cp $ff
1321+ 93B9 28 0D            jr z,1F
1322+ 93BB FE 01            cp $01
1323+ 93BD 28 09            jr z,1F
1324+ 93BF FE 02            cp $02
1325+ 93C1 28 05            jr z,1F
1326+ 93C3 FE 03            cp $03
1327+ 93C5 28 01            jr z,1F
1328+ 93C7 C0               ret nz
1329+ 93C8 04           1 inc b
1330+ 93C9 C9               ret
1331+ 93CA
1332+ 93CA A7           Compara_cositas_L1 and a
1333+ 93CB 28 0D            jr z,1F
1334+ 93CD              ;    cp $fd
1335+ 93CD              ;    jr z,1F
1336+ 93CD              ;    cp $fe
1337+ 93CD              ;    jr z,1F
1338+ 93CD              ;    cp $ff
1339+ 93CD              ;    jr z,1F
1340+ 93CD FE 01            cp $01
1341+ 93CF 28 09            jr z,1F
1342+ 93D1 FE 02            cp $02
1343+ 93D3 28 05            jr z,1F
1344+ 93D5 FE 03            cp $03
1345+ 93D7 28 01            jr z,1F
1346+ 93D9 C0               ret nz
1347+ 93DA 04           1 inc b
1348+ 93DB C9               ret
1349+ 93DC
1350+ 93DC A7           Compara_cositas_H3 and a
1351+ 93DD 28 0D            jr z,1F
1352+ 93DF              ;    cp $fd
1353+ 93DF              ;    jr z,1F
1354+ 93DF FE FE            cp $fe
1355+ 93E1 28 09            jr z,1F
1356+ 93E3 FE FF            cp $ff
1357+ 93E5 28 05            jr z,1F
1358+ 93E7 FE 01            cp $01
1359+ 93E9 28 01            jr z,1F
1360+ 93EB              ;    cp $02
1361+ 93EB              ;    jr z,1F
1362+ 93EB              ;    cp $03
1363+ 93EB              ;    jr z,1F
1364+ 93EB C0               ret nz
1365+ 93EC 04           1 inc b
1366+ 93ED C9               ret
1367+ 93EE
1368+ 93EE A7           Compara_cositas_L3 and a
1369+ 93EF 28 0D            jr z,1F
1370+ 93F1              ;    cp $fd
1371+ 93F1              ;    jr z,1F
1372+ 93F1              ;    cp $fe
1373+ 93F1              ;    jr z,1F
1374+ 93F1              ;    cp $ff
1375+ 93F1              ;    jr z,1F
1376+ 93F1 FE 01            cp $01
1377+ 93F3 28 09            jr z,1F
1378+ 93F5 FE 02            cp $02
1379+ 93F7 28 05            jr z,1F
1380+ 93F9 FE 03            cp $03
1381+ 93FB 28 01            jr z,1F
1382+ 93FD C0               ret nz
1383+ 93FE 04           1 inc b
1384+ 93FF C9               ret
1385+ 9400
1386+ 9400 A7           Compara_cositas_H4 and a
1387+ 9401 28 11            jr z,1F
1388+ 9403 FE FD            cp $fd
1389+ 9405 28 0D            jr z,1F
1390+ 9407 FE FE            cp $fe
1391+ 9409 28 09            jr z,1F
1392+ 940B FE FF            cp $ff
1393+ 940D 28 05            jr z,1F
1394+ 940F FE 01            cp $01
1395+ 9411 28 01            jr z,1F
1396+ 9413              ;    cp $02
1397+ 9413              ;    jr z,1F
1398+ 9413              ;    cp $03
1399+ 9413              ;    jr z,1F
1400+ 9413 C0               ret nz
1401+ 9414 04           1 inc b
1402+ 9415 C9               ret
1403+ 9416
1404+ 9416 A7           Compara_cositas_L4 and a
1405+ 9417 28 0D            jr z,1F
1406+ 9419              ;    cp $fd
1407+ 9419              ;    jr z,1F
1408+ 9419 FE FE            cp $fe
1409+ 941B 28 09            jr z,1F
1410+ 941D FE FF            cp $ff
1411+ 941F 28 05            jr z,1F
1412+ 9421 FE 01            cp $01
1413+ 9423 28 01            jr z,1F
1414+ 9425              ;    cp $02
1415+ 9425              ;    jr z,1F
1416+ 9425              ;    cp $03
1417+ 9425              ;    jr z,1F
1418+ 9425 C0               ret nz
1419+ 9426 04           1 inc b
1420+ 9427 C9               ret
# file closed: Disparo.asm
1486  9428              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9428              ; ******************************************************************************************************************************************************************************************
   2+ 9428              ;
   3+ 9428              ; 26/06/23
   4+ 9428              ;
   5+ 9428              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9428
   7+ 9428 CD 0C 97     Draw call Prepara_draw
   8+ 942B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 942C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 942D 28 05        	jr z,2F
  11+ 942F
  12+ 942F 3A CA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9432 18 0C        	jr 1F
  14+ 9434
  15+ 9434 2A C8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9437 22 B8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 943A CD C9 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 943D              ;													; _la esquina superior izquierda de la pantalla.
  19+ 943D CD 1E A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9440
  21+ 9440 3A E4 89     1 ld a,(Ctrl_0)
  22+ 9443 CB 6F        	bit 5,a
  23+ 9445 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9447
  25+ 9447 CD 5F 94     	call Comprueba_limite_horizontal
  26+ 944A CD EF 94     	call Comprueba_limite_vertical
  27+ 944D
  28+ 944D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 944D              ; -----------------------
  30+ 944D              ; -----------------------
  31+ 944D              ; -----------------------
  32+ 944D
  33+ 944D CD 3C 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9450 CD 73 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9453 CD D2 96     	call Define_rutina_de_impresion
  36+ 9456
  37+ 9456 3A E4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9459 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 945B 32 E4 89     	ld (Ctrl_0),a
  40+ 945E
  41+ 945E C9           	ret
  42+ 945F
  43+ 945F              ; *******************************************************************************************************************************************************************************************
  44+ 945F              ;	21/01/23
  45+ 945F              ;
  46+ 945F              ; 	Comprueba_limite_horizontal.
  47+ 945F              ;
  48+ 945F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 945F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 945F              ;
  51+ 945F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 945F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 945F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 945F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 945F
  56+ 945F
  57+ 945F
  58+ 945F 3A E4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9462 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9464 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9466 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9468 32 E4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 946B 18 09            jr 6F
  64+ 946D CB 5F        1 bit 3,a
  65+ 946F 28 0A            jr z,2F
  66+ 9471 E6 F7            and $f7
  67+ 9473 32 E4 89         ld (Ctrl_0),a
  68+ 9476 CD C9 95     6 call Inicializacion
  69+ 9479 18 5B            jr 5F
  70+ 947B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 947C
  72+ 947C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 947C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 947C
  75+ 947C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 947D 2A F4 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9480 CD EC 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9483 67           	ld h,a
  79+ 9484 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9485 CD EC 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9488 67           	ld h,a
  82+ 9489 A7           	and a
  83+ 948A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 948C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 948D 3A CA 89     	ld a,(Cuad_objeto)
  86+ 9490 FE 02        	cp 2
  87+ 9492 38 1E        	jr c,3F
  88+ 9494 28 1C        	jr z,3F
  89+ 9496 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9497 28 23            jr z,7F
  91+ 9499 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 949B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 949D E1           	pop hl
  94+ 949E
  95+ 949E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 949E              ; _para indicar con E="2" en caso necesario.
  97+ 949E
  98+ 949E E5               push hl
  99+ 949F C5               push bc
 100+ 94A0 CD EC 99     	call calcula_tercio
 101+ 94A3 FE 01        	cp 1
 102+ 94A5 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 94A7 CD D7 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 94AA 28 26            jr z,9F
 105+ 94AC 38 24            jr c,9F
 106+ 94AE 1E 00        11 ld e,0
 107+ 94B0 18 22            jr 8F
 108+ 94B2 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 94B3 28 07        	jr z, 7F
 110+ 94B5 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 94B7 1E 00         	ld e,0
 112+ 94B9 E1           	pop hl
 113+ 94BA 18 04        	jr 4F
 114+ 94BC 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94BE 18 15            jr 10F
 116+ 94C0
 117+ 94C0              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94C0              ; _para indicar con E="2" en caso necesario.
 119+ 94C0
 120+ 94C0 E5           4 push hl
 121+ 94C1 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94C2 CD EC 99     	call calcula_tercio
 123+ 94C5 FE 01        	cp 1
 124+ 94C7 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94C9 CD D7 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94CC 28 04            jr z,9F
 127+ 94CE 30 02            jr nc,9F
 128+ 94D0 18 02        	jr 8F
 129+ 94D2 1E 02        9 ld e,2
 130+ 94D4 C1           8 pop bc
 131+ 94D5 E1           10 pop hl
 132+ 94D6 C9           5 ret
 133+ 94D7
 134+ 94D7              ; --------------------
 135+ 94D7              ;
 136+ 94D7              ; 25/08/22
 137+ 94D7
 138+ 94D7 CD EC 99     Comprueba_centro call calcula_tercio
 139+ 94DA 67               ld h,a
 140+ 94DB 08           	ex af,af
 141+ 94DC FE 02        	cp 2
 142+ 94DE 38 07        	jr c,1F
 143+ 94E0 28 05        	jr z,1F
 144+ 94E2 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94E5 18 03        	jr 2F
 146+ 94E7 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94EA 08           2 ex af,af
 148+ 94EB A7               and a
 149+ 94EC ED 42            sbc hl,bc
 150+ 94EE C9               ret
 151+ 94EF
 152+ 94EF              ; *********************************************************************************************************************************************************************************************
 153+ 94EF              ;
 154+ 94EF              ;   16/8/22
 155+ 94EF              ;
 156+ 94EF              ;	Comprueba_limite_vertical
 157+ 94EF              ;
 158+ 94EF              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94EF              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94EF              ;
 161+ 94EF
 162+ 94EF 2A B8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94F2 7D           	ld a,l
 164+ 94F3 E6 1F        	and $1F
 165+ 94F5 57           	ld d,a
 166+ 94F6 3A F6 89     	ld a,(Limite_vertical)
 167+ 94F9 BA           	cp d 											; Límite - Posición.
 168+ 94FA 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94FB 3A CA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94FE CB 47        	bit 0,a
 171+ 9500 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9502
 173+ 9502              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9502
 175+ 9502 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9503 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9505
 178+ 9505              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9505              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9505
 181+ 9505 3A BC 89         ld a,(Coordenada_X)
 182+ 9508 16 0F            ld d,Centro_izquierda
 183+ 950A A7               and a
 184+ 950B 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 950C 28 1E            jr z,3F
 186+ 950E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9510              ;                                                    ; _salimos sin modificar nada.
 188+ 9510 18 0E            jr 2F
 189+ 9512 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9513 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9515
 192+ 9515              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9515              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9515
 195+ 9515 3A BC 89         ld a,(Coordenada_X)
 196+ 9518 16 10            ld d,Centro_derecha
 197+ 951A A7               and a
 198+ 951B 92               sub d
 199+ 951C 28 0E            jr z,3F
 200+ 951E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9520              ;                                                    ; _salimos sin modificar nada.
 202+ 9520 CB 43        2 bit 0,e
 203+ 9522 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9524 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9525 CD B9 95         call Modificaccionne
 206+ 9528 C1           	pop bc
 207+ 9529 CD C9 95         call Inicializacion
 208+ 952C C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 952D
 210+ 952D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 952D
 212+ 952D C5           4 push bc
 213+ 952E 01 B7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9531 0A           	ld a,(bc)
 215+ 9532 3D           	dec a
 216+ 9533 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9534 7D           	ld a,l
 218+ 9535 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9536 CB 47        	bit 0,a
 220+ 9538 28 03        	jr z,5F
 221+ 953A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 953B 18 2E        	jr 7F
 223+ 953D
 224+ 953D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 953D
 226+ 953D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 953E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 953F 3A E4 89     	ld a,(Ctrl_0)
 229+ 9542 CB 4F        	bit 1,a
 230+ 9544 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9546 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9547
 233+ 9547              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9547
 235+ 9547 1C               inc e
 236+ 9548 1D               dec e
 237+ 9549 20 07            jr nz,12F
 238+ 954B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 954C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 954D 22 B8 89     	ld (Posicion_actual),hl
 241+ 9550 18 44        13 jr 9F
 242+ 9552 CB 43        12 bit 0,e
 243+ 9554 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9556              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9556 C1           	pop bc
 246+ 9557 18 D3        	jr 3B
 247+ 9559 80           14 add b
 248+ 955A 6F               ld l,a
 249+ 955B 22 B8 89     	ld (Posicion_actual),hl
 250+ 955E CD B9 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9561 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9563 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9565 32 E4 89         ld (Ctrl_0),a
 254+ 9568 F1           	pop af
 255+ 9569 18 2B        	jr 9F
 256+ 956B
 257+ 956B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 956B
 259+ 956B F5           7 push af
 260+ 956C 3A E4 89     	ld a,(Ctrl_0)
 261+ 956F CB 47        	bit 0,a
 262+ 9571 20 1D        	jr nz,8F
 263+ 9573 F1           	pop af
 264+ 9574
 265+ 9574              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9574
 267+ 9574 1C           	inc e
 268+ 9575 1D               dec e
 269+ 9576 20 07            jr nz,10F
 270+ 9578 90           	sub b
 271+ 9579 6F               ld l,a
 272+ 957A 22 B8 89     	ld (Posicion_actual),hl
 273+ 957D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 957F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 957F CB 43        10 bit 0,e
 276+ 9581 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9583              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9583 C1           	pop bc
 279+ 9584 18 A6        	jr 3B
 280+ 9586 90           16 sub b
 281+ 9587 6F               ld l,a
 282+ 9588 22 B8 89     	ld (Posicion_actual),hl
 283+ 958B CD B9 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 958E 18 06            jr 9F
 285+ 9590 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9592 32 E4 89         ld (Ctrl_0),a
 287+ 9595 F1           	pop af
 288+ 9596 C1           9 pop bc
 289+ 9597 1E 00        	ld e,0
 290+ 9599 CD C9 95         call Inicializacion
 291+ 959C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 959D 08           	ex af,af
 293+ 959E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 959F 18 8B            jr 3B
 295+ 95A1
 296+ 95A1              ; --------------------
 297+ 95A1
 298+ 95A1 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 95A3 CD 27 97     1 call PreviousScan
 300+ 95A6 10 FB            djnz 1B
 301+ 95A8 22 B8 89     	ld (Posicion_actual),hl
 302+ 95AB AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 95AC C9           	ret
 304+ 95AD
 305+ 95AD              ; --------------------
 306+ 95AD
 307+ 95AD 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 95AF CD 18 97     1 call NextScan
 309+ 95B2 10 FB            djnz 1B
 310+ 95B4 22 B8 89     	ld (Posicion_actual),hl
 311+ 95B7 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 95B8 C9           	ret
 313+ 95B9
 314+ 95B9              ; --------------------
 315+ 95B9              ;
 316+ 95B9              ;	22/01/23
 317+ 95B9              ;
 318+ 95B9              ;	E="1". Hemos cambiado de cuadrante.
 319+ 95B9              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 95B9              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 95B9
 322+ 95B9
 323+ 95B9              Modificaccionne
 324+ 95B9
 325+ 95B9 3A CA 89     	ld a,(Cuad_objeto)
 326+ 95BC FE 02        	cp 2
 327+ 95BE CC A1 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95C1 DC A1 95         call c,Modifica_Pos_actual
 329+ 95C4 C8           	ret z
 330+ 95C5 CD AD 95         call Modifica_Pos_actual2
 331+ 95C8 C9               ret
 332+ 95C9
 333+ 95C9              ; *************************************************************************************************************************************************************************************************
 334+ 95C9              ;
 335+ 95C9              ;	13/8/22
 336+ 95C9              ;
 337+ 95C9              ;	Inicializacion
 338+ 95C9              ;
 339+ 95C9              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95C9              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95C9              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95C9              ;
 343+ 95C9              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95C9              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95C9              ;	_ desaparece/aparece.
 346+ 95C9
 347+ 95C9              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95C9              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95C9              ;
 350+ 95C9              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95C9              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95C9              ; 		   [E] ="0"
 353+ 95C9
 354+ 95C9              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95C9
 356+ 95C9 CD EC 99     Inicializacion call calcula_tercio
 357+ 95CC 28 36        	jr z,primit
 358+ 95CE E6 02        	and 2
 359+ 95D0 20 07        	jr nz,segmit
 360+ 95D2 7D           	ld a,l
 361+ 95D3 FE 7F        	cp $7f
 362+ 95D5 38 2D        	jr c,primit
 363+ 95D7 28 2B        	jr z,primit
 364+ 95D9 CD 36 96     segmit call column
 365+ 95DC 38 13        	jr c,tercuad
 366+ 95DE 3E 04        cuarcuad ld a,4
 367+ 95E0 32 CA 89     	ld (Cuad_objeto),a
 368+ 95E3 21 20 48     	ld hl,$4820
 369+ 95E6 22 F4 89     	ld (Limite_horizontal),hl
 370+ 95E9 21 F6 89     	ld hl,Limite_vertical
 371+ 95EC 36 0D        	ld (hl),$0d
 372+ 95EE 08           	ex af,af
 373+ 95EF 18 3C        	jr 1F
 374+ 95F1              tercuad
 375+ 95F1 3E 03        	ld a,3
 376+ 95F3 32 CA 89     	ld (Cuad_objeto),a
 377+ 95F6 21 20 48     	ld hl,$4820
 378+ 95F9 22 F4 89     	ld (Limite_horizontal),hl
 379+ 95FC 21 F6 89     	ld hl,Limite_vertical
 380+ 95FF 36 12        	ld (hl),$12
 381+ 9601 08           	ex af,af
 382+ 9602 18 29        	jr 1F
 383+ 9604 CD 36 96     primit call column
 384+ 9607 38 13        	jr c, primcuad
 385+ 9609              segcuad
 386+ 9609 3E 02        	ld a,2
 387+ 960B 32 CA 89     	ld (Cuad_objeto),a
 388+ 960E 21 C0 4F     	ld hl,$4fc0
 389+ 9611 22 F4 89     	ld (Limite_horizontal),hl
 390+ 9614 21 F6 89     	ld hl,Limite_vertical
 391+ 9617 36 0D        	ld (hl),$0d
 392+ 9619 08           	ex af,af
 393+ 961A 18 11        	jr 1F
 394+ 961C              primcuad
 395+ 961C 3E 01        	ld a,1
 396+ 961E 32 CA 89     	ld (Cuad_objeto),a
 397+ 9621 21 C0 4F     	ld hl,$4fc0
 398+ 9624 22 F4 89     	ld (Limite_horizontal),hl
 399+ 9627 21 F6 89     	ld hl,Limite_vertical
 400+ 962A 36 12        	ld (hl),$12
 401+ 962C 08           	ex af,af
 402+ 962D CD 77 9D     1 call Genera_coordenadas
 403+ 9630 21 E4 89     	ld hl,Ctrl_0
 404+ 9633 CB EE        	set 5,(hl)
 405+ 9635 C9           	ret
 406+ 9636
 407+ 9636              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9636
 409+ 9636              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9636              ;
 411+ 9636              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9636
 413+ 9636 7D           column ld a,l
 414+ 9637 E6 1F        	and $1f
 415+ 9639 FE 10         	cp $10
 416+ 963B C9            	ret
 417+ 963C
 418+ 963C              ; --------------------------------------------------------------------------------------------------------------------
 419+ 963C              ;
 420+ 963C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 963C              ;
 422+ 963C              ; 14/12/22
 423+ 963C              ;
 424+ 963C              ;	Modifica: A y BC.
 425+ 963C
 426+ 963C 3A CA 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 963F E6 01        	and 1
 428+ 9641 28 17        	jr z,1F
 429+ 9643
 430+ 9643              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9643
 432+ 9643 3A BC 89     	ld a,(Coordenada_X)
 433+ 9646 47           	ld b,a
 434+ 9647 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9648 79           	ld a,c
 436+ 9649 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 964A 38 08        	jr c,2F
 438+ 964C 47           	ld b,a
 439+ 964D 79           	ld a,c
 440+ 964E 90           	sub b
 441+ 964F 32 F3 89     	ld (Columnas),a
 442+ 9652 18 1B        	jr 4F
 443+ 9654 79           2 ld a,c
 444+ 9655 32 F3 89     	ld (Columnas),a
 445+ 9658 18 15        	jr 4F
 446+ 965A
 447+ 965A              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 965A
 449+ 965A 3A BC 89     1 ld a,(Coordenada_X)
 450+ 965D 81           	add c
 451+ 965E 3D           	dec a
 452+ 965F D6 1F        	sub $1f
 453+ 9661 38 08        	jr c,3F
 454+ 9663 47           	ld b,a
 455+ 9664 79           	ld a,c
 456+ 9665 90           	sub b
 457+ 9666 32 F3 89     	ld (Columnas),a
 458+ 9669 18 04        	jr 4F
 459+ 966B 79           3 ld a,c
 460+ 966C 32 F3 89     	ld (Columnas),a
 461+ 966F D9           4 exx
 462+ 9670 4F           	ld c,a
 463+ 9671 D9           	exx
 464+ 9672 C9            ret
 465+ 9673
 466+ 9673              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9673              ;
 468+ 9673              ;   19/7/23
 469+ 9673              ;
 470+ 9673              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9673              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9673              ;
 473+ 9673              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9673              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9673              ;
 476+ 9673              ;	DESTRUYE: HL,B Y A.
 477+ 9673
 478+ 9673 3A CA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9676 FE 02        	cp 2
 480+ 9678 38 18        	jr c,1F
 481+ 967A 28 16        	jr z,1F
 482+ 967C E6 01        	and 1
 483+ 967E 28 0D        	jr z,3F
 484+ 9680
 485+ 9680              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9680
 487+ 9680 CD C6 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9683
 489+ 9683 7D           9 ld a,l
 490+ 9684 E6 1F        	and $1f
 491+ 9686 28 2A        	jr z,7F
 492+ 9688 2B           	dec hl
 493+ 9689 10 F8        	djnz 9B
 494+ 968B 18 25        	jr 7F
 495+ 968D
 496+ 968D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 968D
 498+ 968D 2A B8 89     3 ld hl,(Posicion_actual)
 499+ 9690 18 20        	jr 7F
 500+ 9692
 501+ 9692 28 14        1 jr z,2F
 502+ 9694
 503+ 9694              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9694
 505+ 9694 CD C6 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9697
 507+ 9697 7D           4 ld a,l
 508+ 9698 E6 1F        	and $1f
 509+ 969A 28 03        	jr z,6F
 510+ 969C 2B           	dec hl
 511+ 969D 10 F8        	djnz 4B
 512+ 969F 06 0F        6 ld b,15
 513+ 96A1 CD 27 97     5 call PreviousScan
 514+ 96A4 10 FB        	djnz 5B
 515+ 96A6 18 0A        	jr 7F
 516+ 96A8
 517+ 96A8              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 96A8
 519+ 96A8 CD C6 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 96AB 06 0F        	ld b,15
 521+ 96AD CD 27 97     8 call PreviousScan
 522+ 96B0 10 FB        	djnz 8B
 523+ 96B2
 524+ 96B2 E5           7 push hl
 525+ 96B3 DD E1        	pop ix
 526+ 96B5
 527+ 96B5 2A BA 89     	ld hl,(Puntero_objeto)
 528+ 96B8 E5           	push hl
 529+ 96B9 FD E1        	pop iy
 530+ 96BB
 531+ 96BB              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 96BB
 533+ 96BB 3A E4 89     	ld a,(Ctrl_0)
 534+ 96BE CB 77        	bit 6,a
 535+ 96C0 C8           	ret z
 536+ 96C1
 537+ 96C1              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96C1              ; _ entidad / Amadeus´.
 539+ 96C1
 540+ 96C1 DD 22 3E 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96C5
 542+ 96C5 C9           	ret
 543+ 96C6
 544+ 96C6              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96C6              ;
 546+ 96C6              ;	2/1/23
 547+ 96C6              ;
 548+ 96C6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96C6              ;
 550+ 96C6              ;	Tras esta rutina tenemos:
 551+ 96C6              ;
 552+ 96C6              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96C6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96C6              ;
 555+ 96C6              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96C6
 557+ 96C6 2A B8 89     Operandos ld hl,(Posicion_actual)
 558+ 96C9 3A F3 89     	ld a,(Columnas)
 559+ 96CC 3D           	dec a
 560+ 96CD 20 01        	jr nz,1F
 561+ 96CF 3C           	inc a
 562+ 96D0 47           1 ld b,a
 563+ 96D1 C9           	ret
 564+ 96D2
 565+ 96D2              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96D2              ;
 567+ 96D2              ;	3/1/23
 568+ 96D2              ;
 569+ 96D2              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96D2              ;
 571+ 96D2              ;	Destruye: A,B,HL y DE.
 572+ 96D2
 573+ 96D2              Define_rutina_de_impresion
 574+ 96D2
 575+ 96D2 3A B7 89     	ld a,(Columns)
 576+ 96D5 47           	ld b,a
 577+ 96D6 3A F3 89     	ld a,(Columnas)
 578+ 96D9 B8           	cp b
 579+ 96DA 20 0D        	jr nz,2f
 580+ 96DC
 581+ 96DC              ;	La entidad se imprime entera.
 582+ 96DC
 583+ 96DC 21 BC 97     	ld hl, Indice_entidades_completas
 584+ 96DF E6 01        	and 1
 585+ 96E1 28 02        	jr z,1F
 586+ 96E3
 587+ 96E3 23           	inc hl
 588+ 96E4 23           	inc hl
 589+ 96E5
 590+ 96E5 CD 8A 8D     1 call Extrae_address
 591+ 96E8 C9           	ret		;	ret
 592+ 96E9
 593+ 96E9              ;	La entidad no se imprime entera en pantalla.
 594+ 96E9
 595+ 96E9 3A CA 89     2 ld a,(Cuad_objeto)
 596+ 96EC E6 01        	and 1
 597+ 96EE 28 17        	jr z,3F
 598+ 96F0
 599+ 96F0              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96F0
 601+ 96F0 21 C0 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96F3 3A B7 89     4 ld a,(Columns)
 603+ 96F6 E6 01        	and 1
 604+ 96F8 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96FA
 606+ 96FA 23           	inc hl
 607+ 96FB 23           	inc hl
 608+ 96FC
 609+ 96FC 3A F3 89     	ld a,(Columnas)
 610+ 96FF E6 01        	and 1
 611+ 9701 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9703
 613+ 9703 23           	inc hl
 614+ 9704 23           	inc hl
 615+ 9705
 616+ 9705 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9707
 618+ 9707 21 C6 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 970A 18 E7        	jr 4B
 620+ 970C
 621+ 970C              ; --------------------------------------------------------------------------------------------------------------------
 622+ 970C              ;
 623+ 970C              ;	Prepara_draw
 624+ 970C              ;
 625+ 970C              ;	Es una rutina de carga.
 626+ 970C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 970C              ;
 628+ 970C              ;	FUNCIONAMIENTO:
 629+ 970C              ;
 630+ 970C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 970C              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 970C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 970C              ;
 634+ 970C              ;	DESTRUYE:
 635+ 970C              ;
 636+ 970C              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 970C
 638+ 970C 21 B6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 970F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9710 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9711 4E           	ld c,(hl)
 642+ 9712 2A B8 89     	ld hl,(Posicion_actual)
 643+ 9715 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9717 C9           	ret
 645+ 9718
 646+ 9718              ;----------------------------------------------------------------------------------------------------------------
 647+ 9718              ;
 648+ 9718              ;	5/08/22
 649+ 9718              ;
 650+ 9718              ;   NextScan.
 651+ 9718              ;
 652+ 9718              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9718              ;
 654+ 9718              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9718              ;
 656+ 9718              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9718              ;
 658+ 9718              ;       DESTRUIDOS: AF y HL !!!
 659+ 9718              ;
 660+ 9718              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9718              ;
 662+ 9718
 663+ 9718 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9719 7C               ld a,h
 665+ 971A E6 07            and 7
 666+ 971C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 971D
 668+ 971D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 971E C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9720 6F               ld l,a
 671+ 9721 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9722
 673+ 9722 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9723 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9725 67               ld h,a
 676+ 9726 C9               ret
 677+ 9727
 678+ 9727              ;----------------------------------------------------------------------------------------------------------------
 679+ 9727              ;
 680+ 9727              ;	5/08/22
 681+ 9727              ;
 682+ 9727              ;   PreviousScan.
 683+ 9727              ;
 684+ 9727              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9727              ;
 686+ 9727              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9727              ;
 688+ 9727              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9727              ;
 690+ 9727              ;       DESTRUIDOS: AF y HL !!!
 691+ 9727              ;
 692+ 9727              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9727              ;
 694+ 9727
 695+ 9727 7C           PreviousScan ld a,h
 696+ 9728 25               dec h               ; Dec H.
 697+ 9729 E6 07            and 7
 698+ 972B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 972C
 700+ 972C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 972D D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 972F 6F               ld l,a
 703+ 9730 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9731
 705+ 9731 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9732 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9734 67               ld h,a
 708+ 9735 C9               ret
 709+ 9736
 710+ 9736              ; -----------------------------------------------------------------------------------
 711+ 9736              ;
 712+ 9736              ;	31/7/23
 713+ 9736              ;
 714+ 9736              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9736              ;	Extrae fotos de Album_de_fotos.
 716+ 9736
 717+ 9736              Extrae_foto_entidades
 718+ 9736
 719+ 9736 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9739 7E           	ld a,(hl)
 721+ 973A A7           	and a
 722+ 973B C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 973C
 724+ 973C 3A 05 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 973F A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9740 C8           	ret z
 727+ 9741
 728+ 9741              ; -----------------------------------
 729+ 9741
 730+ 9741 ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9745 31 00 70     	ld sp,Album_de_fotos
 732+ 9748
 733+ 9748 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 974A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 974B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 974C
 737+ 974C ED 73 0C 8A  	ld (Stack_2),sp
 738+ 9750 ED 7B 0A 8A  	ld sp,(Stack)
 739+ 9754
 740+ 9754              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 9754
 742+ 9754 3E CD        	ld a,$cd
 743+ 9756 32 5E 97     	ld (Imprime),a
 744+ 9759 EB           	ex de,hl
 745+ 975A 22 5F 97     	ld (Imprime+1),hl
 746+ 975D EB           	ex de,hl
 747+ 975E
 748+ 975E              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 975E
 750+ 975E 00 00 00     Imprime db 0,0,0
 751+ 9761
 752+ 9761 ED 73 0A 8A  	ld (Stack),sp
 753+ 9765
 754+ 9765 3A 05 8A     	ld a,(Numero_de_malotes)
 755+ 9768 3D           	dec a
 756+ 9769 28 09        	jr z,1F
 757+ 976B 32 05 8A      	ld (Numero_de_malotes),a
 758+ 976E
 759+ 976E ED 7B 0C 8A  	ld sp,(Stack_2)
 760+ 9772 18 D4        	jr 2B
 761+ 9774
 762+ 9774 AF           1 xor a
 763+ 9775 32 0C 8A     	ld (Stack_2),a
 764+ 9778
 765+ 9778 FD 69        	ld iyl,c
 766+ 977A FD 60        	ld iyh,b
 767+ 977C
 768+ 977C C9           	ret
 769+ 977D
 770+ 977D              ; -----------------------------------------------------------------------------------
 771+ 977D              ;
 772+ 977D              ;	28/2/23
 773+ 977D              ;
 774+ 977D              ;	Pinta los disparos generados.
 775+ 977D
 776+ 977D              Extrae_foto_disparos
 777+ 977D
 778+ 977D 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 779+ 9780 7E               ld a,(hl)
 780+ 9781 A7               and a
 781+ 9782 C8               ret z
 782+ 9783
 783+ 9783 3A 2E 8A     	ld a,(Numero_de_disparotes)
 784+ 9786 A7           	and a
 785+ 9787 C8           	ret z
 786+ 9788 ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 787+ 978C 31 0D 72     	ld sp,Album_de_fotos_disparos
 788+ 978F
 789+ 978F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 790+ 9791 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 791+ 9792 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 792+ 9793
 793+ 9793 ED 73 0C 8A  	ld (Stack_2),sp
 794+ 9797 ED 7B 0A 8A  	ld sp,(Stack)
 795+ 979B
 796+ 979B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 797+ 979B
 798+ 979B 3E CD        	ld a,$cd
 799+ 979D 32 A5 97     	ld (Imprime2),a
 800+ 97A0 EB           	ex de,hl
 801+ 97A1 22 A6 97     	ld (Imprime2+1),hl
 802+ 97A4 EB           	ex de,hl
 803+ 97A5
 804+ 97A5              ; Ejecuta la llamada:	CALL $xx,xx
 805+ 97A5
 806+ 97A5 00 00 00     Imprime2 db 0,0,0
 807+ 97A8
 808+ 97A8 3A 2E 8A     	ld a,(Numero_de_disparotes)
 809+ 97AB 3D           	dec a
 810+ 97AC 28 09        	jr z,1F
 811+ 97AE 32 2E 8A      	ld (Numero_de_disparotes),a
 812+ 97B1
 813+ 97B1 ED 7B 0C 8A  	ld sp,(Stack_2)
 814+ 97B5 18 D8        	jr 2B
 815+ 97B7
 816+ 97B7 AF           1 xor a
 817+ 97B8 32 0C 8A     	ld (Stack_2),a
 818+ 97BB C9           	ret
 819+ 97BC
# file closed: Draw_XOR.asm
1487  97BC              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97BC              ;   índices de Rutinas de impresión.
   2+ 97BC
   3+ 97BC CC 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97BE F9 97            defw Pinta_Amadeus_3x2
   5+ 97C0
   6+ 97C0 4F 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97C2 EF 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97C4 A3 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97C6
  10+ 97C6 79 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97C8 7D 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97CA 31 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97CC
  14+ 97CC
  15+ 97CC              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97CC              ;
  17+ 97CC              ;   12/12/22
  18+ 97CC              ;
  19+ 97CC              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97CC              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97CC              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97CC              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97CC              ;
  24+ 97CC              ;   Modifica: DE y HL.
  25+ 97CC
  26+ 97CC ED 73 0A 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97D0 FD F9        	ld sp,iy
  28+ 97D2 06 10            ld b,16
  29+ 97D4 D1           1 pop de
  30+ 97D5 7B               ld a,e
  31+ 97D6 AE               xor (hl)
  32+ 97D7 77           	ld (hl),a
  33+ 97D8 23           	inc hl
  34+ 97D9 7A               ld a,d
  35+ 97DA AE               xor (hl)
  36+ 97DB 77           	ld (hl),a
  37+ 97DC 2B           	dec hl
  38+ 97DD 24           	inc h
  39+ 97DE 7C               ld a,h
  40+ 97DF E6 07            and 7
  41+ 97E1 20 0A            jr nz,2F
  42+ 97E3 7D               ld a,l
  43+ 97E4 C6 20            add a,$20
  44+ 97E6 6F               ld l,a
  45+ 97E7 38 04            jr c,2F
  46+ 97E9 7C               ld a,h
  47+ 97EA D6 08            sub 8
  48+ 97EC 67               ld h,a
  49+ 97ED 7C           2 ld a,h
  50+ 97EE FE 58            cp $58
  51+ 97F0 28 02            jr z,3F
  52+ 97F2 10 E0            djnz 1B
  53+ 97F4 ED 7B 0A 8A  3 ld sp,(Stack)
  54+ 97F8 C9           	ret
  55+ 97F9
  56+ 97F9 ED 73 0A 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97FD FD F9        	ld sp,iy
  58+ 97FF 06 08            ld b,8
  59+ 9801 D1           1 pop de
  60+ 9802 7B               ld a,e
  61+ 9803 AE               xor (hl)
  62+ 9804 77           	ld (hl),a
  63+ 9805 23           	inc hl
  64+ 9806 7A               ld a,d
  65+ 9807 AE               xor (hl)
  66+ 9808 77           	ld (hl),a
  67+ 9809 23           	inc hl
  68+ 980A D1           	pop de
  69+ 980B 7B               ld a,e
  70+ 980C AE               xor (hl)
  71+ 980D 77           	ld (hl),a
  72+ 980E 2B           	dec hl
  73+ 980F 2B           	dec hl
  74+ 9810 24           	inc h
  75+ 9811 7C               ld a,h
  76+ 9812 E6 07            and 7
  77+ 9814 20 0A            jr nz,2F
  78+ 9816 7D               ld a,l
  79+ 9817 C6 20            add a,$20
  80+ 9819 6F               ld l,a
  81+ 981A 38 04            jr c,2F
  82+ 981C 7C               ld a,h
  83+ 981D D6 08            sub 8
  84+ 981F 67               ld h,a
  85+ 9820 7C           2 ld a,h
  86+ 9821 FE 58            cp $58
  87+ 9823 28 25            jr z,4F
  88+ 9825 7A               ld a,d
  89+ 9826 AE               xor (hl)
  90+ 9827 77               ld (hl),a
  91+ 9828 D1           	pop de
  92+ 9829 23           	inc hl
  93+ 982A 7B               ld a,e
  94+ 982B AE               xor (hl)
  95+ 982C 77           	ld (hl),a
  96+ 982D 23           	inc hl
  97+ 982E 7A               ld a,d
  98+ 982F AE               xor (hl)
  99+ 9830 77           	ld (hl),a
 100+ 9831 2B           	dec hl
 101+ 9832 2B           	dec hl
 102+ 9833 24           	inc h
 103+ 9834 7C               ld a,h
 104+ 9835 E6 07            and 7
 105+ 9837 20 0A            jr nz,3F
 106+ 9839 7D               ld a,l
 107+ 983A C6 20            add a,$20
 108+ 983C 6F               ld l,a
 109+ 983D 38 04            jr c,3F
 110+ 983F 7C               ld a,h
 111+ 9840 D6 08            sub 8
 112+ 9842 67               ld h,a
 113+ 9843 7C           3 ld a,h
 114+ 9844 FE 58            cp $58
 115+ 9846 28 02            jr z,4F
 116+ 9848 10 B7            djnz 1B
 117+ 984A ED 7B 0A 8A  4 ld sp,(Stack)
 118+ 984E C9           	ret
 119+ 984F
 120+ 984F              ; ---------------------------------------------------
 121+ 984F
 122+ 984F ED 73 0A 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9853 FD F9        	ld sp,iy
 124+ 9855
 125+ 9855              ; >>>
 126+ 9855
 127+ 9855 06 10            ld b,16
 128+ 9857 D1           1 pop de
 129+ 9858 7A           	ld a,d
 130+ 9859 AE           	xor (hl)
 131+ 985A 77           	ld (hl),a
 132+ 985B 24           	inc h
 133+ 985C 7C               ld a,h
 134+ 985D E6 07            and 7
 135+ 985F 20 0C            jr nz,2F
 136+ 9861 7D               ld a,l
 137+ 9862 C6 20            add a,$20
 138+ 9864 6F               ld l,a
 139+ 9865 38 06            jr c,2F
 140+ 9867 7C               ld a,h
 141+ 9868 D6 08            sub 8
 142+ 986A 67               ld h,a
 143+ 986B 18 00            jr 2F
 144+ 986D 7C           2 ld a,h
 145+ 986E FE 58            cp $58
 146+ 9870 28 02            jr z,3F
 147+ 9872 10 E3            djnz 1B
 148+ 9874 ED 7B 0A 8A  3 ld sp,(Stack)
 149+ 9878 C9           	ret
 150+ 9879
 151+ 9879 ED 73 0A 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 987D FD F9        	ld sp,iy
 153+ 987F
 154+ 987F              ; >>>
 155+ 987F
 156+ 987F 06 10            ld b,16
 157+ 9881 D1           1 pop de
 158+ 9882 7B           	ld a,e
 159+ 9883 AE           	xor (hl)
 160+ 9884 77           	ld (hl),a
 161+ 9885 24           	inc h
 162+ 9886 7C               ld a,h
 163+ 9887 E6 07            and 7
 164+ 9889 20 0C            jr nz,2F
 165+ 988B 7D               ld a,l
 166+ 988C C6 20            add a,$20
 167+ 988E 6F               ld l,a
 168+ 988F 38 06            jr c,2F
 169+ 9891 7C               ld a,h
 170+ 9892 D6 08            sub 8
 171+ 9894 67               ld h,a
 172+ 9895 18 00            jr 2F
 173+ 9897 7C           2 ld a,h
 174+ 9898 FE 58            cp $58
 175+ 989A 28 02            jr z,3F
 176+ 989C 10 E3            djnz 1B
 177+ 989E ED 7B 0A 8A  3 ld sp,(Stack)
 178+ 98A2 C9           	ret
 179+ 98A3
 180+ 98A3              ; ---------------------------------------------------
 181+ 98A3
 182+ 98A3 ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 98A7 FD F9        	ld sp,iy
 184+ 98A9 06 08            ld b,8
 185+ 98AB D1           1 pop de
 186+ 98AC 7A           	ld a,d
 187+ 98AD AE           	xor (hl)
 188+ 98AE 77           	ld (hl),a
 189+ 98AF 23           	inc hl
 190+ 98B0 D1           	pop de
 191+ 98B1 7B           	ld a,e
 192+ 98B2 AE           	xor (hl)
 193+ 98B3 77           	ld (hl),a
 194+ 98B4 2B           	dec hl
 195+ 98B5 24            	inc h
 196+ 98B6 7C               ld a,h
 197+ 98B7 E6 07            and 7
 198+ 98B9 20 0A            jr nz,2F
 199+ 98BB 7D               ld a,l
 200+ 98BC C6 20            add a,$20
 201+ 98BE 6F               ld l,a
 202+ 98BF 38 04            jr c,2F
 203+ 98C1 7C               ld a,h
 204+ 98C2 D6 08            sub 8
 205+ 98C4 67               ld h,a
 206+ 98C5 7C           2 ld a,h
 207+ 98C6 FE 58            cp $58
 208+ 98C8 28 20            jr z,4F
 209+ 98CA D1               pop de
 210+ 98CB 7B           	ld a,e
 211+ 98CC AE           	xor (hl)
 212+ 98CD 77           	ld (hl),a
 213+ 98CE 23           	inc hl
 214+ 98CF 7A           	ld a,d
 215+ 98D0 AE           	xor (hl)
 216+ 98D1 77           	ld (hl),a
 217+ 98D2 2B           	dec hl
 218+ 98D3 24           	inc h
 219+ 98D4 7C               ld a,h
 220+ 98D5 E6 07            and 7
 221+ 98D7 20 0A            jr nz,3F
 222+ 98D9 7D               ld a,l
 223+ 98DA C6 20            add a,$20
 224+ 98DC 6F               ld l,a
 225+ 98DD 38 04            jr c,3F
 226+ 98DF 7C               ld a,h
 227+ 98E0 D6 08            sub 8
 228+ 98E2 67               ld h,a
 229+ 98E3 7C           3 ld a,h
 230+ 98E4 FE 58            cp $58
 231+ 98E6 28 02            jr z,4F
 232+ 98E8 10 C1            djnz 1B
 233+ 98EA ED 7B 0A 8A  4 ld sp,(Stack)
 234+ 98EE C9           	ret
 235+ 98EF
 236+ 98EF ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98F3 FD F9        	ld sp,iy
 238+ 98F5 06 08            ld b,8
 239+ 98F7 D1           1 pop de
 240+ 98F8 D1           	pop de
 241+ 98F9 7B           	ld a,e
 242+ 98FA AE           	xor (hl)
 243+ 98FB 77           	ld (hl),a
 244+ 98FC 24            	inc h
 245+ 98FD 7C               ld a,h
 246+ 98FE E6 07            and 7
 247+ 9900 20 0A            jr nz,2F
 248+ 9902 7D               ld a,l
 249+ 9903 C6 20            add a,$20
 250+ 9905 6F               ld l,a
 251+ 9906 38 04            jr c,2F
 252+ 9908 7C               ld a,h
 253+ 9909 D6 08            sub 8
 254+ 990B 67               ld h,a
 255+ 990C 7C           2 ld a,h
 256+ 990D FE 58            cp $58
 257+ 990F 28 1B            jr z,4F
 258+ 9911 D1               pop de
 259+ 9912 7A           	ld a,d
 260+ 9913 AE           	xor (hl)
 261+ 9914 77           	ld (hl),a
 262+ 9915 24           	inc h
 263+ 9916 7C               ld a,h
 264+ 9917 E6 07            and 7
 265+ 9919 20 0A            jr nz,3F
 266+ 991B 7D               ld a,l
 267+ 991C C6 20            add a,$20
 268+ 991E 6F               ld l,a
 269+ 991F 38 04            jr c,3F
 270+ 9921 7C               ld a,h
 271+ 9922 D6 08            sub 8
 272+ 9924 67               ld h,a
 273+ 9925 7C           3 ld a,h
 274+ 9926 FE 58            cp $58
 275+ 9928 28 02            jr z,4F
 276+ 992A 10 CB            djnz 1B
 277+ 992C ED 7B 0A 8A  4 ld sp,(Stack)
 278+ 9930 C9           	ret
 279+ 9931
 280+ 9931 ED 73 0A 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9935 FD F9        	ld sp,iy
 282+ 9937 06 08            ld b,8
 283+ 9939 D1           1 pop de
 284+ 993A 7B           	ld a,e
 285+ 993B AE           	xor (hl)
 286+ 993C 77           	ld (hl),a
 287+ 993D 23           	inc hl
 288+ 993E 7A           	ld a,d
 289+ 993F AE           	xor (hl)
 290+ 9940 77           	ld (hl),a
 291+ 9941 2B           	dec hl
 292+ 9942 24             	inc h
 293+ 9943 7C               ld a,h
 294+ 9944 E6 07            and 7
 295+ 9946 20 0A            jr nz,2F
 296+ 9948 7D               ld a,l
 297+ 9949 C6 20            add a,$20
 298+ 994B 6F               ld l,a
 299+ 994C 38 04            jr c,2F
 300+ 994E 7C               ld a,h
 301+ 994F D6 08            sub 8
 302+ 9951 67               ld h,a
 303+ 9952 7C           2 ld a,h
 304+ 9953 FE 58            cp $58
 305+ 9955 28 21            jr z,4F
 306+ 9957 D1               pop de
 307+ 9958 7A           	ld a,d
 308+ 9959 AE           	xor (hl)
 309+ 995A 77           	ld (hl),a
 310+ 995B 23           	inc hl
 311+ 995C D1               pop de
 312+ 995D 7B           	ld a,e
 313+ 995E AE           	xor (hl)
 314+ 995F 77           	ld (hl),a
 315+ 9960 2B           	dec hl
 316+ 9961 24           	inc h
 317+ 9962 7C               ld a,h
 318+ 9963 E6 07            and 7
 319+ 9965 20 0A            jr nz,3F
 320+ 9967 7D               ld a,l
 321+ 9968 C6 20            add a,$20
 322+ 996A 6F               ld l,a
 323+ 996B 38 04            jr c,3F
 324+ 996D 7C               ld a,h
 325+ 996E D6 08            sub 8
 326+ 9970 67               ld h,a
 327+ 9971 7C           3 ld a,h
 328+ 9972 FE 58            cp $58
 329+ 9974 28 02            jr z,4F
 330+ 9976 10 C1            djnz 1B
 331+ 9978 ED 7B 0A 8A  4 ld sp,(Stack)
 332+ 997C C9           	ret
 333+ 997D
 334+ 997D ED 73 0A 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9981 FD F9        	ld sp,iy
 336+ 9983 06 08            ld b,8
 337+ 9985 D1           1 pop de
 338+ 9986 7B           	ld a,e
 339+ 9987 AE           	xor (hl)
 340+ 9988 77           	ld (hl),a
 341+ 9989 24            	inc h
 342+ 998A 7C               ld a,h
 343+ 998B E6 07            and 7
 344+ 998D 20 0A            jr nz,2F
 345+ 998F 7D               ld a,l
 346+ 9990 C6 20            add a,$20
 347+ 9992 6F               ld l,a
 348+ 9993 38 04            jr c,2F
 349+ 9995 7C               ld a,h
 350+ 9996 D6 08            sub 8
 351+ 9998 67               ld h,a
 352+ 9999 7C           2 ld a,h
 353+ 999A FE 58            cp $58
 354+ 999C 28 1C            jr z,4F
 355+ 999E D1               pop de
 356+ 999F 7A           	ld a,d
 357+ 99A0 AE           	xor (hl)
 358+ 99A1 77           	ld (hl),a
 359+ 99A2 24           	inc h
 360+ 99A3 7C               ld a,h
 361+ 99A4 E6 07            and 7
 362+ 99A6 20 0A            jr nz,3F
 363+ 99A8 7D               ld a,l
 364+ 99A9 C6 20            add a,$20
 365+ 99AB 6F               ld l,a
 366+ 99AC 38 04            jr c,3F
 367+ 99AE 7C               ld a,h
 368+ 99AF D6 08            sub 8
 369+ 99B1 67               ld h,a
 370+ 99B2 7C           3 ld a,h
 371+ 99B3 FE 58            cp $58
 372+ 99B5 28 03            jr z,4F
 373+ 99B7 D1               pop de
 374+ 99B8 10 CB            djnz 1B
 375+ 99BA ED 7B 0A 8A  4 ld sp,(Stack)
 376+ 99BE C9           	ret
 377+ 99BF
 378+ 99BF              ; ---------------------------------------------------
 379+ 99BF              ;
 380+ 99BF              ;   27/02/23
 381+ 99BF              ;
 382+ 99BF              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99BF              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99BF              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99BF
 386+ 99BF ED 73 0A 8A  Pinta_Disparo ld (Stack),sp
 387+ 99C3 FD F9            ld sp,iy
 388+ 99C5 06 03            ld b,3
 389+ 99C7 D1           1 pop de
 390+ 99C8 7B               ld a,e
 391+ 99C9 AE               xor (hl)
 392+ 99CA 77               ld (hl),a
 393+ 99CB 23               inc hl
 394+ 99CC 7A               ld a,d
 395+ 99CD AE               xor (hl)
 396+ 99CE 77               ld (hl),a
 397+ 99CF 2B               dec hl
 398+ 99D0
 399+ 99D0 24               inc h
 400+ 99D1 7C               ld a,h
 401+ 99D2 E6 07            and 7
 402+ 99D4 20 0A            jr nz,2F
 403+ 99D6 7D               ld a,l
 404+ 99D7 C6 20            add a,$20
 405+ 99D9 6F               ld l,a
 406+ 99DA 38 04            jr c,2F
 407+ 99DC 7C               ld a,h
 408+ 99DD D6 08            sub 8
 409+ 99DF 67               ld h,a
 410+ 99E0 7C           2 ld a,h
 411+ 99E1 FE 58            cp $58
 412+ 99E3 28 02            jr z,3F
 413+ 99E5
 414+ 99E5 10 E0            djnz 1B
 415+ 99E7 ED 7B 0A 8A  3 ld sp,(Stack)
 416+ 99EB C9               ret
 417+ 99EC
# file closed: Rutinas_de_impresion_sprites.asm
1488  99EC              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99EC              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99EC              ;
   3+ 99EC              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99EC              ;
   5+ 99EC              ; *****************************************************************************************************************************************************************************************
   6+ 99EC              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99EC
   8+ 99EC 7C           calcula_tercio ld a,h
   9+ 99ED E6 18        	and $18
  10+ 99EF CB 2F        	sra a
  11+ 99F1 CB 2F        	sra a
  12+ 99F3 CB 2F        	sra a
  13+ 99F5 C9           	ret
  14+ 99F6
# file closed: calcula_tercio.asm
1489  99F6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99F6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99F6              ;
   3+ 99F6              ;
   4+ 99F6              ;	CLS.
   5+ 99F6              ;
   6+ 99F6              ;	Limpia la pantalla y define sus atributos.
   7+ 99F6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99F6              ;
   9+ 99F6              ;	COLORES: 0 ..... NEGRO
  10+ 99F6              ;    		 1 ..... AZUL
  11+ 99F6              ; 			 2 ..... ROJO
  12+ 99F6              ;			 3 ..... MAGENTA
  13+ 99F6              ; 			 4 ..... VERDE
  14+ 99F6              ; 			 5 ..... CIAN
  15+ 99F6              ;			 6 ..... AMARILLO
  16+ 99F6              ; 			 7 ..... BLANCO
  17+ 99F6              ;
  18+ 99F6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99F6              ;
  20+ 99F6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99F6
  22+ 99F6
  23+ 99F6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99F9 11 01 40     	LD DE,$4001
  25+ 99FC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99FF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9A01 ED B0        	LDIR
  28+ 9A03 01 FF 02     	LD BC,767
  29+ 9A06 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9A07 ED B0        	LDIR
  31+ 9A09 C9           	ret
  32+ 9A0A
# file closed: Cls.asm
1490  9A0A              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A0A              ; ******************************************************************************************************************************************************************************************
   2+ 9A0A              ;
   3+ 9A0A              ;   20/05/23
   4+ 9A0A              ;
   5+ 9A0A              ;	Recompone_posicion_inicio
   6+ 9A0A              ;
   7+ 9A0A              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9A0A              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9A0A              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9A0A              ;	_ a una u otra rutina.
  11+ 9A0A
  12+ 9A0A              Recompone_posicion_inicio
  13+ 9A0A
  14+ 9A0A 2A C8 89     	ld hl,(Posicion_inicio)
  15+ 9A0D 7D           	ld a,l
  16+ 9A0E E6 1F        	and $1f
  17+ 9A10 28 16        	jr z,1F
  18+ 9A12
  19+ 9A12 FE 1F        	cp $1f
  20+ 9A14 28 0D        	jr z,3F
  21+ 9A16
  22+ 9A16 21 F7 89     	ld hl,Ctrl_2
  23+ 9A19 CB C6        	set 0,(hl)
  24+ 9A1B 2A BA 89     	ld hl,(Puntero_objeto)
  25+ 9A1E 22 FA 89     	ld (Repone_puntero_objeto),hl
  26+ 9A21 18 08        	jr 2F
  27+ 9A23
  28+ 9A23 CD C4 9B     3 call Mov_left
  29+ 9A26 18 03        	jr 2F
  30+ 9A28
  31+ 9A28 CD A6 9A     1 call Mov_right
  32+ 9A2B 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A2E 22 BA 89     	ld (Puntero_objeto),hl
  34+ 9A31 C9           	ret
  35+ 9A32
  36+ 9A32              ; ******************************************************************************************************************************************************************************************
  37+ 9A32              ;
  38+ 9A32              ;   27/05/23
  39+ 9A32              ;
  40+ 9A32              ;	Mov_down
  41+ 9A32              ;
  42+ 9A32              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A32              ;
  44+ 9A32              ;
  45+ 9A32              Mov_down
  46+ 9A32
  47+ 9A32 CD 94 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A35              ;																	; _ repone (Puntero_objeto).
  49+ 9A35 21 E4 89     	ld hl,Ctrl_0
  50+ 9A38 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A3A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A3A              ; 																	; _ en el caso de que no lo haya.
  53+ 9A3A 3A CE 89     	ld a,(Vel_down)
  54+ 9A3D 47           	ld b,a
  55+ 9A3E 2A B8 89         ld hl,(Posicion_actual)
  56+ 9A41 CD EC 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A44 E6 02        	and 2
  58+ 9A46 28 0F        	jr z,1F
  59+ 9A48
  60+ 9A48              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A48              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A48
  63+ 9A48 7C           	ld a,h
  64+ 9A49 FE 57        	cp $57
  65+ 9A4B 20 0A        	jr nz,1F
  66+ 9A4D
  67+ 9A4D 7D           	ld a,l
  68+ 9A4E C6 20        	add $20
  69+ 9A50 30 05        	jr nc,1F
  70+ 9A52
  71+ 9A52              ; ------------------------------
  72+ 9A52              ;	call Reaparece_arriba
  73+ 9A52 CD 51 9D     	call Reinicio
  74+ 9A55              ; ------------------------------
  75+ 9A55
  76+ 9A55 18 08        	jr 3F
  77+ 9A57 CD 18 97     1 call NextScan
  78+ 9A5A 22 B8 89     	ld (Posicion_actual),hl
  79+ 9A5D 10 E2            djnz 2B
  80+ 9A5F CD 77 9D     3 call Genera_coordenadas
  81+ 9A62 C9           	ret
  82+ 9A63
  83+ 9A63              ; ******************************************************************************************************************************************************************************************
  84+ 9A63              ;
  85+ 9A63              ;   27/05/23
  86+ 9A63              ;
  87+ 9A63              ;	Mov_up
  88+ 9A63              ;
  89+ 9A63              ; 	Mueve el Sprite hacia arriba.
  90+ 9A63              ;
  91+ 9A63              ;
  92+ 9A63              Mov_up
  93+ 9A63
  94+ 9A63 CD 94 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A66              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A66 21 E4 89     	ld hl,Ctrl_0
  97+ 9A69 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A6B              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A6B              ; 																		; _ en el caso de que no lo haya.
 100+ 9A6B 3A CD 89     	ld a,(Vel_up)
 101+ 9A6E 47           	ld b,a
 102+ 9A6F 2A B8 89     	ld hl,(Posicion_actual)
 103+ 9A72 CD EC 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A75 A7           	and a
 105+ 9A76 20 10        	jr nz,1F
 106+ 9A78
 107+ 9A78              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A78              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A78
 110+ 9A78 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A79 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A7B 20 0B            jr nz,1F
 113+ 9A7D 7D               ld a,l
 114+ 9A7E D6 20            sub $20
 115+ 9A80 30 06            jr nc,1F
 116+ 9A82 25               dec h
 117+ 9A83
 118+ 9A83              ; -----------------------------
 119+ 9A83 CD 32 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A86              ;	call Reinicio
 121+ 9A86              ; -----------------------------
 122+ 9A86
 123+ 9A86 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A88 CD 27 97     1 call PreviousScan
 125+ 9A8B 22 B8 89     	ld (Posicion_actual),hl
 126+ 9A8E 10 E2            djnz 3B
 127+ 9A90 CD 77 9D     2 call Genera_coordenadas
 128+ 9A93 C9           	ret
 129+ 9A94
 130+ 9A94              ; -----------------------------
 131+ 9A94              ;
 132+ 9A94              ;	27/5/23
 133+ 9A94              ;
 134+ 9A94              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A94              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A94              ;
 137+ 9A94              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A94              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A94              ;
 140+ 9A94              ;	Modifica: A y (Puntero_objeto).
 141+ 9A94
 142+ 9A94 3A F7 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A97 CB 47        	bit 0,a
 144+ 9A99 C8           	ret z
 145+ 9A9A CB 87        	res 0,a
 146+ 9A9C 32 F7 89     	ld (Ctrl_2),a
 147+ 9A9F 2A FA 89     	ld hl,(Repone_puntero_objeto)
 148+ 9AA2 22 BA 89     	ld (Puntero_objeto),hl
 149+ 9AA5 C9           	ret
 150+ 9AA6
 151+ 9AA6              ; ******************************************************************************************************************************************************************************************
 152+ 9AA6              ;
 153+ 9AA6              ;	19/10/22
 154+ 9AA6              ;
 155+ 9AA6              ;	Mov_right.
 156+ 9AA6              ;
 157+ 9AA6              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9AA6              ;
 159+ 9AA6
 160+ 9AA6 21 E4 89     Mov_right ld hl,Ctrl_0
 161+ 9AA9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9AAB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9AAB              ; 																	; _ en el caso de que no lo haya.
 164+ 9AAB 3A E4 89     	ld a,(Ctrl_0)
 165+ 9AAE CB 77        	bit 6,a
 166+ 9AB0 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9AB2
 168+ 9AB2 CD E0 9C     	call Stop_Amadeus_right
 169+ 9AB5 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9AB6 18 4D        	jr 8F
 171+ 9AB8
 172+ 9AB8 3A BC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9ABB FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9ABD 20 46        	jr nz,8F
 175+ 9ABF
 176+ 9ABF 3A BE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9AC2 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9AC3 28 40        	jr z,8F
 179+ 9AC5
 180+ 9AC5              ; ---------- ---------- ----------
 181+ 9AC5              ;
 182+ 9AC5              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9AC5
 184+ 9AC5 3A CC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9AC8 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9ACA 28 11        	jr z,1F
 187+ 9ACC 38 06        	jr c,6F
 188+ 9ACE FE 04        	cp 4
 189+ 9AD0 28 14        	jr z,7F
 190+ 9AD2 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AD4
 192+ 9AD4              ; ---------- ---------- ----------
 193+ 9AD4              ;
 194+ 9AD4              ; Perfiles de velocidad
 195+ 9AD4              ;
 196+ 9AD4
 197+ 9AD4 3A BE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AD7 FE FE        	cp $fe
 199+ 9AD9 20 2A        	jr nz,8F
 200+ 9ADB 18 10        	jr 3F
 201+ 9ADD 3A BE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AE0 FE FD        	cp $fd
 203+ 9AE2 20 21        	jr nz,8F
 204+ 9AE4 18 07        	jr 3F
 205+ 9AE6 3A BE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AE9 FE FB        	cp $fb
 207+ 9AEB 20 18        	jr nz,8F
 208+ 9AED
 209+ 9AED              ; ---------- ---------- ----------
 210+ 9AED
 211+ 9AED              3
 212+ 9AED CD 20 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AF0              ;	call Reinicio
 214+ 9AF0
 215+ 9AF0              ; ---------- ---------- ----------
 216+ 9AF0              ;
 217+ 9AF0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AF0
 219+ 9AF0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AF2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AF3 CD 0C 9B     	call DESPLZ_DER
 222+ 9AF6 C1           	pop bc
 223+ 9AF7 10 F9        	djnz 5B
 224+ 9AF9 2A B8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AFC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AFD 22 B8 89     	ld (Posicion_actual),hl
 227+ 9B00 CD 77 9D     	call Genera_coordenadas
 228+ 9B03 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9B05
 230+ 9B05              ; ---------- ---------- ----------
 231+ 9B05
 232+ 9B05 2A B8 89     8 ld hl,(Posicion_actual)
 233+ 9B08 CD 0C 9B     	call DESPLZ_DER
 234+ 9B0B C9           2 ret
 235+ 9B0C
 236+ 9B0C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9B0C              ;
 238+ 9B0C              ;	22/9/22
 239+ 9B0C              ;
 240+ 9B0C
 241+ 9B0C CD 1B 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9B0F CD 67 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9B12 CD 90 9B         call Ciclo_completo
 244+ 9B15 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B18 CB FE        	set 7,(hl)
 246+ 9B1A C9           	ret
 247+ 9B1B
 248+ 9B1B              ; ******************************************************************************************************************************************************************************************
 249+ 9B1B              ;	15/02/23
 250+ 9B1B              ;
 251+ 9B1B
 252+ 9B1B 3A CC 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9B1E 47           	ld b,a
 254+ 9B1F 2A C4 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B22 23           1 inc hl
 256+ 9B23 23           	inc hl
 257+ 9B24 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B26 22 C4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B29 CD 8A 8D     	call Extrae_address
 260+ 9B2C 22 BA 89     	ld (Puntero_objeto),hl
 261+ 9B2F
 262+ 9B2F              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B2F
 264+ 9B2F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B2F              ; Cuántos movimientos hemos hecho ??
 266+ 9B2F              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B2F
 268+ 9B2F 2A C0 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B32 EB           	ex de,hl
 270+ 9B33 A7           	and a
 271+ 9B34 ED 52        	sbc hl,de
 272+ 9B36 CB 3D        	srl l
 273+ 9B38 3E 08        6 ld a,8
 274+ 9B3A 95           	sub l
 275+ 9B3B 30 1E        	jr nc,3F
 276+ 9B3D
 277+ 9B3D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B3D              ; B="0".
 279+ 9B3D
 280+ 9B3D 04           4 inc b
 281+ 9B3E 3C           	inc a
 282+ 9B3F 20 FC        	jr nz,4B
 283+ 9B41 78           	ld a,b
 284+ 9B42 08           	ex af,af
 285+ 9B43 2A C0 89     	ld hl,(Indice_Sprite_der)
 286+ 9B46 23           5 inc hl
 287+ 9B47 23           	inc hl
 288+ 9B48 10 FC        	djnz 5B
 289+ 9B4A 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B4D CD 8A 8D     	call Extrae_address
 291+ 9B50 22 BA 89     	ld (Puntero_objeto),hl
 292+ 9B53
 293+ 9B53              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B53              ; _(Posicion_actual).
 295+ 9B53
 296+ 9B53 21 B8 89     	ld hl,Posicion_actual
 297+ 9B56 34           	inc (hl)
 298+ 9B57 08               ex af,af
 299+ 9B58 6F           	ld l,a
 300+ 9B59 18 DD        	jr 6B
 301+ 9B5B
 302+ 9B5B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B5B
 304+ 9B5B 47           3 ld b,a
 305+ 9B5C 2A C2 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B5F 23           2 inc hl
 307+ 9B60 23           	inc hl
 308+ 9B61 10 FC        	djnz 2B
 309+ 9B63 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B66 C9           8 ret
 311+ 9B67
 312+ 9B67              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B67              ;
 314+ 9B67              ;	24/7/22
 315+ 9B67              ;
 316+ 9B67              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B67              ;
 318+ 9B67              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B67              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B67              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B67
 322+ 9B67 3A BE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B6A A7           	and a
 324+ 9B6B 20 1F        	jr nz,1F
 325+ 9B6D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B6F 32 BE 89         ld (CTRL_DESPLZ),a
 327+ 9B72
 328+ 9B72 21 B7 89     	ld hl,Columns
 329+ 9B75 34           	inc (hl)
 330+ 9B76 3A CA 89     	ld a,(Cuad_objeto)
 331+ 9B79 E6 01        	and 1
 332+ 9B7B 28 0F        	jr z,1F
 333+ 9B7D 2A B8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B80 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B81 22 B8 89     	ld (Posicion_actual),hl
 336+ 9B84 CD 77 9D     	call Genera_coordenadas
 337+ 9B87 CD EC 9C     	call Inc_CTRL_DESPLZ
 338+ 9B8A 18 03        	jr 2F
 339+ 9B8C CD EC 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B8F C9           2 ret
 341+ 9B90
 342+ 9B90              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B90              ;
 344+ 9B90              ;	24/7/22
 345+ 9B90              ;
 346+ 9B90              ;	Ciclo_completo.
 347+ 9B90              ;
 348+ 9B90              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B90              ;
 350+ 9B90              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B90              ; 	Decrementamos (Columns).
 352+ 9B90              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B90              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B90
 355+ 9B90
 356+ 9B90 3A BE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B93 FE FF        	cp $ff
 358+ 9B95 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B97 E6 F0        	and $f0
 360+ 9B99 20 28        	jr nz,3F
 361+ 9B9B
 362+ 9B9B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B9B
 364+ 9B9B 3A BE 89     	ld a,(CTRL_DESPLZ)
 365+ 9B9E 47           	ld b,a
 366+ 9B9F 3E F8        	ld a,$f8
 367+ 9BA1 80           	add b
 368+ 9BA2 32 BE 89     	ld (CTRL_DESPLZ),a
 369+ 9BA5 18 1C        	jr 3F
 370+ 9BA7 21 B7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9BAA 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9BAB AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9BAC 32 BE 89     	ld (CTRL_DESPLZ),a
 374+ 9BAF 3A CA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9BB2 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9BB4 20 0A        	jr nz,2F
 377+ 9BB6 2A B8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BB9 23           	inc hl
 379+ 9BBA 22 B8 89     	ld (Posicion_actual),hl
 380+ 9BBD CD 77 9D     	call Genera_coordenadas
 381+ 9BC0
 382+ 9BC0              ; Inicia el puntero de Sprite.
 383+ 9BC0
 384+ 9BC0 CD A1 8D     2 call Inicia_puntero_objeto_der
 385+ 9BC3 C9           3 ret
 386+ 9BC4
 387+ 9BC4              ; ******************************************************************************************************************************************************************************************
 388+ 9BC4              ;
 389+ 9BC4              ;	15/02/23
 390+ 9BC4              ;
 391+ 9BC4              ;	Mov_left.
 392+ 9BC4              ;
 393+ 9BC4              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BC4              ;
 395+ 9BC4 21 E4 89     Mov_left ld hl,Ctrl_0
 396+ 9BC7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BC9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BC9              ; 																	; _ en el caso de que no lo haya.
 399+ 9BC9 3A E4 89     	ld a,(Ctrl_0)
 400+ 9BCC CB 77        	bit 6,a
 401+ 9BCE 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BD0
 403+ 9BD0 CD E6 9C     	call Stop_Amadeus_left
 404+ 9BD3 C8           	ret z
 405+ 9BD4 20 4A        	jr nz,8F
 406+ 9BD6
 407+ 9BD6 3A BC 89     11 ld a,(Coordenada_X)
 408+ 9BD9 A7           	and a
 409+ 9BDA 20 44        	jr nz,8F
 410+ 9BDC
 411+ 9BDC 3A BE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BDF A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BE0 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BE2
 415+ 9BE2              ; ---------- ---------- ----------
 416+ 9BE2
 417+ 9BE2 3A CB 89     	ld a,(Vel_left)
 418+ 9BE5 FE 02        	cp 2
 419+ 9BE7 28 0F        	jr z,1F
 420+ 9BE9 38 04        	jr c,6F
 421+ 9BEB FE 04        	cp 4
 422+ 9BED 28 12        	jr z,7F
 423+ 9BEF
 424+ 9BEF              ; ---------- ---------- ----------
 425+ 9BEF
 426+ 9BEF 3A BE 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BF2 FE F8        	cp $f8
 428+ 9BF4 20 2A        	jr nz,8F
 429+ 9BF6 18 10        	jr 4F
 430+ 9BF8 3A BE 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BFB FE F9        	cp $f9
 432+ 9BFD 20 21        	jr nz,8F
 433+ 9BFF 18 07        	jr 4F
 434+ 9C01 3A BE 89     7 ld a,(CTRL_DESPLZ)
 435+ 9C04 FE FB        	cp $fb
 436+ 9C06 20 18        	jr nz,8F
 437+ 9C08
 438+ 9C08              ; ---------- ---------- ----------
 439+ 9C08
 440+ 9C08              4
 441+ 9C08 CD 0E 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9C0B              ;	call Reinicio
 443+ 9C0B
 444+ 9C0B              ; ---------- ---------- ----------
 445+ 9C0B
 446+ 9C0B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9C0D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9C0E
 449+ 9C0E              ;	ld hl,(Indice_Sprite_izq)
 450+ 9C0E              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9C0E
 452+ 9C0E CD 27 9C     	call DESPLZ_IZQ
 453+ 9C11 C1           	pop bc
 454+ 9C12 10 F9        	djnz 5B
 455+ 9C14 2A B8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9C17 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9C18 22 B8 89     	ld (Posicion_actual),hl
 458+ 9C1B CD 77 9D     	call Genera_coordenadas
 459+ 9C1E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9C20
 461+ 9C20              ; ---------- ---------- ----------
 462+ 9C20
 463+ 9C20              ; Movemos, no hay recolocación.
 464+ 9C20
 465+ 9C20 2A B8 89     8 ld hl,(Posicion_actual)
 466+ 9C23 CD 27 9C     	call DESPLZ_IZQ
 467+ 9C26 C9           2 ret
 468+ 9C27
 469+ 9C27              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C27              ;
 471+ 9C27              ;	22/9/22
 472+ 9C27
 473+ 9C27              DESPLZ_IZQ
 474+ 9C27
 475+ 9C27 CD 36 9C     	call Desplaza_izquierda
 476+ 9C2A CD 82 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C2D CD AA 9C     	call Ciclo_completo_2
 478+ 9C30 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C33 CB BE        	res 7,(hl)
 480+ 9C35 C9           	ret
 481+ 9C36
 482+ 9C36              Desplaza_izquierda
 483+ 9C36
 484+ 9C36 3A CB 89     	ld a,(Vel_left)
 485+ 9C39 47           	ld b,a
 486+ 9C3A 2A C6 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C3D 23           1 inc hl
 488+ 9C3E 23           	inc hl
 489+ 9C3F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C41 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C44 CD 8A 8D     	call Extrae_address
 492+ 9C47 22 BA 89     	ld (Puntero_objeto),hl
 493+ 9C4A
 494+ 9C4A              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C4A
 496+ 9C4A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C4A              ; Cuántos movimientos hemos hecho ??
 498+ 9C4A              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C4A
 500+ 9C4A 2A C2 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C4D EB           	ex de,hl
 502+ 9C4E A7           	and a
 503+ 9C4F ED 52        	sbc hl,de
 504+ 9C51 CB 3D        	srl l
 505+ 9C53 3E 08        6 ld a,8
 506+ 9C55 95           	sub l
 507+ 9C56 30 1E        	jr nc,3F
 508+ 9C58
 509+ 9C58              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C58              ; B="0".
 511+ 9C58
 512+ 9C58 04           4 inc b
 513+ 9C59 3C           	inc a
 514+ 9C5A 20 FC        	jr nz,4B
 515+ 9C5C 78           	ld a,b
 516+ 9C5D 08           	ex af,af
 517+ 9C5E 2A C2 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C61 23           5 inc hl
 519+ 9C62 23           	inc hl
 520+ 9C63 10 FC        	djnz 5B
 521+ 9C65 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C68 CD 8A 8D     	call Extrae_address
 523+ 9C6B 22 BA 89     	ld (Puntero_objeto),hl
 524+ 9C6E
 525+ 9C6E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C6E              ; _(Posicion_actual).
 527+ 9C6E
 528+ 9C6E 21 B8 89     	ld hl,Posicion_actual
 529+ 9C71 35           	dec (hl)
 530+ 9C72 08           	ex af,af
 531+ 9C73 6F           	ld l,a
 532+ 9C74 18 DD        	jr 6B
 533+ 9C76
 534+ 9C76              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C76
 536+ 9C76 47           3 ld b,a
 537+ 9C77 2A C0 89     	ld hl,(Indice_Sprite_der)
 538+ 9C7A 23           2 inc hl
 539+ 9C7B 23           	inc hl
 540+ 9C7C 10 FC        	djnz 2B
 541+ 9C7E 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C81 C9           8 ret
 543+ 9C82
 544+ 9C82              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C82              ;
 546+ 9C82              ;	modifica_parametros_1er_DESPLZ
 547+ 9C82              ;
 548+ 9C82              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C82              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C82              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C82
 552+ 9C82 3A BE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C85 A7           	and a
 554+ 9C86 20 1E        	jr nz,1F
 555+ 9C88 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C89 32 BE 89         ld (CTRL_DESPLZ),a
 557+ 9C8C 21 B7 89     	ld hl,Columns
 558+ 9C8F 34           	inc (hl)
 559+ 9C90 3A CA 89     	ld a,(Cuad_objeto)
 560+ 9C93 E6 01        	and 1
 561+ 9C95 20 0F        	jr nz,1F
 562+ 9C97 2A B8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C9A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C9B 22 B8 89     	ld (Posicion_actual),hl
 565+ 9C9E CD 77 9D     	call Genera_coordenadas
 566+ 9CA1 CD FD 9C     	call Dec_CTRL_DESPLZ
 567+ 9CA4 18 03        	jr 2F
 568+ 9CA6 CD FD 9C     1 call Dec_CTRL_DESPLZ
 569+ 9CA9 C9           2 ret
 570+ 9CAA
 571+ 9CAA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9CAA
 573+ 9CAA 3A BE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9CAD FE F7        	cp $f7
 575+ 9CAF 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9CB1 30 2C        	jr nc,3F
 577+ 9CB3
 578+ 9CB3              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9CB3
 580+ 9CB3 06 00        	ld b,0
 581+ 9CB5 04           4 inc b
 582+ 9CB6 3C           	inc a
 583+ 9CB7 FE F7        	cp $f7
 584+ 9CB9 20 FA        	jr nz,4B
 585+ 9CBB 3E FF        	ld a,$ff
 586+ 9CBD 90           	sub b
 587+ 9CBE 32 BE 89     	ld (CTRL_DESPLZ),a
 588+ 9CC1 18 1C        	jr 3F
 589+ 9CC3
 590+ 9CC3              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CC3
 592+ 9CC3 21 B7 89     1 ld hl,Columns
 593+ 9CC6 35           	dec (hl)
 594+ 9CC7 AF           	xor a
 595+ 9CC8 32 BE 89     	ld (CTRL_DESPLZ),a
 596+ 9CCB 3A CA 89     	ld a,(Cuad_objeto)
 597+ 9CCE E6 01        	and 1
 598+ 9CD0 28 0A        	jr z,2F
 599+ 9CD2 2A B8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CD5 2B           	dec hl
 601+ 9CD6 22 B8 89     	ld (Posicion_actual),hl
 602+ 9CD9 CD 77 9D     	call Genera_coordenadas
 603+ 9CDC
 604+ 9CDC              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CDC
 606+ 9CDC CD B4 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CDF C9           3 ret
 608+ 9CE0
 609+ 9CE0              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CE0              ;
 611+ 9CE0              ;	19/10/22
 612+ 9CE0              ;
 613+ 9CE0              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CE0              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CE0
 616+ 9CE0 3A BC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CE3 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CE5 C9           	ret
 619+ 9CE6
 620+ 9CE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CE6              ;
 622+ 9CE6              ;	19/10/22
 623+ 9CE6              ;
 624+ 9CE6              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CE6              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CE6
 627+ 9CE6 3A BC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CE9 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CEB C9           	ret
 630+ 9CEC
 631+ 9CEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CEC              ;
 633+ 9CEC              ;	24/7/22
 634+ 9CEC              ;
 635+ 9CEC              ;	Inc_CTRL_DESPLZ
 636+ 9CEC              ;
 637+ 9CEC              ;
 638+ 9CEC              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CEC
 640+ 9CEC 21 BE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CEF 3A CC 89     	ld a,(Vel_right)
 642+ 9CF2 A7           	and a
 643+ 9CF3 28 06        	jr z,1F
 644+ 9CF5 47           	ld b,a
 645+ 9CF6 34           3 inc (hl)
 646+ 9CF7 10 FD        	djnz 3B
 647+ 9CF9 18 01        	jr 2F
 648+ 9CFB 34           1 inc (hl)
 649+ 9CFC C9           2 ret
 650+ 9CFD
 651+ 9CFD              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CFD              ;
 653+ 9CFD              ;	5/2/23
 654+ 9CFD              ;
 655+ 9CFD              ;	Dec_CTRL_DESPLZ
 656+ 9CFD              ;
 657+ 9CFD              ;
 658+ 9CFD              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CFD
 660+ 9CFD 21 BE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9D00 3A CB 89     	ld a,(Vel_left)
 662+ 9D03 A7           	and a
 663+ 9D04 28 06        	jr z,1F
 664+ 9D06 47           	ld b,a
 665+ 9D07 35           3 dec (hl)
 666+ 9D08 10 FD        	djnz 3B
 667+ 9D0A 18 01        	jr 2F
 668+ 9D0C 35           1 dec (hl)
 669+ 9D0D C9           2 ret
 670+ 9D0E
 671+ 9D0E              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9D0E
 673+ 9D0E 2A B8 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9D11 01 1F 00     	ld bc,31
 675+ 9D14 A7           	and a
 676+ 9D15 ED 4A        	adc hl,bc
 677+ 9D17 22 B8 89     	ld (Posicion_actual),hl
 678+ 9D1A 21 E4 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9D1D CB C6        	set 0,(hl)
 680+ 9D1F C9           	ret
 681+ 9D20
 682+ 9D20              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9D20
 684+ 9D20 2A B8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D23 01 1F 00     	ld bc,31
 686+ 9D26 A7           	and a
 687+ 9D27 ED 42        	sbc hl,bc
 688+ 9D29 22 B8 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D2C 21 E4 89     	ld hl,Ctrl_0
 690+ 9D2F CB CE        	set 1,(hl)
 691+ 9D31 C9           	ret
 692+ 9D32
 693+ 9D32              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D32
 695+ 9D32 24           Reaparece_abajo inc h
 696+ 9D33 01 E0 17     	ld bc,$17e0
 697+ 9D36 A7           	and a
 698+ 9D37 ED 4A        	adc hl,bc
 699+ 9D39 22 B8 89     	ld (Posicion_actual),hl
 700+ 9D3C 21 E4 89     	ld hl,Ctrl_0
 701+ 9D3F CB D6        	set 2,(hl)
 702+ 9D41 C9           	ret
 703+ 9D42
 704+ 9D42              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D42
 706+ 9D42 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D45 A7           	and a
 708+ 9D46 ED 42        	sbc hl,bc
 709+ 9D48 22 B8 89     	ld (Posicion_actual),hl
 710+ 9D4B 21 E4 89     	ld hl,Ctrl_0
 711+ 9D4E CB DE        	set 3,(hl)
 712+ 9D50 C9           	ret
 713+ 9D51
 714+ 9D51              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D51              ;
 716+ 9D51              ;	15/07/23
 717+ 9D51
 718+ 9D51              Reinicio
 719+ 9D51
 720+ 9D51              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D51
 722+ 9D51 AF           	xor a
 723+ 9D52 21 EB 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D55 CD 73 9D     	call Limpia_contenido_hl
 725+ 9D58
 726+ 9D58 21 B8 89     	ld hl,Posicion_actual
 727+ 9D5B CD 73 9D     	call Limpia_contenido_hl
 728+ 9D5E
 729+ 9D5E CD 94 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D61 CD 1E A0     	call Inicia_Puntero_mov
 731+ 9D64
 732+ 9D64 21 ED 89     	ld hl,Incrementa_puntero
 733+ 9D67 06 05        	ld b,5
 734+ 9D69 77           1 ld (hl),a
 735+ 9D6A 23           	inc hl
 736+ 9D6B 10 FC        	djnz 1B
 737+ 9D6D
 738+ 9D6D 21 F7 89     	ld hl,Ctrl_2
 739+ 9D70 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D72
 741+ 9D72 C9           	ret
 742+ 9D73
 743+ 9D73 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D74 23           	inc hl
 745+ 9D75 77           	ld (hl),a
 746+ 9D76 C9           	ret
 747+ 9D77
 748+ 9D77
# file closed: Direcciones.asm
1491  9D77              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D77              ; ------------------------------------------------------------------------
   2+ 9D77              ;
   3+ 9D77              ;	02/04/23
   4+ 9D77              ;
   5+ 9D77              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D77              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D77              ;
   8+ 9D77              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D77              ;
  10+ 9D77              ;	Modifica: A,BC y DE.
  11+ 9D77
  12+ 9D77 C5           Genera_coordenadas push bc
  13+ 9D78 E5           	push hl
  14+ 9D79 D5           	push de
  15+ 9D7A
  16+ 9D7A 2A B8 89     	ld hl,(Posicion_actual)
  17+ 9D7D
  18+ 9D7D 7D           	ld a,l
  19+ 9D7E E6 1F        	and $1f
  20+ 9D80 32 BC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D83
  22+ 9D83 CD EC 99     	call calcula_tercio
  23+ 9D86 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D87
  25+ 9D87 1E 00        	ld e,0
  26+ 9D89 7D           	ld a,l
  27+ 9D8A E6 E0        	and $e0
  28+ 9D8C 28 01        	jr z,1F
  29+ 9D8E 04           	inc b
  30+ 9D8F
  31+ 9D8F 04           1 inc b
  32+ 9D90 05           	dec b
  33+ 9D91 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D93              ;														; _ , salimos.
  35+ 9D93 1C           3 inc e
  36+ 9D94 D6 20        	sub 32
  37+ 9D96 20 FB        	jr nz,3B
  38+ 9D98 10 F5        	djnz 1B
  39+ 9D9A
  40+ 9D9A 7B           2 ld a,e
  41+ 9D9B 32 BD 89     	ld (Coordenada_y),a
  42+ 9D9E
  43+ 9D9E D1           	pop de
  44+ 9D9F E1           	pop hl
  45+ 9DA0 C1           	pop bc
  46+ 9DA1
  47+ 9DA1 C9           	ret
  48+ 9DA2
  49+ 9DA2              ; ------------------------------------------------------------------------
  50+ 9DA2              ;	28/05/23
  51+ 9DA2              ;
  52+ 9DA2              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9DA2              ;	Fila superior "0", Columna izquierda "0".
  54+ 9DA2              ;
  55+ 9DA2              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9DA2              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9DA2              ;
  58+ 9DA2              ;		DE="$120d"
  59+ 9DA2              ;
  60+ 9DA2              ;		D, (Coordenada_X), Columnas, $12
  61+ 9DA2              ;		E, (Coordenada_y), Filas, $0d
  62+ 9DA2              ;
  63+ 9DA2              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9DA2
  65+ 9DA2              ;	Modifica: A,BC y DE.
  66+ 9DA2
  67+ 9DA2
  68+ 9DA2              Genera_coordenadas_disparo
  69+ 9DA2
  70+ 9DA2              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9DA2
  72+ 9DA2 7D           	ld a,l
  73+ 9DA3 E6 1F        	and $1f
  74+ 9DA5 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9DA6 CD EC 99     	call calcula_tercio
  76+ 9DA9 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9DAA 1E 00        	ld e,0
  78+ 9DAC 7D           	ld a,l
  79+ 9DAD E6 E0        	and $e0
  80+ 9DAF 28 01        	jr z,1F
  81+ 9DB1 04           	inc b
  82+ 9DB2 1C           1 inc e
  83+ 9DB3 D6 20        	sub 32
  84+ 9DB5 20 FB        	jr nz,1B
  85+ 9DB7 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DB9 C9           	ret
  87+ 9DBA
# file closed: Genera_coordenadas.asm
1492  9DBA              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DBA
   2+ 9DBA
   3+ 9DBA              ;   07/07/23
   4+ 9DBA              ;
   5+ 9DBA              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DBA              ;
   7+ 9DBA              ;   Codificación:
   8+ 9DBA              ;
   9+ 9DBA              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DBA              ;
  11+ 9DBA              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DBA              ;
  13+ 9DBA              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DBA              ;
  15+ 9DBA              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DBA              ;
  17+ 9DBA              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DBA              ;                               ..... %01000010 Vel_up 4
  19+ 9DBA              ;                                               Vel_down 2
  20+ 9DBA              ;                               ..... $42
  21+ 9DBA              ;
  22+ 9DBA              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DBA              ;
  24+ 9DBA              ;                               ..... %01000010 Vel_left 4
  25+ 9DBA              ;                                               Vel_right 2
  26+ 9DBA              ;                               ..... $42
  27+ 9DBA              ;
  28+ 9DBA              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DBA              ;
  30+ 9DBA              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DBA              ;
  32+ 9DBA              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DBA              ;
  34+ 9DBA              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DBA              ;                                     $53
  36+ 9DBA              ;
  37+ 9DBA              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DBA              ;
  39+ 9DBA              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DBA              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DBA              ;
  42+ 9DBA              ;                       Arriba ..... $81
  43+ 9DBA              ;                       Arriba - izquierda ..... $a1
  44+ 9DBA              ;                       Arriba - derecha ..... $91
  45+ 9DBA              ;
  46+ 9DBA              ;                       Abajo ..... $41
  47+ 9DBA              ;                       Abajo - izquierda ..... $61
  48+ 9DBA              ;                       Abajo - derecha ..... $51
  49+ 9DBA              ;
  50+ 9DBA              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DBA              ;
  52+ 9DBA              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DBA              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DBA              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DBA              ;
  56+ 9DBA              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DBA              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DBA              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DBA              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DBA              ;
  61+ 9DBA              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DBA              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DBA              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DBA              ;
  65+ 9DBA              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DBA              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DBA              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DBA              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DBA
  70+ 9DBA              ; ----- ----- ----- ----- -----
  71+ 9DBA
  72+ 9DBA E6 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DBC EE 9D            defw F_1
  74+ 9DBE F8 9D            defw F_2
  75+ 9DC0 02 9E            defw Codo_abajo_derecha
  76+ 9DC2 36 9E            defw Derecha_y_subiendo
  77+ 9DC4 40 9E            defw Derecha_y_subiendo_1
  78+ 9DC6 4A 9E            defw F_3
  79+ 9DC8 54 9E            defw F_4
  80+ 9DCA 5E 9E            defw Derecha_y_bajando
  81+ 9DCC 68 9E            defw Derecha_y_bajando_1
  82+ 9DCE 72 9E            defw Derecha_y_bajando_2
  83+ 9DD0 7C 9E            defw Codo_derecha_abajo
  84+ 9DD2 AC 9E            defw Codo_abajo_izq.
  85+ 9DD4 E0 9E            defw Izquierda_y_subiendo
  86+ 9DD6 EA 9E            defw Izquierda_y_subiendo_1
  87+ 9DD8 F4 9E            defw F_5
  88+ 9DDA FE 9E            defw F_6
  89+ 9DDC 08 9F            defw Izquierda_y_bajando
  90+ 9DDE 12 9F            defw Izquierda_y_bajando_1
  91+ 9DE0 1C 9F            defw Izquierda_y_bajando_2
  92+ 9DE2 26 9F            defw Codo_izquierda_abajo
  93+ 9DE4 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DE6
  95+ 9DE6 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DEA 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DEE
  98+ 9DEE 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DF2 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DF6 08 00
 100+ 9DF8 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DFC 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9E00 0F FE
 102+ 9E02
 103+ 9E02 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9E06 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E0A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E0E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E12 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E16 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E1A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E1E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E22 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E26 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E2A 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E2E 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E32 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E36
 117+ 9E36 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E3A 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E3E 06 00
 119+ 9E40
 120+ 9E40 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E44 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E48 02 00
 122+ 9E4A
 123+ 9E4A 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E4E 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E52 04 00
 125+ 9E54 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E58 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E5C 08 00
 127+ 9E5E
 128+ 9E5E 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E62 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E66 02 00
 130+ 9E68
 131+ 9E68 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E6C 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E70 06 00
 133+ 9E72
 134+ 9E72 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E76 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E7A 06 00
 136+ 9E7C
 137+ 9E7C              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E7C
 139+ 9E7C 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E80 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E84 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E88 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E8C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E90 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E94 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E98 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E9C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9EA0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9EA4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9EA8 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9EAC
 152+ 9EAC 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EB0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EB4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EB8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EBC 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EC0 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EC4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EC8 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9ECC 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9ED0 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9ED4 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9ED8 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EDC 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EE0
 166+ 9EE0 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EE4 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EE8 06 00
 168+ 9EEA
 169+ 9EEA 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EEE 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EF2 02 00
 171+ 9EF4
 172+ 9EF4 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EF8 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EFC 04 00
 174+ 9EFE 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9F02 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9F06 08 00
 176+ 9F08
 177+ 9F08 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F0C 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F10 02 00
 179+ 9F12
 180+ 9F12 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F16 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F1A 06 00
 182+ 9F1C
 183+ 9F1C 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F20 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F24 06 00
 185+ 9F26
 186+ 9F26 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F2A 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F2E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F32 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F36 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F3A 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F3E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F42 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F46 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F4A 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F4E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F52 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F56
 199+ 9F56              ; ----- ----- ----- ----- -----
 200+ 9F56              ;
 201+ 9F56              ;   27/06/23
 202+ 9F56
 203+ 9F56              Movimiento
 204+ 9F56
 205+ 9F56              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F56
 207+ 9F56              ;    ld hl,(Posicion_actual)
 208+ 9F56
 209+ 9F56 3A F7 89         ld a,(Ctrl_2)
 210+ 9F59 CB 57            bit 2,a
 211+ 9F5B 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F5D
 213+ 9F5D 2A E9 89         ld hl,(Puntero_mov)
 214+ 9F60 7E               ld a,(hl)
 215+ 9F61
 216+ 9F61              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F61
 218+ 9F61              Inicia_desplazamiento.
 219+ 9F61
 220+ 9F61              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F61
 222+ 9F61 CD 55 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F64
 224+ 9F64              ; Iniciamos (Repetimos_mov).
 225+ 9F64
 226+ 9F64 7E               ld a,(hl)
 227+ 9F65 E6 0F            and $0f
 228+ 9F67 32 EF 89         ld (Repetimos_desplazamiento),a
 229+ 9F6A 32 F0 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F6D
 231+ 9F6D              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F6D
 233+ 9F6D 23               inc hl
 234+ 9F6E 7E               ld a,(hl)
 235+ 9F6F 32 F2 89         ld (Cola_de_desplazamiento),a
 236+ 9F72 2B               dec hl
 237+ 9F73
 238+ 9F73 21 F7 89         ld hl,Ctrl_2
 239+ 9F76 CB D6            set 2,(hl)
 240+ 9F78
 241+ 9F78              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F78              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F78
 244+ 9F78              Desplazamiento_iniciado
 245+ 9F78
 246+ 9F78 CD 29 A0         call Aplica_desplazamiento
 247+ 9F7B
 248+ 9F7B 3A F7 89         ld a,(Ctrl_2)
 249+ 9F7E CB 67            bit 4,a
 250+ 9F80 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F81
 252+ 9F81 21 EF 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F84 35               dec (hl)
 254+ 9F85 C0               ret nz
 255+ 9F86
 256+ 9F86              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F86              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F86              ; Analiza (Cola_de_desplazamiento).
 259+ 9F86
 260+ 9F86 3A F2 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F89 A7               and a
 262+ 9F8A CC 7E A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F8D 28 30            jr z,Reinicia_el_movimiento
 264+ 9F8F
 265+ 9F8F FE FF            cp $ff
 266+ 9F91 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F93
 268+ 9F93 FE FE            cp $fe
 269+ 9F95 CC 02 A0         call z,Fijamos_bucle
 270+ 9F98 28 25            jr z,Reinicia_el_movimiento
 271+ 9F9A
 272+ 9F9A FE FD            cp $fd
 273+ 9F9C 20 11            jr nz,1F
 274+ 9F9E
 275+ 9F9E              ; ---
 276+ 9F9E              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F9E
 278+ 9F9E 3A F7 89         ld a,(Ctrl_2)
 279+ 9FA1 CB 5F            bit 3,a
 280+ 9FA3 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9FA5
 282+ 9FA5              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9FA5
 284+ 9FA5 21 F7 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9FA8 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9FAA
 287+ 9FAA CD 13 A0         call Inicia_Repetimos_movimiento
 288+ 9FAD 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9FAF              ; ---
 290+ 9FAF
 291+ 9FAF FE 01        1 cp 1
 292+ 9FB1 CA EC 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9FB4
 294+ 9FB4 3D               dec a
 295+ 9FB5 32 F2 89         ld (Cola_de_desplazamiento),a
 296+ 9FB8
 297+ 9FB8 3A F0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FBB 32 EF 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FBE              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FBE C9               ret
 301+ 9FBF
 302+ 9FBF              Reinicia_el_movimiento
 303+ 9FBF
 304+ 9FBF 3A F7 89         ld a,(Ctrl_2)
 305+ 9FC2 CB 5F            bit 3,a
 306+ 9FC4 28 1B            jr z,2F
 307+ 9FC6
 308+ 9FC6              ; (Cola_de_desplazamiento)="254".
 309+ 9FC6
 310+ 9FC6 21 F1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FC9 35               dec (hl)
 312+ 9FCA 20 15            jr nz,2F
 313+ 9FCC
 314+ 9FCC              ; Fin de las repeticiones del último movimiento.
 315+ 9FCC
 316+ 9FCC 21 F7 89         ld hl,Ctrl_2
 317+ 9FCF CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FD1
 319+ 9FD1 2A E9 89         ld hl,(Puntero_mov)
 320+ 9FD4 23               inc hl
 321+ 9FD5 23               inc hl
 322+ 9FD6 23               inc hl
 323+ 9FD7 22 E9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FDA              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FDA 7E               ld a,(hl)
 326+ 9FDB 32 F2 89         ld (Cola_de_desplazamiento),a
 327+ 9FDE
 328+ 9FDE C3 86 9F         jp Cola
 329+ 9FE1
 330+ 9FE1
 331+ 9FE1 CD 1E A0     2 call Inicia_Puntero_mov
 332+ 9FE4
 333+ 9FE4 21 F7 89         ld hl,Ctrl_2
 334+ 9FE7 CB 96            res 2,(hl)
 335+ 9FE9
 336+ 9FE9 C3 56 9F         jp Movimiento
 337+ 9FEC
 338+ 9FEC              Siguiente_desplazamiento
 339+ 9FEC
 340+ 9FEC              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FEC              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FEC
 343+ 9FEC 21 F7 89         ld hl,Ctrl_2
 344+ 9FEF CB 96            res 2,(hl)
 345+ 9FF1
 346+ 9FF1 2A E9 89         ld hl,(Puntero_mov)
 347+ 9FF4 23               inc hl
 348+ 9FF5 23               inc hl
 349+ 9FF6 22 E9 89         ld (Puntero_mov),hl
 350+ 9FF9
 351+ 9FF9 7E               ld a,(hl)
 352+ 9FFA A7               and a
 353+ 9FFB CC 7E A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FFE CA BF 9F         jp z,Reinicia_el_movimiento
 355+ A001
 356+ A001 C9               ret
 357+ A002              ; Subrutinas -----------------------------------------
 358+ A002              ; ---------- --------- --------- ---------- ----------
 359+ A002              ;
 360+ A002              ;   24/07/23
 361+ A002              ;
 362+ A002              ;   Fijamos_bucle
 363+ A002              ;
 364+ A002              ;
 365+ A002
 366+ A002              Fijamos_bucle
 367+ A002
 368+ A002 3A ED 89         ld a,(Incrementa_puntero)
 369+ A005 3C               inc a
 370+ A006 32 EE 89         ld (Incrementa_puntero_backup),a
 371+ A009
 372+ A009 CD 7E A0         call Incrementa_Puntero_indice_mov
 373+ A00C 2A E7 89         ld hl,(Puntero_indice_mov)
 374+ A00F 22 EB 89         ld (Puntero_indice_mov_bucle),hl
 375+ A012 C9               ret
 376+ A013
 377+ A013              ; ---------- --------- --------- ---------- ----------
 378+ A013              ;
 379+ A013              ;   07/7/23
 380+ A013              ;
 381+ A013              ;   Inicia_Repetimos_movimiento
 382+ A013              ;
 383+ A013              ;
 384+ A013
 385+ A013              Inicia_Repetimos_movimiento
 386+ A013
 387+ A013              ; Iniciamos (Repetimos_movimiento).
 388+ A013
 389+ A013 DD 2A E9 89      ld ix,(Puntero_mov)
 390+ A017 DD 7E 02         ld a,(ix+2)
 391+ A01A 32 F1 89         ld (Repetimos_movimiento),a
 392+ A01D
 393+ A01D C9               ret
 394+ A01E
 395+ A01E              ; ---------- --------- --------- ---------- ----------
 396+ A01E              ;
 397+ A01E              ;   26/6/23
 398+ A01E              ;
 399+ A01E              ;   Inicia_Puntero_mov
 400+ A01E              ;
 401+ A01E              ;
 402+ A01E
 403+ A01E 2A E7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A021 5E               ld e,(hl)
 405+ A022 23               inc hl
 406+ A023 56               ld d,(hl)
 407+ A024 EB               ex de,hl
 408+ A025 22 E9 89         ld (Puntero_mov),hl
 409+ A028 C9               ret
 410+ A029
 411+ A029              ; ---------- --------- --------- ---------- ----------
 412+ A029              ;
 413+ A029              ;   27/06/23
 414+ A029              ;
 415+ A029              ;   Aplica_movimiento.
 416+ A029
 417+ A029              Aplica_desplazamiento
 418+ A029
 419+ A029              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A029
 421+ A029 2A E9 89         ld hl, (Puntero_mov)
 422+ A02C
 423+ A02C 7E               ld a,(hl)
 424+ A02D E6 F0            and $f0
 425+ A02F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A030
 427+ A030 CB 7E            bit 7,(hl)
 428+ A032 28 03            jr z,1F
 429+ A034 CD 63 9A         call Mov_up
 430+ A037 2A E9 89     1 ld hl, (Puntero_mov)
 431+ A03A CB 76            bit 6,(hl)
 432+ A03C 28 03            jr z,2F
 433+ A03E CD 32 9A         call Mov_down
 434+ A041 2A E9 89     2 ld hl, (Puntero_mov)
 435+ A044 CB 6E            bit 5,(hl)
 436+ A046 28 03            jr z,3F
 437+ A048 CD C4 9B         call Mov_left
 438+ A04B 2A E9 89     3 ld hl, (Puntero_mov)
 439+ A04E CB 66            bit 4,(hl)
 440+ A050 C8               ret z
 441+ A051 CD A6 9A         call Mov_right
 442+ A054 C9               ret
 443+ A055
 444+ A055              ; ---------- --------- --------- ---------- ----------
 445+ A055              ;
 446+ A055              ;   26/06/23
 447+ A055              ;
 448+ A055              ;   Ajusta_velocidad_desplazamiento.
 449+ A055
 450+ A055              Ajusta_velocidad_desplazamiento
 451+ A055
 452+ A055              ; 1er byte de la cadena de movimiento.
 453+ A055              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A055
 455+ A055 CD 73 A0         call Extrae_nibble_alto
 456+ A058
 457+ A058 32 CD 89         ld (Vel_up),a
 458+ A05B 79               ld a,c
 459+ A05C E6 0F            and $0f
 460+ A05E 32 CE 89         ld (Vel_down),a
 461+ A061
 462+ A061              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A061              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A061
 465+ A061 23               inc hl
 466+ A062 CD 73 A0         call Extrae_nibble_alto
 467+ A065
 468+ A065 32 CB 89         ld (Vel_left),a
 469+ A068 79               ld a,c
 470+ A069 E6 0F            and $0f
 471+ A06B 32 CC 89         ld (Vel_right),a
 472+ A06E
 473+ A06E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A06E
 475+ A06E 23               inc hl
 476+ A06F 22 E9 89         ld (Puntero_mov),hl
 477+ A072 C9               ret
 478+ A073
 479+ A073 06 04        Extrae_nibble_alto ld b,4
 480+ A075 7E               ld a,(hl)
 481+ A076 4F               ld c,a
 482+ A077 E6 F0            and $f0
 483+ A079 CB 3F        1 srl a
 484+ A07B 10 FC            djnz 1B
 485+ A07D C9               ret
 486+ A07E
 487+ A07E              ; ---------- --------- --------- ---------- ----------
 488+ A07E              ;
 489+ A07E              ;   5/7/23
 490+ A07E              ;
 491+ A07E              ;   Incrementa_Puntero_indice_mov
 492+ A07E
 493+ A07E              Incrementa_Puntero_indice_mov
 494+ A07E
 495+ A07E 21 ED 89         ld hl,Incrementa_puntero
 496+ A081 34               inc (hl)
 497+ A082
 498+ A082 2A E7 89         ld hl,(Puntero_indice_mov)
 499+ A085 01 02 00         ld bc,2
 500+ A088 A7               and a
 501+ A089 09               add hl,bc
 502+ A08A 22 E7 89         ld (Puntero_indice_mov),hl
 503+ A08D
 504+ A08D 7E               ld a,(hl)
 505+ A08E A7               and a
 506+ A08F
 507+ A08F              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A08F
 509+ A08F              ;    jr z,$
 510+ A08F
 511+ A08F              ;! Reinicia el Patrón de movimiento.
 512+ A08F
 513+ A08F CC 94 A0         call z,Inicializa_Puntero_indice_mov
 514+ A092
 515+ A092 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A093
 517+ A093 C9               ret
 518+ A094
 519+ A094
 520+ A094              ; ---------- --------- --------- ---------- ----------
 521+ A094              ;
 522+ A094              ;   24/07/23
 523+ A094              ;
 524+ A094              ;   Inicializa_Puntero_indice_mov
 525+ A094
 526+ A094              Inicializa_Puntero_indice_mov
 527+ A094
 528+ A094              ; Existe etiqueta de bucle principal???
 529+ A094
 530+ A094 2A EB 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A097 24               inc h
 532+ A098 25               dec h
 533+ A099 28 05            jr z,2F
 534+ A09B
 535+ A09B 22 E7 89         ld (Puntero_indice_mov),hl
 536+ A09E 18 14            jr 3F
 537+ A0A0
 538+ A0A0              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A0A0
 540+ A0A0 3A ED 89     2 ld a,(Incrementa_puntero)
 541+ A0A3 47               ld b,a
 542+ A0A4
 543+ A0A4 2A E7 89         ld hl,(Puntero_indice_mov)
 544+ A0A7 2B           1 dec hl
 545+ A0A8 2B               dec hl
 546+ A0A9 10 FC            djnz 1B
 547+ A0AB 22 E7 89         ld (Puntero_indice_mov),hl
 548+ A0AE
 549+ A0AE AF               xor a
 550+ A0AF 32 ED 89         ld (Incrementa_puntero),a
 551+ A0B2 18 06            jr 4F
 552+ A0B4
 553+ A0B4 3A EE 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0B7 32 ED 89         ld (Incrementa_puntero),a
 555+ A0BA C9           4 ret
 556+ A0BB
 557+ A0BB
 558+ A0BB
# file closed: Patrones_de_mov.asm
1493  A0BB              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A0BB              ; Relojes y temporizaciones.
   2+ A0BB
   3+ A0BB              ; ------------------------------------------------------
   4+ A0BB              ;
   5+ A0BB              ;	16/7/23
   6+ A0BB              ;
   7+ A0BB              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A0BB              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A0BB              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A0BB              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A0BB              ;
  12+ A0BB              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A0BB              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A0BB
  15+ A0BB              ; Disparo_entidad db 1
  16+ A0BB              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A0BB              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A0BB
  19+ A0BB              Habilita_disparos
  20+ A0BB
  21+ A0BB 7E           	ld a,(hl)
  22+ A0BC A7           	and a
  23+ A0BD C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A0BE
  25+ A0BE EB           	ex de,hl
  26+ A0BF
  27+ A0BF 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A0C0 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A0C1
  30+ A0C1              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A0C1
  32+ A0C1 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A0C2 7E           	ld a,(hl)
  34+ A0C3 23           	inc hl
  35+ A0C4 77           	ld (hl),a
  36+ A0C5
  37+ A0C5 EB           	ex de,hl						; Habilitamos disparo.
  38+ A0C6 3E 01        	ld a,1
  39+ A0C8 77           	ld (hl),a
  40+ A0C9 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1494  A0CA              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0CA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0CA              ;
   3+ A0CA              ;	9/8/23
   4+ A0CA              ;
   5+ A0CA              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0CA
   7+ A0CA              ;	ADC HL,SP	LD (addr),SP
   8+ A0CA              ;	ADD HL,SP	LD SP,(addr)
   9+ A0CA              ;	ADD IX,SP	LD SP,nn
  10+ A0CA              ; 	ADD IY,SP	LD SP,HL
  11+ A0CA              ;				LD SP,IX
  12+ A0CA              ;	DEC SP		LD SP,IY
  13+ A0CA
  14+ A0CA              ;	EX (SP),HL
  15+ A0CA              ;	EX (SP),IX
  16+ A0CA              ;	EX (SP),IY
  17+ A0CA
  18+ A0CA              ;	INC SP
  19+ A0CA
  20+ A0CA                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 0A 8A  7 ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A F9 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 10 8A         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 0E 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 10 8A         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 0E 8A     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 0A 8A  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 2A 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 12 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 12 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 16 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447              ;   Calculamos (End_Snapshot)
 136+ 7447
 137+ 7447 A7               and a
 138+ 7448 ED 4A            adc hl,bc
 139+ 744A 22 12 8A         ld (End_Snapshot),hl
 140+ 744D
 141+ 744D              ;   Limpiamos Album_de_fotos_1.
 142+ 744D
 143+ 744D 2A 16 8A         ld hl,(End_Snapshot_1)
 144+ 7450 01 84 70         ld bc,Album_de_fotos_1
 145+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 146+ 7456 AF               xor a
 147+ 7457 02               ld (bc),a
 148+ 7458
 149+ 7458 CD BB 74         call Limpia_album
 150+ 745B
 151+ 745B 21 00 00         ld hl,0
 152+ 745E 22 16 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7461
 154+ 7461              ; ----- ----- ----- -----
 155+ 7461
 156+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7461
 158+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 7464 7E               ld a,(hl)
 160+ 7465 A7               and a
 161+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 7468              ;                               ; _ información del album3 al album2.
 163+ 7468              ; ----- ----- ----- -----
 164+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 7468
 166+ 7468 2A 1A 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7471
 170+ 7471 CD BB 74         call Limpia_album
 171+ 7474
 172+ 7474              ;   Calculamos (End_Snapshot_1):
 173+ 7474
 174+ 7474 A7               and a
 175+ 7475 ED 4A            adc hl,bc
 176+ 7477 22 16 8A         ld (End_Snapshot_1),hl
 177+ 747A
 178+ 747A              ;   Limpiamos Album_de_fotos_2.
 179+ 747A
 180+ 747A 2A 1A 8A         ld hl,(End_Snapshot_2)
 181+ 747D 01 07 71         ld bc,Album_de_fotos_2
 182+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 183+ 7483 AF               xor a
 184+ 7484 02               ld (bc),a
 185+ 7485
 186+ 7485 CD BB 74         call Limpia_album
 187+ 7488
 188+ 7488 21 00 00         ld hl,0
 189+ 748B 22 1A 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 748E
 191+ 748E              ; ----- ----- ----- -----
 192+ 748E
 193+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 194+ 748E
 195+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7491 7E               ld a,(hl)
 197+ 7492 A7               and a
 198+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 7494
 200+ 7494              ; ----- ----- ----- -----
 201+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 7494
 203+ 7494 2A 1E 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 749D
 207+ 749D CD BB 74         call Limpia_album
 208+ 74A0
 209+ 74A0              ;   Calculamos (End_Snapshot_2):
 210+ 74A0
 211+ 74A0 A7               and a
 212+ 74A1 ED 4A            adc hl,bc
 213+ 74A3 22 1A 8A         ld (End_Snapshot_2),hl
 214+ 74A6
 215+ 74A6              ;   Limpiamos Album_de_fotos_3.
 216+ 74A6
 217+ 74A6 2A 1E 8A         ld hl,(End_Snapshot_3)
 218+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 219+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 74AF AF               xor a
 221+ 74B0 02               ld (bc),a
 222+ 74B1
 223+ 74B1 CD BB 74         call Limpia_album
 224+ 74B4
 225+ 74B4 21 00 00         ld hl,0
 226+ 74B7 22 1E 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 74BA C9               ret
 228+ 74BB
 229+ 74BB              ; ----------------------------------------------------
 230+ 74BB              ;
 231+ 74BB              ;   10/8/23
 232+ 74BB              ;
 233+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 74BB              ;
 235+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 237+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 74BB
 239+ 74BB              ;    ld hl,(End_Snapshot)
 240+ 74BB              ;    ld bc,Album_de_fotos
 241+ 74BB              ;    ld de,Album_de_fotos+1
 242+ 74BB
 243+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 244+ 74BB
 245+ 74BB              Limpia_album
 246+ 74BB D5               push de            ; Guardo DESTINO.
 247+ 74BC C5               push bc            ; Guardo ORIGEN.
 248+ 74BD ED 42            sbc hl,bc
 249+ 74BF 4D               ld c,l
 250+ 74C0 44               ld b,h
 251+ 74C1 E1               pop hl
 252+ 74C2 C5               push bc
 253+ 74C3 ED B0            ldir
 254+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 74C7 C9               ret                         ; _ a otro).
 257+ 74C8              ;
 258+ 74C8
 259+ 74C8              ; -----------------------------------------------
 260+ 74C8
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
# file closed: Guarda_foto_registros.asm
1495  74C8
1496  74C8              	SAVESNA "Pruebas.sna", START
1497  74C8
1498  74C8
1499  74C8
1500  74C8
# file closed: Banco_de_pruebas.asm
