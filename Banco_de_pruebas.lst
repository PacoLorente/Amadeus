# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 D4 87  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD 1D 8D     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD 2D 8D     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 DE 87     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B D4 87  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 15/01/24
   6+ 84EC
   7+ 84EC 18 9C        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 C6 85        	defw Caja_1
 109+ 8572 D9 85        	defw Caja_2
 110+ 8574 EC 85        	defw Caja_3
 111+ 8576 FF 85        	defw Caja_4
 112+ 8578 12 86        	defw Caja_5
 113+ 857A 25 86        	defw Caja_6
 114+ 857C 38 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C
 128+ 858C 05           	db %00000101										; (Attr).
 129+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 130+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 131+ 8591
 132+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 133+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 134+ 8595
 135+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 136+ 8597 04           	db 4 												; (Cuad_objeto).
 137+ 8598 02 02 00 00  	db 2,2,0,0											; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 138+ 859C
 139+ 859C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 140+ 859D
 141+ 859D 00 00 00...  	ds 6												; Variables_de_borrado
 142+ 85A3
 143+ 85A3 00 00        	db 0,0												; Variables_de_pintado
 144+ 85A5 00 00        	defw 0												;	" " " " " " "
 145+ 85A7 00 00        	defw 0												;	" " " " " " "
 146+ 85A9 00 00 00 00  	db 0,0,0,0											;	" " " " " " "
 147+ 85AD
 148+ 85AD 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 149+ 85AF
 150+ 85AF 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 151+ 85B1 00 00        	defw 0 												; Contador_de_mov_masticados
 152+ 85B3
 153+ 85B3 40           	db $40												; (Ctrl_0).
 154+ 85B4
 155+ 85B4 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 155+ 85B8 00 00
 156+ 85BA 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 157+ 85BD
 158+ 85BD 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 159+ 85BF 00           	db 0												; (Cola_de_desplazamiento).
 160+ 85C0
 161+ 85C0 00           	db 0 												; (Columnas).
 162+ 85C1 00 00        	defw 0												; (Limite_horizontal).
 163+ 85C3 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 164+ 85C6
 165+ 85C6              ; ---------- ---------- ---------- ---------- ----------
 166+ 85C6
 167+ 85C6              ; Cada caja tiene 19 bytes !!!
 168+ 85C6
 169+ 85C6 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 170+ 85C8 00           	db %00000000										; (Attr).
 171+ 85C9 00           	db 0												; (Cuad_objeto).
 172+ 85CA 00           	db 0												; (Impacto).
 173+ 85CB 00 00 00...  	ds 6												; (Variables_de_borrado).
 174+ 85D1 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 85D3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 85D5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 85D7 00           	db 0												; (Ctrl_0).
 178+ 85D8 00           	db 0												; (Ctrl_2).
 179+ 85D9
 180+ 85D9              ; ---------- ---------- ---------- ---------- ----------
 181+ 85D9
 182+ 85D9 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 183+ 85DB 00           	db %00000000										; (Attr).
 184+ 85DC 00           	db 0												; (Cuad_objeto).
 185+ 85DD 00           	db 0												; (Impacto).
 186+ 85DE 00 00 00...  	ds 6												; (Variables_de_borrado).
 187+ 85E4 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 85E6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 85E8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 85EA 00           	db 0												; (Ctrl_0).
 191+ 85EB 00           	db 0												; (Ctrl_2).
 192+ 85EC
 193+ 85EC              ; ---------- ---------- ---------- ---------- ----------
 194+ 85EC
 195+ 85EC 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 196+ 85EE 00           	db %00000000										; (Attr).
 197+ 85EF 00           	db 0												; (Cuad_objeto).
 198+ 85F0 00           	db 0												; (Impacto).
 199+ 85F1 00 00 00...  	ds 6												; (Variables_de_borrado).
 200+ 85F7 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 85F9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 85FB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 85FD 00           	db 0												; (Ctrl_0).
 204+ 85FE 00           	db 0												; (Ctrl_2).
 205+ 85FF
 206+ 85FF              ; ---------- ---------- ---------- ---------- ----------
 207+ 85FF
 208+ 85FF 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 209+ 8601 00           	db %00000000										; (Attr).
 210+ 8602 00           	db 0												; (Cuad_objeto).
 211+ 8603 00           	db 0												; (Impacto).
 212+ 8604 00 00 00...  	ds 6												; (Variables_de_borrado).
 213+ 860A 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 860C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 860E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8610 00           	db 0												; (Ctrl_0).
 217+ 8611 00           	db 0												; (Ctrl_2).
 218+ 8612
 219+ 8612              ; ---------- ---------- ---------- ---------- ----------
 220+ 8612
 221+ 8612 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 222+ 8614 00           	db %00000000										; (Attr).
 223+ 8615 00           	db 0												; (Cuad_objeto).
 224+ 8616 00           	db 0												; (Impacto).
 225+ 8617 00 00 00...  	ds 6												; (Variables_de_borrado).
 226+ 861D 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 861F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8621 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8623 00           	db 0												; (Ctrl_0).
 230+ 8624 00           	db 0												; (Ctrl_2).
 231+ 8625
 232+ 8625              ; ---------- ---------- ---------- ---------- ----------
 233+ 8625
 234+ 8625 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 235+ 8627 00           	db %00000000										; (Attr).
 236+ 8628 00           	db 0												; (Cuad_objeto).
 237+ 8629 00           	db 0												; (Impacto).
 238+ 862A 00 00 00...  	ds 6												; (Variables_de_borrado).
 239+ 8630 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8632 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 8634 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 8636 00           	db 0												; (Ctrl_0).
 243+ 8637 00           	db 0												; (Ctrl_2).
 244+ 8638
 245+ 8638              ; ---------- ---------- ---------- ---------- ----------
 246+ 8638
 247+ 8638 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 248+ 863A 00           	db %00000000										; (Attr).
 249+ 863B 00           	db 0												; (Cuad_objeto).
 250+ 863C 00           	db 0												; (Impacto).
 251+ 863D 00 00 00...  	ds 6												; (Variables_de_borrado).
 252+ 8643 00 00        	defw 0												; (Puntero_de_impresion).
 253+ 8645 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 254+ 8647 00 00        	defw 0 												; (Contador_de_mov_masticados).
 255+ 8649 00           	db 0												; (Ctrl_0).
 256+ 864A 00           	db 0												; (Ctrl_2).
 257+ 864B
 258+ 864B              ; -------------------------------------------------------------------------------------
 259+ 864B              ;
 260+ 864B              ;	11/1/24
 261+ 864B              ;
 262+ 864B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 263+ 864B              ;
 264+ 864B              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 265+ 864B              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 266+ 864B              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 267+ 864B              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 268+ 864B
 269+ 864B              Indice_de_entidades
 270+ 864B
 271+ 864B 4F 86        	defw Entidad_1
 272+ 864D 61 86        	defw Entidad_2
 273+ 864F
 274+ 864F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 275+ 864F
 276+ 864F              ;	BADSAT, (Satélite malvado).
 277+ 864F
 278+ 864F 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 279+ 8652 02           	db %00000010										; (Attr).
 280+ 8653 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 281+ 8655 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 282+ 8657 40 50        	defw $5040                                      	; (Posicion_inicio).
 283+ 8659 01           	db 1												; (Cuad_objeto).
 284+ 865A 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 285+ 865E 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 286+ 8660 03           	db 3												; (Frames_explosion).
 287+ 8661
 288+ 8661 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 289+ 8664 02           	db %00000010										; (Attr).
 290+ 8665 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 291+ 8667 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 292+ 8669 40 50        	defw $5040                                      	; (Posicion_inicio).
 293+ 866B 01           	db 1												; (Cuad_objeto).
 294+ 866C 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 295+ 8670 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8672 03           	db 3												; (Frames_explosion).
# file closed: Cajas_y_disparos.asm
 105  8673              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8673              ; 13/05/23
   2+ 8673
   3+ 8673              Indice_de_niveles
   4+ 8673
   5+ 8673 81 86        	defw Nivel_1
   6+ 8675 83 86        	defw Nivel_2
   7+ 8677 90 86        	defw Nivel_3
   8+ 8679 A0 86        	defw Nivel_4
   9+ 867B B2 86        	defw Nivel_5
  10+ 867D              ;	...
  11+ 867D              ;	...
  12+ 867D              ;	+ Niveles ...
  13+ 867D
  14+ 867D 00 00        	defw 0
  15+ 867F 00 00        	defw 0
  16+ 8681
  17+ 8681 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 8682 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8683 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8684 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 8688 01 02
  21+ 868A 02 01 01 01  	db 2,1,1,1,1,2
  21+ 868E 01 02
  22+ 8690 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 8691 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 8695 01
  24+ 8696 03 01 01 01  	db 3,1,1,1,1
  24+ 869A 01
  25+ 869B 03 01 01 01  	db 3,1,1,1,1
  25+ 869F 01
  26+ 86A0 11           Nivel_4 db 17									; Nº de entidades.
  27+ 86A1 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 86A5 01
  28+ 86A6 04 01 01 01  	db 4,1,1,1,1
  28+ 86AA 01
  29+ 86AB 04 01 01 01  	db 4,1,1,1,1
  29+ 86AF 01
  30+ 86B0 02 03        	db 2,3
  31+ 86B2 14           Nivel_5 db 20									; Nº de entidades.
  32+ 86B3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 86B7 01
  33+ 86B8 05 01 01 01  	db 5,1,1,1,1
  33+ 86BC 01
  34+ 86BD 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 86C1 01
  35+ 86C2 05 01 01 01  	db 5,1,1,1,1
  35+ 86C6 01
  36+ 86C7
  37+ 86C7              ;---------------------------------------------------------------------------------------------------------------
  38+ 86C7              ;
  39+ 86C7              ;   5/1/24
  40+ 86C7              ;
  41+ 86C7              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 86C7              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 86C7              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 86C7              ;	_en la caja DRAW correspondiente.
  45+ 86C7              ;
  46+ 86C7              ;	MODIFICA: HL,DE y A.
  47+ 86C7              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 86C7
  49+ 86C7              Inicializa_Punteros_de_nivel
  50+ 86C7
  51+ 86C7 21 73 86     	ld hl,Indice_de_niveles
  52+ 86CA 22 FD 87     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 86CD CD AF 8B     	call Extrae_address
  54+ 86D0 7E           	ld a,(hl)
  55+ 86D1 32 C8 87     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 86D4 23           	inc hl
  57+ 86D5 22 FF 87     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 86D8 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 86D9
  60+ 86D9              ;---------------------------------------------------------------------------------------------------------------
  61+ 86D9              ;
  62+ 86D9              ;   5/1/24
  63+ 86D9              ;
  64+ 86D9              ;	Destruye A,BC,HL,DE
  65+ 86D9
  66+ 86D9              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES con un tipo de entidad.
  67+ 86D9              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  68+ 86D9
  69+ 86D9              Prepara_cajas_de_entidades
  70+ 86D9
  71+ 86D9              ; Preparamos los punteros de las cajas de entidades:
  72+ 86D9
  73+ 86D9 21 70 85     	ld hl,Indice_de_cajas_de_entidades
  74+ 86DC CD AF 8B     	call Extrae_address
  75+ 86DF CD 1E 87     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  76+ 86E2              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  77+ 86E2
  78+ 86E2 CD 60 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 86E5
  80+ 86E5 2A FF 87     	ld hl,(Datos_de_nivel)
  81+ 86E8
  82+ 86E8              ; Esta inializado este tipo de entidad ???
  83+ 86E8
  84+ 86E8 18 FE        	jr $
  85+ 86EA
  86+ 86EA
  87+ 86EA
  88+ 86EA
  89+ 86EA
  90+ 86EA
  91+ 86EA
  92+ 86EA
  93+ 86EA
  94+ 86EA              ; En este punto:
  95+ 86EA              ;
  96+ 86EA              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  97+ 86EA              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  98+ 86EA
  99+ 86EA C5           1 push bc 										; Guardo el nº de cajas a rellenar.
 100+ 86EB
 101+ 86EB 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 102+ 86EC CD 0C 87     	call Calcula_salto_en_BC					; Calcula salto para situarnos en los "datos" de la entidad correcta del indice de entidades.
 103+ 86EF
 104+ 86EF 21 4B 86     	ld hl,Indice_de_entidades
 105+ 86F2 CD 14 87     	call Situa_en_datos_de_entidad				; Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 106+ 86F5              ;												; Actualiza (Datos_de_entidad) con esa dirección.
 107+ 86F5
 108+ 86F5 CD 28 87     	call Datos_de_entidad_a_DRAW				; Vuelca los datos de la entidad en DRAW.
 109+ 86F8
 110+ 86F8 2A C6 87     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
 111+ 86FB CD AF 8B     	call Extrae_address
 112+ 86FE CD 1E 87     	call Avanza_caja_de_entidades
 113+ 8701
 114+ 8701 2A FF 87     	ld hl,(Datos_de_nivel)
 115+ 8704 23           	inc hl
 116+ 8705 22 FF 87     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 117+ 8708
 118+ 8708 C1           	pop bc
 119+ 8709 10 DF        	djnz 1B
 120+ 870B
 121+ 870B C9           	ret
 122+ 870C
 123+ 870C              ;	------------------------------------------------------------------------------------
 124+ 870C              ;
 125+ 870C              ;	12/01/24
 126+ 870C              ;
 127+ 870C              ;	INPUTS:	A contiene el (Tipo) de entidad.
 128+ 870C              ;
 129+ 870C              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 130+ 870C              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 131+ 870C
 132+ 870C CB 27        Calcula_salto_en_BC sla a
 133+ 870E D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 134+ 8710 4F           	ld c,a
 135+ 8711 06 00        	ld b,0
 136+ 8713 C9           	ret
 137+ 8714
 138+ 8714              ; ------------------------------------------------------------------
 139+ 8714              ;
 140+ 8714              ;	5/1/24
 141+ 8714              ;
 142+ 8714              ;	Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 143+ 8714              ;	Actualiza (Datos_de_entidad) con esa dirección.
 144+ 8714
 145+ 8714 A7           Situa_en_datos_de_entidad and a
 146+ 8715 ED 4A        	adc hl,bc
 147+ 8717 CD AF 8B     	call Extrae_address
 148+ 871A 22 CE 87         ld (Datos_de_entidad),hl
 149+ 871D C9           	ret
 150+ 871E
 151+ 871E              ; ------------------------------------------------------------------
 152+ 871E
 153+ 871E 22 C2 87     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 154+ 8721 13           	inc de
 155+ 8722 13           	inc de
 156+ 8723 EB           	ex de,hl
 157+ 8724 22 C6 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 158+ 8727 C9           	ret
 159+ 8728
 160+ 8728              ; ----------------------------------------------------------------------------------------------------------
 161+ 8728              ;
 162+ 8728              ;	11/1/24
 163+ 8728              ;
 164+ 8728              ;	Vuelca los .db significativos del tipo de entidad a DRAW.
 165+ 8728
 166+ 8728              Datos_de_entidad_a_DRAW
 167+ 8728
 168+ 8728              ; En este punto:
 169+ 8728              ; HL apunta al 1er .db de DATOS de la entidad que tenemos que volcar en la caja DRAW.
 170+ 8728
 171+ 8728 11 7D 87     	ld de,Variables_DRAW	 					; DE apunta al 1er .db de las variables DRAW
 172+ 872B
 173+ 872B 01 03 00     	ld bc,3
 174+ 872E ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 175+ 8730              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 176+ 8730 01 07 00     	ld bc,7
 177+ 8733 CD 5A 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 178+ 8736
 179+ 8736 01 05 00     	ld bc,5
 180+ 8739 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 181+ 873B              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 182+ 873B 01 04 00     	ld bc,4
 183+ 873E CD 5A 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 184+ 8741
 185+ 8741 01 07 00     	ld bc,7
 186+ 8744 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 187+ 8746              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 188+ 8746
 189+ 8746 01 13 00     	ld bc,19
 190+ 8749 CD 5A 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 191+ 874C
 192+ 874C 01 02 00     	ld bc,2
 193+ 874F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 194+ 8751              ;												; HL, (origen), apunta ahora al .db (Frames_explosion), hay que situar DE.
 195+ 8751
 196+ 8751 01 08 00     	ld bc,8
 197+ 8754 CD 5A 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 198+ 8757
 199+ 8757 7E           	ld a,(hl)
 200+ 8758 12           	ld (de),a 									; Vuelco (Frames_explosion).
 201+ 8759
 202+ 8759 C9           	ret
 203+ 875A
 204+ 875A              ; ---------- -------------- ----------------
 205+ 875A
 206+ 875A EB           Situa_DE ex de,hl
 207+ 875B A7           	and a
 208+ 875C ED 4A        	adc hl,bc
 209+ 875E EB           	ex de,hl
 210+ 875F C9           	ret
 211+ 8760
 212+ 8760              ;---------------------------------------------------------------------------------------------------------------
 213+ 8760              ;
 214+ 8760              ;	5/1/24
 215+ 8760              ;
 216+ 8760              ;	INICIALIZA (Numero_parcial_de_entidades).
 217+ 8760              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 218+ 8760              ;
 219+ 8760              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 220+ 8760              ;
 221+ 8760              ;	(Numero_parcial_de_entidades)="7".
 222+ 8760              ;
 223+ 8760              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 224+ 8760              ;
 225+ 8760              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 226+ 8760              ;
 227+ 8760              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 228+ 8760              ;	MODIFICA: A y B.
 229+ 8760              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 230+ 8760
 231+ 8760              Inicializa_Numero_parcial_de_entidades
 232+ 8760
 233+ 8760              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 234+ 8760
 235+ 8760 3A C8 87     	ld a,(Numero_de_entidades)
 236+ 8763 A7           	and a
 237+ 8764
 238+ 8764              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 239+ 8764              ;	jr z,$
 240+ 8764              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 241+ 8764
 242+ 8764 20 03        	jr nz,3F
 243+ 8766
 244+ 8766              ; ---------- ---------- ----------
 245+ 8766
 246+ 8766              ;! RESET para pruebas. Omitir esta línea en modo normal.
 247+ 8766              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 248+ 8766
 249+ 8766 CD C7 86     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 250+ 8769
 251+ 8769              ; ---------- ---------- ----------
 252+ 8769
 253+ 8769 3A C8 87     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 254+ 876C FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 255+ 876E 38 08        	jr c,1F
 256+ 8770
 257+ 8770              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 258+ 8770              ; Actualizamos variables.
 259+ 8770
 260+ 8770 3E 07        	ld a,7
 261+ 8772 32 C9 87     	ld (Numero_parcial_de_entidades),a
 262+ 8775 47           	ld b,a
 263+ 8776 18 04        	jr 2F
 264+ 8778
 265+ 8778              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 266+ 8778              ; (Numero_de_entidades)="0".
 267+ 8778
 268+ 8778 32 C9 87     1 ld (Numero_parcial_de_entidades),a
 269+ 877B 47           	ld b,a
 270+ 877C C9           2 ret
# file closed: Niveles.asm
 106  877D
 107  877D              ; ******************************************************************************************************************************************************************************************
 108  877D              ; Constantes.
 109  877D              ; ******************************************************************************************************************************************************************************************
 110  877D              ;
 111  877D              ; 25/12/23
 112  877D
 113  877D              ;
 114  877D              ; Constantes.
 115  877D              ;
 116  877D
 117  877D              Sprite_vacio equ $f000
 118  877D              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  877D              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  877D              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  877D              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  877D
 123  877D              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  877D              ;														;
 125  877D              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  877D
 127  877D              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  877D              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  877D              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  877D              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  877D              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  877D
 133  877D              ;														; 55 Bytes.
 134  877D              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  877D              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  877D
 137  877D              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  877D
 139  877D              ; ******************************************************************************************************************************************************************************************
 140  877D              ; Variables.
 141  877D              ; ******************************************************************************************************************************************************************************************
 142  877D              ;
 143  877D              ; 12/01/24
 144  877D              ;
 145  877D              ; Variables de DRAW. (Motor principal).
 146  877D              ;
 147  877D              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 148  877D
 149  877D              Variables_DRAW ; -----------------------------------------------------------------------------------------------
 150  877D
 151  877D 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  877E              ;															- Patrón de movimiento.
 153  877E              ;															- Aspecto
 154  877E 00           Filas db 0												; Filas. [DRAW]
 155  877F 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  8780 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8782 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8784 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8785 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8786
 161  8786              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8786
 163  8786 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8787              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8787              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8787 00           Attr db 0												; Atributos de la entidad:
 167  8788
 168  8788              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  8788              ;
 170  8788              ;	COLORES: 0 ..... NEGRO
 171  8788              ;    		 1 ..... AZUL
 172  8788              ; 			 2 ..... ROJO
 173  8788              ;			 3 ..... MAGENTA
 174  8788              ; 			 4 ..... VERDE
 175  8788              ; 			 5 ..... CIAN
 176  8788              ;			 6 ..... AMARILLO
 177  8788              ; 			 7 ..... BLANCO
 178  8788
 179  8788 00 00        Indice_Sprite_der defw 0
 180  878A 00 00        Indice_Sprite_izq defw 0
 181  878C 00 00        Puntero_DESPLZ_der defw 0
 182  878E 00 00        Puntero_DESPLZ_izq defw 0
 183  8790
 184  8790 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8792 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8793
 187  8793              ; Variables de objeto. (Características).
 188  8793
 189  8793 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 190  8794 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 191  8795 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 192  8796 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 193  8797
 194  8797 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 195  8798              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 196  8798              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 197  8798 00 00 00...  Variables_de_borrado ds 6
 198  879E
 199  879E              ;Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 200  879E              ;	defw 0
 201  879E              ;	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 202  879E              ;	db 0,0,0,0
 203  879E
 204  879E 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 205  87A0              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 206  87A0
 207  87A0 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 208  87A2
 209  87A2              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 210  87A2              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 211  87A2
 212  87A2 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 213  87A4              ;														; _palabras que componen el "movimiento_masticado".
 214  87A4
 215  87A4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 216  87A4
 217  87A4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  87A5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  87A5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  87A5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  87A5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  87A5              ;
 223  87A5              ; 														DESCRIPCIÖN:
 224  87A5              ;
 225  87A5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  87A5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  87A5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  87A5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  87A5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  87A5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  87A5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  87A5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  87A5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  87A5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  87A5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  87A5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  87A5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  87A5              ;
 239  87A5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  87A5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  87A5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  87A5
 243  87A5              ; Variables de funcionamiento. [DRAW].
 244  87A5
 245  87A5 00           Columnas db 0
 246  87A6 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 247  87A8              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 248  87A8 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 249  87A9
 250  87A9              ; variables de control general.
 251  87A9
 252  87A9 00           Ctrl_2 db 0
 253  87AA              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 254  87AA              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 255  87AA              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 256  87AA              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 257  87AA              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 258  87AA              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 259  87AA              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 260  87AA              ;
 261  87AA              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 262  87AA              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 263  87AA              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 264  87AA              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 265  87AA              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 266  87AA              ;														BIT 4, ???
 267  87AA              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 268  87AA
 269  87AA 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 270  87AB
 271  87AB              ;! 56 Bytes por entidad.
 272  87AB
 273  87AB              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 274  87AB              ;					         		---------;      ;---------
 275  87AB
 276  87AB
 277  87AB              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 278  87AB
 279  87AB              ; Contadores de 16 bits.
 280  87AB
 281  87AB 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 282  87AD 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 283  87AF 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 284  87B1 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 285  87B3
 286  87B3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 287  87B3
 288  87B3 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 289  87B5 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 290  87B7 00 00        Puntero_indice_mov_bucle defw 0							;
 291  87B9              ;
 292  87B9              ;
 293  87B9 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 294  87BA              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 295  87BA              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 296  87BA 00           Incrementa_puntero_backup db 0
 297  87BB 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 298  87BC              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 299  87BC 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 300  87BD 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 301  87BE 00           Cola_de_desplazamiento db 0								; Este byte indica:
 302  87BF              ;
 303  87BF              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 304  87BF              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 305  87BF              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 306  87BF              ;
 307  87BF              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 308  87BF              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 309  87BF              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 310  87BF              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 311  87BF              ;
 312  87BF              ;														;	"$ff" ..... Bucle infinito de repetición.
 313  87BF              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 314  87BF              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 315  87BF              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 316  87BF
 317  87BF 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 318  87C0
 319  87C0              ;														DESCRIPCIÓN:
 320  87C0              ;
 321  87C0              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 322  87C0              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 323  87C0              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 324  87C0              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 325  87C0              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 326  87C0              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 327  87C0
 328  87C0              ;														BIT 3, Recarga de nueva oleada.
 329  87C0              ;														BIT 4, Recarga de nueva oleada.
 330  87C0              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 331  87C0              ;														BIT 6, **** Frame completo.
 332  87C0              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 333  87C0
 334  87C0 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 335  87C2              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 336  87C2              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 337  87C2              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 338  87C2
 339  87C2              ; Gestión de ENTIDADES y CAJAS.
 340  87C2
 341  87C2 00 00        Puntero_store_caja defw 0
 342  87C4 00 00        Puntero_restore_caja defw 0
 343  87C6 00 00        Indice_restore_caja defw 0
 344  87C8 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 345  87C9 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 346  87CA 00           Entidades_en_curso db 0									; ..... ..... .....
 347  87CB 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 348  87CC              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 349  87CC              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 350  87CC              ;														; _ (Numero_de_malotes)="0".
 351  87CC 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 352  87CE 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 353  87D0              ;														; _ puntero (Indice_entidades).
 354  87D0
 355  87D0              ;---------------------------------------------------------------------------------------------------------------
 356  87D0              ;
 357  87D0              ;	11/01/24
 358  87D0              ;
 359  87D0              ;	Álbumes.
 360  87D0
 361  87D0 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 362  87D2              ;														; _variable para almacenar lo posición del puntero_
 363  87D2              ; 														; _de pila, SP.
 364  87D2 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 365  87D4              ;														; La utiliza la rutina [Extrae_foto_registros].
 366  87D4 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 367  87D6 00 70        Stack_snapshot defw Album_de_fotos
 368  87D8 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 369  87DA
 370  87DA              ;End_Snapshot defw Album_de_fotos
 371  87DA              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 372  87DA 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 373  87DC              ;														; _el snapshot de los registros del siguiente disparo.
 374  87DC              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 375  87DC AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 376  87DE
 377  87DE 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 378  87DF              ;
 379  87DF              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 380  87DF              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 381  87DF              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 382  87DF
 383  87DF 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad.
 384  87E0              ;
 385  87E0              ;															BIT 0, "1" Indica que el almacén de movimientos de la Entidad_1 está completo.
 386  87E0
 387  87E0              ; Gestión de Disparos.
 388  87E0
 389  87E0 00           Numero_de_disparotes db 0
 390  87E1 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 391  87E3 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 392  87E5 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 393  87E6              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 394  87E6              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 395  87E6 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 396  87E8              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 397  87E8              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 398  87E8              ;														; _produzca colisión.
 399  87E8 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 400  87EA              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 401  87EA 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 402  87ED              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 403  87ED 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 404  87F0              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 405  87F0 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 406  87F1
 407  87F1              ;---------------------------------------------------------------------------------------------------------------
 408  87F1
 409  87F1              ; Relojes y temporizaciones.
 410  87F1
 411  87F1 00           Contador_de_frames db 0
 412  87F2 00           Contador_de_frames_2 db 0
 413  87F3
 414  87F3 04           Clock_explosion db 4
 415  87F4 14           Clock_Entidades_en_curso db 20
 416  87F5 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 417  87F6              ;														; Repite la oleada de entidades.
 418  87F6 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 419  87F7 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 420  87F8 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 421  87F9
 422  87F9 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 423  87FA 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 424  87FB 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 425  87FC
 426  87FC              ;---------------------------------------------------------------------------------------------------------------
 427  87FC
 428  87FC              ; Gestión de NIVELES.
 429  87FC
 430  87FC 00           Nivel db 0												; Nivel actual del juego.
 431  87FD 00 00        Puntero_indice_NIVELES defw 0
 432  87FF 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 433  8801              ; 														; _ que definen el NIVEL.
 434  8801              ; Y todo comienza aquí .....
 435  8801              ;
 436  8801              ; 	INICIO  *************************************************************************************************************************************************************************
 437  8801              ;
 438  8801              ;	5/1/24
 439  8801
 440  8801              START
 441  8801
 442  8801 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 443  8804 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 444  8806 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 445  8808 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 446  880A F3           	DI
 447  880B
 448  880B 3E 07        	ld a,%00000111
 449  880D CD 38 98     	call Cls
 450  8810
 451  8810 CD 8C 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 452  8813
 453  8813              ; INICIALIZACIÓN.
 454  8813
 455  8813 CD C7 86     	call Inicializa_Punteros_de_nivel					 ; Prepara el 1er Nivel del juego.
 456  8816              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 457  8816              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 458  8816              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 459  8816
 460  8816 18 FE        	jr $
 461  8818
 462  8818 CD D9 86     4 call Prepara_cajas_de_entidades
 463  881B
 464  881B CD 17 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 465  881E              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 466  881E CD 3C 8C     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 467  8821
 468  8821 21 C9 87     	ld hl,Numero_parcial_de_entidades
 469  8824 46           	ld b,(hl)
 470  8825              ;	inc b
 471  8825              ;	dec b
 472  8825              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 473  8825
 474  8825              ;	INICIA ENTIDADES !!!!!
 475  8825
 476  8825 C5           1 push bc  												; Guardo el contador de entidades.
 477  8826 CD 0B 8A     	call Inicia_entidad
 478  8829
 479  8829
 480  8829 18 FE        	jr $
 481  882B
 482  882B
 483  882B C1           	pop bc
 484  882C 10 F7        	djnz 1B  											; Decremento el contador de entidades.
 485  882E
 486  882E              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 487  882E              ; (Esto se dá cuando se inicia una nueva oleada).
 488  882E
 489  882E              ;	ld a,(Ctrl_1)
 490  882E              ;	bit 3,a
 491  882E              ;	jr nz,5F											; Loop
 492  882E
 493  882E              ; 	INICIA AMADEUS !!!!!
 494  882E
 495  882E              ;3 call Restore_Amadeus
 496  882E              ;	call Inicia_Puntero_objeto
 497  882E              ;	call Draw
 498  882E
 499  882E              ;	call Guarda_movimiento_masticado	;! Provisional
 500  882E
 501  882E              ;	call Guarda_foto_registros
 502  882E              ;	call Guarda_datos_de_borrado_Amadeus
 503  882E
 504  882E              ;	ld de,Amadeus_db
 505  882E              ;	call Store_Amadeus
 506  882E
 507  882E              ; 	INICIA DISPAROS !!!!!
 508  882E
 509  882E              ;	call Inicia_Puntero_Disparo_Entidades
 510  882E              ;	call Inicia_Puntero_Disparo_Amadeus
 511  882E
 512  882E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 513  882E
 514  882E CD 17 8B     5 call Inicia_punteros_de_cajas
 515  8831 CD 3C 8C     	call Restore_entidad
 516  8834
 517  8834 3A BF 87     	ld a,(Ctrl_1)
 518  8837 CB 5F        	bit 3,a
 519  8839 28 07        	jr z,6F
 520  883B
 521  883B              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 522  883B
 523  883B 21 BF 87     	ld hl,Ctrl_1
 524  883E CB 9E        	res 3,(hl)
 525  8840 18 07        	jr Main
 526  8842
 527  8842              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 528  8842
 529  8842 21 DE 87     6 ld hl,Ctrl_3
 530  8845 CB C6        	set 0,(hl)											; Frame completo.
 531  8847 FB           	ei
 532  8848 76           	halt
 533  8849
 534  8849              ; ------------------------------------
 535  8849
 536  8849              Main
 537  8849              ;
 538  8849              ;	11/12/23
 539  8849
 540  8849              ; Aparece nueva entidad ???
 541  8849
 542  8849              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 543  8849              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 544  8849              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 545  8849              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 546  8849              ;														; _un 2º bloque.
 547  8849
 548  8849 3E 01        	ld a,1
 549  884B D3 FE        	out ($fe),a
 550  884D
 551  884D 3A F4 87     	ld a,(Clock_Entidades_en_curso)
 552  8850 47           	ld b,a
 553  8851 3A F1 87     	ld a,(Contador_de_frames)
 554  8854 B8           	cp b
 555  8855 20 18        	jr nz,13F
 556  8857
 557  8857              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 558  8857              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 559  8857
 560  8857 3A C9 87     21 ld a,(Numero_parcial_de_entidades)
 561  885A 47           	ld b,a
 562  885B 3A CA 87     	ld a,(Entidades_en_curso)
 563  885E B8           	cp b
 564  885F 28 0E        	jr z,13F
 565  8861 30 0C        	jr nc,13F
 566  8863
 567  8863 3C           	inc a
 568  8864 32 CA 87     	ld (Entidades_en_curso),a
 569  8867
 570  8867              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 571  8867
 572  8867 3A F4 87     	ld a,(Clock_Entidades_en_curso)
 573  886A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 574  886A              ;! _ IMPREDECIBLE !!!!
 575  886A C6 64        	add 100
 576  886C 32 F4 87     	ld (Clock_Entidades_en_curso),a
 577  886F
 578  886F              ; -------------------------------------------------------------------------------------------------------------
 579  886F
 580  886F              ; Habilita disparos.
 581  886F
 582  886F 21 F6 87     13 ld hl,Disparo_Amadeus
 583  8872 11 F8 87     	ld de,CLOCK_repone_disparo_Amadeus
 584  8875 CD 09 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 585  8878
 586  8878 21 F9 87     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 587  887B 11 FB 87     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 588  887E CD 09 9C     	call Habilita_disparos
 589  8881
 590  8881              ; COLISIONES.
 591  8881
 592  8881 CD 2B 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 593  8884
 594  8884              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 595  8884              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 596  8884              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 597  8884
 598  8884 AF           	xor a
 599  8885 32 E5 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 600  8888
 601  8888 CD 17 8B     	call Inicia_punteros_de_cajas
 602  888B CD 3C 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 603  888E              ; 														; _ en DRAW.
 604  888E 3A 7E 87     	ld a,(Filas)
 605  8891 A7           	and a
 606  8892 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 607  8894 CD 4E 8C     	call Incrementa_punteros_de_cajas
 608  8897 18 F2        	jr 12B
 609  8899
 610  8899              ; ---------------------------------------------------------------------------------------
 611  8899
 612  8899 3A C9 87     10 ld a,(Numero_parcial_de_entidades)
 613  889C 47               ld b,a
 614  889D A7           	and a
 615  889E 20 14        	jr nz,11F
 616  88A0
 617  88A0 21 BF 87     	ld hl,Ctrl_1
 618  88A3 CB 66        	bit 4,(hl)
 619  88A5 C2 4D 89     	jp nz,16F
 620  88A8
 621  88A8              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 622  88A8
 623  88A8 21 BF 87     	ld hl,Ctrl_1
 624  88AB CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 625  88AD
 626  88AD 3A F1 87     	ld a,(Contador_de_frames)
 627  88B0 3C           	inc a
 628  88B1 32 F5 87     	ld (Activa_recarga_cajas),a
 629  88B4
 630  88B4              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 631  88B4
 632  88B4 3A CA 87     11 ld a,(Entidades_en_curso)
 633  88B7 A7           	and a
 634  88B8 CA 4D 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 635  88BB 47           	ld b,a												; No hay entidades que gestionar.
 636  88BC
 637  88BC              ; ( Código que ejecutamos con cada entidad: ).
 638  88BC
 639  88BC              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 640  88BC
 641  88BC C5           15 push bc 												; Nº de entidades en curso.
 642  88BD
 643  88BD              ; Existe "Entidad_guía" ???.
 644  88BD              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 645  88BD
 646  88BD 3A DE 87     	ld a,(Ctrl_3)
 647  88C0 CB 4F        	bit 1,a
 648  88C2 20 11        	jr nz,22F
 649  88C4
 650  88C4              ; Almacén de "Movimientos_masticados" lleno ???
 651  88C4              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 652  88C4              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 653  88C4
 654  88C4 3A DE 87     	ld a,(Ctrl_3)
 655  88C7 CB 5F        	bit 3,a
 656  88C9 20 0A        	jr nz,22F
 657  88CB
 658  88CB              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 659  88CB
 660  88CB 21 A9 87     	ld hl,Ctrl_2
 661  88CE CB EE        	set 5,(hl)
 662  88D0 21 DE 87     	ld hl,Ctrl_3
 663  88D3 CB CE        	set 1,(hl)
 664  88D5
 665  88D5              ; Impacto ???
 666  88D5
 667  88D5 3A 97 87     22 ld a,(Impacto)
 668  88D8 A7           	and a
 669  88D9 28 31        	jr z,8F
 670  88DB
 671  88DB              ; Hay Impacto en esta entidad.
 672  88DB
 673  88DB 21 F3 87     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 674  88DE 35           	dec (hl)
 675  88DF C2 40 89     	jp nz,17F
 676  88E2
 677  88E2              ;! Velocidad de la animación de la explosión.
 678  88E2
 679  88E2 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 680  88E4              ;														; _,(velocidad de la explosión).
 681  88E4              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 682  88E4
 683  88E4 CD 00 8D     	call Repone_datos_de_borrado
 684  88E7 CD 55 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 685  88EA
 686  88EA              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 687  88EA
 688  88EA 3A A9 87     	ld a,(Ctrl_2)
 689  88ED CB 4F        	bit 1,a
 690  88EF 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 691  88F1
 692  88F1              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 693  88F1
 694  88F1 3A 86 87     	ld a,(CTRL_DESPLZ)
 695  88F4 A7           	and a
 696  88F5 20 08        	jr nz,18F
 697  88F7
 698  88F7 21 84 84     	ld hl,Indice_Explosion_2x2-2
 699  88FA 22 8C 87     	ld (Puntero_DESPLZ_der),hl
 700  88FD 18 06        	jr 19F
 701  88FF
 702  88FF 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 703  8902 22 8C 87     	ld (Puntero_DESPLZ_der),hl
 704  8905
 705  8905 21 A9 87     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 706  8908 CB CE        	set 1,(hl)
 707  890A 18 22        	jr 7F
 708  890C
 709  890C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 710  890C              ; _con las coordenadas de la entidad almacenada en DRAW.
 711  890C
 712  890C 3A BF 87     8 ld a,(Ctrl_1)
 713  890F CB 57        	bit 2,a
 714  8911 28 1B        	jr z,7F
 715  8913
 716  8913 2A E8 87     	ld hl,(Coordenadas_disparo_certero)
 717  8916 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 718  8917              ;														; E contiene la coordenada_X del disparo.
 719  8917 2A 84 87     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 720  891A              ;														; H FILA, (Coordenada_y de la entidad).
 721  891A A7           	and a
 722  891B ED 52        	sbc hl,de
 723  891D
 724  891D CD 44 91     	call Determina_resultado_comparativa
 725  8920
 726  8920 78           	ld a,b
 727  8921 A7           	and a
 728  8922 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 729  8924
 730  8924              ; ----- ----- -----
 731  8924
 732  8924 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 733  8926 32 97 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 734  8929
 735  8929 21 BF 87     	ld hl,Ctrl_1
 736  892C CB 96        	res 2,(hl)
 737  892E
 738  892E CD 9E 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 739  8931
 740  8931 3A A4 87     	ld a,(Ctrl_0)
 741  8934 CB 67        	bit 4,a
 742  8936 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 743  8938
 744  8938              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 745  8938              ; [[[
 746  8938              ;	call Detecta_disparo_entidad
 747  8938              ; ]]]
 748  8938
 749  8938 CD 98 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 750  893B
 751  893B 21 A4 87     	ld hl,Ctrl_0
 752  893E CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 753  8940
 754  8940 CD FD 8B     17 call Store_Restore_cajas
 755  8943
 756  8943 C1           	pop bc
 757  8944
 758  8944 05           	dec b
 759  8945 C2 BC 88     	jp nz,15B
 760  8948
 761  8948              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 762  8948              ; Hemos gestionado todas las unidades.
 763  8948              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 764  8948
 765  8948 21 BF 87     	ld hl,Ctrl_1
 766  894B CB 96        	res 2,(hl)
 767  894D
 768  894D 21 DE 87     16 ld hl,Ctrl_3
 769  8950 CB C6        	set 0,(hl)											; Frame completo.
 770  8952
 771  8952 AF           	xor a
 772  8953 D3 FE        	out ($fe),a
 773  8955
 774  8955 FB           	ei
 775  8956 76           	halt
 776  8957
 777  8957              ; ----------------------------------------
 778  8957
 779  8957 3A BF 87     	ld a,(Ctrl_1) 										; Existe Loop?
 780  895A CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 781  895C CA 49 88     	jp z,Main
 782  895F
 783  895F              ; RECARGA DE NUEVA OLEADA.
 784  895F
 785  895F 3A F1 87     	ld a,(Contador_de_frames)
 786  8962 47           	ld b,a
 787  8963 3A F5 87     	ld a,(Activa_recarga_cajas)
 788  8966 B8           	cp b
 789  8967 28 08        	jr z,20F
 790  8969
 791  8969 21 BF 87     	ld hl,Ctrl_1
 792  896C CB E6        	set 4,(hl)
 793  896E C3 49 88     	jp Main
 794  8971
 795  8971 21 BF 87     20 ld hl,Ctrl_1
 796  8974 CB A6        	res 4,(hl)
 797  8976
 798  8976 3A F1 87     	ld a,(Contador_de_frames)
 799  8979
 800  8979              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 801  8979              ;! _ IMPREDECIBLE !!!!
 802  8979
 803  8979 C6 0A        	add 10
 804  897B 32 F4 87     	ld (Clock_Entidades_en_curso),a
 805  897E
 806  897E C3 18 88     	jp 4B
 807  8981
 808  8981 C9           	ret
 809  8982
 810  8982              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 811  8982              ;
 812  8982              ;	16/11/23
 813  8982
 814  8982              Gestiona_Amadeus
 815  8982
 816  8982              ;! Activa/desactiva impacto con Amadeus.
 817  8982
 818  8982              ;	ld a,(Impacto)
 819  8982              ;	and a
 820  8982              ;	jr nz,2F
 821  8982
 822  8982 CD FB 89     	call Mov_Amadeus
 823  8985
 824  8985 3A A4 87     2 ld a,(Ctrl_0)
 825  8988 CB 67        	bit 4,a
 826  898A 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 827  898C
 828  898C CD 98 8A     	call Guarda_foto_entidad_a_pintar
 829  898F CD E0 8C     	call Guarda_datos_de_borrado_Amadeus
 830  8992
 831  8992 21 A4 87     1 ld hl,Ctrl_0
 832  8995 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 833  8997
 834  8997 CD CF 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 835  899A
 836  899A              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 837  899A
 838  899A CD 97 8B     	call Calcula_numero_de_disparotes
 839  899D
 840  899D C9           	ret
 841  899E
 842  899E              ; --------------------------------------------------------------------------------------------------------------
 843  899E              ;
 844  899E              ;	15/12/23
 845  899E
 846  899E              Mov_obj
 847  899E
 848  899E 3A A9 87     	ld a,(Ctrl_2)
 849  89A1 CB 4F        	bit 1,a
 850  89A3 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 851  89A5
 852  89A5              ; Explosión:
 853  89A5
 854  89A5 3A AA 87     	ld a,(Frames_explosion)
 855  89A8 A7           	and a
 856  89A9 20 1D        	jr nz,4F
 857  89AB
 858  89AB              ;!  Una alimaña menos!!!!!!!!!1
 859  89AB
 860  89AB              ; Se trataba de una Entidad_guía ???
 861  89AB
 862  89AB 3A A9 87     	ld a,(Ctrl_2)
 863  89AE CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 864  89B0 28 05        	jr z,5F
 865  89B2
 866  89B2 21 DE 87     	ld hl,Ctrl_3
 867  89B5 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 868  89B7
 869  89B7              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 870  89B7              ;!! _generado puede ser distinto, (aletoriedad).
 871  89B7
 872  89B7 CD 7E 8C     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 873  89BA 21 C9 87     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 874  89BD 35           	dec (hl)
 875  89BE 21 CA 87     	ld hl,Entidades_en_curso
 876  89C1 35           	dec (hl)
 877  89C2 21 C8 87     	ld hl,Numero_de_entidades
 878  89C5 35           	dec (hl)
 879  89C6 18 32        	jr 3F
 880  89C8
 881  89C8              ; -----
 882  89C8
 883  89C8              ;	`Movemos´ la explosión.
 884  89C8
 885  89C8 2A 8C 87     4 ld hl,(Puntero_DESPLZ_der)
 886  89CB 23           	inc hl
 887  89CC 23           	inc hl
 888  89CD 22 8C 87     	ld (Puntero_DESPLZ_der),hl
 889  89D0 CD AF 8B     	call Extrae_address
 890  89D3 22 82 87     	ld (Puntero_objeto),hl
 891  89D6
 892  89D6 21 AA 87     	ld hl,Frames_explosion
 893  89D9 35           	dec (hl)
 894  89DA
 895  89DA 21 A4 87     	ld hl,Ctrl_0
 896  89DD CB E6        	set 4,(hl)
 897  89DF
 898  89DF 18 19        	jr 3F
 899  89E1
 900  89E1              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 901  89E1
 902  89E1 AF           2 xor a
 903  89E2 32 A4 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 904  89E5
 905  89E5              ; Movemos Entidades malignas.
 906  89E5              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 907  89E5
 908  89E5              ;	ld a,(Ctrl_2)
 909  89E5              ;	bit 5,a
 910  89E5              ;	jr nz,8F
 911  89E5
 912  89E5              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 913  89E5              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 914  89E5              ;	jr 7F
 915  89E5
 916  89E5              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 917  89E5
 918  89E5              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 919  89E5              ;	bit 4,a
 920  89E5              ;	ret z
 921  89E5
 922  89E5              ; Ha habido desplazamiento de la entidad maligna.
 923  89E5              ; Ha llegado a zona de AMADEUS ???
 924  89E5
 925  89E5 3A 85 87     7 ld a,(Coordenada_y)
 926  89E8 FE 14        	cp $14
 927  89EA 38 08        	jr c,1F
 928  89EC
 929  89EC              ; ---------
 930  89EC
 931  89EC              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 932  89EC              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 933  89EC
 934  89EC F3           	di
 935  89ED CD F4 8E     	call Genera_coordenadas_X
 936  89F0 CD 30 8F     	call Compara_coordenadas_X
 937  89F3 FB           	ei
 938  89F4
 939  89F4              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 940  89F4
 941  89F4              ; ---------
 942  89F4
 943  89F4              1
 944  89F4
 945  89F4              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 946  89F4 CD 00 8D     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 947  89F7 CD 55 8B     	call Limpia_Variables_de_borrado
 948  89FA
 949  89FA C9           3 ret
 950  89FB
 951  89FB              ; --------------------------------------------------------------------------------------------------------------
 952  89FB              ;
 953  89FB              ;	29/1/23
 954  89FB
 955  89FB              Mov_Amadeus
 956  89FB
 957  89FB              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 958  89FB
 959  89FB CD F0 98     	call Mov_right
 960  89FE
 961  89FE 3A A4 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 962  8A01 CB 67        	bit 4,a
 963  8A03 C8           	ret z
 964  8A04
 965  8A04              ; ---------
 966  8A04
 967  8A04              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 968  8A04 CD F0 8C     	call Repone_datos_de_borrado_Amadeus
 969  8A07 CD 55 8B     	call Limpia_Variables_de_borrado
 970  8A0A
 971  8A0A C9           	ret
 972  8A0B
 973  8A0B              ; -----------------------------------------------------------------------------------
 974  8A0B              ;
 975  8A0B              ;	12/12/23
 976  8A0B              ;
 977  8A0B              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 978  8A0B
 979  8A0B              Inicia_entidad
 980  8A0B
 981  8A0B              ; Averiguamos el tipo de entidad.
 982  8A0B
 983  8A0B 3A 7D 87     	ld a,(Tipo)
 984  8A0E 3D           	dec a
 985  8A0F 28 02        	jr z,Entidad_tipo_1
 986  8A11 18 FE        	jr $
 987  8A13
 988  8A13              Entidad_tipo_1
 989  8A13
 990  8A13 21 DF 87     	ld hl,Ctrl_4
 991  8A16 CB 46        	bit 0,(hl)
 992  8A18 20 FE        	jr nz,$
 993  8A1A
 994  8A1A CB E6        	set 4,(hl)											; Activa FLAG. Indica que el Almacen_de_mov_masticados de la Entidad_1 está completo.
 995  8A1C
 996  8A1C              ; Inicializa el puntero (Puntero_indice_mov).
 997  8A1C
 998  8A1C CD 25 9F     	call Inicializa_Puntero_indice_mov
 999  8A1F
1000  8A1F              ; Construimos los movimientos masticados de este tipo de entidad.
1001  8A1F
1002  8A1F CD 2D 8A     	call Construye_movimientos_masticados_entidad
1003  8A22
1004  8A22              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
1005  8A22              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
1006  8A22              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
1007  8A22              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
1008  8A22
1009  8A22 CD 82 8A     	call Cargamos_registros_con_mov_masticado
1010  8A25 CD 16 71     	call Guarda_foto_registros
1011  8A28
1012  8A28 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
1013  8A29              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
1014  8A29              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
1015  8A29 CD FD 8B     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
1016  8A2C C9           	ret
1017  8A2D
1018  8A2D              ; -----------------------------------------------------------------------------------
1019  8A2D              ;
1020  8A2D              ;	10/01/24
1021  8A2D              ;
1022  8A2D              ;
1023  8A2D
1024  8A2D              Construye_movimientos_masticados_entidad
1025  8A2D
1026  8A2D 2A A0 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1027  8A30 E5           	push hl
1028  8A31
1029  8A31 CD 75 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1030  8A34              ;															; _ el (Contador_de_mov_masticados).
1031  8A34 CD B5 8B     	call Inicia_Puntero_objeto
1032  8A37 CD 4C 98     	call Recompone_posicion_inicio
1033  8A3A CD 2B 92     1 call Draw
1034  8A3D CD 59 8A     	call Guarda_movimiento_masticado
1035  8A40 CD B4 9D     	call Movimiento
1036  8A43
1037  8A43 3A DE 87     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1038  8A46 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1039  8A48 28 F0        	jr z,1B
1040  8A4A
1041  8A4A              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1042  8A4A              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1043  8A4A
1044  8A4A E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1045  8A4B 22 A0 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1046  8A4E
1047  8A4E
1048  8A4E              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1049  8A4E
1050  8A4E CD 38 9F     	call Situa_en_Contador_general_de_mov_masticados
1051  8A51
1052  8A51              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1053  8A51              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1054  8A51
1055  8A51 ED 4B A2 87  	ld bc,(Contador_de_mov_masticados)
1056  8A55 71           	ld (hl),c
1057  8A56 23           	inc hl
1058  8A57 70           	ld (hl),b
1059  8A58
1060  8A58 C9           	ret
1061  8A59
1062  8A59              ; -----------------------------------------------------------------------------------
1063  8A59              ;
1064  8A59              ;	28/12/23
1065  8A59              ;
1066  8A59              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1067  8A59              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1068  8A59
1069  8A59              Guarda_movimiento_masticado
1070  8A59
1071  8A59 ED 73 D0 87  	ld (Stack),sp
1072  8A5D ED 7B A0 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1073  8A61
1074  8A61 E5           	push hl
1075  8A62 DD E5            push ix
1076  8A64 FD E5            push iy
1077  8A66
1078  8A66 ED 7B D0 87      ld sp,(Stack)
1079  8A6A
1080  8A6A              ;    push hl
1081  8A6A
1082  8A6A 2A A2 87        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1083  8A6D 23           	inc hl
1084  8A6E 22 A2 87     	ld (Contador_de_mov_masticados),hl
1085  8A71
1086  8A71              ;	pop hl
1087  8A71
1088  8A71 CD 75 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1089  8A74              ;															; _ el (Contador_de_mov_masticados).
1090  8A74 C9               ret
1091  8A75
1092  8A75              ; --------------------------------------------------------------------------------------------------------------
1093  8A75              ;
1094  8A75              ;	12/1/24
1095  8A75              ;
1096  8A75              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1097  8A75
1098  8A75              Actualiza_Puntero_de_almacen_de_mov_masticados
1099  8A75
1100  8A75              ;	push hl
1101  8A75              ;	push bc
1102  8A75
1103  8A75 2A A0 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1104  8A78 01 06 00     	ld bc,6
1105  8A7B A7           	and a
1106  8A7C ED 4A        	adc hl,bc
1107  8A7E 22 A0 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1108  8A81
1109  8A81              ;	pop bc
1110  8A81              ;	pop hl
1111  8A81
1112  8A81 C9           	ret
1113  8A82
1114  8A82              ; --------------------------------------------------------------------------------------------------------------
1115  8A82              ;
1116  8A82              ;	15/01/24
1117  8A82              ;
1118  8A82              ;	Cargamos los registros_
1119  8A82              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1120  8A82              ;
1121  8A82              ;	HL contiene la dirección de la rutina de impresión.
1122  8A82              ;	IX contiene el puntero de impresión.
1123  8A82              ;	IY contiene (Puntero_objeto).
1124  8A82
1125  8A82
1126  8A82 ED 73 D0 87  Cargamos_registros_con_mov_masticado ld (Stack),sp
1127  8A86 ED 7B A0 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1128  8A8A
1129  8A8A FD E1        	pop iy
1130  8A8C DD E1        	pop ix
1131  8A8E E1           	pop hl
1132  8A8F
1133  8A8F ED 73 A0 87  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1134  8A93
1135  8A93 ED 7B D0 87  	ld sp,(Stack)
1136  8A97
1137  8A97 C9           	ret
1138  8A98
1139  8A98              ; --------------------------------------------------------------------------------------------------------------
1140  8A98              ;
1141  8A98              ;	28/12/23
1142  8A98              ;
1143  8A98              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1144  8A98              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1145  8A98
1146  8A98              Guarda_foto_entidad_a_pintar
1147  8A98
1148  8A98 3A A4 87     	ld a,(Ctrl_0)
1149  8A9B CB 77        	bit 6,a
1150  8A9D 28 0A        	jr z,5F
1151  8A9F
1152  8A9F              ; Guarda la foto de Amadeus.
1153  8A9F
1154  8A9F CD 2B 92     	call Draw
1155  8AA2
1156  8AA2 CD 59 8A     	call Guarda_movimiento_masticado	;! Provisional
1157  8AA5
1158  8AA5 CD 16 71     	call Guarda_foto_registros
1159  8AA8
1160  8AA8              ;	di
1161  8AA8              ;	jr $
1162  8AA8              ;	ei
1163  8AA8
1164  8AA8 C9           	ret
1165  8AA9
1166  8AA9              ; ENTIDADES!
1167  8AA9              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1168  8AA9
1169  8AA9 3A DE 87     5 ld a,(Ctrl_3)
1170  8AAC CB 5F        	bit 3,a
1171  8AAE 28 04        	jr z,1F
1172  8AB0
1173  8AB0              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1174  8AB0
1175  8AB0 CD EB 8A     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1176  8AB3 C9           	ret
1177  8AB4
1178  8AB4              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1179  8AB4
1180  8AB4 3A DE 87     1 ld a,(Ctrl_3)
1181  8AB7 CB 57        	bit 2,a
1182  8AB9 20 10        	jr nz,6F
1183  8ABB
1184  8ABB              ; Entidad guía o fantasma ???
1185  8ABB
1186  8ABB 3A A9 87     	ld a,(Ctrl_2)
1187  8ABE CB 6F        	bit 5,a
1188  8AC0 20 10        	jr nz,3F
1189  8AC2
1190  8AC2              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1191  8AC2
1192  8AC2 18 EC        	jr 4B
1193  8AC4
1194  8AC4              ; ENTIDAD_GUÍA:
1195  8AC4              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1196  8AC4              ; _guardando "movimientos_masticados".
1197  8AC4
1198  8AC4 3A DE 87     2 ld a,(Ctrl_3)
1199  8AC7 CB 57        	bit 2,a
1200  8AC9 28 07        	jr z,3F
1201  8ACB
1202  8ACB              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1203  8ACB              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1204  8ACB
1205  8ACB CB 97        6 res 2,a
1206  8ACD CB DF        	set 3,a
1207  8ACF 32 DE 87     	ld (Ctrl_3),a
1208  8AD2
1209  8AD2
1210  8AD2              ;	Esto sólo lo ejecuta una entidad guía.
1211  8AD2
1212  8AD2 CD 2B 92     3 	call Draw
1213  8AD5 CD 59 8A     	call Guarda_movimiento_masticado
1214  8AD8 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1215  8ADB
1216  8ADB              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1217  8ADB              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1218  8ADB
1219  8ADB CD DF 8A     	call Convierte_guia_en_fantasma
1220  8ADE C9           	ret
1221  8ADF
1222  8ADF              ; --------------------------------------------------------------------------------------------------------------
1223  8ADF              ;
1224  8ADF              ;	28/12/23
1225  8ADF              ;
1226  8ADF
1227  8ADF 3A DE 87     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1228  8AE2 CB 5F        	bit 3,a
1229  8AE4 C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1230  8AE5
1231  8AE5              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1232  8AE5
1233  8AE5 21 A9 87     	ld hl,Ctrl_2
1234  8AE8 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1235  8AEA
1236  8AEA C9           	ret
1237  8AEB
1238  8AEB              ; --------------------------------------------------------------------------------------------------------------
1239  8AEB              ;
1240  8AEB              ;	21/12/23
1241  8AEB              ;
1242  8AEB              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1243  8AEB              ;
1244  8AEB              ;		IY contiene (Puntero_objeto).
1245  8AEB              ;		IX contiene el puntero de impresión.
1246  8AEB              ;		HL contiene la dirección de la rutina de impresión.
1247  8AEB              ;
1248  8AEB              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1249  8AEB              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1250  8AEB              ;	Decrementa el (Contador_de_mov_masticados)
1251  8AEB              ;
1252  8AEB              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1253  8AEB              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1254  8AEB              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1255  8AEB
1256  8AEB
1257  8AEB ED 73 D0 87  Prepara_registros_con_mov_masticados ld (Stack),sp
1258  8AEF ED 7B A0 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1259  8AF3
1260  8AF3 FD E1        	pop iy
1261  8AF5 DD E1        	pop ix
1262  8AF7 E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1263  8AF8
1264  8AF8 ED 73 A0 87  	ld (Puntero_de_almacen_de_mov_masticados),sp
1265  8AFC ED 7B D0 87  	ld sp,(Stack)
1266  8B00
1267  8B00 CD 16 71     	call Guarda_foto_registros
1268  8B03
1269  8B03 E5           	push hl
1270  8B04
1271  8B04 2A A2 87     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1272  8B07 23           	inc hl
1273  8B08 22 A2 87     	ld (Contador_de_mov_masticados),hl
1274  8B0B
1275  8B0B              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1276  8B0B
1277  8B0B ED 4B AB 87  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1278  8B0F A7           	and a
1279  8B10 ED 42        	sbc hl,bc
1280  8B12 CC DF 8A     	call z,Convierte_guia_en_fantasma
1281  8B15
1282  8B15 E1           	pop hl
1283  8B16
1284  8B16 C9           	ret
1285  8B17
1286  8B17              ; --------------------------------------------------------------------------------------------------------------
1287  8B17              ;
1288  8B17              ;	19/9/23
1289  8B17
1290  8B17              ;Prepara_var_pintado
1291  8B17
1292  8B17              ;	ld hl,Filas
1293  8B17              ;	ld de,Variables_de_pintado
1294  8B17              ;	ld bc,8
1295  8B17              ;	ldir
1296  8B17              ;	ret
1297  8B17
1298  8B17              ; --------------------------------------------------------------------------------------------------------------
1299  8B17
1300  8B17              ;Repone_pintar
1301  8B17
1302  8B17              ;	ld hl,Variables_de_pintado
1303  8B17              ;	ld de,Filas
1304  8B17              ;	ld bc,8
1305  8B17              ;	ldir
1306  8B17              ;	ret
1307  8B17
1308  8B17              ; *************************************************************************************************************************************************************
1309  8B17              ;
1310  8B17              ; 8/1/23
1311  8B17              ;
1312  8B17              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1313  8B17              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1314  8B17              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1315  8B17
1316  8B17              ; Destruye HL y DE !!!!!
1317  8B17
1318  8B17              Inicia_punteros_de_cajas
1319  8B17
1320  8B17 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1321  8B1A CD AF 8B         call Extrae_address
1322  8B1D 22 C2 87         ld (Puntero_store_caja),hl
1323  8B20 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1324  8B23 22 C6 87     	ld (Indice_restore_caja),hl
1325  8B26 CD AF 8B     	call Extrae_address
1326  8B29 22 C4 87     	ld (Puntero_restore_caja),hl
1327  8B2C C9               ret
1328  8B2D
1329  8B2D              ; *************************************************************************************************************************************************************
1330  8B2D              ;
1331  8B2D              ; 8/1/23
1332  8B2D              ;
1333  8B2D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1334  8B2D
1335  8B2D 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1336  8B30 22 E1 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1337  8B33 C9           	ret
1338  8B34 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1339  8B37 22 E3 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1340  8B3A C9           	ret
1341  8B3B
1342  8B3B              ; -------------------------------------------------------------------------------------------------------------
1343  8B3B              ;
1344  8B3B              ; 21/9/23
1345  8B3B              ;
1346  8B3B
1347  8B3B              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1348  8B3B
1349  8B3B              Limpia_album_Amadeus
1350  8B3B
1351  8B3B 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1352  8B3E 7E           	ld a,(hl)
1353  8B3F A7           	and a
1354  8B40 C8           	ret z
1355  8B41
1356  8B41 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1357  8B44 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1358  8B47 01 0B 00     	ld bc,11
1359  8B4A AF           	xor a
1360  8B4B 77           	ld (hl),a
1361  8B4C ED B0        	ldir
1362  8B4E
1363  8B4E 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1364  8B51 22 DC 87     	ld (End_Snapshot_Amadeus),hl
1365  8B54
1366  8B54 C9           	ret
1367  8B55
1368  8B55 21 98 87     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1369  8B58 11 99 87     	ld de,Variables_de_borrado+1
1370  8B5B 01 05 00     	ld bc,5
1371  8B5E AF           	xor a
1372  8B5F 77           	ld (hl),a
1373  8B60 ED B0        	ldir
1374  8B62 C9           	ret
1375  8B63
1376  8B63              ; -------------------------------------------------------------------------------------------------------------
1377  8B63              ;
1378  8B63              ; 8/9/23
1379  8B63              ;
1380  8B63
1381  8B63              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1382  8B63              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1383  8B63
1384  8B63              Calcula_numero_de_malotes
1385  8B63
1386  8B63 21 00 70     	ld hl,Album_de_fotos
1387  8B66 EB           	ex de,hl
1388  8B67 2A D6 87     	ld hl,(Stack_snapshot)
1389  8B6A
1390  8B6A 06 00        	ld b,0
1391  8B6C 7D           	ld a,l
1392  8B6D 93           	sub e
1393  8B6E 28 07        	jr z,1F
1394  8B70
1395  8B70              ; Nº de malotes no es "0".
1396  8B70
1397  8B70 D6 06        2 sub 6
1398  8B72 04           	inc b
1399  8B73 A7           	and a
1400  8B74 20 FA        	jr nz,2B
1401  8B76 78           	ld a,b
1402  8B77
1403  8B77 32 CB 87     1 ld (Numero_de_malotes),a
1404  8B7A C9           	ret
1405  8B7B
1406  8B7B              ; -------------------------------------------------------------------------------------------------------------
1407  8B7B              ;
1408  8B7B              ; 8/9/23
1409  8B7B              ;
1410  8B7B
1411  8B7B              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1412  8B7B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1413  8B7B
1414  8B7B              Calcula_malotes_Amadeus
1415  8B7B
1416  8B7B 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1417  8B7E EB           	ex de,hl
1418  8B7F 2A DC 87     	ld hl,(End_Snapshot_Amadeus)
1419  8B82
1420  8B82 7C           	ld a,h
1421  8B83 A7           	and a
1422  8B84 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1423  8B86
1424  8B86 06 00        	ld b,0
1425  8B88 7D           	ld a,l
1426  8B89 93           	sub e
1427  8B8A 28 07        	jr z,1F
1428  8B8C
1429  8B8C              ; Nº de malotes no es "0".
1430  8B8C
1431  8B8C D6 06        2 sub 6
1432  8B8E 04           	inc b
1433  8B8F A7           	and a
1434  8B90 20 FA        	jr nz,2B
1435  8B92 78           	ld a,b
1436  8B93
1437  8B93 32 CB 87     1 ld (Numero_de_malotes),a
1438  8B96 C9           	ret
1439  8B97
1440  8B97              ; -------------------------------------------------------------------------------------------------------------
1441  8B97              ;
1442  8B97              ; 28/2/23
1443  8B97              ;
1444  8B97
1445  8B97              Calcula_numero_de_disparotes
1446  8B97
1447  8B97 21 56 70     	ld hl,Album_de_fotos_disparos
1448  8B9A EB           	ex de,hl
1449  8B9B 2A DA 87     	ld hl,(End_Snapshot_disparos)
1450  8B9E
1451  8B9E 06 00        	ld b,0
1452  8BA0 7D           	ld a,l
1453  8BA1 93           	sub e
1454  8BA2 28 07        	jr z,1F
1455  8BA4
1456  8BA4              ; Nº de malotes no es "0".
1457  8BA4
1458  8BA4 D6 06        2 sub 6
1459  8BA6 04           	inc b
1460  8BA7 A7           	and a
1461  8BA8 20 FA        	jr nz,2B
1462  8BAA 78           	ld a,b
1463  8BAB
1464  8BAB 32 E0 87     1 ld (Numero_de_disparotes),a
1465  8BAE C9           	ret
1466  8BAF
1467  8BAF              ; *************************************************************************************************************************************************************
1468  8BAF              ;
1469  8BAF              ; 20/10/22
1470  8BAF              ;
1471  8BAF              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1472  8BAF              ;
1473  8BAF              ; Destruye el puntero y DE !!!!!
1474  8BAF
1475  8BAF 5E           Extrae_address ld e,(hl)
1476  8BB0 23           	inc hl
1477  8BB1 56           	ld d,(hl)
1478  8BB2 2B           	dec hl
1479  8BB3 EB           	ex de,hl
1480  8BB4 C9           	ret
1481  8BB5
1482  8BB5              ; *************************************************************************************************************************************************************
1483  8BB5              ;
1484  8BB5              ;	7/2/23
1485  8BB5              ;
1486  8BB5              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1487  8BB5              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1488  8BB5              ;
1489  8BB5              ;   Destruye HL y BC !!!!!,
1490  8BB5              ;
1491  8BB5              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1492  8BB5              ;					"0" ..... Izquierda.
1493  8BB5
1494  8BB5              Inicia_Puntero_objeto
1495  8BB5
1496  8BB5 3A 92 87     	ld a,(Cuad_objeto)
1497  8BB8 E6 01        	and 1
1498  8BBA F5           	push af
1499  8BBB CC D9 8B     	call z,Inicia_puntero_objeto_izq
1500  8BBE F1           	pop af
1501  8BBF 28 2B        	jr z,1F
1502  8BC1 CD C6 8B     	call Inicia_puntero_objeto_der
1503  8BC4 18 26        	jr 1F
1504  8BC6
1505  8BC6              ; Arrancamos desde la parte izquierda de la pantalla.
1506  8BC6              ; Iniciamos (Indice_Sprite_der).
1507  8BC6
1508  8BC6 2A 88 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1509  8BC9 22 8C 87     	ld (Puntero_DESPLZ_der),hl
1510  8BCC CD AF 8B     	call Extrae_address
1511  8BCF 22 82 87     	ld (Puntero_objeto),hl
1512  8BD2
1513  8BD2 2A 8A 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1514  8BD5 22 8E 87     	ld (Puntero_DESPLZ_izq),hl
1515  8BD8 C9           	ret
1516  8BD9
1517  8BD9              ; Arrancamos desde la parte derecha de la pantalla.
1518  8BD9              ; Iniciamos (Indice_Sprite_izq).
1519  8BD9
1520  8BD9 2A 8A 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1521  8BDC 22 8E 87     	ld (Puntero_DESPLZ_izq),hl
1522  8BDF CD AF 8B     	call Extrae_address
1523  8BE2 22 82 87     	ld (Puntero_objeto),hl
1524  8BE5
1525  8BE5 2A 88 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1526  8BE8 22 8C 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1527  8BEB C9           	ret
1528  8BEC
1529  8BEC              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1530  8BEC
1531  8BEC 21 40 83     1 ld hl,Amadeus
1532  8BEF ED 4B 82 87  	ld bc,(Puntero_objeto)
1533  8BF3 B7 ED 42     	sub hl,bc
1534  8BF6 C0           	ret nz
1535  8BF7 21 A4 87     	ld hl,Ctrl_0
1536  8BFA CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1537  8BFC C9           	ret 												; _de nuestra nave en los extremos.
1538  8BFD
1539  8BFD              ; *************************************************************************************************************************************************************
1540  8BFD              ;
1541  8BFD              ;	21/12/23
1542  8BFD              ;
1543  8BFD              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1544  8BFD              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1545  8BFD
1546  8BFD              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1547  8BFD              ;	_de la 2ª y 3ª entidad respectivamente.
1548  8BFD
1549  8BFD              Store_Restore_cajas
1550  8BFD
1551  8BFD              ;	push hl
1552  8BFD              ;	push de
1553  8BFD              ; 	push bc
1554  8BFD
1555  8BFD              ;	STORE !!!!!
1556  8BFD              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1557  8BFD
1558  8BFD
1559  8BFD F3           	di
1560  8BFE 21 7D 87     	ld hl,Variables_DRAW
1561  8C01 ED 5B C2 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1562  8C05 01 38 00     	ld bc,56
1563  8C08 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1564  8C0A FB           	ei
1565  8C0B
1566  8C0B 18 FE        	jr $
1567  8C0D
1568  8C0D              ; 	Entidad_sospechosa. 20/4/23
1569  8C0D
1570  8C0D 3A 97 87     	ld a,(Impacto)
1571  8C10 A7           	and a
1572  8C11 28 0C        	jr z,1F
1573  8C13
1574  8C13 2A C2 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1575  8C16 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1576  8C19 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1577  8C1A ED 4A        	adc hl,bc 											; _ "0" más adelante.
1578  8C1C 22 E6 87     	ld (Entidad_sospechosa_de_colision),hl
1579  8C1F
1580  8C1F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1581  8C1F
1582  8C1F 2A C4 87     1 ld hl,(Puntero_restore_caja)
1583  8C22 7E           	ld a,(hl)
1584  8C23 A7           	and a
1585  8C24 F5           	push af
1586  8C25 28 0E        	jr z,2F
1587  8C27
1588  8C27 F3           	di
1589  8C28 18 FE        	jr $
1590  8C2A FB           	ei
1591  8C2B
1592  8C2B F3           	di
1593  8C2C 11 7D 87     	ld de,Variables_DRAW
1594  8C2F 01 38 00     	ld bc,56
1595  8C32 ED B0        	ldir
1596  8C34 FB           	ei
1597  8C35
1598  8C35 CD 4E 8C     2 call Incrementa_punteros_de_cajas
1599  8C38
1600  8C38 F1           	pop af
1601  8C39 28 E4        	jr z,1B
1602  8C3B
1603  8C3B              ;	pop bc
1604  8C3B              ;	pop de
1605  8C3B              ;	pop hl
1606  8C3B
1607  8C3B C9           	ret
1608  8C3C
1609  8C3C              ; **************************************************************************************************
1610  8C3C              ;
1611  8C3C              ;	21/12/23
1612  8C3C              ;
1613  8C3C              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1614  8C3C
1615  8C3C E5           Restore_entidad push hl
1616  8C3D D5           	push de
1617  8C3E C5            	push bc
1618  8C3F
1619  8C3F 2A C2 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1620  8C42 11 7D 87     	ld de,Variables_DRAW
1621  8C45 01 38 00     	ld bc,56
1622  8C48 ED B0        	ldir
1623  8C4A
1624  8C4A C1           	pop bc
1625  8C4B D1           	pop de
1626  8C4C E1           	pop hl
1627  8C4D C9           	ret
1628  8C4E
1629  8C4E              ; **************************************************************************************************
1630  8C4E              ;
1631  8C4E              ;	08/05/23
1632  8C4E              ;
1633  8C4E              ;	Incrementamos los dos punteros de entidades. (+1).
1634  8C4E
1635  8C4E              Incrementa_punteros_de_cajas
1636  8C4E
1637  8C4E 2A C4 87     	ld hl,(Puntero_restore_caja)
1638  8C51 22 C2 87     	ld (Puntero_store_caja),hl
1639  8C54 2A C6 87     	ld hl,(Indice_restore_caja)
1640  8C57 23           	inc hl
1641  8C58 23           	inc hl
1642  8C59 22 C6 87     	ld (Indice_restore_caja),hl
1643  8C5C CD AF 8B         call Extrae_address
1644  8C5F 22 C4 87         ld (Puntero_restore_caja),hl
1645  8C62 C9               ret
1646  8C63
1647  8C63              ; **************************************************************************************************
1648  8C63              ;
1649  8C63              ;	21/12/23
1650  8C63              ;
1651  8C63              ;	Restore_Amadeus
1652  8C63              ;
1653  8C63              ;	Cargamos en DRAW los parámetros de Amadeus.
1654  8C63              ;
1655  8C63
1656  8C63 E5           Restore_Amadeus	push hl
1657  8C64 D5           	push de
1658  8C65 C5            	push bc
1659  8C66 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1660  8C69 11 7D 87     	ld de,Variables_DRAW
1661  8C6C 01 38 00     	ld bc,56
1662  8C6F ED B0        	ldir
1663  8C71 C1           	pop bc
1664  8C72 D1           	pop de
1665  8C73 E1           	pop hl
1666  8C74 C9           	ret
1667  8C75
1668  8C75              ; *************************************************************************************************************************************************************
1669  8C75              ;
1670  8C75              ;	21/12/23
1671  8C75              ;
1672  8C75              ;	Store_Amadeus
1673  8C75              ;
1674  8C75              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1675  8C75              ;
1676  8C75              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1677  8C75              ;
1678  8C75              ;	DESTRUYE: HL y BC y DE.
1679  8C75
1680  8C75 21 7D 87     Store_Amadeus ld hl,Variables_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1681  8C78 01 38 00     	ld bc,56
1682  8C7B ED B0        	ldir
1683  8C7D C9           	ret
1684  8C7E
1685  8C7E              ; -----------------------------------------------------------
1686  8C7E              ;
1687  8C7E              ;	21/12/23
1688  8C7E              ;
1689  8C7E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1690  8C7E              ;
1691  8C7E              ;	Destruye: HL,BC,DE,A
1692  8C7E
1693  8C7E 21 7D 87     Borra_datos_entidad ld hl,Variables_DRAW
1694  8C81 01 37 00     	ld bc,55
1695  8C84 AF           	xor a
1696  8C85 77           	ld (hl),a
1697  8C86 11 7E 87     	ld de,Variables_DRAW+1
1698  8C89 ED B0        	ldir
1699  8C8B C9           	ret
1700  8C8C
1701  8C8C              ; -----------------------------------------------------------
1702  8C8C
1703  8C8C              ; Teclado.
1704  8C8C
1705  8C8C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1706  8C8E DB FE        	in a,($fe)
1707  8C90 E6 01        	and $01
1708  8C92 28 02        	jr z,1f
1709  8C94 18 F6        	jr Pulsa_ENTER
1710  8C96 C9           1 ret
1711  8C97
1712  8C97              ; **************************************************************************************************
1713  8C97              ;
1714  8C97              ; Temporización.
1715  8C97
1716  8C97              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1717  8C97              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1718  8C97              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1719  8C97              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1720  8C97
1721  8C97              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1722  8C97              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1723  8C97              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1724  8C97
1725  8C97              ; A partir de $4f61 no hace falta DELAY.
1726  8C97
1727  8C97              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1728  8C97
1729  8C97 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1730  8C9A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1731  8C9B 78           	LD A,B
1732  8C9C A7           	AND A
1733  8C9D 20 FB        	JR NZ,wait
1734  8C9F C9           	RET
1735  8CA0
1736  8CA0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1737  8CA0              ;
1738  8CA0              ;	5/3/23
1739  8CA0              ;
1740  8CA0              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1741  8CA0
1742  8CA0              Movimiento_Amadeus
1743  8CA0
1744  8CA0              ; Disparo.
1745  8CA0
1746  8CA0 3A F6 87     	ld a,(Disparo_Amadeus)
1747  8CA3 A7           	and a
1748  8CA4 20 02        	jr nz,1F
1749  8CA6 18 15        	jr 2F
1750  8CA8
1751  8CA8 3E F7        1 ld a,$f7													; "5" para disparar.
1752  8CAA DB FE        	in a,($fe)
1753  8CAC E6 10        	and $10
1754  8CAE
1755  8CAE F5           	push af
1756  8CAF CC 57 8D     	call z,Genera_disparo
1757  8CB2 F1           	pop af
1758  8CB3 20 08        	jr nz,2F
1759  8CB5
1760  8CB5 3A F6 87     	ld a,(Disparo_Amadeus)
1761  8CB8 EE 01        	xor 1
1762  8CBA 32 F6 87     	ld (Disparo_Amadeus),a
1763  8CBD 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1764  8CBF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1765  8CC1 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1766  8CC3 CC 13 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1767  8CC6
1768  8CC6 3E F7        	ld a,$f7
1769  8CC8 DB FE        	in a,($fe)
1770  8CCA E6 01        	and $01
1771  8CCC C8           	ret z
1772  8CCD
1773  8CCD 3E F7        	ld a,$f7
1774  8CCF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1775  8CD1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1776  8CD3 CC F0 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1777  8CD6 C9           	ret
1778  8CD7
1779  8CD7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1780  8CD7              ;
1781  8CD7              ;	Rutina provisional para que los malotes cagen balas.
1782  8CD7
1783  8CD7              Detecta_disparo_entidad
1784  8CD7
1785  8CD7 3A F9 87     	ld a,(Disparo_entidad)
1786  8CDA A7           	and a
1787  8CDB C8           	ret z
1788  8CDC
1789  8CDC              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1790  8CDC
1791  8CDC              ;	ld a,$7f				; Detecta SPACE.
1792  8CDC              ;	in a,($fe)
1793  8CDC              ;	and 1
1794  8CDC              ;	ret nz
1795  8CDC
1796  8CDC CD 57 8D     	call Genera_disparo
1797  8CDF C9           	ret
1798  8CE0
1799  8CE0              ; ----------------------------------------------------------------------
1800  8CE0              ;
1801  8CE0              ;	8/9/23
1802  8CE0
1803  8CE0 2A DC 87     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1804  8CE3 2B            	dec hl
1805  8CE4 7E           	ld a,(hl)
1806  8CE5 A7           	and a
1807  8CE6 C8           	ret z										; Salimos si es álbum está vacío.
1808  8CE7
1809  8CE7 11 9D 87     	ld de,Variables_de_borrado+5
1810  8CEA 01 06 00     	ld bc,6
1811  8CED ED B8        	lddr
1812  8CEF C9           	ret
1813  8CF0
1814  8CF0              ; ----------------------------------------------------------------------
1815  8CF0              ;
1816  8CF0              ;	9/9/23
1817  8CF0
1818  8CF0              Repone_datos_de_borrado_Amadeus
1819  8CF0
1820  8CF0 21 98 87     	ld hl,Variables_de_borrado
1821  8CF3 11 AC 70     	ld de,Album_de_fotos_Amadeus
1822  8CF6 01 06 00     	ld bc,6
1823  8CF9 ED B0        	ldir
1824  8CFB
1825  8CFB EB           	ex de,hl
1826  8CFC 22 DC 87     	ld (End_Snapshot_Amadeus),hl
1827  8CFF
1828  8CFF C9           	ret
1829  8D00
1830  8D00              ; ----------------------------------------------------------------------
1831  8D00              ;
1832  8D00              ;	27/10/23
1833  8D00              ;
1834  8D00
1835  8D00              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1836  8D00              ;	_ Album_de_fotos correspondiente.
1837  8D00
1838  8D00              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1839  8D00              ;	_ durante el proceso de escritura.
1840  8D00
1841  8D00              Repone_datos_de_borrado
1842  8D00
1843  8D00 F3           	di
1844  8D01 ED 5B D6 87  	ld de,(Stack_snapshot)
1845  8D05 21 98 87     	ld hl,Variables_de_borrado
1846  8D08 01 06 00     	ld bc,6
1847  8D0B ED B0        	ldir
1848  8D0D FB           	ei
1849  8D0E
1850  8D0E EB           	ex de,hl
1851  8D0F 22 D6 87     	ld (Stack_snapshot),hl
1852  8D12
1853  8D12 C9           	ret
1854  8D13
1855  8D13              ; --------------------------------------------------------------------------------------
1856  8D13
1857  8D13              Pinta_Amadeus
1858  8D13
1859  8D13 CD 7B 8B        	call Calcula_malotes_Amadeus
1860  8D16 CD BB 95     	call Extrae_foto_Amadeus
1861  8D19 CD 3B 8B     	call Limpia_album_Amadeus
1862  8D1C
1863  8D1C C9           	ret
1864  8D1D
1865  8D1D              Pinta_entidades
1866  8D1D
1867  8D1D              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1868  8D1D
1869  8D1D 3A DE 87     	ld a,(Ctrl_3)
1870  8D20 CB 47        	bit 0,a
1871  8D22 C8           	ret z
1872  8D23
1873  8D23 CD 63 8B     	call Calcula_numero_de_malotes
1874  8D26 CD 39 95     	call Extrae_foto_entidades
1875  8D29 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1876  8D2C
1877  8D2C C9           	ret
1878  8D2D
1879  8D2D              ; -----------------------------------------------------------------------------------
1880  8D2D              ;
1881  8D2D              ;	10/12/23
1882  8D2D              ;
1883  8D2D              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1884  8D2D
1885  8D2D              Actualiza_relojes
1886  8D2D
1887  8D2D 3A DE 87     	ld a,(Ctrl_3)
1888  8D30 CB 47        	bit 0,a
1889  8D32 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1890  8D33
1891  8D33 21 F1 87     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1892  8D36 34           	inc (hl)
1893  8D37
1894  8D37 34           	inc (hl)
1895  8D38 35           	dec (hl)
1896  8D39 C0           	ret nz
1897  8D3A
1898  8D3A 21 F2 87     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1899  8D3D 34           	inc (hl)
1900  8D3E C9           	ret
1901  8D3F
1902  8D3F              ; ---------------------------------------------------------------
1903  8D3F              ;
1904  8D3F              ;	21/12/23
1905  8D3F
1906  8D3F              Guarda_parametros_DRAW
1907  8D3F
1908  8D3F 21 7D 87     	ld hl,Variables_DRAW
1909  8D42 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1910  8D45 01 38 00     	ld bc,56
1911  8D48 ED B0        	ldir
1912  8D4A C9           	ret
1913  8D4B
1914  8D4B              Recupera_parametros_DRAW
1915  8D4B
1916  8D4B 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1917  8D4E 11 7D 87     	ld de,Variables_DRAW
1918  8D51 01 38 00     	ld bc,56
1919  8D54 ED B0        	ldir
1920  8D56 C9           	ret
1921  8D57
1922  8D57              ; ---------------------------------------------------------------
1923  8D57
1924  8D57              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D57              ; ******************************************************************************************************************************************************************************************
   2+ 8D57              ;
   3+ 8D57              ;   21/07/23
   4+ 8D57              ;
   5+ 8D57              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D57              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D57              ;
   8+ 8D57              ;
   9+ 8D57              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D57              ;
  11+ 8D57              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D57              ;               _ hacen las entidades hacia abajo.
  13+ 8D57              ;
  14+ 8D57              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D57              ;
  16+ 8D57              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D57              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D57              ;
  19+ 8D57              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D57              ;           _ la bala.
  21+ 8D57              ;
  22+ 8D57              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D57              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D57              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D57              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D57              ;           _ en el momento de generarse la bala)).
  27+ 8D57
  28+ 8D57              Genera_disparo
  29+ 8D57
  30+ 8D57              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D57              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D57              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D57              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D57              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D57              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D57              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D57
  38+ 8D57              ; Exclusiones:
  39+ 8D57
  40+ 8D57 3A 96 87         ld a,(Vel_down)
  41+ 8D5A 47               ld b,a
  42+ 8D5B 3A F0 87         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D5E B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D5F D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D60 3A A5 87         ld a,(Columnas)
  46+ 8D63 47               ld b,a
  47+ 8D64 3A 7F 87         ld a,(Columns)
  48+ 8D67 B8               cp b
  49+ 8D68 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D69
  51+ 8D69              ; ----- ----- -----
  52+ 8D69
  53+ 8D69 3A A4 87         ld a,(Ctrl_0)
  54+ 8D6C CB 77            bit 6,a
  55+ 8D6E 20 06            jr nz,14F
  56+ 8D70
  57+ 8D70 3A 85 87         ld a,(Coordenada_y)
  58+ 8D73 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D75 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D76
  61+ 8D76 21 00 80     14 ld hl,Indice_disparo
  62+ 8D79 3A 86 87         ld a,(CTRL_DESPLZ)
  63+ 8D7C 4F               ld c,a
  64+ 8D7D 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D7F              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D7F              ;                                            ""        ""       "f9", B="1"
  67+ 8D7F              ;                                            ""        ""       "fb", B="2"
  68+ 8D7F              ;                                            ""        ""       "fb", B="3"
  69+ 8D7F A7               and a
  70+ 8D80 28 10            jr z,1F
  71+ 8D82 E6 01            and 1
  72+ 8D84 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D85
  74+ 8D85 79               ld a,c
  75+ 8D86 16 F9            ld d,$f9
  76+ 8D88 23           2 inc hl
  77+ 8D89 23               inc hl
  78+ 8D8A 04               inc b
  79+ 8D8B BA               cp d
  80+ 8D8C 28 04            jr z,1F
  81+ 8D8E 14               inc d
  82+ 8D8F 14               inc d
  83+ 8D90 18 F6            jr 2B
  84+ 8D92
  85+ 8D92 CD AF 8B     1 call Extrae_address
  86+ 8D95 E5               push hl
  87+ 8D96 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D98 DD 21 01 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D9C
  90+ 8D9C              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D9C              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D9C
  93+ 8D9C 3A A4 87         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D9F CB 77            bit 6,a
  95+ 8DA1 20 04            jr nz,19F
  96+ 8DA3
  97+ 8DA3 AF               xor a
  98+ 8DA4 32 F9 87         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8DA7
 100+ 8DA7 3A 92 87     19 ld a,(Cuad_objeto)
 101+ 8DAA FE 02            cp 2
 102+ 8DAC 38 66            jr c,3F
 103+ 8DAE 28 64            jr z,3F
 104+ 8DB0
 105+ 8DB0              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8DB0
 107+ 8DB0 E6 01            and 1
 108+ 8DB2 28 30            jr z,4F
 109+ 8DB4
 110+ 8DB4              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8DB4              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8DB4              ;
 113+ 8DB4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8DB4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8DB4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8DB4
 117+ 8DB4 2A 80 87     	ld hl,(Posicion_actual)
 118+ 8DB7
 119+ 8DB7              ;   Amadeus o entidad ???.
 120+ 8DB7
 121+ 8DB7 3A A4 87         ld a,(Ctrl_0)
 122+ 8DBA CB 77            bit 6,a
 123+ 8DBC 28 0A            jr z,8F
 124+ 8DBE
 125+ 8DBE              ; 	Dispara Amadeus.
 126+ 8DBE
 127+ 8DBE 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8DC0 CD 2A 95         call PreviousScan
 129+ 8DC3 CD 2A 95         call PreviousScan
 130+ 8DC6
 131+ 8DC6              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8DC6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8DC6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8DC6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8DC6
 136+ 8DC6 18 11            jr 10F
 137+ 8DC8
 138+ 8DC8              ; 	Dispara Entidad.
 139+ 8DC8
 140+ 8DC8 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8DCB              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8DCB
 143+ 8DCB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8DCB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8DCB
 146+ 8DCB C5               push bc
 147+ 8DCC 06 10            ld b,16
 148+ 8DCE CD 1B 95     9 call NextScan
 149+ 8DD1 10 FB            djnz 9B
 150+ 8DD3 C1               pop bc
 151+ 8DD4 CD 3E 8E         call Ajusta_disparo_parte_izquierda
 152+ 8DD7 18 06            jr 17F
 153+ 8DD9
 154+ 8DD9              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8DD9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8DD9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8DD9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8DD9
 159+ 8DD9 CD 3E 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8DDC CD B3 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DDF              ;                                                      ; _al generar el disparo.
 162+ 8DDF
 163+ 8DDF              ; 	LLegados a este punto tendremos:
 164+ 8DDF              ;
 165+ 8DDF              ;       Puntero_objeto_disparo en IY.
 166+ 8DDF              ;       Rutinas_de_impresion en IX.
 167+ 8DDF              ;       Puntero_de_impresion en HL.
 168+ 8DDF              ;       Impacto/Dirección en BC.
 169+ 8DDF
 170+ 8DDF CD 46 8E     17 call Almacena_disparo
 171+ 8DE2 18 52            jr 6F                                             ; RET.
 172+ 8DE4
 173+ 8DE4              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DE4              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DE4              ;
 176+ 8DE4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DE4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DE4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DE4
 180+ 8DE4 2A 80 87     4 ld hl,(Posicion_actual)
 181+ 8DE7
 182+ 8DE7              ;   Amadeus o entidad ???.
 183+ 8DE7
 184+ 8DE7 3A A4 87         ld a,(Ctrl_0)
 185+ 8DEA CB 77            bit 6,a
 186+ 8DEC 28 0A            jr z,11F
 187+ 8DEE
 188+ 8DEE              ; 	Dispara Amadeus.
 189+ 8DEE
 190+ 8DEE 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DF0 CD 2A 95         call PreviousScan
 192+ 8DF3 CD 2A 95         call PreviousScan
 193+ 8DF6
 194+ 8DF6              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DF6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DF6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DF6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DF6
 199+ 8DF6 18 11            jr 13F
 200+ 8DF8
 201+ 8DF8              ; 	Dispara Entidad.
 202+ 8DF8
 203+ 8DF8 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DFB              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DFB
 206+ 8DFB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DFB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DFB
 209+ 8DFB C5               push bc
 210+ 8DFC 06 10            ld b,16
 211+ 8DFE CD 1B 95     12 call NextScan
 212+ 8E01 10 FB            djnz 12B
 213+ 8E03 C1               pop bc
 214+ 8E04
 215+ 8E04 CD 37 8E         call Ajusta_disparo_parte_derecha
 216+ 8E07 18 06            jr 18F
 217+ 8E09
 218+ 8E09              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E09              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E09              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E09              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E09
 223+ 8E09 CD 37 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E0C CD B3 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E0F              ;                                                       ; _al generar el disparo.
 226+ 8E0F
 227+ 8E0F              ; LLegados a este punto tendremos:
 228+ 8E0F              ;
 229+ 8E0F              ;       Puntero_objeto_disparo en IY.
 230+ 8E0F              ;       Rutinas_de_impresion en IX.
 231+ 8E0F              ;       Puntero_de_impresion en HL.
 232+ 8E0F              ;       Impacto/Dirección en BC.
 233+ 8E0F
 234+ 8E0F CD 46 8E     18 call Almacena_disparo
 235+ 8E12 18 22            jr 6F                                               ; RET.
 236+ 8E14
 237+ 8E14              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E14
 239+ 8E14 28 11        3 jr z,5F
 240+ 8E16
 241+ 8E16              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E16              ;
 243+ 8E16              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E16              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E16              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E16              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E16
 248+ 8E16              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E16              ;	   ""        ""       "f9", B="1"
 250+ 8E16              ;	   ""        ""       "fb", B="2"
 251+ 8E16              ; 	   ""        ""       "fb", B="3"
 252+ 8E16
 253+ 8E16 2A 80 87     	ld hl,(Posicion_actual)
 254+ 8E19 CD 1B 95     	call NextScan
 255+ 8E1C
 256+ 8E1C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E1C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E1C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E1C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E1C
 261+ 8E1C CD 3E 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E1F
 263+ 8E1F              ; 	No se produce impacto. B="$80"
 264+ 8E1F              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E1F
 266+ 8E1F 01 80 80         ld bc,$8080
 267+ 8E22
 268+ 8E22              ; 	LLegados a este punto tendremos:
 269+ 8E22              ;
 270+ 8E22              ;       Puntero_objeto_disparo en IY.
 271+ 8E22              ;       Rutinas_de_impresion en IX.
 272+ 8E22              ;       Puntero_de_impresion en HL.
 273+ 8E22              ;       Impacto/Dirección en BC.
 274+ 8E22
 275+ 8E22 CD 46 8E         call Almacena_disparo
 276+ 8E25 18 0F            jr 6F                                           ; RET.
 277+ 8E27
 278+ 8E27              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E27              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E27              ;
 281+ 8E27              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E27              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E27              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E27              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E27
 286+ 8E27 2A 80 87     5 ld hl,(Posicion_actual)
 287+ 8E2A CD 1B 95     	call NextScan
 288+ 8E2D
 289+ 8E2D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E2D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E2D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E2D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E2D
 294+ 8E2D CD 37 8E         call Ajusta_disparo_parte_derecha
 295+ 8E30
 296+ 8E30              ; 	No se produce impacto. B="$80"
 297+ 8E30              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E30
 299+ 8E30 01 80 80     15 ld bc,$8080
 300+ 8E33
 301+ 8E33              ; 	LLegados a este punto tendremos:
 302+ 8E33              ;
 303+ 8E33              ;       Puntero_objeto_disparo en IY.
 304+ 8E33              ;       Rutinas_de_impresion en IX.
 305+ 8E33              ;       Puntero_de_impresion en HL.
 306+ 8E33              ;       Impacto/Dirección en BC.
 307+ 8E33
 308+ 8E33 CD 46 8E         call Almacena_disparo
 309+ 8E36
 310+ 8E36 C9           6 ret
 311+ 8E37
 312+ 8E37              ; ----------------------------------------------------------------
 313+ 8E37              ;
 314+ 8E37              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E37              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E37              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E37
 318+ 8E37 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E38 FE 02            cp 2
 320+ 8E3A 38 01            jr c,1F
 321+ 8E3C 23               inc hl
 322+ 8E3D C9           1 ret
 323+ 8E3E
 324+ 8E3E 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E3F FE 01        	cp 1
 326+ 8E41 20 01        	jr nz,1F
 327+ 8E43 2B           	dec hl
 328+ 8E44 2B           1 dec hl
 329+ 8E45 C9               ret
 330+ 8E46
 331+ 8E46              ; ----------------------------------------------------------------
 332+ 8E46              ;
 333+ 8E46              ;   25/02/23
 334+ 8E46              ;
 335+ 8E46              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E46              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E46              ;
 338+ 8E46              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E46              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E46
 341+ 8E46              Almacena_disparo
 342+ 8E46
 343+ 8E46 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E47 F1               pop af
 345+ 8E48 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E49
 347+ 8E49 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E4A E6 01            and 1
 349+ 8E4C 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E4E              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E4E              ; 	Dispara AMADEUS.
 352+ 8E4E
 353+ 8E4E              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E4E              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E4E              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E4E              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E4E
 358+ 8E4E C5               push bc
 359+ 8E4F 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E52 2A E3 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E55 A7               and a
 362+ 8E56 ED 42            sbc hl,bc
 363+ 8E58 CC 34 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E5B C1               pop bc
 365+ 8E5C 28 54            jr z,4F
 366+ 8E5E
 367+ 8E5E 2A E3 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E61 23               inc hl
 369+ 8E62 23               inc hl
 370+ 8E63 22 E3 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E66              ;                                                   ; _ Disparo_(+1).
 372+ 8E66 18 18            jr 2F
 373+ 8E68
 374+ 8E68              ; Dispara una entidad.
 375+ 8E68
 376+ 8E68 C5           1 push bc
 377+ 8E69 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E6C 2A E1 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E6F A7               and a
 380+ 8E70 ED 42            sbc hl,bc
 381+ 8E72 CC 2D 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E75 C1               pop bc
 383+ 8E76 28 3A            jr z,4F
 384+ 8E78
 385+ 8E78 2A E1 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E7B 23               inc hl
 387+ 8E7C 23               inc hl
 388+ 8E7D 22 E1 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E80              ;                                                   ; _ Disparo_(+1).
 390+ 8E80 CD AF 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E83              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E83              ;
 393+ 8E83              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E83              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E83              ;                                                     Puntero_de_impresion en HL.
 396+ 8E83              ;                                                     Impacto/Dirección en BC.
 397+ 8E83
 398+ 8E83 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E84 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E85 23               inc hl                                          ; _ al siguiente.
 401+ 8E86 A7               and a
 402+ 8E87 20 C0            jr nz,3B
 403+ 8E89
 404+ 8E89 08               ex af,af
 405+ 8E8A ED 73 D0 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E8E F9               ld sp,hl
 407+ 8E8F
 408+ 8E8F DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E91 F5               push af                                         ; Puntero de impresión.
 410+ 8E92 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E94 C5               push bc                                         ; Control.
 412+ 8E95
 413+ 8E95 ED 7B D0 87      ld sp,(Stack)
 414+ 8E99
 415+ 8E99              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E99
 417+ 8E99 21 BF 87     	ld hl,Ctrl_1
 418+ 8E9C CB C6        	set 0,(hl)
 419+ 8E9E
 420+ 8E9E DD E5        	push ix
 421+ 8EA0 E1               pop hl
 422+ 8EA1 F5               push af
 423+ 8EA2 DD E1            pop ix
 424+ 8EA4
 425+ 8EA4 CD 16 71     	call Guarda_foto_registros
 426+ 8EA7
 427+ 8EA7 21 BF 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8EAA CB 86        	res 0,(hl)
 429+ 8EAC
 430+ 8EAC              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8EAC              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8EAC
 433+ 8EAC CD 34 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8EAF CD 2D 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8EB2
 436+ 8EB2 C9           4 ret
 437+ 8EB3
 438+ 8EB3              ; ----------------------------------------------------------------
 439+ 8EB3              ;
 440+ 8EB3              ;   4/3/23
 441+ 8EB3              ;
 442+ 8EB3              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8EB3              ;   _ al generarse el disparo.
 444+ 8EB3              ;
 445+ 8EB3              ;       "$80" ..... No se produce colisión.
 446+ 8EB3              ;       "$81" ..... Se produce colisión.
 447+ 8EB3              ;
 448+ 8EB3              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8EB3              ;         _ que forman el disparo.
 450+ 8EB3
 451+ 8EB3
 452+ 8EB3              Comprueba_Colision
 453+ 8EB3
 454+ 8EB3              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8EB3
 456+ 8EB3 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8EB5 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8EB6
 459+ 8EB6 CD EC 8E         call Modifica_H_Velocidad_disparo
 460+ 8EB9
 461+ 8EB9 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8EBA FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8EBC 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8EBE
 465+ 8EBE 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8EC0 CD DC 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8EC3
 468+ 8EC3 7B               ld a,e
 469+ 8EC4 E6 01            and 1
 470+ 8EC6 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8EC8              ;                                                  ; _ para activar IMPACTO.
 472+ 8EC8 E1               pop hl
 473+ 8EC9 E5               push hl
 474+ 8ECA CD 1B 95         call NextScan
 475+ 8ECD
 476+ 8ECD 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8ECE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8ED0 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8ED2              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8ED2 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8ED4 CD DC 8E         call Bucle_2
 482+ 8ED7
 483+ 8ED7 43           1 ld b,e
 484+ 8ED8 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8ED9 FD E1            pop iy
 486+ 8EDB C9               ret
 487+ 8EDC
 488+ 8EDC              ; ---------- ----------
 489+ 8EDC
 490+ 8EDC 06 02        Bucle_2 ld b,2
 491+ 8EDE FD 7E 00     2 ld a,(iy)
 492+ 8EE1 A6               and (hl)
 493+ 8EE2 28 02            jr z,1F
 494+ 8EE4 1E 81            ld e,$81
 495+ 8EE6 23           1 inc hl
 496+ 8EE7 FD 23            inc iy
 497+ 8EE9 10 F3            djnz 2B
 498+ 8EEB C9               ret
 499+ 8EEC
 500+ 8EEC              ; ---------- ----------
 501+ 8EEC              ;
 502+ 8EEC              ;   21/7/23
 503+ 8EEC
 504+ 8EEC              Modifica_H_Velocidad_disparo
 505+ 8EEC
 506+ 8EEC 3A F0 87         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8EEF FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EF1 D0               ret nc                                         ; _ incrementamos H.
 509+ 8EF2 24               inc h
 510+ 8EF3
 511+ 8EF3 C9               ret
 512+ 8EF4
 513+ 8EF4              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EF4              ;
 515+ 8EF4              ;   04/12/23
 516+ 8EF4              ;
 517+ 8EF4              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EF4              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EF4              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EF4              ;
 521+ 8EF4              ;   MODIFICA: HL,DE,B y A.
 522+ 8EF4
 523+ 8EF4              Genera_coordenadas_X
 524+ 8EF4
 525+ 8EF4              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EF4              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EF4
 528+ 8EF4              ;   Limpiamos almacenes.
 529+ 8EF4
 530+ 8EF4 CD 25 8F         call Limpia_Coordenadas_X
 531+ 8EF7
 532+ 8EF7              ;   Almacenamos coordenadas X.
 533+ 8EF7
 534+ 8EF7              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8EF7
 536+ 8EF7 2A 9E 87         ld hl,(Puntero_de_impresion)
 537+ 8EFA 11 ED 87         ld de,Coordenadas_X_Entidad
 538+ 8EFD 06 02            ld b,2
 539+ 8EFF
 540+ 8EFF 3A 86 87         ld a,(CTRL_DESPLZ)
 541+ 8F02 A7               and a
 542+ 8F03 28 01            jr z,1F
 543+ 8F05 04               inc b
 544+ 8F06
 545+ 8F06 CD 1C 8F     1 call Guarda_coordenadas_X
 546+ 8F09
 547+ 8F09              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8F09
 549+ 8F09 2A AD 85         ld hl,(p.imp.amadeus)
 550+ 8F0C 11 EA 87         ld de,Coordenadas_X_Amadeus
 551+ 8F0F 06 02            ld b,2
 552+ 8F11
 553+ 8F11 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8F14 A7               and a
 555+ 8F15 28 01            jr z,2F
 556+ 8F17 04               inc b
 557+ 8F18
 558+ 8F18 CD 1C 8F     2 call Guarda_coordenadas_X
 559+ 8F1B
 560+ 8F1B              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8F1B
 562+ 8F1B C9               ret
 563+ 8F1C
 564+ 8F1C              ; ----- ----- ----- ----- -----
 565+ 8F1C
 566+ 8F1C 7D           Guarda_coordenadas_X  ld a,l
 567+ 8F1D E6 1F            and $1f
 568+ 8F1F 12           1 ld (de),a
 569+ 8F20 3C               inc a
 570+ 8F21 13               inc de
 571+ 8F22 10 FB            djnz 1B
 572+ 8F24 C9               ret
 573+ 8F25
 574+ 8F25 AF           Limpia_Coordenadas_X xor a
 575+ 8F26 06 06            ld b,6
 576+ 8F28 21 EA 87         ld hl,Coordenadas_X_Amadeus
 577+ 8F2B 77           1 ld (hl),a
 578+ 8F2C 23               inc hl
 579+ 8F2D 10 FC            djnz 1B
 580+ 8F2F C9               ret
 581+ 8F30
 582+ 8F30              ; ----- ----- ----- ----- -----
 583+ 8F30
 584+ 8F30              Compara_coordenadas_X
 585+ 8F30
 586+ 8F30 06 03            ld b,3
 587+ 8F32 11 EF 87         ld de,Coordenadas_X_Entidad+2
 588+ 8F35
 589+ 8F35 1A               ld a,(de)
 590+ 8F36 A7               and a
 591+ 8F37 20 01            jr nz,2F
 592+ 8F39 05               dec b
 593+ 8F3A
 594+ 8F3A 1B           2 dec de
 595+ 8F3B 1B               dec de
 596+ 8F3C 21 EA 87         ld hl,Coordenadas_X_Amadeus
 597+ 8F3F
 598+ 8F3F D5           1 push de
 599+ 8F40 E5               push hl
 600+ 8F41 C5               push bc
 601+ 8F42
 602+ 8F42 CD 4C 8F         call Comparando
 603+ 8F45
 604+ 8F45 C1               pop bc
 605+ 8F46 E1               pop hl
 606+ 8F47 D1               pop de
 607+ 8F48
 608+ 8F48 13               inc de
 609+ 8F49 10 F4            djnz 1B
 610+ 8F4B
 611+ 8F4B C9               ret
 612+ 8F4C
 613+ 8F4C              ; ----- ----- ----- ----- -----
 614+ 8F4C              ;
 615+ 8F4C              ;   4/12/23
 616+ 8F4C              ;
 617+ 8F4C              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8F4C
 619+ 8F4C 06 03        Comparando ld b,3
 620+ 8F4E 1A               ld a,(de)
 621+ 8F4F 4E           2 ld c,(hl)
 622+ 8F50 B9               cp c
 623+ 8F51 28 04            jr z,1F
 624+ 8F53 23               inc hl
 625+ 8F54 10 F9            djnz 2B
 626+ 8F56 C9               ret
 627+ 8F57
 628+ 8F57 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F59 32 97 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F5C 21 E5 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F5F CB D6            set 2,(hl)
 632+ 8F61 C9               ret
 633+ 8F62
 634+ 8F62              ; -----------------------------------------------------------------------
 635+ 8F62              ;
 636+ 8F62              ;   7/12/23
 637+ 8F62              ;
 638+ 8F62
 639+ 8F62              Detecta_colision_nave_entidad
 640+ 8F62
 641+ 8F62              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F62
 643+ 8F62 FD 2A 82 87      ld iy,(Puntero_objeto)
 644+ 8F66 2A 9E 87         ld hl,(Puntero_de_impresion)
 645+ 8F69
 646+ 8F69 E5               push hl
 647+ 8F6A
 648+ 8F6A              ; ----- ----- -----
 649+ 8F6A 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F6C 06 0A            ld b,10
 651+ 8F6E CD 9E 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F71 7B               ld a,e
 653+ 8F72 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F74 38 0E            jr c,3F
 655+ 8F76
 656+ 8F76              ; LLegados a este punto:
 657+ 8F76              ;
 658+ 8F76              ;   HAY COLISIÓN !!!!!.
 659+ 8F76              ;
 660+ 8F76              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F76              ;   SET el bit3 de (Impacto2).
 662+ 8F76              ;
 663+ 8F76              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F76
 665+ 8F76 21 97 87         ld hl,Impacto
 666+ 8F79 36 01            ld (hl),1
 667+ 8F7B 21 E5 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F7E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F80 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F82
 671+ 8F82 18 18            jr 1F
 672+ 8F84
 673+ 8F84              ; -----
 674+ 8F84
 675+ 8F84 E1           3 pop hl
 676+ 8F85 CD 1B 95         call NextScan
 677+ 8F88 E5               push hl
 678+ 8F89 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F8A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F8C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F8E 30 0C            jr nc,1F
 682+ 8F90              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F90 10 DC            djnz 2B
 684+ 8F92
 685+ 8F92              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F92
 687+ 8F92              ; LLegados a este punto:
 688+ 8F92              ;
 689+ 8F92              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F92              ;
 691+ 8F92              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F92              ;   RES el bit2 de (Impacto2).
 693+ 8F92              ;
 694+ 8F92              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F92              ;   Lo colocamos a "0".
 696+ 8F92
 697+ 8F92 21 E5 87         ld hl,Impacto2
 698+ 8F95 CB 96            res 2,(hl)
 699+ 8F97 2A E6 87         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F9A 36 00            ld (hl),0
 701+ 8F9C
 702+ 8F9C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F9D C9               ret
 704+ 8F9E
 705+ 8F9E               ; ---------- ----------
 706+ 8F9E
 707+ 8F9E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F9F 3A 7F 87         ld a,(Columns)
 709+ 8FA2 47               ld b,a
 710+ 8FA3 FD 7E 00     2 ld a,(iy)
 711+ 8FA6 BE               cp (hl)
 712+ 8FA7 28 01            jr z,1F
 713+ 8FA9
 714+ 8FA9 1C               inc e
 715+ 8FAA
 716+ 8FAA 23           1 inc hl
 717+ 8FAB FD 23            inc iy
 718+ 8FAD 10 F4            djnz 2B
 719+ 8FAF C1               pop bc
 720+ 8FB0 C9               ret
 721+ 8FB1
 722+ 8FB1              ; -------------------------------------------------------------------------------------------------------------
 723+ 8FB1              ;
 724+ 8FB1              ;   13/03/23
 725+ 8FB1              ;
 726+ 8FB1              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8FB1              ;
 728+ 8FB1              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8FB1
 730+ 8FB1 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8FB4 7E               ld a,(hl)
 732+ 8FB5 A7               and a
 733+ 8FB6 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8FB7
 735+ 8FB7 44               ld b,h
 736+ 8FB8 4D               ld c,l
 737+ 8FB9 2A D8 87         ld hl,(Stack_snapshot_disparos)
 738+ 8FBC E5               push hl
 739+ 8FBD A7               and a
 740+ 8FBE ED 42            sbc hl,bc
 741+ 8FC0 E5               push hl
 742+ 8FC1 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8FC2
 744+ 8FC2 E1               pop hl
 745+ 8FC3 54               ld d,h
 746+ 8FC4 5D               ld e,l
 747+ 8FC5 1B               dec de
 748+ 8FC6 ED B8            lddr                                                ; Limpiamos.
 749+ 8FC8
 750+ 8FC8 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8FCB 22 D8 87         ld (Stack_snapshot_disparos),hl
 752+ 8FCE
 753+ 8FCE C9               ret
 754+ 8FCF
 755+ 8FCF              ; -------------------------------------------------------------------------------------------------------------
 756+ 8FCF              ;
 757+ 8FCF              ;   18/07/23
 758+ 8FCF              ;
 759+ 8FCF
 760+ 8FCF              Motor_de_disparos
 761+ 8FCF
 762+ 8FCF              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8FCF
 764+ 8FCF 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8FD2 2A E3 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8FD5
 767+ 8FD5 CD AF 8B     2 call Extrae_address
 768+ 8FD8 7E               ld a,(hl)
 769+ 8FD9 A7               and a
 770+ 8FDA 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8FDC
 772+ 8FDC              ; ----- ----- ----- ----- ----- -----
 773+ 8FDC
 774+ 8FDC C5               push bc
 775+ 8FDD CD A1 90         call foto_disparo_a_borrar
 776+ 8FE0
 777+ 8FE0              ; Existe colisión con este disparo???
 778+ 8FE0
 779+ 8FE0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8FE1 7E               ld a,(hl)
 781+ 8FE2 2B               dec hl
 782+ 8FE3 E6 01            and 1
 783+ 8FE5 28 1D            jr z,9F
 784+ 8FE7
 785+ 8FE7              ;   En este punto:
 786+ 8FE7              ;
 787+ 8FE7              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8FE7              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8FE7              ;   _con la entidad).
 790+ 8FE7              ;
 791+ 8FE7              ;   Disparo_2A defw 0                                ; Control.
 792+ 8FE7              ;    defw 0                                          ; Puntero objeto.
 793+ 8FE7              ;    defw 0                                          ; Puntero de impresión.
 794+ 8FE7              ;    defw 0                                          ; Rutina de impresión.
 795+ 8FE7
 796+ 8FE7 E5               push hl
 797+ 8FE8
 798+ 8FE8 06 04            ld b,4
 799+ 8FEA 23           19 inc hl
 800+ 8FEB 10 FD            djnz 19B
 801+ 8FED
 802+ 8FED CD AF 8B         call Extrae_address
 803+ 8FF0 CD F1 9B         call Genera_coordenadas_disparo
 804+ 8FF3
 805+ 8FF3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FF3
 807+ 8FF3 21 E8 87         ld hl,Coordenadas_disparo_certero
 808+ 8FF6 72               ld (hl),d
 809+ 8FF7 23               inc hl
 810+ 8FF8 73               ld (hl),e
 811+ 8FF9
 812+ 8FF9              ; Elimino el disparo de la base de datos.
 813+ 8FF9
 814+ 8FF9 E1               pop hl
 815+ 8FFA CD 20 91         call Elimina_disparo_de_base_de_datos
 816+ 8FFD 21 E5 87         ld hl,Impacto2
 817+ 9000 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9002
 819+ 9002 18 06            jr 11F
 820+ 9004
 821+ 9004 CD CA 90     9 call Mueve_disparo
 822+ 9007 CD A1 90         call foto_disparo_a_borrar
 823+ 900A
 824+ 900A C1           11 pop bc
 825+ 900B 18 04            jr 7F
 826+ 900D
 827+ 900D              ; ----- ----- ----- ----- ----- -----
 828+ 900D
 829+ 900D ED 42        1 sbc hl,bc
 830+ 900F 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9011
 832+ 9011 2A E3 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9014 23               inc hl
 834+ 9015 23               inc hl
 835+ 9016 22 E3 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9019 18 BA            jr 2B
 837+ 901B
 838+ 901B CD 34 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 901E              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 901E
 841+ 901E              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 901E
 843+ 901E 01 6E 85         ld bc,Disparo_11
 844+ 9021 2A E1 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9024
 846+ 9024 CD AF 8B     5 call Extrae_address
 847+ 9027 7E               ld a,(hl)
 848+ 9028 A7               and a
 849+ 9029 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 902B
 851+ 902B              ; ----- ----- ----- ----- ----- -----
 852+ 902B
 853+ 902B C5               push bc
 854+ 902C CD A1 90         call foto_disparo_a_borrar
 855+ 902F
 856+ 902F              ; Existe colisión con este disparo???
 857+ 902F
 858+ 902F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9030 7E               ld a,(hl)
 860+ 9031 2B               dec hl
 861+ 9032 E6 01            and 1
 862+ 9034 28 4D            jr z,10F
 863+ 9036
 864+ 9036              ;! La colisión se produce con Amadeus???
 865+ 9036              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9036
 867+ 9036 E5               push hl
 868+ 9037
 869+ 9037 06 04            ld b,4
 870+ 9039 23           16 inc hl
 871+ 903A 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 903C
 873+ 903C CD AF 8B         call Extrae_address
 874+ 903F CD F1 9B         call Genera_coordenadas_disparo
 875+ 9042
 876+ 9042 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9043 FE 16            cp $16
 878+ 9045 38 2A            jr c,15F
 879+ 9047
 880+ 9047
 881+ 9047              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9047
 883+ 9047 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9048
 885+ 9048              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9048
 887+ 9048 2A AD 85         ld hl,(p.imp.amadeus)
 888+ 904B
 889+ 904B              ; Coordenada X de Amadeus en D.
 890+ 904B
 891+ 904B 7D               ld a,l
 892+ 904C E6 1F            and $1F
 893+ 904E 57               ld d,a
 894+ 904F
 895+ 904F 21 8A 85         ld hl,Amadeus_db+8
 896+ 9052 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9053
 898+ 9053 21 EA 87         ld hl,Coordenadas_X_Amadeus
 899+ 9056 CD 1C 8F         call Guarda_coordenadas_X
 900+ 9059
 901+ 9059 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 905A
 903+ 905A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 905A
 905+ 905A 06 02            ld b,2
 906+ 905C C5           20 push bc
 907+ 905D
 908+ 905D 06 03            ld b,3
 909+ 905F 21 EA 87         ld hl,Coordenadas_X_Amadeus
 910+ 9062 7E           18 ld a,(hl)
 911+ 9063 BA               cp d
 912+ 9064 20 04            jr nz,17F
 913+ 9066
 914+ 9066              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9066
 916+ 9066 C1               pop bc
 917+ 9067 E1               pop hl
 918+ 9068 18 0D            jr 14F
 919+ 906A
 920+ 906A 23           17 inc hl
 921+ 906B 10 F5            djnz 18B
 922+ 906D
 923+ 906D 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 906E
 925+ 906E C1               pop bc
 926+ 906F 10 EB            djnz 20B
 927+ 9071
 928+ 9071
 929+ 9071              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9071              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9071
 932+ 9071 E1           15 pop hl
 933+ 9072 23               inc hl
 934+ 9073 35               dec (hl)
 935+ 9074 2B               dec hl
 936+ 9075 18 0C            jr 10F
 937+ 9077
 938+ 9077              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9077              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9077
 941+ 9077 E5           14 push hl
 942+ 9078 CD 20 91         call Elimina_disparo_de_base_de_datos
 943+ 907B 21 E5 87         ld hl,Impacto2
 944+ 907E CB CE            set 1,(hl)
 945+ 9080 E1               pop hl
 946+ 9081 18 06            jr 12F
 947+ 9083
 948+ 9083              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9083
 950+ 9083 CD CA 90     10 call Mueve_disparo
 951+ 9086 CD A1 90         call foto_disparo_a_borrar
 952+ 9089 C1           12 pop bc
 953+ 908A
 954+ 908A 18 04            jr 8F
 955+ 908C
 956+ 908C              ; ----- ----- ----- ----- ----- -----
 957+ 908C
 958+ 908C ED 42        4 sbc hl,bc
 959+ 908E 28 0A            jr z,6F
 960+ 9090
 961+ 9090 2A E1 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9093 23               inc hl
 963+ 9094 23               inc hl
 964+ 9095 22 E1 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9098 18 8A            jr 5B
 966+ 909A
 967+ 909A CD 2D 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 909D CD 25 8F         call Limpia_Coordenadas_X
 969+ 90A0 C9               ret
 970+ 90A1
 971+ 90A1              ; ------------------------------------------------------------------
 972+ 90A1
 973+ 90A1              foto_disparo_a_borrar
 974+ 90A1
 975+ 90A1 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 90A2 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 90A3 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 90A4
 979+ 90A4 E5               push hl
 980+ 90A5 23               inc hl
 981+ 90A6 23               inc hl
 982+ 90A7 ED 73 D0 87      ld (Stack),sp
 983+ 90AB F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 90AC FD E1            pop iy
 985+ 90AE DD E1            pop ix
 986+ 90B0 E1               pop hl
 987+ 90B1 ED 7B D0 87      ld sp,(Stack)
 988+ 90B5 3A BF 87         ld a,(Ctrl_1)
 989+ 90B8 CB C7            set 0,a
 990+ 90BA 32 BF 87         ld (Ctrl_1),a
 991+ 90BD CD 16 71         call Guarda_foto_registros
 992+ 90C0 3A BF 87         ld a,(Ctrl_1)
 993+ 90C3 CB 87            res 0,a
 994+ 90C5 32 BF 87         ld (Ctrl_1),a
 995+ 90C8 E1               pop hl
 996+ 90C9 C9               ret
 997+ 90CA
 998+ 90CA              ;---------------------------------------------------
 999+ 90CA              ;
1000+ 90CA              ;   18/07/23
1001+ 90CA              ;
1002+ 90CA
1003+ 90CA              Mueve_disparo
1004+ 90CA
1005+ 90CA              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 90CA              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 90CA              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 90CA
1009+ 90CA E5               push hl
1010+ 90CB
1011+ 90CB 7E               ld a,(hl)
1012+ 90CC
1013+ 90CC 06 04            ld b,4
1014+ 90CE 23           1 inc hl
1015+ 90CF 10 FD            djnz 1B
1016+ 90D1
1017+ 90D1              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 90D1
1019+ 90D1 CD AF 8B         call Extrae_address
1020+ 90D4
1021+ 90D4 E6 01            and 1
1022+ 90D6 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 90D8
1024+ 90D8              ; Disparo hacia arriba, (Amadeus).
1025+ 90D8
1026+ 90D8              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 90D8              ; _ de la dificultad.
1028+ 90D8
1029+ 90D8 CD 2A 95         call PreviousScan
1030+ 90DB CD 2A 95         call PreviousScan
1031+ 90DE CD 2A 95         call PreviousScan
1032+ 90E1 CD 2A 95         call PreviousScan
1033+ 90E4
1034+ 90E4              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 90E4
1036+ 90E4 7C               ld a,h
1037+ 90E5 FE 40            cp $40
1038+ 90E7 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 90E9
1040+ 90E9              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 90E9
1042+ 90E9 EB               ex de,hl
1043+ 90EA 06 04            ld b,4
1044+ 90EC 2B           6 dec hl
1045+ 90ED 10 FD            djnz 6B
1046+ 90EF
1047+ 90EF CD 20 91         call Elimina_disparo_de_base_de_datos
1048+ 90F2 E1               pop hl
1049+ 90F3 18 10            jr 7F
1050+ 90F5
1051+ 90F5              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90F5              ; HL contiene el puntero de impresión del disparo.
1053+ 90F5              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90F5
1055+ 90F5 D5           3 push de
1056+ 90F6 C5               push bc
1057+ 90F7
1058+ 90F7 CD B3 8E         call Comprueba_Colision
1059+ 90FA
1060+ 90FA              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90FA
1062+ 90FA 78               ld a,b
1063+ 90FB
1064+ 90FB C1               pop bc
1065+ 90FC D1               pop de
1066+ 90FD
1067+ 90FD EB               ex de,hl
1068+ 90FE
1069+ 90FE 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90FF 23               inc hl                                      ; _ movimiento.
1071+ 9100 72               ld (hl),d
1072+ 9101
1073+ 9101 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9102
1075+ 9102 23               inc hl                                      ; _ en curso.
1076+ 9103 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9104 2B               dec hl
1078+ 9105
1079+ 9105 C9           7 ret
1080+ 9106
1081+ 9106              ; Disparo hacia abajo, (Entidad).
1082+ 9106
1083+ 9106 3A F0 87     2 ld a,(Velocidad_disparo_entidades)
1084+ 9109 47               ld b,a
1085+ 910A
1086+ 910A CD 1B 95     4 call NextScan
1087+ 910D 10 FB            djnz 4B
1088+ 910F
1089+ 910F              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 910F
1091+ 910F 7C               ld a,h
1092+ 9110 FE 58            cp $58
1093+ 9112 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9114
1095+ 9114 EB               ex de,hl
1096+ 9115 06 04            ld b,4
1097+ 9117 2B           5 dec hl
1098+ 9118 10 FD            djnz 5B
1099+ 911A
1100+ 911A CD 20 91         call Elimina_disparo_de_base_de_datos
1101+ 911D E1               pop hl
1102+ 911E 18 E5            jr 7B
1103+ 9120
1104+ 9120              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9120
1106+ 9120 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9123 AF               xor a
1108+ 9124 77               ld (hl),a
1109+ 9125 54               ld d,h
1110+ 9126 5D               ld e,l
1111+ 9127 13               inc de
1112+ 9128 ED B0            ldir
1113+ 912A C9               ret
1114+ 912B
1115+ 912B              ; -----------------------------------------------------------------
1116+ 912B              ;
1117+ 912B              ;   7/12/23
1118+ 912B              ;
1119+ 912B
1120+ 912B 3A E5 87     Selector_de_impactos ld a,(Impacto2)
1121+ 912E A7               and a
1122+ 912F C8               ret z
1123+ 9130
1124+ 9130              ; Analizamos si hay impacto por disparos.
1125+ 9130
1126+ 9130              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9130
1128+ 9130 CB 4F            bit 1,a
1129+ 9132 28 07            jr z,1F
1130+ 9134
1131+ 9134 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9137 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9139 18 08            jr 2F
1134+ 913B
1135+ 913B CB 47        1 bit 0,a
1136+ 913D C8               ret z
1137+ 913E
1138+ 913E              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 913E
1140+ 913E 21 BF 87         ld hl,Ctrl_1
1141+ 9141 CB D6            set 2,(hl)
1142+ 9143
1143+ 9143 C9           2 ret
1144+ 9144
1145+ 9144              ; -----------------------------------------------------------------
1146+ 9144              ;
1147+ 9144              ;   25/04/23
1148+ 9144              ;
1149+ 9144
1150+ 9144              Determina_resultado_comparativa
1151+ 9144
1152+ 9144              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9144              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9144              ;
1155+ 9144              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9144              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9144              ;
1158+ 9144              ;   SBC HL,DE
1159+ 9144
1160+ 9144              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9144              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9144
1163+ 9144              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9144              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9144
1166+ 9144
1167+ 9144 3A 92 87         ld a,(Cuad_objeto)
1168+ 9147 FE 02            cp 2
1169+ 9149 28 26            jr z,2F
1170+ 914B 38 24            jr c,2F
1171+ 914D
1172+ 914D              ; Cuadrantes 3º y 4º
1173+ 914D
1174+ 914D E6 01            and 1
1175+ 914F 28 10            jr z,4F
1176+ 9151
1177+ 9151              ; Cuadrante 3º
1178+ 9151
1179+ 9151 7C               ld a,h
1180+ 9152 06 00            ld b,0
1181+ 9154
1182+ 9154 CD DF 91         call Compara_cositas_H3
1183+ 9157
1184+ 9157 04               inc b
1185+ 9158 05               dec b
1186+ 9159 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 915A
1188+ 915A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 915B 06 00            ld b,0
1190+ 915D
1191+ 915D CD F1 91         call Compara_cositas_L3
1192+ 9160 C9               ret
1193+ 9161
1194+ 9161              ; Cuadrante 4º
1195+ 9161
1196+ 9161 7C           4 ld a,h
1197+ 9162 06 00            ld b,0
1198+ 9164
1199+ 9164 CD 03 92         call Compara_cositas_H4
1200+ 9167
1201+ 9167 04               inc b
1202+ 9168 05               dec b
1203+ 9169 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 916A
1205+ 916A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 916B 06 00            ld b,0
1207+ 916D
1208+ 916D CD 19 92         call Compara_cositas_L4
1209+ 9170 C9               ret
1210+ 9171
1211+ 9171              ; Cuadrantes 1º y 2º.
1212+ 9171
1213+ 9171 28 10        2 jr z,3F
1214+ 9173
1215+ 9173              ; 1er Cuadrante
1216+ 9173
1217+ 9173 7C               ld a,h
1218+ 9174 06 00            ld b,0
1219+ 9176
1220+ 9176 CD B7 91         call Compara_cositas_H1
1221+ 9179
1222+ 9179 04               inc b
1223+ 917A 05               dec b
1224+ 917B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 917C
1226+ 917C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 917D 06 00            ld b,0
1228+ 917F
1229+ 917F CD CD 91         call Compara_cositas_L1
1230+ 9182 C9               ret
1231+ 9183
1232+ 9183
1233+ 9183              ; 2º Cuadrante
1234+ 9183
1235+ 9183 7C           3 ld a,h
1236+ 9184 06 00            ld b,0
1237+ 9186
1238+ 9186 CD 93 91         call Compara_cositas_H2
1239+ 9189
1240+ 9189 04               inc b
1241+ 918A 05               dec b
1242+ 918B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 918C
1244+ 918C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 918D 06 00            ld b,0
1246+ 918F
1247+ 918F CD A5 91         call Compara_cositas_L2
1248+ 9192 C9               ret
1249+ 9193
1250+ 9193 A7           Compara_cositas_H2 and a
1251+ 9194 28 0D            jr z,1F
1252+ 9196              ;    cp $fd
1253+ 9196              ;    jr z,1F
1254+ 9196              ;    cp $fe
1255+ 9196              ;    jr z,1F
1256+ 9196 FE FF            cp $ff
1257+ 9198 28 09            jr z,1F
1258+ 919A FE 01            cp $01
1259+ 919C 28 05            jr z,1F
1260+ 919E FE 02            cp $02
1261+ 91A0 28 01            jr z,1F
1262+ 91A2 C0               ret nz
1263+ 91A3 04           1 inc b
1264+ 91A4 C9               ret
1265+ 91A5
1266+ 91A5 A7           Compara_cositas_L2 and a
1267+ 91A6 28 0D            jr z,1F
1268+ 91A8              ;    cp $fd
1269+ 91A8              ;    jr z,1F
1270+ 91A8 FE FE            cp $fe
1271+ 91AA 28 09            jr z,1F
1272+ 91AC FE FF            cp $ff
1273+ 91AE 28 05            jr z,1F
1274+ 91B0 FE 01            cp $01
1275+ 91B2 28 01            jr z,1F
1276+ 91B4              ;    cp $02
1277+ 91B4              ;    jr z,1F
1278+ 91B4 C0               ret nz
1279+ 91B5 04           1 inc b
1280+ 91B6 C9               ret
1281+ 91B7
1282+ 91B7 A7           Compara_cositas_H1 and a
1283+ 91B8 28 11            jr z,1F
1284+ 91BA              ;    cp $fd
1285+ 91BA              ;    jr z,1F
1286+ 91BA              ;    cp $fe
1287+ 91BA              ;    jr z,1F
1288+ 91BA FE FF            cp $ff
1289+ 91BC 28 0D            jr z,1F
1290+ 91BE FE 01            cp $01
1291+ 91C0 28 09            jr z,1F
1292+ 91C2 FE 02            cp $02
1293+ 91C4 28 05            jr z,1F
1294+ 91C6 FE 03            cp $03
1295+ 91C8 28 01            jr z,1F
1296+ 91CA C0               ret nz
1297+ 91CB 04           1 inc b
1298+ 91CC C9               ret
1299+ 91CD
1300+ 91CD A7           Compara_cositas_L1 and a
1301+ 91CE 28 0D            jr z,1F
1302+ 91D0              ;    cp $fd
1303+ 91D0              ;    jr z,1F
1304+ 91D0              ;    cp $fe
1305+ 91D0              ;    jr z,1F
1306+ 91D0              ;    cp $ff
1307+ 91D0              ;    jr z,1F
1308+ 91D0 FE 01            cp $01
1309+ 91D2 28 09            jr z,1F
1310+ 91D4 FE 02            cp $02
1311+ 91D6 28 05            jr z,1F
1312+ 91D8 FE 03            cp $03
1313+ 91DA 28 01            jr z,1F
1314+ 91DC C0               ret nz
1315+ 91DD 04           1 inc b
1316+ 91DE C9               ret
1317+ 91DF
1318+ 91DF A7           Compara_cositas_H3 and a
1319+ 91E0 28 0D            jr z,1F
1320+ 91E2              ;    cp $fd
1321+ 91E2              ;    jr z,1F
1322+ 91E2 FE FE            cp $fe
1323+ 91E4 28 09            jr z,1F
1324+ 91E6 FE FF            cp $ff
1325+ 91E8 28 05            jr z,1F
1326+ 91EA FE 01            cp $01
1327+ 91EC 28 01            jr z,1F
1328+ 91EE              ;    cp $02
1329+ 91EE              ;    jr z,1F
1330+ 91EE              ;    cp $03
1331+ 91EE              ;    jr z,1F
1332+ 91EE C0               ret nz
1333+ 91EF 04           1 inc b
1334+ 91F0 C9               ret
1335+ 91F1
1336+ 91F1 A7           Compara_cositas_L3 and a
1337+ 91F2 28 0D            jr z,1F
1338+ 91F4              ;    cp $fd
1339+ 91F4              ;    jr z,1F
1340+ 91F4              ;    cp $fe
1341+ 91F4              ;    jr z,1F
1342+ 91F4              ;    cp $ff
1343+ 91F4              ;    jr z,1F
1344+ 91F4 FE 01            cp $01
1345+ 91F6 28 09            jr z,1F
1346+ 91F8 FE 02            cp $02
1347+ 91FA 28 05            jr z,1F
1348+ 91FC FE 03            cp $03
1349+ 91FE 28 01            jr z,1F
1350+ 9200 C0               ret nz
1351+ 9201 04           1 inc b
1352+ 9202 C9               ret
1353+ 9203
1354+ 9203 A7           Compara_cositas_H4 and a
1355+ 9204 28 11            jr z,1F
1356+ 9206 FE FD            cp $fd
1357+ 9208 28 0D            jr z,1F
1358+ 920A FE FE            cp $fe
1359+ 920C 28 09            jr z,1F
1360+ 920E FE FF            cp $ff
1361+ 9210 28 05            jr z,1F
1362+ 9212 FE 01            cp $01
1363+ 9214 28 01            jr z,1F
1364+ 9216              ;    cp $02
1365+ 9216              ;    jr z,1F
1366+ 9216              ;    cp $03
1367+ 9216              ;    jr z,1F
1368+ 9216 C0               ret nz
1369+ 9217 04           1 inc b
1370+ 9218 C9               ret
1371+ 9219
1372+ 9219 A7           Compara_cositas_L4 and a
1373+ 921A 28 0D            jr z,1F
1374+ 921C              ;    cp $fd
1375+ 921C              ;    jr z,1F
1376+ 921C FE FE            cp $fe
1377+ 921E 28 09            jr z,1F
1378+ 9220 FE FF            cp $ff
1379+ 9222 28 05            jr z,1F
1380+ 9224 FE 01            cp $01
1381+ 9226 28 01            jr z,1F
1382+ 9228              ;    cp $02
1383+ 9228              ;    jr z,1F
1384+ 9228              ;    cp $03
1385+ 9228              ;    jr z,1F
1386+ 9228 C0               ret nz
1387+ 9229 04           1 inc b
1388+ 922A C9               ret
# file closed: Disparo.asm
1925  922B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 922B              ; ******************************************************************************************************************************************************************************************
   2+ 922B              ;
   3+ 922B              ; 26/06/23
   4+ 922B              ;
   5+ 922B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 922B
   7+ 922B              Draw
   8+ 922B
   9+ 922B CD 0F 95     	call Prepara_draw
  10+ 922E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 922F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9230 28 05        	jr z,2F
  13+ 9232
  14+ 9232 3A 92 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9235 18 0C        	jr 1F
  16+ 9237
  17+ 9237 2A 90 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 923A 22 80 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 923D CD CC 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9240              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9240 CD 82 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 9243
  23+ 9243 3A A4 87     1 ld a,(Ctrl_0)
  24+ 9246 CB 6F        	bit 5,a
  25+ 9248 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 924A
  27+ 924A CD 62 92     	call Comprueba_limite_horizontal
  28+ 924D CD F2 92     	call Comprueba_limite_vertical
  29+ 9250
  30+ 9250              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 9250              ; -----------------------
  32+ 9250              ; -----------------------
  33+ 9250              ; -----------------------
  34+ 9250
  35+ 9250 CD 3F 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 9253 CD 76 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 9256 CD D5 94     	call Define_rutina_de_impresion
  38+ 9259
  39+ 9259 3A A4 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 925C CB AF        	res 5,a											; _a ser de utilidad.
  41+ 925E 32 A4 87     	ld (Ctrl_0),a
  42+ 9261
  43+ 9261 C9           	ret
  44+ 9262
  45+ 9262              ; *******************************************************************************************************************************************************************************************
  46+ 9262              ;	21/01/23
  47+ 9262              ;
  48+ 9262              ; 	Comprueba_limite_horizontal.
  49+ 9262              ;
  50+ 9262              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9262              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9262              ;
  53+ 9262              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9262              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9262              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9262              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9262
  58+ 9262
  59+ 9262
  60+ 9262 3A A4 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9265 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9267 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9269 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 926B 32 A4 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 926E 18 09            jr 6F
  66+ 9270 CB 5F        1 bit 3,a
  67+ 9272 28 0A            jr z,2F
  68+ 9274 E6 F7            and $f7
  69+ 9276 32 A4 87         ld (Ctrl_0),a
  70+ 9279 CD CC 93     6 call Inicializacion
  71+ 927C 18 5B            jr 5F
  72+ 927E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 927F
  74+ 927F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 927F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 927F
  77+ 927F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9280 2A A6 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9283 CD 2E 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9286 67           	ld h,a
  81+ 9287 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9288 CD 2E 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 928B 67           	ld h,a
  84+ 928C A7           	and a
  85+ 928D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 928F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9290 3A 92 87     	ld a,(Cuad_objeto)
  88+ 9293 FE 02        	cp 2
  89+ 9295 38 1E        	jr c,3F
  90+ 9297 28 1C        	jr z,3F
  91+ 9299 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 929A 28 23            jr z,7F
  93+ 929C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 929E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92A0 E1           	pop hl
  96+ 92A1
  97+ 92A1              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92A1              ; _para indicar con E="2" en caso necesario.
  99+ 92A1
 100+ 92A1 E5               push hl
 101+ 92A2 C5               push bc
 102+ 92A3 CD 2E 98     	call calcula_tercio
 103+ 92A6 FE 01        	cp 1
 104+ 92A8 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92AA CD DA 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92AD 28 26            jr z,9F
 107+ 92AF 38 24            jr c,9F
 108+ 92B1 1E 00        11 ld e,0
 109+ 92B3 18 22            jr 8F
 110+ 92B5 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92B6 28 07        	jr z, 7F
 112+ 92B8 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92BA 1E 00         	ld e,0
 114+ 92BC E1           	pop hl
 115+ 92BD 18 04        	jr 4F
 116+ 92BF 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92C1 18 15            jr 10F
 118+ 92C3
 119+ 92C3              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92C3              ; _para indicar con E="2" en caso necesario.
 121+ 92C3
 122+ 92C3 E5           4 push hl
 123+ 92C4 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92C5 CD 2E 98     	call calcula_tercio
 125+ 92C8 FE 01        	cp 1
 126+ 92CA 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92CC CD DA 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92CF 28 04            jr z,9F
 129+ 92D1 30 02            jr nc,9F
 130+ 92D3 18 02        	jr 8F
 131+ 92D5 1E 02        9 ld e,2
 132+ 92D7 C1           8 pop bc
 133+ 92D8 E1           10 pop hl
 134+ 92D9 C9           5 ret
 135+ 92DA
 136+ 92DA              ; --------------------
 137+ 92DA              ;
 138+ 92DA              ; 25/08/22
 139+ 92DA
 140+ 92DA CD 2E 98     Comprueba_centro call calcula_tercio
 141+ 92DD 67               ld h,a
 142+ 92DE 08           	ex af,af
 143+ 92DF FE 02        	cp 2
 144+ 92E1 38 07        	jr c,1F
 145+ 92E3 28 05        	jr z,1F
 146+ 92E5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92E8 18 03        	jr 2F
 148+ 92EA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92ED 08           2 ex af,af
 150+ 92EE A7               and a
 151+ 92EF ED 42            sbc hl,bc
 152+ 92F1 C9               ret
 153+ 92F2
 154+ 92F2              ; *********************************************************************************************************************************************************************************************
 155+ 92F2              ;
 156+ 92F2              ;   16/8/22
 157+ 92F2              ;
 158+ 92F2              ;	Comprueba_limite_vertical
 159+ 92F2              ;
 160+ 92F2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 92F2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 92F2              ;
 163+ 92F2
 164+ 92F2 2A 80 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 92F5 7D           	ld a,l
 166+ 92F6 E6 1F        	and $1F
 167+ 92F8 57           	ld d,a
 168+ 92F9 3A A8 87     	ld a,(Limite_vertical)
 169+ 92FC BA           	cp d 											; Límite - Posición.
 170+ 92FD 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 92FE 3A 92 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9301 CB 47        	bit 0,a
 173+ 9303 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9305
 175+ 9305              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9305
 177+ 9305 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9306 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9308
 180+ 9308              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9308              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9308
 183+ 9308 3A 84 87         ld a,(Coordenada_X)
 184+ 930B 16 0F            ld d,Centro_izquierda
 185+ 930D A7               and a
 186+ 930E 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 930F 28 1E            jr z,3F
 188+ 9311 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9313              ;                                                    ; _salimos sin modificar nada.
 190+ 9313 18 0E            jr 2F
 191+ 9315 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9316 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9318
 194+ 9318              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9318              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9318
 197+ 9318 3A 84 87         ld a,(Coordenada_X)
 198+ 931B 16 10            ld d,Centro_derecha
 199+ 931D A7               and a
 200+ 931E 92               sub d
 201+ 931F 28 0E            jr z,3F
 202+ 9321 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9323              ;                                                    ; _salimos sin modificar nada.
 204+ 9323 CB 43        2 bit 0,e
 205+ 9325 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9327 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9328 CD BC 93         call Modificaccionne
 208+ 932B C1           	pop bc
 209+ 932C CD CC 93         call Inicializacion
 210+ 932F C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9330
 212+ 9330              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9330
 214+ 9330 C5           4 push bc
 215+ 9331 01 7F 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9334 0A           	ld a,(bc)
 217+ 9335 3D           	dec a
 218+ 9336 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9337 7D           	ld a,l
 220+ 9338 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9339 CB 47        	bit 0,a
 222+ 933B 28 03        	jr z,5F
 223+ 933D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 933E 18 2E        	jr 7F
 225+ 9340
 226+ 9340              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9340
 228+ 9340 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9341 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9342 3A A4 87     	ld a,(Ctrl_0)
 231+ 9345 CB 4F        	bit 1,a
 232+ 9347 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9349 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 934A
 235+ 934A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 934A
 237+ 934A 1C               inc e
 238+ 934B 1D               dec e
 239+ 934C 20 07            jr nz,12F
 240+ 934E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 934F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9350 22 80 87     	ld (Posicion_actual),hl
 243+ 9353 18 44        13 jr 9F
 244+ 9355 CB 43        12 bit 0,e
 245+ 9357 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9359              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9359 C1           	pop bc
 248+ 935A 18 D3        	jr 3B
 249+ 935C 80           14 add b
 250+ 935D 6F               ld l,a
 251+ 935E 22 80 87     	ld (Posicion_actual),hl
 252+ 9361 CD BC 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9364 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9366 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9368 32 A4 87         ld (Ctrl_0),a
 256+ 936B F1           	pop af
 257+ 936C 18 2B        	jr 9F
 258+ 936E
 259+ 936E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 936E
 261+ 936E F5           7 push af
 262+ 936F 3A A4 87     	ld a,(Ctrl_0)
 263+ 9372 CB 47        	bit 0,a
 264+ 9374 20 1D        	jr nz,8F
 265+ 9376 F1           	pop af
 266+ 9377
 267+ 9377              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9377
 269+ 9377 1C           	inc e
 270+ 9378 1D               dec e
 271+ 9379 20 07            jr nz,10F
 272+ 937B 90           	sub b
 273+ 937C 6F               ld l,a
 274+ 937D 22 80 87     	ld (Posicion_actual),hl
 275+ 9380 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9382              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9382 CB 43        10 bit 0,e
 278+ 9384 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9386              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9386 C1           	pop bc
 281+ 9387 18 A6        	jr 3B
 282+ 9389 90           16 sub b
 283+ 938A 6F               ld l,a
 284+ 938B 22 80 87     	ld (Posicion_actual),hl
 285+ 938E CD BC 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9391 18 06            jr 9F
 287+ 9393 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9395 32 A4 87         ld (Ctrl_0),a
 289+ 9398 F1           	pop af
 290+ 9399 C1           9 pop bc
 291+ 939A 1E 00        	ld e,0
 292+ 939C CD CC 93         call Inicializacion
 293+ 939F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93A0 08           	ex af,af
 295+ 93A1 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93A2 18 8B            jr 3B
 297+ 93A4
 298+ 93A4              ; --------------------
 299+ 93A4
 300+ 93A4 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93A6 CD 2A 95     1 call PreviousScan
 302+ 93A9 10 FB            djnz 1B
 303+ 93AB 22 80 87     	ld (Posicion_actual),hl
 304+ 93AE AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93AF C9           	ret
 306+ 93B0
 307+ 93B0              ; --------------------
 308+ 93B0
 309+ 93B0 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93B2 CD 1B 95     1 call NextScan
 311+ 93B5 10 FB            djnz 1B
 312+ 93B7 22 80 87     	ld (Posicion_actual),hl
 313+ 93BA AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93BB C9           	ret
 315+ 93BC
 316+ 93BC              ; --------------------
 317+ 93BC              ;
 318+ 93BC              ;	22/01/23
 319+ 93BC              ;
 320+ 93BC              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93BC              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93BC              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93BC
 324+ 93BC
 325+ 93BC              Modificaccionne
 326+ 93BC
 327+ 93BC 3A 92 87     	ld a,(Cuad_objeto)
 328+ 93BF FE 02        	cp 2
 329+ 93C1 CC A4 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93C4 DC A4 93         call c,Modifica_Pos_actual
 331+ 93C7 C8           	ret z
 332+ 93C8 CD B0 93         call Modifica_Pos_actual2
 333+ 93CB C9               ret
 334+ 93CC
 335+ 93CC              ; *************************************************************************************************************************************************************************************************
 336+ 93CC              ;
 337+ 93CC              ;	13/8/22
 338+ 93CC              ;
 339+ 93CC              ;	Inicializacion
 340+ 93CC              ;
 341+ 93CC              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93CC              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93CC              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93CC              ;
 345+ 93CC              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93CC              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93CC              ;	_ desaparece/aparece.
 348+ 93CC
 349+ 93CC              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93CC              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93CC              ;
 352+ 93CC              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93CC              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93CC              ; 		   [E] ="0"
 355+ 93CC
 356+ 93CC              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93CC
 358+ 93CC CD 2E 98     Inicializacion call calcula_tercio
 359+ 93CF 28 36        	jr z,primit
 360+ 93D1 E6 02        	and 2
 361+ 93D3 20 07        	jr nz,segmit
 362+ 93D5 7D           	ld a,l
 363+ 93D6 FE 7F        	cp $7f
 364+ 93D8 38 2D        	jr c,primit
 365+ 93DA 28 2B        	jr z,primit
 366+ 93DC CD 39 94     segmit call column
 367+ 93DF 38 13        	jr c,tercuad
 368+ 93E1 3E 04        cuarcuad ld a,4
 369+ 93E3 32 92 87     	ld (Cuad_objeto),a
 370+ 93E6 21 20 48     	ld hl,$4820
 371+ 93E9 22 A6 87     	ld (Limite_horizontal),hl
 372+ 93EC 21 A8 87     	ld hl,Limite_vertical
 373+ 93EF 36 0D        	ld (hl),$0d
 374+ 93F1 08           	ex af,af
 375+ 93F2 18 3C        	jr 1F
 376+ 93F4              tercuad
 377+ 93F4 3E 03        	ld a,3
 378+ 93F6 32 92 87     	ld (Cuad_objeto),a
 379+ 93F9 21 20 48     	ld hl,$4820
 380+ 93FC 22 A6 87     	ld (Limite_horizontal),hl
 381+ 93FF 21 A8 87     	ld hl,Limite_vertical
 382+ 9402 36 12        	ld (hl),$12
 383+ 9404 08           	ex af,af
 384+ 9405 18 29        	jr 1F
 385+ 9407 CD 39 94     primit call column
 386+ 940A 38 13        	jr c, primcuad
 387+ 940C              segcuad
 388+ 940C 3E 02        	ld a,2
 389+ 940E 32 92 87     	ld (Cuad_objeto),a
 390+ 9411 21 C0 4F     	ld hl,$4fc0
 391+ 9414 22 A6 87     	ld (Limite_horizontal),hl
 392+ 9417 21 A8 87     	ld hl,Limite_vertical
 393+ 941A 36 0D        	ld (hl),$0d
 394+ 941C 08           	ex af,af
 395+ 941D 18 11        	jr 1F
 396+ 941F              primcuad
 397+ 941F 3E 01        	ld a,1
 398+ 9421 32 92 87     	ld (Cuad_objeto),a
 399+ 9424 21 C0 4F     	ld hl,$4fc0
 400+ 9427 22 A6 87     	ld (Limite_horizontal),hl
 401+ 942A 21 A8 87     	ld hl,Limite_vertical
 402+ 942D 36 12        	ld (hl),$12
 403+ 942F 08           	ex af,af
 404+ 9430 CD C6 9B     1 call Genera_coordenadas
 405+ 9433 21 A4 87     	ld hl,Ctrl_0
 406+ 9436 CB EE        	set 5,(hl)
 407+ 9438 C9           	ret
 408+ 9439
 409+ 9439              ; ------------------------------------------------------------------------------------------------------------------
 410+ 9439
 411+ 9439              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 9439              ;
 413+ 9439              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 9439
 415+ 9439 7D           column ld a,l
 416+ 943A E6 1F        	and $1f
 417+ 943C FE 10         	cp $10
 418+ 943E C9            	ret
 419+ 943F
 420+ 943F              ; --------------------------------------------------------------------------------------------------------------------
 421+ 943F              ;
 422+ 943F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 943F              ;
 424+ 943F              ; 14/12/22
 425+ 943F              ;
 426+ 943F              ;	Modifica: A y BC.
 427+ 943F
 428+ 943F 3A 92 87     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 9442 E6 01        	and 1
 430+ 9444 28 17        	jr z,1F
 431+ 9446
 432+ 9446              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 9446
 434+ 9446 3A 84 87     	ld a,(Coordenada_X)
 435+ 9449 47           	ld b,a
 436+ 944A 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 944B 79           	ld a,c
 438+ 944C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 944D 38 08        	jr c,2F
 440+ 944F 47           	ld b,a
 441+ 9450 79           	ld a,c
 442+ 9451 90           	sub b
 443+ 9452 32 A5 87     	ld (Columnas),a
 444+ 9455 18 1B        	jr 4F
 445+ 9457 79           2 ld a,c
 446+ 9458 32 A5 87     	ld (Columnas),a
 447+ 945B 18 15        	jr 4F
 448+ 945D
 449+ 945D              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 945D
 451+ 945D 3A 84 87     1 ld a,(Coordenada_X)
 452+ 9460 81           	add c
 453+ 9461 3D           	dec a
 454+ 9462 D6 1F        	sub $1f
 455+ 9464 38 08        	jr c,3F
 456+ 9466 47           	ld b,a
 457+ 9467 79           	ld a,c
 458+ 9468 90           	sub b
 459+ 9469 32 A5 87     	ld (Columnas),a
 460+ 946C 18 04        	jr 4F
 461+ 946E 79           3 ld a,c
 462+ 946F 32 A5 87     	ld (Columnas),a
 463+ 9472 D9           4 exx
 464+ 9473 4F           	ld c,a
 465+ 9474 D9           	exx
 466+ 9475 C9            ret
 467+ 9476
 468+ 9476              ; --------------------------------------------------------------------------------------------------------------------
 469+ 9476              ;
 470+ 9476              ;   19/7/23
 471+ 9476              ;
 472+ 9476              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 9476              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 9476              ;
 475+ 9476              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 9476              ;			HL e IY Contienen (Puntero_objeto).
 477+ 9476              ;
 478+ 9476              ;	DESTRUYE: HL,B Y A.
 479+ 9476
 480+ 9476 3A 92 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 9479 FE 02        	cp 2
 482+ 947B 38 18        	jr c,1F
 483+ 947D 28 16        	jr z,1F
 484+ 947F E6 01        	and 1
 485+ 9481 28 0D        	jr z,3F
 486+ 9483
 487+ 9483              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 9483
 489+ 9483 CD C9 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 9486
 491+ 9486 7D           9 ld a,l
 492+ 9487 E6 1F        	and $1f
 493+ 9489 28 2A        	jr z,7F
 494+ 948B 2B           	dec hl
 495+ 948C 10 F8        	djnz 9B
 496+ 948E 18 25        	jr 7F
 497+ 9490
 498+ 9490              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 9490
 500+ 9490 2A 80 87     3 ld hl,(Posicion_actual)
 501+ 9493 18 20        	jr 7F
 502+ 9495
 503+ 9495 28 14        1 jr z,2F
 504+ 9497
 505+ 9497              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9497
 507+ 9497 CD C9 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 949A
 509+ 949A 7D           4 ld a,l
 510+ 949B E6 1F        	and $1f
 511+ 949D 28 03        	jr z,6F
 512+ 949F 2B           	dec hl
 513+ 94A0 10 F8        	djnz 4B
 514+ 94A2 06 0F        6 ld b,15
 515+ 94A4 CD 2A 95     5 call PreviousScan
 516+ 94A7 10 FB        	djnz 5B
 517+ 94A9 18 0A        	jr 7F
 518+ 94AB
 519+ 94AB              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 94AB
 521+ 94AB CD C9 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 94AE 06 0F        	ld b,15
 523+ 94B0 CD 2A 95     8 call PreviousScan
 524+ 94B3 10 FB        	djnz 8B
 525+ 94B5
 526+ 94B5 E5           7 push hl
 527+ 94B6 DD E1        	pop ix
 528+ 94B8
 529+ 94B8 2A 82 87     	ld hl,(Puntero_objeto)
 530+ 94BB E5           	push hl
 531+ 94BC FD E1        	pop iy
 532+ 94BE
 533+ 94BE              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 94BE
 535+ 94BE 3A A4 87     	ld a,(Ctrl_0)
 536+ 94C1 CB 77        	bit 6,a
 537+ 94C3 C8           	ret z
 538+ 94C4
 539+ 94C4              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 94C4              ; _ entidad / Amadeus´.
 541+ 94C4
 542+ 94C4 DD 22 AD 85  	ld (p.imp.amadeus),ix
 543+ 94C8
 544+ 94C8 C9           	ret
 545+ 94C9
 546+ 94C9              ; --------------------------------------------------------------------------------------------------------------------
 547+ 94C9              ;
 548+ 94C9              ;	2/1/23
 549+ 94C9              ;
 550+ 94C9              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 94C9              ;
 552+ 94C9              ;	Tras esta rutina tenemos:
 553+ 94C9              ;
 554+ 94C9              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 94C9              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 94C9              ;
 557+ 94C9              ;	DESTRUYE!!!!! HL,B y A.
 558+ 94C9
 559+ 94C9 2A 80 87     Operandos ld hl,(Posicion_actual)
 560+ 94CC 3A A5 87     	ld a,(Columnas)
 561+ 94CF 3D           	dec a
 562+ 94D0 20 01        	jr nz,1F
 563+ 94D2 3C           	inc a
 564+ 94D3 47           1 ld b,a
 565+ 94D4 C9           	ret
 566+ 94D5
 567+ 94D5              ; --------------------------------------------------------------------------------------------------------------------
 568+ 94D5              ;
 569+ 94D5              ;	3/1/23
 570+ 94D5              ;
 571+ 94D5              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 94D5              ;
 573+ 94D5              ;	Destruye: A,B,HL y DE.
 574+ 94D5
 575+ 94D5              Define_rutina_de_impresion
 576+ 94D5
 577+ 94D5 3A 7F 87     	ld a,(Columns)
 578+ 94D8 47           	ld b,a
 579+ 94D9 3A A5 87     	ld a,(Columnas)
 580+ 94DC B8           	cp b
 581+ 94DD 20 0D        	jr nz,2f
 582+ 94DF
 583+ 94DF              ;	La entidad se imprime entera.
 584+ 94DF
 585+ 94DF 21 FE 95     	ld hl, Indice_entidades_completas
 586+ 94E2 E6 01        	and 1
 587+ 94E4 28 02        	jr z,1F
 588+ 94E6
 589+ 94E6 23           	inc hl
 590+ 94E7 23           	inc hl
 591+ 94E8
 592+ 94E8 CD AF 8B     1 call Extrae_address
 593+ 94EB C9           	ret		;	ret
 594+ 94EC
 595+ 94EC              ;	La entidad no se imprime entera en pantalla.
 596+ 94EC
 597+ 94EC 3A 92 87     2 ld a,(Cuad_objeto)
 598+ 94EF E6 01        	and 1
 599+ 94F1 28 17        	jr z,3F
 600+ 94F3
 601+ 94F3              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 94F3
 603+ 94F3 21 02 96     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 94F6 3A 7F 87     4 ld a,(Columns)
 605+ 94F9 E6 01        	and 1
 606+ 94FB 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 94FD
 608+ 94FD 23           	inc hl
 609+ 94FE 23           	inc hl
 610+ 94FF
 611+ 94FF 3A A5 87     	ld a,(Columnas)
 612+ 9502 E6 01        	and 1
 613+ 9504 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9506
 615+ 9506 23           	inc hl
 616+ 9507 23           	inc hl
 617+ 9508
 618+ 9508 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 950A
 620+ 950A 21 08 96     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 950D 18 E7        	jr 4B
 622+ 950F
 623+ 950F              ; --------------------------------------------------------------------------------------------------------------------
 624+ 950F              ;
 625+ 950F              ;	Prepara_draw
 626+ 950F              ;
 627+ 950F              ;	Es una rutina de carga.
 628+ 950F              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 950F              ;
 630+ 950F              ;	FUNCIONAMIENTO:
 631+ 950F              ;
 632+ 950F              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 950F              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 950F              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 950F              ;
 636+ 950F              ;	DESTRUYE:
 637+ 950F              ;
 638+ 950F              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 950F
 640+ 950F 21 7E 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 9512 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 9513 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 9514 4E           	ld c,(hl)
 644+ 9515 2A 80 87     	ld hl,(Posicion_actual)
 645+ 9518 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 951A C9           	ret
 647+ 951B
 648+ 951B              ;----------------------------------------------------------------------------------------------------------------
 649+ 951B              ;
 650+ 951B              ;	5/08/22
 651+ 951B              ;
 652+ 951B              ;   NextScan.
 653+ 951B              ;
 654+ 951B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 951B              ;
 656+ 951B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 951B              ;
 658+ 951B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 951B              ;
 660+ 951B              ;       DESTRUIDOS: AF y HL !!!
 661+ 951B              ;
 662+ 951B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 951B              ;
 664+ 951B
 665+ 951B 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 951C 7C               ld a,h
 667+ 951D E6 07            and 7
 668+ 951F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 9520
 670+ 9520 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 9521 C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 9523 6F               ld l,a
 673+ 9524 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 9525
 675+ 9525 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 9526 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 9528 67               ld h,a
 678+ 9529 C9               ret
 679+ 952A
 680+ 952A              ;----------------------------------------------------------------------------------------------------------------
 681+ 952A              ;
 682+ 952A              ;	5/08/22
 683+ 952A              ;
 684+ 952A              ;   PreviousScan.
 685+ 952A              ;
 686+ 952A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 952A              ;
 688+ 952A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 952A              ;
 690+ 952A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 952A              ;
 692+ 952A              ;       DESTRUIDOS: AF y HL !!!
 693+ 952A              ;
 694+ 952A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 952A              ;
 696+ 952A
 697+ 952A 7C           PreviousScan ld a,h
 698+ 952B 25               dec h               ; Dec H.
 699+ 952C E6 07            and 7
 700+ 952E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 952F
 702+ 952F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 9530 D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 9532 6F               ld l,a
 705+ 9533 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 9534
 707+ 9534 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 9535 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 9537 67               ld h,a
 710+ 9538 C9               ret
 711+ 9539
 712+ 9539              ; -----------------------------------------------------------------------------------
 713+ 9539              ;
 714+ 9539              ;	31/7/23
 715+ 9539              ;
 716+ 9539              ;	Rutina principal de pintado de entidades.
 717+ 9539              ;	Extrae la foto del frame, (entidades).
 718+ 9539
 719+ 9539              Extrae_foto_entidades
 720+ 9539
 721+ 9539 21 01 70     	ld hl,Album_de_fotos+1
 722+ 953C 7E           	ld a,(hl)
 723+ 953D A7           	and a
 724+ 953E C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 953F
 726+ 953F              ;	No hay datos, (entidades para pintar en este frame).
 727+ 953F
 728+ 953F 3A CB 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 9542 A7           	and a
 730+ 9543 C8           	ret z
 731+ 9544
 732+ 9544              ; -----------------------------------
 733+ 9544
 734+ 9544 ED 73 D0 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9548 31 00 70     	ld sp,Album_de_fotos
 736+ 954B
 737+ 954B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 954D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 954E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 954F
 741+ 954F ED 73 D2 87  	ld (Stack_2),sp
 742+ 9553 ED 7B D0 87  	ld sp,(Stack)
 743+ 9557
 744+ 9557              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9557
 746+ 9557 3E CD        	ld a,$cd
 747+ 9559 32 61 95     	ld (Imprime),a
 748+ 955C EB           	ex de,hl
 749+ 955D 22 62 95     	ld (Imprime+1),hl
 750+ 9560 EB           	ex de,hl
 751+ 9561
 752+ 9561              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 9561
 754+ 9561 00 00 00     Imprime db 0,0,0
 755+ 9564
 756+ 9564 ED 73 D0 87  	ld (Stack),sp
 757+ 9568
 758+ 9568 3A CB 87     	ld a,(Numero_de_malotes)
 759+ 956B 3D           	dec a
 760+ 956C 28 09        	jr z,1F
 761+ 956E 32 CB 87      	ld (Numero_de_malotes),a
 762+ 9571
 763+ 9571 ED 7B D2 87  	ld sp,(Stack_2)
 764+ 9575 18 D4        	jr 2B
 765+ 9577
 766+ 9577 AF           1 xor a
 767+ 9578 32 D2 87     	ld (Stack_2),a
 768+ 957B
 769+ 957B C9           	ret
 770+ 957C
 771+ 957C              ; -----------------------------------------------------------------------------------
 772+ 957C              ;
 773+ 957C              ;	28/2/23
 774+ 957C              ;
 775+ 957C              ;	Pinta los disparos generados.
 776+ 957C
 777+ 957C              Extrae_foto_disparos
 778+ 957C
 779+ 957C 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 957F 7E               ld a,(hl)
 781+ 9580 A7               and a
 782+ 9581 C8               ret z
 783+ 9582
 784+ 9582 3A E0 87     	ld a,(Numero_de_disparotes)
 785+ 9585 A7           	and a
 786+ 9586 C8           	ret z
 787+ 9587 ED 73 D0 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 958B 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 958E
 790+ 958E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 9590 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 9591 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9592
 794+ 9592 ED 73 D2 87  	ld (Stack_2),sp
 795+ 9596 ED 7B D0 87  	ld sp,(Stack)
 796+ 959A
 797+ 959A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 959A
 799+ 959A 3E CD        	ld a,$cd
 800+ 959C 32 A4 95     	ld (Imprime2),a
 801+ 959F EB           	ex de,hl
 802+ 95A0 22 A5 95     	ld (Imprime2+1),hl
 803+ 95A3 EB           	ex de,hl
 804+ 95A4
 805+ 95A4              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 95A4
 807+ 95A4 00 00 00     Imprime2 db 0,0,0
 808+ 95A7
 809+ 95A7 3A E0 87     	ld a,(Numero_de_disparotes)
 810+ 95AA 3D           	dec a
 811+ 95AB 28 09        	jr z,1F
 812+ 95AD 32 E0 87      	ld (Numero_de_disparotes),a
 813+ 95B0
 814+ 95B0 ED 7B D2 87  	ld sp,(Stack_2)
 815+ 95B4 18 D8        	jr 2B
 816+ 95B6
 817+ 95B6 AF           1 xor a
 818+ 95B7 32 D2 87     	ld (Stack_2),a
 819+ 95BA C9           	ret
 820+ 95BB
 821+ 95BB              ; -----------------------------------------------------------------------------------
 822+ 95BB              ;
 823+ 95BB              ;	4/9/23
 824+ 95BB              ;
 825+ 95BB              ;	Rutina principal de pintado de Amadeus.
 826+ 95BB              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 95BB
 828+ 95BB 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 95BE 7E           	ld a,(hl)
 830+ 95BF A7           	and a
 831+ 95C0 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 95C1
 833+ 95C1 3A CB 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 95C4 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 95C5 C8           	ret z
 836+ 95C6
 837+ 95C6              ; -----------------------------------
 838+ 95C6
 839+ 95C6 ED 73 D0 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 95CA 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 95CD
 842+ 95CD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 95CF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 95D0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 95D1
 846+ 95D1 ED 73 D2 87  	ld (Stack_2),sp
 847+ 95D5 ED 7B D0 87  	ld sp,(Stack)
 848+ 95D9
 849+ 95D9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 95D9
 851+ 95D9 3E CD        	ld a,$cd
 852+ 95DB 32 E3 95     	ld (Imprime_Amadeus),a
 853+ 95DE EB           	ex de,hl
 854+ 95DF 22 E4 95     	ld (Imprime_Amadeus+1),hl
 855+ 95E2 EB           	ex de,hl
 856+ 95E3
 857+ 95E3              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 95E3
 859+ 95E3 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 95E6
 861+ 95E6 ED 73 D0 87  	ld (Stack),sp
 862+ 95EA
 863+ 95EA 3A CB 87     	ld a,(Numero_de_malotes)
 864+ 95ED 3D           	dec a
 865+ 95EE 28 09        	jr z,1F
 866+ 95F0 32 CB 87      	ld (Numero_de_malotes),a
 867+ 95F3
 868+ 95F3 ED 7B D2 87  	ld sp,(Stack_2)
 869+ 95F7 18 D4        	jr 2B
 870+ 95F9
 871+ 95F9 AF           1 xor a
 872+ 95FA 32 D2 87     	ld (Stack_2),a
 873+ 95FD
 874+ 95FD C9           	ret
# file closed: Draw_XOR.asm
1926  95FE              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95FE              ;   índices de Rutinas de impresión.
   2+ 95FE
   3+ 95FE 0E 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9600 3B 96            defw Pinta_Amadeus_3x2
   5+ 9602
   6+ 9602 91 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9604 31 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9606 E5 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9608
  10+ 9608 BB 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 960A BF 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 960C 73 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 960E
  14+ 960E
  15+ 960E              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 960E              ;
  17+ 960E              ;   12/12/22
  18+ 960E              ;
  19+ 960E              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 960E              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 960E              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 960E              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 960E              ;
  24+ 960E              ;   Modifica: DE y HL.
  25+ 960E
  26+ 960E ED 73 D0 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9612 FD F9        	ld sp,iy
  28+ 9614 06 10            ld b,16
  29+ 9616 D1           1 pop de
  30+ 9617 7B               ld a,e
  31+ 9618 AE               xor (hl)
  32+ 9619 77           	ld (hl),a
  33+ 961A 23           	inc hl
  34+ 961B 7A               ld a,d
  35+ 961C AE               xor (hl)
  36+ 961D 77           	ld (hl),a
  37+ 961E 2B           	dec hl
  38+ 961F 24           	inc h
  39+ 9620 7C               ld a,h
  40+ 9621 E6 07            and 7
  41+ 9623 20 0A            jr nz,2F
  42+ 9625 7D               ld a,l
  43+ 9626 C6 20            add a,$20
  44+ 9628 6F               ld l,a
  45+ 9629 38 04            jr c,2F
  46+ 962B 7C               ld a,h
  47+ 962C D6 08            sub 8
  48+ 962E 67               ld h,a
  49+ 962F 7C           2 ld a,h
  50+ 9630 FE 58            cp $58
  51+ 9632 28 02            jr z,3F
  52+ 9634 10 E0            djnz 1B
  53+ 9636 ED 7B D0 87  3 ld sp,(Stack)
  54+ 963A C9           	ret
  55+ 963B
  56+ 963B ED 73 D0 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 963F FD F9        	ld sp,iy
  58+ 9641 06 08            ld b,8
  59+ 9643 D1           1 pop de
  60+ 9644 7B               ld a,e
  61+ 9645 AE               xor (hl)
  62+ 9646 77           	ld (hl),a
  63+ 9647 23           	inc hl
  64+ 9648 7A               ld a,d
  65+ 9649 AE               xor (hl)
  66+ 964A 77           	ld (hl),a
  67+ 964B 23           	inc hl
  68+ 964C D1           	pop de
  69+ 964D 7B               ld a,e
  70+ 964E AE               xor (hl)
  71+ 964F 77           	ld (hl),a
  72+ 9650 2B           	dec hl
  73+ 9651 2B           	dec hl
  74+ 9652 24           	inc h
  75+ 9653 7C               ld a,h
  76+ 9654 E6 07            and 7
  77+ 9656 20 0A            jr nz,2F
  78+ 9658 7D               ld a,l
  79+ 9659 C6 20            add a,$20
  80+ 965B 6F               ld l,a
  81+ 965C 38 04            jr c,2F
  82+ 965E 7C               ld a,h
  83+ 965F D6 08            sub 8
  84+ 9661 67               ld h,a
  85+ 9662 7C           2 ld a,h
  86+ 9663 FE 58            cp $58
  87+ 9665 28 25            jr z,4F
  88+ 9667 7A               ld a,d
  89+ 9668 AE               xor (hl)
  90+ 9669 77               ld (hl),a
  91+ 966A D1           	pop de
  92+ 966B 23           	inc hl
  93+ 966C 7B               ld a,e
  94+ 966D AE               xor (hl)
  95+ 966E 77           	ld (hl),a
  96+ 966F 23           	inc hl
  97+ 9670 7A               ld a,d
  98+ 9671 AE               xor (hl)
  99+ 9672 77           	ld (hl),a
 100+ 9673 2B           	dec hl
 101+ 9674 2B           	dec hl
 102+ 9675 24           	inc h
 103+ 9676 7C               ld a,h
 104+ 9677 E6 07            and 7
 105+ 9679 20 0A            jr nz,3F
 106+ 967B 7D               ld a,l
 107+ 967C C6 20            add a,$20
 108+ 967E 6F               ld l,a
 109+ 967F 38 04            jr c,3F
 110+ 9681 7C               ld a,h
 111+ 9682 D6 08            sub 8
 112+ 9684 67               ld h,a
 113+ 9685 7C           3 ld a,h
 114+ 9686 FE 58            cp $58
 115+ 9688 28 02            jr z,4F
 116+ 968A 10 B7            djnz 1B
 117+ 968C ED 7B D0 87  4 ld sp,(Stack)
 118+ 9690 C9           	ret
 119+ 9691
 120+ 9691              ; ---------------------------------------------------
 121+ 9691
 122+ 9691 ED 73 D0 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9695 FD F9        	ld sp,iy
 124+ 9697
 125+ 9697              ; >>>
 126+ 9697
 127+ 9697 06 10            ld b,16
 128+ 9699 D1           1 pop de
 129+ 969A 7A           	ld a,d
 130+ 969B AE           	xor (hl)
 131+ 969C 77           	ld (hl),a
 132+ 969D 24           	inc h
 133+ 969E 7C               ld a,h
 134+ 969F E6 07            and 7
 135+ 96A1 20 0C            jr nz,2F
 136+ 96A3 7D               ld a,l
 137+ 96A4 C6 20            add a,$20
 138+ 96A6 6F               ld l,a
 139+ 96A7 38 06            jr c,2F
 140+ 96A9 7C               ld a,h
 141+ 96AA D6 08            sub 8
 142+ 96AC 67               ld h,a
 143+ 96AD 18 00            jr 2F
 144+ 96AF 7C           2 ld a,h
 145+ 96B0 FE 58            cp $58
 146+ 96B2 28 02            jr z,3F
 147+ 96B4 10 E3            djnz 1B
 148+ 96B6 ED 7B D0 87  3 ld sp,(Stack)
 149+ 96BA C9           	ret
 150+ 96BB
 151+ 96BB ED 73 D0 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 96BF FD F9        	ld sp,iy
 153+ 96C1
 154+ 96C1              ; >>>
 155+ 96C1
 156+ 96C1 06 10            ld b,16
 157+ 96C3 D1           1 pop de
 158+ 96C4 7B           	ld a,e
 159+ 96C5 AE           	xor (hl)
 160+ 96C6 77           	ld (hl),a
 161+ 96C7 24           	inc h
 162+ 96C8 7C               ld a,h
 163+ 96C9 E6 07            and 7
 164+ 96CB 20 0C            jr nz,2F
 165+ 96CD 7D               ld a,l
 166+ 96CE C6 20            add a,$20
 167+ 96D0 6F               ld l,a
 168+ 96D1 38 06            jr c,2F
 169+ 96D3 7C               ld a,h
 170+ 96D4 D6 08            sub 8
 171+ 96D6 67               ld h,a
 172+ 96D7 18 00            jr 2F
 173+ 96D9 7C           2 ld a,h
 174+ 96DA FE 58            cp $58
 175+ 96DC 28 02            jr z,3F
 176+ 96DE 10 E3            djnz 1B
 177+ 96E0 ED 7B D0 87  3 ld sp,(Stack)
 178+ 96E4 C9           	ret
 179+ 96E5
 180+ 96E5              ; ---------------------------------------------------
 181+ 96E5
 182+ 96E5 ED 73 D0 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96E9 FD F9        	ld sp,iy
 184+ 96EB 06 08            ld b,8
 185+ 96ED D1           1 pop de
 186+ 96EE 7A           	ld a,d
 187+ 96EF AE           	xor (hl)
 188+ 96F0 77           	ld (hl),a
 189+ 96F1 23           	inc hl
 190+ 96F2 D1           	pop de
 191+ 96F3 7B           	ld a,e
 192+ 96F4 AE           	xor (hl)
 193+ 96F5 77           	ld (hl),a
 194+ 96F6 2B           	dec hl
 195+ 96F7 24            	inc h
 196+ 96F8 7C               ld a,h
 197+ 96F9 E6 07            and 7
 198+ 96FB 20 0A            jr nz,2F
 199+ 96FD 7D               ld a,l
 200+ 96FE C6 20            add a,$20
 201+ 9700 6F               ld l,a
 202+ 9701 38 04            jr c,2F
 203+ 9703 7C               ld a,h
 204+ 9704 D6 08            sub 8
 205+ 9706 67               ld h,a
 206+ 9707 7C           2 ld a,h
 207+ 9708 FE 58            cp $58
 208+ 970A 28 20            jr z,4F
 209+ 970C D1               pop de
 210+ 970D 7B           	ld a,e
 211+ 970E AE           	xor (hl)
 212+ 970F 77           	ld (hl),a
 213+ 9710 23           	inc hl
 214+ 9711 7A           	ld a,d
 215+ 9712 AE           	xor (hl)
 216+ 9713 77           	ld (hl),a
 217+ 9714 2B           	dec hl
 218+ 9715 24           	inc h
 219+ 9716 7C               ld a,h
 220+ 9717 E6 07            and 7
 221+ 9719 20 0A            jr nz,3F
 222+ 971B 7D               ld a,l
 223+ 971C C6 20            add a,$20
 224+ 971E 6F               ld l,a
 225+ 971F 38 04            jr c,3F
 226+ 9721 7C               ld a,h
 227+ 9722 D6 08            sub 8
 228+ 9724 67               ld h,a
 229+ 9725 7C           3 ld a,h
 230+ 9726 FE 58            cp $58
 231+ 9728 28 02            jr z,4F
 232+ 972A 10 C1            djnz 1B
 233+ 972C ED 7B D0 87  4 ld sp,(Stack)
 234+ 9730 C9           	ret
 235+ 9731
 236+ 9731 ED 73 D0 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9735 FD F9        	ld sp,iy
 238+ 9737 06 08            ld b,8
 239+ 9739 D1           1 pop de
 240+ 973A D1           	pop de
 241+ 973B 7B           	ld a,e
 242+ 973C AE           	xor (hl)
 243+ 973D 77           	ld (hl),a
 244+ 973E 24            	inc h
 245+ 973F 7C               ld a,h
 246+ 9740 E6 07            and 7
 247+ 9742 20 0A            jr nz,2F
 248+ 9744 7D               ld a,l
 249+ 9745 C6 20            add a,$20
 250+ 9747 6F               ld l,a
 251+ 9748 38 04            jr c,2F
 252+ 974A 7C               ld a,h
 253+ 974B D6 08            sub 8
 254+ 974D 67               ld h,a
 255+ 974E 7C           2 ld a,h
 256+ 974F FE 58            cp $58
 257+ 9751 28 1B            jr z,4F
 258+ 9753 D1               pop de
 259+ 9754 7A           	ld a,d
 260+ 9755 AE           	xor (hl)
 261+ 9756 77           	ld (hl),a
 262+ 9757 24           	inc h
 263+ 9758 7C               ld a,h
 264+ 9759 E6 07            and 7
 265+ 975B 20 0A            jr nz,3F
 266+ 975D 7D               ld a,l
 267+ 975E C6 20            add a,$20
 268+ 9760 6F               ld l,a
 269+ 9761 38 04            jr c,3F
 270+ 9763 7C               ld a,h
 271+ 9764 D6 08            sub 8
 272+ 9766 67               ld h,a
 273+ 9767 7C           3 ld a,h
 274+ 9768 FE 58            cp $58
 275+ 976A 28 02            jr z,4F
 276+ 976C 10 CB            djnz 1B
 277+ 976E ED 7B D0 87  4 ld sp,(Stack)
 278+ 9772 C9           	ret
 279+ 9773
 280+ 9773 ED 73 D0 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9777 FD F9        	ld sp,iy
 282+ 9779 06 08            ld b,8
 283+ 977B D1           1 pop de
 284+ 977C 7B           	ld a,e
 285+ 977D AE           	xor (hl)
 286+ 977E 77           	ld (hl),a
 287+ 977F 23           	inc hl
 288+ 9780 7A           	ld a,d
 289+ 9781 AE           	xor (hl)
 290+ 9782 77           	ld (hl),a
 291+ 9783 2B           	dec hl
 292+ 9784 24             	inc h
 293+ 9785 7C               ld a,h
 294+ 9786 E6 07            and 7
 295+ 9788 20 0A            jr nz,2F
 296+ 978A 7D               ld a,l
 297+ 978B C6 20            add a,$20
 298+ 978D 6F               ld l,a
 299+ 978E 38 04            jr c,2F
 300+ 9790 7C               ld a,h
 301+ 9791 D6 08            sub 8
 302+ 9793 67               ld h,a
 303+ 9794 7C           2 ld a,h
 304+ 9795 FE 58            cp $58
 305+ 9797 28 21            jr z,4F
 306+ 9799 D1               pop de
 307+ 979A 7A           	ld a,d
 308+ 979B AE           	xor (hl)
 309+ 979C 77           	ld (hl),a
 310+ 979D 23           	inc hl
 311+ 979E D1               pop de
 312+ 979F 7B           	ld a,e
 313+ 97A0 AE           	xor (hl)
 314+ 97A1 77           	ld (hl),a
 315+ 97A2 2B           	dec hl
 316+ 97A3 24           	inc h
 317+ 97A4 7C               ld a,h
 318+ 97A5 E6 07            and 7
 319+ 97A7 20 0A            jr nz,3F
 320+ 97A9 7D               ld a,l
 321+ 97AA C6 20            add a,$20
 322+ 97AC 6F               ld l,a
 323+ 97AD 38 04            jr c,3F
 324+ 97AF 7C               ld a,h
 325+ 97B0 D6 08            sub 8
 326+ 97B2 67               ld h,a
 327+ 97B3 7C           3 ld a,h
 328+ 97B4 FE 58            cp $58
 329+ 97B6 28 02            jr z,4F
 330+ 97B8 10 C1            djnz 1B
 331+ 97BA ED 7B D0 87  4 ld sp,(Stack)
 332+ 97BE C9           	ret
 333+ 97BF
 334+ 97BF ED 73 D0 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 97C3 FD F9        	ld sp,iy
 336+ 97C5 06 08            ld b,8
 337+ 97C7 D1           1 pop de
 338+ 97C8 7B           	ld a,e
 339+ 97C9 AE           	xor (hl)
 340+ 97CA 77           	ld (hl),a
 341+ 97CB 24            	inc h
 342+ 97CC 7C               ld a,h
 343+ 97CD E6 07            and 7
 344+ 97CF 20 0A            jr nz,2F
 345+ 97D1 7D               ld a,l
 346+ 97D2 C6 20            add a,$20
 347+ 97D4 6F               ld l,a
 348+ 97D5 38 04            jr c,2F
 349+ 97D7 7C               ld a,h
 350+ 97D8 D6 08            sub 8
 351+ 97DA 67               ld h,a
 352+ 97DB 7C           2 ld a,h
 353+ 97DC FE 58            cp $58
 354+ 97DE 28 1C            jr z,4F
 355+ 97E0 D1               pop de
 356+ 97E1 7A           	ld a,d
 357+ 97E2 AE           	xor (hl)
 358+ 97E3 77           	ld (hl),a
 359+ 97E4 24           	inc h
 360+ 97E5 7C               ld a,h
 361+ 97E6 E6 07            and 7
 362+ 97E8 20 0A            jr nz,3F
 363+ 97EA 7D               ld a,l
 364+ 97EB C6 20            add a,$20
 365+ 97ED 6F               ld l,a
 366+ 97EE 38 04            jr c,3F
 367+ 97F0 7C               ld a,h
 368+ 97F1 D6 08            sub 8
 369+ 97F3 67               ld h,a
 370+ 97F4 7C           3 ld a,h
 371+ 97F5 FE 58            cp $58
 372+ 97F7 28 03            jr z,4F
 373+ 97F9 D1               pop de
 374+ 97FA 10 CB            djnz 1B
 375+ 97FC ED 7B D0 87  4 ld sp,(Stack)
 376+ 9800 C9           	ret
 377+ 9801
 378+ 9801              ; ---------------------------------------------------
 379+ 9801              ;
 380+ 9801              ;   27/02/23
 381+ 9801              ;
 382+ 9801              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9801              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9801              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9801
 386+ 9801 ED 73 D0 87  Pinta_Disparo ld (Stack),sp
 387+ 9805 FD F9            ld sp,iy
 388+ 9807 06 03            ld b,3
 389+ 9809 D1           1 pop de
 390+ 980A 7B               ld a,e
 391+ 980B AE               xor (hl)
 392+ 980C 77               ld (hl),a
 393+ 980D 23               inc hl
 394+ 980E 7A               ld a,d
 395+ 980F AE               xor (hl)
 396+ 9810 77               ld (hl),a
 397+ 9811 2B               dec hl
 398+ 9812
 399+ 9812 24               inc h
 400+ 9813 7C               ld a,h
 401+ 9814 E6 07            and 7
 402+ 9816 20 0A            jr nz,2F
 403+ 9818 7D               ld a,l
 404+ 9819 C6 20            add a,$20
 405+ 981B 6F               ld l,a
 406+ 981C 38 04            jr c,2F
 407+ 981E 7C               ld a,h
 408+ 981F D6 08            sub 8
 409+ 9821 67               ld h,a
 410+ 9822 7C           2 ld a,h
 411+ 9823 FE 58            cp $58
 412+ 9825 28 02            jr z,3F
 413+ 9827
 414+ 9827 10 E0            djnz 1B
 415+ 9829 ED 7B D0 87  3 ld sp,(Stack)
 416+ 982D C9               ret
 417+ 982E
# file closed: Rutinas_de_impresion_sprites.asm
1927  982E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 982E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 982E              ;
   3+ 982E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 982E              ;
   5+ 982E              ; *****************************************************************************************************************************************************************************************
   6+ 982E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 982E
   8+ 982E 7C           calcula_tercio ld a,h
   9+ 982F E6 18        	and $18
  10+ 9831 CB 2F        	sra a
  11+ 9833 CB 2F        	sra a
  12+ 9835 CB 2F        	sra a
  13+ 9837 C9           	ret
  14+ 9838
# file closed: calcula_tercio.asm
1928  9838              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9838              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9838              ;
   3+ 9838              ;
   4+ 9838              ;	CLS.
   5+ 9838              ;
   6+ 9838              ;	Limpia la pantalla y define sus atributos.
   7+ 9838              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9838              ;
   9+ 9838              ;	COLORES: 0 ..... NEGRO
  10+ 9838              ;    		 1 ..... AZUL
  11+ 9838              ; 			 2 ..... ROJO
  12+ 9838              ;			 3 ..... MAGENTA
  13+ 9838              ; 			 4 ..... VERDE
  14+ 9838              ; 			 5 ..... CIAN
  15+ 9838              ;			 6 ..... AMARILLO
  16+ 9838              ; 			 7 ..... BLANCO
  17+ 9838              ;
  18+ 9838              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9838              ;
  20+ 9838              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9838
  22+ 9838
  23+ 9838 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 983B 11 01 40     	LD DE,$4001
  25+ 983E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9841 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9843 ED B0        	LDIR
  28+ 9845 01 FF 02     	LD BC,767
  29+ 9848 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9849 ED B0        	LDIR
  31+ 984B C9           	ret
  32+ 984C
# file closed: Cls.asm
1929  984C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 984C              ; ******************************************************************************************************************************************************************************************
   2+ 984C              ;
   3+ 984C              ;   20/05/23
   4+ 984C              ;
   5+ 984C              ;	Recompone_posicion_inicio
   6+ 984C              ;
   7+ 984C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 984C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 984C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 984C              ;	_ a una u otra rutina.
  11+ 984C
  12+ 984C              Recompone_posicion_inicio
  13+ 984C
  14+ 984C 2A 90 87     	ld hl,(Posicion_inicio)
  15+ 984F 7D           	ld a,l
  16+ 9850 E6 1F        	and $1f
  17+ 9852 28 16        	jr z,1F
  18+ 9854
  19+ 9854 FE 1F        	cp $1f
  20+ 9856 28 0D        	jr z,3F
  21+ 9858
  22+ 9858 21 A9 87     	ld hl,Ctrl_2
  23+ 985B CB C6        	set 0,(hl)
  24+ 985D 2A 82 87     	ld hl,(Puntero_objeto)
  25+ 9860 22 C0 87     	ld (Repone_puntero_objeto),hl
  26+ 9863 18 08        	jr 2F
  27+ 9865
  28+ 9865 CD 13 9A     3 call Mov_left
  29+ 9868 18 03        	jr 2F
  30+ 986A
  31+ 986A CD F0 98     1 call Mov_right
  32+ 986D 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9870 22 82 87     	ld (Puntero_objeto),hl
  34+ 9873 C9           	ret
  35+ 9874
  36+ 9874              ; ******************************************************************************************************************************************************************************************
  37+ 9874              ;
  38+ 9874              ;   27/05/23
  39+ 9874              ;
  40+ 9874              ;	Mov_down
  41+ 9874              ;
  42+ 9874              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9874              ;
  44+ 9874              ;
  45+ 9874              Mov_down
  46+ 9874
  47+ 9874 CD DE 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9877              ;																	; _ repone (Puntero_objeto).
  49+ 9877 21 A4 87     	ld hl,Ctrl_0
  50+ 987A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 987C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 987C              ; 																	; _ en el caso de que no lo haya.
  53+ 987C 3A 96 87     	ld a,(Vel_down)
  54+ 987F 47           	ld b,a
  55+ 9880 2A 80 87         ld hl,(Posicion_actual)
  56+ 9883 CD 2E 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9886 E6 02        	and 2
  58+ 9888 28 17        	jr z,1F
  59+ 988A
  60+ 988A              ; Nos encontramos en el último tercio de pantalla.
  61+ 988A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 988A
  63+ 988A 7C           	ld a,h
  64+ 988B FE 57        	cp $57
  65+ 988D 20 12        	jr nz,1F
  66+ 988F
  67+ 988F 7D           	ld a,l
  68+ 9890 C6 20        	add $20
  69+ 9892 30 0D        	jr nc,1F
  70+ 9894
  71+ 9894              ; ------------------------------
  72+ 9894              ;
  73+ 9894              ;	12/01/24
  74+ 9894
  75+ 9894              ;	call Reaparece_arriba
  76+ 9894 CD A0 9B     	call Reinicio
  77+ 9897
  78+ 9897              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 9897
  80+ 9897 3A DE 87     	ld a,(Ctrl_3)
  81+ 989A CB CF        	set 1,a
  82+ 989C 32 DE 87     	ld (Ctrl_3),a
  83+ 989F
  84+ 989F 18 08        	jr 3F
  85+ 98A1              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  86+ 98A1              ;															; _a la siguiente entidad como "Entidad_guía".
  87+ 98A1              ; ------------------------------
  88+ 98A1
  89+ 98A1 CD 1B 95     1 call NextScan
  90+ 98A4 22 80 87     	ld (Posicion_actual),hl
  91+ 98A7 10 DA            djnz 2B
  92+ 98A9 CD C6 9B     3 call Genera_coordenadas
  93+ 98AC C9           	ret
  94+ 98AD
  95+ 98AD              ; ******************************************************************************************************************************************************************************************
  96+ 98AD              ;
  97+ 98AD              ;   27/05/23
  98+ 98AD              ;
  99+ 98AD              ;	Mov_up
 100+ 98AD              ;
 101+ 98AD              ; 	Mueve el Sprite hacia arriba.
 102+ 98AD              ;
 103+ 98AD              ;
 104+ 98AD              Mov_up
 105+ 98AD
 106+ 98AD CD DE 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 107+ 98B0              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 108+ 98B0 21 A4 87     	ld hl,Ctrl_0
 109+ 98B3 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 110+ 98B5              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 111+ 98B5              ; 																		; _ en el caso de que no lo haya.
 112+ 98B5 3A 95 87     	ld a,(Vel_up)
 113+ 98B8 47           	ld b,a
 114+ 98B9 2A 80 87     	ld hl,(Posicion_actual)
 115+ 98BC CD 2E 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 116+ 98BF A7           	and a
 117+ 98C0 20 10        	jr nz,1F
 118+ 98C2
 119+ 98C2              ; Nos encontramos en el 1er tercio de pantalla.
 120+ 98C2              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 121+ 98C2
 122+ 98C2 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 123+ 98C3 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 124+ 98C5 20 0B            jr nz,1F
 125+ 98C7 7D               ld a,l
 126+ 98C8 D6 20            sub $20
 127+ 98CA 30 06            jr nc,1F
 128+ 98CC 25               dec h
 129+ 98CD
 130+ 98CD              ; -----------------------------
 131+ 98CD CD 81 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 132+ 98D0              ;	call Reinicio
 133+ 98D0              ; -----------------------------
 134+ 98D0
 135+ 98D0 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 136+ 98D2 CD 2A 95     1 call PreviousScan
 137+ 98D5 22 80 87     	ld (Posicion_actual),hl
 138+ 98D8 10 E2            djnz 3B
 139+ 98DA CD C6 9B     2 call Genera_coordenadas
 140+ 98DD C9           	ret
 141+ 98DE
 142+ 98DE              ; -----------------------------
 143+ 98DE              ;
 144+ 98DE              ;	27/5/23
 145+ 98DE              ;
 146+ 98DE              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 147+ 98DE              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 148+ 98DE              ;
 149+ 98DE              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 150+ 98DE              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 151+ 98DE              ;
 152+ 98DE              ;	Modifica: A y (Puntero_objeto).
 153+ 98DE
 154+ 98DE 3A A9 87     Reponne_punntero_objeto	ld a,(Ctrl_2)
 155+ 98E1 CB 47        	bit 0,a
 156+ 98E3 C8           	ret z
 157+ 98E4 CB 87        	res 0,a
 158+ 98E6 32 A9 87     	ld (Ctrl_2),a
 159+ 98E9 2A C0 87     	ld hl,(Repone_puntero_objeto)
 160+ 98EC 22 82 87     	ld (Puntero_objeto),hl
 161+ 98EF C9           	ret
 162+ 98F0
 163+ 98F0              ; ******************************************************************************************************************************************************************************************
 164+ 98F0              ;
 165+ 98F0              ;	19/10/22
 166+ 98F0              ;
 167+ 98F0              ;	Mov_right.
 168+ 98F0              ;
 169+ 98F0              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 170+ 98F0              ;
 171+ 98F0
 172+ 98F0 3A A4 87     Mov_right ld a,(Ctrl_0)
 173+ 98F3 CB 77        	bit 6,a
 174+ 98F5 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 175+ 98F7
 176+ 98F7 CD 2F 9B     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 177+ 98FA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 178+ 98FB
 179+ 98FB 21 A4 87     	ld hl,Ctrl_0
 180+ 98FE CB E6        	set 4,(hl)
 181+ 9900 18 52        	jr 8F
 182+ 9902
 183+ 9902 21 A4 87     10 ld hl,Ctrl_0
 184+ 9905 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 185+ 9907              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 186+ 9907              ; 																	; _ en el caso de que no lo haya.
 187+ 9907 3A 84 87     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 188+ 990A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 189+ 990C 20 46        	jr nz,8F
 190+ 990E
 191+ 990E 3A 86 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 192+ 9911 A7           	and a 															; _[3] para continuar con el DESPLZ.
 193+ 9912 28 40        	jr z,8F
 194+ 9914
 195+ 9914              ; ---------- ---------- ----------
 196+ 9914              ;
 197+ 9914              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 198+ 9914
 199+ 9914 3A 94 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 200+ 9917 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 201+ 9919 28 11        	jr z,1F
 202+ 991B 38 06        	jr c,6F
 203+ 991D FE 04        	cp 4
 204+ 991F 28 14        	jr z,7F
 205+ 9921 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 206+ 9923
 207+ 9923              ; ---------- ---------- ----------
 208+ 9923              ;
 209+ 9923              ; Perfiles de velocidad
 210+ 9923              ;
 211+ 9923
 212+ 9923 3A 86 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 213+ 9926 FE FE        	cp $fe
 214+ 9928 20 2A        	jr nz,8F
 215+ 992A 18 10        	jr 3F
 216+ 992C 3A 86 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 217+ 992F FE FD        	cp $fd
 218+ 9931 20 21        	jr nz,8F
 219+ 9933 18 07        	jr 3F
 220+ 9935 3A 86 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 221+ 9938 FE FB        	cp $fb
 222+ 993A 20 18        	jr nz,8F
 223+ 993C
 224+ 993C              ; ---------- ---------- ----------
 225+ 993C
 226+ 993C              3
 227+ 993C CD 6F 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 228+ 993F              ;	call Reinicio
 229+ 993F
 230+ 993F              ; ---------- ---------- ----------
 231+ 993F              ;
 232+ 993F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 233+ 993F
 234+ 993F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 235+ 9941 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 236+ 9942 CD 5B 99     	call DESPLZ_DER
 237+ 9945 C1           	pop bc
 238+ 9946 10 F9        	djnz 5B
 239+ 9948 2A 80 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 240+ 994B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 241+ 994C 22 80 87     	ld (Posicion_actual),hl
 242+ 994F CD C6 9B     	call Genera_coordenadas
 243+ 9952 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 244+ 9954
 245+ 9954              ; ---------- ---------- ----------
 246+ 9954
 247+ 9954 2A 80 87     8 ld hl,(Posicion_actual)
 248+ 9957 CD 5B 99     	call DESPLZ_DER
 249+ 995A C9           2 ret
 250+ 995B
 251+ 995B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 252+ 995B              ;
 253+ 995B              ;	22/9/22
 254+ 995B              ;
 255+ 995B
 256+ 995B CD 6A 99     DESPLZ_DER call Desplaza_derecha
 257+ 995E CD B6 99         call modifica_parametros_1er_DESPLZ_2
 258+ 9961 CD DF 99         call Ciclo_completo
 259+ 9964 21 A4 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 260+ 9967 CB FE        	set 7,(hl)
 261+ 9969 C9           	ret
 262+ 996A
 263+ 996A              ; ******************************************************************************************************************************************************************************************
 264+ 996A              ;	15/02/23
 265+ 996A              ;
 266+ 996A
 267+ 996A 3A 94 87     Desplaza_derecha ld a,(Vel_right)
 268+ 996D 47           	ld b,a
 269+ 996E 2A 8C 87     	ld hl,(Puntero_DESPLZ_der)
 270+ 9971 23           1 inc hl
 271+ 9972 23           	inc hl
 272+ 9973 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 273+ 9975 22 8C 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 274+ 9978 CD AF 8B     	call Extrae_address
 275+ 997B 22 82 87     	ld (Puntero_objeto),hl
 276+ 997E
 277+ 997E              ; Modifica (Puntero_DESPLZ_izq).
 278+ 997E
 279+ 997E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 280+ 997E              ; Cuántos movimientos hemos hecho ??
 281+ 997E              ; DE contiene (Puntero_DESPLZ_der).
 282+ 997E
 283+ 997E 2A 88 87     7 ld hl,(Indice_Sprite_der)
 284+ 9981 EB           	ex de,hl
 285+ 9982 A7           	and a
 286+ 9983 ED 52        	sbc hl,de
 287+ 9985 CB 3D        	srl l
 288+ 9987 3E 08        6 ld a,8
 289+ 9989 95           	sub l
 290+ 998A 30 1E        	jr nc,3F
 291+ 998C
 292+ 998C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 293+ 998C              ; B="0".
 294+ 998C
 295+ 998C 04           4 inc b
 296+ 998D 3C           	inc a
 297+ 998E 20 FC        	jr nz,4B
 298+ 9990 78           	ld a,b
 299+ 9991 08           	ex af,af
 300+ 9992 2A 88 87     	ld hl,(Indice_Sprite_der)
 301+ 9995 23           5 inc hl
 302+ 9996 23           	inc hl
 303+ 9997 10 FC        	djnz 5B
 304+ 9999 22 8C 87     	ld (Puntero_DESPLZ_der),hl
 305+ 999C CD AF 8B     	call Extrae_address
 306+ 999F 22 82 87     	ld (Puntero_objeto),hl
 307+ 99A2
 308+ 99A2              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 309+ 99A2              ; _(Posicion_actual).
 310+ 99A2
 311+ 99A2 21 80 87     	ld hl,Posicion_actual
 312+ 99A5 34           	inc (hl)
 313+ 99A6 08               ex af,af
 314+ 99A7 6F           	ld l,a
 315+ 99A8 18 DD        	jr 6B
 316+ 99AA
 317+ 99AA              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 318+ 99AA
 319+ 99AA 47           3 ld b,a
 320+ 99AB 2A 8A 87     	ld hl,(Indice_Sprite_izq)
 321+ 99AE 23           2 inc hl
 322+ 99AF 23           	inc hl
 323+ 99B0 10 FC        	djnz 2B
 324+ 99B2 22 8E 87     	ld (Puntero_DESPLZ_izq),hl
 325+ 99B5 C9           8 ret
 326+ 99B6
 327+ 99B6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 328+ 99B6              ;
 329+ 99B6              ;	24/7/22
 330+ 99B6              ;
 331+ 99B6              ;	modifica_parametros_1er_DESPLZ_2
 332+ 99B6              ;
 333+ 99B6              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 334+ 99B6              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 99B6              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 336+ 99B6
 337+ 99B6 3A 86 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 338+ 99B9 A7           	and a
 339+ 99BA 20 1F        	jr nz,1F
 340+ 99BC D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 341+ 99BE 32 86 87         ld (CTRL_DESPLZ),a
 342+ 99C1
 343+ 99C1 21 7F 87     	ld hl,Columns
 344+ 99C4 34           	inc (hl)
 345+ 99C5 3A 92 87     	ld a,(Cuad_objeto)
 346+ 99C8 E6 01        	and 1
 347+ 99CA 28 0F        	jr z,1F
 348+ 99CC 2A 80 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 349+ 99CF 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 350+ 99D0 22 80 87     	ld (Posicion_actual),hl
 351+ 99D3 CD C6 9B     	call Genera_coordenadas
 352+ 99D6 CD 3B 9B     	call Inc_CTRL_DESPLZ
 353+ 99D9 18 03        	jr 2F
 354+ 99DB CD 3B 9B     1 call Inc_CTRL_DESPLZ
 355+ 99DE C9           2 ret
 356+ 99DF
 357+ 99DF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 358+ 99DF              ;
 359+ 99DF              ;	24/7/22
 360+ 99DF              ;
 361+ 99DF              ;	Ciclo_completo.
 362+ 99DF              ;
 363+ 99DF              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 364+ 99DF              ;
 365+ 99DF              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 366+ 99DF              ; 	Decrementamos (Columns).
 367+ 99DF              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 368+ 99DF              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 369+ 99DF
 370+ 99DF
 371+ 99DF 3A 86 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 372+ 99E2 FE FF        	cp $ff
 373+ 99E4 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 374+ 99E6 E6 F0        	and $f0
 375+ 99E8 20 28        	jr nz,3F
 376+ 99EA
 377+ 99EA              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 378+ 99EA
 379+ 99EA 3A 86 87     	ld a,(CTRL_DESPLZ)
 380+ 99ED 47           	ld b,a
 381+ 99EE 3E F8        	ld a,$f8
 382+ 99F0 80           	add b
 383+ 99F1 32 86 87     	ld (CTRL_DESPLZ),a
 384+ 99F4 18 1C        	jr 3F
 385+ 99F6 21 7F 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 386+ 99F9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 387+ 99FA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 388+ 99FB 32 86 87     	ld (CTRL_DESPLZ),a
 389+ 99FE 3A 92 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 390+ 9A01 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 391+ 9A03 20 0A        	jr nz,2F
 392+ 9A05 2A 80 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 393+ 9A08 23           	inc hl
 394+ 9A09 22 80 87     	ld (Posicion_actual),hl
 395+ 9A0C CD C6 9B     	call Genera_coordenadas
 396+ 9A0F
 397+ 9A0F              ; Inicia el puntero de Sprite.
 398+ 9A0F
 399+ 9A0F CD C6 8B     2 call Inicia_puntero_objeto_der
 400+ 9A12 C9           3 ret
 401+ 9A13
 402+ 9A13              ; ******************************************************************************************************************************************************************************************
 403+ 9A13              ;
 404+ 9A13              ;	15/02/23
 405+ 9A13              ;
 406+ 9A13              ;	Mov_left.
 407+ 9A13              ;
 408+ 9A13              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 409+ 9A13              ;
 410+ 9A13              Mov_left
 411+ 9A13
 412+ 9A13 21 A4 87     	ld hl,Ctrl_0
 413+ 9A16 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 414+ 9A18              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 415+ 9A18              ; 																	; _ en el caso de que no lo haya.
 416+ 9A18 3A A4 87     	ld a,(Ctrl_0)
 417+ 9A1B CB 77        	bit 6,a
 418+ 9A1D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 419+ 9A1F
 420+ 9A1F CD 35 9B     	call Stop_Amadeus_left
 421+ 9A22 C8           	ret z
 422+ 9A23 20 4A        	jr nz,8F
 423+ 9A25
 424+ 9A25 3A 84 87     11 ld a,(Coordenada_X)
 425+ 9A28 A7           	and a
 426+ 9A29 20 44        	jr nz,8F
 427+ 9A2B
 428+ 9A2B 3A 86 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 429+ 9A2E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 430+ 9A2F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 431+ 9A31
 432+ 9A31              ; ---------- ---------- ----------
 433+ 9A31
 434+ 9A31 3A 93 87     	ld a,(Vel_left)
 435+ 9A34 FE 02        	cp 2
 436+ 9A36 28 0F        	jr z,1F
 437+ 9A38 38 04        	jr c,6F
 438+ 9A3A FE 04        	cp 4
 439+ 9A3C 28 12        	jr z,7F
 440+ 9A3E
 441+ 9A3E              ; ---------- ---------- ----------
 442+ 9A3E
 443+ 9A3E 3A 86 87     6 ld a,(CTRL_DESPLZ)
 444+ 9A41 FE F8        	cp $f8
 445+ 9A43 20 2A        	jr nz,8F
 446+ 9A45 18 10        	jr 4F
 447+ 9A47 3A 86 87     1 ld a,(CTRL_DESPLZ)
 448+ 9A4A FE F9        	cp $f9
 449+ 9A4C 20 21        	jr nz,8F
 450+ 9A4E 18 07        	jr 4F
 451+ 9A50 3A 86 87     7 ld a,(CTRL_DESPLZ)
 452+ 9A53 FE FB        	cp $fb
 453+ 9A55 20 18        	jr nz,8F
 454+ 9A57
 455+ 9A57              ; ---------- ---------- ----------
 456+ 9A57
 457+ 9A57              4
 458+ 9A57 CD 5D 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 459+ 9A5A              ;	call Reinicio
 460+ 9A5A
 461+ 9A5A              ; ---------- ---------- ----------
 462+ 9A5A
 463+ 9A5A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 464+ 9A5C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 465+ 9A5D
 466+ 9A5D              ;	ld hl,(Indice_Sprite_izq)
 467+ 9A5D              ;	ld (Puntero_DESPLZ_izq),hl
 468+ 9A5D
 469+ 9A5D CD 76 9A     	call DESPLZ_IZQ
 470+ 9A60 C1           	pop bc
 471+ 9A61 10 F9        	djnz 5B
 472+ 9A63 2A 80 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 473+ 9A66 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 474+ 9A67 22 80 87     	ld (Posicion_actual),hl
 475+ 9A6A CD C6 9B     	call Genera_coordenadas
 476+ 9A6D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 477+ 9A6F
 478+ 9A6F              ; ---------- ---------- ----------
 479+ 9A6F
 480+ 9A6F              ; Movemos, no hay recolocación.
 481+ 9A6F
 482+ 9A6F 2A 80 87     8 ld hl,(Posicion_actual)
 483+ 9A72 CD 76 9A     	call DESPLZ_IZQ
 484+ 9A75 C9           2 ret
 485+ 9A76
 486+ 9A76              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 487+ 9A76              ;
 488+ 9A76              ;	22/9/22
 489+ 9A76
 490+ 9A76              DESPLZ_IZQ
 491+ 9A76
 492+ 9A76 CD 85 9A     	call Desplaza_izquierda
 493+ 9A79 CD D1 9A         call modifica_parametros_1er_DESPLZ
 494+ 9A7C CD F9 9A     	call Ciclo_completo_2
 495+ 9A7F 21 A4 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 496+ 9A82 CB BE        	res 7,(hl)
 497+ 9A84 C9           	ret
 498+ 9A85
 499+ 9A85              Desplaza_izquierda
 500+ 9A85
 501+ 9A85 3A 93 87     	ld a,(Vel_left)
 502+ 9A88 47           	ld b,a
 503+ 9A89 2A 8E 87     	ld hl,(Puntero_DESPLZ_izq)
 504+ 9A8C 23           1 inc hl
 505+ 9A8D 23           	inc hl
 506+ 9A8E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 507+ 9A90 22 8E 87     	ld (Puntero_DESPLZ_izq),hl
 508+ 9A93 CD AF 8B     	call Extrae_address
 509+ 9A96 22 82 87     	ld (Puntero_objeto),hl
 510+ 9A99
 511+ 9A99              ; Modifica (Puntero_DESPLZ_der).
 512+ 9A99
 513+ 9A99              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 514+ 9A99              ; Cuántos movimientos hemos hecho ??
 515+ 9A99              ; DE contiene (Puntero_DESPLZ_izq).
 516+ 9A99
 517+ 9A99 2A 8A 87     7 ld hl,(Indice_Sprite_izq)
 518+ 9A9C EB           	ex de,hl
 519+ 9A9D A7           	and a
 520+ 9A9E ED 52        	sbc hl,de
 521+ 9AA0 CB 3D        	srl l
 522+ 9AA2 3E 08        6 ld a,8
 523+ 9AA4 95           	sub l
 524+ 9AA5 30 1E        	jr nc,3F
 525+ 9AA7
 526+ 9AA7              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 527+ 9AA7              ; B="0".
 528+ 9AA7
 529+ 9AA7 04           4 inc b
 530+ 9AA8 3C           	inc a
 531+ 9AA9 20 FC        	jr nz,4B
 532+ 9AAB 78           	ld a,b
 533+ 9AAC 08           	ex af,af
 534+ 9AAD 2A 8A 87     	ld hl,(Indice_Sprite_izq)
 535+ 9AB0 23           5 inc hl
 536+ 9AB1 23           	inc hl
 537+ 9AB2 10 FC        	djnz 5B
 538+ 9AB4 22 8E 87     	ld (Puntero_DESPLZ_izq),hl
 539+ 9AB7 CD AF 8B     	call Extrae_address
 540+ 9ABA 22 82 87     	ld (Puntero_objeto),hl
 541+ 9ABD
 542+ 9ABD              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 543+ 9ABD              ; _(Posicion_actual).
 544+ 9ABD
 545+ 9ABD 21 80 87     	ld hl,Posicion_actual
 546+ 9AC0 35           	dec (hl)
 547+ 9AC1 08           	ex af,af
 548+ 9AC2 6F           	ld l,a
 549+ 9AC3 18 DD        	jr 6B
 550+ 9AC5
 551+ 9AC5              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 552+ 9AC5
 553+ 9AC5 47           3 ld b,a
 554+ 9AC6 2A 88 87     	ld hl,(Indice_Sprite_der)
 555+ 9AC9 23           2 inc hl
 556+ 9ACA 23           	inc hl
 557+ 9ACB 10 FC        	djnz 2B
 558+ 9ACD 22 8C 87     	ld (Puntero_DESPLZ_der),hl
 559+ 9AD0 C9           8 ret
 560+ 9AD1
 561+ 9AD1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 562+ 9AD1              ;
 563+ 9AD1              ;	modifica_parametros_1er_DESPLZ
 564+ 9AD1              ;
 565+ 9AD1              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 566+ 9AD1              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 567+ 9AD1              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 568+ 9AD1
 569+ 9AD1 3A 86 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 570+ 9AD4 A7           	and a
 571+ 9AD5 20 1E        	jr nz,1F
 572+ 9AD7 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 573+ 9AD8 32 86 87         ld (CTRL_DESPLZ),a
 574+ 9ADB 21 7F 87     	ld hl,Columns
 575+ 9ADE 34           	inc (hl)
 576+ 9ADF 3A 92 87     	ld a,(Cuad_objeto)
 577+ 9AE2 E6 01        	and 1
 578+ 9AE4 20 0F        	jr nz,1F
 579+ 9AE6 2A 80 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 580+ 9AE9 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 581+ 9AEA 22 80 87     	ld (Posicion_actual),hl
 582+ 9AED CD C6 9B     	call Genera_coordenadas
 583+ 9AF0 CD 4C 9B     	call Dec_CTRL_DESPLZ
 584+ 9AF3 18 03        	jr 2F
 585+ 9AF5 CD 4C 9B     1 call Dec_CTRL_DESPLZ
 586+ 9AF8 C9           2 ret
 587+ 9AF9
 588+ 9AF9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 589+ 9AF9
 590+ 9AF9 3A 86 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 591+ 9AFC FE F7        	cp $f7
 592+ 9AFE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 593+ 9B00 30 2C        	jr nc,3F
 594+ 9B02
 595+ 9B02              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 596+ 9B02
 597+ 9B02 06 00        	ld b,0
 598+ 9B04 04           4 inc b
 599+ 9B05 3C           	inc a
 600+ 9B06 FE F7        	cp $f7
 601+ 9B08 20 FA        	jr nz,4B
 602+ 9B0A 3E FF        	ld a,$ff
 603+ 9B0C 90           	sub b
 604+ 9B0D 32 86 87     	ld (CTRL_DESPLZ),a
 605+ 9B10 18 1C        	jr 3F
 606+ 9B12
 607+ 9B12              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 608+ 9B12
 609+ 9B12 21 7F 87     1 ld hl,Columns
 610+ 9B15 35           	dec (hl)
 611+ 9B16 AF           	xor a
 612+ 9B17 32 86 87     	ld (CTRL_DESPLZ),a
 613+ 9B1A 3A 92 87     	ld a,(Cuad_objeto)
 614+ 9B1D E6 01        	and 1
 615+ 9B1F 28 0A        	jr z,2F
 616+ 9B21 2A 80 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 617+ 9B24 2B           	dec hl
 618+ 9B25 22 80 87     	ld (Posicion_actual),hl
 619+ 9B28 CD C6 9B     	call Genera_coordenadas
 620+ 9B2B
 621+ 9B2B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 622+ 9B2B
 623+ 9B2B CD D9 8B     2 call Inicia_puntero_objeto_izq
 624+ 9B2E C9           3 ret
 625+ 9B2F
 626+ 9B2F              ; ---------- ---------- ---------- ---------- ---------- ----------
 627+ 9B2F              ;
 628+ 9B2F              ;	19/10/22
 629+ 9B2F              ;
 630+ 9B2F              ;	(cp 29) para un Amadeus de 3 Columns.
 631+ 9B2F              ;	(cp 30)   ""  ""    ""     2 Columns.
 632+ 9B2F
 633+ 9B2F 3A 84 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 634+ 9B32 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 635+ 9B34 C9           	ret
 636+ 9B35
 637+ 9B35              ; ---------- ---------- ---------- ---------- ---------- ----------
 638+ 9B35              ;
 639+ 9B35              ;	19/10/22
 640+ 9B35              ;
 641+ 9B35              ;	(cp 2) para un Amadeus de 3 Columns.
 642+ 9B35              ;	(cp 1)   ""  ""    ""     2 Columns.
 643+ 9B35
 644+ 9B35 3A 84 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 645+ 9B38 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 646+ 9B3A C9           	ret
 647+ 9B3B
 648+ 9B3B              ; ---------- ---------- ---------- ---------- ---------- ----------
 649+ 9B3B              ;
 650+ 9B3B              ;	24/7/22
 651+ 9B3B              ;
 652+ 9B3B              ;	Inc_CTRL_DESPLZ
 653+ 9B3B              ;
 654+ 9B3B              ;
 655+ 9B3B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 656+ 9B3B
 657+ 9B3B 21 86 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 658+ 9B3E 3A 94 87     	ld a,(Vel_right)
 659+ 9B41 A7           	and a
 660+ 9B42 28 06        	jr z,1F
 661+ 9B44 47           	ld b,a
 662+ 9B45 34           3 inc (hl)
 663+ 9B46 10 FD        	djnz 3B
 664+ 9B48 18 01        	jr 2F
 665+ 9B4A 34           1 inc (hl)
 666+ 9B4B C9           2 ret
 667+ 9B4C
 668+ 9B4C              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 9B4C              ;
 670+ 9B4C              ;	5/2/23
 671+ 9B4C              ;
 672+ 9B4C              ;	Dec_CTRL_DESPLZ
 673+ 9B4C              ;
 674+ 9B4C              ;
 675+ 9B4C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 676+ 9B4C
 677+ 9B4C 21 86 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 678+ 9B4F 3A 93 87     	ld a,(Vel_left)
 679+ 9B52 A7           	and a
 680+ 9B53 28 06        	jr z,1F
 681+ 9B55 47           	ld b,a
 682+ 9B56 35           3 dec (hl)
 683+ 9B57 10 FD        	djnz 3B
 684+ 9B59 18 01        	jr 2F
 685+ 9B5B 35           1 dec (hl)
 686+ 9B5C C9           2 ret
 687+ 9B5D
 688+ 9B5D              ; ---------- ---------- ---------- ---------- ---------- ----------
 689+ 9B5D
 690+ 9B5D 2A 80 87     Reaparece_derecha ld hl,(Posicion_actual)
 691+ 9B60 01 1F 00     	ld bc,31
 692+ 9B63 A7           	and a
 693+ 9B64 ED 4A        	adc hl,bc
 694+ 9B66 22 80 87     	ld (Posicion_actual),hl
 695+ 9B69 21 A4 87     	ld hl,Ctrl_0														; $xxx1
 696+ 9B6C CB C6        	set 0,(hl)
 697+ 9B6E C9           	ret
 698+ 9B6F
 699+ 9B6F              ; ---------- ---------- ---------- ---------- ---------- ----------
 700+ 9B6F
 701+ 9B6F 2A 80 87     Reaparece_izquierda ld hl,(Posicion_actual)
 702+ 9B72 01 1F 00     	ld bc,31
 703+ 9B75 A7           	and a
 704+ 9B76 ED 42        	sbc hl,bc
 705+ 9B78 22 80 87     	ld (Posicion_actual),hl 											; $xx1x
 706+ 9B7B 21 A4 87     	ld hl,Ctrl_0
 707+ 9B7E CB CE        	set 1,(hl)
 708+ 9B80 C9           	ret
 709+ 9B81
 710+ 9B81              ; ---------- ---------- ---------- ---------- ---------- ----------
 711+ 9B81
 712+ 9B81 24           Reaparece_abajo inc h
 713+ 9B82 01 E0 17     	ld bc,$17e0
 714+ 9B85 A7           	and a
 715+ 9B86 ED 4A        	adc hl,bc
 716+ 9B88 22 80 87     	ld (Posicion_actual),hl
 717+ 9B8B 21 A4 87     	ld hl,Ctrl_0
 718+ 9B8E CB D6        	set 2,(hl)
 719+ 9B90 C9           	ret
 720+ 9B91
 721+ 9B91              ; ---------- ---------- ---------- ---------- ---------- ----------
 722+ 9B91
 723+ 9B91 01 E0 17     Reaparece_arriba ld bc,$17e0
 724+ 9B94 A7           	and a
 725+ 9B95 ED 42        	sbc hl,bc
 726+ 9B97 22 80 87     	ld (Posicion_actual),hl
 727+ 9B9A 21 A4 87     	ld hl,Ctrl_0
 728+ 9B9D CB DE        	set 3,(hl)
 729+ 9B9F C9           	ret
 730+ 9BA0
 731+ 9BA0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 732+ 9BA0              ;
 733+ 9BA0              ;	15/07/23
 734+ 9BA0
 735+ 9BA0              Reinicio
 736+ 9BA0
 737+ 9BA0              ; Vamos a reiniciar los punteros y variables de movimiento.
 738+ 9BA0
 739+ 9BA0 AF           	xor a
 740+ 9BA1 21 B7 87     	ld hl,Puntero_indice_mov_bucle
 741+ 9BA4 CD C2 9B     	call Limpia_contenido_hl
 742+ 9BA7
 743+ 9BA7 21 80 87     	ld hl,Posicion_actual
 744+ 9BAA CD C2 9B     	call Limpia_contenido_hl
 745+ 9BAD
 746+ 9BAD CD 25 9F     	call Inicializa_Puntero_indice_mov
 747+ 9BB0 CD 82 9E     	call Inicia_Puntero_mov
 748+ 9BB3
 749+ 9BB3 21 B9 87     	ld hl,Incrementa_puntero
 750+ 9BB6 06 05        	ld b,5
 751+ 9BB8 77           1 ld (hl),a
 752+ 9BB9 23           	inc hl
 753+ 9BBA 10 FC        	djnz 1B
 754+ 9BBC
 755+ 9BBC 21 A9 87     	ld hl,Ctrl_2
 756+ 9BBF CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 757+ 9BC1
 758+ 9BC1 C9           	ret
 759+ 9BC2
 760+ 9BC2 77           Limpia_contenido_hl	ld (hl),a
 761+ 9BC3 23           	inc hl
 762+ 9BC4 77           	ld (hl),a
 763+ 9BC5 C9           	ret
 764+ 9BC6
 765+ 9BC6
# file closed: Direcciones.asm
1930  9BC6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9BC6              ; ------------------------------------------------------------------------
   2+ 9BC6              ;
   3+ 9BC6              ;	02/04/23
   4+ 9BC6              ;
   5+ 9BC6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9BC6              ;	Fila superior "0", Columna izquierda "0".
   7+ 9BC6              ;
   8+ 9BC6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9BC6              ;
  10+ 9BC6              ;	Modifica: A,BC y DE.
  11+ 9BC6
  12+ 9BC6 C5           Genera_coordenadas push bc
  13+ 9BC7 E5           	push hl
  14+ 9BC8 D5           	push de
  15+ 9BC9
  16+ 9BC9 2A 80 87     	ld hl,(Posicion_actual)
  17+ 9BCC
  18+ 9BCC 7D           	ld a,l
  19+ 9BCD E6 1F        	and $1f
  20+ 9BCF 32 84 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9BD2
  22+ 9BD2 CD 2E 98     	call calcula_tercio
  23+ 9BD5 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9BD6
  25+ 9BD6 1E 00        	ld e,0
  26+ 9BD8 7D           	ld a,l
  27+ 9BD9 E6 E0        	and $e0
  28+ 9BDB 28 01        	jr z,1F
  29+ 9BDD 04           	inc b
  30+ 9BDE
  31+ 9BDE 04           1 inc b
  32+ 9BDF 05           	dec b
  33+ 9BE0 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9BE2              ;														; _ , salimos.
  35+ 9BE2 1C           3 inc e
  36+ 9BE3 D6 20        	sub 32
  37+ 9BE5 20 FB        	jr nz,3B
  38+ 9BE7 10 F5        	djnz 1B
  39+ 9BE9
  40+ 9BE9 7B           2 ld a,e
  41+ 9BEA 32 85 87     	ld (Coordenada_y),a
  42+ 9BED
  43+ 9BED D1           	pop de
  44+ 9BEE E1           	pop hl
  45+ 9BEF C1           	pop bc
  46+ 9BF0
  47+ 9BF0 C9           	ret
  48+ 9BF1
  49+ 9BF1              ; ------------------------------------------------------------------------
  50+ 9BF1              ;	28/05/23
  51+ 9BF1              ;
  52+ 9BF1              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9BF1              ;	Fila superior "0", Columna izquierda "0".
  54+ 9BF1              ;
  55+ 9BF1              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9BF1              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9BF1              ;
  58+ 9BF1              ;		DE="$120d"
  59+ 9BF1              ;
  60+ 9BF1              ;		D, (Coordenada_X), Columnas, $12
  61+ 9BF1              ;		E, (Coordenada_y), Filas, $0d
  62+ 9BF1              ;
  63+ 9BF1              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9BF1
  65+ 9BF1              ;	Modifica: A,BC y DE.
  66+ 9BF1
  67+ 9BF1
  68+ 9BF1              Genera_coordenadas_disparo
  69+ 9BF1
  70+ 9BF1              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9BF1
  72+ 9BF1 7D           	ld a,l
  73+ 9BF2 E6 1F        	and $1f
  74+ 9BF4 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9BF5 CD 2E 98     	call calcula_tercio
  76+ 9BF8 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9BF9 1E 00        	ld e,0
  78+ 9BFB 7D           	ld a,l
  79+ 9BFC E6 E0        	and $e0
  80+ 9BFE 28 01        	jr z,1F
  81+ 9C00 04           	inc b
  82+ 9C01 1C           1 inc e
  83+ 9C02 D6 20        	sub 32
  84+ 9C04 20 FB        	jr nz,1B
  85+ 9C06 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C08 C9           	ret
  87+ 9C09
# file closed: Genera_coordenadas.asm
1931  9C09              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C09              ; Relojes y temporizaciones.
   2+ 9C09
   3+ 9C09              ; ------------------------------------------------------
   4+ 9C09              ;
   5+ 9C09              ;	16/7/23
   6+ 9C09              ;
   7+ 9C09              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C09              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C09              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C09              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C09              ;
  12+ 9C09              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C09              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C09
  15+ 9C09              ; Disparo_entidad db 1
  16+ 9C09              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C09              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C09
  19+ 9C09              Habilita_disparos
  20+ 9C09
  21+ 9C09 7E           	ld a,(hl)
  22+ 9C0A A7           	and a
  23+ 9C0B C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C0C
  25+ 9C0C EB           	ex de,hl
  26+ 9C0D
  27+ 9C0D 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C0E C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C0F
  30+ 9C0F              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C0F
  32+ 9C0F 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C10 7E           	ld a,(hl)
  34+ 9C11 23           	inc hl
  35+ 9C12 77           	ld (hl),a
  36+ 9C13
  37+ 9C13 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C14 3E 01        	ld a,1
  39+ 9C16 77           	ld (hl),a
  40+ 9C17 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1932  9C18              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C18
   2+ 9C18
   3+ 9C18              ;   07/07/23
   4+ 9C18              ;
   5+ 9C18              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C18              ;
   7+ 9C18              ;   Codificación:
   8+ 9C18              ;
   9+ 9C18              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C18              ;
  11+ 9C18              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C18              ;
  13+ 9C18              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C18              ;
  15+ 9C18              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C18              ;
  17+ 9C18              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C18              ;                               ..... %01000010 Vel_up 4
  19+ 9C18              ;                                               Vel_down 2
  20+ 9C18              ;                               ..... $42
  21+ 9C18              ;
  22+ 9C18              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C18              ;
  24+ 9C18              ;                               ..... %01000010 Vel_left 4
  25+ 9C18              ;                                               Vel_right 2
  26+ 9C18              ;                               ..... $42
  27+ 9C18              ;
  28+ 9C18              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C18              ;
  30+ 9C18              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C18              ;
  32+ 9C18              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C18              ;
  34+ 9C18              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C18              ;                                     $53
  36+ 9C18              ;
  37+ 9C18              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C18              ;
  39+ 9C18              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C18              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C18              ;
  42+ 9C18              ;                       Arriba ..... $81
  43+ 9C18              ;                       Arriba - izquierda ..... $a1
  44+ 9C18              ;                       Arriba - derecha ..... $91
  45+ 9C18              ;
  46+ 9C18              ;                       Abajo ..... $41
  47+ 9C18              ;                       Abajo - izquierda ..... $61
  48+ 9C18              ;                       Abajo - derecha ..... $51
  49+ 9C18              ;
  50+ 9C18              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C18              ;
  52+ 9C18              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C18              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C18              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C18              ;
  56+ 9C18              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C18              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C18              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C18              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C18              ;
  61+ 9C18              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C18              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C18              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C18              ;
  65+ 9C18              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C18              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C18              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C18              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C18
  70+ 9C18              ; ----- ----- ----- ----- -----
  71+ 9C18
  72+ 9C18 44 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C1A 4C 9C            defw F_1
  74+ 9C1C 56 9C            defw F_2
  75+ 9C1E 60 9C            defw Codo_abajo_derecha
  76+ 9C20 94 9C            defw Derecha_y_subiendo
  77+ 9C22 9E 9C            defw Derecha_y_subiendo_1
  78+ 9C24 A8 9C            defw F_3
  79+ 9C26 B2 9C            defw F_4
  80+ 9C28 BC 9C            defw Derecha_y_bajando
  81+ 9C2A C6 9C            defw Derecha_y_bajando_1
  82+ 9C2C D0 9C            defw Derecha_y_bajando_2
  83+ 9C2E DA 9C            defw Codo_derecha_abajo
  84+ 9C30 0A 9D            defw Codo_abajo_izq.
  85+ 9C32 3E 9D            defw Izquierda_y_subiendo
  86+ 9C34 48 9D            defw Izquierda_y_subiendo_1
  87+ 9C36 52 9D            defw F_5
  88+ 9C38 5C 9D            defw F_6
  89+ 9C3A 66 9D            defw Izquierda_y_bajando
  90+ 9C3C 70 9D            defw Izquierda_y_bajando_1
  91+ 9C3E 7A 9D            defw Izquierda_y_bajando_2
  92+ 9C40 84 9D            defw Codo_izquierda_abajo
  93+ 9C42 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C44
  95+ 9C44 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C48 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C4C
  98+ 9C4C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C50 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C54 08 00
 100+ 9C56 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C5A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C5E 0F FE
 102+ 9C60
 103+ 9C60 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C64 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C68 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C6C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C70 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C74 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C78 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C7C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C80 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C84 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C88 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C8C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C90 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C94
 117+ 9C94 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C98 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C9C 06 00
 119+ 9C9E
 120+ 9C9E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9CA2 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9CA6 02 00
 122+ 9CA8
 123+ 9CA8 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9CAC 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9CB0 04 00
 125+ 9CB2 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9CB6 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9CBA 08 00
 127+ 9CBC
 128+ 9CBC 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9CC0 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9CC4 02 00
 130+ 9CC6
 131+ 9CC6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9CCA 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9CCE 06 00
 133+ 9CD0
 134+ 9CD0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9CD4 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CD8 06 00
 136+ 9CDA
 137+ 9CDA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CDA
 139+ 9CDA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9CDE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9CE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9CE6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9CEA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9CEE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9CF2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9CFA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CFE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D02 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D06 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D0A
 152+ 9D0A 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D0E 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D12 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D16 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D1A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D1E 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D22 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D26 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D2A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D2E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D32 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D36 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D3A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D3E
 166+ 9D3E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D42 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D46 06 00
 168+ 9D48
 169+ 9D48 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D4C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D50 02 00
 171+ 9D52
 172+ 9D52 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D56 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D5A 04 00
 174+ 9D5C 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D60 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D64 08 00
 176+ 9D66
 177+ 9D66 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D6A 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D6E 02 00
 179+ 9D70
 180+ 9D70 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D74 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D78 06 00
 182+ 9D7A
 183+ 9D7A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D7E 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D82 06 00
 185+ 9D84
 186+ 9D84 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D88 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D90 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D94 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D98 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D9C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9DA0 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9DA4 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9DA8 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9DAC 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9DB0 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9DB4
 199+ 9DB4              ; ----- ----- ----- ----- -----
 200+ 9DB4              ;
 201+ 9DB4              ;   28/12/23
 202+ 9DB4
 203+ 9DB4              Movimiento
 204+ 9DB4
 205+ 9DB4              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9DB4
 207+ 9DB4 3A A9 87         ld a,(Ctrl_2)
 208+ 9DB7 CB 57            bit 2,a
 209+ 9DB9 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9DBB
 211+ 9DBB 2A B5 87         ld hl,(Puntero_mov)
 212+ 9DBE 7E               ld a,(hl)
 213+ 9DBF
 214+ 9DBF              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9DBF
 216+ 9DBF              Inicia_desplazamiento.
 217+ 9DBF
 218+ 9DBF              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9DBF
 220+ 9DBF CD BF 9E         call Ajusta_velocidad_desplazamiento
 221+ 9DC2
 222+ 9DC2              ; Iniciamos (Repetimos_mov).
 223+ 9DC2
 224+ 9DC2 7E               ld a,(hl)
 225+ 9DC3 E6 0F            and $0f
 226+ 9DC5 32 BB 87         ld (Repetimos_desplazamiento),a
 227+ 9DC8 32 BC 87         ld (Repetimos_desplazamiento_backup),a
 228+ 9DCB
 229+ 9DCB              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9DCB
 231+ 9DCB 23               inc hl
 232+ 9DCC 7E               ld a,(hl)
 233+ 9DCD 32 BE 87         ld (Cola_de_desplazamiento),a
 234+ 9DD0 2B               dec hl
 235+ 9DD1
 236+ 9DD1 21 A9 87         ld hl,Ctrl_2
 237+ 9DD4 CB D6            set 2,(hl)
 238+ 9DD6
 239+ 9DD6              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9DD6              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9DD6
 242+ 9DD6              Desplazamiento_iniciado
 243+ 9DD6
 244+ 9DD6 CD 8D 9E         call Aplica_desplazamiento
 245+ 9DD9
 246+ 9DD9              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9DD9
 248+ 9DD9 3A DE 87         ld a,(Ctrl_3)
 249+ 9DDC CB 57            bit 2,a
 250+ 9DDE C0               ret nz
 251+ 9DDF
 252+ 9DDF 3A A9 87         ld a,(Ctrl_2)
 253+ 9DE2 CB 67            bit 4,a
 254+ 9DE4 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9DE5
 256+ 9DE5 21 BB 87     3 ld hl,Repetimos_desplazamiento
 257+ 9DE8 35               dec (hl)
 258+ 9DE9 C0               ret nz
 259+ 9DEA
 260+ 9DEA              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9DEA              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9DEA              ; Analiza (Cola_de_desplazamiento).
 263+ 9DEA
 264+ 9DEA 3A BE 87     Cola ld a,(Cola_de_desplazamiento)
 265+ 9DED A7               and a
 266+ 9DEE CC E8 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9DF1 28 30            jr z,Reinicia_el_movimiento
 268+ 9DF3
 269+ 9DF3 FE FF            cp $ff
 270+ 9DF5 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9DF7
 272+ 9DF7 FE FE            cp $fe
 273+ 9DF9 CC 66 9E         call z,Fijamos_bucle
 274+ 9DFC 28 25            jr z,Reinicia_el_movimiento
 275+ 9DFE
 276+ 9DFE FE FD            cp $fd
 277+ 9E00 20 11            jr nz,1F
 278+ 9E02
 279+ 9E02              ; ---
 280+ 9E02              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9E02
 282+ 9E02 3A A9 87         ld a,(Ctrl_2)
 283+ 9E05 CB 5F            bit 3,a
 284+ 9E07 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9E09
 286+ 9E09              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9E09
 288+ 9E09 21 A9 87         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9E0C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9E0E
 291+ 9E0E CD 77 9E         call Inicia_Repetimos_movimiento
 292+ 9E11 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9E13              ; ---
 294+ 9E13
 295+ 9E13 FE 01        1 cp 1
 296+ 9E15 CA 50 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9E18
 298+ 9E18 3D               dec a
 299+ 9E19 32 BE 87         ld (Cola_de_desplazamiento),a
 300+ 9E1C
 301+ 9E1C 3A BC 87         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9E1F 32 BB 87         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9E22              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9E22 C9               ret
 305+ 9E23
 306+ 9E23              Reinicia_el_movimiento
 307+ 9E23
 308+ 9E23 3A A9 87         ld a,(Ctrl_2)
 309+ 9E26 CB 5F            bit 3,a
 310+ 9E28 28 1B            jr z,2F
 311+ 9E2A
 312+ 9E2A              ; (Cola_de_desplazamiento)="254".
 313+ 9E2A
 314+ 9E2A 21 BD 87         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9E2D 35               dec (hl)
 316+ 9E2E 20 15            jr nz,2F
 317+ 9E30
 318+ 9E30              ; Fin de las repeticiones del último movimiento.
 319+ 9E30
 320+ 9E30 21 A9 87         ld hl,Ctrl_2
 321+ 9E33 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9E35
 323+ 9E35 2A B5 87         ld hl,(Puntero_mov)
 324+ 9E38 23               inc hl
 325+ 9E39 23               inc hl
 326+ 9E3A 23               inc hl
 327+ 9E3B 22 B5 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9E3E              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9E3E 7E               ld a,(hl)
 330+ 9E3F 32 BE 87         ld (Cola_de_desplazamiento),a
 331+ 9E42
 332+ 9E42 C3 EA 9D         jp Cola
 333+ 9E45
 334+ 9E45 CD 82 9E     2 call Inicia_Puntero_mov
 335+ 9E48
 336+ 9E48 21 A9 87         ld hl,Ctrl_2
 337+ 9E4B CB 96            res 2,(hl)
 338+ 9E4D
 339+ 9E4D C3 B4 9D         jp Movimiento
 340+ 9E50
 341+ 9E50              Siguiente_desplazamiento
 342+ 9E50
 343+ 9E50              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9E50              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9E50
 346+ 9E50 21 A9 87         ld hl,Ctrl_2
 347+ 9E53 CB 96            res 2,(hl)
 348+ 9E55
 349+ 9E55 2A B5 87         ld hl,(Puntero_mov)
 350+ 9E58 23               inc hl
 351+ 9E59 23               inc hl
 352+ 9E5A 22 B5 87         ld (Puntero_mov),hl
 353+ 9E5D
 354+ 9E5D 7E               ld a,(hl)
 355+ 9E5E A7               and a
 356+ 9E5F CC E8 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E62 CA 23 9E         jp z,Reinicia_el_movimiento
 358+ 9E65
 359+ 9E65 C9               ret
 360+ 9E66
 361+ 9E66              ; Subrutinas -----------------------------------------
 362+ 9E66              ; ---------- --------- --------- ---------- ----------
 363+ 9E66              ;
 364+ 9E66              ;   24/07/23
 365+ 9E66              ;
 366+ 9E66              ;   Fijamos_bucle
 367+ 9E66              ;
 368+ 9E66              ;
 369+ 9E66
 370+ 9E66              Fijamos_bucle
 371+ 9E66
 372+ 9E66 3A B9 87         ld a,(Incrementa_puntero)
 373+ 9E69 3C               inc a
 374+ 9E6A 32 BA 87         ld (Incrementa_puntero_backup),a
 375+ 9E6D
 376+ 9E6D CD E8 9E         call Incrementa_Puntero_indice_mov
 377+ 9E70 2A B3 87         ld hl,(Puntero_indice_mov)
 378+ 9E73 22 B7 87         ld (Puntero_indice_mov_bucle),hl
 379+ 9E76 C9               ret
 380+ 9E77
 381+ 9E77              ; ---------- --------- --------- ---------- ----------
 382+ 9E77              ;
 383+ 9E77              ;   07/7/23
 384+ 9E77              ;
 385+ 9E77              ;   Inicia_Repetimos_movimiento
 386+ 9E77              ;
 387+ 9E77              ;
 388+ 9E77
 389+ 9E77              Inicia_Repetimos_movimiento
 390+ 9E77
 391+ 9E77              ; Iniciamos (Repetimos_movimiento).
 392+ 9E77
 393+ 9E77 DD 2A B5 87      ld ix,(Puntero_mov)
 394+ 9E7B DD 7E 02         ld a,(ix+2)
 395+ 9E7E 32 BD 87         ld (Repetimos_movimiento),a
 396+ 9E81
 397+ 9E81 C9               ret
 398+ 9E82
 399+ 9E82              ; ---------- --------- --------- ---------- ----------
 400+ 9E82              ;
 401+ 9E82              ;   26/6/23
 402+ 9E82              ;
 403+ 9E82              ;   Inicia_Puntero_mov
 404+ 9E82              ;
 405+ 9E82              ;
 406+ 9E82
 407+ 9E82 2A B3 87     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E85 5E               ld e,(hl)
 409+ 9E86 23               inc hl
 410+ 9E87 56               ld d,(hl)
 411+ 9E88 EB               ex de,hl
 412+ 9E89 22 B5 87         ld (Puntero_mov),hl
 413+ 9E8C C9               ret
 414+ 9E8D
 415+ 9E8D              ; ---------- --------- --------- ---------- ----------
 416+ 9E8D              ;
 417+ 9E8D              ;   27/06/23
 418+ 9E8D              ;
 419+ 9E8D              ;   Aplica_movimiento.
 420+ 9E8D
 421+ 9E8D              Aplica_desplazamiento
 422+ 9E8D
 423+ 9E8D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E8D
 425+ 9E8D 2A B5 87         ld hl, (Puntero_mov)
 426+ 9E90
 427+ 9E90 7E               ld a,(hl)
 428+ 9E91 E6 F0            and $f0
 429+ 9E93 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E94
 431+ 9E94 CB 7E            bit 7,(hl)
 432+ 9E96 28 03            jr z,1F
 433+ 9E98 CD AD 98         call Mov_up
 434+ 9E9B 2A B5 87     1 ld hl, (Puntero_mov)
 435+ 9E9E CB 76            bit 6,(hl)
 436+ 9EA0 28 09            jr z,2F
 437+ 9EA2 CD 74 98         call Mov_down
 438+ 9EA5
 439+ 9EA5              ; Se ha aplicado reinicio ???
 440+ 9EA5              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9EA5
 442+ 9EA5 3A DE 87         ld a,(Ctrl_3)
 443+ 9EA8 CB 57            bit 2,a
 444+ 9EAA C0               ret nz
 445+ 9EAB
 446+ 9EAB 2A B5 87     2 ld hl, (Puntero_mov)
 447+ 9EAE CB 6E            bit 5,(hl)
 448+ 9EB0 28 03            jr z,3F
 449+ 9EB2 CD 13 9A         call Mov_left
 450+ 9EB5 2A B5 87     3 ld hl, (Puntero_mov)
 451+ 9EB8 CB 66            bit 4,(hl)
 452+ 9EBA C8               ret z
 453+ 9EBB CD F0 98         call Mov_right
 454+ 9EBE C9               ret
 455+ 9EBF
 456+ 9EBF              ; ---------- --------- --------- ---------- ----------
 457+ 9EBF              ;
 458+ 9EBF              ;   26/06/23
 459+ 9EBF              ;
 460+ 9EBF              ;   Ajusta_velocidad_desplazamiento.
 461+ 9EBF
 462+ 9EBF              Ajusta_velocidad_desplazamiento
 463+ 9EBF
 464+ 9EBF              ; 1er byte de la cadena de movimiento.
 465+ 9EBF              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9EBF
 467+ 9EBF CD DD 9E         call Extrae_nibble_alto
 468+ 9EC2
 469+ 9EC2 32 95 87         ld (Vel_up),a
 470+ 9EC5 79               ld a,c
 471+ 9EC6 E6 0F            and $0f
 472+ 9EC8 32 96 87         ld (Vel_down),a
 473+ 9ECB
 474+ 9ECB              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9ECB              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9ECB
 477+ 9ECB 23               inc hl
 478+ 9ECC CD DD 9E         call Extrae_nibble_alto
 479+ 9ECF
 480+ 9ECF 32 93 87         ld (Vel_left),a
 481+ 9ED2 79               ld a,c
 482+ 9ED3 E6 0F            and $0f
 483+ 9ED5 32 94 87         ld (Vel_right),a
 484+ 9ED8
 485+ 9ED8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9ED8
 487+ 9ED8 23               inc hl
 488+ 9ED9 22 B5 87         ld (Puntero_mov),hl
 489+ 9EDC C9               ret
 490+ 9EDD
 491+ 9EDD 06 04        Extrae_nibble_alto ld b,4
 492+ 9EDF 7E               ld a,(hl)
 493+ 9EE0 4F               ld c,a
 494+ 9EE1 E6 F0            and $f0
 495+ 9EE3 CB 3F        1 srl a
 496+ 9EE5 10 FC            djnz 1B
 497+ 9EE7 C9               ret
 498+ 9EE8
 499+ 9EE8              ; ---------- --------- --------- ---------- ----------
 500+ 9EE8              ;
 501+ 9EE8              ;   5/7/23
 502+ 9EE8              ;
 503+ 9EE8              ;   Incrementa_Puntero_indice_mov
 504+ 9EE8
 505+ 9EE8              Incrementa_Puntero_indice_mov
 506+ 9EE8
 507+ 9EE8 21 B9 87         ld hl,Incrementa_puntero
 508+ 9EEB 34               inc (hl)
 509+ 9EEC
 510+ 9EEC 2A B3 87         ld hl,(Puntero_indice_mov)
 511+ 9EEF 01 02 00         ld bc,2
 512+ 9EF2 A7               and a
 513+ 9EF3 09               add hl,bc
 514+ 9EF4 22 B3 87         ld (Puntero_indice_mov),hl
 515+ 9EF7
 516+ 9EF7 7E               ld a,(hl)
 517+ 9EF8 A7               and a
 518+ 9EF9
 519+ 9EF9              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9EF9
 521+ 9EF9              ;    jr z,$
 522+ 9EF9
 523+ 9EF9              ;! Reinicia el Patrón de movimiento.
 524+ 9EF9
 525+ 9EF9 CC FE 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9EFC
 527+ 9EFC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9EFD
 529+ 9EFD C9               ret
 530+ 9EFE
 531+ 9EFE
 532+ 9EFE              ; ---------- --------- --------- ---------- ----------
 533+ 9EFE              ;
 534+ 9EFE              ;   15/01/24
 535+ 9EFE              ;
 536+ 9EFE              ;   Inicializa_Puntero_indice_mov
 537+ 9EFE
 538+ 9EFE              Inicializa_Puntero_indice_mov_2
 539+ 9EFE
 540+ 9EFE              ; Existe etiqueta de bucle principal???
 541+ 9EFE
 542+ 9EFE 2A B7 87         ld hl,(Puntero_indice_mov_bucle)
 543+ 9F01 24               inc h
 544+ 9F02 25               dec h
 545+ 9F03 28 05            jr z,2F
 546+ 9F05
 547+ 9F05 22 B3 87         ld (Puntero_indice_mov),hl
 548+ 9F08 18 14            jr 3F
 549+ 9F0A
 550+ 9F0A              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ 9F0A
 552+ 9F0A 3A B9 87     2 ld a,(Incrementa_puntero)
 553+ 9F0D 47               ld b,a
 554+ 9F0E
 555+ 9F0E 2A B3 87         ld hl,(Puntero_indice_mov)
 556+ 9F11 2B           1 dec hl
 557+ 9F12 2B               dec hl
 558+ 9F13 10 FC            djnz 1B
 559+ 9F15 22 B3 87         ld (Puntero_indice_mov),hl
 560+ 9F18
 561+ 9F18 AF               xor a
 562+ 9F19 32 B9 87         ld (Incrementa_puntero),a
 563+ 9F1C 18 06            jr 4F
 564+ 9F1E
 565+ 9F1E 3A BA 87     3 ld a,(Incrementa_puntero_backup)
 566+ 9F21 32 B9 87         ld (Incrementa_puntero),a
 567+ 9F24 C9           4 ret
 568+ 9F25
 569+ 9F25 3A 7D 87     Inicializa_Puntero_indice_mov ld a,(Tipo)
 570+ 9F28 CD 0C 87         call Calcula_salto_en_BC
 571+ 9F2B 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
 572+ 9F2E A7               and a
 573+ 9F2F ED 4A            adc hl,bc
 574+ 9F31 CD AF 8B         call Extrae_address
 575+ 9F34 22 B3 87         ld (Puntero_indice_mov),hl
 576+ 9F37 C9               ret
 577+ 9F38
 578+ 9F38 3A 7D 87     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 579+ 9F3B CD 0C 87         call Calcula_salto_en_BC
 580+ 9F3E 21 AB 87         ld hl,Contador_general_de_mov_masticados_Entidad_1
 581+ 9F41 A7               and a
 582+ 9F42 ED 4A            adc hl,bc
 583+ 9F44 C9               ret
# file closed: Patrones_de_mov.asm
1933  9F45              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F45              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F45              ;
   3+ 9F45              ;	12/12/23
   4+ 9F45              ;
   5+ 9F45              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F45
   7+ 9F45              ;	ADC HL,SP	LD (addr),SP
   8+ 9F45              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F45              ;	ADD IX,SP	LD SP,nn
  10+ 9F45              ; 	ADD IY,SP	LD SP,HL
  11+ 9F45              ;				LD SP,IX
  12+ 9F45              ;	DEC SP		LD SP,IY
  13+ 9F45
  14+ 9F45              ;	EX (SP),HL
  15+ 9F45              ;	EX (SP),IX
  16+ 9F45              ;	EX (SP),IY
  17+ 9F45
  18+ 9F45              ;	INC SP
  19+ 9F45
  20+ 9F45                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 D0 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 9E 87         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 A0 87         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A BF 87         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A D8 87         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A A4 87     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A DC 87         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A D6 87     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A BF 87         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 D8 87         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A A4 87     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 DC 87         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B D0 87      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 D6 87     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B D0 87  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A D6 87         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 D6 87         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1934  718B
1935  718B              	SAVESNA "Pruebas.sna", START
1936  718B
1937  718B
1938  718B
1939  718B
# file closed: Banco_de_pruebas.asm
