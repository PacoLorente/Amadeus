# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 F5           	push af
  15  A102 E5           	push hl
  16  A103
  17  A103 CD 71 8E     	call Frame
  18  A106
  19  A106 E1           	pop hl
  20  A107 F1           	pop af
  21  A108
  22  A108 ED 4D        	reti
  23  A10A
  24  A10A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A10A
  26  A10A              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10A              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10A              ;
   3+ A10A              ;	17/02/23
   4+ A10A              ;
   5+ A10A              ;	Sprites e índices.
   6+ A10A
   7+ A10A              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
# file closed: Sprites_e_indices.asm
  27  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C
  95+ 856C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 856C
  97+ 856C C7 85        	defw Caja_1
  98+ 856E 0A 86        	defw Caja_2
  99+ 8570 4D 86        	defw Caja_3
 100+ 8572 90 86        	defw Caja_4
 101+ 8574 D3 86        	defw Caja_5
 102+ 8576 16 87        	defw Caja_6
 103+ 8578 59 87        	defw Caja_7
 104+ 857A 9C 87        	defw Caja_8
 105+ 857C DF 87        	defw Caja_9
 106+ 857E 22 88        	defw Caja_10
 107+ 8580              ;	...
 108+ 8580              ;	...
 109+ 8580              ;	+ entidades ...
 110+ 8580 00 00        	defw 0
 111+ 8582 00 00        	defw 0
 112+ 8584
 113+ 8584              ; ---------- ---------- ---------- ---------- ----------
 114+ 8584
 115+ 8584 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8586 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8588 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 858A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 858D
 120+ 858D 05           	db %00000101									; (Attr).
 121+ 858E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8590 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8592
 124+ 8592 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8594 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8596
 127+ 8596 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8598 04           	db 4 											; (Cuad_objeto).
 129+ 8599 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 859D
 131+ 859D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 859E
 133+ 859E 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A0 00 00        	defw 0											;	" " " " " " "
 135+ 85A2 00 00        	defw 0											;	" " " " " " "
 136+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A8
 138+ 85A8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85AA 00 00        	defw 0											;	" " " " " " "
 140+ 85AC 00 00        	defw 0											;	" " " " " " "
 141+ 85AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85B2
 143+ 85B2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85B4
 145+ 85B4 00           	db 0											; (Autoriza_movimiento).
 146+ 85B5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85B9 00 00
 147+ 85BB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85BE
 149+ 85BE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85C0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85C1
 152+ 85C1 00           	db 0 											; (Columnas).
 153+ 85C2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85C4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85C7
 156+ 85C7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85C7
 158+ 85C7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85C9 00 00        	defw 0											; (Posicion_actual).
 160+ 85CB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85CD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85D0
 163+ 85D0 00           	db %00000000 									; (Attr).
 164+ 85D1
 165+ 85D1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85D3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85D5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85D7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85D9
 170+ 85D9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85DB 00           	db 0											; (Cuad_objeto).
 172+ 85DC
 173+ 85DC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 85E0
 175+ 85E0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 85E1
 177+ 85E1 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 85E3 00 00        	defw 0											;	" " " " " " "
 179+ 85E5 00 00        	defw 0											;	" " " " " " "
 180+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85EB
 182+ 85EB 00 00        	db 0,0											; Variables_de_pintado
 183+ 85ED 00 00        	defw 0											;	" " " " " " "
 184+ 85EF 00 00        	defw 0											;	" " " " " " "
 185+ 85F1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85F5
 187+ 85F5 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 85F7
 189+ 85F7 00           	db 0											; (Autoriza_movimiento).
 190+ 85F8 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 85FC 00 00
 191+ 85FE 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8601
 193+ 8601 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8603 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8604
 196+ 8604 00           	db 0 											; (Columnas).
 197+ 8605 00 00        	defw 0											; (Limite_horizontal).
 198+ 8607 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 860A
 200+ 860A              ; ---------- ---------- ---------- ---------- ----------
 201+ 860A
 202+ 860A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 860C 00 00        	defw 0											; (Posicion_actual).
 204+ 860E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8610 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8613
 207+ 8613 00           	db %00000000 									; (Attr).
 208+ 8614
 209+ 8614 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8616 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 861A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 861C
 214+ 861C 00 00        	defw 0											; (Posicion_inicio).
 215+ 861E 00           	db 0											; (Cuad_objeto).
 216+ 861F
 217+ 861F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8623
 219+ 8623 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8624
 221+ 8624 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8626 00 00        	defw 0											;	" " " " " " "
 223+ 8628 00 00        	defw 0											;	" " " " " " "
 224+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 862E
 226+ 862E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8630 00 00        	defw 0											;	" " " " " " "
 228+ 8632 00 00        	defw 0											;	" " " " " " "
 229+ 8634 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8638
 231+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 863A
 233+ 863A 00           	db 0											; (Autoriza_movimiento).
 234+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 863F 00 00
 235+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8644
 237+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8647
 240+ 8647 00           	db 0 											; (Columnas).
 241+ 8648 00 00        	defw 0											; (Limite_horizontal).
 242+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 864D
 244+ 864D              ; ---------- ---------- ---------- ---------- ----------
 245+ 864D
 246+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 864F 00 00        	defw 0											; (Posicion_actual).
 248+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8656
 251+ 8656 00           	db %00000000 									; (Attr).
 252+ 8657
 253+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 865F
 258+ 865F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8661 00           	db 0											; (Cuad_objeto).
 260+ 8662
 261+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8666
 263+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8667
 265+ 8667 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8669 00 00        	defw 0											;	" " " " " " "
 267+ 866B 00 00        	defw 0											;	" " " " " " "
 268+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8671
 270+ 8671 00 00        	db 0,0											; Variables_de_pintado
 271+ 8673 00 00        	defw 0											;	" " " " " " "
 272+ 8675 00 00        	defw 0											;	" " " " " " "
 273+ 8677 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 867B
 275+ 867B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 867D
 277+ 867D 00           	db 0											; (Autoriza_movimiento).
 278+ 867E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 8682 00 00
 279+ 8684 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 8687
 281+ 8687 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 8689 00           	db 0											; (Cola_de_desplazamiento).
 283+ 868A
 284+ 868A 00           	db 0 											; (Columnas).
 285+ 868B 00 00        	defw 0											; (Limite_horizontal).
 286+ 868D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 8690
 288+ 8690              ; ---------- ---------- ---------- ---------- ----------
 289+ 8690
 290+ 8690 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 8692 00 00        	defw 0											; (Posicion_actual).
 292+ 8694 00 00        	defw 0 											; (Puntero_objeto).
 293+ 8696 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 8699
 295+ 8699 00           	db %00000000 									; (Attr).
 296+ 869A
 297+ 869A 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 869C 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 869E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86A2
 302+ 86A2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86A4 00           	db 0											; (Cuad_objeto).
 304+ 86A5
 305+ 86A5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86A9
 307+ 86A9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86AA
 309+ 86AA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86AC 00 00        	defw 0											;	" " " " " " "
 311+ 86AE 00 00        	defw 0											;	" " " " " " "
 312+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86B4
 314+ 86B4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86B6 00 00        	defw 0											;	" " " " " " "
 316+ 86B8 00 00        	defw 0											;	" " " " " " "
 317+ 86BA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86BE
 319+ 86BE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86C0
 321+ 86C0 00           	db 0											; (Autoriza_movimiento).
 322+ 86C1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86C5 00 00
 323+ 86C7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86CA
 325+ 86CA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86CC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86CD
 328+ 86CD 00           	db 0 											; (Columnas).
 329+ 86CE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86D0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86D3
 332+ 86D3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86D3
 334+ 86D3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86D5 00 00        	defw 0											; (Posicion_actual).
 336+ 86D7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86D9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86DC
 339+ 86DC 00           	db %00000000 									; (Attr).
 340+ 86DD
 341+ 86DD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86DF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 86E1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 86E3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 86E5
 346+ 86E5 00 00        	defw 0											; (Posicion_inicio).
 347+ 86E7 00           	db 0											; (Cuad_objeto).
 348+ 86E8
 349+ 86E8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 86EC
 351+ 86EC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 86ED
 353+ 86ED 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 86EF 00 00        	defw 0											;	" " " " " " "
 355+ 86F1 00 00        	defw 0											;	" " " " " " "
 356+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86F7
 358+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 359+ 86F9 00 00        	defw 0											;	" " " " " " "
 360+ 86FB 00 00        	defw 0											;	" " " " " " "
 361+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8701
 363+ 8701 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8703
 365+ 8703 00           	db 0											; (Autoriza_movimiento).
 366+ 8704 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8708 00 00
 367+ 870A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 870D
 369+ 870D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 870F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8710
 372+ 8710 00           	db 0 											; (Columnas).
 373+ 8711 00 00        	defw 0											; (Limite_horizontal).
 374+ 8713 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8716
 376+ 8716              ; ---------- ---------- ---------- ---------- ----------
 377+ 8716
 378+ 8716 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8718 00 00        	defw 0											; (Posicion_actual).
 380+ 871A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 871C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 871F
 383+ 871F 00           	db %00000000 									; (Attr).
 384+ 8720
 385+ 8720 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8722 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8724 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8728
 390+ 8728 00 00        	defw 0											; (Posicion_inicio).
 391+ 872A 00           	db 0											; (Cuad_objeto).
 392+ 872B
 393+ 872B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 872F
 395+ 872F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8730
 397+ 8730 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8732 00 00        	defw 0											;	" " " " " " "
 399+ 8734 00 00        	defw 0											;	" " " " " " "
 400+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 873A
 402+ 873A 00 00        	db 0,0											; Variables_de_pintado
 403+ 873C 00 00        	defw 0											;	" " " " " " "
 404+ 873E 00 00        	defw 0											;	" " " " " " "
 405+ 8740 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8744
 407+ 8744 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8746
 409+ 8746 00           	db 0											; (Autoriza_movimiento).
 410+ 8747 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 874B 00 00
 411+ 874D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8750
 413+ 8750 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8752 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8753
 416+ 8753 00           	db 0 											; (Columnas).
 417+ 8754 00 00        	defw 0											; (Limite_horizontal).
 418+ 8756 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8759
 420+ 8759              ; ---------- ---------- ---------- ---------- ----------
 421+ 8759
 422+ 8759 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 875B 00 00        	defw 0											; (Posicion_actual).
 424+ 875D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 875F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8762
 427+ 8762 00           	db %00000000 									; (Attr).
 428+ 8763
 429+ 8763 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8765 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8769 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 876B
 434+ 876B 00 00        	defw 0											; (Posicion_inicio).
 435+ 876D 00           	db 0											; (Cuad_objeto).
 436+ 876E
 437+ 876E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8772
 439+ 8772 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8773
 441+ 8773 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8775 00 00        	defw 0											;	" " " " " " "
 443+ 8777 00 00        	defw 0											;	" " " " " " "
 444+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 877D
 446+ 877D 00 00        	db 0,0											; Variables_de_pintado
 447+ 877F 00 00        	defw 0											;	" " " " " " "
 448+ 8781 00 00        	defw 0											;	" " " " " " "
 449+ 8783 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 8787
 451+ 8787 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 8789
 453+ 8789 00           	db 0											; (Autoriza_movimiento).
 454+ 878A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 878E 00 00
 455+ 8790 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 8793
 457+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 459+ 8796
 460+ 8796 00           	db 0 											; (Columnas).
 461+ 8797 00 00        	defw 0											; (Limite_horizontal).
 462+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 879C
 464+ 879C              ; ---------- ---------- ---------- ---------- ----------
 465+ 879C
 466+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 879E 00 00        	defw 0											; (Posicion_actual).
 468+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87A5
 471+ 87A5 00           	db %00000000 									; (Attr).
 472+ 87A6
 473+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87AE
 478+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87B0 00           	db 0											; (Cuad_objeto).
 480+ 87B1
 481+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87B5
 483+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87B6
 485+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87B8 00 00        	defw 0											;	" " " " " " "
 487+ 87BA 00 00        	defw 0											;	" " " " " " "
 488+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87C0
 490+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87C2 00 00        	defw 0											;	" " " " " " "
 492+ 87C4 00 00        	defw 0											;	" " " " " " "
 493+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87CA
 495+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87CC
 497+ 87CC 00           	db 0											; (Autoriza_movimiento).
 498+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87D1 00 00
 499+ 87D3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87D6
 501+ 87D6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87D8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87D9
 504+ 87D9 00           	db 0 											; (Columnas).
 505+ 87DA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87DC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87DF
 508+ 87DF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87DF
 510+ 87DF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 87E1 00 00        	defw 0											; (Posicion_actual).
 512+ 87E3 00 00        	defw 0 											; (Puntero_objeto).
 513+ 87E5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 87E8
 515+ 87E8 00           	db %00000000 									; (Attr).
 516+ 87E9
 517+ 87E9 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 87EB 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 87ED 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 87EF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 87F1
 522+ 87F1 00 00        	defw 0											; (Posicion_inicio).
 523+ 87F3 00           	db 0											; (Cuad_objeto).
 524+ 87F4
 525+ 87F4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 87F8
 527+ 87F8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 87F9
 529+ 87F9 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 87FB 00 00        	defw 0											;	" " " " " " "
 531+ 87FD 00 00        	defw 0											;	" " " " " " "
 532+ 87FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8803
 534+ 8803 00 00        	db 0,0											; Variables_de_pintado
 535+ 8805 00 00        	defw 0											;	" " " " " " "
 536+ 8807 00 00        	defw 0											;	" " " " " " "
 537+ 8809 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 880D
 539+ 880D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 880F
 541+ 880F 00           	db 0											; (Autoriza_movimiento).
 542+ 8810 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8814 00 00
 543+ 8816 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8819
 545+ 8819 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 881B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 881C
 548+ 881C 00           	db 0 											; (Columnas).
 549+ 881D 00 00        	defw 0											; (Limite_horizontal).
 550+ 881F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8822
 552+ 8822              ; ---------- ---------- ---------- ---------- ----------
 553+ 8822
 554+ 8822 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8824 00 00        	defw 0											; (Posicion_actual).
 556+ 8826 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8828 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 882B
 559+ 882B 00           	db %00000000 									; (Attr).
 560+ 882C
 561+ 882C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 882E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8832 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8834
 566+ 8834 00 00        	defw 0											; (Posicion_inicio).
 567+ 8836 00           	db 0											; (Cuad_objeto).
 568+ 8837
 569+ 8837 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 883B
 571+ 883B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 883C
 573+ 883C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 883E 00 00        	defw 0											;	" " " " " " "
 575+ 8840 00 00        	defw 0											;	" " " " " " "
 576+ 8842 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8846
 578+ 8846 00 00        	db 0,0											; Variables_de_pintado
 579+ 8848 00 00        	defw 0											;	" " " " " " "
 580+ 884A 00 00        	defw 0											;	" " " " " " "
 581+ 884C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8850
 583+ 8850 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8852
 585+ 8852 00           	db 0											; (Autoriza_movimiento).
 586+ 8853 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8857 00 00
 587+ 8859 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 885C
 589+ 885C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 885E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 885F
 592+ 885F 00           	db 0 											; (Columnas).
 593+ 8860 00 00        	defw 0											; (Limite_horizontal).
 594+ 8862 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8865
 596+ 8865              ; -------------------------------------------------------------------------------------
 597+ 8865              ;
 598+ 8865              ;	20/05/23
 599+ 8865              ;
 600+ 8865              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8865              ;
 602+ 8865              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8865              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8865              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8865              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8865
 607+ 8865              Indice_de_entidades
 608+ 8865
 609+ 8865 6F 88        	defw Entidad_1
 610+ 8867 7F 88        	defw Entidad_2
 611+ 8869 8F 88        	defw Entidad_3
 612+ 886B 9F 88        	defw Entidad_4
 613+ 886D AF 88        	defw Entidad_5
 614+ 886F
 615+ 886F              ;	BADSAT, (Satélite malvado).
 616+ 886F
 617+ 886F 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 618+ 8871 04           	db %00000100									; (Attr).
 619+ 8872 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 620+ 8874 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 621+ 8876 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 622+ 8878 01           	db 1											; (Cuad_objeto).
 623+ 8879 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 624+ 887D 11 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 625+ 887F
 626+ 887F 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 627+ 8881 02           	db %00000010									; (Attr).
 628+ 8882 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 629+ 8884 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 630+ 8886 40 50        	defw $5040                                      ; (Posicion_inicio).
 631+ 8888 01           	db 1											; (Cuad_objeto).
 632+ 8889 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 633+ 888D 11 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 634+ 888F
 635+ 888F 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 636+ 8891 04           	db %00000100									; (Attr).
 637+ 8892 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 638+ 8894 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 639+ 8896 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 640+ 8898 01           	db 1											; (Cuad_objeto).
 641+ 8899 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 642+ 889D 11 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 643+ 889F
 644+ 889F 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 645+ 88A1 01           	db %00000001									; (Attr).
 646+ 88A2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 647+ 88A4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 648+ 88A6 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 649+ 88A8 01           	db 1											; (Cuad_objeto).
 650+ 88A9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 651+ 88AD 11 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 652+ 88AF
 653+ 88AF 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 654+ 88B1 01           	db %00000001									; (Attr).
 655+ 88B2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 656+ 88B4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 657+ 88B6 07 40        	defw $4007                                      ; (Posicion_inicio).
 658+ 88B8 01           	db 1											; (Cuad_objeto).
 659+ 88B9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 660+ 88BD 11 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 661+ 88BF
# file closed: Cajas_y_disparos.asm
  28  88BF              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BF              ; 13/05/23
   2+ 88BF
   3+ 88BF              Indice_de_niveles
   4+ 88BF
   5+ 88BF CD 88        	defw Nivel_1
   6+ 88C1 CF 88        	defw Nivel_2
   7+ 88C3 DC 88        	defw Nivel_3
   8+ 88C5 EC 88        	defw Nivel_4
   9+ 88C7 FE 88        	defw Nivel_5
  10+ 88C9
  11+ 88C9              ;	...
  12+ 88C9              ;	...
  13+ 88C9              ;	+ Niveles ...
  14+ 88C9
  15+ 88C9 00 00        	defw 0
  16+ 88CB 00 00        	defw 0
  17+ 88CD
  18+ 88CD 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88CE 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88CF 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88D0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D4 01 02
  22+ 88D6 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88DA 01 02
  23+ 88DC 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88DD 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88E1 01
  25+ 88E2 03 01 01 01  	db 3,1,1,1,1
  25+ 88E6 01
  26+ 88E7 03 01 01 01  	db 3,1,1,1,1
  26+ 88EB 01
  27+ 88EC 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88ED 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88F1 01
  29+ 88F2 04 01 01 01  	db 4,1,1,1,1
  29+ 88F6 01
  30+ 88F7 04 01 01 01  	db 4,1,1,1,1
  30+ 88FB 01
  31+ 88FC 02 03        	db 2,3
  32+ 88FE 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88FF 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8903 01
  34+ 8904 05 01 01 01  	db 5,1,1,1,1
  34+ 8908 01
  35+ 8909 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 890D 01
  36+ 890E 05 01 01 01  	db 5,1,1,1,1
  36+ 8912 01
  37+ 8913
  38+ 8913              ;---------------------------------------------------------------------------------------------------------------
  39+ 8913              ;
  40+ 8913              ;   21/5/23
  41+ 8913              ;
  42+ 8913              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8913              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8913              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8913              ;	_en la caja DRAW correspondiente.
  46+ 8913              ;
  47+ 8913              ;	MODIFICA: HL,DE y A.
  48+ 8913              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8913
  50+ 8913              Inicializa_Punteros_de_nivel
  51+ 8913
  52+ 8913 21 BF 88     	ld hl,Indice_de_niveles
  53+ 8916 22 4F 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8919 CD 47 8D     	call Extrae_address
  55+ 891C 7E           	ld a,(hl)
  56+ 891D 32 15 8A     	ld (Numero_de_entidades),a
  57+ 8920 23           	inc hl
  58+ 8921 22 51 8A     	ld (Datos_de_nivel),hl
  59+ 8924 C9           	ret
  60+ 8925
  61+ 8925              ;---------------------------------------------------------------------------------------------------------------
  62+ 8925              ;
  63+ 8925              ;   13/5/23
  64+ 8925              ;
  65+ 8925              ;	Destruye A,BC,HL,DE
  66+ 8925
  67+ 8925              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8925              ;	_del juego.
  69+ 8925
  70+ 8925              Prepara_cajas
  71+ 8925
  72+ 8925              ; Preparamos los punteros de las cajas.
  73+ 8925
  74+ 8925 21 6C 85     	ld hl,Indice_de_cajas
  75+ 8928 CD 47 8D     	call Extrae_address
  76+ 892B CD 68 89     	call Avanza_caja
  77+ 892E
  78+ 892E CD AC 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8931
  80+ 8931 2A 51 8A     	ld hl,(Datos_de_nivel)
  81+ 8934
  82+ 8934              ; HL está en los datos del nivel correspondiente.
  83+ 8934              ; B actuará como contador de cajas.
  84+ 8934
  85+ 8934 C5           1 push bc
  86+ 8935
  87+ 8935 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8936 CD 59 89     	call PreparaBC
  89+ 8939
  90+ 8939 21 65 88     	ld hl,Indice_de_entidades
  91+ 893C CD 61 89     	call SBC_HL_con_BC_y_Extrae
  92+ 893F 22 1B 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8942
  94+ 8942 CD 72 89     	call Datos_de_entidad_a_caja
  95+ 8945
  96+ 8945 2A 13 8A     	ld hl,(Indice_restore_caja)
  97+ 8948 CD 47 8D     	call Extrae_address
  98+ 894B CD 68 89     	call Avanza_caja
  99+ 894E
 100+ 894E 2A 51 8A     	ld hl,(Datos_de_nivel)
 101+ 8951 23           	inc hl
 102+ 8952 22 51 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8955
 104+ 8955 C1           	pop bc
 105+ 8956 10 DC        	djnz 1B
 106+ 8958 C9           	ret
 107+ 8959
 108+ 8959 CB 27        PreparaBC sla a
 109+ 895B D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 895D 4F           	ld c,a
 111+ 895E 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8960 C9           	ret
 113+ 8961
 114+ 8961 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8962 ED 4A        	adc hl,bc
 116+ 8964 CD 47 8D     	call Extrae_address
 117+ 8967 C9           	ret
 118+ 8968
 119+ 8968 22 0F 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 896B 13           	inc de
 121+ 896C 13           	inc de
 122+ 896D EB           	ex de,hl
 123+ 896E 22 13 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8971 C9           	ret
 125+ 8972
 126+ 8972              Datos_de_entidad_a_caja
 127+ 8972
 128+ 8972              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8972
 130+ 8972
 131+ 8972 ED 5B 0F 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8976
 133+ 8976 01 02 00     	ld bc,2
 134+ 8979 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 897B
 136+ 897B 01 07 00     	ld bc,7
 137+ 897E CD A6 89     	call Situa_DE
 138+ 8981
 139+ 8981 01 05 00     	ld bc,5
 140+ 8984 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8986
 142+ 8986 01 04 00     	ld bc,4
 143+ 8989 CD A6 89     	call Situa_DE
 144+ 898C
 145+ 898C 01 07 00     	ld bc,7
 146+ 898F ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8991
 148+ 8991 01 18 00     	ld bc,24
 149+ 8994 CD A6 89     	call Situa_DE
 150+ 8997
 151+ 8997 01 02 00     	ld bc,2
 152+ 899A ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 899C
 154+ 899C              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 899C              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 899C
 157+ 899C 01 0F 00     	ld bc,15									; *****
 158+ 899F CD A6 89     	call Situa_DE
 159+ 89A2
 160+ 89A2 3E 03        	ld a,3
 161+ 89A4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A5
 163+ 89A5 C9           	ret
 164+ 89A6
 165+ 89A6 EB           Situa_DE ex de,hl
 166+ 89A7 A7           	and a
 167+ 89A8 ED 4A        	adc hl,bc
 168+ 89AA EB           	ex de,hl
 169+ 89AB C9           	ret
 170+ 89AC
 171+ 89AC              ;---------------------------------------------------------------------------------------------------------------
 172+ 89AC              ;
 173+ 89AC              ;	21/5/23
 174+ 89AC              ;
 175+ 89AC              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89AC              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89AC              ;
 178+ 89AC              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89AC              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89AC              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89AC              ;
 182+ 89AC              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89AC              ;	MODIFICA: A y B.
 184+ 89AC              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89AC
 186+ 89AC              Admin_num_entidades
 187+ 89AC
 188+ 89AC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89AC
 190+ 89AC 3A 15 8A     	ld a,(Numero_de_entidades)
 191+ 89AF A7           	and a
 192+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89B0              ;	jr z,$
 194+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89B0
 196+ 89B0 20 03        	jr nz,3F
 197+ 89B2
 198+ 89B2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89B2
 200+ 89B2 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B5
 202+ 89B5
 203+ 89B5 3A 15 8A     3 ld a,(Numero_de_entidades)
 204+ 89B8 FE 0A        	cp 10
 205+ 89BA 38 08        	jr c,1F
 206+ 89BC
 207+ 89BC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89BC              ; Actualizamos variables.
 209+ 89BC
 210+ 89BC 3E 0A        	ld a,10
 211+ 89BE 32 16 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89C1 47           	ld b,a
 213+ 89C2 18 04        	jr 2F
 214+ 89C4
 215+ 89C4              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C4              ; (Numero_de_entidades)="0".
 217+ 89C4
 218+ 89C4 32 16 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89C7 47           	ld b,a
 220+ 89C8 C9           2 ret
# file closed: Niveles.asm
  29  89C9
  30  89C9              ; ******************************************************************************************************************************************************************************************
  31  89C9              ; Constantes.
  32  89C9              ; ******************************************************************************************************************************************************************************************
  33  89C9              ;
  34  89C9              ; 25/05/23
  35  89C9              ;
  36  89C9              ; Constantes generales.
  37  89C9              ;
  38  89C9
  39  89C9              Sprite_vacio equ $f000
  40  89C9              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89C9              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89C9              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89C9              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89C9
  45  89C9              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89C9              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89C9              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89C9              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89C9              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89C9              ;                               				        ; De momento situamos este almacén en $7060.
  51  89C9              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  52  89C9              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  53  89C9              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  54  89C9              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  55  89C9              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  56  89C9              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  57  89C9
  58  89C9              Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
  59  89C9              Caja_de_disparotes equ $741d ; (741dh - 7420h) 4 bytes.
  60  89C9
  61  89C9              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  62  89C9
  63  89C9              ; ******************************************************************************************************************************************************************************************
  64  89C9              ; Variables.
  65  89C9              ; ******************************************************************************************************************************************************************************************
  66  89C9              ;
  67  89C9              ; 28/07/23
  68  89C9              ;
  69  89C9              ; Variables de DRAW. (Motor principal).
  70  89C9              ;
  71  89C9              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  72  89C9
  73  89C9 00           Filas db 0												; Filas. [DRAW]
  74  89CA 00           Columns db 0  											; Nº de columnas. [DRAW]
  75  89CB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  76  89CD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  77  89CF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  78  89D0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  79  89D1
  80  89D1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  81  89D1
  82  89D1 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  83  89D2              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  84  89D2              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  85  89D2 00           Attr db 0												; Atributos de la entidad:
  86  89D3
  87  89D3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  88  89D3              ;
  89  89D3              ;	COLORES: 0 ..... NEGRO
  90  89D3              ;    		 1 ..... AZUL
  91  89D3              ; 			 2 ..... ROJO
  92  89D3              ;			 3 ..... MAGENTA
  93  89D3              ; 			 4 ..... VERDE
  94  89D3              ; 			 5 ..... CIAN
  95  89D3              ;			 6 ..... AMARILLO
  96  89D3              ; 			 7 ..... BLANCO
  97  89D3
  98  89D3 00 00        Indice_Sprite_der defw 0
  99  89D5 00 00        Indice_Sprite_izq defw 0
 100  89D7 00 00        Puntero_DESPLZ_der defw 0
 101  89D9 00 00        Puntero_DESPLZ_izq defw 0
 102  89DB
 103  89DB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 104  89DD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 105  89DE
 106  89DE              ; Variables de objeto. (Características).
 107  89DE
 108  89DE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 109  89DF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 110  89E0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 111  89E1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 112  89E2
 113  89E2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 114  89E3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 115  89E3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 116  89E3
 117  89E3 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 118  89E5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 119  89E7 00 00        	defw 0
 120  89E9 00 00 00 00  	db 0,0,0,0
 121  89ED
 122  89ED 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 123  89EF 00 00        	defw 0
 124  89F1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 125  89F3 00 00 00 00  	db 0,0,0,0
 126  89F7
 127  89F7              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 128  89F7
 129  89F7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 130  89F8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 131  89F8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 132  89F8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 133  89F8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 134  89F8              ;
 135  89F8              ; 														DESCRIPCIÖN:
 136  89F8              ;
 137  89F8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 138  89F8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 139  89F8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 140  89F8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 141  89F8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 142  89F8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 143  89F8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 144  89F8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 145  89F8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 146  89F8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 147  89F8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 148  89F8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 149  89F8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 150  89F8              ;
 151  89F8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 152  89F8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 153  89F8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 154  89F8
 155  89F8 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 156  89F9
 157  89F9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 158  89F9
 159  89F9 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 160  89FA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 161  89FC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 162  89FE 00 00        Puntero_indice_mov_bucle defw 0							;
 163  8A00              ;
 164  8A00              ;
 165  8A00 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 166  8A01              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 167  8A01              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 168  8A01 00           Incrementa_puntero_backup db 0
 169  8A02 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 170  8A03              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 171  8A03 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 172  8A04 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 173  8A05 00           Cola_de_desplazamiento db 0								; Este byte indica:
 174  8A06              ;
 175  8A06              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 176  8A06              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 177  8A06              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 178  8A06              ;
 179  8A06              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 180  8A06              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 181  8A06              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 182  8A06              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 183  8A06              ;
 184  8A06              ;														;	"$ff" ..... Bucle infinito de repetición.
 185  8A06              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 186  8A06              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 187  8A06
 188  8A06
 189  8A06              ; Variables de funcionamiento. [DRAW].
 190  8A06
 191  8A06 00           Columnas db 0
 192  8A07 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 193  8A09              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 194  8A09 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 195  8A0A
 196  8A0A              ; variables de control general.
 197  8A0A
 198  8A0A 00           Ctrl_2 db 0
 199  8A0B              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 200  8A0B              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 201  8A0B              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 202  8A0B              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 203  8A0B              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 204  8A0B              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 205  8A0B              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 206  8A0B              ;
 207  8A0B              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 208  8A0B              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 209  8A0B              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 210  8A0B              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 211  8A0B              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 212  8A0B
 213  8A0B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 214  8A0C
 215  8A0C              ;! 67 Bytes por entidad.
 216  8A0C
 217  8A0C              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 218  8A0C              ;					         		---------;      ;---------
 219  8A0C
 220  8A0C
 221  8A0C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 222  8A0C
 223  8A0C 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 224  8A0D
 225  8A0D              ;														DESCRIPCIÓN:
 226  8A0D              ;
 227  8A0D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 228  8A0D              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 229  8A0D              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 230  8A0D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 231  8A0D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 232  8A0D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 233  8A0D
 234  8A0D              ;														BIT 3, Recarga de nueva oleada.
 235  8A0D              ;														BIT 4, Recarga de nueva oleada.
 236  8A0D
 237  8A0D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 238  8A0F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 239  8A0F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 240  8A0F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 241  8A0F
 242  8A0F
 243  8A0F
 244  8A0F              ; Gestión de ENTIDADES y CAJAS.
 245  8A0F
 246  8A0F 00 00        Puntero_store_caja defw 0
 247  8A11 00 00        Puntero_restore_caja defw 0
 248  8A13 00 00        Indice_restore_caja defw 0
 249  8A15 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 250  8A16 00           Numero_parcial_de_entidades db 0
 251  8A17 00           Entidades_en_curso db 0									; ..... ..... .....
 252  8A18 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 253  8A19              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 254  8A19              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 255  8A19              ;														; _ (Numero_de_malotes)="0".
 256  8A19 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 257  8A1B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 258  8A1D              ;														; _ puntero (Indice_entidades).
 259  8A1D
 260  8A1D
 261  8A1D              ;---------------------------------------------------------------------------------------------------------------
 262  8A1D              ;
 263  8A1D              ; Sirven para PINTAR.
 264  8A1D
 265  8A1D 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 266  8A1F              ;															; _variable para almacenar lo posición del puntero_
 267  8A1F              ; 															; _de pila, SP.
 268  8A1F 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 269  8A21              ;															; La utiliza la rutina [Extrae_foto_registros].
 270  8A21 00 70        Stack_snapshot defw Album_de_fotos							; Puntero que indica la posición de memoria donde vamos a guardar_
 271  8A23              ;															; _el snapshot de los registros de la siguiente entidad.
 272  8A23              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 273  8A23 0D 72        Stack_snapshot_disparos defw Album_de_fotos_disparos		; Puntero que indica la posición de memoria donde vamos a guardar_
 274  8A25              ;															; _el snapshot de los registros del siguiente disparo.
 275  8A25              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 276  8A25 84 70        Stack_snapshot_1 defw Album_de_fotos_1
 277  8A27 90 72        Stack_snapshot_disparos_1 defw Album_de_fotos_disparos_1
 278  8A29 07 71        Stack_snapshot_2 defw Album_de_fotos_2
 279  8A2B 19 73        Stack_snapshot_disparos_2 defw Album_de_fotos_disparos_2
 280  8A2D 8A 71        Stack_snapshot_3 defw Album_de_fotos_3
 281  8A2F 96 73        Stack_snapshot_disparos_3 defw Album_de_fotos_disparos_3
 282  8A31
 283  8A31              ;---------------------------------------------------------------------------------------------------------------
 284  8A31
 285  8A31              ; Gestión de Disparos.
 286  8A31
 287  8A31 00           Numero_de_disparotes db 0
 288  8A32 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 289  8A34 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 290  8A36 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 291  8A37              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 292  8A37              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 293  8A37 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 294  8A39              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 295  8A39              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 296  8A39              ;														; _produzca colisión.
 297  8A39 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 298  8A3B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 299  8A3B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 300  8A3E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 301  8A3E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 302  8A41              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 303  8A41 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 304  8A43 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 305  8A44
 306  8A44              ;---------------------------------------------------------------------------------------------------------------
 307  8A44
 308  8A44              ; Relojes y temporizaciones.
 309  8A44
 310  8A44 00           Contador_de_frames db 0
 311  8A45 04           Clock_explosion db 4
 312  8A46 1E           Clock_Entidades_en_curso db 30
 313  8A47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 314  8A48              ;														; Repite la oleada de entidades.
 315  8A48 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 316  8A49 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 317  8A4A 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 318  8A4B
 319  8A4B 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 320  8A4C 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 321  8A4D 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 322  8A4E
 323  8A4E              ;---------------------------------------------------------------------------------------------------------------
 324  8A4E
 325  8A4E              ; Gestión de NIVELES.
 326  8A4E
 327  8A4E 00           Nivel db 0												; Nivel actual del juego.
 328  8A4F 00 00        Puntero_indice_NIVELES defw 0
 329  8A51 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 330  8A53              ; 														; _ que definen el NIVEL.
 331  8A53              ; Y todo comienza aquí .....
 332  8A53              ;
 333  8A53              ; Rutina principal *************************************************************************************************************************************************************************
 334  8A53              ;
 335  8A53              ;	14/11/22
 336  8A53
 337  8A53              START
 338  8A53
 339  8A53 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 340  8A56 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 341  8A58 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 342  8A5A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 343  8A5C F3           	DI
 344  8A5D
 345  8A5D 3E 07        	ld a,%00000111
 346  8A5F CD 4D 99     	call Cls
 347  8A62
 348  8A62              ;	call Pinta_marco
 349  8A62
 350  8A62
 351  8A62 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 352  8A65
 353  8A65 CD 20 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 354  8A68
 355  8A68 CD 25 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 356  8A6B
 357  8A6B CD EF 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 358  8A6E              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 359  8A6E CD D0 8D     	call Restore_entidad
 360  8A71
 361  8A71 21 16 8A     	ld hl,Numero_parcial_de_entidades
 362  8A74 46           	ld b,(hl)
 363  8A75 04           	inc b
 364  8A76 05           	dec b
 365  8A77 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 366  8A79
 367  8A79              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 368  8A79              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 369  8A79              ;	Pintamos el resto de entidades:
 370  8A79
 371  8A79              ;	INICIA ENTIDADES !!!!!
 372  8A79
 373  8A79 C5           1 push bc  												; Guardo el contador de entidades.
 374  8A7A
 375  8A7A CD 96 8C     	call Inicia_entidad
 376  8A7D
 377  8A7D C1           	pop bc
 378  8A7E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 379  8A80
 380  8A80              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 381  8A80              ; (Esto se dá cuando se inicia una nueva oleada).
 382  8A80
 383  8A80 3A 0C 8A     	ld a,(Ctrl_1)
 384  8A83 CB 5F        	bit 3,a
 385  8A85 20 18        	jr nz,5F											; Loop
 386  8A87
 387  8A87              ; 	INICIA AMADEUS !!!!!
 388  8A87
 389  8A87 CD F7 8D     3 call Restore_Amadeus
 390  8A8A CD 4D 8D     	call Inicia_Puntero_objeto
 391  8A8D CD 83 93     	call Draw
 392  8A90 CD A0 7F     	call Guarda_foto_registros
 393  8A93 11 84 85     	ld de,Amadeus_db
 394  8A96 CD 09 8E     	call Store_Amadeus
 395  8A99
 396  8A99              ; 	INICIA DISPAROS !!!!!
 397  8A99
 398  8A99 CD 05 8D     	call Inicia_Puntero_Disparo_Entidades
 399  8A9C CD 0C 8D     	call Inicia_Puntero_Disparo_Amadeus
 400  8A9F
 401  8A9F              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 402  8A9F
 403  8A9F CD EF 8C     5 call Inicia_punteros_de_cajas
 404  8AA2 CD D0 8D     	call Restore_entidad
 405  8AA5
 406  8AA5 3A 0C 8A     	ld a,(Ctrl_1)
 407  8AA8 CB 5F        	bit 3,a
 408  8AAA 28 0A        	jr z,6F
 409  8AAC
 410  8AAC              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 411  8AAC
 412  8AAC 21 0C 8A     	ld hl,Ctrl_1
 413  8AAF CB 9E        	res 3,(hl)
 414  8AB1 CD 13 8D     	call Calcula_numero_de_malotes
 415  8AB4 18 11        	jr 2F
 416  8AB6
 417  8AB6              ; ----------
 418  8AB6
 419  8AB6 3A 16 8A     6 ld a,(Numero_parcial_de_entidades)
 420  8AB9 3C           	inc a
 421  8ABA 32 18 8A     	ld (Numero_de_malotes),a
 422  8ABD
 423  8ABD              ; Guardamos el nº de malotes en su caja, Caja_de_malotes+3.
 424  8ABD
 425  8ABD 21 1C 74     	ld hl,Caja_de_malotes+3
 426  8AC0 77           	ld (hl),a
 427  8AC1
 428  8AC1 CD 5D 74     	call Gestiona_albumes_de_fotos
 429  8AC4              ;	call Gestiona_albumes_de_fotos_disparos
 430  8AC4 CD 21 74     	call Gestiona_cajas_de_malotes
 431  8AC7
 432  8AC7              ; ------------------------------------
 433  8AC7
 434  8AC7 FB           2 ei ; Interrupciones habilitadas.
 435  8AC8
 436  8AC8
 437  8AC8              ; -----------------------------------------------------------------------
 438  8AC8              ;
 439  8AC8              ;	3/8/23
 440  8AC8
 441  8AC8 3A 46 8A     Main ld a,(Clock_Entidades_en_curso)
 442  8ACB 47           	ld b,a
 443  8ACC 3A 44 8A     	ld a,(Contador_de_frames)
 444  8ACF B8           	cp b
 445  8AD0 20 18        	jr nz,13F
 446  8AD2
 447  8AD2 3A 16 8A     	ld a,(Numero_parcial_de_entidades)
 448  8AD5 47           	ld b,a
 449  8AD6 3A 17 8A     	ld a,(Entidades_en_curso)
 450  8AD9 B8           	cp b
 451  8ADA 28 0E        	jr z,13F
 452  8ADC 30 0C        	jr nc,13F
 453  8ADE
 454  8ADE 3C           	inc a
 455  8ADF 32 17 8A     	ld (Entidades_en_curso),a
 456  8AE2
 457  8AE2 3A 46 8A     	ld a,(Clock_Entidades_en_curso)
 458  8AE5
 459  8AE5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 460  8AE5              ;! _ IMPREDECIBLE !!!!
 461  8AE5
 462  8AE5 C6 64        	add 100
 463  8AE7 32 46 8A     	ld (Clock_Entidades_en_curso),a
 464  8AEA
 465  8AEA              ; Habilita disparos.
 466  8AEA
 467  8AEA 21 48 8A     13 ld hl,Disparo_Amadeus
 468  8AED 11 4A 8A     	ld de,CLOCK_repone_disparo_Amadeus
 469  8AF0 CD 12 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 470  8AF3
 471  8AF3 21 4B 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 472  8AF6 11 4D 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 473  8AF9 CD 12 A0     	call Habilita_disparos
 474  8AFC
 475  8AFC              ; COLISIONES.
 476  8AFC
 477  8AFC CD 65 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 478  8AFF
 479  8AFF              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 480  8AFF              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 481  8AFF              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 482  8AFF
 483  8AFF AF           	xor a
 484  8B00 32 36 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 485  8B03
 486  8B03 CD EF 8C     	call Inicia_punteros_de_cajas
 487  8B06 CD D0 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 488  8B09              ; 														; _ en DRAW.
 489  8B09 3A C9 89     	ld a,(Filas)
 490  8B0C A7           	and a
 491  8B0D 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 492  8B0F CD E2 8D     	call Incrementa_punteros_de_cajas
 493  8B12 18 F2        	jr 12B
 494  8B14
 495  8B14              ; ---------------------------------------------------------------------------------------
 496  8B14
 497  8B14 3A 16 8A     10 ld a,(Numero_parcial_de_entidades)
 498  8B17 47               ld b,a
 499  8B18 A7           	and a
 500  8B19 20 14        	jr nz,11F
 501  8B1B
 502  8B1B 21 0C 8A     	ld hl,Ctrl_1
 503  8B1E CB 66        	bit 4,(hl)
 504  8B20 C2 AC 8B     	jp nz,16F
 505  8B23
 506  8B23 21 0C 8A     	ld hl,Ctrl_1
 507  8B26 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 508  8B28
 509  8B28 3A 44 8A     	ld a,(Contador_de_frames)
 510  8B2B 3C           	inc a
 511  8B2C 32 47 8A     	ld (Activa_recarga_cajas),a
 512  8B2F
 513  8B2F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 514  8B2F
 515  8B2F 3A 17 8A     11 ld a,(Entidades_en_curso)
 516  8B32 A7           	and a
 517  8B33 CA AC 8B     	jp z,16F												; Si no hay entidades en curso, RESTORE AMADEUS.
 518  8B36 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 519  8B37
 520  8B37              ; Código que ejecutamos con cada entidad:
 521  8B37              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 522  8B37
 523  8B37 C5           15 push bc 												; Nº de entidades en curso.
 524  8B38
 525  8B38              ; Impacto ???
 526  8B38
 527  8B38 3A E2 89     	ld a,(Impacto)
 528  8B3B A7           	and a
 529  8B3C 28 2D        	jr z,8F
 530  8B3E
 531  8B3E              ; Hay Impacto en esta entidad.
 532  8B3E
 533  8B3E 21 45 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 534  8B41 35           	dec (hl)
 535  8B42 20 62        	jr nz,17F
 536  8B44
 537  8B44              ;! Velocidad de la animación de la explosión.
 538  8B44
 539  8B44 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 540  8B46              ;														; _,(velocidad de la explosión).
 541  8B46 CD A6 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 542  8B49
 543  8B49              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 544  8B49
 545  8B49 3A 0A 8A     	ld a,(Ctrl_2)
 546  8B4C CB 4F        	bit 1,a
 547  8B4E 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 548  8B50
 549  8B50              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 550  8B50
 551  8B50 3A D1 89     	ld a,(CTRL_DESPLZ)
 552  8B53 A7           	and a
 553  8B54 20 08        	jr nz,18F
 554  8B56
 555  8B56 21 84 84     	ld hl,Indice_Explosion_2x2-2
 556  8B59 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 557  8B5C 18 06        	jr 19F
 558  8B5E
 559  8B5E 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 560  8B61 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 561  8B64
 562  8B64 21 0A 8A     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 563  8B67 CB CE        	set 1,(hl)
 564  8B69 18 22        	jr 7F
 565  8B6B
 566  8B6B              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 567  8B6B              ; _con las coordenadas de la entidad almacenada en DRAW.
 568  8B6B
 569  8B6B 3A 0C 8A     8 ld a,(Ctrl_1)
 570  8B6E CB 57        	bit 2,a
 571  8B70 28 1B        	jr z,7F
 572  8B72
 573  8B72 2A 39 8A     	ld hl,(Coordenadas_disparo_certero)
 574  8B75 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 575  8B76              ;														; E contiene la coordenada_X del disparo.
 576  8B76 2A CF 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 577  8B79              ;														; H FILA, (Coordenada_y de la entidad).
 578  8B79 A7           	and a
 579  8B7A ED 52        	sbc hl,de
 580  8B7C
 581  8B7C CD 9C 92     	call Determina_resultado_comparativa
 582  8B7F
 583  8B7F 78           	ld a,b
 584  8B80 A7           	and a
 585  8B81 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 586  8B83
 587  8B83              ; ----- ----- -----
 588  8B83
 589  8B83 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 590  8B85 32 E2 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 591  8B88
 592  8B88 21 0C 8A     	ld hl,Ctrl_1
 593  8B8B CB 96        	res 2,(hl)
 594  8B8D
 595  8B8D CD 18 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 596  8B90
 597  8B90 3A F7 89     	ld a,(Ctrl_0)
 598  8B93 CB 67        	bit 4,a
 599  8B95 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 600  8B97
 601  8B97              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 602  8B97              ; [[[
 603  8B97 CD 6B 8E     	call Detecta_disparo_entidad
 604  8B9A              ; ]]]
 605  8B9A CD B6 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 606  8B9D
 607  8B9D 21 F7 89     	ld hl,Ctrl_0
 608  8BA0 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 609  8BA2 AF           	xor a
 610  8BA3 32 F8 89     	ld (Obj_dibujado),a
 611  8BA6
 612  8BA6 CD 95 8D     17 call Store_Restore_cajas
 613  8BA9
 614  8BA9 C1           	pop bc
 615  8BAA 10 8B        	djnz 15B
 616  8BAC
 617  8BAC              ; ------------------------------------
 618  8BAC              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 619  8BAC              ; Hemos gestionado todas las unidades.
 620  8BAC              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 621  8BAC
 622  8BAC              ;	ld hl,Ctrl_1
 623  8BAC              ;	res 2,(hl)
 624  8BAC
 625  8BAC              ; ------------------------------------
 626  8BAC
 627  8BAC              ; Tras la gestión de las entidades, ... AMADEUS.
 628  8BAC
 629  8BAC CD F7 8D     16 call Restore_Amadeus
 630  8BAF
 631  8BAF 3A E2 89     	ld a,(Impacto)
 632  8BB2 A7           	and a
 633  8BB3 20 FE        	jr nz,$
 634  8BB5
 635  8BB5 CD 77 8C     	call Mov_Amadeus
 636  8BB8
 637  8BB8 3A F7 89     	ld a,(Ctrl_0)
 638  8BBB CB 67        	bit 4,a
 639  8BBD 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 640  8BBF
 641  8BBF CD B6 8C     	call Guarda_foto_entidad_a_pintar
 642  8BC2
 643  8BC2 21 F7 89     14 ld hl,Ctrl_0
 644  8BC5 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 645  8BC7 AF           	xor a
 646  8BC8 32 F8 89     	ld (Obj_dibujado),a
 647  8BCB
 648  8BCB 11 84 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 649  8BCE CD 09 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 650  8BD1
 651  8BD1 CD F9 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 652  8BD4
 653  8BD4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 654  8BD4
 655  8BD4 CD 2F 8D     	call Calcula_numero_de_disparotes
 656  8BD7 CD 13 8D     9 call Calcula_numero_de_malotes
 657  8BDA
 658  8BDA 3A 44 8A     	ld a,(Contador_de_frames)
 659  8BDD 18 FE        	jr $
 660  8BDF
 661  8BDF CD 5D 74     	call Gestiona_albumes_de_fotos
 662  8BE2 CD 49 75     	call Gestiona_albumes_de_fotos_disparos
 663  8BE5 CD 21 74     	call Gestiona_cajas_de_malotes
 664  8BE8
 665  8BE8 3E 04        	ld a,4
 666  8BEA D3 FE        	out ($fe),a
 667  8BEC
 668  8BEC              ; ----------------------------------------
 669  8BEC
 670  8BEC 3A 0C 8A     	ld a,(Ctrl_1) 										; Existe Loop?
 671  8BEF CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 672  8BF1 CA C8 8A     	jp z,Main
 673  8BF4
 674  8BF4              ; -----
 675  8BF4              ;	(((
 676  8BF4
 677  8BF4 3A 44 8A     	ld a,(Contador_de_frames)
 678  8BF7 47           	ld b,a
 679  8BF8 3A 47 8A     	ld a,(Activa_recarga_cajas)
 680  8BFB B8           	cp b
 681  8BFC 28 08        	jr z,20F
 682  8BFE
 683  8BFE 21 0C 8A     	ld hl,Ctrl_1
 684  8C01 CB E6        	set 4,(hl)
 685  8C03 C3 C8 8A     	jp Main
 686  8C06
 687  8C06 21 0C 8A     20 ld hl,Ctrl_1
 688  8C09 CB A6        	res 4,(hl)
 689  8C0B F3           	di
 690  8C0C
 691  8C0C 3A 44 8A     	ld a,(Contador_de_frames)
 692  8C0F
 693  8C0F              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 694  8C0F              ;! _ IMPREDECIBLE !!!!
 695  8C0F
 696  8C0F C6 0A        	add 10
 697  8C11 32 46 8A     	ld (Clock_Entidades_en_curso),a
 698  8C14
 699  8C14 C3 68 8A     	jp 4B
 700  8C17
 701  8C17 C9           	ret
 702  8C18
 703  8C18              ; --------------------------------------------------------------------------------------------------------------
 704  8C18              ;
 705  8C18              ;	27/05/23
 706  8C18
 707  8C18              Mov_obj
 708  8C18
 709  8C18              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 710  8C18
 711  8C18 3A 0A 8A     	ld a,(Ctrl_2)
 712  8C1B CB 4F        	bit 1,a
 713  8C1D 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 714  8C1F
 715  8C1F              ; Explosión:
 716  8C1F
 717  8C1F 3A 0B 8A     	ld a,(Frames_explosion)
 718  8C22 A7           	and a
 719  8C23 20 11        	jr nz,4F
 720  8C25
 721  8C25              ; Una alimaña menos!!!!!!!!!1
 722  8C25
 723  8C25 CD 12 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 724  8C28 21 16 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 725  8C2B 35           	dec (hl)
 726  8C2C 21 17 8A     	ld hl,Entidades_en_curso
 727  8C2F 35           	dec (hl)
 728  8C30 21 15 8A     	ld hl,Numero_de_entidades
 729  8C33 35           	dec (hl)
 730  8C34 18 40        	jr 3F
 731  8C36
 732  8C36              ; -----
 733  8C36
 734  8C36              ;	`Movemos´ la explosión.
 735  8C36
 736  8C36 2A D7 89     4 ld hl,(Puntero_DESPLZ_der)
 737  8C39 23           	inc hl
 738  8C3A 23           	inc hl
 739  8C3B 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 740  8C3E CD 47 8D     	call Extrae_address
 741  8C41 22 CD 89     	ld (Puntero_objeto),hl
 742  8C44
 743  8C44 21 0B 8A     	ld hl,Frames_explosion
 744  8C47 35           	dec (hl)
 745  8C48
 746  8C48 CD A6 8C     	call Guarda_foto_entidad_a_borrar
 747  8C4B 18 29        	jr 3F
 748  8C4D
 749  8C4D AF           2 xor a
 750  8C4E 32 F8 89     	ld (Obj_dibujado),a
 751  8C51 32 F7 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 752  8C54              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 753  8C54              ; 														; _de la entidad.
 754  8C54 CD C0 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 755  8C57              ;														; Obj_dibujado="0".
 756  8C57              ; Movemos Entidades malignas.
 757  8C57
 758  8C57              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 759  8C57              ;	and a 												; _a movernos. (Limitador_de_entidades).
 760  8C57              ;	ret z
 761  8C57
 762  8C57 CD AD 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 763  8C5A
 764  8C5A 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 765  8C5D CB 67        	bit 4,a
 766  8C5F C8           	ret z
 767  8C60
 768  8C60              ; Ha habido desplazamiento de la entidad maligna.
 769  8C60              ; Ha llegado a zona de AMADEUS ???
 770  8C60
 771  8C60 3A D0 89     	ld a,(Coordenada_y)
 772  8C63 FE 14        	cp $14
 773  8C65 D4 2A 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 774  8C68              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 775  8C68              ; ---------
 776  8C68
 777  8C68 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 778  8C6A 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 779  8C6D CD C0 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 780  8C70 CD D7 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 781  8C73 CD A6 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 782  8C76 C9           3 ret													; _de la misma.
 783  8C77
 784  8C77              ; --------------------------------------------------------------------------------------------------------------
 785  8C77              ;
 786  8C77              ;	29/1/23
 787  8C77
 788  8C77              Mov_Amadeus
 789  8C77
 790  8C77 AF           	xor a
 791  8C78 32 F8 89     	ld (Obj_dibujado),a
 792  8C7B CD C0 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 793  8C7E              ;														; Obj_dibujado="0".
 794  8C7E              ; Movemos Amadeus.
 795  8C7E
 796  8C7E CD 34 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 797  8C81 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 798  8C84 CB 67        	bit 4,a
 799  8C86 C8           	ret z
 800  8C87
 801  8C87              ; ---------
 802  8C87
 803  8C87 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 804  8C89 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 805  8C8C CD C0 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 806  8C8F CD D7 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 807  8C92 CD A6 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 808  8C95 C9           	ret													; _de la nave.
 809  8C96
 810  8C96              ; -----------------------------------------------------------------------------------
 811  8C96
 812  8C96 CD 4D 8D     Inicia_entidad	call Inicia_Puntero_objeto
 813  8C99 CD 61 99     	call Recompone_posicion_inicio
 814  8C9C CD 83 93     	call Draw
 815  8C9F CD A0 7F     	call Guarda_foto_registros
 816  8CA2 CD 95 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 817  8CA5 C9           	ret
 818  8CA6
 819  8CA6              ; --------------------------------------------------------------------------------------------------------------
 820  8CA6              ;
 821  8CA6              ;	31/01/23
 822  8CA6              ;
 823  8CA6              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 824  8CA6
 825  8CA6              Guarda_foto_entidad_a_borrar
 826  8CA6
 827  8CA6 CD 67 96     	call Prepara_draw
 828  8CA9 CD 97 95     	call calcula_CColumnass
 829  8CAC CD CE 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 830  8CAF CD 2D 96     	call Define_rutina_de_impresion
 831  8CB2 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 832  8CB5 C9           	ret
 833  8CB6
 834  8CB6              ; --------------------------------------------------------------------------------------------------------------
 835  8CB6              ;
 836  8CB6              ;	31/01/23
 837  8CB6              ;
 838  8CB6              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 839  8CB6              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 840  8CB6
 841  8CB6              Guarda_foto_entidad_a_pintar
 842  8CB6
 843  8CB6 CD E3 8C     	call Repone_pintar
 844  8CB9 CD 83 93     	call Draw
 845  8CBC CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 846  8CBF C9           	ret
 847  8CC0
 848  8CC0              ; --------------------------------------------------------------------------------------------------------------
 849  8CC0              ;
 850  8CC0              ;
 851  8CC0
 852  8CC0 21 C9 89     Prepara_var_pintado_borrado	ld hl,Filas
 853  8CC3 3A F8 89     	ld a,(Obj_dibujado)
 854  8CC6 A7           	and a
 855  8CC7 28 05        	jr z,1F
 856  8CC9 11 ED 89     	ld de,Variables_de_pintado
 857  8CCC 18 03        	jr 2F
 858  8CCE 11 E3 89     1 ld de,Variables_de_borrado
 859  8CD1 01 08 00     2 ld bc,8
 860  8CD4 ED B0        	ldir
 861  8CD6 C9           	ret
 862  8CD7
 863  8CD7              ; --------------------------------------------------------------------------------------------------------------
 864  8CD7
 865  8CD7 21 E3 89     Repone_borrar ld hl,Variables_de_borrado
 866  8CDA 11 C9 89     	ld de,Filas
 867  8CDD 01 08 00     	ld bc,8
 868  8CE0 ED B0        	ldir
 869  8CE2 C9           	ret
 870  8CE3
 871  8CE3 21 ED 89     Repone_pintar ld hl,Variables_de_pintado
 872  8CE6 11 C9 89     	ld de,Filas
 873  8CE9 01 08 00     	ld bc,8
 874  8CEC ED B0        	ldir
 875  8CEE C9           	ret
 876  8CEF
 877  8CEF              ; *************************************************************************************************************************************************************
 878  8CEF              ;
 879  8CEF              ; 8/1/23
 880  8CEF              ;
 881  8CEF              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 882  8CEF              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 883  8CEF              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 884  8CEF
 885  8CEF              ; Destruye HL y DE !!!!!
 886  8CEF
 887  8CEF              Inicia_punteros_de_cajas
 888  8CEF
 889  8CEF 21 6C 85     	ld hl,Indice_de_cajas
 890  8CF2 CD 47 8D         call Extrae_address
 891  8CF5 22 0F 8A         ld (Puntero_store_caja),hl
 892  8CF8 21 6E 85     	ld hl,Indice_de_cajas+2
 893  8CFB 22 13 8A     	ld (Indice_restore_caja),hl
 894  8CFE CD 47 8D     	call Extrae_address
 895  8D01 22 11 8A     	ld (Puntero_restore_caja),hl
 896  8D04 C9               ret
 897  8D05
 898  8D05              ; *************************************************************************************************************************************************************
 899  8D05              ;
 900  8D05              ; 8/1/23
 901  8D05              ;
 902  8D05              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 903  8D05
 904  8D05 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 905  8D08 22 32 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 906  8D0B C9           	ret
 907  8D0C 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 908  8D0F 22 34 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 909  8D12 C9           	ret
 910  8D13
 911  8D13              ; -------------------------------------------------------------------------------------------------------------
 912  8D13              ;
 913  8D13              ; 3/8/23
 914  8D13              ;
 915  8D13
 916  8D13              Calcula_numero_de_malotes
 917  8D13
 918  8D13 21 00 70     	ld hl,Album_de_fotos
 919  8D16 EB           	ex de,hl
 920  8D17 2A 21 8A     	ld hl,(Stack_snapshot)
 921  8D1A
 922  8D1A 06 00        	ld b,0
 923  8D1C 7D           	ld a,l
 924  8D1D 93           	sub e
 925  8D1E 28 07        	jr z,1F
 926  8D20
 927  8D20              ; Nº de malotes no es "0".
 928  8D20
 929  8D20 D6 06        2 sub 6
 930  8D22 04           	inc b
 931  8D23 A7           	and a
 932  8D24 20 FA        	jr nz,2B
 933  8D26 78           	ld a,b
 934  8D27
 935  8D27 32 18 8A     1 ld (Numero_de_malotes),a
 936  8D2A
 937  8D2A 21 1C 74     	ld hl,Caja_de_malotes+3
 938  8D2D 77           	ld (hl),a
 939  8D2E
 940  8D2E C9           	ret
 941  8D2F
 942  8D2F              ; -------------------------------------------------------------------------------------------------------------
 943  8D2F              ;
 944  8D2F              ; 28/2/23
 945  8D2F              ;
 946  8D2F
 947  8D2F              Calcula_numero_de_disparotes
 948  8D2F
 949  8D2F 21 0D 72     	ld hl,Album_de_fotos_disparos
 950  8D32 EB           	ex de,hl
 951  8D33 2A 23 8A     	ld hl,(Stack_snapshot_disparos)
 952  8D36
 953  8D36 06 00        	ld b,0
 954  8D38 7D           	ld a,l
 955  8D39 93           	sub e
 956  8D3A 28 07        	jr z,1F
 957  8D3C
 958  8D3C              ; Nº de malotes no es "0".
 959  8D3C
 960  8D3C D6 06        2 sub 6
 961  8D3E 04           	inc b
 962  8D3F A7           	and a
 963  8D40 20 FA        	jr nz,2B
 964  8D42 78           	ld a,b
 965  8D43
 966  8D43 32 31 8A     1 ld (Numero_de_disparotes),a
 967  8D46 C9           	ret
 968  8D47              ; *************************************************************************************************************************************************************
 969  8D47              ;
 970  8D47              ; 20/10/22
 971  8D47              ;
 972  8D47              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 973  8D47              ;
 974  8D47              ; Destruye el puntero y DE !!!!!
 975  8D47
 976  8D47 5E           Extrae_address ld e,(hl)
 977  8D48 23           	inc hl
 978  8D49 56           	ld d,(hl)
 979  8D4A 2B           	dec hl
 980  8D4B EB           	ex de,hl
 981  8D4C C9           	ret
 982  8D4D
 983  8D4D              ; *************************************************************************************************************************************************************
 984  8D4D              ;
 985  8D4D              ;	7/2/23
 986  8D4D              ;
 987  8D4D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 988  8D4D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 989  8D4D              ;
 990  8D4D              ;   Destruye HL y BC !!!!!,
 991  8D4D              ;
 992  8D4D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 993  8D4D              ;					"0" ..... Izquierda.
 994  8D4D
 995  8D4D              Inicia_Puntero_objeto
 996  8D4D
 997  8D4D 3A DD 89     	ld a,(Cuad_objeto)
 998  8D50 E6 01        	and 1
 999  8D52 F5           	push af
1000  8D53 CC 71 8D     	call z,Inicia_puntero_objeto_izq
1001  8D56 F1           	pop af
1002  8D57 28 2B        	jr z,1F
1003  8D59 CD 5E 8D     	call Inicia_puntero_objeto_der
1004  8D5C 18 26        	jr 1F
1005  8D5E
1006  8D5E              ; Arrancamos desde la parte izquierda de la pantalla.
1007  8D5E              ; Iniciamos (Indice_Sprite_der).
1008  8D5E
1009  8D5E 2A D3 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1010  8D61 22 D7 89     	ld (Puntero_DESPLZ_der),hl
1011  8D64 CD 47 8D     	call Extrae_address
1012  8D67 22 CD 89     	ld (Puntero_objeto),hl
1013  8D6A
1014  8D6A 2A D5 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1015  8D6D 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
1016  8D70 C9           	ret
1017  8D71
1018  8D71              ; Arrancamos desde la parte derecha de la pantalla.
1019  8D71              ; Iniciamos (Indice_Sprite_izq).
1020  8D71
1021  8D71 2A D5 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1022  8D74 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
1023  8D77 CD 47 8D     	call Extrae_address
1024  8D7A 22 CD 89     	ld (Puntero_objeto),hl
1025  8D7D
1026  8D7D 2A D3 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1027  8D80 22 D7 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1028  8D83 C9           	ret
1029  8D84
1030  8D84              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1031  8D84
1032  8D84 21 40 83     1 ld hl,Amadeus
1033  8D87 ED 4B CD 89  	ld bc,(Puntero_objeto)
1034  8D8B B7 ED 42     	sub hl,bc
1035  8D8E C0           	ret nz
1036  8D8F 21 F7 89     	ld hl,Ctrl_0
1037  8D92 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1038  8D94 C9           	ret 												; _de nuestra nave en los extremos.
1039  8D95
1040  8D95              ; *************************************************************************************************************************************************************
1041  8D95              ;
1042  8D95              ;	14/5/23
1043  8D95              ;
1044  8D95              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1045  8D95              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1046  8D95
1047  8D95              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1048  8D95              ;	_de la 2ª y 3ª entidad respectivamente.
1049  8D95
1050  8D95              Store_Restore_cajas
1051  8D95
1052  8D95 E5           	push hl
1053  8D96 D5           	push de
1054  8D97 C5            	push bc
1055  8D98
1056  8D98              ;	STORE !!!!!
1057  8D98              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1058  8D98
1059  8D98 21 C9 89     	ld hl,Filas
1060  8D9B ED 5B 0F 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1061  8D9F 01 43 00     	ld bc,67
1062  8DA2 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1063  8DA4
1064  8DA4              ; 	Entidad_sospechosa. 20/4/23
1065  8DA4
1066  8DA4 3A E2 89     	ld a,(Impacto)
1067  8DA7 A7           	and a
1068  8DA8 28 0C        	jr z,1F
1069  8DAA
1070  8DAA 2A 0F 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1071  8DAD 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1072  8DB0 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1073  8DB1 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1074  8DB3 22 37 8A     	ld (Entidad_sospechosa_de_colision),hl
1075  8DB6
1076  8DB6              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1077  8DB6
1078  8DB6 2A 11 8A     1 ld hl,(Puntero_restore_caja)
1079  8DB9 7E           	ld a,(hl)
1080  8DBA A7           	and a
1081  8DBB F5           	push af
1082  8DBC 28 08        	jr z,2F
1083  8DBE
1084  8DBE 11 C9 89     	ld de,Filas
1085  8DC1 01 43 00     	ld bc,67
1086  8DC4 ED B0        	ldir
1087  8DC6
1088  8DC6 CD E2 8D     2 call Incrementa_punteros_de_cajas
1089  8DC9 F1           	pop af
1090  8DCA 28 EA        	jr z,1B
1091  8DCC
1092  8DCC C1           	pop bc
1093  8DCD D1           	pop de
1094  8DCE E1           	pop hl
1095  8DCF
1096  8DCF C9           	ret
1097  8DD0
1098  8DD0              ; **************************************************************************************************
1099  8DD0              ;
1100  8DD0              ;	12/05/23
1101  8DD0              ;
1102  8DD0              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1103  8DD0
1104  8DD0 E5           Restore_entidad push hl
1105  8DD1 D5           	push de
1106  8DD2 C5            	push bc
1107  8DD3
1108  8DD3 2A 0F 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1109  8DD6 11 C9 89     	ld de,Filas
1110  8DD9 01 43 00     	ld bc,67
1111  8DDC ED B0        	ldir
1112  8DDE
1113  8DDE C1           	pop bc
1114  8DDF D1           	pop de
1115  8DE0 E1           	pop hl
1116  8DE1 C9           	ret
1117  8DE2
1118  8DE2
1119  8DE2              ; **************************************************************************************************
1120  8DE2              ;
1121  8DE2              ;	08/05/23
1122  8DE2              ;
1123  8DE2              ;	Incrementamos los dos punteros de entidades. (+1).
1124  8DE2
1125  8DE2 2A 11 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1126  8DE5 22 0F 8A     	ld (Puntero_store_caja),hl
1127  8DE8 2A 13 8A     	ld hl,(Indice_restore_caja)
1128  8DEB 23           	inc hl
1129  8DEC 23           	inc hl
1130  8DED 22 13 8A     	ld (Indice_restore_caja),hl
1131  8DF0 CD 47 8D         call Extrae_address
1132  8DF3 22 11 8A         ld (Puntero_restore_caja),hl
1133  8DF6 C9               ret
1134  8DF7
1135  8DF7              ; **************************************************************************************************
1136  8DF7              ;
1137  8DF7              ;	25/01/23
1138  8DF7              ;
1139  8DF7              ;	Restore_Amadeus
1140  8DF7              ;
1141  8DF7              ;	Cargamos en DRAW los parámetros de Amadeus.
1142  8DF7              ;
1143  8DF7
1144  8DF7 E5           Restore_Amadeus	push hl
1145  8DF8 D5           	push de
1146  8DF9 C5            	push bc
1147  8DFA 21 84 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1148  8DFD 11 C9 89     	ld de,Filas
1149  8E00 01 43 00     	ld bc,67
1150  8E03 ED B0        	ldir
1151  8E05 C1           	pop bc
1152  8E06 D1           	pop de
1153  8E07 E1           	pop hl
1154  8E08 C9           	ret
1155  8E09
1156  8E09              ; *************************************************************************************************************************************************************
1157  8E09              ;
1158  8E09              ;	29/04/23
1159  8E09              ;
1160  8E09              ;	Store_Amadeus
1161  8E09              ;
1162  8E09              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1163  8E09              ;
1164  8E09              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1165  8E09              ;
1166  8E09              ;	DESTRUYE: HL y BC y DE.
1167  8E09
1168  8E09 21 C9 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1169  8E0C 01 43 00     	ld bc,67
1170  8E0F ED B0        	ldir
1171  8E11 C9           	ret
1172  8E12
1173  8E12              ; -----------------------------------------------------------
1174  8E12              ;
1175  8E12              ;	27/04/23
1176  8E12              ;
1177  8E12              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1178  8E12              ;
1179  8E12              ;	Destruye: HL,BC,DE,A
1180  8E12
1181  8E12 21 C9 89     Borra_datos_entidad ld hl,Filas
1182  8E15 01 42 00     	ld bc,66
1183  8E18 AF           	xor a
1184  8E19 77           	ld (hl),a
1185  8E1A 11 CA 89     	ld de,Filas+1
1186  8E1D ED B0        	ldir
1187  8E1F C9           	ret
1188  8E20
1189  8E20              ; -----------------------------------------------------------
1190  8E20
1191  8E20              ; Teclado.
1192  8E20
1193  8E20 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1194  8E22 DB FE        	in a,($fe)
1195  8E24 E6 01        	and $01
1196  8E26 28 02        	jr z,1f
1197  8E28 18 F6        	jr Pulsa_ENTER
1198  8E2A C9           1 ret
1199  8E2B
1200  8E2B              ; **************************************************************************************************
1201  8E2B              ;
1202  8E2B              ; Temporización.
1203  8E2B
1204  8E2B              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1205  8E2B              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1206  8E2B              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1207  8E2B              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1208  8E2B
1209  8E2B              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1210  8E2B              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1211  8E2B              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1212  8E2B
1213  8E2B              ; A partir de $4f61 no hace falta DELAY.
1214  8E2B
1215  8E2B              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1216  8E2B
1217  8E2B 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1218  8E2E 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1219  8E2F 78           	LD A,B
1220  8E30 A7           	AND A
1221  8E31 20 FB        	JR NZ,wait
1222  8E33 C9           	RET
1223  8E34
1224  8E34              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1225  8E34              ;
1226  8E34              ;	5/3/23
1227  8E34              ;
1228  8E34              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1229  8E34
1230  8E34              Movimiento_Amadeus
1231  8E34
1232  8E34              ; Disparo.
1233  8E34
1234  8E34 3A 48 8A     	ld a,(Disparo_Amadeus)
1235  8E37 A7           	and a
1236  8E38 20 02        	jr nz,1F
1237  8E3A 18 15        	jr 2F
1238  8E3C
1239  8E3C 3E F7        1 ld a,$f7													; "5" para disparar.
1240  8E3E DB FE        	in a,($fe)
1241  8E40 E6 10        	and $10
1242  8E42
1243  8E42 F5           	push af
1244  8E43 CC 8D 8E     	call z,Genera_disparo
1245  8E46 F1           	pop af
1246  8E47 20 08        	jr nz,2F
1247  8E49
1248  8E49 3A 48 8A     	ld a,(Disparo_Amadeus)
1249  8E4C EE 01        	xor 1
1250  8E4E 32 48 8A     	ld (Disparo_Amadeus),a
1251  8E51
1252  8E51 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1253  8E53 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1254  8E55 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1255  8E57 CC 1B 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1256  8E5A 3E F7        	ld a,$f7
1257  8E5C DB FE        	in a,($fe)
1258  8E5E E6 01        	and $01
1259  8E60 C8           	ret z
1260  8E61
1261  8E61 3E F7        	ld a,$f7
1262  8E63 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1263  8E65 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1264  8E67 CC FD 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1265  8E6A C9           	ret
1266  8E6B
1267  8E6B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1268  8E6B              ;
1269  8E6B              ;	Rutina provisional para que los malotes cagen balas.
1270  8E6B
1271  8E6B              Detecta_disparo_entidad
1272  8E6B
1273  8E6B 3A 4B 8A     	ld a,(Disparo_entidad)
1274  8E6E A7           	and a
1275  8E6F C8           	ret z
1276  8E70
1277  8E70              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1278  8E70
1279  8E70              ;	ld a,$7f				; Detecta SPACE.
1280  8E70              ;	in a,($fe)
1281  8E70              ;	and 1
1282  8E70              ;	ret nz
1283  8E70
1284  8E70              ;	call Genera_disparo
1285  8E70 C9           	ret
1286  8E71
1287  8E71              ; ----------------------------------------------------------------------
1288  8E71              ;
1289  8E71              ;	3/8/23
1290  8E71
1291  8E71              Frame
1292  8E71
1293  8E71              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1294  8E71              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1295  8E71
1296  8E71              ; PINTAMOS.
1297  8E71
1298  8E71 3E 02            ld a,2
1299  8E73 D3 FE            out ($fe),a											; Rojo.
1300  8E75 CD 91 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1301  8E78 CD D4 96     	call Extrae_foto_disparos
1302  8E7B 3E 01            ld a,1
1303  8E7D D3 FE            out ($fe),a											; Azul.
1304  8E7F
1305  8E7F              ; Gestiona los álbumes de fotos.
1306  8E7F
1307  8E7F CD DB 90     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1308  8E82
1309  8E82 21 00 70     	ld hl,Album_de_fotos
1310  8E85 22 21 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
1311  8E88              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
1312  8E88              ; RELOJES.
1313  8E88
1314  8E88 21 44 8A     	ld hl,Contador_de_frames
1315  8E8B 34           	inc (hl)											; 0 - 255
1316  8E8C
1317  8E8C C9           	ret
1318  8E8D
1319  8E8D              ; ---------------------------------------------------------------
1320  8E8D
1321  8E8D              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E8D              ; ******************************************************************************************************************************************************************************************
   2+ 8E8D              ;
   3+ 8E8D              ;   21/07/23
   4+ 8E8D              ;
   5+ 8E8D              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E8D              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E8D              ;
   8+ 8E8D              ;
   9+ 8E8D              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E8D              ;
  11+ 8E8D              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E8D              ;               _ hacen las entidades hacia abajo.
  13+ 8E8D              ;
  14+ 8E8D              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E8D              ;
  16+ 8E8D              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E8D              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E8D              ;
  19+ 8E8D              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E8D              ;           _ la bala.
  21+ 8E8D              ;
  22+ 8E8D              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E8D              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E8D              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E8D              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E8D              ;           _ en el momento de generarse la bala)).
  27+ 8E8D
  28+ 8E8D              Genera_disparo
  29+ 8E8D
  30+ 8E8D              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E8D              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E8D              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E8D              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E8D              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E8D              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E8D              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E8D
  38+ 8E8D              ; Exclusiones:
  39+ 8E8D
  40+ 8E8D 3A E1 89         ld a,(Vel_down)
  41+ 8E90 47               ld b,a
  42+ 8E91 3A 43 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E94 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E95 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E96 3A 06 8A         ld a,(Columnas)
  46+ 8E99 47               ld b,a
  47+ 8E9A 3A CA 89         ld a,(Columns)
  48+ 8E9D B8               cp b
  49+ 8E9E C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E9F
  51+ 8E9F              ; ----- ----- -----
  52+ 8E9F
  53+ 8E9F 3A F7 89         ld a,(Ctrl_0)
  54+ 8EA2 CB 77            bit 6,a
  55+ 8EA4 20 06            jr nz,14F
  56+ 8EA6
  57+ 8EA6 3A D0 89         ld a,(Coordenada_y)
  58+ 8EA9 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EAB D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EAC
  61+ 8EAC 21 00 80     14 ld hl,Indice_disparo
  62+ 8EAF 3A D1 89         ld a,(CTRL_DESPLZ)
  63+ 8EB2 4F               ld c,a
  64+ 8EB3 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EB5              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EB5              ;                                            ""        ""       "f9", B="1"
  67+ 8EB5              ;                                            ""        ""       "fb", B="2"
  68+ 8EB5              ;                                            ""        ""       "fb", B="3"
  69+ 8EB5 A7               and a
  70+ 8EB6 28 10            jr z,1F
  71+ 8EB8 E6 01            and 1
  72+ 8EBA C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EBB
  74+ 8EBB 79               ld a,c
  75+ 8EBC 16 F9            ld d,$f9
  76+ 8EBE 23           2 inc hl
  77+ 8EBF 23               inc hl
  78+ 8EC0 04               inc b
  79+ 8EC1 BA               cp d
  80+ 8EC2 28 04            jr z,1F
  81+ 8EC4 14               inc d
  82+ 8EC5 14               inc d
  83+ 8EC6 18 F6            jr 2B
  84+ 8EC8
  85+ 8EC8 CD 47 8D     1 call Extrae_address
  86+ 8ECB E5               push hl
  87+ 8ECC FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8ECE DD 21 16 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8ED2
  90+ 8ED2              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8ED2              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8ED2
  93+ 8ED2 3A F7 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8ED5 CB 77            bit 6,a
  95+ 8ED7 20 04            jr nz,19F
  96+ 8ED9
  97+ 8ED9 AF               xor a
  98+ 8EDA 32 4B 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EDD
 100+ 8EDD 3A DD 89     19 ld a,(Cuad_objeto)
 101+ 8EE0 FE 02            cp 2
 102+ 8EE2 38 66            jr c,3F
 103+ 8EE4 28 64            jr z,3F
 104+ 8EE6
 105+ 8EE6              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EE6
 107+ 8EE6 E6 01            and 1
 108+ 8EE8 28 30            jr z,4F
 109+ 8EEA
 110+ 8EEA              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EEA              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EEA              ;
 113+ 8EEA              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EEA              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EEA              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EEA
 117+ 8EEA 2A CB 89     	ld hl,(Posicion_actual)
 118+ 8EED
 119+ 8EED              ;   Amadeus o entidad ???.
 120+ 8EED
 121+ 8EED 3A F7 89         ld a,(Ctrl_0)
 122+ 8EF0 CB 77            bit 6,a
 123+ 8EF2 28 0A            jr z,8F
 124+ 8EF4
 125+ 8EF4              ; 	Dispara Amadeus.
 126+ 8EF4
 127+ 8EF4 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EF6 CD 82 96         call PreviousScan
 129+ 8EF9 CD 82 96         call PreviousScan
 130+ 8EFC
 131+ 8EFC              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EFC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EFC              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EFC              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EFC
 136+ 8EFC 18 11            jr 10F
 137+ 8EFE
 138+ 8EFE              ; 	Dispara Entidad.
 139+ 8EFE
 140+ 8EFE 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F01              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F01
 143+ 8F01              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F01              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F01
 146+ 8F01 C5               push bc
 147+ 8F02 06 10            ld b,16
 148+ 8F04 CD 73 96     9 call NextScan
 149+ 8F07 10 FB            djnz 9B
 150+ 8F09 C1               pop bc
 151+ 8F0A CD 74 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F0D 18 06            jr 17F
 153+ 8F0F
 154+ 8F0F              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F0F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F0F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F0F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F0F
 159+ 8F0F CD 74 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F12 CD E9 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F15              ;                                                      ; _al generar el disparo.
 162+ 8F15
 163+ 8F15              ; 	LLegados a este punto tendremos:
 164+ 8F15              ;
 165+ 8F15              ;       Puntero_objeto_disparo en IY.
 166+ 8F15              ;       Rutinas_de_impresion en IX.
 167+ 8F15              ;       Puntero_de_impresion en HL.
 168+ 8F15              ;       Impacto/Dirección en BC.
 169+ 8F15
 170+ 8F15 CD 7C 8F     17 call Almacena_disparo
 171+ 8F18 18 52            jr 6F                                             ; RET.
 172+ 8F1A
 173+ 8F1A              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F1A              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F1A              ;
 176+ 8F1A              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F1A              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F1A              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F1A
 180+ 8F1A 2A CB 89     4 ld hl,(Posicion_actual)
 181+ 8F1D
 182+ 8F1D              ;   Amadeus o entidad ???.
 183+ 8F1D
 184+ 8F1D 3A F7 89         ld a,(Ctrl_0)
 185+ 8F20 CB 77            bit 6,a
 186+ 8F22 28 0A            jr z,11F
 187+ 8F24
 188+ 8F24              ; 	Dispara Amadeus.
 189+ 8F24
 190+ 8F24 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F26 CD 82 96         call PreviousScan
 192+ 8F29 CD 82 96         call PreviousScan
 193+ 8F2C
 194+ 8F2C              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F2C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F2C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F2C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F2C
 199+ 8F2C 18 11            jr 13F
 200+ 8F2E
 201+ 8F2E              ; 	Dispara Entidad.
 202+ 8F2E
 203+ 8F2E 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F31              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F31
 206+ 8F31              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F31              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F31
 209+ 8F31 C5               push bc
 210+ 8F32 06 10            ld b,16
 211+ 8F34 CD 73 96     12 call NextScan
 212+ 8F37 10 FB            djnz 12B
 213+ 8F39 C1               pop bc
 214+ 8F3A
 215+ 8F3A CD 6D 8F         call Ajusta_disparo_parte_derecha
 216+ 8F3D 18 06            jr 18F
 217+ 8F3F
 218+ 8F3F              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F3F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F3F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F3F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F3F
 223+ 8F3F CD 6D 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F42 CD E9 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F45              ;                                                       ; _al generar el disparo.
 226+ 8F45
 227+ 8F45              ; LLegados a este punto tendremos:
 228+ 8F45              ;
 229+ 8F45              ;       Puntero_objeto_disparo en IY.
 230+ 8F45              ;       Rutinas_de_impresion en IX.
 231+ 8F45              ;       Puntero_de_impresion en HL.
 232+ 8F45              ;       Impacto/Dirección en BC.
 233+ 8F45
 234+ 8F45 CD 7C 8F     18 call Almacena_disparo
 235+ 8F48 18 22            jr 6F                                               ; RET.
 236+ 8F4A
 237+ 8F4A              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F4A
 239+ 8F4A 28 11        3 jr z,5F
 240+ 8F4C
 241+ 8F4C              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F4C              ;
 243+ 8F4C              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F4C              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F4C              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F4C              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F4C
 248+ 8F4C              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F4C              ;	   ""        ""       "f9", B="1"
 250+ 8F4C              ;	   ""        ""       "fb", B="2"
 251+ 8F4C              ; 	   ""        ""       "fb", B="3"
 252+ 8F4C
 253+ 8F4C 2A CB 89     	ld hl,(Posicion_actual)
 254+ 8F4F CD 73 96     	call NextScan
 255+ 8F52
 256+ 8F52              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F52              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F52              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F52              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F52
 261+ 8F52 CD 74 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F55
 263+ 8F55              ; 	No se produce impacto. B="$80"
 264+ 8F55              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F55
 266+ 8F55 01 80 80         ld bc,$8080
 267+ 8F58
 268+ 8F58              ; 	LLegados a este punto tendremos:
 269+ 8F58              ;
 270+ 8F58              ;       Puntero_objeto_disparo en IY.
 271+ 8F58              ;       Rutinas_de_impresion en IX.
 272+ 8F58              ;       Puntero_de_impresion en HL.
 273+ 8F58              ;       Impacto/Dirección en BC.
 274+ 8F58
 275+ 8F58 CD 7C 8F         call Almacena_disparo
 276+ 8F5B 18 0F            jr 6F                                           ; RET.
 277+ 8F5D
 278+ 8F5D              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F5D              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F5D              ;
 281+ 8F5D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F5D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F5D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F5D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F5D
 286+ 8F5D 2A CB 89     5 ld hl,(Posicion_actual)
 287+ 8F60 CD 73 96     	call NextScan
 288+ 8F63
 289+ 8F63              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F63              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F63              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F63              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F63
 294+ 8F63 CD 6D 8F         call Ajusta_disparo_parte_derecha
 295+ 8F66
 296+ 8F66              ; 	No se produce impacto. B="$80"
 297+ 8F66              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F66
 299+ 8F66 01 80 80     15 ld bc,$8080
 300+ 8F69
 301+ 8F69              ; 	LLegados a este punto tendremos:
 302+ 8F69              ;
 303+ 8F69              ;       Puntero_objeto_disparo en IY.
 304+ 8F69              ;       Rutinas_de_impresion en IX.
 305+ 8F69              ;       Puntero_de_impresion en HL.
 306+ 8F69              ;       Impacto/Dirección en BC.
 307+ 8F69
 308+ 8F69 CD 7C 8F         call Almacena_disparo
 309+ 8F6C
 310+ 8F6C C9           6 ret
 311+ 8F6D
 312+ 8F6D              ; ----------------------------------------------------------------
 313+ 8F6D              ;
 314+ 8F6D              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F6D              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F6D              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F6D
 318+ 8F6D 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F6E FE 02            cp 2
 320+ 8F70 38 01            jr c,1F
 321+ 8F72 23               inc hl
 322+ 8F73 C9           1 ret
 323+ 8F74
 324+ 8F74 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F75 FE 01        	cp 1
 326+ 8F77 20 01        	jr nz,1F
 327+ 8F79 2B           	dec hl
 328+ 8F7A 2B           1 dec hl
 329+ 8F7B C9               ret
 330+ 8F7C
 331+ 8F7C              ; ----------------------------------------------------------------
 332+ 8F7C              ;
 333+ 8F7C              ;   25/02/23
 334+ 8F7C              ;
 335+ 8F7C              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F7C              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F7C              ;
 338+ 8F7C              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F7C              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F7C
 341+ 8F7C              Almacena_disparo
 342+ 8F7C
 343+ 8F7C E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F7D F1               pop af
 345+ 8F7E 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F7F
 347+ 8F7F 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F80 E6 01            and 1
 349+ 8F82 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F84              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F84              ; 	Dispara AMADEUS.
 352+ 8F84
 353+ 8F84              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F84              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F84              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F84              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F84
 358+ 8F84 C5               push bc
 359+ 8F85 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F88 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F8B A7               and a
 362+ 8F8C ED 42            sbc hl,bc
 363+ 8F8E CC 0C 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F91 C1               pop bc
 365+ 8F92 28 54            jr z,4F
 366+ 8F94
 367+ 8F94 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F97 23               inc hl
 369+ 8F98 23               inc hl
 370+ 8F99 22 34 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F9C              ;                                                   ; _ Disparo_(+1).
 372+ 8F9C 18 18            jr 2F
 373+ 8F9E
 374+ 8F9E              ; Dispara una entidad.
 375+ 8F9E
 376+ 8F9E C5           1 push bc
 377+ 8F9F 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FA2 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FA5 A7               and a
 380+ 8FA6 ED 42            sbc hl,bc
 381+ 8FA8 CC 05 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FAB C1               pop bc
 383+ 8FAC 28 3A            jr z,4F
 384+ 8FAE
 385+ 8FAE 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FB1 23               inc hl
 387+ 8FB2 23               inc hl
 388+ 8FB3 22 32 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FB6              ;                                                   ; _ Disparo_(+1).
 390+ 8FB6 CD 47 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FB9              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FB9              ;
 393+ 8FB9              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FB9              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FB9              ;                                                     Puntero_de_impresion en HL.
 396+ 8FB9              ;                                                     Impacto/Dirección en BC.
 397+ 8FB9
 398+ 8FB9 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FBA 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FBB 23               inc hl                                          ; _ al siguiente.
 401+ 8FBC A7               and a
 402+ 8FBD 20 C0            jr nz,3B
 403+ 8FBF
 404+ 8FBF 08               ex af,af
 405+ 8FC0 ED 73 1D 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FC4 F9               ld sp,hl
 407+ 8FC5
 408+ 8FC5 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FC7 F5               push af                                         ; Puntero de impresión.
 410+ 8FC8 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FCA C5               push bc                                         ; Control.
 412+ 8FCB
 413+ 8FCB ED 7B 1D 8A      ld sp,(Stack)
 414+ 8FCF
 415+ 8FCF              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FCF
 417+ 8FCF 21 0C 8A     	ld hl,Ctrl_1
 418+ 8FD2 CB C6        	set 0,(hl)
 419+ 8FD4
 420+ 8FD4 DD E5        	push ix
 421+ 8FD6 E1               pop hl
 422+ 8FD7 F5               push af
 423+ 8FD8 DD E1            pop ix
 424+ 8FDA
 425+ 8FDA CD A0 7F     	call Guarda_foto_registros
 426+ 8FDD
 427+ 8FDD 21 0C 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FE0 CB 86        	res 0,(hl)
 429+ 8FE2
 430+ 8FE2              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FE2              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FE2
 433+ 8FE2 CD 0C 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FE5 CD 05 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 8FE8
 436+ 8FE8 C9           4 ret
 437+ 8FE9
 438+ 8FE9              ; ----------------------------------------------------------------
 439+ 8FE9              ;
 440+ 8FE9              ;   4/3/23
 441+ 8FE9              ;
 442+ 8FE9              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FE9              ;   _ al generarse el disparo.
 444+ 8FE9              ;
 445+ 8FE9              ;       "$80" ..... No se produce colisión.
 446+ 8FE9              ;       "$81" ..... Se produce colisión.
 447+ 8FE9              ;
 448+ 8FE9              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FE9              ;         _ que forman el disparo.
 450+ 8FE9
 451+ 8FE9
 452+ 8FE9              Comprueba_Colision
 453+ 8FE9
 454+ 8FE9              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FE9
 456+ 8FE9 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FEB E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FEC
 459+ 8FEC CD 22 90         call Modifica_H_Velocidad_disparo
 460+ 8FEF
 461+ 8FEF 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FF0 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FF2 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FF4
 465+ 8FF4 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FF6 CD 12 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FF9
 468+ 8FF9 7B               ld a,e
 469+ 8FFA E6 01            and 1
 470+ 8FFC 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FFE              ;                                                  ; _ para activar IMPACTO.
 472+ 8FFE E1               pop hl
 473+ 8FFF E5               push hl
 474+ 9000 CD 73 96         call NextScan
 475+ 9003
 476+ 9003 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9004 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9006 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9008              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9008 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 900A CD 12 90         call Bucle_2
 482+ 900D
 483+ 900D 43           1 ld b,e
 484+ 900E E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 900F FD E1            pop iy
 486+ 9011 C9               ret
 487+ 9012
 488+ 9012              ; ---------- ----------
 489+ 9012
 490+ 9012 06 02        Bucle_2 ld b,2
 491+ 9014 FD 7E 00     2 ld a,(iy)
 492+ 9017 A6               and (hl)
 493+ 9018 28 02            jr z,1F
 494+ 901A 1E 81            ld e,$81
 495+ 901C 23           1 inc hl
 496+ 901D FD 23            inc iy
 497+ 901F 10 F3            djnz 2B
 498+ 9021 C9               ret
 499+ 9022
 500+ 9022              ; ---------- ----------
 501+ 9022              ;
 502+ 9022              ;   21/7/23
 503+ 9022
 504+ 9022              Modifica_H_Velocidad_disparo
 505+ 9022
 506+ 9022 3A 43 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9025 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9027 D0               ret nc                                         ; _ incrementamos H.
 509+ 9028 24               inc h
 510+ 9029
 511+ 9029 C9               ret
 512+ 902A
 513+ 902A              ; -------------------------------------------------------------------------------------------------------------
 514+ 902A              ;
 515+ 902A              ;   11/04/23
 516+ 902A              ;
 517+ 902A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 902A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 902A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 902A              ;
 521+ 902A              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 902A
 523+ 902A              Compara_coordenadas_X
 524+ 902A
 525+ 902A              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 902A              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 902A
 528+ 902A              ; Preparamos registros:
 529+ 902A
 530+ 902A 21 CF 89         ld hl,Filas+6
 531+ 902D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 902E 23               inc hl
 533+ 902F 23               inc hl
 534+ 9030 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9031 43               ld b,e
 536+ 9032
 537+ 9032 21 DD 89         ld hl,Filas+20
 538+ 9035 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9036 21 3E 8A         ld hl,Coordenadas_X_Entidad
 540+ 9039 CD 55 92         call Guarda_coordenadas_X
 541+ 903C
 542+ 903C              ; Preparamos registros:
 543+ 903C
 544+ 903C 21 8A 85         ld hl,Amadeus_db+6
 545+ 903F 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9040 23               inc hl
 547+ 9041 23               inc hl
 548+ 9042 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9043 7B               ld a,e
 550+ 9044 08               ex af,af'
 551+ 9045 21 98 85         ld hl,Amadeus_db+20
 552+ 9048 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9049 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 554+ 904C CD 55 92         call Guarda_coordenadas_X
 555+ 904F
 556+ 904F              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 904F              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 904F
 559+ 904F 04               inc b
 560+ 9050 05               dec b
 561+ 9051 28 04            jr z,1F
 562+ 9053 06 03            ld b,3
 563+ 9055 18 02            jr 2F
 564+ 9057 06 02        1 ld b,2
 565+ 9059 08           2 ex af,af'
 566+ 905A 3C               inc a
 567+ 905B 3D               dec a
 568+ 905C 28 04            jr z,5F
 569+ 905E 0E 03            ld c,3
 570+ 9060 18 02            jr 6F
 571+ 9062 0E 02        5 ld c,2
 572+ 9064 79           6 ld a,c
 573+ 9065 08               ex af,af'
 574+ 9066 11 3E 8A         ld de,Coordenadas_X_Entidad
 575+ 9069 1A           4 ld a,(de)
 576+ 906A 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 577+ 906D BE           3 cp (hl)
 578+ 906E 28 0E            jr z,7F
 579+ 9070 23               inc hl
 580+ 9071 0D               dec c
 581+ 9072 20 F9            jr nz,3B
 582+ 9074 13               inc de
 583+ 9075 08               ex af,af'
 584+ 9076 4F               ld c,a
 585+ 9077 08               ex af,af'
 586+ 9078 10 EF            djnz 4B
 587+ 907A
 588+ 907A              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 907A
 590+ 907A CD 91 92     8 call Limpia_Coordenadas_X
 591+ 907D C9               ret
 592+ 907E
 593+ 907E 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9080 32 E2 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9083 21 36 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9086 CB D6            set 2,(hl)
 597+ 9088 18 F0            jr 8B
 598+ 908A
 599+ 908A              ; -----------------------------------------------------------------------
 600+ 908A              ;
 601+ 908A              ;   17/04/23
 602+ 908A              ;
 603+ 908A
 604+ 908A              Detecta_colision_nave_entidad
 605+ 908A
 606+ 908A              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 908A
 608+ 908A 2A CB 89         ld hl,(Posicion_actual)
 609+ 908D CD CE 95         call Calcula_puntero_de_impresion
 610+ 9090
 611+ 9090              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9090              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9090
 614+ 9090 DD E5            push ix
 615+ 9092 E1               pop hl
 616+ 9093 E5               push hl
 617+ 9094
 618+ 9094              ; ----- ----- -----
 619+ 9094 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9096 06 0A            ld b,10
 621+ 9098 CD C8 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 909B 7B               ld a,e
 623+ 909C FE 05            cp 5
 624+ 909E 38 0E            jr c,3F
 625+ 90A0
 626+ 90A0              ; LLegados a este punto:
 627+ 90A0              ;
 628+ 90A0              ;   HAY COLISIÓN !!!!!.
 629+ 90A0              ;
 630+ 90A0              ;   .db (Impacto) de Amadeus a "1".
 631+ 90A0              ;   SET el bit3 de (Impacto2).
 632+ 90A0              ;
 633+ 90A0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90A0
 635+ 90A0 21 9D 85         ld hl,Amadeus_db+25
 636+ 90A3 36 01            ld (hl),1
 637+ 90A5 21 36 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90A8 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90AA CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90AC 18 18            jr 1F
 641+ 90AE
 642+ 90AE              ; -----
 643+ 90AE
 644+ 90AE E1           3 pop hl
 645+ 90AF CD 73 96         call NextScan
 646+ 90B2 E5               push hl
 647+ 90B3 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90B4 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90B6 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90B8 30 0C            jr nc,1F
 651+ 90BA              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90BA 10 DC            djnz 2B
 653+ 90BC
 654+ 90BC              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90BC
 656+ 90BC              ; LLegados a este punto:
 657+ 90BC              ;
 658+ 90BC              ;   NO HAY COLISIÓN !!!!!.
 659+ 90BC              ;
 660+ 90BC              ;   .db (Impacto) de Amadeus a "0".
 661+ 90BC              ;   RES el bit2 de (Impacto2).
 662+ 90BC              ;
 663+ 90BC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90BC              ;   Lo colocamos a "0".
 665+ 90BC
 666+ 90BC 21 36 8A         ld hl,Impacto2
 667+ 90BF CB 96            res 2,(hl)
 668+ 90C1 2A 37 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90C4 36 00            ld (hl),0
 670+ 90C6
 671+ 90C6 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90C7 C9               ret
 673+ 90C8
 674+ 90C8               ; ---------- ----------
 675+ 90C8
 676+ 90C8 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90C9 3A CA 89         ld a,(Columns)
 678+ 90CC 47               ld b,a
 679+ 90CD FD 7E 00     2 ld a,(iy)
 680+ 90D0 BE               cp (hl)
 681+ 90D1 28 01            jr z,1F
 682+ 90D3
 683+ 90D3 1C               inc e
 684+ 90D4
 685+ 90D4 23           1 inc hl
 686+ 90D5 FD 23            inc iy
 687+ 90D7 10 F4            djnz 2B
 688+ 90D9 C1               pop bc
 689+ 90DA C9               ret
 690+ 90DB
 691+ 90DB              ; -------------------------------------------------------------------------------------------------------------
 692+ 90DB              ;
 693+ 90DB              ;   13/03/23
 694+ 90DB              ;
 695+ 90DB              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90DB              ;
 697+ 90DB              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90DB
 699+ 90DB 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90DE 7E               ld a,(hl)
 701+ 90DF A7               and a
 702+ 90E0 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90E1
 704+ 90E1 44               ld b,h
 705+ 90E2 4D               ld c,l
 706+ 90E3 2A 23 8A         ld hl,(Stack_snapshot_disparos)
 707+ 90E6 E5               push hl
 708+ 90E7 A7               and a
 709+ 90E8 ED 42            sbc hl,bc
 710+ 90EA E5               push hl
 711+ 90EB C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90EC
 713+ 90EC E1               pop hl
 714+ 90ED 54               ld d,h
 715+ 90EE 5D               ld e,l
 716+ 90EF 1B               dec de
 717+ 90F0 ED B8            lddr                                                ; Limpiamos.
 718+ 90F2
 719+ 90F2 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 90F5 22 23 8A         ld (Stack_snapshot_disparos),hl
 721+ 90F8
 722+ 90F8 C9               ret
 723+ 90F9
 724+ 90F9              ; -------------------------------------------------------------------------------------------------------------
 725+ 90F9              ;
 726+ 90F9              ;   18/07/23
 727+ 90F9              ;
 728+ 90F9
 729+ 90F9              Motor_de_disparos
 730+ 90F9
 731+ 90F9              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90F9
 733+ 90F9 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90FC 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90FF
 736+ 90FF CD 47 8D     2 call Extrae_address
 737+ 9102 7E               ld a,(hl)
 738+ 9103 A7               and a
 739+ 9104 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9106
 741+ 9106              ; ----- ----- ----- ----- ----- -----
 742+ 9106
 743+ 9106 C5               push bc
 744+ 9107 CD CB 91         call foto_disparo_a_borrar
 745+ 910A
 746+ 910A              ; Existe colisión con este disparo???
 747+ 910A
 748+ 910A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 910B 7E               ld a,(hl)
 750+ 910C 2B               dec hl
 751+ 910D E6 01            and 1
 752+ 910F 28 1D            jr z,9F
 753+ 9111
 754+ 9111              ;   En este punto:
 755+ 9111              ;
 756+ 9111              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9111              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9111              ;   _con la entidad).
 759+ 9111              ;
 760+ 9111              ;   Disparo_2A defw 0                                ; Control.
 761+ 9111              ;    defw 0                                          ; Puntero objeto.
 762+ 9111              ;    defw 0                                          ; Puntero de impresión.
 763+ 9111              ;    defw 0                                          ; Rutina de impresión.
 764+ 9111
 765+ 9111 E5               push hl
 766+ 9112
 767+ 9112 06 04            ld b,4
 768+ 9114 23           19 inc hl
 769+ 9115 10 FD            djnz 19B
 770+ 9117
 771+ 9117 CD 47 8D         call Extrae_address
 772+ 911A CD F9 9C         call Genera_coordenadas_disparo
 773+ 911D
 774+ 911D              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 911D
 776+ 911D 21 39 8A         ld hl,Coordenadas_disparo_certero
 777+ 9120 72               ld (hl),d
 778+ 9121 23               inc hl
 779+ 9122 73               ld (hl),e
 780+ 9123
 781+ 9123              ; Elimino el disparo de la base de datos.
 782+ 9123
 783+ 9123 E1               pop hl
 784+ 9124 CD 4A 92         call Elimina_disparo_de_base_de_datos
 785+ 9127 21 36 8A         ld hl,Impacto2
 786+ 912A CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 912C
 788+ 912C 18 06            jr 11F
 789+ 912E
 790+ 912E CD F4 91     9 call Mueve_disparo
 791+ 9131 CD CB 91         call foto_disparo_a_borrar
 792+ 9134
 793+ 9134 C1           11 pop bc
 794+ 9135 18 04            jr 7F
 795+ 9137
 796+ 9137              ; ----- ----- ----- ----- ----- -----
 797+ 9137
 798+ 9137 ED 42        1 sbc hl,bc
 799+ 9139 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 913B
 801+ 913B 2A 34 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 913E 23               inc hl
 803+ 913F 23               inc hl
 804+ 9140 22 34 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9143 18 BA            jr 2B
 806+ 9145
 807+ 9145 CD 0C 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9148              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9148
 810+ 9148              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9148
 812+ 9148 01 6A 85         ld bc,Disparo_11
 813+ 914B 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 914E
 815+ 914E CD 47 8D     5 call Extrae_address
 816+ 9151 7E               ld a,(hl)
 817+ 9152 A7               and a
 818+ 9153 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9155
 820+ 9155              ; ----- ----- ----- ----- ----- -----
 821+ 9155
 822+ 9155 C5               push bc
 823+ 9156 CD CB 91         call foto_disparo_a_borrar
 824+ 9159
 825+ 9159              ; Existe colisión con este disparo???
 826+ 9159
 827+ 9159 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 915A 7E               ld a,(hl)
 829+ 915B 2B               dec hl
 830+ 915C E6 01            and 1
 831+ 915E 28 4D            jr z,10F
 832+ 9160
 833+ 9160              ;! La colisión se produce con Amadeus???
 834+ 9160              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9160
 836+ 9160 E5               push hl
 837+ 9161
 838+ 9161 06 04            ld b,4
 839+ 9163 23           16 inc hl
 840+ 9164 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9166
 842+ 9166 CD 47 8D         call Extrae_address
 843+ 9169 CD F9 9C         call Genera_coordenadas_disparo
 844+ 916C
 845+ 916C 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 916D FE 16            cp $16
 847+ 916F 38 2A            jr c,15F
 848+ 9171
 849+ 9171
 850+ 9171              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9171
 852+ 9171 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9172
 854+ 9172              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9172
 856+ 9172
 857+ 9172 2A 41 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9175
 859+ 9175              ; Coordenada X de Amadeus en D.
 860+ 9175
 861+ 9175 7D               ld a,l
 862+ 9176 E6 1F            and $1F
 863+ 9178 57               ld d,a
 864+ 9179
 865+ 9179 21 8C 85         ld hl,Amadeus_db+8
 866+ 917C 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 917D
 868+ 917D 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9180 CD 55 92         call Guarda_coordenadas_X
 870+ 9183
 871+ 9183 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9184
 873+ 9184              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9184
 875+ 9184 06 02            ld b,2
 876+ 9186 C5           20 push bc
 877+ 9187
 878+ 9187 06 03            ld b,3
 879+ 9189 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 880+ 918C 7E           18 ld a,(hl)
 881+ 918D BA               cp d
 882+ 918E 20 04            jr nz,17F
 883+ 9190
 884+ 9190              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9190
 886+ 9190 C1               pop bc
 887+ 9191 E1               pop hl
 888+ 9192 18 0D            jr 14F
 889+ 9194
 890+ 9194 23           17 inc hl
 891+ 9195 10 F5            djnz 18B
 892+ 9197
 893+ 9197 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9198
 895+ 9198 C1               pop bc
 896+ 9199 10 EB            djnz 20B
 897+ 919B
 898+ 919B
 899+ 919B              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 919B              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 919B
 902+ 919B E1           15 pop hl
 903+ 919C 23               inc hl
 904+ 919D 35               dec (hl)
 905+ 919E 2B               dec hl
 906+ 919F 18 0C            jr 10F
 907+ 91A1
 908+ 91A1              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91A1              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91A1
 911+ 91A1 E5           14 push hl
 912+ 91A2 CD 4A 92         call Elimina_disparo_de_base_de_datos
 913+ 91A5 21 36 8A         ld hl,Impacto2
 914+ 91A8 CB CE            set 1,(hl)
 915+ 91AA E1               pop hl
 916+ 91AB 18 06            jr 12F
 917+ 91AD
 918+ 91AD              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91AD
 920+ 91AD CD F4 91     10 call Mueve_disparo
 921+ 91B0 CD CB 91         call foto_disparo_a_borrar
 922+ 91B3 C1           12 pop bc
 923+ 91B4
 924+ 91B4 18 04            jr 8F
 925+ 91B6
 926+ 91B6              ; ----- ----- ----- ----- ----- -----
 927+ 91B6
 928+ 91B6 ED 42        4 sbc hl,bc
 929+ 91B8 28 0A            jr z,6F
 930+ 91BA
 931+ 91BA 2A 32 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91BD 23               inc hl
 933+ 91BE 23               inc hl
 934+ 91BF 22 32 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91C2 18 8A            jr 5B
 936+ 91C4
 937+ 91C4 CD 05 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91C7 CD 91 92         call Limpia_Coordenadas_X
 939+ 91CA C9               ret
 940+ 91CB
 941+ 91CB              ; ------------------------------------------------------------------
 942+ 91CB
 943+ 91CB              foto_disparo_a_borrar
 944+ 91CB
 945+ 91CB 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91CC A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91CD C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91CE
 949+ 91CE E5               push hl
 950+ 91CF 23               inc hl
 951+ 91D0 23               inc hl
 952+ 91D1 ED 73 1D 8A      ld (Stack),sp
 953+ 91D5 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91D6 FD E1            pop iy
 955+ 91D8 DD E1            pop ix
 956+ 91DA E1               pop hl
 957+ 91DB ED 7B 1D 8A      ld sp,(Stack)
 958+ 91DF 3A 0C 8A         ld a,(Ctrl_1)
 959+ 91E2 CB C7            set 0,a
 960+ 91E4 32 0C 8A         ld (Ctrl_1),a
 961+ 91E7 CD A0 7F         call Guarda_foto_registros
 962+ 91EA 3A 0C 8A         ld a,(Ctrl_1)
 963+ 91ED CB 87            res 0,a
 964+ 91EF 32 0C 8A         ld (Ctrl_1),a
 965+ 91F2 E1               pop hl
 966+ 91F3 C9               ret
 967+ 91F4
 968+ 91F4              ;---------------------------------------------------
 969+ 91F4              ;
 970+ 91F4              ;   18/07/23
 971+ 91F4              ;
 972+ 91F4
 973+ 91F4              Mueve_disparo
 974+ 91F4
 975+ 91F4              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91F4              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91F4              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91F4
 979+ 91F4 E5               push hl
 980+ 91F5
 981+ 91F5 7E               ld a,(hl)
 982+ 91F6
 983+ 91F6 06 04            ld b,4
 984+ 91F8 23           1 inc hl
 985+ 91F9 10 FD            djnz 1B
 986+ 91FB
 987+ 91FB              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91FB
 989+ 91FB CD 47 8D         call Extrae_address
 990+ 91FE
 991+ 91FE E6 01            and 1
 992+ 9200 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9202
 994+ 9202              ; Disparo hacia arriba, (Amadeus).
 995+ 9202
 996+ 9202              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9202              ; _ de la dificultad.
 998+ 9202
 999+ 9202 CD 82 96         call PreviousScan
1000+ 9205 CD 82 96         call PreviousScan
1001+ 9208 CD 82 96         call PreviousScan
1002+ 920B CD 82 96         call PreviousScan
1003+ 920E
1004+ 920E              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 920E
1006+ 920E 7C               ld a,h
1007+ 920F FE 40            cp $40
1008+ 9211 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9213
1010+ 9213              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9213
1012+ 9213 EB               ex de,hl
1013+ 9214 06 04            ld b,4
1014+ 9216 2B           6 dec hl
1015+ 9217 10 FD            djnz 6B
1016+ 9219
1017+ 9219 CD 4A 92         call Elimina_disparo_de_base_de_datos
1018+ 921C E1               pop hl
1019+ 921D 18 10            jr 7F
1020+ 921F
1021+ 921F              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 921F              ; HL contiene el puntero de impresión del disparo.
1023+ 921F              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 921F
1025+ 921F D5           3 push de
1026+ 9220 C5               push bc
1027+ 9221
1028+ 9221 CD E9 8F         call Comprueba_Colision
1029+ 9224
1030+ 9224              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9224
1032+ 9224 78               ld a,b
1033+ 9225
1034+ 9225 C1               pop bc
1035+ 9226 D1               pop de
1036+ 9227
1037+ 9227 EB               ex de,hl
1038+ 9228
1039+ 9228 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9229 23               inc hl                                      ; _ movimiento.
1041+ 922A 72               ld (hl),d
1042+ 922B
1043+ 922B E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 922C
1045+ 922C 23               inc hl                                      ; _ en curso.
1046+ 922D 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 922E 2B               dec hl
1048+ 922F
1049+ 922F C9           7 ret
1050+ 9230
1051+ 9230              ; Disparo hacia abajo, (Entidad).
1052+ 9230
1053+ 9230 3A 43 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 9233 47               ld b,a
1055+ 9234
1056+ 9234 CD 73 96     4 call NextScan
1057+ 9237 10 FB            djnz 4B
1058+ 9239
1059+ 9239              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9239
1061+ 9239 7C               ld a,h
1062+ 923A FE 58            cp $58
1063+ 923C 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 923E
1065+ 923E EB               ex de,hl
1066+ 923F 06 04            ld b,4
1067+ 9241 2B           5 dec hl
1068+ 9242 10 FD            djnz 5B
1069+ 9244
1070+ 9244 CD 4A 92         call Elimina_disparo_de_base_de_datos
1071+ 9247 E1               pop hl
1072+ 9248 18 E5            jr 7B
1073+ 924A
1074+ 924A              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 924A
1076+ 924A 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 924D AF               xor a
1078+ 924E 77               ld (hl),a
1079+ 924F 54               ld d,h
1080+ 9250 5D               ld e,l
1081+ 9251 13               inc de
1082+ 9252 ED B0            ldir
1083+ 9254 C9               ret
1084+ 9255
1085+ 9255              ; -----------------------------------------------------------------
1086+ 9255              ;
1087+ 9255              ;   19/7/23
1088+ 9255              ;
1089+ 9255              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9255              ;
1091+ 9255              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9255              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9255              ;
1094+ 9255              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9255              ;
1096+ 9255              ;   INPUTS:
1097+ 9255              ;
1098+ 9255              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9255              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9255
1101+ 9255              ;   MODIFICA: A, HL, BC y DE.
1102+ 9255
1103+ 9255              Guarda_coordenadas_X
1104+ 9255
1105+ 9255 7B               ld a,e
1106+ 9256 A7               and a
1107+ 9257 20 04            jr nz,1F
1108+ 9259
1109+ 9259 06 02            ld b,2
1110+ 925B 18 02            jr 2F
1111+ 925D
1112+ 925D 06 03        1 ld b,3
1113+ 925F 72           2 ld (hl),d
1114+ 9260 23               inc hl
1115+ 9261 14               inc d
1116+ 9262 10 FB            djnz 2B
1117+ 9264
1118+ 9264 C9               ret
1119+ 9265
1120+ 9265              ; -----------------------------------------------------------------
1121+ 9265              ;
1122+ 9265              ;   12/04/23
1123+ 9265              ;
1124+ 9265
1125+ 9265 3A 36 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 9268 A7               and a
1127+ 9269 C8               ret z
1128+ 926A
1129+ 926A FE 04            cp 4
1130+ 926C 20 09            jr nz,1F
1131+ 926E
1132+ 926E
1133+ 926E              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 926E
1135+ 926E CD 8A 90         call Detecta_colision_nave_entidad
1136+ 9271
1137+ 9271 21 36 8A         ld hl,Impacto2
1138+ 9274 CB 5E            bit 3,(hl)
1139+ 9276 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9277
1141+ 9277              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9277              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9277
1144+ 9277 21 36 8A     1 ld hl,Impacto2
1145+ 927A CB 4E            bit 1,(hl)
1146+ 927C 28 07            jr z,2F
1147+ 927E
1148+ 927E 21 9D 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9281 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9283 18 0B            jr 3F
1151+ 9285
1152+ 9285 21 36 8A     2 ld hl,Impacto2
1153+ 9288 CB 46            bit 0,(hl)
1154+ 928A C8               ret z
1155+ 928B
1156+ 928B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 928B
1158+ 928B 21 0C 8A         ld hl,Ctrl_1
1159+ 928E CB D6            set 2,(hl)
1160+ 9290
1161+ 9290 C9           3 ret
1162+ 9291
1163+ 9291              ; -----------------------------------------------------------------
1164+ 9291              ;
1165+ 9291              ;   19/7/23
1166+ 9291              ;
1167+ 9291              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9291
1169+ 9291 AF           Limpia_Coordenadas_X xor a
1170+ 9292 06 06            ld b,6
1171+ 9294 21 3B 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9297 77           1 ld (hl),a
1173+ 9298 23               inc hl
1174+ 9299 10 FC            djnz 1B
1175+ 929B C9               ret
1176+ 929C
1177+ 929C              ; -----------------------------------------------------------------
1178+ 929C              ;
1179+ 929C              ;   25/04/23
1180+ 929C              ;
1181+ 929C
1182+ 929C              Determina_resultado_comparativa
1183+ 929C
1184+ 929C              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 929C              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 929C              ;
1187+ 929C              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 929C              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 929C              ;
1190+ 929C              ;   SBC HL,DE
1191+ 929C
1192+ 929C              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 929C              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 929C
1195+ 929C              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 929C              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 929C
1198+ 929C
1199+ 929C 3A DD 89         ld a,(Cuad_objeto)
1200+ 929F FE 02            cp 2
1201+ 92A1 28 26            jr z,2F
1202+ 92A3 38 24            jr c,2F
1203+ 92A5
1204+ 92A5              ; Cuadrantes 3º y 4º
1205+ 92A5
1206+ 92A5 E6 01            and 1
1207+ 92A7 28 10            jr z,4F
1208+ 92A9
1209+ 92A9              ; Cuadrante 3º
1210+ 92A9
1211+ 92A9 7C               ld a,h
1212+ 92AA 06 00            ld b,0
1213+ 92AC
1214+ 92AC CD 37 93         call Compara_cositas_H3
1215+ 92AF
1216+ 92AF 04               inc b
1217+ 92B0 05               dec b
1218+ 92B1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92B2
1220+ 92B2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92B3 06 00            ld b,0
1222+ 92B5
1223+ 92B5 CD 49 93         call Compara_cositas_L3
1224+ 92B8 C9               ret
1225+ 92B9
1226+ 92B9              ; Cuadrante 4º
1227+ 92B9
1228+ 92B9 7C           4 ld a,h
1229+ 92BA 06 00            ld b,0
1230+ 92BC
1231+ 92BC CD 5B 93         call Compara_cositas_H4
1232+ 92BF
1233+ 92BF 04               inc b
1234+ 92C0 05               dec b
1235+ 92C1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92C2
1237+ 92C2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92C3 06 00            ld b,0
1239+ 92C5
1240+ 92C5 CD 71 93         call Compara_cositas_L4
1241+ 92C8 C9               ret
1242+ 92C9
1243+ 92C9              ; Cuadrantes 1º y 2º.
1244+ 92C9
1245+ 92C9 28 10        2 jr z,3F
1246+ 92CB
1247+ 92CB              ; 1er Cuadrante
1248+ 92CB
1249+ 92CB 7C               ld a,h
1250+ 92CC 06 00            ld b,0
1251+ 92CE
1252+ 92CE CD 0F 93         call Compara_cositas_H1
1253+ 92D1
1254+ 92D1 04               inc b
1255+ 92D2 05               dec b
1256+ 92D3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92D4
1258+ 92D4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92D5 06 00            ld b,0
1260+ 92D7
1261+ 92D7 CD 25 93         call Compara_cositas_L1
1262+ 92DA C9               ret
1263+ 92DB
1264+ 92DB
1265+ 92DB              ; 2º Cuadrante
1266+ 92DB
1267+ 92DB 7C           3 ld a,h
1268+ 92DC 06 00            ld b,0
1269+ 92DE
1270+ 92DE CD EB 92         call Compara_cositas_H2
1271+ 92E1
1272+ 92E1 04               inc b
1273+ 92E2 05               dec b
1274+ 92E3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92E4
1276+ 92E4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92E5 06 00            ld b,0
1278+ 92E7
1279+ 92E7 CD FD 92         call Compara_cositas_L2
1280+ 92EA C9               ret
1281+ 92EB
1282+ 92EB A7           Compara_cositas_H2 and a
1283+ 92EC 28 0D            jr z,1F
1284+ 92EE              ;    cp $fd
1285+ 92EE              ;    jr z,1F
1286+ 92EE              ;    cp $fe
1287+ 92EE              ;    jr z,1F
1288+ 92EE FE FF            cp $ff
1289+ 92F0 28 09            jr z,1F
1290+ 92F2 FE 01            cp $01
1291+ 92F4 28 05            jr z,1F
1292+ 92F6 FE 02            cp $02
1293+ 92F8 28 01            jr z,1F
1294+ 92FA C0               ret nz
1295+ 92FB 04           1 inc b
1296+ 92FC C9               ret
1297+ 92FD
1298+ 92FD A7           Compara_cositas_L2 and a
1299+ 92FE 28 0D            jr z,1F
1300+ 9300              ;    cp $fd
1301+ 9300              ;    jr z,1F
1302+ 9300 FE FE            cp $fe
1303+ 9302 28 09            jr z,1F
1304+ 9304 FE FF            cp $ff
1305+ 9306 28 05            jr z,1F
1306+ 9308 FE 01            cp $01
1307+ 930A 28 01            jr z,1F
1308+ 930C              ;    cp $02
1309+ 930C              ;    jr z,1F
1310+ 930C C0               ret nz
1311+ 930D 04           1 inc b
1312+ 930E C9               ret
1313+ 930F
1314+ 930F A7           Compara_cositas_H1 and a
1315+ 9310 28 11            jr z,1F
1316+ 9312              ;    cp $fd
1317+ 9312              ;    jr z,1F
1318+ 9312              ;    cp $fe
1319+ 9312              ;    jr z,1F
1320+ 9312 FE FF            cp $ff
1321+ 9314 28 0D            jr z,1F
1322+ 9316 FE 01            cp $01
1323+ 9318 28 09            jr z,1F
1324+ 931A FE 02            cp $02
1325+ 931C 28 05            jr z,1F
1326+ 931E FE 03            cp $03
1327+ 9320 28 01            jr z,1F
1328+ 9322 C0               ret nz
1329+ 9323 04           1 inc b
1330+ 9324 C9               ret
1331+ 9325
1332+ 9325 A7           Compara_cositas_L1 and a
1333+ 9326 28 0D            jr z,1F
1334+ 9328              ;    cp $fd
1335+ 9328              ;    jr z,1F
1336+ 9328              ;    cp $fe
1337+ 9328              ;    jr z,1F
1338+ 9328              ;    cp $ff
1339+ 9328              ;    jr z,1F
1340+ 9328 FE 01            cp $01
1341+ 932A 28 09            jr z,1F
1342+ 932C FE 02            cp $02
1343+ 932E 28 05            jr z,1F
1344+ 9330 FE 03            cp $03
1345+ 9332 28 01            jr z,1F
1346+ 9334 C0               ret nz
1347+ 9335 04           1 inc b
1348+ 9336 C9               ret
1349+ 9337
1350+ 9337 A7           Compara_cositas_H3 and a
1351+ 9338 28 0D            jr z,1F
1352+ 933A              ;    cp $fd
1353+ 933A              ;    jr z,1F
1354+ 933A FE FE            cp $fe
1355+ 933C 28 09            jr z,1F
1356+ 933E FE FF            cp $ff
1357+ 9340 28 05            jr z,1F
1358+ 9342 FE 01            cp $01
1359+ 9344 28 01            jr z,1F
1360+ 9346              ;    cp $02
1361+ 9346              ;    jr z,1F
1362+ 9346              ;    cp $03
1363+ 9346              ;    jr z,1F
1364+ 9346 C0               ret nz
1365+ 9347 04           1 inc b
1366+ 9348 C9               ret
1367+ 9349
1368+ 9349 A7           Compara_cositas_L3 and a
1369+ 934A 28 0D            jr z,1F
1370+ 934C              ;    cp $fd
1371+ 934C              ;    jr z,1F
1372+ 934C              ;    cp $fe
1373+ 934C              ;    jr z,1F
1374+ 934C              ;    cp $ff
1375+ 934C              ;    jr z,1F
1376+ 934C FE 01            cp $01
1377+ 934E 28 09            jr z,1F
1378+ 9350 FE 02            cp $02
1379+ 9352 28 05            jr z,1F
1380+ 9354 FE 03            cp $03
1381+ 9356 28 01            jr z,1F
1382+ 9358 C0               ret nz
1383+ 9359 04           1 inc b
1384+ 935A C9               ret
1385+ 935B
1386+ 935B A7           Compara_cositas_H4 and a
1387+ 935C 28 11            jr z,1F
1388+ 935E FE FD            cp $fd
1389+ 9360 28 0D            jr z,1F
1390+ 9362 FE FE            cp $fe
1391+ 9364 28 09            jr z,1F
1392+ 9366 FE FF            cp $ff
1393+ 9368 28 05            jr z,1F
1394+ 936A FE 01            cp $01
1395+ 936C 28 01            jr z,1F
1396+ 936E              ;    cp $02
1397+ 936E              ;    jr z,1F
1398+ 936E              ;    cp $03
1399+ 936E              ;    jr z,1F
1400+ 936E C0               ret nz
1401+ 936F 04           1 inc b
1402+ 9370 C9               ret
1403+ 9371
1404+ 9371 A7           Compara_cositas_L4 and a
1405+ 9372 28 0D            jr z,1F
1406+ 9374              ;    cp $fd
1407+ 9374              ;    jr z,1F
1408+ 9374 FE FE            cp $fe
1409+ 9376 28 09            jr z,1F
1410+ 9378 FE FF            cp $ff
1411+ 937A 28 05            jr z,1F
1412+ 937C FE 01            cp $01
1413+ 937E 28 01            jr z,1F
1414+ 9380              ;    cp $02
1415+ 9380              ;    jr z,1F
1416+ 9380              ;    cp $03
1417+ 9380              ;    jr z,1F
1418+ 9380 C0               ret nz
1419+ 9381 04           1 inc b
1420+ 9382 C9               ret
# file closed: Disparo.asm
1322  9383              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9383              ; ******************************************************************************************************************************************************************************************
   2+ 9383              ;
   3+ 9383              ; 26/06/23
   4+ 9383              ;
   5+ 9383              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9383
   7+ 9383 CD 67 96     Draw call Prepara_draw
   8+ 9386 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9387 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9388 28 05        	jr z,2F
  11+ 938A
  12+ 938A 3A DD 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 938D 18 0C        	jr 1F
  14+ 938F
  15+ 938F 2A DB 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9392 22 CB 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9395 CD 24 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9398              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9398 CD 75 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 939B
  21+ 939B 3A F7 89     1 ld a,(Ctrl_0)
  22+ 939E CB 6F        	bit 5,a
  23+ 93A0 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93A2
  25+ 93A2 CD BA 93     	call Comprueba_limite_horizontal
  26+ 93A5 CD 4A 94     	call Comprueba_limite_vertical
  27+ 93A8
  28+ 93A8              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93A8              ; -----------------------
  30+ 93A8              ; -----------------------
  31+ 93A8              ; -----------------------
  32+ 93A8
  33+ 93A8 CD 97 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93AB CD CE 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93AE CD 2D 96     	call Define_rutina_de_impresion
  36+ 93B1
  37+ 93B1 3A F7 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93B4 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93B6 32 F7 89     	ld (Ctrl_0),a
  40+ 93B9
  41+ 93B9 C9           	ret
  42+ 93BA
  43+ 93BA              ; *******************************************************************************************************************************************************************************************
  44+ 93BA              ;	21/01/23
  45+ 93BA              ;
  46+ 93BA              ; 	Comprueba_limite_horizontal.
  47+ 93BA              ;
  48+ 93BA              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93BA              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93BA              ;
  51+ 93BA              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93BA              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93BA              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93BA              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93BA
  56+ 93BA
  57+ 93BA
  58+ 93BA 3A F7 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93BD CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93BF 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93C1 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93C3 32 F7 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93C6 18 09            jr 6F
  64+ 93C8 CB 5F        1 bit 3,a
  65+ 93CA 28 0A            jr z,2F
  66+ 93CC E6 F7            and $f7
  67+ 93CE 32 F7 89         ld (Ctrl_0),a
  68+ 93D1 CD 24 95     6 call Inicializacion
  69+ 93D4 18 5B            jr 5F
  70+ 93D6 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93D7
  72+ 93D7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93D7              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93D7
  75+ 93D7 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93D8 2A 07 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93DB CD 43 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93DE 67           	ld h,a
  79+ 93DF EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93E0 CD 43 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93E3 67           	ld h,a
  82+ 93E4 A7           	and a
  83+ 93E5 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93E7 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93E8 3A DD 89     	ld a,(Cuad_objeto)
  86+ 93EB FE 02        	cp 2
  87+ 93ED 38 1E        	jr c,3F
  88+ 93EF 28 1C        	jr z,3F
  89+ 93F1 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93F2 28 23            jr z,7F
  91+ 93F4 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93F6 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93F8 E1           	pop hl
  94+ 93F9
  95+ 93F9              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93F9              ; _para indicar con E="2" en caso necesario.
  97+ 93F9
  98+ 93F9 E5               push hl
  99+ 93FA C5               push bc
 100+ 93FB CD 43 99     	call calcula_tercio
 101+ 93FE FE 01        	cp 1
 102+ 9400 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9402 CD 32 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9405 28 26            jr z,9F
 105+ 9407 38 24            jr c,9F
 106+ 9409 1E 00        11 ld e,0
 107+ 940B 18 22            jr 8F
 108+ 940D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 940E 28 07        	jr z, 7F
 110+ 9410 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9412 1E 00         	ld e,0
 112+ 9414 E1           	pop hl
 113+ 9415 18 04        	jr 4F
 114+ 9417 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9419 18 15            jr 10F
 116+ 941B
 117+ 941B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 941B              ; _para indicar con E="2" en caso necesario.
 119+ 941B
 120+ 941B E5           4 push hl
 121+ 941C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 941D CD 43 99     	call calcula_tercio
 123+ 9420 FE 01        	cp 1
 124+ 9422 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9424 CD 32 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9427 28 04            jr z,9F
 127+ 9429 30 02            jr nc,9F
 128+ 942B 18 02        	jr 8F
 129+ 942D 1E 02        9 ld e,2
 130+ 942F C1           8 pop bc
 131+ 9430 E1           10 pop hl
 132+ 9431 C9           5 ret
 133+ 9432
 134+ 9432              ; --------------------
 135+ 9432              ;
 136+ 9432              ; 25/08/22
 137+ 9432
 138+ 9432 CD 43 99     Comprueba_centro call calcula_tercio
 139+ 9435 67               ld h,a
 140+ 9436 08           	ex af,af
 141+ 9437 FE 02        	cp 2
 142+ 9439 38 07        	jr c,1F
 143+ 943B 28 05        	jr z,1F
 144+ 943D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9440 18 03        	jr 2F
 146+ 9442 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9445 08           2 ex af,af
 148+ 9446 A7               and a
 149+ 9447 ED 42            sbc hl,bc
 150+ 9449 C9               ret
 151+ 944A
 152+ 944A              ; *********************************************************************************************************************************************************************************************
 153+ 944A              ;
 154+ 944A              ;   16/8/22
 155+ 944A              ;
 156+ 944A              ;	Comprueba_limite_vertical
 157+ 944A              ;
 158+ 944A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 944A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 944A              ;
 161+ 944A
 162+ 944A 2A CB 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 944D 7D           	ld a,l
 164+ 944E E6 1F        	and $1F
 165+ 9450 57           	ld d,a
 166+ 9451 3A 09 8A     	ld a,(Limite_vertical)
 167+ 9454 BA           	cp d 											; Límite - Posición.
 168+ 9455 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9456 3A DD 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9459 CB 47        	bit 0,a
 171+ 945B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 945D
 173+ 945D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 945D
 175+ 945D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 945E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9460
 178+ 9460              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9460              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9460
 181+ 9460 3A CF 89         ld a,(Coordenada_X)
 182+ 9463 16 0F            ld d,Centro_izquierda
 183+ 9465 A7               and a
 184+ 9466 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9467 28 1E            jr z,3F
 186+ 9469 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 946B              ;                                                    ; _salimos sin modificar nada.
 188+ 946B 18 0E            jr 2F
 189+ 946D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 946E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9470
 192+ 9470              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9470              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9470
 195+ 9470 3A CF 89         ld a,(Coordenada_X)
 196+ 9473 16 10            ld d,Centro_derecha
 197+ 9475 A7               and a
 198+ 9476 92               sub d
 199+ 9477 28 0E            jr z,3F
 200+ 9479 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 947B              ;                                                    ; _salimos sin modificar nada.
 202+ 947B CB 43        2 bit 0,e
 203+ 947D 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 947F C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9480 CD 14 95         call Modificaccionne
 206+ 9483 C1           	pop bc
 207+ 9484 CD 24 95         call Inicializacion
 208+ 9487 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9488
 210+ 9488              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9488
 212+ 9488 C5           4 push bc
 213+ 9489 01 CA 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 948C 0A           	ld a,(bc)
 215+ 948D 3D           	dec a
 216+ 948E 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 948F 7D           	ld a,l
 218+ 9490 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9491 CB 47        	bit 0,a
 220+ 9493 28 03        	jr z,5F
 221+ 9495 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9496 18 2E        	jr 7F
 223+ 9498
 224+ 9498              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9498
 226+ 9498 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9499 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 949A 3A F7 89     	ld a,(Ctrl_0)
 229+ 949D CB 4F        	bit 1,a
 230+ 949F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94A1 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94A2
 233+ 94A2              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94A2
 235+ 94A2 1C               inc e
 236+ 94A3 1D               dec e
 237+ 94A4 20 07            jr nz,12F
 238+ 94A6 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94A7 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94A8 22 CB 89     	ld (Posicion_actual),hl
 241+ 94AB 18 44        13 jr 9F
 242+ 94AD CB 43        12 bit 0,e
 243+ 94AF 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94B1              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94B1 C1           	pop bc
 246+ 94B2 18 D3        	jr 3B
 247+ 94B4 80           14 add b
 248+ 94B5 6F               ld l,a
 249+ 94B6 22 CB 89     	ld (Posicion_actual),hl
 250+ 94B9 CD 14 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94BC 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94BE E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94C0 32 F7 89         ld (Ctrl_0),a
 254+ 94C3 F1           	pop af
 255+ 94C4 18 2B        	jr 9F
 256+ 94C6
 257+ 94C6              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94C6
 259+ 94C6 F5           7 push af
 260+ 94C7 3A F7 89     	ld a,(Ctrl_0)
 261+ 94CA CB 47        	bit 0,a
 262+ 94CC 20 1D        	jr nz,8F
 263+ 94CE F1           	pop af
 264+ 94CF
 265+ 94CF              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94CF
 267+ 94CF 1C           	inc e
 268+ 94D0 1D               dec e
 269+ 94D1 20 07            jr nz,10F
 270+ 94D3 90           	sub b
 271+ 94D4 6F               ld l,a
 272+ 94D5 22 CB 89     	ld (Posicion_actual),hl
 273+ 94D8 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94DA              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94DA CB 43        10 bit 0,e
 276+ 94DC 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94DE              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94DE C1           	pop bc
 279+ 94DF 18 A6        	jr 3B
 280+ 94E1 90           16 sub b
 281+ 94E2 6F               ld l,a
 282+ 94E3 22 CB 89     	ld (Posicion_actual),hl
 283+ 94E6 CD 14 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94E9 18 06            jr 9F
 285+ 94EB E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94ED 32 F7 89         ld (Ctrl_0),a
 287+ 94F0 F1           	pop af
 288+ 94F1 C1           9 pop bc
 289+ 94F2 1E 00        	ld e,0
 290+ 94F4 CD 24 95         call Inicializacion
 291+ 94F7 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94F8 08           	ex af,af
 293+ 94F9 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94FA 18 8B            jr 3B
 295+ 94FC
 296+ 94FC              ; --------------------
 297+ 94FC
 298+ 94FC 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94FE CD 82 96     1 call PreviousScan
 300+ 9501 10 FB            djnz 1B
 301+ 9503 22 CB 89     	ld (Posicion_actual),hl
 302+ 9506 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9507 C9           	ret
 304+ 9508
 305+ 9508              ; --------------------
 306+ 9508
 307+ 9508 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 950A CD 73 96     1 call NextScan
 309+ 950D 10 FB            djnz 1B
 310+ 950F 22 CB 89     	ld (Posicion_actual),hl
 311+ 9512 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9513 C9           	ret
 313+ 9514
 314+ 9514              ; --------------------
 315+ 9514              ;
 316+ 9514              ;	22/01/23
 317+ 9514              ;
 318+ 9514              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9514              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9514              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9514
 322+ 9514
 323+ 9514              Modificaccionne
 324+ 9514
 325+ 9514 3A DD 89     	ld a,(Cuad_objeto)
 326+ 9517 FE 02        	cp 2
 327+ 9519 CC FC 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 951C DC FC 94         call c,Modifica_Pos_actual
 329+ 951F C8           	ret z
 330+ 9520 CD 08 95         call Modifica_Pos_actual2
 331+ 9523 C9               ret
 332+ 9524
 333+ 9524              ; *************************************************************************************************************************************************************************************************
 334+ 9524              ;
 335+ 9524              ;	13/8/22
 336+ 9524              ;
 337+ 9524              ;	Inicializacion
 338+ 9524              ;
 339+ 9524              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9524              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9524              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9524              ;
 343+ 9524              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9524              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9524              ;	_ desaparece/aparece.
 346+ 9524
 347+ 9524              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9524              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9524              ;
 350+ 9524              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9524              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9524              ; 		   [E] ="0"
 353+ 9524
 354+ 9524              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9524
 356+ 9524 CD 43 99     Inicializacion call calcula_tercio
 357+ 9527 28 36        	jr z,primit
 358+ 9529 E6 02        	and 2
 359+ 952B 20 07        	jr nz,segmit
 360+ 952D 7D           	ld a,l
 361+ 952E FE 7F        	cp $7f
 362+ 9530 38 2D        	jr c,primit
 363+ 9532 28 2B        	jr z,primit
 364+ 9534 CD 91 95     segmit call column
 365+ 9537 38 13        	jr c,tercuad
 366+ 9539 3E 04        cuarcuad ld a,4
 367+ 953B 32 DD 89     	ld (Cuad_objeto),a
 368+ 953E 21 20 48     	ld hl,$4820
 369+ 9541 22 07 8A     	ld (Limite_horizontal),hl
 370+ 9544 21 09 8A     	ld hl,Limite_vertical
 371+ 9547 36 0D        	ld (hl),$0d
 372+ 9549 08           	ex af,af
 373+ 954A 18 3C        	jr 1F
 374+ 954C              tercuad
 375+ 954C 3E 03        	ld a,3
 376+ 954E 32 DD 89     	ld (Cuad_objeto),a
 377+ 9551 21 20 48     	ld hl,$4820
 378+ 9554 22 07 8A     	ld (Limite_horizontal),hl
 379+ 9557 21 09 8A     	ld hl,Limite_vertical
 380+ 955A 36 12        	ld (hl),$12
 381+ 955C 08           	ex af,af
 382+ 955D 18 29        	jr 1F
 383+ 955F CD 91 95     primit call column
 384+ 9562 38 13        	jr c, primcuad
 385+ 9564              segcuad
 386+ 9564 3E 02        	ld a,2
 387+ 9566 32 DD 89     	ld (Cuad_objeto),a
 388+ 9569 21 C0 4F     	ld hl,$4fc0
 389+ 956C 22 07 8A     	ld (Limite_horizontal),hl
 390+ 956F 21 09 8A     	ld hl,Limite_vertical
 391+ 9572 36 0D        	ld (hl),$0d
 392+ 9574 08           	ex af,af
 393+ 9575 18 11        	jr 1F
 394+ 9577              primcuad
 395+ 9577 3E 01        	ld a,1
 396+ 9579 32 DD 89     	ld (Cuad_objeto),a
 397+ 957C 21 C0 4F     	ld hl,$4fc0
 398+ 957F 22 07 8A     	ld (Limite_horizontal),hl
 399+ 9582 21 09 8A     	ld hl,Limite_vertical
 400+ 9585 36 12        	ld (hl),$12
 401+ 9587 08           	ex af,af
 402+ 9588 CD CE 9C     1 call Genera_coordenadas
 403+ 958B 21 F7 89     	ld hl,Ctrl_0
 404+ 958E CB EE        	set 5,(hl)
 405+ 9590 C9           	ret
 406+ 9591
 407+ 9591              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9591
 409+ 9591              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9591              ;
 411+ 9591              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9591
 413+ 9591 7D           column ld a,l
 414+ 9592 E6 1F        	and $1f
 415+ 9594 FE 10         	cp $10
 416+ 9596 C9            	ret
 417+ 9597
 418+ 9597              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9597              ;
 420+ 9597              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9597              ;
 422+ 9597              ; 14/12/22
 423+ 9597              ;
 424+ 9597              ;	Modifica: A y BC.
 425+ 9597
 426+ 9597 3A DD 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 959A E6 01        	and 1
 428+ 959C 28 17        	jr z,1F
 429+ 959E
 430+ 959E              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 959E
 432+ 959E 3A CF 89     	ld a,(Coordenada_X)
 433+ 95A1 47           	ld b,a
 434+ 95A2 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95A3 79           	ld a,c
 436+ 95A4 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95A5 38 08        	jr c,2F
 438+ 95A7 47           	ld b,a
 439+ 95A8 79           	ld a,c
 440+ 95A9 90           	sub b
 441+ 95AA 32 06 8A     	ld (Columnas),a
 442+ 95AD 18 1B        	jr 4F
 443+ 95AF 79           2 ld a,c
 444+ 95B0 32 06 8A     	ld (Columnas),a
 445+ 95B3 18 15        	jr 4F
 446+ 95B5
 447+ 95B5              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95B5
 449+ 95B5 3A CF 89     1 ld a,(Coordenada_X)
 450+ 95B8 81           	add c
 451+ 95B9 3D           	dec a
 452+ 95BA D6 1F        	sub $1f
 453+ 95BC 38 08        	jr c,3F
 454+ 95BE 47           	ld b,a
 455+ 95BF 79           	ld a,c
 456+ 95C0 90           	sub b
 457+ 95C1 32 06 8A     	ld (Columnas),a
 458+ 95C4 18 04        	jr 4F
 459+ 95C6 79           3 ld a,c
 460+ 95C7 32 06 8A     	ld (Columnas),a
 461+ 95CA D9           4 exx
 462+ 95CB 4F           	ld c,a
 463+ 95CC D9           	exx
 464+ 95CD C9            ret
 465+ 95CE
 466+ 95CE              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95CE              ;
 468+ 95CE              ;   19/7/23
 469+ 95CE              ;
 470+ 95CE              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95CE              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95CE              ;
 473+ 95CE              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95CE              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95CE              ;
 476+ 95CE              ;	DESTRUYE: HL,B Y A.
 477+ 95CE
 478+ 95CE 3A DD 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95D1 FE 02        	cp 2
 480+ 95D3 38 18        	jr c,1F
 481+ 95D5 28 16        	jr z,1F
 482+ 95D7 E6 01        	and 1
 483+ 95D9 28 0D        	jr z,3F
 484+ 95DB
 485+ 95DB              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95DB
 487+ 95DB CD 21 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95DE
 489+ 95DE 7D           9 ld a,l
 490+ 95DF E6 1F        	and $1f
 491+ 95E1 28 2A        	jr z,7F
 492+ 95E3 2B           	dec hl
 493+ 95E4 10 F8        	djnz 9B
 494+ 95E6 18 25        	jr 7F
 495+ 95E8
 496+ 95E8              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95E8
 498+ 95E8 2A CB 89     3 ld hl,(Posicion_actual)
 499+ 95EB 18 20        	jr 7F
 500+ 95ED
 501+ 95ED 28 14        1 jr z,2F
 502+ 95EF
 503+ 95EF              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95EF
 505+ 95EF CD 21 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95F2
 507+ 95F2 7D           4 ld a,l
 508+ 95F3 E6 1F        	and $1f
 509+ 95F5 28 03        	jr z,6F
 510+ 95F7 2B           	dec hl
 511+ 95F8 10 F8        	djnz 4B
 512+ 95FA 06 0F        6 ld b,15
 513+ 95FC CD 82 96     5 call PreviousScan
 514+ 95FF 10 FB        	djnz 5B
 515+ 9601 18 0A        	jr 7F
 516+ 9603
 517+ 9603              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9603
 519+ 9603 CD 21 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9606 06 0F        	ld b,15
 521+ 9608 CD 82 96     8 call PreviousScan
 522+ 960B 10 FB        	djnz 8B
 523+ 960D
 524+ 960D E5           7 push hl
 525+ 960E DD E1        	pop ix
 526+ 9610
 527+ 9610 2A CD 89     	ld hl,(Puntero_objeto)
 528+ 9613 E5           	push hl
 529+ 9614 FD E1        	pop iy
 530+ 9616
 531+ 9616              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9616
 533+ 9616 3A F7 89     	ld a,(Ctrl_0)
 534+ 9619 CB 77        	bit 6,a
 535+ 961B C8           	ret z
 536+ 961C
 537+ 961C              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 961C              ; _ entidad / Amadeus´.
 539+ 961C
 540+ 961C DD 22 41 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9620
 542+ 9620 C9           	ret
 543+ 9621
 544+ 9621              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9621              ;
 546+ 9621              ;	2/1/23
 547+ 9621              ;
 548+ 9621              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9621              ;
 550+ 9621              ;	Tras esta rutina tenemos:
 551+ 9621              ;
 552+ 9621              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9621              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9621              ;
 555+ 9621              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9621
 557+ 9621 2A CB 89     Operandos ld hl,(Posicion_actual)
 558+ 9624 3A 06 8A     	ld a,(Columnas)
 559+ 9627 3D           	dec a
 560+ 9628 20 01        	jr nz,1F
 561+ 962A 3C           	inc a
 562+ 962B 47           1 ld b,a
 563+ 962C C9           	ret
 564+ 962D
 565+ 962D              ; --------------------------------------------------------------------------------------------------------------------
 566+ 962D              ;
 567+ 962D              ;	3/1/23
 568+ 962D              ;
 569+ 962D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 962D              ;
 571+ 962D              ;	Destruye: A,B,HL y DE.
 572+ 962D
 573+ 962D              Define_rutina_de_impresion
 574+ 962D
 575+ 962D 3A CA 89     	ld a,(Columns)
 576+ 9630 47           	ld b,a
 577+ 9631 3A 06 8A     	ld a,(Columnas)
 578+ 9634 B8           	cp b
 579+ 9635 20 0D        	jr nz,2f
 580+ 9637
 581+ 9637              ;	La entidad se imprime entera.
 582+ 9637
 583+ 9637 21 13 97     	ld hl, Indice_entidades_completas
 584+ 963A E6 01        	and 1
 585+ 963C 28 02        	jr z,1F
 586+ 963E
 587+ 963E 23           	inc hl
 588+ 963F 23           	inc hl
 589+ 9640
 590+ 9640 CD 47 8D     1 call Extrae_address
 591+ 9643 C9           	ret		;	ret
 592+ 9644
 593+ 9644              ;	La entidad no se imprime entera en pantalla.
 594+ 9644
 595+ 9644 3A DD 89     2 ld a,(Cuad_objeto)
 596+ 9647 E6 01        	and 1
 597+ 9649 28 17        	jr z,3F
 598+ 964B
 599+ 964B              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 964B
 601+ 964B 21 17 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 964E 3A CA 89     4 ld a,(Columns)
 603+ 9651 E6 01        	and 1
 604+ 9653 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9655
 606+ 9655 23           	inc hl
 607+ 9656 23           	inc hl
 608+ 9657
 609+ 9657 3A 06 8A     	ld a,(Columnas)
 610+ 965A E6 01        	and 1
 611+ 965C 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 965E
 613+ 965E 23           	inc hl
 614+ 965F 23           	inc hl
 615+ 9660
 616+ 9660 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9662
 618+ 9662 21 1D 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9665 18 E7        	jr 4B
 620+ 9667
 621+ 9667              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9667              ;
 623+ 9667              ;	Prepara_draw
 624+ 9667              ;
 625+ 9667              ;	Es una rutina de carga.
 626+ 9667              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9667              ;
 628+ 9667              ;	FUNCIONAMIENTO:
 629+ 9667              ;
 630+ 9667              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9667              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9667              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9667              ;
 634+ 9667              ;	DESTRUYE:
 635+ 9667              ;
 636+ 9667              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9667
 638+ 9667 21 C9 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 966A 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 966B 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 966C 4E           	ld c,(hl)
 642+ 966D 2A CB 89     	ld hl,(Posicion_actual)
 643+ 9670 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9672 C9           	ret
 645+ 9673
 646+ 9673              ;----------------------------------------------------------------------------------------------------------------
 647+ 9673              ;
 648+ 9673              ;	5/08/22
 649+ 9673              ;
 650+ 9673              ;   NextScan.
 651+ 9673              ;
 652+ 9673              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9673              ;
 654+ 9673              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9673              ;
 656+ 9673              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9673              ;
 658+ 9673              ;       DESTRUIDOS: AF y HL !!!
 659+ 9673              ;
 660+ 9673              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9673              ;
 662+ 9673
 663+ 9673 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9674 7C               ld a,h
 665+ 9675 E6 07            and 7
 666+ 9677 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9678
 668+ 9678 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9679 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 967B 6F               ld l,a
 671+ 967C D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 967D
 673+ 967D 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 967E D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9680 67               ld h,a
 676+ 9681 C9               ret
 677+ 9682
 678+ 9682              ;----------------------------------------------------------------------------------------------------------------
 679+ 9682              ;
 680+ 9682              ;	5/08/22
 681+ 9682              ;
 682+ 9682              ;   PreviousScan.
 683+ 9682              ;
 684+ 9682              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9682              ;
 686+ 9682              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9682              ;
 688+ 9682              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9682              ;
 690+ 9682              ;       DESTRUIDOS: AF y HL !!!
 691+ 9682              ;
 692+ 9682              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9682              ;
 694+ 9682
 695+ 9682 7C           PreviousScan ld a,h
 696+ 9683 25               dec h               ; Dec H.
 697+ 9684 E6 07            and 7
 698+ 9686 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9687
 700+ 9687 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9688 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 968A 6F               ld l,a
 703+ 968B D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 968C
 705+ 968C 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 968D C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 968F 67               ld h,a
 708+ 9690 C9               ret
 709+ 9691
 710+ 9691              ; -----------------------------------------------------------------------------------
 711+ 9691              ;
 712+ 9691              ;	31/7/23
 713+ 9691              ;
 714+ 9691              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9691              ;	Extrae fotos de Album_de_fotos.
 716+ 9691
 717+ 9691              Extrae_foto_entidades
 718+ 9691
 719+ 9691 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9694 7E               ld a,(hl)
 721+ 9695 A7               and a
 722+ 9696 C8               ret z																	; Salimos si no hay DATOS en el álbum.
 723+ 9697
 724+ 9697 21 19 74     	ld hl,Caja_de_malotes
 725+ 969A 7E           	ld a,(hl)
 726+ 969B 32 18 8A     	ld (Numero_de_malotes),a												; Salimos si no hay MOVIMIENTO.
 727+ 969E A7           	and a
 728+ 969F C8           	ret z
 729+ 96A0
 730+ 96A0              ; -----------------------------------
 731+ 96A0
 732+ 96A0 ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 96A4 31 00 70     	ld sp,Album_de_fotos
 734+ 96A7
 735+ 96A7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 96A9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 96AA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 96AB
 739+ 96AB ED 73 1F 8A  	ld (Stack_2),sp
 740+ 96AF ED 7B 1D 8A  	ld sp,(Stack)
 741+ 96B3
 742+ 96B3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 96B3
 744+ 96B3 3E CD        	ld a,$cd
 745+ 96B5 32 BD 96     	ld (Imprime),a
 746+ 96B8 EB           	ex de,hl
 747+ 96B9 22 BE 96     	ld (Imprime+1),hl
 748+ 96BC EB           	ex de,hl
 749+ 96BD
 750+ 96BD              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 96BD
 752+ 96BD 00 00 00     Imprime db 0,0,0
 753+ 96C0
 754+ 96C0 3A 18 8A     	ld a,(Numero_de_malotes)
 755+ 96C3 3D           	dec a
 756+ 96C4 28 09        	jr z,1F
 757+ 96C6 32 18 8A      	ld (Numero_de_malotes),a
 758+ 96C9
 759+ 96C9 ED 7B 1F 8A   	ld sp,(Stack_2)
 760+ 96CD 18 D8        	jr 2B
 761+ 96CF
 762+ 96CF AF           1 xor a
 763+ 96D0 32 1F 8A     	ld (Stack_2),a
 764+ 96D3 C9           	ret
 765+ 96D4
 766+ 96D4              ; -----------------------------------------------------------------------------------
 767+ 96D4              ;
 768+ 96D4              ;	28/2/23
 769+ 96D4              ;
 770+ 96D4              ;	Pinta los disparos generados.
 771+ 96D4
 772+ 96D4              Extrae_foto_disparos
 773+ 96D4
 774+ 96D4 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 775+ 96D7 7E               ld a,(hl)
 776+ 96D8 A7               and a
 777+ 96D9 C8               ret z
 778+ 96DA
 779+ 96DA 3A 31 8A     	ld a,(Numero_de_disparotes)
 780+ 96DD A7           	and a
 781+ 96DE C8           	ret z
 782+ 96DF ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 783+ 96E3 31 0D 72     	ld sp,Album_de_fotos_disparos
 784+ 96E6
 785+ 96E6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 786+ 96E8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 787+ 96E9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 788+ 96EA
 789+ 96EA ED 73 1F 8A  	ld (Stack_2),sp
 790+ 96EE ED 7B 1D 8A  	ld sp,(Stack)
 791+ 96F2
 792+ 96F2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 793+ 96F2
 794+ 96F2 3E CD        	ld a,$cd
 795+ 96F4 32 FC 96     	ld (Imprime2),a
 796+ 96F7 EB           	ex de,hl
 797+ 96F8 22 FD 96     	ld (Imprime2+1),hl
 798+ 96FB EB           	ex de,hl
 799+ 96FC
 800+ 96FC              ; Ejecuta la llamada:	CALL $xx,xx
 801+ 96FC
 802+ 96FC 00 00 00     Imprime2 db 0,0,0
 803+ 96FF
 804+ 96FF 3A 31 8A     	ld a,(Numero_de_disparotes)
 805+ 9702 3D           	dec a
 806+ 9703 28 09        	jr z,1F
 807+ 9705 32 31 8A      	ld (Numero_de_disparotes),a
 808+ 9708
 809+ 9708 ED 7B 1F 8A  	ld sp,(Stack_2)
 810+ 970C 18 D8        	jr 2B
 811+ 970E
 812+ 970E AF           1 xor a
 813+ 970F 32 1F 8A     	ld (Stack_2),a
 814+ 9712 C9           	ret
 815+ 9713
# file closed: Draw_XOR.asm
1323  9713              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9713              ;   índices de Rutinas de impresión.
   2+ 9713
   3+ 9713 23 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9715 50 97            defw Pinta_Amadeus_3x2
   5+ 9717
   6+ 9717 A6 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9719 46 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 971B FA 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 971D
  10+ 971D D0 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 971F D4 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9721 88 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9723
  14+ 9723
  15+ 9723              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9723              ;
  17+ 9723              ;   12/12/22
  18+ 9723              ;
  19+ 9723              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9723              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9723              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9723              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9723              ;
  24+ 9723              ;   Modifica: DE y HL.
  25+ 9723
  26+ 9723 ED 73 1D 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9727 FD F9        	ld sp,iy
  28+ 9729 06 10            ld b,16
  29+ 972B D1           1 pop de
  30+ 972C 7B               ld a,e
  31+ 972D AE               xor (hl)
  32+ 972E 77           	ld (hl),a
  33+ 972F 23           	inc hl
  34+ 9730 7A               ld a,d
  35+ 9731 AE               xor (hl)
  36+ 9732 77           	ld (hl),a
  37+ 9733 2B           	dec hl
  38+ 9734 24           	inc h
  39+ 9735 7C               ld a,h
  40+ 9736 E6 07            and 7
  41+ 9738 20 0A            jr nz,2F
  42+ 973A 7D               ld a,l
  43+ 973B C6 20            add a,$20
  44+ 973D 6F               ld l,a
  45+ 973E 38 04            jr c,2F
  46+ 9740 7C               ld a,h
  47+ 9741 D6 08            sub 8
  48+ 9743 67               ld h,a
  49+ 9744 7C           2 ld a,h
  50+ 9745 FE 58            cp $58
  51+ 9747 28 02            jr z,3F
  52+ 9749 10 E0            djnz 1B
  53+ 974B ED 7B 1D 8A  3 ld sp,(Stack)
  54+ 974F C9           	ret
  55+ 9750
  56+ 9750 ED 73 1D 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9754 FD F9        	ld sp,iy
  58+ 9756 06 08            ld b,8
  59+ 9758 D1           1 pop de
  60+ 9759 7B               ld a,e
  61+ 975A AE               xor (hl)
  62+ 975B 77           	ld (hl),a
  63+ 975C 23           	inc hl
  64+ 975D 7A               ld a,d
  65+ 975E AE               xor (hl)
  66+ 975F 77           	ld (hl),a
  67+ 9760 23           	inc hl
  68+ 9761 D1           	pop de
  69+ 9762 7B               ld a,e
  70+ 9763 AE               xor (hl)
  71+ 9764 77           	ld (hl),a
  72+ 9765 2B           	dec hl
  73+ 9766 2B           	dec hl
  74+ 9767 24           	inc h
  75+ 9768 7C               ld a,h
  76+ 9769 E6 07            and 7
  77+ 976B 20 0A            jr nz,2F
  78+ 976D 7D               ld a,l
  79+ 976E C6 20            add a,$20
  80+ 9770 6F               ld l,a
  81+ 9771 38 04            jr c,2F
  82+ 9773 7C               ld a,h
  83+ 9774 D6 08            sub 8
  84+ 9776 67               ld h,a
  85+ 9777 7C           2 ld a,h
  86+ 9778 FE 58            cp $58
  87+ 977A 28 25            jr z,4F
  88+ 977C 7A               ld a,d
  89+ 977D AE               xor (hl)
  90+ 977E 77               ld (hl),a
  91+ 977F D1           	pop de
  92+ 9780 23           	inc hl
  93+ 9781 7B               ld a,e
  94+ 9782 AE               xor (hl)
  95+ 9783 77           	ld (hl),a
  96+ 9784 23           	inc hl
  97+ 9785 7A               ld a,d
  98+ 9786 AE               xor (hl)
  99+ 9787 77           	ld (hl),a
 100+ 9788 2B           	dec hl
 101+ 9789 2B           	dec hl
 102+ 978A 24           	inc h
 103+ 978B 7C               ld a,h
 104+ 978C E6 07            and 7
 105+ 978E 20 0A            jr nz,3F
 106+ 9790 7D               ld a,l
 107+ 9791 C6 20            add a,$20
 108+ 9793 6F               ld l,a
 109+ 9794 38 04            jr c,3F
 110+ 9796 7C               ld a,h
 111+ 9797 D6 08            sub 8
 112+ 9799 67               ld h,a
 113+ 979A 7C           3 ld a,h
 114+ 979B FE 58            cp $58
 115+ 979D 28 02            jr z,4F
 116+ 979F 10 B7            djnz 1B
 117+ 97A1 ED 7B 1D 8A  4 ld sp,(Stack)
 118+ 97A5 C9           	ret
 119+ 97A6
 120+ 97A6              ; ---------------------------------------------------
 121+ 97A6
 122+ 97A6 ED 73 1D 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97AA FD F9        	ld sp,iy
 124+ 97AC
 125+ 97AC              ; >>>
 126+ 97AC
 127+ 97AC 06 10            ld b,16
 128+ 97AE D1           1 pop de
 129+ 97AF 7A           	ld a,d
 130+ 97B0 AE           	xor (hl)
 131+ 97B1 77           	ld (hl),a
 132+ 97B2 24           	inc h
 133+ 97B3 7C               ld a,h
 134+ 97B4 E6 07            and 7
 135+ 97B6 20 0C            jr nz,2F
 136+ 97B8 7D               ld a,l
 137+ 97B9 C6 20            add a,$20
 138+ 97BB 6F               ld l,a
 139+ 97BC 38 06            jr c,2F
 140+ 97BE 7C               ld a,h
 141+ 97BF D6 08            sub 8
 142+ 97C1 67               ld h,a
 143+ 97C2 18 00            jr 2F
 144+ 97C4 7C           2 ld a,h
 145+ 97C5 FE 58            cp $58
 146+ 97C7 28 02            jr z,3F
 147+ 97C9 10 E3            djnz 1B
 148+ 97CB ED 7B 1D 8A  3 ld sp,(Stack)
 149+ 97CF C9           	ret
 150+ 97D0
 151+ 97D0 ED 73 1D 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97D4 FD F9        	ld sp,iy
 153+ 97D6
 154+ 97D6              ; >>>
 155+ 97D6
 156+ 97D6 06 10            ld b,16
 157+ 97D8 D1           1 pop de
 158+ 97D9 7B           	ld a,e
 159+ 97DA AE           	xor (hl)
 160+ 97DB 77           	ld (hl),a
 161+ 97DC 24           	inc h
 162+ 97DD 7C               ld a,h
 163+ 97DE E6 07            and 7
 164+ 97E0 20 0C            jr nz,2F
 165+ 97E2 7D               ld a,l
 166+ 97E3 C6 20            add a,$20
 167+ 97E5 6F               ld l,a
 168+ 97E6 38 06            jr c,2F
 169+ 97E8 7C               ld a,h
 170+ 97E9 D6 08            sub 8
 171+ 97EB 67               ld h,a
 172+ 97EC 18 00            jr 2F
 173+ 97EE 7C           2 ld a,h
 174+ 97EF FE 58            cp $58
 175+ 97F1 28 02            jr z,3F
 176+ 97F3 10 E3            djnz 1B
 177+ 97F5 ED 7B 1D 8A  3 ld sp,(Stack)
 178+ 97F9 C9           	ret
 179+ 97FA
 180+ 97FA              ; ---------------------------------------------------
 181+ 97FA
 182+ 97FA ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97FE FD F9        	ld sp,iy
 184+ 9800 06 08            ld b,8
 185+ 9802 D1           1 pop de
 186+ 9803 7A           	ld a,d
 187+ 9804 AE           	xor (hl)
 188+ 9805 77           	ld (hl),a
 189+ 9806 23           	inc hl
 190+ 9807 D1           	pop de
 191+ 9808 7B           	ld a,e
 192+ 9809 AE           	xor (hl)
 193+ 980A 77           	ld (hl),a
 194+ 980B 2B           	dec hl
 195+ 980C 24            	inc h
 196+ 980D 7C               ld a,h
 197+ 980E E6 07            and 7
 198+ 9810 20 0A            jr nz,2F
 199+ 9812 7D               ld a,l
 200+ 9813 C6 20            add a,$20
 201+ 9815 6F               ld l,a
 202+ 9816 38 04            jr c,2F
 203+ 9818 7C               ld a,h
 204+ 9819 D6 08            sub 8
 205+ 981B 67               ld h,a
 206+ 981C 7C           2 ld a,h
 207+ 981D FE 58            cp $58
 208+ 981F 28 20            jr z,4F
 209+ 9821 D1               pop de
 210+ 9822 7B           	ld a,e
 211+ 9823 AE           	xor (hl)
 212+ 9824 77           	ld (hl),a
 213+ 9825 23           	inc hl
 214+ 9826 7A           	ld a,d
 215+ 9827 AE           	xor (hl)
 216+ 9828 77           	ld (hl),a
 217+ 9829 2B           	dec hl
 218+ 982A 24           	inc h
 219+ 982B 7C               ld a,h
 220+ 982C E6 07            and 7
 221+ 982E 20 0A            jr nz,3F
 222+ 9830 7D               ld a,l
 223+ 9831 C6 20            add a,$20
 224+ 9833 6F               ld l,a
 225+ 9834 38 04            jr c,3F
 226+ 9836 7C               ld a,h
 227+ 9837 D6 08            sub 8
 228+ 9839 67               ld h,a
 229+ 983A 7C           3 ld a,h
 230+ 983B FE 58            cp $58
 231+ 983D 28 02            jr z,4F
 232+ 983F 10 C1            djnz 1B
 233+ 9841 ED 7B 1D 8A  4 ld sp,(Stack)
 234+ 9845 C9           	ret
 235+ 9846
 236+ 9846 ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 984A FD F9        	ld sp,iy
 238+ 984C 06 08            ld b,8
 239+ 984E D1           1 pop de
 240+ 984F D1           	pop de
 241+ 9850 7B           	ld a,e
 242+ 9851 AE           	xor (hl)
 243+ 9852 77           	ld (hl),a
 244+ 9853 24            	inc h
 245+ 9854 7C               ld a,h
 246+ 9855 E6 07            and 7
 247+ 9857 20 0A            jr nz,2F
 248+ 9859 7D               ld a,l
 249+ 985A C6 20            add a,$20
 250+ 985C 6F               ld l,a
 251+ 985D 38 04            jr c,2F
 252+ 985F 7C               ld a,h
 253+ 9860 D6 08            sub 8
 254+ 9862 67               ld h,a
 255+ 9863 7C           2 ld a,h
 256+ 9864 FE 58            cp $58
 257+ 9866 28 1B            jr z,4F
 258+ 9868 D1               pop de
 259+ 9869 7A           	ld a,d
 260+ 986A AE           	xor (hl)
 261+ 986B 77           	ld (hl),a
 262+ 986C 24           	inc h
 263+ 986D 7C               ld a,h
 264+ 986E E6 07            and 7
 265+ 9870 20 0A            jr nz,3F
 266+ 9872 7D               ld a,l
 267+ 9873 C6 20            add a,$20
 268+ 9875 6F               ld l,a
 269+ 9876 38 04            jr c,3F
 270+ 9878 7C               ld a,h
 271+ 9879 D6 08            sub 8
 272+ 987B 67               ld h,a
 273+ 987C 7C           3 ld a,h
 274+ 987D FE 58            cp $58
 275+ 987F 28 02            jr z,4F
 276+ 9881 10 CB            djnz 1B
 277+ 9883 ED 7B 1D 8A  4 ld sp,(Stack)
 278+ 9887 C9           	ret
 279+ 9888
 280+ 9888 ED 73 1D 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 988C FD F9        	ld sp,iy
 282+ 988E 06 08            ld b,8
 283+ 9890 D1           1 pop de
 284+ 9891 7B           	ld a,e
 285+ 9892 AE           	xor (hl)
 286+ 9893 77           	ld (hl),a
 287+ 9894 23           	inc hl
 288+ 9895 7A           	ld a,d
 289+ 9896 AE           	xor (hl)
 290+ 9897 77           	ld (hl),a
 291+ 9898 2B           	dec hl
 292+ 9899 24             	inc h
 293+ 989A 7C               ld a,h
 294+ 989B E6 07            and 7
 295+ 989D 20 0A            jr nz,2F
 296+ 989F 7D               ld a,l
 297+ 98A0 C6 20            add a,$20
 298+ 98A2 6F               ld l,a
 299+ 98A3 38 04            jr c,2F
 300+ 98A5 7C               ld a,h
 301+ 98A6 D6 08            sub 8
 302+ 98A8 67               ld h,a
 303+ 98A9 7C           2 ld a,h
 304+ 98AA FE 58            cp $58
 305+ 98AC 28 21            jr z,4F
 306+ 98AE D1               pop de
 307+ 98AF 7A           	ld a,d
 308+ 98B0 AE           	xor (hl)
 309+ 98B1 77           	ld (hl),a
 310+ 98B2 23           	inc hl
 311+ 98B3 D1               pop de
 312+ 98B4 7B           	ld a,e
 313+ 98B5 AE           	xor (hl)
 314+ 98B6 77           	ld (hl),a
 315+ 98B7 2B           	dec hl
 316+ 98B8 24           	inc h
 317+ 98B9 7C               ld a,h
 318+ 98BA E6 07            and 7
 319+ 98BC 20 0A            jr nz,3F
 320+ 98BE 7D               ld a,l
 321+ 98BF C6 20            add a,$20
 322+ 98C1 6F               ld l,a
 323+ 98C2 38 04            jr c,3F
 324+ 98C4 7C               ld a,h
 325+ 98C5 D6 08            sub 8
 326+ 98C7 67               ld h,a
 327+ 98C8 7C           3 ld a,h
 328+ 98C9 FE 58            cp $58
 329+ 98CB 28 02            jr z,4F
 330+ 98CD 10 C1            djnz 1B
 331+ 98CF ED 7B 1D 8A  4 ld sp,(Stack)
 332+ 98D3 C9           	ret
 333+ 98D4
 334+ 98D4 ED 73 1D 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98D8 FD F9        	ld sp,iy
 336+ 98DA 06 08            ld b,8
 337+ 98DC D1           1 pop de
 338+ 98DD 7B           	ld a,e
 339+ 98DE AE           	xor (hl)
 340+ 98DF 77           	ld (hl),a
 341+ 98E0 24            	inc h
 342+ 98E1 7C               ld a,h
 343+ 98E2 E6 07            and 7
 344+ 98E4 20 0A            jr nz,2F
 345+ 98E6 7D               ld a,l
 346+ 98E7 C6 20            add a,$20
 347+ 98E9 6F               ld l,a
 348+ 98EA 38 04            jr c,2F
 349+ 98EC 7C               ld a,h
 350+ 98ED D6 08            sub 8
 351+ 98EF 67               ld h,a
 352+ 98F0 7C           2 ld a,h
 353+ 98F1 FE 58            cp $58
 354+ 98F3 28 1C            jr z,4F
 355+ 98F5 D1               pop de
 356+ 98F6 7A           	ld a,d
 357+ 98F7 AE           	xor (hl)
 358+ 98F8 77           	ld (hl),a
 359+ 98F9 24           	inc h
 360+ 98FA 7C               ld a,h
 361+ 98FB E6 07            and 7
 362+ 98FD 20 0A            jr nz,3F
 363+ 98FF 7D               ld a,l
 364+ 9900 C6 20            add a,$20
 365+ 9902 6F               ld l,a
 366+ 9903 38 04            jr c,3F
 367+ 9905 7C               ld a,h
 368+ 9906 D6 08            sub 8
 369+ 9908 67               ld h,a
 370+ 9909 7C           3 ld a,h
 371+ 990A FE 58            cp $58
 372+ 990C 28 03            jr z,4F
 373+ 990E D1               pop de
 374+ 990F 10 CB            djnz 1B
 375+ 9911 ED 7B 1D 8A  4 ld sp,(Stack)
 376+ 9915 C9           	ret
 377+ 9916
 378+ 9916              ; ---------------------------------------------------
 379+ 9916              ;
 380+ 9916              ;   27/02/23
 381+ 9916              ;
 382+ 9916              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9916              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9916              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9916
 386+ 9916 ED 73 1D 8A  Pinta_Disparo ld (Stack),sp
 387+ 991A FD F9            ld sp,iy
 388+ 991C 06 03            ld b,3
 389+ 991E D1           1 pop de
 390+ 991F 7B               ld a,e
 391+ 9920 AE               xor (hl)
 392+ 9921 77               ld (hl),a
 393+ 9922 23               inc hl
 394+ 9923 7A               ld a,d
 395+ 9924 AE               xor (hl)
 396+ 9925 77               ld (hl),a
 397+ 9926 2B               dec hl
 398+ 9927
 399+ 9927 24               inc h
 400+ 9928 7C               ld a,h
 401+ 9929 E6 07            and 7
 402+ 992B 20 0A            jr nz,2F
 403+ 992D 7D               ld a,l
 404+ 992E C6 20            add a,$20
 405+ 9930 6F               ld l,a
 406+ 9931 38 04            jr c,2F
 407+ 9933 7C               ld a,h
 408+ 9934 D6 08            sub 8
 409+ 9936 67               ld h,a
 410+ 9937 7C           2 ld a,h
 411+ 9938 FE 58            cp $58
 412+ 993A 28 02            jr z,3F
 413+ 993C
 414+ 993C 10 E0            djnz 1B
 415+ 993E ED 7B 1D 8A  3 ld sp,(Stack)
 416+ 9942 C9               ret
 417+ 9943
# file closed: Rutinas_de_impresion_sprites.asm
1324  9943              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9943              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9943              ;
   3+ 9943              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9943              ;
   5+ 9943              ; *****************************************************************************************************************************************************************************************
   6+ 9943              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9943
   8+ 9943 7C           calcula_tercio ld a,h
   9+ 9944 E6 18        	and $18
  10+ 9946 CB 2F        	sra a
  11+ 9948 CB 2F        	sra a
  12+ 994A CB 2F        	sra a
  13+ 994C C9           	ret
  14+ 994D
# file closed: calcula_tercio.asm
1325  994D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 994D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 994D              ;
   3+ 994D              ;
   4+ 994D              ;	CLS.
   5+ 994D              ;
   6+ 994D              ;	Limpia la pantalla y define sus atributos.
   7+ 994D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 994D              ;
   9+ 994D              ;	COLORES: 0 ..... NEGRO
  10+ 994D              ;    		 1 ..... AZUL
  11+ 994D              ; 			 2 ..... ROJO
  12+ 994D              ;			 3 ..... MAGENTA
  13+ 994D              ; 			 4 ..... VERDE
  14+ 994D              ; 			 5 ..... CIAN
  15+ 994D              ;			 6 ..... AMARILLO
  16+ 994D              ; 			 7 ..... BLANCO
  17+ 994D              ;
  18+ 994D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 994D              ;
  20+ 994D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 994D
  22+ 994D
  23+ 994D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9950 11 01 40     	LD DE,$4001
  25+ 9953 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9956 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9958 ED B0        	LDIR
  28+ 995A 01 FF 02     	LD BC,767
  29+ 995D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 995E ED B0        	LDIR
  31+ 9960 C9           	ret
  32+ 9961
# file closed: Cls.asm
1326  9961              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9961              ; ******************************************************************************************************************************************************************************************
   2+ 9961              ;
   3+ 9961              ;   20/05/23
   4+ 9961              ;
   5+ 9961              ;	Recompone_posicion_inicio
   6+ 9961              ;
   7+ 9961              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9961              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9961              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9961              ;	_ a una u otra rutina.
  11+ 9961
  12+ 9961              Recompone_posicion_inicio
  13+ 9961
  14+ 9961 2A DB 89     	ld hl,(Posicion_inicio)
  15+ 9964 7D           	ld a,l
  16+ 9965 E6 1F        	and $1f
  17+ 9967 28 16        	jr z,1F
  18+ 9969
  19+ 9969 FE 1F        	cp $1f
  20+ 996B 28 0D        	jr z,3F
  21+ 996D
  22+ 996D 21 0A 8A     	ld hl,Ctrl_2
  23+ 9970 CB C6        	set 0,(hl)
  24+ 9972 2A CD 89     	ld hl,(Puntero_objeto)
  25+ 9975 22 0D 8A     	ld (Repone_puntero_objeto),hl
  26+ 9978 18 08        	jr 2F
  27+ 997A
  28+ 997A CD 1B 9B     3 call Mov_left
  29+ 997D 18 03        	jr 2F
  30+ 997F
  31+ 997F CD FD 99     1 call Mov_right
  32+ 9982 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9985 22 CD 89     	ld (Puntero_objeto),hl
  34+ 9988 C9           	ret
  35+ 9989
  36+ 9989              ; ******************************************************************************************************************************************************************************************
  37+ 9989              ;
  38+ 9989              ;   27/05/23
  39+ 9989              ;
  40+ 9989              ;	Mov_down
  41+ 9989              ;
  42+ 9989              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9989              ;
  44+ 9989              ;
  45+ 9989              Mov_down
  46+ 9989
  47+ 9989 CD EB 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 998C              ;																	; _ repone (Puntero_objeto).
  49+ 998C 21 F7 89     	ld hl,Ctrl_0
  50+ 998F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9991              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9991              ; 																	; _ en el caso de que no lo haya.
  53+ 9991 3A E1 89     	ld a,(Vel_down)
  54+ 9994 47           	ld b,a
  55+ 9995 2A CB 89         ld hl,(Posicion_actual)
  56+ 9998 CD 43 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 999B E6 02        	and 2
  58+ 999D 28 0F        	jr z,1F
  59+ 999F
  60+ 999F              ; Nos encontramos en el último tercio de pantalla.
  61+ 999F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 999F
  63+ 999F 7C           	ld a,h
  64+ 99A0 FE 57        	cp $57
  65+ 99A2 20 0A        	jr nz,1F
  66+ 99A4
  67+ 99A4 7D           	ld a,l
  68+ 99A5 C6 20        	add $20
  69+ 99A7 30 05        	jr nc,1F
  70+ 99A9
  71+ 99A9              ; ------------------------------
  72+ 99A9              ;	call Reaparece_arriba
  73+ 99A9 CD A8 9C     	call Reinicio
  74+ 99AC              ; ------------------------------
  75+ 99AC
  76+ 99AC 18 08        	jr 3F
  77+ 99AE CD 73 96     1 call NextScan
  78+ 99B1 22 CB 89     	ld (Posicion_actual),hl
  79+ 99B4 10 E2            djnz 2B
  80+ 99B6 CD CE 9C     3 call Genera_coordenadas
  81+ 99B9 C9           	ret
  82+ 99BA
  83+ 99BA              ; ******************************************************************************************************************************************************************************************
  84+ 99BA              ;
  85+ 99BA              ;   27/05/23
  86+ 99BA              ;
  87+ 99BA              ;	Mov_up
  88+ 99BA              ;
  89+ 99BA              ; 	Mueve el Sprite hacia arriba.
  90+ 99BA              ;
  91+ 99BA              ;
  92+ 99BA              Mov_up
  93+ 99BA
  94+ 99BA CD EB 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99BD              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99BD 21 F7 89     	ld hl,Ctrl_0
  97+ 99C0 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99C2              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99C2              ; 																		; _ en el caso de que no lo haya.
 100+ 99C2 3A E0 89     	ld a,(Vel_up)
 101+ 99C5 47           	ld b,a
 102+ 99C6 2A CB 89     	ld hl,(Posicion_actual)
 103+ 99C9 CD 43 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99CC A7           	and a
 105+ 99CD 20 10        	jr nz,1F
 106+ 99CF
 107+ 99CF              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99CF              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99CF
 110+ 99CF 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99D0 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99D2 20 0B            jr nz,1F
 113+ 99D4 7D               ld a,l
 114+ 99D5 D6 20            sub $20
 115+ 99D7 30 06            jr nc,1F
 116+ 99D9 25               dec h
 117+ 99DA
 118+ 99DA              ; -----------------------------
 119+ 99DA CD 89 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99DD              ;	call Reinicio
 121+ 99DD              ; -----------------------------
 122+ 99DD
 123+ 99DD 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99DF CD 82 96     1 call PreviousScan
 125+ 99E2 22 CB 89     	ld (Posicion_actual),hl
 126+ 99E5 10 E2            djnz 3B
 127+ 99E7 CD CE 9C     2 call Genera_coordenadas
 128+ 99EA C9           	ret
 129+ 99EB
 130+ 99EB              ; -----------------------------
 131+ 99EB              ;
 132+ 99EB              ;	27/5/23
 133+ 99EB              ;
 134+ 99EB              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99EB              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99EB              ;
 137+ 99EB              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99EB              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99EB              ;
 140+ 99EB              ;	Modifica: A y (Puntero_objeto).
 141+ 99EB
 142+ 99EB 3A 0A 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99EE CB 47        	bit 0,a
 144+ 99F0 C8           	ret z
 145+ 99F1 CB 87        	res 0,a
 146+ 99F3 32 0A 8A     	ld (Ctrl_2),a
 147+ 99F6 2A 0D 8A     	ld hl,(Repone_puntero_objeto)
 148+ 99F9 22 CD 89     	ld (Puntero_objeto),hl
 149+ 99FC C9           	ret
 150+ 99FD
 151+ 99FD              ; ******************************************************************************************************************************************************************************************
 152+ 99FD              ;
 153+ 99FD              ;	19/10/22
 154+ 99FD              ;
 155+ 99FD              ;	Mov_right.
 156+ 99FD              ;
 157+ 99FD              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99FD              ;
 159+ 99FD
 160+ 99FD 21 F7 89     Mov_right ld hl,Ctrl_0
 161+ 9A00 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A02              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A02              ; 																	; _ en el caso de que no lo haya.
 164+ 9A02 3A F7 89     	ld a,(Ctrl_0)
 165+ 9A05 CB 77        	bit 6,a
 166+ 9A07 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A09
 168+ 9A09 CD 37 9C     	call Stop_Amadeus_right
 169+ 9A0C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A0D 18 4D        	jr 8F
 171+ 9A0F
 172+ 9A0F 3A CF 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A12 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A14 20 46        	jr nz,8F
 175+ 9A16
 176+ 9A16 3A D1 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A19 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A1A 28 40        	jr z,8F
 179+ 9A1C
 180+ 9A1C              ; ---------- ---------- ----------
 181+ 9A1C              ;
 182+ 9A1C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A1C
 184+ 9A1C 3A DF 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A1F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A21 28 11        	jr z,1F
 187+ 9A23 38 06        	jr c,6F
 188+ 9A25 FE 04        	cp 4
 189+ 9A27 28 14        	jr z,7F
 190+ 9A29 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A2B
 192+ 9A2B              ; ---------- ---------- ----------
 193+ 9A2B              ;
 194+ 9A2B              ; Perfiles de velocidad
 195+ 9A2B              ;
 196+ 9A2B
 197+ 9A2B 3A D1 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A2E FE FE        	cp $fe
 199+ 9A30 20 2A        	jr nz,8F
 200+ 9A32 18 10        	jr 3F
 201+ 9A34 3A D1 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A37 FE FD        	cp $fd
 203+ 9A39 20 21        	jr nz,8F
 204+ 9A3B 18 07        	jr 3F
 205+ 9A3D 3A D1 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A40 FE FB        	cp $fb
 207+ 9A42 20 18        	jr nz,8F
 208+ 9A44
 209+ 9A44              ; ---------- ---------- ----------
 210+ 9A44
 211+ 9A44              3
 212+ 9A44 CD 77 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A47              ;	call Reinicio
 214+ 9A47
 215+ 9A47              ; ---------- ---------- ----------
 216+ 9A47              ;
 217+ 9A47              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A47
 219+ 9A47 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A49 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A4A CD 63 9A     	call DESPLZ_DER
 222+ 9A4D C1           	pop bc
 223+ 9A4E 10 F9        	djnz 5B
 224+ 9A50 2A CB 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A53 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A54 22 CB 89     	ld (Posicion_actual),hl
 227+ 9A57 CD CE 9C     	call Genera_coordenadas
 228+ 9A5A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A5C
 230+ 9A5C              ; ---------- ---------- ----------
 231+ 9A5C
 232+ 9A5C 2A CB 89     8 ld hl,(Posicion_actual)
 233+ 9A5F CD 63 9A     	call DESPLZ_DER
 234+ 9A62 C9           2 ret
 235+ 9A63
 236+ 9A63              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A63              ;
 238+ 9A63              ;	22/9/22
 239+ 9A63              ;
 240+ 9A63
 241+ 9A63 CD 72 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A66 CD BE 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A69 CD E7 9A         call Ciclo_completo
 244+ 9A6C 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A6F CB FE        	set 7,(hl)
 246+ 9A71 C9           	ret
 247+ 9A72
 248+ 9A72              ; ******************************************************************************************************************************************************************************************
 249+ 9A72              ;	15/02/23
 250+ 9A72              ;
 251+ 9A72
 252+ 9A72 3A DF 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9A75 47           	ld b,a
 254+ 9A76 2A D7 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A79 23           1 inc hl
 256+ 9A7A 23           	inc hl
 257+ 9A7B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A7D 22 D7 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A80 CD 47 8D     	call Extrae_address
 260+ 9A83 22 CD 89     	ld (Puntero_objeto),hl
 261+ 9A86
 262+ 9A86              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A86
 264+ 9A86              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A86              ; Cuántos movimientos hemos hecho ??
 266+ 9A86              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A86
 268+ 9A86 2A D3 89     7 ld hl,(Indice_Sprite_der)
 269+ 9A89 EB           	ex de,hl
 270+ 9A8A A7           	and a
 271+ 9A8B ED 52        	sbc hl,de
 272+ 9A8D CB 3D        	srl l
 273+ 9A8F 3E 08        6 ld a,8
 274+ 9A91 95           	sub l
 275+ 9A92 30 1E        	jr nc,3F
 276+ 9A94
 277+ 9A94              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A94              ; B="0".
 279+ 9A94
 280+ 9A94 04           4 inc b
 281+ 9A95 3C           	inc a
 282+ 9A96 20 FC        	jr nz,4B
 283+ 9A98 78           	ld a,b
 284+ 9A99 08           	ex af,af
 285+ 9A9A 2A D3 89     	ld hl,(Indice_Sprite_der)
 286+ 9A9D 23           5 inc hl
 287+ 9A9E 23           	inc hl
 288+ 9A9F 10 FC        	djnz 5B
 289+ 9AA1 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9AA4 CD 47 8D     	call Extrae_address
 291+ 9AA7 22 CD 89     	ld (Puntero_objeto),hl
 292+ 9AAA
 293+ 9AAA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AAA              ; _(Posicion_actual).
 295+ 9AAA
 296+ 9AAA 21 CB 89     	ld hl,Posicion_actual
 297+ 9AAD 34           	inc (hl)
 298+ 9AAE 08               ex af,af
 299+ 9AAF 6F           	ld l,a
 300+ 9AB0 18 DD        	jr 6B
 301+ 9AB2
 302+ 9AB2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AB2
 304+ 9AB2 47           3 ld b,a
 305+ 9AB3 2A D5 89     	ld hl,(Indice_Sprite_izq)
 306+ 9AB6 23           2 inc hl
 307+ 9AB7 23           	inc hl
 308+ 9AB8 10 FC        	djnz 2B
 309+ 9ABA 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9ABD C9           8 ret
 311+ 9ABE
 312+ 9ABE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9ABE              ;
 314+ 9ABE              ;	24/7/22
 315+ 9ABE              ;
 316+ 9ABE              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9ABE              ;
 318+ 9ABE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9ABE              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9ABE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9ABE
 322+ 9ABE 3A D1 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AC1 A7           	and a
 324+ 9AC2 20 1F        	jr nz,1F
 325+ 9AC4 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AC6 32 D1 89         ld (CTRL_DESPLZ),a
 327+ 9AC9
 328+ 9AC9 21 CA 89     	ld hl,Columns
 329+ 9ACC 34           	inc (hl)
 330+ 9ACD 3A DD 89     	ld a,(Cuad_objeto)
 331+ 9AD0 E6 01        	and 1
 332+ 9AD2 28 0F        	jr z,1F
 333+ 9AD4 2A CB 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AD7 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AD8 22 CB 89     	ld (Posicion_actual),hl
 336+ 9ADB CD CE 9C     	call Genera_coordenadas
 337+ 9ADE CD 43 9C     	call Inc_CTRL_DESPLZ
 338+ 9AE1 18 03        	jr 2F
 339+ 9AE3 CD 43 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AE6 C9           2 ret
 341+ 9AE7
 342+ 9AE7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AE7              ;
 344+ 9AE7              ;	24/7/22
 345+ 9AE7              ;
 346+ 9AE7              ;	Ciclo_completo.
 347+ 9AE7              ;
 348+ 9AE7              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AE7              ;
 350+ 9AE7              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AE7              ; 	Decrementamos (Columns).
 352+ 9AE7              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AE7              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AE7
 355+ 9AE7
 356+ 9AE7 3A D1 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AEA FE FF        	cp $ff
 358+ 9AEC 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AEE E6 F0        	and $f0
 360+ 9AF0 20 28        	jr nz,3F
 361+ 9AF2
 362+ 9AF2              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AF2
 364+ 9AF2 3A D1 89     	ld a,(CTRL_DESPLZ)
 365+ 9AF5 47           	ld b,a
 366+ 9AF6 3E F8        	ld a,$f8
 367+ 9AF8 80           	add b
 368+ 9AF9 32 D1 89     	ld (CTRL_DESPLZ),a
 369+ 9AFC 18 1C        	jr 3F
 370+ 9AFE 21 CA 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B01 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B02 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B03 32 D1 89     	ld (CTRL_DESPLZ),a
 374+ 9B06 3A DD 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B09 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B0B 20 0A        	jr nz,2F
 377+ 9B0D 2A CB 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B10 23           	inc hl
 379+ 9B11 22 CB 89     	ld (Posicion_actual),hl
 380+ 9B14 CD CE 9C     	call Genera_coordenadas
 381+ 9B17
 382+ 9B17              ; Inicia el puntero de Sprite.
 383+ 9B17
 384+ 9B17 CD 5E 8D     2 call Inicia_puntero_objeto_der
 385+ 9B1A C9           3 ret
 386+ 9B1B
 387+ 9B1B              ; ******************************************************************************************************************************************************************************************
 388+ 9B1B              ;
 389+ 9B1B              ;	15/02/23
 390+ 9B1B              ;
 391+ 9B1B              ;	Mov_left.
 392+ 9B1B              ;
 393+ 9B1B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B1B              ;
 395+ 9B1B 21 F7 89     Mov_left ld hl,Ctrl_0
 396+ 9B1E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B20              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B20              ; 																	; _ en el caso de que no lo haya.
 399+ 9B20 3A F7 89     	ld a,(Ctrl_0)
 400+ 9B23 CB 77        	bit 6,a
 401+ 9B25 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B27
 403+ 9B27 CD 3D 9C     	call Stop_Amadeus_left
 404+ 9B2A C8           	ret z
 405+ 9B2B 20 4A        	jr nz,8F
 406+ 9B2D
 407+ 9B2D 3A CF 89     11 ld a,(Coordenada_X)
 408+ 9B30 A7           	and a
 409+ 9B31 20 44        	jr nz,8F
 410+ 9B33
 411+ 9B33 3A D1 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B36 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B37 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B39
 415+ 9B39              ; ---------- ---------- ----------
 416+ 9B39
 417+ 9B39 3A DE 89     	ld a,(Vel_left)
 418+ 9B3C FE 02        	cp 2
 419+ 9B3E 28 0F        	jr z,1F
 420+ 9B40 38 04        	jr c,6F
 421+ 9B42 FE 04        	cp 4
 422+ 9B44 28 12        	jr z,7F
 423+ 9B46
 424+ 9B46              ; ---------- ---------- ----------
 425+ 9B46
 426+ 9B46 3A D1 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B49 FE F8        	cp $f8
 428+ 9B4B 20 2A        	jr nz,8F
 429+ 9B4D 18 10        	jr 4F
 430+ 9B4F 3A D1 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B52 FE F9        	cp $f9
 432+ 9B54 20 21        	jr nz,8F
 433+ 9B56 18 07        	jr 4F
 434+ 9B58 3A D1 89     7 ld a,(CTRL_DESPLZ)
 435+ 9B5B FE FB        	cp $fb
 436+ 9B5D 20 18        	jr nz,8F
 437+ 9B5F
 438+ 9B5F              ; ---------- ---------- ----------
 439+ 9B5F
 440+ 9B5F              4
 441+ 9B5F CD 65 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B62              ;	call Reinicio
 443+ 9B62
 444+ 9B62              ; ---------- ---------- ----------
 445+ 9B62
 446+ 9B62 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B64 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B65
 449+ 9B65              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B65              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B65
 452+ 9B65 CD 7E 9B     	call DESPLZ_IZQ
 453+ 9B68 C1           	pop bc
 454+ 9B69 10 F9        	djnz 5B
 455+ 9B6B 2A CB 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B6E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B6F 22 CB 89     	ld (Posicion_actual),hl
 458+ 9B72 CD CE 9C     	call Genera_coordenadas
 459+ 9B75 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B77
 461+ 9B77              ; ---------- ---------- ----------
 462+ 9B77
 463+ 9B77              ; Movemos, no hay recolocación.
 464+ 9B77
 465+ 9B77 2A CB 89     8 ld hl,(Posicion_actual)
 466+ 9B7A CD 7E 9B     	call DESPLZ_IZQ
 467+ 9B7D C9           2 ret
 468+ 9B7E
 469+ 9B7E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B7E              ;
 471+ 9B7E              ;	22/9/22
 472+ 9B7E
 473+ 9B7E              DESPLZ_IZQ
 474+ 9B7E
 475+ 9B7E CD 8D 9B     	call Desplaza_izquierda
 476+ 9B81 CD D9 9B         call modifica_parametros_1er_DESPLZ
 477+ 9B84 CD 01 9C     	call Ciclo_completo_2
 478+ 9B87 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9B8A CB BE        	res 7,(hl)
 480+ 9B8C C9           	ret
 481+ 9B8D
 482+ 9B8D              Desplaza_izquierda
 483+ 9B8D
 484+ 9B8D 3A DE 89     	ld a,(Vel_left)
 485+ 9B90 47           	ld b,a
 486+ 9B91 2A D9 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9B94 23           1 inc hl
 488+ 9B95 23           	inc hl
 489+ 9B96 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9B98 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9B9B CD 47 8D     	call Extrae_address
 492+ 9B9E 22 CD 89     	ld (Puntero_objeto),hl
 493+ 9BA1
 494+ 9BA1              ; Modifica (Puntero_DESPLZ_der).
 495+ 9BA1
 496+ 9BA1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9BA1              ; Cuántos movimientos hemos hecho ??
 498+ 9BA1              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9BA1
 500+ 9BA1 2A D5 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9BA4 EB           	ex de,hl
 502+ 9BA5 A7           	and a
 503+ 9BA6 ED 52        	sbc hl,de
 504+ 9BA8 CB 3D        	srl l
 505+ 9BAA 3E 08        6 ld a,8
 506+ 9BAC 95           	sub l
 507+ 9BAD 30 1E        	jr nc,3F
 508+ 9BAF
 509+ 9BAF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9BAF              ; B="0".
 511+ 9BAF
 512+ 9BAF 04           4 inc b
 513+ 9BB0 3C           	inc a
 514+ 9BB1 20 FC        	jr nz,4B
 515+ 9BB3 78           	ld a,b
 516+ 9BB4 08           	ex af,af
 517+ 9BB5 2A D5 89     	ld hl,(Indice_Sprite_izq)
 518+ 9BB8 23           5 inc hl
 519+ 9BB9 23           	inc hl
 520+ 9BBA 10 FC        	djnz 5B
 521+ 9BBC 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9BBF CD 47 8D     	call Extrae_address
 523+ 9BC2 22 CD 89     	ld (Puntero_objeto),hl
 524+ 9BC5
 525+ 9BC5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9BC5              ; _(Posicion_actual).
 527+ 9BC5
 528+ 9BC5 21 CB 89     	ld hl,Posicion_actual
 529+ 9BC8 35           	dec (hl)
 530+ 9BC9 08           	ex af,af
 531+ 9BCA 6F           	ld l,a
 532+ 9BCB 18 DD        	jr 6B
 533+ 9BCD
 534+ 9BCD              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9BCD
 536+ 9BCD 47           3 ld b,a
 537+ 9BCE 2A D3 89     	ld hl,(Indice_Sprite_der)
 538+ 9BD1 23           2 inc hl
 539+ 9BD2 23           	inc hl
 540+ 9BD3 10 FC        	djnz 2B
 541+ 9BD5 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9BD8 C9           8 ret
 543+ 9BD9
 544+ 9BD9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9BD9              ;
 546+ 9BD9              ;	modifica_parametros_1er_DESPLZ
 547+ 9BD9              ;
 548+ 9BD9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9BD9              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9BD9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9BD9
 552+ 9BD9 3A D1 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9BDC A7           	and a
 554+ 9BDD 20 1E        	jr nz,1F
 555+ 9BDF 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9BE0 32 D1 89         ld (CTRL_DESPLZ),a
 557+ 9BE3 21 CA 89     	ld hl,Columns
 558+ 9BE6 34           	inc (hl)
 559+ 9BE7 3A DD 89     	ld a,(Cuad_objeto)
 560+ 9BEA E6 01        	and 1
 561+ 9BEC 20 0F        	jr nz,1F
 562+ 9BEE 2A CB 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9BF1 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9BF2 22 CB 89     	ld (Posicion_actual),hl
 565+ 9BF5 CD CE 9C     	call Genera_coordenadas
 566+ 9BF8 CD 54 9C     	call Dec_CTRL_DESPLZ
 567+ 9BFB 18 03        	jr 2F
 568+ 9BFD CD 54 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C00 C9           2 ret
 570+ 9C01
 571+ 9C01              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C01
 573+ 9C01 3A D1 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C04 FE F7        	cp $f7
 575+ 9C06 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C08 30 2C        	jr nc,3F
 577+ 9C0A
 578+ 9C0A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C0A
 580+ 9C0A 06 00        	ld b,0
 581+ 9C0C 04           4 inc b
 582+ 9C0D 3C           	inc a
 583+ 9C0E FE F7        	cp $f7
 584+ 9C10 20 FA        	jr nz,4B
 585+ 9C12 3E FF        	ld a,$ff
 586+ 9C14 90           	sub b
 587+ 9C15 32 D1 89     	ld (CTRL_DESPLZ),a
 588+ 9C18 18 1C        	jr 3F
 589+ 9C1A
 590+ 9C1A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C1A
 592+ 9C1A 21 CA 89     1 ld hl,Columns
 593+ 9C1D 35           	dec (hl)
 594+ 9C1E AF           	xor a
 595+ 9C1F 32 D1 89     	ld (CTRL_DESPLZ),a
 596+ 9C22 3A DD 89     	ld a,(Cuad_objeto)
 597+ 9C25 E6 01        	and 1
 598+ 9C27 28 0A        	jr z,2F
 599+ 9C29 2A CB 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C2C 2B           	dec hl
 601+ 9C2D 22 CB 89     	ld (Posicion_actual),hl
 602+ 9C30 CD CE 9C     	call Genera_coordenadas
 603+ 9C33
 604+ 9C33              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C33
 606+ 9C33 CD 71 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C36 C9           3 ret
 608+ 9C37
 609+ 9C37              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C37              ;
 611+ 9C37              ;	19/10/22
 612+ 9C37              ;
 613+ 9C37              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C37              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C37
 616+ 9C37 3A CF 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C3A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C3C C9           	ret
 619+ 9C3D
 620+ 9C3D              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C3D              ;
 622+ 9C3D              ;	19/10/22
 623+ 9C3D              ;
 624+ 9C3D              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C3D              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C3D
 627+ 9C3D 3A CF 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C40 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C42 C9           	ret
 630+ 9C43
 631+ 9C43              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C43              ;
 633+ 9C43              ;	24/7/22
 634+ 9C43              ;
 635+ 9C43              ;	Inc_CTRL_DESPLZ
 636+ 9C43              ;
 637+ 9C43              ;
 638+ 9C43              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C43
 640+ 9C43 21 D1 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C46 3A DF 89     	ld a,(Vel_right)
 642+ 9C49 A7           	and a
 643+ 9C4A 28 06        	jr z,1F
 644+ 9C4C 47           	ld b,a
 645+ 9C4D 34           3 inc (hl)
 646+ 9C4E 10 FD        	djnz 3B
 647+ 9C50 18 01        	jr 2F
 648+ 9C52 34           1 inc (hl)
 649+ 9C53 C9           2 ret
 650+ 9C54
 651+ 9C54              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C54              ;
 653+ 9C54              ;	5/2/23
 654+ 9C54              ;
 655+ 9C54              ;	Dec_CTRL_DESPLZ
 656+ 9C54              ;
 657+ 9C54              ;
 658+ 9C54              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C54
 660+ 9C54 21 D1 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9C57 3A DE 89     	ld a,(Vel_left)
 662+ 9C5A A7           	and a
 663+ 9C5B 28 06        	jr z,1F
 664+ 9C5D 47           	ld b,a
 665+ 9C5E 35           3 dec (hl)
 666+ 9C5F 10 FD        	djnz 3B
 667+ 9C61 18 01        	jr 2F
 668+ 9C63 35           1 dec (hl)
 669+ 9C64 C9           2 ret
 670+ 9C65
 671+ 9C65              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9C65
 673+ 9C65 2A CB 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9C68 01 1F 00     	ld bc,31
 675+ 9C6B A7           	and a
 676+ 9C6C ED 4A        	adc hl,bc
 677+ 9C6E 22 CB 89     	ld (Posicion_actual),hl
 678+ 9C71 21 F7 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9C74 CB C6        	set 0,(hl)
 680+ 9C76 C9           	ret
 681+ 9C77
 682+ 9C77              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9C77
 684+ 9C77 2A CB 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9C7A 01 1F 00     	ld bc,31
 686+ 9C7D A7           	and a
 687+ 9C7E ED 42        	sbc hl,bc
 688+ 9C80 22 CB 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9C83 21 F7 89     	ld hl,Ctrl_0
 690+ 9C86 CB CE        	set 1,(hl)
 691+ 9C88 C9           	ret
 692+ 9C89
 693+ 9C89              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9C89
 695+ 9C89 24           Reaparece_abajo inc h
 696+ 9C8A 01 E0 17     	ld bc,$17e0
 697+ 9C8D A7           	and a
 698+ 9C8E ED 4A        	adc hl,bc
 699+ 9C90 22 CB 89     	ld (Posicion_actual),hl
 700+ 9C93 21 F7 89     	ld hl,Ctrl_0
 701+ 9C96 CB D6        	set 2,(hl)
 702+ 9C98 C9           	ret
 703+ 9C99
 704+ 9C99              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9C99
 706+ 9C99 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9C9C A7           	and a
 708+ 9C9D ED 42        	sbc hl,bc
 709+ 9C9F 22 CB 89     	ld (Posicion_actual),hl
 710+ 9CA2 21 F7 89     	ld hl,Ctrl_0
 711+ 9CA5 CB DE        	set 3,(hl)
 712+ 9CA7 C9           	ret
 713+ 9CA8
 714+ 9CA8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9CA8              ;
 716+ 9CA8              ;	15/07/23
 717+ 9CA8
 718+ 9CA8              Reinicio
 719+ 9CA8
 720+ 9CA8              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9CA8
 722+ 9CA8 AF           	xor a
 723+ 9CA9 21 FE 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9CAC CD CA 9C     	call Limpia_contenido_hl
 725+ 9CAF
 726+ 9CAF 21 CB 89     	ld hl,Posicion_actual
 727+ 9CB2 CD CA 9C     	call Limpia_contenido_hl
 728+ 9CB5
 729+ 9CB5 CD EB 9F     	call Inicializa_Puntero_indice_mov
 730+ 9CB8 CD 75 9F     	call Inicia_Puntero_mov
 731+ 9CBB
 732+ 9CBB 21 00 8A     	ld hl,Incrementa_puntero
 733+ 9CBE 06 05        	ld b,5
 734+ 9CC0 77           1 ld (hl),a
 735+ 9CC1 23           	inc hl
 736+ 9CC2 10 FC        	djnz 1B
 737+ 9CC4
 738+ 9CC4 21 0A 8A     	ld hl,Ctrl_2
 739+ 9CC7 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9CC9
 741+ 9CC9 C9           	ret
 742+ 9CCA
 743+ 9CCA 77           Limpia_contenido_hl	ld (hl),a
 744+ 9CCB 23           	inc hl
 745+ 9CCC 77           	ld (hl),a
 746+ 9CCD C9           	ret
 747+ 9CCE
 748+ 9CCE
# file closed: Direcciones.asm
1327  9CCE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CCE              ; ------------------------------------------------------------------------
   2+ 9CCE              ;
   3+ 9CCE              ;	02/04/23
   4+ 9CCE              ;
   5+ 9CCE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CCE              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CCE              ;
   8+ 9CCE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CCE              ;
  10+ 9CCE              ;	Modifica: A,BC y DE.
  11+ 9CCE
  12+ 9CCE C5           Genera_coordenadas push bc
  13+ 9CCF E5           	push hl
  14+ 9CD0 D5           	push de
  15+ 9CD1
  16+ 9CD1 2A CB 89     	ld hl,(Posicion_actual)
  17+ 9CD4
  18+ 9CD4 7D           	ld a,l
  19+ 9CD5 E6 1F        	and $1f
  20+ 9CD7 32 CF 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CDA
  22+ 9CDA CD 43 99     	call calcula_tercio
  23+ 9CDD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CDE
  25+ 9CDE 1E 00        	ld e,0
  26+ 9CE0 7D           	ld a,l
  27+ 9CE1 E6 E0        	and $e0
  28+ 9CE3 28 01        	jr z,1F
  29+ 9CE5 04           	inc b
  30+ 9CE6
  31+ 9CE6 04           1 inc b
  32+ 9CE7 05           	dec b
  33+ 9CE8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CEA              ;														; _ , salimos.
  35+ 9CEA 1C           3 inc e
  36+ 9CEB D6 20        	sub 32
  37+ 9CED 20 FB        	jr nz,3B
  38+ 9CEF 10 F5        	djnz 1B
  39+ 9CF1
  40+ 9CF1 7B           2 ld a,e
  41+ 9CF2 32 D0 89     	ld (Coordenada_y),a
  42+ 9CF5
  43+ 9CF5 D1           	pop de
  44+ 9CF6 E1           	pop hl
  45+ 9CF7 C1           	pop bc
  46+ 9CF8
  47+ 9CF8 C9           	ret
  48+ 9CF9
  49+ 9CF9              ; ------------------------------------------------------------------------
  50+ 9CF9              ;	28/05/23
  51+ 9CF9              ;
  52+ 9CF9              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CF9              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CF9              ;
  55+ 9CF9              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CF9              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CF9              ;
  58+ 9CF9              ;		DE="$120d"
  59+ 9CF9              ;
  60+ 9CF9              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CF9              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CF9              ;
  63+ 9CF9              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CF9
  65+ 9CF9              ;	Modifica: A,BC y DE.
  66+ 9CF9
  67+ 9CF9
  68+ 9CF9              Genera_coordenadas_disparo
  69+ 9CF9
  70+ 9CF9              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CF9
  72+ 9CF9 7D           	ld a,l
  73+ 9CFA E6 1F        	and $1f
  74+ 9CFC 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CFD CD 43 99     	call calcula_tercio
  76+ 9D00 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D01 1E 00        	ld e,0
  78+ 9D03 7D           	ld a,l
  79+ 9D04 E6 E0        	and $e0
  80+ 9D06 28 01        	jr z,1F
  81+ 9D08 04           	inc b
  82+ 9D09 1C           1 inc e
  83+ 9D0A D6 20        	sub 32
  84+ 9D0C 20 FB        	jr nz,1B
  85+ 9D0E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D10 C9           	ret
  87+ 9D11
# file closed: Genera_coordenadas.asm
1328  9D11              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D11
   2+ 9D11
   3+ 9D11              ;   07/07/23
   4+ 9D11              ;
   5+ 9D11              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D11              ;
   7+ 9D11              ;   Codificación:
   8+ 9D11              ;
   9+ 9D11              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D11              ;
  11+ 9D11              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D11              ;
  13+ 9D11              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D11              ;
  15+ 9D11              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D11              ;
  17+ 9D11              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D11              ;                               ..... %01000010 Vel_up 4
  19+ 9D11              ;                                               Vel_down 2
  20+ 9D11              ;                               ..... $42
  21+ 9D11              ;
  22+ 9D11              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D11              ;
  24+ 9D11              ;                               ..... %01000010 Vel_left 4
  25+ 9D11              ;                                               Vel_right 2
  26+ 9D11              ;                               ..... $42
  27+ 9D11              ;
  28+ 9D11              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D11              ;
  30+ 9D11              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D11              ;
  32+ 9D11              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D11              ;
  34+ 9D11              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D11              ;                                     $53
  36+ 9D11              ;
  37+ 9D11              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D11              ;
  39+ 9D11              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D11              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D11              ;
  42+ 9D11              ;                       Arriba ..... $81
  43+ 9D11              ;                       Arriba - izquierda ..... $a1
  44+ 9D11              ;                       Arriba - derecha ..... $91
  45+ 9D11              ;
  46+ 9D11              ;                       Abajo ..... $41
  47+ 9D11              ;                       Abajo - izquierda ..... $61
  48+ 9D11              ;                       Abajo - derecha ..... $51
  49+ 9D11              ;
  50+ 9D11              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D11              ;
  52+ 9D11              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D11              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D11              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D11              ;
  56+ 9D11              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D11              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D11              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D11              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D11              ;
  61+ 9D11              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D11              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D11              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D11              ;
  65+ 9D11              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D11              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D11              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D11              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D11
  70+ 9D11              ; ----- ----- ----- ----- -----
  71+ 9D11
  72+ 9D11 3D 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D13 45 9D            defw F_1
  74+ 9D15 4F 9D            defw F_2
  75+ 9D17 59 9D            defw Codo_abajo_derecha
  76+ 9D19 8D 9D            defw Derecha_y_subiendo
  77+ 9D1B 97 9D            defw Derecha_y_subiendo_1
  78+ 9D1D A1 9D            defw F_3
  79+ 9D1F AB 9D            defw F_4
  80+ 9D21 B5 9D            defw Derecha_y_bajando
  81+ 9D23 BF 9D            defw Derecha_y_bajando_1
  82+ 9D25 C9 9D            defw Derecha_y_bajando_2
  83+ 9D27 D3 9D            defw Codo_derecha_abajo
  84+ 9D29 03 9E            defw Codo_abajo_izq.
  85+ 9D2B 37 9E            defw Izquierda_y_subiendo
  86+ 9D2D 41 9E            defw Izquierda_y_subiendo_1
  87+ 9D2F 4B 9E            defw F_5
  88+ 9D31 55 9E            defw F_6
  89+ 9D33 5F 9E            defw Izquierda_y_bajando
  90+ 9D35 69 9E            defw Izquierda_y_bajando_1
  91+ 9D37 73 9E            defw Izquierda_y_bajando_2
  92+ 9D39 7D 9E            defw Codo_izquierda_abajo
  93+ 9D3B 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D3D
  95+ 9D3D 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D41 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D45
  98+ 9D45 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D49 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D4D 08 00
 100+ 9D4F 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D53 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D57 0F FE
 102+ 9D59
 103+ 9D59 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D5D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D61 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D65 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D69 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D6D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D71 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D75 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D79 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D7D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D81 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D85 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D89 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D8D
 117+ 9D8D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D91 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D95 06 00
 119+ 9D97
 120+ 9D97 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D9B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D9F 02 00
 122+ 9DA1
 123+ 9DA1 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DA5 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DA9 04 00
 125+ 9DAB 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DAF 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DB3 08 00
 127+ 9DB5
 128+ 9DB5 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DB9 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DBD 02 00
 130+ 9DBF
 131+ 9DBF 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DC3 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DC7 06 00
 133+ 9DC9
 134+ 9DC9 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DCD 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DD1 06 00
 136+ 9DD3
 137+ 9DD3              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DD3
 139+ 9DD3 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DD7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DDB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DDF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DE3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DE7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DEB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DEF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DF3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DF7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DFB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DFF 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E03
 152+ 9E03 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E07 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E0B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E0F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E13 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E17 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E1B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E1F 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E23 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E27 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E2B 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E2F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E33 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E37
 166+ 9E37 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E3B 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E3F 06 00
 168+ 9E41
 169+ 9E41 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E45 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E49 02 00
 171+ 9E4B
 172+ 9E4B 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E4F 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E53 04 00
 174+ 9E55 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E59 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E5D 08 00
 176+ 9E5F
 177+ 9E5F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E63 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E67 02 00
 179+ 9E69
 180+ 9E69 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E6D 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E71 06 00
 182+ 9E73
 183+ 9E73 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E77 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E7B 06 00
 185+ 9E7D
 186+ 9E7D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E81 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E85 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E89 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E8D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E91 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E95 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E99 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E9D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EA1 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EA5 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EA9 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EAD
 199+ 9EAD              ; ----- ----- ----- ----- -----
 200+ 9EAD              ;
 201+ 9EAD              ;   27/06/23
 202+ 9EAD
 203+ 9EAD              Movimiento
 204+ 9EAD
 205+ 9EAD              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EAD
 207+ 9EAD              ;    ld hl,(Posicion_actual)
 208+ 9EAD
 209+ 9EAD 3A 0A 8A         ld a,(Ctrl_2)
 210+ 9EB0 CB 57            bit 2,a
 211+ 9EB2 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EB4
 213+ 9EB4 2A FC 89         ld hl,(Puntero_mov)
 214+ 9EB7 7E               ld a,(hl)
 215+ 9EB8
 216+ 9EB8              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EB8
 218+ 9EB8              Inicia_desplazamiento.
 219+ 9EB8
 220+ 9EB8              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EB8
 222+ 9EB8 CD AC 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EBB
 224+ 9EBB              ; Iniciamos (Repetimos_mov).
 225+ 9EBB
 226+ 9EBB 7E               ld a,(hl)
 227+ 9EBC E6 0F            and $0f
 228+ 9EBE 32 02 8A         ld (Repetimos_desplazamiento),a
 229+ 9EC1 32 03 8A         ld (Repetimos_desplazamiento_backup),a
 230+ 9EC4
 231+ 9EC4              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EC4
 233+ 9EC4 23               inc hl
 234+ 9EC5 7E               ld a,(hl)
 235+ 9EC6 32 05 8A         ld (Cola_de_desplazamiento),a
 236+ 9EC9 2B               dec hl
 237+ 9ECA
 238+ 9ECA 21 0A 8A         ld hl,Ctrl_2
 239+ 9ECD CB D6            set 2,(hl)
 240+ 9ECF
 241+ 9ECF              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9ECF              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9ECF
 244+ 9ECF              Desplazamiento_iniciado
 245+ 9ECF
 246+ 9ECF CD 80 9F         call Aplica_desplazamiento
 247+ 9ED2
 248+ 9ED2 3A 0A 8A         ld a,(Ctrl_2)
 249+ 9ED5 CB 67            bit 4,a
 250+ 9ED7 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9ED8
 252+ 9ED8 21 02 8A     3 ld hl,Repetimos_desplazamiento
 253+ 9EDB 35               dec (hl)
 254+ 9EDC C0               ret nz
 255+ 9EDD
 256+ 9EDD              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EDD              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EDD              ; Analiza (Cola_de_desplazamiento).
 259+ 9EDD
 260+ 9EDD 3A 05 8A     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EE0 A7               and a
 262+ 9EE1 CC D5 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EE4 28 30            jr z,Reinicia_el_movimiento
 264+ 9EE6
 265+ 9EE6 FE FF            cp $ff
 266+ 9EE8 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EEA
 268+ 9EEA FE FE            cp $fe
 269+ 9EEC CC 59 9F         call z,Fijamos_bucle
 270+ 9EEF 28 25            jr z,Reinicia_el_movimiento
 271+ 9EF1
 272+ 9EF1 FE FD            cp $fd
 273+ 9EF3 20 11            jr nz,1F
 274+ 9EF5
 275+ 9EF5              ; ---
 276+ 9EF5              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EF5
 278+ 9EF5 3A 0A 8A         ld a,(Ctrl_2)
 279+ 9EF8 CB 5F            bit 3,a
 280+ 9EFA 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EFC
 282+ 9EFC              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EFC
 284+ 9EFC 21 0A 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EFF CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F01
 287+ 9F01 CD 6A 9F         call Inicia_Repetimos_movimiento
 288+ 9F04 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F06              ; ---
 290+ 9F06
 291+ 9F06 FE 01        1 cp 1
 292+ 9F08 CA 43 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F0B
 294+ 9F0B 3D               dec a
 295+ 9F0C 32 05 8A         ld (Cola_de_desplazamiento),a
 296+ 9F0F
 297+ 9F0F 3A 03 8A         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F12 32 02 8A         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F15              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F15 C9               ret
 301+ 9F16
 302+ 9F16              Reinicia_el_movimiento
 303+ 9F16
 304+ 9F16 3A 0A 8A         ld a,(Ctrl_2)
 305+ 9F19 CB 5F            bit 3,a
 306+ 9F1B 28 1B            jr z,2F
 307+ 9F1D
 308+ 9F1D              ; (Cola_de_desplazamiento)="254".
 309+ 9F1D
 310+ 9F1D 21 04 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F20 35               dec (hl)
 312+ 9F21 20 15            jr nz,2F
 313+ 9F23
 314+ 9F23              ; Fin de las repeticiones del último movimiento.
 315+ 9F23
 316+ 9F23 21 0A 8A         ld hl,Ctrl_2
 317+ 9F26 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F28
 319+ 9F28 2A FC 89         ld hl,(Puntero_mov)
 320+ 9F2B 23               inc hl
 321+ 9F2C 23               inc hl
 322+ 9F2D 23               inc hl
 323+ 9F2E 22 FC 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F31              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F31 7E               ld a,(hl)
 326+ 9F32 32 05 8A         ld (Cola_de_desplazamiento),a
 327+ 9F35
 328+ 9F35 C3 DD 9E         jp Cola
 329+ 9F38
 330+ 9F38
 331+ 9F38 CD 75 9F     2 call Inicia_Puntero_mov
 332+ 9F3B
 333+ 9F3B 21 0A 8A         ld hl,Ctrl_2
 334+ 9F3E CB 96            res 2,(hl)
 335+ 9F40
 336+ 9F40 C3 AD 9E         jp Movimiento
 337+ 9F43
 338+ 9F43              Siguiente_desplazamiento
 339+ 9F43
 340+ 9F43              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F43              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F43
 343+ 9F43 21 0A 8A         ld hl,Ctrl_2
 344+ 9F46 CB 96            res 2,(hl)
 345+ 9F48
 346+ 9F48 2A FC 89         ld hl,(Puntero_mov)
 347+ 9F4B 23               inc hl
 348+ 9F4C 23               inc hl
 349+ 9F4D 22 FC 89         ld (Puntero_mov),hl
 350+ 9F50
 351+ 9F50 7E               ld a,(hl)
 352+ 9F51 A7               and a
 353+ 9F52 CC D5 9F         call z,Incrementa_Puntero_indice_mov
 354+ 9F55 CA 16 9F         jp z,Reinicia_el_movimiento
 355+ 9F58
 356+ 9F58 C9               ret
 357+ 9F59              ; Subrutinas -----------------------------------------
 358+ 9F59              ; ---------- --------- --------- ---------- ----------
 359+ 9F59              ;
 360+ 9F59              ;   24/07/23
 361+ 9F59              ;
 362+ 9F59              ;   Fijamos_bucle
 363+ 9F59              ;
 364+ 9F59              ;
 365+ 9F59
 366+ 9F59              Fijamos_bucle
 367+ 9F59
 368+ 9F59 3A 00 8A         ld a,(Incrementa_puntero)
 369+ 9F5C 3C               inc a
 370+ 9F5D 32 01 8A         ld (Incrementa_puntero_backup),a
 371+ 9F60
 372+ 9F60 CD D5 9F         call Incrementa_Puntero_indice_mov
 373+ 9F63 2A FA 89         ld hl,(Puntero_indice_mov)
 374+ 9F66 22 FE 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9F69 C9               ret
 376+ 9F6A
 377+ 9F6A              ; ---------- --------- --------- ---------- ----------
 378+ 9F6A              ;
 379+ 9F6A              ;   07/7/23
 380+ 9F6A              ;
 381+ 9F6A              ;   Inicia_Repetimos_movimiento
 382+ 9F6A              ;
 383+ 9F6A              ;
 384+ 9F6A
 385+ 9F6A              Inicia_Repetimos_movimiento
 386+ 9F6A
 387+ 9F6A              ; Iniciamos (Repetimos_movimiento).
 388+ 9F6A
 389+ 9F6A DD 2A FC 89      ld ix,(Puntero_mov)
 390+ 9F6E DD 7E 02         ld a,(ix+2)
 391+ 9F71 32 04 8A         ld (Repetimos_movimiento),a
 392+ 9F74
 393+ 9F74 C9               ret
 394+ 9F75
 395+ 9F75              ; ---------- --------- --------- ---------- ----------
 396+ 9F75              ;
 397+ 9F75              ;   26/6/23
 398+ 9F75              ;
 399+ 9F75              ;   Inicia_Puntero_mov
 400+ 9F75              ;
 401+ 9F75              ;
 402+ 9F75
 403+ 9F75 2A FA 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F78 5E               ld e,(hl)
 405+ 9F79 23               inc hl
 406+ 9F7A 56               ld d,(hl)
 407+ 9F7B EB               ex de,hl
 408+ 9F7C 22 FC 89         ld (Puntero_mov),hl
 409+ 9F7F C9               ret
 410+ 9F80
 411+ 9F80              ; ---------- --------- --------- ---------- ----------
 412+ 9F80              ;
 413+ 9F80              ;   27/06/23
 414+ 9F80              ;
 415+ 9F80              ;   Aplica_movimiento.
 416+ 9F80
 417+ 9F80              Aplica_desplazamiento
 418+ 9F80
 419+ 9F80              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F80
 421+ 9F80 2A FC 89         ld hl, (Puntero_mov)
 422+ 9F83
 423+ 9F83 7E               ld a,(hl)
 424+ 9F84 E6 F0            and $f0
 425+ 9F86 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F87
 427+ 9F87 CB 7E            bit 7,(hl)
 428+ 9F89 28 03            jr z,1F
 429+ 9F8B CD BA 99         call Mov_up
 430+ 9F8E 2A FC 89     1 ld hl, (Puntero_mov)
 431+ 9F91 CB 76            bit 6,(hl)
 432+ 9F93 28 03            jr z,2F
 433+ 9F95 CD 89 99         call Mov_down
 434+ 9F98 2A FC 89     2 ld hl, (Puntero_mov)
 435+ 9F9B CB 6E            bit 5,(hl)
 436+ 9F9D 28 03            jr z,3F
 437+ 9F9F CD 1B 9B         call Mov_left
 438+ 9FA2 2A FC 89     3 ld hl, (Puntero_mov)
 439+ 9FA5 CB 66            bit 4,(hl)
 440+ 9FA7 C8               ret z
 441+ 9FA8 CD FD 99         call Mov_right
 442+ 9FAB C9               ret
 443+ 9FAC
 444+ 9FAC              ; ---------- --------- --------- ---------- ----------
 445+ 9FAC              ;
 446+ 9FAC              ;   26/06/23
 447+ 9FAC              ;
 448+ 9FAC              ;   Ajusta_velocidad_desplazamiento.
 449+ 9FAC
 450+ 9FAC              Ajusta_velocidad_desplazamiento
 451+ 9FAC
 452+ 9FAC              ; 1er byte de la cadena de movimiento.
 453+ 9FAC              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9FAC
 455+ 9FAC CD CA 9F         call Extrae_nibble_alto
 456+ 9FAF
 457+ 9FAF 32 E0 89         ld (Vel_up),a
 458+ 9FB2 79               ld a,c
 459+ 9FB3 E6 0F            and $0f
 460+ 9FB5 32 E1 89         ld (Vel_down),a
 461+ 9FB8
 462+ 9FB8              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9FB8              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9FB8
 465+ 9FB8 23               inc hl
 466+ 9FB9 CD CA 9F         call Extrae_nibble_alto
 467+ 9FBC
 468+ 9FBC 32 DE 89         ld (Vel_left),a
 469+ 9FBF 79               ld a,c
 470+ 9FC0 E6 0F            and $0f
 471+ 9FC2 32 DF 89         ld (Vel_right),a
 472+ 9FC5
 473+ 9FC5              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9FC5
 475+ 9FC5 23               inc hl
 476+ 9FC6 22 FC 89         ld (Puntero_mov),hl
 477+ 9FC9 C9               ret
 478+ 9FCA
 479+ 9FCA 06 04        Extrae_nibble_alto ld b,4
 480+ 9FCC 7E               ld a,(hl)
 481+ 9FCD 4F               ld c,a
 482+ 9FCE E6 F0            and $f0
 483+ 9FD0 CB 3F        1 srl a
 484+ 9FD2 10 FC            djnz 1B
 485+ 9FD4 C9               ret
 486+ 9FD5
 487+ 9FD5              ; ---------- --------- --------- ---------- ----------
 488+ 9FD5              ;
 489+ 9FD5              ;   5/7/23
 490+ 9FD5              ;
 491+ 9FD5              ;   Incrementa_Puntero_indice_mov
 492+ 9FD5
 493+ 9FD5              Incrementa_Puntero_indice_mov
 494+ 9FD5
 495+ 9FD5 21 00 8A         ld hl,Incrementa_puntero
 496+ 9FD8 34               inc (hl)
 497+ 9FD9
 498+ 9FD9 2A FA 89         ld hl,(Puntero_indice_mov)
 499+ 9FDC 01 02 00         ld bc,2
 500+ 9FDF A7               and a
 501+ 9FE0 09               add hl,bc
 502+ 9FE1 22 FA 89         ld (Puntero_indice_mov),hl
 503+ 9FE4
 504+ 9FE4 7E               ld a,(hl)
 505+ 9FE5 A7               and a
 506+ 9FE6
 507+ 9FE6              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FE6
 509+ 9FE6              ;    jr z,$
 510+ 9FE6
 511+ 9FE6              ;! Reinicia el Patrón de movimiento.
 512+ 9FE6
 513+ 9FE6 CC EB 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FE9
 515+ 9FE9 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FEA
 517+ 9FEA C9               ret
 518+ 9FEB
 519+ 9FEB
 520+ 9FEB              ; ---------- --------- --------- ---------- ----------
 521+ 9FEB              ;
 522+ 9FEB              ;   24/07/23
 523+ 9FEB              ;
 524+ 9FEB              ;   Inicializa_Puntero_indice_mov
 525+ 9FEB
 526+ 9FEB              Inicializa_Puntero_indice_mov
 527+ 9FEB
 528+ 9FEB              ; Existe etiqueta de bucle principal???
 529+ 9FEB
 530+ 9FEB 2A FE 89         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FEE 24               inc h
 532+ 9FEF 25               dec h
 533+ 9FF0 28 05            jr z,2F
 534+ 9FF2
 535+ 9FF2 22 FA 89         ld (Puntero_indice_mov),hl
 536+ 9FF5 18 14            jr 3F
 537+ 9FF7
 538+ 9FF7              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FF7
 540+ 9FF7 3A 00 8A     2 ld a,(Incrementa_puntero)
 541+ 9FFA 47               ld b,a
 542+ 9FFB
 543+ 9FFB 2A FA 89         ld hl,(Puntero_indice_mov)
 544+ 9FFE 2B           1 dec hl
 545+ 9FFF 2B               dec hl
 546+ A000 10 FC            djnz 1B
 547+ A002 22 FA 89         ld (Puntero_indice_mov),hl
 548+ A005
 549+ A005 AF               xor a
 550+ A006 32 00 8A         ld (Incrementa_puntero),a
 551+ A009 18 06            jr 4F
 552+ A00B
 553+ A00B 3A 01 8A     3 ld a,(Incrementa_puntero_backup)
 554+ A00E 32 00 8A         ld (Incrementa_puntero),a
 555+ A011 C9           4 ret
 556+ A012
 557+ A012
 558+ A012
# file closed: Patrones_de_mov.asm
1329  A012              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A012              ; Relojes y temporizaciones.
   2+ A012
   3+ A012              ; ------------------------------------------------------
   4+ A012              ;
   5+ A012              ;	16/7/23
   6+ A012              ;
   7+ A012              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A012              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A012              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A012              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A012              ;
  12+ A012              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A012              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A012
  15+ A012              ; Disparo_entidad db 1
  16+ A012              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A012              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A012
  19+ A012              Habilita_disparos
  20+ A012
  21+ A012 7E           	ld a,(hl)
  22+ A013 A7           	and a
  23+ A014 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A015
  25+ A015 EB           	ex de,hl
  26+ A016
  27+ A016 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A017 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A018
  30+ A018              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A018
  32+ A018 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A019 7E           	ld a,(hl)
  34+ A01A 23           	inc hl
  35+ A01B 77           	ld (hl),a
  36+ A01C
  37+ A01C EB           	ex de,hl						; Habilitamos disparo.
  38+ A01D 3E 01        	ld a,1
  39+ A01F 77           	ld (hl),a
  40+ A020 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1330  A021              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A021              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A021              ;
   3+ A021              ;	3/1/23
   4+ A021              ;
   5+ A021              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A021
   7+ A021              ;	ADC HL,SP	LD (addr),SP
   8+ A021              ;	ADD HL,SP	LD SP,(addr)
   9+ A021              ;	ADD IX,SP	LD SP,nn
  10+ A021              ; 	ADD IY,SP	LD SP,HL
  11+ A021              ;				LD SP,IX
  12+ A021              ;	DEC SP		LD SP,IY
  13+ A021
  14+ A021              ;	EX (SP),HL
  15+ A021              ;	EX (SP),IX
  16+ A021              ;	EX (SP),IY
  17+ A021
  18+ A021              ;	INC SP
  19+ A021
  20+ A021                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 1D 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  33+ 7FA7
  34+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  35+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  36+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  37+ 7FAC
  38+ 7FAC 3A 0C 8A         ld a,(Ctrl_1)
  39+ 7FAF CB 47            bit 0,a
  40+ 7FB1 28 05            jr z,2F
  41+ 7FB3
  42+ 7FB3 2A 23 8A         ld hl,(Stack_snapshot_disparos)
  43+ 7FB6
  44+ 7FB6 18 03            jr 4F
  45+ 7FB8
  46+ 7FB8 2A 21 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  47+ 7FBB
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 23 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 21 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 1D 8A  6 ld sp,(Stack)
  65+ 7FD4
  66+ 7FD4 C9               ret
  67+ 7FD5              ; ------------------------------------------------
  68+ 7FD5              ;
  69+ 7FD5              ;   3/08/23
  70+ 7FD5              ;
  71+ 7FD5              ;   La rutina estará situada justo después de la Caja_de_disparotes.
  72+ 7FD5
  73+ 7FD5                  org $7421
  74+ 7421
  75+ 7421              Gestiona_cajas_de_malotes
  76+ 7421
  77+ 7421              ; Desplazamos cajas.
  78+ 7421
  79+ 7421              ;   Byte1 - Byte0
  80+ 7421
  81+ 7421 21 1A 74         ld hl,Caja_de_malotes+1
  82+ 7424 7E               ld a,(hl)
  83+ 7425 A7               and a
  84+ 7426 28 04            jr z,1F
  85+ 7428
  86+ 7428              ;   El Byte1 contiene datos. Transferimos al byte0.
  87+ 7428
  88+ 7428 2B               dec hl
  89+ 7429 77               ld (hl),a
  90+ 742A 18 09            jr 2F
  91+ 742C
  92+ 742C              ; Byte1="0".
  93+ 742C              ; Byte0 contiene datos?.
  94+ 742C
  95+ 742C 21 19 74     1 ld hl,Caja_de_malotes
  96+ 742F 7E               ld a,(hl)
  97+ 7430 A7               and a
  98+ 7431 28 02            jr z,2F
  99+ 7433
 100+ 7433              ; Limpiamos Byte0 si contiene datos.
 101+ 7433
 102+ 7433 36 00            ld (hl),0
 103+ 7435
 104+ 7435              ;   Byte2 - Byte1
 105+ 7435
 106+ 7435              ;   El byte2 contiene datos?
 107+ 7435
 108+ 7435 21 1B 74     2 ld hl,Caja_de_malotes+2
 109+ 7438 7E               ld a,(hl)
 110+ 7439 A7               and a
 111+ 743A 28 04            jr z,3F
 112+ 743C
 113+ 743C              ;   El Byte2 contiene datos. Transferimos al byte1.
 114+ 743C
 115+ 743C 2B               dec hl
 116+ 743D 77               ld (hl),a
 117+ 743E 18 09            jr 4F
 118+ 7440
 119+ 7440              ; Byte2="0".
 120+ 7440              ; Byte1 contiene datos?.
 121+ 7440
 122+ 7440 21 1A 74     3 ld hl,Caja_de_malotes+1
 123+ 7443 7E               ld a,(hl)
 124+ 7444 A7               and a
 125+ 7445 28 02            jr z,4F
 126+ 7447
 127+ 7447              ; Limpiamos Byte1 si contiene datos.
 128+ 7447
 129+ 7447 36 00            ld (hl),0
 130+ 7449
 131+ 7449              ;   Byte3 - Byte2
 132+ 7449
 133+ 7449              ;   El byte3 contiene datos?
 134+ 7449
 135+ 7449 21 1C 74     4 ld hl,Caja_de_malotes+3
 136+ 744C 7E               ld a,(hl)
 137+ 744D A7               and a
 138+ 744E 28 04            jr z,5F
 139+ 7450
 140+ 7450              ;   El Byte3 contiene datos. Transferimos al byte2.
 141+ 7450
 142+ 7450 2B               dec hl
 143+ 7451 77               ld (hl),a
 144+ 7452 18 08            jr 6F
 145+ 7454
 146+ 7454              ; Byte3="0".
 147+ 7454              ; Byte2 contiene datos?.
 148+ 7454
 149+ 7454 21 1B 74     5 ld hl,Caja_de_malotes+2
 150+ 7457 7E               ld a,(hl)
 151+ 7458 A7               and a
 152+ 7459 C8               ret z
 153+ 745A
 154+ 745A              ; Limpiamos Byte2 si contiene datos.
 155+ 745A
 156+ 745A 36 00            ld (hl),0
 157+ 745C
 158+ 745C C9           6 ret
 159+ 745D
 160+ 745D              ; ------------------------------------------------
 161+ 745D              ;
 162+ 745D              ;   31/07/23
 163+ 745D              ;
 164+ 745D              ;   La rutina estará situada justo después de la Caja_de_disparotes.
 165+ 745D
 166+ 745D              Gestiona_albumes_de_fotos
 167+ 745D
 168+ 745D              ; Desplazamos álbumes.
 169+ 745D
 170+ 745D              ; (Album_de_fotos_1) --- (Album_de_fotos).
 171+ 745D
 172+ 745D              ;   El álbum_1 contiene datos?
 173+ 745D
 174+ 745D 21 85 70         ld hl,Album_de_fotos_1+1
 175+ 7460 7E               ld a,(hl)
 176+ 7461 A7               and a
 177+ 7462 28 05            jr z,1F
 178+ 7464
 179+ 7464              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 180+ 7464
 181+ 7464 CD 2E 75         call Album_1_a_Album_de_fotos
 182+ 7467 18 1A            jr 2F
 183+ 7469
 184+ 7469              ; El álbum_1 está vacío.
 185+ 7469              ; Album_de_fotos contiene datos?
 186+ 7469
 187+ 7469 21 01 70     1 ld hl,Album_de_fotos+1
 188+ 746C 7E               ld a,(hl)
 189+ 746D A7               and a
 190+ 746E 28 13            jr z,2F
 191+ 7470
 192+ 7470              ; Limpiamos Album_de_fotos.
 193+ 7470
 194+ 7470 21 00 70         ld hl,Album_de_fotos
 195+ 7473 36 00            ld (hl),0
 196+ 7475 11 01 70         ld de,Album_de_fotos+1
 197+ 7478 01 83 00         ld bc,$83
 198+ 747B ED B0            ldir
 199+ 747D 21 00 70         ld hl,Album_de_fotos
 200+ 7480 22 21 8A         ld (Stack_snapshot),hl
 201+ 7483
 202+ 7483              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 203+ 7483
 204+ 7483              ;   El álbum_2 contiene datos?
 205+ 7483
 206+ 7483 21 08 71     2 ld hl,Album_de_fotos_2+1
 207+ 7486 7E               ld a,(hl)
 208+ 7487 A7               and a
 209+ 7488 28 05            jr z,3F
 210+ 748A
 211+ 748A              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 212+ 748A
 213+ 748A CD 13 75         call Album_2_a_Album_1
 214+ 748D 18 1A            jr 4F
 215+ 748F
 216+ 748F              ; El álbum_2 está vacío.
 217+ 748F              ; álbum_1 contiene datos?
 218+ 748F
 219+ 748F 21 85 70     3 ld hl,Album_de_fotos_1+1
 220+ 7492 7E               ld a,(hl)
 221+ 7493 A7               and a
 222+ 7494 28 13            jr z,4F
 223+ 7496
 224+ 7496              ; Limpiamos Album_de_fotos_1.
 225+ 7496
 226+ 7496 21 84 70         ld hl,Album_de_fotos_1
 227+ 7499 36 00            ld (hl),0
 228+ 749B 11 85 70         ld de,Album_de_fotos_1+1
 229+ 749E 01 83 00         ld bc,$83
 230+ 74A1 ED B0            ldir
 231+ 74A3 21 84 70         ld hl,Album_de_fotos_1
 232+ 74A6 22 25 8A         ld (Stack_snapshot_1),hl
 233+ 74A9
 234+ 74A9              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 235+ 74A9
 236+ 74A9              ;   El álbum_3 contiene datos?
 237+ 74A9
 238+ 74A9 21 8B 71     4 ld hl,Album_de_fotos_3+1
 239+ 74AC 7E               ld a,(hl)
 240+ 74AD A7               and a
 241+ 74AE 28 05            jr z,5F
 242+ 74B0
 243+ 74B0              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 244+ 74B0
 245+ 74B0 CD F8 74         call Album_3_a_Album_2
 246+ 74B3 18 1A            jr 6F
 247+ 74B5
 248+ 74B5              ; El álbum_3 está vacío.
 249+ 74B5              ; álbum_2 contiene datos?
 250+ 74B5
 251+ 74B5 21 08 71     5 ld hl,Album_de_fotos_2+1
 252+ 74B8 7E               ld a,(hl)
 253+ 74B9 A7               and a
 254+ 74BA 28 13            jr z,6F
 255+ 74BC
 256+ 74BC              ; Limpiamos Album_de_fotos_2.
 257+ 74BC
 258+ 74BC 21 07 71         ld hl,Album_de_fotos_2
 259+ 74BF 36 00            ld (hl),0
 260+ 74C1 11 08 71         ld de,Album_de_fotos_2+1
 261+ 74C4 01 83 00         ld bc,$83
 262+ 74C7 ED B0            ldir
 263+ 74C9 21 07 71         ld hl,Album_de_fotos_2
 264+ 74CC 22 29 8A         ld (Stack_snapshot_2),hl
 265+ 74CF
 266+ 74CF C9           6 ret
 267+ 74D0
 268+ 74D0              ; ----------------------------------------------
 269+ 74D0              ;
 270+ 74D0              ;   31/7/23
 271+ 74D0              ;
 272+ 74D0              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 273+ 74D0              ;
 274+ 74D0              ;   Para pasar datos de un album a otro:
 275+ 74D0              ;
 276+ 74D0              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 277+ 74D0              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 278+ 74D0              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 279+ 74D0
 280+ 74D0 C5           Trasbase_de_datos push bc
 281+ 74D1 A7               and a
 282+ 74D2 ED 42            sbc hl,bc
 283+ 74D4 E5               push hl
 284+ 74D5 C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 285+ 74D6 E1               pop hl
 286+ 74D7 ED B0            ldir
 287+ 74D9 C9               ret
 288+ 74DA
 289+ 74DA              ; Paquetitos.
 290+ 74DA
 291+ 74DA 2A 2D 8A     Trasbase_3a2 ld hl,(Stack_snapshot_3)
 292+ 74DD 01 8A 71         ld bc,Album_de_fotos_3
 293+ 74E0 CD D0 74         call Trasbase_de_datos
 294+ 74E3 C9               ret
 295+ 74E4
 296+ 74E4 2A 29 8A     Trasbase_2a1 ld hl,(Stack_snapshot_2)
 297+ 74E7 01 07 71         ld bc,Album_de_fotos_2
 298+ 74EA CD D0 74         call Trasbase_de_datos
 299+ 74ED C9               ret
 300+ 74EE
 301+ 74EE 2A 25 8A     Trasbase_1a0 ld hl,(Stack_snapshot_1)
 302+ 74F1 01 84 70         ld bc,Album_de_fotos_1
 303+ 74F4 CD D0 74         call Trasbase_de_datos
 304+ 74F7 C9               ret
 305+ 74F8
 306+ 74F8              ; ----------------------------------------------
 307+ 74F8
 308+ 74F8              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 309+ 74F8              ; _ limpiamos (Album_de_fotos_3).
 310+ 74F8              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 311+ 74F8
 312+ 74F8              ;   Datos de álbum_3 a álbum_2.
 313+ 74F8
 314+ 74F8 11 07 71     Album_3_a_Album_2 ld de,Album_de_fotos_2
 315+ 74FB CD DA 74         call Trasbase_3a2
 316+ 74FE
 317+ 74FE              ;   Actualizamos (Stack_snapshot_2).
 318+ 74FE
 319+ 74FE EB               ex de,hl
 320+ 74FF 22 29 8A         ld (Stack_snapshot_2),hl
 321+ 7502
 322+ 7502              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 323+ 7502
 324+ 7502 AF               xor a
 325+ 7503 32 8A 71         ld (Album_de_fotos_3),a
 326+ 7506 11 8B 71         ld de,Album_de_fotos_3+1
 327+ 7509 CD DA 74         call Trasbase_3a2
 328+ 750C
 329+ 750C 21 8A 71         ld hl,Album_de_fotos_3
 330+ 750F 22 2D 8A         ld (Stack_snapshot_3),hl
 331+ 7512 C9               ret
 332+ 7513
 333+ 7513 11 84 70     Album_2_a_Album_1 ld de,Album_de_fotos_1
 334+ 7516 CD E4 74         call Trasbase_2a1
 335+ 7519
 336+ 7519              ;   Actualizamos (Stack_snapshot_1).
 337+ 7519
 338+ 7519 EB               ex de,hl
 339+ 751A 22 25 8A         ld (Stack_snapshot_1),hl
 340+ 751D
 341+ 751D              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 342+ 751D
 343+ 751D AF               xor a
 344+ 751E 32 07 71         ld (Album_de_fotos_2),a
 345+ 7521 11 08 71         ld de,Album_de_fotos_2+1
 346+ 7524 CD E4 74         call Trasbase_2a1
 347+ 7527
 348+ 7527 21 07 71         ld hl,Album_de_fotos_2
 349+ 752A 22 29 8A         ld (Stack_snapshot_2),hl
 350+ 752D C9               ret
 351+ 752E
 352+ 752E 11 00 70     Album_1_a_Album_de_fotos ld de,Album_de_fotos
 353+ 7531 CD EE 74         call Trasbase_1a0
 354+ 7534
 355+ 7534              ;   Actualizamos (Stack_snapshot).
 356+ 7534
 357+ 7534 EB               ex de,hl
 358+ 7535 22 21 8A         ld (Stack_snapshot),hl
 359+ 7538
 360+ 7538               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 361+ 7538
 362+ 7538 AF               xor a
 363+ 7539 32 84 70         ld (Album_de_fotos_1),a
 364+ 753C 11 85 70         ld de,Album_de_fotos_1+1
 365+ 753F CD EE 74         call Trasbase_1a0
 366+ 7542
 367+ 7542 21 84 70         ld hl,Album_de_fotos_1
 368+ 7545 22 25 8A         ld (Stack_snapshot_1),hl
 369+ 7548 C9               ret
 370+ 7549
 371+ 7549              ; -------------------- ------------------------------------
 372+ 7549
 373+ 7549              Gestiona_albumes_de_fotos_disparos
 374+ 7549
 375+ 7549              ; Desplazamos álbumes.
 376+ 7549
 377+ 7549              ; (Album_de_fotos_1) --- (Album_de_fotos).
 378+ 7549
 379+ 7549              ;   El álbum_1 contiene datos?
 380+ 7549
 381+ 7549 21 91 72         ld hl,Album_de_fotos_disparos_1+1
 382+ 754C 7E               ld a,(hl)
 383+ 754D A7               and a
 384+ 754E 28 05            jr z,1F
 385+ 7550
 386+ 7550              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 387+ 7550
 388+ 7550 CD 1A 76         call Album_1_a_Album_de_fotos_disparos
 389+ 7553 18 1A            jr 2F
 390+ 7555
 391+ 7555              ; El álbum_1 está vacío.
 392+ 7555              ; Album_de_fotos contiene datos?
 393+ 7555
 394+ 7555 21 0E 72     1 ld hl,Album_de_fotos_disparos+1
 395+ 7558 7E               ld a,(hl)
 396+ 7559 A7               and a
 397+ 755A 28 13            jr z,2F
 398+ 755C
 399+ 755C              ; Limpiamos Album_de_fotos.
 400+ 755C
 401+ 755C 21 0D 72         ld hl,Album_de_fotos_disparos
 402+ 755F 36 00            ld (hl),0
 403+ 7561 11 0E 72         ld de,Album_de_fotos_disparos+1
 404+ 7564 01 83 00         ld bc,$83
 405+ 7567 ED B0            ldir
 406+ 7569 21 0D 72         ld hl,Album_de_fotos_disparos
 407+ 756C 22 23 8A         ld (Stack_snapshot_disparos),hl
 408+ 756F
 409+ 756F              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 410+ 756F
 411+ 756F              ;   El álbum_2 contiene datos?
 412+ 756F
 413+ 756F 21 1A 73     2 ld hl,Album_de_fotos_disparos_2+1
 414+ 7572 7E               ld a,(hl)
 415+ 7573 A7               and a
 416+ 7574 28 05            jr z,3F
 417+ 7576
 418+ 7576              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 419+ 7576
 420+ 7576 CD FF 75         call Album_2_a_Album_1_disparos
 421+ 7579 18 1A            jr 4F
 422+ 757B
 423+ 757B              ; El álbum_2 está vacío.
 424+ 757B              ; álbum_1 contiene datos?
 425+ 757B
 426+ 757B 21 91 72     3 ld hl,Album_de_fotos_disparos_1+1
 427+ 757E 7E               ld a,(hl)
 428+ 757F A7               and a
 429+ 7580 28 13            jr z,4F
 430+ 7582
 431+ 7582              ; Limpiamos Album_de_fotos_1.
 432+ 7582
 433+ 7582 21 90 72         ld hl,Album_de_fotos_disparos_1
 434+ 7585 36 00            ld (hl),0
 435+ 7587 11 91 72         ld de,Album_de_fotos_disparos_1+1
 436+ 758A 01 83 00         ld bc,$83
 437+ 758D ED B0            ldir
 438+ 758F 21 90 72         ld hl,Album_de_fotos_disparos_1
 439+ 7592 22 27 8A         ld (Stack_snapshot_disparos_1),hl
 440+ 7595
 441+ 7595              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 442+ 7595
 443+ 7595              ;   El álbum_3 contiene datos?
 444+ 7595
 445+ 7595 21 97 73     4 ld hl,Album_de_fotos_disparos_3+1
 446+ 7598 7E               ld a,(hl)
 447+ 7599 A7               and a
 448+ 759A 28 05            jr z,5F
 449+ 759C
 450+ 759C              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 451+ 759C
 452+ 759C CD E4 75         call Album_3_a_Album_2_disparos
 453+ 759F 18 1A            jr 6F
 454+ 75A1
 455+ 75A1              ; El álbum_3 está vacío.
 456+ 75A1              ; álbum_2 contiene datos?
 457+ 75A1
 458+ 75A1 21 1A 73     5 ld hl,Album_de_fotos_disparos_2+1
 459+ 75A4 7E               ld a,(hl)
 460+ 75A5 A7               and a
 461+ 75A6 28 13            jr z,6F
 462+ 75A8
 463+ 75A8              ; Limpiamos Album_de_fotos_2.
 464+ 75A8
 465+ 75A8 21 19 73         ld hl,Album_de_fotos_disparos_2
 466+ 75AB 36 00            ld (hl),0
 467+ 75AD 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 468+ 75B0 01 83 00         ld bc,$83
 469+ 75B3 ED B0            ldir
 470+ 75B5 21 19 73         ld hl,Album_de_fotos_disparos_2
 471+ 75B8 22 2B 8A         ld (Stack_snapshot_disparos_2),hl
 472+ 75BB
 473+ 75BB C9           6 ret
 474+ 75BC
 475+ 75BC              ; ----------------------------------------------
 476+ 75BC              ;
 477+ 75BC              ;   31/7/23
 478+ 75BC              ;
 479+ 75BC              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 480+ 75BC              ;
 481+ 75BC              ;   Para pasar datos de un album a otro:
 482+ 75BC              ;
 483+ 75BC              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 484+ 75BC              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 485+ 75BC              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 486+ 75BC
 487+ 75BC C5           Trasbase_de_datos_disparos push bc
 488+ 75BD A7               and a
 489+ 75BE ED 42            sbc hl,bc
 490+ 75C0 E5               push hl
 491+ 75C1 C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 492+ 75C2 E1               pop hl
 493+ 75C3 ED B0            ldir
 494+ 75C5 C9               ret
 495+ 75C6
 496+ 75C6              ; Paquetitos.
 497+ 75C6
 498+ 75C6 2A 2F 8A     Trasbase_3a2_disparos ld hl,(Stack_snapshot_disparos_3)
 499+ 75C9 01 96 73         ld bc,Album_de_fotos_disparos_3
 500+ 75CC CD BC 75         call Trasbase_de_datos_disparos
 501+ 75CF C9               ret
 502+ 75D0
 503+ 75D0 2A 2B 8A     Trasbase_2a1_disparos ld hl,(Stack_snapshot_disparos_2)
 504+ 75D3 01 19 73         ld bc,Album_de_fotos_disparos_2
 505+ 75D6 CD BC 75         call Trasbase_de_datos_disparos
 506+ 75D9 C9               ret
 507+ 75DA
 508+ 75DA 2A 27 8A     Trasbase_1a0_disparos ld hl,(Stack_snapshot_disparos_1)
 509+ 75DD 01 90 72         ld bc,Album_de_fotos_disparos_1
 510+ 75E0 CD BC 75         call Trasbase_de_datos_disparos
 511+ 75E3 C9               ret
 512+ 75E4
 513+ 75E4              ; ----------------------------------------------
 514+ 75E4
 515+ 75E4              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 516+ 75E4              ; _ limpiamos (Album_de_fotos_3).
 517+ 75E4              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 518+ 75E4
 519+ 75E4              ;   Datos de álbum_3 a álbum_2.
 520+ 75E4
 521+ 75E4 11 19 73     Album_3_a_Album_2_disparos ld de,Album_de_fotos_disparos_2
 522+ 75E7 CD C6 75         call Trasbase_3a2_disparos
 523+ 75EA
 524+ 75EA              ;   Actualizamos (Stack_snapshot_2).
 525+ 75EA
 526+ 75EA EB               ex de,hl
 527+ 75EB 22 2B 8A         ld (Stack_snapshot_disparos_2),hl
 528+ 75EE
 529+ 75EE              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 530+ 75EE
 531+ 75EE AF               xor a
 532+ 75EF 32 96 73         ld (Album_de_fotos_disparos_3),a
 533+ 75F2 11 97 73         ld de,Album_de_fotos_disparos_3+1
 534+ 75F5 CD C6 75         call Trasbase_3a2_disparos
 535+ 75F8
 536+ 75F8 21 96 73         ld hl,Album_de_fotos_disparos_3
 537+ 75FB 22 2F 8A         ld (Stack_snapshot_disparos_3),hl
 538+ 75FE C9               ret
 539+ 75FF
 540+ 75FF 11 90 72     Album_2_a_Album_1_disparos ld de,Album_de_fotos_disparos_1
 541+ 7602 CD D0 75         call Trasbase_2a1_disparos
 542+ 7605
 543+ 7605              ;   Actualizamos (Stack_snapshot_1).
 544+ 7605
 545+ 7605 EB               ex de,hl
 546+ 7606 22 27 8A         ld (Stack_snapshot_disparos_1),hl
 547+ 7609
 548+ 7609              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 549+ 7609
 550+ 7609 AF               xor a
 551+ 760A 32 19 73         ld (Album_de_fotos_disparos_2),a
 552+ 760D 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 553+ 7610 CD D0 75         call Trasbase_2a1_disparos
 554+ 7613
 555+ 7613 21 19 73         ld hl,Album_de_fotos_disparos_2
 556+ 7616 22 2B 8A         ld (Stack_snapshot_disparos_2),hl
 557+ 7619 C9               ret
 558+ 761A
 559+ 761A 11 0D 72     Album_1_a_Album_de_fotos_disparos ld de,Album_de_fotos_disparos
 560+ 761D CD DA 75         call Trasbase_1a0_disparos
 561+ 7620
 562+ 7620              ;   Actualizamos (Stack_snapshot).
 563+ 7620
 564+ 7620 EB               ex de,hl
 565+ 7621 22 23 8A         ld (Stack_snapshot_disparos),hl
 566+ 7624
 567+ 7624               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 568+ 7624
 569+ 7624 AF               xor a
 570+ 7625 32 90 72         ld (Album_de_fotos_disparos_1),a
 571+ 7628 11 91 72         ld de,Album_de_fotos_disparos_1+1
 572+ 762B CD DA 75         call Trasbase_1a0_disparos
 573+ 762E
 574+ 762E 21 90 72         ld hl,Album_de_fotos_disparos_1
 575+ 7631 22 27 8A         ld (Stack_snapshot_disparos_1),hl
 576+ 7634 C9               ret
# file closed: Guarda_foto_registros.asm
1331  7635
1332  7635              	SAVESNA "Pruebas.sna", START
1333  7635
1334  7635
1335  7635
1336  7635
# file closed: Banco_de_pruebas.asm
