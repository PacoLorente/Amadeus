# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              FRAME
  14  AA01
  15  AA01 08           	ex af,af'
  16  AA02 F5           	push af	;af'
  17  AA03 D9           	exx
  18  AA04 E5           	push hl	;hl'
  19  AA05 D5           	push de	;de'
  20  AA06 C5           	push bc	;bc'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl
  23  AA09 D5           	push de	;de
  24  AA0A C5           	push bc	;bc
  25  AA0B 08           	ex af,af'
  26  AA0C F5           	push af	;af
  27  AA0D DD E5        	push ix
  28  AA0F FD E5        	push iy
  29  AA11
  30  AA11 3E 02        	ld a,2
  31  AA13 D3 FE        	out ($fe),a
  32  AA15
  33  AA15 3A E3 89     	ld a,(Ctrl_3)
  34  AA18 CB 47        	bit 0,a
  35  AA1A 28 2C        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  36  AA1C CB 57        	bit 2,a
  37  AA1E 28 28        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  38  AA20
  39  AA20              Borrando
  40  AA20
  41  AA20 2A DD 89     	ld hl,(Scanlines_album_SP)
  42  AA23 CD 79 8C     	call Extrae_address
  43  AA26
  44  AA26 24           	inc h
  45  AA27 25           	dec h
  46  AA28 28 05        	jr z,Pintando
  47  AA2A
  48  AA2A CD 19 91     	call Pinta_Sprites
  49  AA2D
  50  AA2D 18 F1        	jr Borrando
  51  AA2F
  52  AA2F
  53  AA2F              Pintando
  54  AA2F
  55  AA2F 2A DF 89     	ld hl,(India_SP)
  56  AA32 2C           	inc l
  57  AA33 CD 79 8C     	call Extrae_address
  58  AA36
  59  AA36 24           	inc h
  60  AA37 25           	dec h
  61  AA38 28 0E        	jr z,1F
  62  AA3A
  63  AA3A 1C           	inc e
  64  AA3B 1C           	inc e
  65  AA3C
  66  AA3C ED 53 DF 89  	ld (India_SP),de
  67  AA40
  68  AA40 CD 79 8C     	call Extrae_address
  69  AA43
  70  AA43 CD 19 91     	call Pinta_Sprites
  71  AA46
  72  AA46 18 E7        	jr Pintando
  73  AA48
  74  AA48              ; Posible colisión Entidad-Amadeus ???
  75  AA48
  76  AA48              ;	ld a,(Impacto2)
  77  AA48              ;	bit 2,a
  78  AA48              ;	jr z,1F
  79  AA48
  80  AA48              ;	call Detecta_colision_nave_entidad
  81  AA48
  82  AA48              ;1 ld a,4
  83  AA48              ;	out ($fe),a
  84  AA48              ;	call Gestiona_Amadeus
  85  AA48
  86  AA48              ;	ld a,7
  87  AA48              ;	out ($fe),a											; Borde blanco.
  88  AA48              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  89  AA48              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  90  AA48
  91  AA48              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  92  AA48
  93  AA48              ;	call Recupera_parametros_DRAW
  94  AA48
  95  AA48 3A E3 89     1 ld a,(Ctrl_3)
  96  AA4B CB 47        	bit 0,a
  97  AA4D 28 03        	jr z,2F 											; No actualizamos FRAMES si el último cuadro no se completó.
  98  AA4F
  99  AA4F CD 38 00     	call ROM_keyboard									; Actualiza FRAMES y ejecuta las rutinas de teclado de la ROM.
 100  AA52
 101  AA52 21 E3 89     2 ld hl,Ctrl_3
 102  AA55 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 103  AA57 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 104  AA59
 105  AA59              ;	call Recupera_todos_los_registros
 106  AA59
 107  AA59 FD E1            pop iy
 108  AA5B DD E1        	pop ix
 109  AA5D F1           	pop af
 110  AA5E C1           	pop bc
 111  AA5F D1           	pop de
 112  AA60 E1           	pop hl
 113  AA61 D9           	exx
 114  AA62 C1           	pop bc
 115  AA63 D1           	pop de
 116  AA64 E1           	pop hl
 117  AA65 08           	ex af,af'
 118  AA66 F1           	pop af
 119  AA67 08           	ex af,af'
 120  AA68 D9           	exx
 121  AA69
 122  AA69 FB           	ei
 123  AA6A
 124  AA6A 3E 01        	ld a,1												; Borde azul.
 125  AA6C D3 FE        	out ($fe),a
 126  AA6E
 127  AA6E C9           	ret
 128  AA6F
 129  AA6F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 130  AA6F
 131  AA6F              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA6F              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA6F              ;
   3+ AA6F              ;	17/02/23
   4+ AA6F              ;
   5+ AA6F              ;	Sprites e índices.
   6+ AA6F
   7+ AA6F              	org $8120
   8+ 8120
   9+ 8120              ; Disparo.
  10+ 8120
  11+ 8120 28 81        Indice_disparo defw Disparo_0
  12+ 8122 2E 81        	defw Disparo_f9
  13+ 8124 34 81        	defw Disparo_fb
  14+ 8126 3A 81        	defw Disparo_fd
  15+ 8128
  16+ 8128              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8128 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 812C 01 80
  18+ 812E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 812E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8132 00 60
  20+ 8134              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8134 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8138 18 00
  22+ 813A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 813A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 813E 06 00
  24+ 8140
  25+ 8140              ; ----------------------------------------------------------------------------------------
  26+ 8140
  27+ 8140              ; Badsat_izq. 2x2.
  28+ 8140
  29+ 8140 50 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8142 C0 82        	defw Badsat_izq_fe
  31+ 8144 90 82        	defw Badsat_izq_fd
  32+ 8146 60 82        	defw Badsat_izq_fc
  33+ 8148 30 82        	defw Badsat_izq_fb
  34+ 814A 00 82        	defw Badsat_izq_fa
  35+ 814C B0 81        	defw Badsat_izq_f9
  36+ 814E 80 81        	defw Badsat_izq_f8
  37+ 8150
  38+ 8150 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8153 02 14 00     	DEFB 	$02,$14,$00
  40+ 8156 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8159 02 55 00     	DEFB 	$02,$55,$00
  42+ 815C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 815F 02 54 00     	DEFB 	$02,$54,$00
  44+ 8162 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 8165 03 60 00     	DEFB 	$03,$60,$00
  46+ 8168 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 816B 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 816E 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 8171 54 40 00     	DEFB 	$54,$40,$00
  50+ 8174 AA 60 00     	DEFB	$AA,$60,$00
  51+ 8177 54 00 00     	DEFB 	$54,$00,$00
  52+ 817A 28 00 00     	DEFB 	$28,$00,$00
  53+ 817D 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8180
  55+ 8180 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 8184 0A 00 01 15
  56+ 8188 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 818C 01 55 00 01
  57+ 8190 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 8194 00 01 B0 00
  58+ 8198 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 819C FC 00 15 F4
  59+ 81A0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 81A4 55 30 00 2A
  60+ 81A8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81AC 00 08 00 00
  61+ 81B0
  62+ 81B0 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 81B4 85 00 00 8A
  63+ 81B8 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 81BC 00 AA 80 00
  64+ 81C0 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 81C4 00 00 D8 00
  65+ 81C8 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 81CC FE 00 0A FA
  66+ 81D0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 81D4 2A 98 00 15
  67+ 81D8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 81DC 00 04 00 00
  68+ 81E0
  69+ 81E0
  70+ 81E0              ;! 39 bytes libres aquí !!!!!
  71+ 81E0
  72+ 81E0              	org $8200
  73+ 8200
  74+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8204 42 80 00 45
  75+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 820C 00 55 40 00
  76+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8214 00 00 6C 00
  77+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 821C FF 00 05 7D
  78+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8224 15 4C 00 0A
  79+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 822C 00 02 00 00
  80+ 8230
  81+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8234 21 40 00 22
  82+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 823C 00 2A A0 00
  83+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8244 80 00 36 00
  84+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 824C 7F 80 02 BE
  85+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8254 0A A6 00 05
  86+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 825C 00 01 00 00
  87+ 8260
  88+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8264 10 A0 00 11
  89+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 826C 00 15 50 00
  90+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8274 40 00 1B 00
  91+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 827C BF C0 01 5F
  92+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8284 05 53 00 02
  93+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 828C 00 00 80 00
  94+ 8290
  95+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8294 08 50 00 08
  96+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 829C 00 0A A8 00
  97+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 82A4 A0 00 0D 80
  98+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 82AC 5F F8 00 AF
  99+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 82B4 02 A9 00 01
 100+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 82BC 00 00 40 00
 101+ 82C0
 102+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 82C4 04 28 00 04
 103+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 82CC 00 05 54 00
 104+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 82D4 D0 00 06 C0
 105+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 82DC 2F FC 00 57
 106+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 82E4 01 54 80 00
 107+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 82EC 00 00 20 00
 108+ 82F0
 109+ 82F0
 110+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
 111+ 82F2 30 83        	defw Badsat_der_f8
 112+ 82F4 60 83        	defw Badsat_der_f9
 113+ 82F6 90 83        	defw Badsat_der_fa
 114+ 82F8 C0 83        	defw Badsat_der_fb
 115+ 82FA 00 84        	defw Badsat_der_fc
 116+ 82FC 30 84        	defw Badsat_der_fd
 117+ 82FE 60 84        	defw Badsat_der_fe
 118+ 8300
 119+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8303 28 40 00     	DEFB    $28,$40,$00
 121+ 8306 54 40 00     	DEFB	$54,$40,$00
 122+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 123+ 830C 55 40 00     	DEFB	$55,$40,$00
 124+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8318 07 50 00     	DEFB	$07,$50,$00
 128+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8324 06 55 00     	DEFB	$06,$55,$00
 132+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 133+ 832A 00 14 00     	DEFB	$00,$14,$00
 134+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8330
 136+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8334 20 00 2A 20
 137+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 833C 2A A0 00 15
 138+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8344 00 03 60 00
 139+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 834C F4 00 0B EA
 140+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8354 03 2A 80 00
 141+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 835C 00 00 04 00
 142+ 8360
 143+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8364 10 00 15 10
 144+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 836C 15 50 00 0A
 145+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8374 80 01 B0 00
 146+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 837C FA 00 05 F5
 147+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8384 01 95 40 00
 148+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 838C 00 00 02 00
 149+ 8390
 150+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8394 08 00 0A 88
 151+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 839C 0A A8 00 05
 152+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 83A4 C0 00 D8 00
 153+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 83AC FD 00 02 FA
 154+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 83B4 00 CA A0 00
 155+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 83BC 80 00 01 00
 156+ 83C0
 157+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 83C4 84 00 05 44
 158+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 83CC 05 54 00 02
 159+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 83D4 E0 00 6C 00
 160+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 83DC FE 80 01 7D
 161+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 83E4 00 65 50 00
 162+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 83EC 40 00 00 80
 163+ 83F0
 164+ 83F0              ;! 16 bytes libres aquí !!!!!
 165+ 83F0
 166+ 83F0              	org $8400
 167+ 8400
 168+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8404 42 00 02 A2
 169+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 840C 02 AA 00 01
 170+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8414 F0 00 36 00
 171+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 841C FF 40 00 BE
 172+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8424 00 32 A8 00
 173+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 842C A0 00 00 40
 174+ 8430
 175+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8434 A1 00 01 51
 176+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 843C 01 55 00 00
 177+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8444 F8 00 1B 00
 178+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 844C FF A0 00 1F
 179+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8454 00 09 54 00
 180+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 845C 50 00 00 20
 181+ 8460
 182+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8464 50 80 00 A8
 183+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 846C 00 AA 80 00
 184+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8474 FC 00 0D 80
 185+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 847C FF D0 00 0F
 186+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8484 00 04 AA 00
 187+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 848C 28 00 00 10
 188+ 8490
 189+ 8490              ; ----------------------------------------------------------------------------------------
 190+ 8490
 191+ 8490              ; Amadeus. 2x2.
 192+ 8490
 193+ 8490              ;	org $8119
 194+ 8490
 195+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 196+ 8492 00 00        	defw 0
 197+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 8496 00 00        	defw 0
 199+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 849A 00 00        	defw 0
 201+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 849E 00 00        	defw 0	 								; (Fín de índice).
 203+ 84A0
 204+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 205+ 84A2 00 00        	defw 0
 206+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 84A6 00 00        	defw 0
 208+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 84AA 00 00        	defw 0
 210+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 212+ 84B0
 213+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 213+ 84B4 26 64 24 24
 214+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 214+ 84BC 6F F6 67 E6
 215+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 215+ 84C4 F7 EF FF FF
 216+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 216+ 84CC 8B D1 71 8E
 217+ 84D0
 218+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 218+ 84D4 F1 00 09 99
 219+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 219+ 84DC 0B 0D 00 1B
 220+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 220+ 84E4 80 19 F9 80
 221+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 221+ 84EC F3 C0 3D FB
 222+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 222+ 84F4 3E F7 C0 3E
 223+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 223+ 84FC 40 1C 63 80
 224+ 8500
 225+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 225+ 8504 3C 40 02 66
 226+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 226+ 850C 02 C3 40 06
 227+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 227+ 8514 60 06 7E 60
 228+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 228+ 851C 3C F0 0F 7E
 229+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 229+ 8524 0F BD F0 0F
 230+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 230+ 852C 10 07 18 E0
 231+ 8530
 232+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 232+ 8534 8F 10 00 99
 233+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 233+ 853C 00 B0 D0 01
 234+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 234+ 8544 D8 01 9F 98
 235+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 235+ 854C CF 3C 03 DF
 236+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 236+ 8554 03 EF 7C 03
 237+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 237+ 855C 44 01 C6 38
 238+ 8560
 239+ 8560              ; ----------------------------------------------------------------------------------------
 240+ 8560
 241+ 8560              ;	org $8690
 242+ 8560
 243+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 244+ 8562 96 85        	defw Explosion_2x3_2
 245+ 8564 C6 85        	defw Explosion_2x3_3
 246+ 8566
 247+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 247+ 856A 10 00 04 38
 248+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 248+ 8572 02 E6 80 01
 249+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 249+ 857A 00 03 DD 80
 250+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 250+ 8582 3B 80 01 9D
 251+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 251+ 858A 02 FD 80 03
 252+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 252+ 8592 00 08 00 00
 253+ 8596
 254+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 254+ 859A 38 10 03 BC
 255+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 255+ 85A2 04 06 C0 00
 256+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 256+ 85AA 00 03 DD 80
 257+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 257+ 85B2 3A 70 01 9C
 258+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 258+ 85BA 04 F8 80 06
 259+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 259+ 85C2 00 00 00 00
 260+ 85C6
 261+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 261+ 85CA 00 20 08 00
 262+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 262+ 85D2 00 06 00 00
 263+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 263+ 85DA 00 00 14 30
 264+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 264+ 85E2 38 00 01 08
 265+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 265+ 85EA 00 80 00 04
 266+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 266+ 85F2 10 08 00 20
 267+ 85F6
 268+ 85F6              ; ------------------------------------------
 269+ 85F6
 270+ 85F6 FC 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 271+ 85F8 1C 86        	defw Explosion_2x2_2
 272+ 85FA 3C 86        	defw Explosion_2x2_3
 273+ 85FC
 274+ 85FC 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 274+ 8600 43 84 37 D8
 275+ 8604 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 275+ 8608 17 F0 3D D8
 276+ 860C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 276+ 8610 19 D0 1F 60
 277+ 8614 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 277+ 8618 40 00 80 00
 278+ 861C
 279+ 861C
 280+ 861C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 280+ 8620 3B C2 60 0C
 281+ 8624 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 281+ 8628 07 F0 3D D8
 282+ 862C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 282+ 8630 19 C6 1F 64
 283+ 8634 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 283+ 8638 80 00 00 00
 284+ 863C
 285+ 863C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 285+ 8640 88 04 10 0C
 286+ 8644 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 286+ 8648 81 E0 01 43
 287+ 864C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 287+ 8650 10 80 18 00
 288+ 8654 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 288+ 8658 60 01 80 02
 289+ 865C
 290+ 865C
 291+ 865C
 292+ 865C
 293+ 865C
# file closed: Sprites_e_indices.asm
 132  865C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 865C              ; ---------------------------------------------------------------------
   2+ 865C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 865C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 865C              ; ---------------------------------------------------------------------
   5+ 865C
   6+ 865C              ; 27/03/24
   7+ 865C              ;
   8+ 865C              ;	En esta tabla iremos almacenando:
   9+ 865C              ;
  10+ 865C              ;	(Columna_Y),(mem.address de los scanlines masticados en el Scanlines_album) de cada entidad en curso.
  11+ 865C
  12+ 865C 00 00 00...  Numeros_aleatorios ds 7
  13+ 8663
  14+ 8663 00 00 00...  Tabla_de_pintado ds 24
  15+ 867B
  16+ 867B              ;	db 0, defw 0
  17+ 867B              ;	db 0, defw 0
  18+ 867B              ;	db 0, defw 0
  19+ 867B              ;	db 0, defw 0
  20+ 867B              ;	db 0, defw 0
  21+ 867B              ;	db 0, defw 0
  22+ 867B              ;	db 0, defw 0
  23+ 867B
  24+ 867B C0 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  25+ 867D              ;	defw ...
  26+ 867D              ; 	defw ...
  27+ 867D 00 00        	defw 0
  28+ 867F
  29+ 867F              ; Control. %00000001 00000001
  30+ 867F              ;
  31+ 867F              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  32+ 867F              ;                    _ hacen las entidades hacia abajo.
  33+ 867F              ;
  34+ 867F              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  35+ 867F
  36+ 867F 85 86        Indice_de_disparos_Amadeus defw Disparo_1A
  37+ 8681 8D 86        	defw Disparo_2A
  38+ 8683 95 86        	defw Disparo_3A
  39+ 8685
  40+ 8685 00 00        Disparo_1A defw 0									; Control.
  41+ 8687 00 00        	defw 0											; Puntero objeto.
  42+ 8689 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  43+ 868B 00 00        	defw 0											; Rutina de impresión.
  44+ 868D
  45+ 868D 00 00        Disparo_2A defw 0									; Control.
  46+ 868F 00 00        	defw 0											; Puntero objeto.
  47+ 8691 00 00        	defw 0											; Puntero de impresión.
  48+ 8693 00 00        	defw 0											; Rutina de impresión.
  49+ 8695
  50+ 8695 00 00        Disparo_3A defw 0
  51+ 8697
  52+ 8697 AD 86        Indice_de_disparos_entidades defw Disparo_1
  53+ 8699 B5 86        	defw Disparo_2
  54+ 869B BD 86        	defw Disparo_3
  55+ 869D C5 86        	defw Disparo_4
  56+ 869F CD 86        	defw Disparo_5
  57+ 86A1 D5 86        	defw Disparo_6
  58+ 86A3 DD 86        	defw Disparo_7
  59+ 86A5 E5 86        	defw Disparo_8
  60+ 86A7 ED 86        	defw Disparo_9
  61+ 86A9 F5 86        	defw Disparo_10
  62+ 86AB FD 86        	defw Disparo_11
  63+ 86AD
  64+ 86AD 00 00        Disparo_1 defw 0									; Control.
  65+ 86AF 00 00        	defw 0											; Puntero objeto.
  66+ 86B1 00 00        	defw 0											; Puntero de impresión.
  67+ 86B3 00 00        	defw 0											; Rutina de impresión.
  68+ 86B5
  69+ 86B5 00 00        Disparo_2 defw 0									; Control.
  70+ 86B7 00 00        	defw 0											; Puntero objeto.
  71+ 86B9 00 00        	defw 0											; Puntero de impresión.
  72+ 86BB 00 00        	defw 0											; Rutina de impresión.
  73+ 86BD
  74+ 86BD 00 00        Disparo_3 defw 0									; Control.
  75+ 86BF 00 00        	defw 0											; Puntero objeto.
  76+ 86C1 00 00        	defw 0											; Puntero de impresión.
  77+ 86C3 00 00        	defw 0											; Rutina de impresión.
  78+ 86C5
  79+ 86C5 00 00        Disparo_4 defw 0									; Control.
  80+ 86C7 00 00        	defw 0											; Puntero objeto.
  81+ 86C9 00 00        	defw 0											; Puntero de impresión.
  82+ 86CB 00 00        	defw 0											; Rutina de impresión.
  83+ 86CD
  84+ 86CD 00 00        Disparo_5 defw 0									; Control.
  85+ 86CF 00 00        	defw 0											; Puntero objeto.
  86+ 86D1 00 00        	defw 0											; Puntero de impresión.
  87+ 86D3 00 00        	defw 0											; Rutina de impresión.
  88+ 86D5
  89+ 86D5 00 00        Disparo_6 defw 0									; Control.
  90+ 86D7 00 00        	defw 0											; Puntero objeto.
  91+ 86D9 00 00        	defw 0											; Puntero de impresión.
  92+ 86DB 00 00        	defw 0											; Rutina de impresión.
  93+ 86DD
  94+ 86DD 00 00        Disparo_7 defw 0									; Control.
  95+ 86DF 00 00        	defw 0											; Puntero objeto.
  96+ 86E1 00 00        	defw 0											; Puntero de impresión.
  97+ 86E3 00 00        	defw 0											; Rutina de impresión.
  98+ 86E5
  99+ 86E5 00 00        Disparo_8 defw 0									; Control.
 100+ 86E7 00 00        	defw 0											; Puntero objeto.
 101+ 86E9 00 00        	defw 0											; Puntero de impresión.
 102+ 86EB 00 00        	defw 0											; Rutina de impresión.
 103+ 86ED
 104+ 86ED 00 00        Disparo_9 defw 0									; Control.
 105+ 86EF 00 00        	defw 0											; Puntero objeto.
 106+ 86F1 00 00        	defw 0											; Puntero de impresión.
 107+ 86F3 00 00        	defw 0											; Rutina de impresión.
 108+ 86F5
 109+ 86F5 00 00        Disparo_10 defw 0									; Control.
 110+ 86F7 00 00        	defw 0											; Puntero objeto.
 111+ 86F9 00 00        	defw 0											; Puntero de impresión.
 112+ 86FB 00 00        	defw 0											; Rutina de impresión.
 113+ 86FD
 114+ 86FD 00 00        Disparo_11 defw 0
 115+ 86FF
 116+ 86FF              ; -------------------------------------------------------------------------------------
 117+ 86FF              ;
 118+ 86FF              ;	Índice de cajas de entidades.
 119+ 86FF              ;
 120+ 86FF              ;	18/1/24
 121+ 86FF              ;
 122+ 86FF
 123+ 86FF              Indice_de_cajas_de_entidades
 124+ 86FF
 125+ 86FF 47 87        	defw Caja_1
 126+ 8701 54 87        	defw Caja_2
 127+ 8703 61 87        	defw Caja_3
 128+ 8705 6E 87        	defw Caja_4
 129+ 8707 7B 87        	defw Caja_5
 130+ 8709 88 87        	defw Caja_6
 131+ 870B 95 87        	defw Caja_7
 132+ 870D
 133+ 870D 00 00        	defw 0
 134+ 870F 00 00        	defw 0
 135+ 8711
 136+ 8711              ; ---------- ---------- ---------- ---------- ----------
 137+ 8711
 138+ 8711 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 139+ 8714 00 00        	defw 0		 										; (Posicion_actual).
 140+ 8716 00 00        	defw 0	 											; (Puntero_objeto).
 141+ 8718 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 142+ 871A
 143+ 871A 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 144+ 871B 05           	db %00000101										; (Attr).
 145+ 871C 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 146+ 871E A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 147+ 8720 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 148+ 8722 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 149+ 8724 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 150+ 8726 04           	db 4 												; (Cuad_objeto).
 151+ 8727 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 152+ 8728 00 00 00...  	ds 6												; Variables_de_borrado
 153+ 872E
 154+ 872E 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 155+ 8730
 156+ 8730              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 157+ 8730 00 00        	defw 0
 158+ 8732 00 00        	defw 0 												; Contador_de_mov_masticados
 159+ 8734 40           	db $40												; (Ctrl_0).
 160+ 8735 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 160+ 8739 00 00
 161+ 873B 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 162+ 873E 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 163+ 8740 00           	db 0												; (Cola_de_desplazamiento).
 164+ 8741 00           	db 0 												; (Columnas).
 165+ 8742 00 00        	defw 0												; (Limite_horizontal).
 166+ 8744 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 167+ 8747
 168+ 8747              ; ---------- ---------- ---------- ---------- ----------
 169+ 8747              ;
 170+ 8747              ;	22/01/24
 171+ 8747              ;
 172+ 8747              ; 	Cada caja tiene 13 bytes !!!
 173+ 8747
 174+ 8747 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 175+ 874A 00           	db %00000000										; (Attr).
 176+ 874B 00           	db 0												; (Impacto).
 177+ 874C 00 00        	defw 0												; (Puntero_de_impresion).
 178+ 874E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 179+ 8750 00 00        	defw 0 												; (Contador_de_mov_masticados).
 180+ 8752 00           	db 0												; (Ctrl_0).
 181+ 8753 00           	db 0												; (Ctrl_2).
 182+ 8754
 183+ 8754              ; ---------- ---------- ---------- ---------- ----------
 184+ 8754
 185+ 8754 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 186+ 8757 00           	db %00000000										; (Attr).
 187+ 8758 00           	db 0												; (Impacto).
 188+ 8759 00 00        	defw 0												; (Puntero_de_impresion).
 189+ 875B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 190+ 875D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 191+ 875F 00           	db 0												; (Ctrl_0).
 192+ 8760 00           	db 0												; (Ctrl_2).
 193+ 8761
 194+ 8761              ; ---------- ---------- ---------- ---------- ----------
 195+ 8761
 196+ 8761 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 8764 00           	db %00000000										; (Attr).
 198+ 8765 00           	db 0												; (Impacto).
 199+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 876C 00           	db 0												; (Ctrl_0).
 203+ 876D 00           	db 0												; (Ctrl_2).
 204+ 876E
 205+ 876E              ; ---------- ---------- ---------- ---------- ----------
 206+ 876E
 207+ 876E 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 208+ 8771 00           	db %00000000										; (Attr).
 209+ 8772 00           	db 0												; (Impacto).
 210+ 8773 00 00        	defw 0												; (Puntero_de_impresion).
 211+ 8775 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 212+ 8777 00 00        	defw 0 												; (Contador_de_mov_masticados).
 213+ 8779 00           	db 0												; (Ctrl_0).
 214+ 877A 00           	db 0												; (Ctrl_2).
 215+ 877B
 216+ 877B              ; ---------- ---------- ---------- ---------- ----------
 217+ 877B
 218+ 877B 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 219+ 877E 00           	db %00000000										; (Attr).
 220+ 877F 00           	db 0												; (Impacto).
 221+ 8780 00 00        	defw 0												; (Puntero_de_impresion).
 222+ 8782 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 223+ 8784 00 00        	defw 0 												; (Contador_de_mov_masticados).
 224+ 8786 00           	db 0												; (Ctrl_0).
 225+ 8787 00           	db 0												; (Ctrl_2).
 226+ 8788
 227+ 8788              ; ---------- ---------- ---------- ---------- ----------
 228+ 8788
 229+ 8788 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 230+ 878B 00           	db %00000000										; (Attr).
 231+ 878C 00           	db 0												; (Impacto).
 232+ 878D 00 00        	defw 0												; (Puntero_de_impresion).
 233+ 878F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 234+ 8791 00 00        	defw 0 												; (Contador_de_mov_masticados).
 235+ 8793 00           	db 0												; (Ctrl_0).
 236+ 8794 00           	db 0												; (Ctrl_2).
 237+ 8795
 238+ 8795              ; ---------- ---------- ---------- ---------- ----------
 239+ 8795
 240+ 8795 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 241+ 8798 00           	db %00000000										; (Attr).
 242+ 8799 00           	db 0												; (Impacto).
 243+ 879A 00 00        	defw 0												; (Puntero_de_impresion).
 244+ 879C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 245+ 879E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 246+ 87A0 00           	db 0												; (Ctrl_0).
 247+ 87A1 00           	db 0												; (Ctrl_2).
 248+ 87A2
 249+ 87A2              ; -------------------------------------------------------------------------------------
 250+ 87A2              ;
 251+ 87A2              ;	11/1/24
 252+ 87A2              ;
 253+ 87A2              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 254+ 87A2              ;
 255+ 87A2              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 256+ 87A2              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 257+ 87A2              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 258+ 87A2              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 259+ 87A2
 260+ 87A2              Indice_de_definiciones_de_entidades
 261+ 87A2
 262+ 87A2 A6 87        	defw Entidad_1
 263+ 87A4 B3 87        	defw Entidad_2
 264+ 87A6
 265+ 87A6              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 266+ 87A6
 267+ 87A6              ;	BADSAT, (Satélite malvado).
 268+ 87A6
 269+ 87A6 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 270+ 87A9 04           	db %00000100										; (Attr).
 271+ 87AA F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 272+ 87AC 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 273+ 87AE 03 40        	defw $4003	                                     	; (Posicion_inicio).
 274+ 87B0 01           	db 1												; (Cuad_objeto).
 275+ 87B1 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 276+ 87B3
 277+ 87B3 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 278+ 87B6 02           	db %00000010										; (Attr).
 279+ 87B7 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 280+ 87B9 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 281+ 87BB 40 50        	defw $5040                                      	; (Posicion_inicio).
 282+ 87BD 01           	db 1												; (Cuad_objeto).
 283+ 87BE 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 284+ 87C0
# file closed: Cajas_y_disparos.asm
 133  87C0              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87C0
   2+ 87C0
   3+ 87C0              ;   07/07/23
   4+ 87C0              ;
   5+ 87C0              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87C0              ;
   7+ 87C0              ;   Codificación:
   8+ 87C0              ;
   9+ 87C0              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87C0              ;
  11+ 87C0              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87C0              ;
  13+ 87C0              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87C0              ;
  15+ 87C0              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87C0              ;
  17+ 87C0              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87C0              ;                               ..... %01000010 Vel_up 4
  19+ 87C0              ;                                               Vel_down 2
  20+ 87C0              ;                               ..... $42
  21+ 87C0              ;
  22+ 87C0              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87C0              ;
  24+ 87C0              ;                               ..... %01000010 Vel_left 4
  25+ 87C0              ;                                               Vel_right 2
  26+ 87C0              ;                               ..... $42
  27+ 87C0              ;
  28+ 87C0              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87C0              ;
  30+ 87C0              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87C0              ;
  32+ 87C0              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87C0              ;
  34+ 87C0              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87C0              ;                                     $53
  36+ 87C0              ;
  37+ 87C0              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87C0              ;
  39+ 87C0              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87C0              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87C0              ;
  42+ 87C0              ;                       Arriba ..... $81
  43+ 87C0              ;                       Arriba - izquierda ..... $a1
  44+ 87C0              ;                       Arriba - derecha ..... $91
  45+ 87C0              ;
  46+ 87C0              ;                       Abajo ..... $41
  47+ 87C0              ;                       Abajo - izquierda ..... $61
  48+ 87C0              ;                       Abajo - derecha ..... $51
  49+ 87C0              ;
  50+ 87C0              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87C0              ;
  52+ 87C0              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87C0              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87C0              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87C0              ;
  56+ 87C0              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87C0              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87C0              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87C0              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87C0              ;
  61+ 87C0              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87C0              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87C0              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87C0              ;
  65+ 87C0              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87C0              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87C0              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87C0              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87C0
  70+ 87C0              ; ----- ----- ----- ----- -----
  71+ 87C0
  72+ 87C0 EC 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87C2 F4 87            defw F_1
  74+ 87C4 FE 87            defw F_2
  75+ 87C6 08 88            defw Codo_abajo_derecha
  76+ 87C8 3C 88            defw Derecha_y_subiendo
  77+ 87CA 46 88            defw Derecha_y_subiendo_1
  78+ 87CC 50 88            defw F_3
  79+ 87CE 5A 88            defw F_4
  80+ 87D0 64 88            defw Derecha_y_bajando
  81+ 87D2 6E 88            defw Derecha_y_bajando_1
  82+ 87D4 78 88            defw Derecha_y_bajando_2
  83+ 87D6 82 88            defw Codo_derecha_abajo
  84+ 87D8 B2 88            defw Codo_abajo_izq.
  85+ 87DA E6 88            defw Izquierda_y_subiendo
  86+ 87DC F0 88            defw Izquierda_y_subiendo_1
  87+ 87DE FA 88            defw F_5
  88+ 87E0 04 89            defw F_6
  89+ 87E2 0E 89            defw Izquierda_y_bajando
  90+ 87E4 18 89            defw Izquierda_y_bajando_1
  91+ 87E6 22 89            defw Izquierda_y_bajando_2
  92+ 87E8 2C 89            defw Codo_izquierda_abajo
  93+ 87EA 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87EC
  95+ 87EC 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87F0 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87F4
  98+ 87F4 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87F8 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87FC 08 00
 100+ 87FE
 101+ 87FE 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8802 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8806 0F FE
 103+ 8808
 104+ 8808 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 880C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8810 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8814 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8818 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 881C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8820 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8824 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8828 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 882C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8830 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8834 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8838 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 883C
 118+ 883C 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8840 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8844 06 00
 120+ 8846
 121+ 8846 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 884A 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 884E 02 00
 123+ 8850
 124+ 8850 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8854 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8858 04 00
 126+ 885A
 127+ 885A 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 885E 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8862 08 00
 129+ 8864
 130+ 8864 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8868 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 886C 02 00
 132+ 886E
 133+ 886E 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8872 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8876 06 00
 135+ 8878
 136+ 8878 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 887C 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8880 06 00
 138+ 8882
 139+ 8882              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8882
 141+ 8882 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8886 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 888A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 888E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8892 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8896 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 889A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 889E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88A2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88A6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88AA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88AE 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88B2
 154+ 88B2 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88B6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88BA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88BE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88C2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88C6 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88CA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88CE 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88D2 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88D6 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88DA 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88DE 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88E2 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88E6
 168+ 88E6 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88EA 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88EE 06 00
 170+ 88F0
 171+ 88F0 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88F4 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88F8 02 00
 173+ 88FA
 174+ 88FA 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88FE 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8902 04 00
 176+ 8904
 177+ 8904 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8908 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 890C 08 00
 179+ 890E
 180+ 890E 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8912 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8916 02 00
 182+ 8918
 183+ 8918 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 891C 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8920 06 00
 185+ 8922
 186+ 8922 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8926 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 892A 06 00
 188+ 892C
 189+ 892C 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8930 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8934 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8938 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 893C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8940 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8944 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8948 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 894C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8950 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8954 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8958 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 895C
 202+ 895C
 203+ 895C
 204+ 895C
 205+ 895C
 206+ 895C
 207+ 895C
 208+ 895C
 209+ 895C
 210+ 895C
# file closed: Patrones_de_mov.asm
 134  895C              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 895C              ; 19/1/24
   2+ 895C
   3+ 895C              Indice_de_niveles
   4+ 895C
   5+ 895C 64 89        	defw Nivel_1
   6+ 895E 70 89        	defw Nivel_2
   7+ 8960
   8+ 8960              ;	...
   9+ 8960              ;	...
  10+ 8960              ;	+ Niveles ...
  11+ 8960
  12+ 8960 00 00        	defw 0
  13+ 8962 00 00        	defw 0
  14+ 8964
  15+ 8964 07           Nivel_1 db 7									; Nº de entidades.
  16+ 8965 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8969 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 896D 01 01 01
  18+ 8970
  19+ 8970 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8971 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8975 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8979 01 02
  22+ 897B 02 01 01 01  	db 2,1,1,1,1,2
  22+ 897F 01 02
  23+ 8981
# file closed: Niveles.asm
 135  8981
 136  8981              ; ******************************************************************************************************************************************************************************************
 137  8981              ; Constantes.
 138  8981              ; ******************************************************************************************************************************************************************************************
 139  8981              ;
 140  8981              ; 09/03/24
 141  8981
 142  8981              ;
 143  8981              ; Constantes.
 144  8981              ;
 145  8981
 146  8981              ROM_keyboard equ $0038 									; Rutina de ROM. Actualiza FRAMES y escanea el teclado.
 147  8981              FRAMES equ $5c78										; Variable de 16 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
 148  8981
 149  8981              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
 150  8981
 151  8981              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 152  8981              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 153  8981              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 154  8981              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 155  8981
 156  8981              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb00 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 157  8981
 158  8981              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
 159  8981
 160  8981              ;                                                       ; 35 bytes por entidad.
 161  8981              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 162  8981              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 163  8981              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 164  8981              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 165  8981
 166  8981              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
 167  8981
 168  8981
 169  8981              ; ******************************************************************************************************************************************************************************************
 170  8981              ; Variables.
 171  8981              ; ******************************************************************************************************************************************************************************************
 172  8981              ;
 173  8981              ; 18/01/24
 174  8981              ;
 175  8981              ; Variables de DRAW. (Motor principal).	42 Bytes.
 176  8981              ;
 177  8981
 178  8981              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 179  8981
 180  8981 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 181  8982              ;															- Patrón de movimiento.
 182  8982              ;															- Aspecto
 183  8982 00           Filas db 0												; Filas. [DRAW]
 184  8983 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 185  8984 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 186  8986 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 187  8988 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 188  8989 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 189  898A
 190  898A              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 191  898A
 192  898A 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 193  898B              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 194  898B              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 195  898B 00           Attr db 0												; Atributos de la entidad:
 196  898C
 197  898C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 198  898C              ;
 199  898C              ;	COLORES: 0 ..... NEGRO
 200  898C              ;    		 1 ..... AZUL
 201  898C              ; 			 2 ..... ROJO
 202  898C              ;			 3 ..... MAGENTA
 203  898C              ; 			 4 ..... VERDE
 204  898C              ; 			 5 ..... CIAN
 205  898C              ;			 6 ..... AMARILLO
 206  898C              ; 			 7 ..... BLANCO
 207  898C
 208  898C 00 00        Indice_Sprite_der defw 0
 209  898E 00 00        Indice_Sprite_izq defw 0
 210  8990 00 00        Puntero_DESPLZ_der defw 0
 211  8992 00 00        Puntero_DESPLZ_izq defw 0
 212  8994
 213  8994 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 214  8996 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 215  8997
 216  8997              ; Variables de objeto. (Características).
 217  8997
 218  8997 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 219  8998              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 220  8998              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 221  8998              ; Variables_de_borrado ds 6
 222  8998
 223  8998 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 224  899A              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 225  899A
 226  899A 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 227  899C
 228  899C              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 229  899C              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 230  899C
 231  899C 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 232  899E              ;														; _palabras que componen el "movimiento_masticado".
 233  899E
 234  899E              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 235  899E
 236  899E 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 237  899F              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 238  899F              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 239  899F              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 240  899F              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 241  899F              ;
 242  899F              ; 														DESCRIPCIÖN:
 243  899F              ;
 244  899F              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 245  899F              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 246  899F              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 247  899F              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 248  899F              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 249  899F              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 250  899F              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 251  899F              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 252  899F              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 253  899F              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 254  899F              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 255  899F              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 256  899F              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 257  899F              ;
 258  899F              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 259  899F              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 260  899F              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 261  899F
 262  899F              ; Variables de funcionamiento. [DRAW].
 263  899F
 264  899F 00           Columnas db 0
 265  89A0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 266  89A2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 267  89A2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 268  89A3
 269  89A3              ; variables de control general.
 270  89A3
 271  89A3 00           Ctrl_2 db 0
 272  89A4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 273  89A4              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 274  89A4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 275  89A4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 276  89A4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 277  89A4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 278  89A4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 279  89A4              ;
 280  89A4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 281  89A4              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 282  89A4              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 283  89A4              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 284  89A4              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 285  89A4              ;														BIT 4, ???
 286  89A4              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 287  89A4
 288  89A4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 289  89A5
 290  89A5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 291  89A5
 292  89A5              ;					         		---------;      ;---------
 293  89A5
 294  89A5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 295  89A5
 296  89A5              Perfiles_de_velocidad
 297  89A5
 298  89A5 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 299  89A6 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 300  89A7 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 301  89A8 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 302  89A9
 303  89A9              ; Contadores de 16 bits.
 304  89A9
 305  89A9 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 306  89AB 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 307  89AD 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 308  89AF 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 309  89B1
 310  89B1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 311  89B1
 312  89B1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 313  89B3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 314  89B5 00 00        Puntero_indice_mov_bucle defw 0							;
 315  89B7              ;
 316  89B7              ;
 317  89B7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 318  89B8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 319  89B8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 320  89B8 00           Incrementa_puntero_backup db 0
 321  89B9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 322  89BA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 323  89BA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 324  89BB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 325  89BC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 326  89BD              ;
 327  89BD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 328  89BD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 329  89BD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 330  89BD              ;
 331  89BD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 332  89BD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 333  89BD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 334  89BD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 335  89BD              ;
 336  89BD              ;														;	"$ff" ..... Bucle infinito de repetición.
 337  89BD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 338  89BD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 339  89BD              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 340  89BD
 341  89BD 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 342  89BE
 343  89BE              ;														DESCRIPCIÓN:
 344  89BE              ;
 345  89BE              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 346  89BE              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 347  89BE              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 348  89BE              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 349  89BE              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 350  89BE              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 351  89BE
 352  89BE              ;														BIT 3, Recarga de nueva oleada.
 353  89BE              ;														BIT 4, Recarga de nueva oleada.
 354  89BE              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 355  89BE              ;														BIT 6, **** Frame completo.
 356  89BE              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 357  89BE
 358  89BE 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 359  89C0              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 360  89C0              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 361  89C0              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 362  89C0
 363  89C0              ; Gestión de ENTIDADES y CAJAS.
 364  89C0
 365  89C0 00 00        Puntero_store_caja defw 0
 366  89C2 00 00        Puntero_restore_caja defw 0
 367  89C4 00 00        Indice_restore_caja defw 0
 368  89C6 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 369  89C7 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 370  89C8 00           Entidades_en_curso db 0									; ..... ..... .....
 371  89C9 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 372  89CA              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 373  89CA              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 374  89CA              ;														; _ (Numero_de_malotes)="0".
 375  89CA 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 376  89CC 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 377  89CE              ;														; _ puntero (Indice_entidades).
 378  89CE
 379  89CE              ;---------------------------------------------------------------------------------------------------------------
 380  89CE              ;
 381  89CE              ;	11/01/24
 382  89CE              ;
 383  89CE              ;	Álbumes.
 384  89CE
 385  89CE 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 386  89D0              ;														; _variable para almacenar lo posición del puntero_
 387  89D0              ; 														; _de pila, SP.
 388  89D0 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 389  89D2              ;														; La utiliza la rutina [Extrae_foto_registros].
 390  89D2
 391  89D2              ; Impresión. ----------------------------------------------------------------------------------------------------
 392  89D2
 393  89D2 00 00        Album_de_pintado defw 0
 394  89D4 00 00        Album_de_borrado defw 0
 395  89D6 00 00        Techo_Scanlines_album defw 0
 396  89D8 00 00        Techo_Scanlines_album_2 defw 0
 397  89DA 00           Switch db 0
 398  89DB 00 00        Techo defw 0
 399  89DD 00 00        Scanlines_album_SP defw 0
 400  89DF 63 86        India_SP defw Tabla_de_pintado
 401  89E1 66 86        India_2_SP defw Tabla_de_pintado+3
 402  89E3
 403  89E3 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 404  89E4              ;
 405  89E4              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 406  89E4              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 407  89E4              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 408  89E4              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 409  89E4              ;																Habilita el borrado/pintado de sprites.
 410  89E4              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 411  89E4              ;																_ a la baja.
 412  89E4              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 413  89E4
 414  89E4
 415  89E4
 416  89E4 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 417  89E5              ;
 418  89E5              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 419  89E5              ;
 420  89E5              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 421  89E5              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 422  89E5              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 423  89E5              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 424  89E5              ;
 425  89E5              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 426  89E5              ;															_ masticados ya generados.
 427  89E5              ;
 428  89E5              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 429  89E5              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 430  89E5              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 431  89E5              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 432  89E5
 433  89E5
 434  89E5              ; Gestión de Disparos.
 435  89E5
 436  89E5              ;;Numero_de_disparotes db 0
 437  89E5              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 438  89E5              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 439  89E5              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 440  89E5              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 441  89E5              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 442  89E5              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 443  89E5              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 444  89E5              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 445  89E5              ;														; _produzca colisión.
 446  89E5              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 447  89E5              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 448  89E5              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 449  89E5              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 450  89E5 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 451  89E8              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 452  89E8              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 453  89E8
 454  89E8              ;---------------------------------------------------------------------------------------------------------------
 455  89E8
 456  89E8              ; Relojes y temporizaciones.
 457  89E8
 458  89E8              ;Clock_explosion db 4
 459  89E8
 460  89E8 5C 86        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 461  89EA
 462  89EA 00           Clock_Entidades_en_curso db 0
 463  89EB
 464  89EB 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 465  89EC              ;														; Repite la oleada de entidades.
 466  89EC              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 467  89EC              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 468  89EC              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 469  89EC
 470  89EC              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 471  89EC              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 472  89EC              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 473  89EC
 474  89EC              ;---------------------------------------------------------------------------------------------------------------
 475  89EC
 476  89EC              ; Gestión de NIVELES.
 477  89EC
 478  89EC 00           Nivel db 0												; Nivel actual del juego.
 479  89ED 00 00        Puntero_indice_NIVELES defw 0
 480  89EF 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 481  89F1              ; 														; _ que definen el NIVEL.
 482  89F1              ; Y todo comienza aquí .....
 483  89F1              ;
 484  89F1              ; 	INICIO  *************************************************************************************************************************************************************************
 485  89F1              ;
 486  89F1              ;	5/1/24
 487  89F1
 488  89F1              START
 489  89F1
 490  89F1 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 491  89F4 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 492  89F6 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 493  89F8 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 494  89FA F3           	DI
 495  89FB
 496  89FB              ;	ld a,%00000111
 497  89FB              ;	call Cls
 498  89FB CD F0 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 499  89FE
 500  89FE              ; INICIALIZACIÓN.
 501  89FE
 502  89FE 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 503  8A00 CD 7F AA     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 504  8A03 CD D7 8A     	call Extrae_numero_aleatorio_y_avanza
 505  8A06 32 EA 89     	ld (Clock_Entidades_en_curso),a
 506  8A09
 507  8A09
 508  8A09              ;	Inicializa 1er Nivel.
 509  8A09
 510  8A09 21 5C 89     	ld hl,Indice_de_niveles
 511  8A0C 22 ED 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 512  8A0F CD AF AA     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 513  8A12              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 514  8A12              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 515  8A12              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 516  8A12
 517  8A12              ;	Provisional, (para desarrollo).
 518  8A12              	;-
 519  8A12              ;	ld hl,Numero_parcial_de_entidades
 520  8A12              ;	ld b,(hl)
 521  8A12              ;	inc b
 522  8A12              ;	dec b
 523  8A12              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 524  8A12
 525  8A12 CD 53 8C     	call Inicia_albumes_de_lineas
 526  8A15
 527  8A15 CD F4 AA     4 call Inicia_Entidades
 528  8A18
 529  8A18 CD 63 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 530  8A1B              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 531  8A1B              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 532  8A1B              ; (Esto se dá cuando se inicia una nueva oleada).
 533  8A1B
 534  8A1B              ;	ld a,(Ctrl_1)
 535  8A1B              ;	bit 3,a
 536  8A1B              ;	jr nz,5F											 ; Loop
 537  8A1B
 538  8A1B              ; 	INICIA AMADEUS !!!!!
 539  8A1B
 540  8A1B              ;3 call Restore_Amadeus
 541  8A1B              ;	call Inicia_Puntero_objeto
 542  8A1B              ;	call Draw
 543  8A1B
 544  8A1B              ;	call Guarda_movimiento_masticado	;! Provisional
 545  8A1B
 546  8A1B              ;	call Genera_datos_de_impresion
 547  8A1B              ;	call Guarda_datos_de_borrado_Amadeus
 548  8A1B
 549  8A1B              ;	ld de,Amadeus_db
 550  8A1B              ;	call Store_Amadeus
 551  8A1B
 552  8A1B              ; 	INICIA DISPAROS !!!!!
 553  8A1B
 554  8A1B              ;	call Inicia_Puntero_Disparo_Entidades
 555  8A1B              ;	call Inicia_Puntero_Disparo_Amadeus
 556  8A1B
 557  8A1B              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 558  8A1B
 559  8A1B              ;5 call Inicia_punteros_de_cajas
 560  8A1B              ;	call Restore_entidad
 561  8A1B
 562  8A1B              ;	ld a,(Ctrl_1)
 563  8A1B              ;	bit 3,a
 564  8A1B              ;	jr z,6F
 565  8A1B
 566  8A1B              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 567  8A1B
 568  8A1B              ;	ld hl,Ctrl_1
 569  8A1B              ;	res 3,(hl)
 570  8A1B              ;	jr Main
 571  8A1B
 572  8A1B              ; Damos por concluida la construcción del FRAME.
 573  8A1B              ;
 574  8A1B
 575  8A1B 2A DD 89     6 ld hl,(Scanlines_album_SP)
 576  8A1E 22 D6 89     	ld (Techo_Scanlines_album),hl
 577  8A21
 578  8A21 2A D4 89     	ld hl,(Album_de_borrado)
 579  8A24 22 DD 89     	ld (Scanlines_album_SP),hl
 580  8A27
 581  8A27 21 63 86     	ld hl,Tabla_de_pintado
 582  8A2A 22 DF 89     	ld (India_SP),hl
 583  8A2D
 584  8A2D 21 E3 89     	ld hl,Ctrl_3
 585  8A30 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 586  8A32 CB D6        	set 2,(hl)
 587  8A34
 588  8A34 FB           	ei
 589  8A35 76           	halt
 590  8A36
 591  8A36              ; ------------------------------------
 592  8A36
 593  8A36              Main
 594  8A36              ;
 595  8A36              ;	11/12/23
 596  8A36
 597  8A36              ; Aparece nueva entidad ???
 598  8A36
 599  8A36              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 600  8A36              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 601  8A36              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 602  8A36              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 603  8A36              ;														; _un 2º bloque.
 604  8A36
 605  8A36              ;	call Genera_scanlines_masticados_a_borrar
 606  8A36              ;	call Limpia_Almacen_de_scanlines_masticados
 607  8A36
 608  8A36              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 609  8A36              ; 													 	; _(Scanlines_album_SP).
 610  8A36
 611  8A36 3A EA 89     	ld a,(Clock_Entidades_en_curso)
 612  8A39 47           	ld b,a
 613  8A3A
 614  8A3A 3A 78 5C     	ld a,(FRAMES)
 615  8A3D B8           	cp b
 616  8A3E 20 16        	jr nz,13F
 617  8A40
 618  8A40              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8A40              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 620  8A40
 621  8A40 3A C7 89     21 ld a,(Numero_parcial_de_entidades)
 622  8A43 47           	ld b,a
 623  8A44 3A C8 89     	ld a,(Entidades_en_curso)
 624  8A47 B8           	cp b
 625  8A48 28 0C        	jr z,13F
 626  8A4A 30 0A        	jr nc,13F
 627  8A4C
 628  8A4C 3C           	inc a
 629  8A4D 32 C8 89     	ld (Entidades_en_curso),a
 630  8A50
 631  8A50              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 632  8A50
 633  8A50 CD D7 8A     	call Extrae_numero_aleatorio_y_avanza
 634  8A53 32 EA 89     	ld (Clock_Entidades_en_curso),a
 635  8A56
 636  8A56              ;	ld a,(Clock_Entidades_en_curso)
 637  8A56              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 638  8A56              ;! _ IMPREDECIBLE !!!!
 639  8A56              ;	add 110
 640  8A56              ;	ld (Clock_Entidades_en_curso),a
 641  8A56
 642  8A56              ; -------------------------------------------------------------------------------------------------------------
 643  8A56
 644  8A56              ; Habilita disparos.
 645  8A56
 646  8A56              13
 647  8A56
 648  8A56              ;	ld hl,Disparo_Amadeus
 649  8A56              ;	ld de,CLOCK_repone_disparo_Amadeus
 650  8A56              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 651  8A56
 652  8A56              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 653  8A56              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 654  8A56              ;	call Habilita_disparos
 655  8A56
 656  8A56              ; COLISIONES.
 657  8A56
 658  8A56              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 659  8A56
 660  8A56              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 661  8A56              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 662  8A56              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 663  8A56
 664  8A56              ;	xor a
 665  8A56              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 666  8A56
 667  8A56              ;	call Inicia_punteros_de_cajas
 668  8A56              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 669  8A56              ; 														; _ en DRAW.
 670  8A56
 671  8A56              ;	ld a,(Filas)
 672  8A56              ;	and a
 673  8A56              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 674  8A56              ;	call Incrementa_punteros_de_cajas
 675  8A56              ;	jr 12B
 676  8A56
 677  8A56              ; ---------------------------------------------------------------------------------------
 678  8A56
 679  8A56 3A C7 89     10 ld a,(Numero_parcial_de_entidades)
 680  8A59 47               ld b,a
 681  8A5A A7           	and a
 682  8A5B 20 00        	jr nz,11F
 683  8A5D
 684  8A5D              ;	ld hl,Ctrl_1;
 685  8A5D              ;	bit 4,(hl)
 686  8A5D              ;	jp nz,16F
 687  8A5D
 688  8A5D              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 689  8A5D
 690  8A5D              ;	ld hl,Ctrl_1
 691  8A5D              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 692  8A5D
 693  8A5D              ;	ld a,(Contador_de_frames)
 694  8A5D              ;	inc a
 695  8A5D              ;	ld (Activa_recarga_cajas),a
 696  8A5D
 697  8A5D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 698  8A5D
 699  8A5D 3A C8 89     11 ld a,(Entidades_en_curso)
 700  8A60 A7           	and a
 701  8A61 28 42        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 702  8A63 47           	ld b,a												; No hay entidades que gestionar.
 703  8A64
 704  8A64              ; ( Código que ejecutamos con cada entidad: ).
 705  8A64
 706  8A64              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 707  8A64              ;
 708  8A64              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 709  8A64
 710  8A64 21 63 86     	ld hl,Tabla_de_pintado
 711  8A67 22 DF 89     	ld (India_SP),hl
 712  8A6A
 713  8A6A 21 E3 89     	ld hl,Ctrl_3
 714  8A6D CB D6        	set 2,(hl)
 715  8A6F CD BC 8A     	call Change
 716  8A72
 717  8A72 C5           15 push bc 												; Nº de entidades en curso.
 718  8A73
 719  8A73 CD B4 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 720  8A76
 721  8A76 CD 0F 8B     	call Recauda_informacion_de_entidad_en_curso		; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 722  8A79
 723  8A79
 724  8A79              ; Existe "Entidad_guía" ???.
 725  8A79              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 726  8A79
 727  8A79              ;	ld a,(Ctrl_3)
 728  8A79              ;	bit 1,a
 729  8A79              ;	jr nz,22F
 730  8A79
 731  8A79              ; Almacén de "Movimientos_masticados" lleno ???
 732  8A79              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 733  8A79              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 734  8A79
 735  8A79              ;;	ld a,(Ctrl_3)
 736  8A79              ;;	bit 3,a
 737  8A79              ;;	jr nz,22F
 738  8A79
 739  8A79              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 740  8A79
 741  8A79              ;	ld hl,Ctrl_2
 742  8A79              ;	set 5,(hl)
 743  8A79              ;	ld hl,Ctrl_3
 744  8A79              ;	set 1,(hl)
 745  8A79
 746  8A79              ; Impacto ???
 747  8A79
 748  8A79              ;22 ld a,(Impacto)
 749  8A79              ;	and a
 750  8A79              ;	jr z,8F
 751  8A79
 752  8A79              ; Hay Impacto en esta entidad.
 753  8A79
 754  8A79              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 755  8A79              ;	dec (hl)
 756  8A79              ;	jp nz,17F
 757  8A79
 758  8A79              ;! Velocidad de la animación de la explosión.
 759  8A79
 760  8A79              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 761  8A79              ;														; _,(velocidad de la explosión).
 762  8A79              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 763  8A79
 764  8A79              ;	call Repone_datos_de_borrado
 765  8A79              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 766  8A79
 767  8A79              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 768  8A79
 769  8A79              ;	ld a,(Ctrl_2)
 770  8A79              ;	bit 1,a
 771  8A79              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 772  8A79
 773  8A79              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 774  8A79
 775  8A79              ;	ld a,(CTRL_DESPLZ)
 776  8A79              ;	and a
 777  8A79              ;	jr nz,18F
 778  8A79
 779  8A79              ;	ld hl,Indice_Explosion_2x2-2
 780  8A79              ;	ld (Puntero_DESPLZ_der),hl
 781  8A79              ;	jr 19F
 782  8A79
 783  8A79              ;18 ld hl,Indice_Explosion_2x3-2
 784  8A79              ;	ld (Puntero_DESPLZ_der),hl
 785  8A79
 786  8A79              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 787  8A79              ;	set 1,(hl)
 788  8A79              ;	jr 7F
 789  8A79
 790  8A79              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 791  8A79              ; _con las coordenadas de la entidad almacenada en DRAW.
 792  8A79
 793  8A79              ;8 ld a,(Ctrl_1)
 794  8A79              ;	bit 2,a
 795  8A79              ;	jr z,7F
 796  8A79
 797  8A79              ;	ld hl,(Coordenadas_disparo_certero)
 798  8A79              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 799  8A79              ;														; E contiene la coordenada_X del disparo.
 800  8A79              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 801  8A79              ;														; H FILA, (Coordenada_y de la entidad).
 802  8A79              ;	and a
 803  8A79              ;	sbc hl,de
 804  8A79
 805  8A79              ;	call Determina_resultado_comparativa
 806  8A79
 807  8A79              ;	ld a,b
 808  8A79              ;	and a
 809  8A79              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 810  8A79
 811  8A79              ; ----- ----- -----
 812  8A79
 813  8A79              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 814  8A79              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 815  8A79
 816  8A79              ;	ld hl,Ctrl_1
 817  8A79              ;	res 2,(hl)
 818  8A79
 819  8A79              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 820  8A79
 821  8A79              ;	ld a,(Ctrl_0)
 822  8A79              ;	bit 4,a
 823  8A79              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 824  8A79
 825  8A79              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 826  8A79              ; [[[
 827  8A79              ;	call Detecta_disparo_entidad
 828  8A79              ; ]]]
 829  8A79
 830  8A79              ; -------------------------------------------
 831  8A79
 832  8A79 CD FF 8B      	call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 833  8A7C CD F6 AC     	call Genera_datos_de_impresion
 834  8A7F              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 835  8A7F              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 836  8A7F              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 837  8A7F              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 838  8A7F
 839  8A7F CD 6E AB     	call Decrementa_Contador_de_mov_masticados
 840  8A82
 841  8A82              ; -------------------------------------------
 842  8A82
 843  8A82              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 844  8A82
 845  8A82 2A 98 89     	ld hl,(Puntero_de_impresion)
 846  8A85 CD A3 AC     	call Genera_coordenadas
 847  8A88
 848  8A88              ;	ld hl,Ctrl_0
 849  8A88              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 850  8A88
 851  8A88 CD 59 AB     17 call Store_Restore_cajas
 852  8A8B
 853  8A8B C1           	pop bc
 854  8A8C
 855  8A8C 10 E4        	djnz 15B
 856  8A8E
 857  8A8E              ; Hemos terminado de gestionar TODAS las ENTIDADES.
 858  8A8E
 859  8A8E CD 23 8B     	call Inicializa_India_y_limpia_Tabla_de_impresion 	; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 860  8A91 CD 3A 8B     	call Ordena_tabla_de_impresion
 861  8A94 CD 63 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 862  8A97
 863  8A97              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 864  8A97              ; Hemos gestionado todas las unidades.
 865  8A97              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 866  8A97
 867  8A97              ;	ld hl,Ctrl_1
 868  8A97              ;	res 2,(hl)
 869  8A97
 870  8A97
 871  8A97 CD E0 8A     	call Borra_diferencia
 872  8A9A
 873  8A9A 3A E3 89     	ld a,(Ctrl_3)
 874  8A9D CB 5F        	bit 3,a
 875  8A9F 20 04        	jr nz,16F
 876  8AA1
 877  8AA1 EB           	ex de,hl
 878  8AA2 71           	ld (hl),c
 879  8AA3 2C           	inc l
 880  8AA4 70           	ld (hl),b											; Nuevo techo, mayor que el anterior.
 881  8AA5
 882  8AA5              ; Aquí situaremos la rutina que ordena el índice Masa.
 883  8AA5
 884  8AA5 2A D4 89     16 ld hl,(Album_de_borrado)
 885  8AA8 22 DD 89     	ld (Scanlines_album_SP),hl
 886  8AAB
 887  8AAB 21 E3 89     	ld hl,Ctrl_3
 888  8AAE CB C6        	set 0,(hl) 											; Indica Frame completo.
 889  8AB0
 890  8AB0 CB 9E        	res 3,(hl)
 891  8AB2 CB A6        	res 4,(hl)
 892  8AB4
 893  8AB4 AF           	xor a
 894  8AB5 D3 FE        	out ($fe),a
 895  8AB7 76           	halt
 896  8AB8
 897  8AB8              ; ----------------------------------------
 898  8AB8
 899  8AB8              ;	ld a,(Ctrl_1) 										; Existe Loop?
 900  8AB8              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 901  8AB8 CA 36 8A     	jp z,Main
 902  8ABB
 903  8ABB              ; RECARGA DE NUEVA OLEADA.
 904  8ABB
 905  8ABB              ;	ld a,(Contador_de_frames)
 906  8ABB              ;	ld b,a
 907  8ABB              ;	ld a,(Activa_recarga_cajas)
 908  8ABB              ;	cp b
 909  8ABB              ;	jr z,20F
 910  8ABB
 911  8ABB              ;	ld hl,Ctrl_1
 912  8ABB              ;	set 4,(hl)
 913  8ABB              ;	jp Main
 914  8ABB
 915  8ABB              ;20 ld hl,Ctrl_1
 916  8ABB              ;	res 4,(hl)
 917  8ABB
 918  8ABB              ;	ld a,(Contador_de_frames)
 919  8ABB
 920  8ABB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 921  8ABB              ;! _ IMPREDECIBLE !!!!
 922  8ABB
 923  8ABB              ;	add 10
 924  8ABB              ;	ld (Clock_Entidades_en_curso),a
 925  8ABB
 926  8ABB              ;	jp 4B
 927  8ABB
 928  8ABB C9           	ret
 929  8ABC
 930  8ABC              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 931  8ABC              ;
 932  8ABC              ;	16/11/23
 933  8ABC
 934  8ABC              ;;Gestiona_Amadeus
 935  8ABC
 936  8ABC              ;! Activa/desactiva impacto con Amadeus.
 937  8ABC
 938  8ABC              ;	ld a,(Impacto)
 939  8ABC              ;	and a
 940  8ABC              ;	jr nz,2F
 941  8ABC
 942  8ABC              ;;	call Mov_Amadeus
 943  8ABC
 944  8ABC              ;;2 ld a,(Ctrl_0)
 945  8ABC              ;;	bit 4,a
 946  8ABC              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 947  8ABC
 948  8ABC              ;;	call Guarda_foto_entidad_a_pintar
 949  8ABC              ;;	call Guarda_datos_de_borrado_Amadeus
 950  8ABC
 951  8ABC              ;;1 ld hl,Ctrl_0
 952  8ABC              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 953  8ABC
 954  8ABC              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 955  8ABC
 956  8ABC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 957  8ABC
 958  8ABC              ;	call Calcula_numero_de_disparotes
 959  8ABC
 960  8ABC              ;;	ret
 961  8ABC
 962  8ABC              ; -----------------------------
 963  8ABC              ;
 964  8ABC              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 965  8ABC              ;
 966  8ABC              ;	INPUTS: B a de estar a "0".
 967  8ABC
 968  8ABC              ;Prepara_Borra_sprites
 969  8ABC
 970  8ABC              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 971  8ABC              ;	ld a,l
 972  8ABC              ;	ret z
 973  8ABC
 974  8ABC              ;	srl a
 975  8ABC
 976  8ABC              ;2 sub 16
 977  8ABC              ;	jr z,1F
 978  8ABC              ;	inc b
 979  8ABC              ;	jr 2B
 980  8ABC
 981  8ABC              ;1 inc b
 982  8ABC
 983  8ABC              ;	exx
 984  8ABC              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 985  8ABC              ;	exx
 986  8ABC
 987  8ABC              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 988  8ABC              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 989  8ABC
 990  8ABC              ;	ret
 991  8ABC
 992  8ABC              ; --------------------------------------------------------------------------------------------------------------
 993  8ABC              ;
 994  8ABC              ;	15/12/23
 995  8ABC
 996  8ABC              ;Mov_obj
 997  8ABC
 998  8ABC              ;	ld a,(Ctrl_2)
 999  8ABC              ;	bit 1,a
1000  8ABC              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1001  8ABC
1002  8ABC              ; Explosión:
1003  8ABC
1004  8ABC              ;	ld a,(Frames_explosion)
1005  8ABC              ;	and a
1006  8ABC              ;	jr nz,4F
1007  8ABC
1008  8ABC              ;!  Una alimaña menos!!!!!!!!!1
1009  8ABC
1010  8ABC              ; Se trataba de una Entidad_guía ???
1011  8ABC
1012  8ABC              ;	ld a,(Ctrl_2)
1013  8ABC              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1014  8ABC              ;	jr z,5F
1015  8ABC
1016  8ABC              ;	ld hl,Ctrl_3
1017  8ABC              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1018  8ABC
1019  8ABC              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1020  8ABC              ;!! _generado puede ser distinto, (aletoriedad).
1021  8ABC
1022  8ABC              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1023  8ABC              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1024  8ABC              ;	dec (hl)
1025  8ABC              ;	ld hl,Entidades_en_curso
1026  8ABC              ;	dec (hl)
1027  8ABC              ;	ld hl,Numero_de_entidades
1028  8ABC              ;	dec (hl)
1029  8ABC              ;	jr 3F
1030  8ABC
1031  8ABC              ; -----
1032  8ABC
1033  8ABC              ;	`Movemos´ la explosión.
1034  8ABC
1035  8ABC              ;4 ld hl,(Puntero_DESPLZ_der)
1036  8ABC              ;	inc hl
1037  8ABC              ;	inc hl
1038  8ABC              ;	call Extrae_address
1039  8ABC              ;;	ld (Puntero_objeto),hl
1040  8ABC
1041  8ABC              ;;	ld hl,Frames_explosion
1042  8ABC              ;;	dec (hl)
1043  8ABC
1044  8ABC              ;;	ld hl,Ctrl_0
1045  8ABC              ;;	set 4,(hl);;
1046  8ABC
1047  8ABC              ;;	jr 3F
1048  8ABC
1049  8ABC              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1050  8ABC
1051  8ABC              ;2 xor a
1052  8ABC              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1053  8ABC
1054  8ABC              ; Movemos Entidades malignas.
1055  8ABC              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1056  8ABC
1057  8ABC              ;	ld a,(Ctrl_2)
1058  8ABC              ;	bit 5,a
1059  8ABC              ;	jr nz,8F
1060  8ABC
1061  8ABC              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1062  8ABC              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1063  8ABC              ;	jr 7F
1064  8ABC
1065  8ABC              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1066  8ABC
1067  8ABC              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1068  8ABC              ;	bit 4,a
1069  8ABC              ;	ret z
1070  8ABC
1071  8ABC              ; Ha habido desplazamiento de la entidad maligna.
1072  8ABC              ; Ha llegado a zona de AMADEUS ???
1073  8ABC
1074  8ABC              ;7 ld a,(Coordenada_y)
1075  8ABC              ;	cp $14
1076  8ABC              ;	jr c,1F
1077  8ABC
1078  8ABC              ; ---------
1079  8ABC
1080  8ABC              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1081  8ABC              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1082  8ABC
1083  8ABC              ;	di
1084  8ABC              ;	call Genera_coordenadas_X
1085  8ABC              ;	call Compara_coordenadas_X
1086  8ABC              ;	ei
1087  8ABC
1088  8ABC              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1089  8ABC
1090  8ABC              ; ---------
1091  8ABC
1092  8ABC              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1093  8ABC              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1094  8ABC              ;	call Limpia_Variables_de_borrado
1095  8ABC
1096  8ABC              ;3 ret
1097  8ABC
1098  8ABC              ; --------------------------------------------------------------------------------------------------------------
1099  8ABC              ;
1100  8ABC              ;	29/1/23
1101  8ABC
1102  8ABC              ;Mov_Amadeus
1103  8ABC
1104  8ABC              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1105  8ABC
1106  8ABC              ;	call Mov_right
1107  8ABC
1108  8ABC              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1109  8ABC              ;	bit 4,a
1110  8ABC              ;	ret z
1111  8ABC
1112  8ABC              ; ---------
1113  8ABC
1114  8ABC              ;   call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1115  8ABC              ;	call Repone_datos_de_borrado_Amadeus
1116  8ABC              ;	call Limpia_Variables_de_borrado
1117  8ABC
1118  8ABC              ;	ret
1119  8ABC
1120  8ABC              ; --------------------------------------------------------------------------------------------------------------
1121  8ABC              ;
1122  8ABC              ;	17/3/24
1123  8ABC
1124  8ABC              Change
1125  8ABC
1126  8ABC 3A DA 89     	ld a,(Switch)
1127  8ABF EE 01        	xor 1
1128  8AC1 32 DA 89     	ld (Switch),a
1129  8AC4
1130  8AC4 2A D2 89     	ld hl,(Album_de_pintado)
1131  8AC7 ED 5B D4 89  	ld de,(Album_de_borrado)
1132  8ACB EB           	ex de,hl
1133  8ACC 22 D2 89     	ld (Album_de_pintado),hl
1134  8ACF 22 DD 89     	ld (Scanlines_album_SP),hl
1135  8AD2
1136  8AD2 ED 53 D4 89  	ld (Album_de_borrado),de
1137  8AD6
1138  8AD6 C9           	ret
1139  8AD7
1140  8AD7              ; ------------------------------------
1141  8AD7              ;
1142  8AD7              ; 31/04/24
1143  8AD7
1144  8AD7 2A E8 89     Extrae_numero_aleatorio_y_avanza ld hl,(RND_SP)
1145  8ADA 7E           	ld a,(hl)
1146  8ADB 23           	inc hl
1147  8ADC 22 E8 89     	ld (RND_SP),hl
1148  8ADF C9           	ret
1149  8AE0
1150  8AE0              ; ------------------------------------
1151  8AE0              ;
1152  8AE0              ; 18/03/24
1153  8AE0
1154  8AE0              Borra_diferencia
1155  8AE0
1156  8AE0 ED 4B DD 89  	ld bc,(Scanlines_album_SP)
1157  8AE4
1158  8AE4 3A DA 89     	ld a,(Switch)
1159  8AE7 A7           	and a
1160  8AE8 28 08        	jr z,2F
1161  8AEA
1162  8AEA 2A D8 89     	ld hl,(Techo_Scanlines_album_2)
1163  8AED 11 D8 89     	ld de,Techo_Scanlines_album_2
1164  8AF0 18 06        	jr 3F
1165  8AF2
1166  8AF2 2A D6 89     2 ld hl,(Techo_Scanlines_album)
1167  8AF5 11 D6 89     	ld de,Techo_Scanlines_album
1168  8AF8
1169  8AF8              ; Diferencia.
1170  8AF8
1171  8AF8 ED 42        3 sbc hl,bc
1172  8AFA
1173  8AFA C8           	ret z
1174  8AFB D8           	ret c
1175  8AFC
1176  8AFC              ; Nuevo techo, (más bajo que el anterior).
1177  8AFC              ; Fijamos nuevo techo y borramos bytes sobrantes.
1178  8AFC
1179  8AFC EB           	ex de,hl
1180  8AFD
1181  8AFD 71           	ld (hl),c
1182  8AFE 2C           	inc l
1183  8AFF 70           	ld (hl),b
1184  8B00
1185  8B00 AF           	xor a
1186  8B01 43           	ld b,e
1187  8B02
1188  8B02 2A DD 89     	ld hl,(Scanlines_album_SP)
1189  8B05
1190  8B05 77           1 ld (hl),a
1191  8B06 2C           	inc l
1192  8B07 10 FC        	djnz 1B
1193  8B09
1194  8B09              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1195  8B09
1196  8B09 21 E3 89     	ld hl,Ctrl_3
1197  8B0C CB DE        	set 3,(hl)
1198  8B0E
1199  8B0E C9           	ret
1200  8B0F
1201  8B0F              ; --------------------------------------------------------------------------------------------------------------
1202  8B0F              ;
1203  8B0F              ;	26/3/24
1204  8B0F
1205  8B0F              Recauda_informacion_de_entidad_en_curso
1206  8B0F
1207  8B0F              ; Almacena la Coordenada Y de la entidad en curso.
1208  8B0F
1209  8B0F              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1210  8B0F
1211  8B0F 3A 89 89     	ld a,(Coordenada_y)
1212  8B12 2A DF 89     	ld hl,(India_SP)
1213  8B15 77           	ld (hl),a
1214  8B16 2C           	inc l
1215  8B17
1216  8B17              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1217  8B17
1218  8B17 ED 5B DD 89  	ld de,(Scanlines_album_SP)
1219  8B1B
1220  8B1B 73           	ld (hl),e
1221  8B1C 2C           	inc l
1222  8B1D 72           	ld (hl),d
1223  8B1E 2C           	inc l
1224  8B1F
1225  8B1F 22 DF 89     	ld (India_SP),hl
1226  8B22
1227  8B22 C9           	ret
1228  8B23
1229  8B23              ; --------------------------------------------------------------------------------------------------------------
1230  8B23              ;
1231  8B23              ;	27/03/24
1232  8B23              ;
1233  8B23
1234  8B23              Inicializa_India_y_limpia_Tabla_de_impresion
1235  8B23
1236  8B23 2A DF 89     	ld hl,(India_SP)
1237  8B26 01 7B 86     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1238  8B29
1239  8B29 79           	ld a,c
1240  8B2A 95           	sub l
1241  8B2B 28 06        	jr z,2F
1242  8B2D 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1243  8B2E              ;														; _ y pasamos a inicializar (India_SP).
1244  8B2E AF           	xor a
1245  8B2F
1246  8B2F 77           1 ld (hl),a
1247  8B30 2C           	inc l
1248  8B31 10 FC        	djnz 1B												; Limpia Tabla.
1249  8B33
1250  8B33 21 63 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1251  8B36 22 DF 89     	ld (India_SP),hl
1252  8B39
1253  8B39 C9           	ret
1254  8B3A
1255  8B3A              ; --------------------------------------------------------------------------------------------------------------
1256  8B3A              ;
1257  8B3A              ;	31/3/24
1258  8B3A
1259  8B3A              Ordena_tabla_de_impresion
1260  8B3A
1261  8B3A              ; 5794 T/states.
1262  8B3A              ; 6278 T/states.
1263  8B3A              ; 5310 T/states.
1264  8B3A
1265  8B3A              ; Inicializamos punteros (India_SP) e (India_2_SP).
1266  8B3A              ; Inicializamos contador de comparaciones, [C].
1267  8B3A              ; Cargamos los registros A y B para efectuar comparación.
1268  8B3A
1269  8B3A FD 2E 00     	ld iyl,0
1270  8B3D
1271  8B3D 3A C8 89     	ld a,(Entidades_en_curso)
1272  8B40 FE 04        	cp 4 	;	4
1273  8B42 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1274  8B43
1275  8B43 3D           	dec a
1276  8B44 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1277  8B45 51           	ld d,c 										; Copia de respaldo.
1278  8B46
1279  8B46 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1280  8B47
1281  8B47 21 66 86     	ld hl,Tabla_de_pintado+3
1282  8B4A 46           	ld b,(hl)
1283  8B4B 22 E1 89     	ld (India_2_SP),hl
1284  8B4E
1285  8B4E B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1286  8B4F DC 77 8B     	call c, Avanza_India_2_SP
1287  8B52 CC 77 8B     	call z, Avanza_India_2_SP
1288  8B55
1289  8B55 FD 2D        	dec iyl
1290  8B57 28 18        	jr z,2F
1291  8B59
1292  8B59
1293  8B59              ; --------------------------------------------------------------------------------------------------------------
1294  8B59              ;
1295  8B59              ;	7/4/24
1296  8B59
1297  8B59              Trueque
1298  8B59
1299  8B59              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1300  8B59              ;  			A contiene en nº de fila de (India_SP).
1301  8B59              ;			HL contiene (India_2_SP).
1302  8B59
1303  8B59 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1304  8B5A E5           	push hl										; Preservo (India_2_SP).
1305  8B5B
1306  8B5B ED 5B DF 89  	ld de,(India_SP)
1307  8B5F EB           	ex de,hl
1308  8B60 70           	ld (hl),b
1309  8B61 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1310  8B62
1311  8B62 CD A3 8B     	call Intercambia_1_byte
1312  8B65 CD A3 8B     	call Intercambia_1_byte
1313  8B68
1314  8B68
1315  8B68              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1316  8B68              ; Recuperamos (India_2_SP) en HL.
1317  8B68
1318  8B68 2A DF 89     	ld hl,(India_SP)
1319  8B6B 7E           	ld a,(hl)
1320  8B6C
1321  8B6C E1           	pop hl
1322  8B6D D1           	pop de
1323  8B6E
1324  8B6E              ; --------------------------------------------------------------------------------------------------------------
1325  8B6E
1326  8B6E CD 77 8B     	call Avanza_India_2_SP
1327  8B71
1328  8B71 14           2 inc d
1329  8B72 15           	dec d
1330  8B73 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1331  8B74 18 D8        	jr 1B
1332  8B76
1333  8B76 C9           	ret
1334  8B77
1335  8B77              ; ----- ----- ----- ----- -----
1336  8B77
1337  8B77              Avanza_India_2_SP
1338  8B77
1339  8B77 0D           	dec c
1340  8B78 28 0A        	jr z,Avanza_punteros_indios
1341  8B7A
1342  8B7A FD 2C        	inc iyl
1343  8B7C
1344  8B7C 2C           	inc l
1345  8B7D 2C           	inc l
1346  8B7E 2C           	inc l
1347  8B7F
1348  8B7F 46           	ld b,(hl)
1349  8B80 22 E1 89     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1350  8B83
1351  8B83 C9           	ret
1352  8B84
1353  8B84              ; ----- ----- ----- ----- -----
1354  8B84
1355  8B84              Avanza_punteros_indios
1356  8B84
1357  8B84 15           	dec d
1358  8B85 28 15        	jr z,Prepara_salida
1359  8B87
1360  8B87 4A           	ld c,d
1361  8B88
1362  8B88 2A DF 89     	ld hl,(India_SP)
1363  8B8B 2C           	inc l
1364  8B8C 2C           	inc l
1365  8B8D 2C           	inc l
1366  8B8E 7E           	ld a,(hl)
1367  8B8F 22 DF 89     	ld (India_SP),hl
1368  8B92
1369  8B92 2C           	inc l
1370  8B93 2C           	inc l
1371  8B94 2C           	inc l
1372  8B95 46           	ld b,(hl)
1373  8B96 22 E1 89     	ld (India_2_SP),hl
1374  8B99
1375  8B99 FD 2C        	inc iyl
1376  8B9B
1377  8B9B C9           	ret
1378  8B9C
1379  8B9C              Prepara_salida
1380  8B9C
1381  8B9C 21 63 86     	ld hl,Tabla_de_pintado
1382  8B9F 22 DF 89     	ld (India_SP),hl
1383  8BA2 C9           	ret
1384  8BA3
1385  8BA3
1386  8BA3 2C           Intercambia_1_byte inc l
1387  8BA4 1C           	inc e
1388  8BA5 46           	ld b,(hl)
1389  8BA6 1A           	ld a,(de)
1390  8BA7 EB           	ex de,hl
1391  8BA8 70           	ld (hl),b
1392  8BA9 12           	ld (de),a									; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1393  8BAA C9           	ret
1394  8BAB
1395  8BAB              ; -----------------------------------------------------------------------------------
1396  8BAB              ;
1397  8BAB              ;	20/01/24
1398  8BAB              ;
1399  8BAB              ;
1400  8BAB
1401  8BAB              Construye_movimientos_masticados_entidad
1402  8BAB
1403  8BAB 2A 9A 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1404  8BAE E5           	push hl
1405  8BAF CD F2 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1406  8BB2              ;															; _ el (Contador_de_mov_masticados).
1407  8BB2 CD 7F 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1408  8BB5              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1409  8BB5 CD 16 95     	call Recompone_posicion_inicio
1410  8BB8
1411  8BB8 CD 3C 92     1 call Draw
1412  8BBB CD D7 8B     	call Guarda_movimiento_masticado
1413  8BBE
1414  8BBE CD 90 98     	call Movimiento
1415  8BC1
1416  8BC1 3A E3 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1417  8BC4 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1418  8BC6 28 F0        	jr z,1B
1419  8BC8
1420  8BC8              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1421  8BC8              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1422  8BC8
1423  8BC8 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1424  8BC9 22 9A 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1425  8BCC
1426  8BCC              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1427  8BCC
1428  8BCC CD F4 99     	call Situa_en_contador_general_de_mov_masticados
1429  8BCF
1430  8BCF              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1431  8BCF              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1432  8BCF
1433  8BCF ED 4B 9C 89  	ld bc,(Contador_de_mov_masticados)
1434  8BD3
1435  8BD3 71           	ld (hl),c
1436  8BD4 23           	inc hl
1437  8BD5 70           	ld (hl),b
1438  8BD6
1439  8BD6 C9           	ret
1440  8BD7
1441  8BD7              ; -----------------------------------------------------------------------------------
1442  8BD7              ;
1443  8BD7              ;	28/12/23
1444  8BD7              ;
1445  8BD7              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1446  8BD7              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1447  8BD7
1448  8BD7              Guarda_movimiento_masticado
1449  8BD7
1450  8BD7 ED 73 CE 89  	ld (Stack),sp
1451  8BDB ED 7B 9A 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1452  8BDF
1453  8BDF              ;	push hl
1454  8BDF DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1455  8BE1 FD E5            push iy 												; Pushea Puntero_objeto.
1456  8BE3
1457  8BE3 ED 7B CE 89      ld sp,(Stack)
1458  8BE7
1459  8BE7 2A 9C 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1460  8BEA 23           	inc hl
1461  8BEB 22 9C 89     	ld (Contador_de_mov_masticados),hl
1462  8BEE
1463  8BEE CD F2 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1464  8BF1              ;															; _ el (Contador_de_mov_masticados).
1465  8BF1 C9               ret
1466  8BF2
1467  8BF2              ; --------------------------------------------------------------------------------------------------------------
1468  8BF2              ;
1469  8BF2              ;	12/1/24
1470  8BF2              ;
1471  8BF2              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1472  8BF2
1473  8BF2              Actualiza_Puntero_de_almacen_de_mov_masticados
1474  8BF2
1475  8BF2 2A 9A 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1476  8BF5 01 04 00     	ld bc,4
1477  8BF8 A7           	and a
1478  8BF9 ED 4A        	adc hl,bc
1479  8BFB 22 9A 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1480  8BFE C9           	ret
1481  8BFF
1482  8BFF              ; --------------------------------------------------------------------------------------------------------------
1483  8BFF              ;
1484  8BFF              ;	24/03/24
1485  8BFF              ;
1486  8BFF              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1487  8BFF              ;
1488  8BFF              ;	IX contiene el puntero de impresión.
1489  8BFF              ;	DE contiene (Puntero_objeto).
1490  8BFF
1491  8BFF
1492  8BFF ED 73 CE 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1493  8C03 ED 7B 9A 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1494  8C07
1495  8C07 D1           	pop de 															; DE contiene Puntero_objeto
1496  8C08 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1497  8C0A
1498  8C0A ED 73 9A 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1499  8C0E ED 7B CE 89  	ld sp,(Stack)
1500  8C12
1501  8C12 7B           	ld a,e
1502  8C13 82           	add d															; Comprueba si ya no hay datos en el almacén.
1503  8C14
1504  8C14 CC 76 AB     	call z,Reinicia_entidad_maliciosa
1505  8C17
1506  8C17 C9           	ret
1507  8C18
1508  8C18              ; --------------------------------------------------------------------------------------------------------------
1509  8C18              ;
1510  8C18              ;	28/12/23
1511  8C18              ;
1512  8C18              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1513  8C18              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1514  8C18
1515  8C18              Guarda_foto_entidad_a_pintar
1516  8C18
1517  8C18 3A 9E 89     	ld a,(Ctrl_0)
1518  8C1B CB 77        	bit 6,a
1519  8C1D 28 04        	jr z,5F
1520  8C1F
1521  8C1F              ;	Guarda la foto de Amadeus.
1522  8C1F
1523  8C1F              ;	call Draw
1524  8C1F              ;	call Guarda_movimiento_masticado	;! Provisional
1525  8C1F CD F6 AC     	call Genera_datos_de_impresion
1526  8C22 C9           	ret
1527  8C23
1528  8C23              ; ENTIDADES!
1529  8C23              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1530  8C23
1531  8C23 3A E3 89     5 ld a,(Ctrl_3)
1532  8C26 CB 5F        	bit 3,a
1533  8C28 28 01        	jr z,1F
1534  8C2A
1535  8C2A              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1536  8C2A
1537  8C2A              4
1538  8C2A              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1539  8C2A C9           	ret
1540  8C2B
1541  8C2B              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1542  8C2B
1543  8C2B 3A E3 89     1 ld a,(Ctrl_3)
1544  8C2E CB 57        	bit 2,a
1545  8C30 20 10        	jr nz,6F
1546  8C32
1547  8C32              ; Entidad guía o fantasma ???
1548  8C32
1549  8C32 3A A3 89     	ld a,(Ctrl_2)
1550  8C35 CB 6F        	bit 5,a
1551  8C37 20 10        	jr nz,3F
1552  8C39
1553  8C39              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1554  8C39
1555  8C39 18 EF        	jr 4B
1556  8C3B
1557  8C3B              ; ENTIDAD_GUÍA:
1558  8C3B              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1559  8C3B              ; _guardando "movimientos_masticados".
1560  8C3B
1561  8C3B 3A E3 89     2 ld a,(Ctrl_3)
1562  8C3E CB 57        	bit 2,a
1563  8C40 28 07        	jr z,3F
1564  8C42
1565  8C42              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1566  8C42              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1567  8C42
1568  8C42 CB 97        6 res 2,a
1569  8C44 CB DF        	set 3,a
1570  8C46 32 E3 89     	ld (Ctrl_3),a
1571  8C49
1572  8C49
1573  8C49              ;	Esto sólo lo ejecuta una entidad guía.
1574  8C49
1575  8C49 CD 3C 92     3 	call Draw
1576  8C4C CD D7 8B     	call Guarda_movimiento_masticado
1577  8C4F CD F6 AC     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1578  8C52
1579  8C52              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1580  8C52              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1581  8C52
1582  8C52              ;	call Convierte_guia_en_fantasma
1583  8C52 C9           	ret
1584  8C53
1585  8C53              ; ---------------------------------------------------------------------------------------------------------------------
1586  8C53              ;
1587  8C53              ;	13/03/24
1588  8C53              ;
1589  8C53
1590  8C53              Inicia_albumes_de_lineas
1591  8C53
1592  8C53 21 00 80     	ld hl,Scanlines_album
1593  8C56 22 D2 89     	ld (Album_de_pintado),hl
1594  8C59 22 DD 89     	ld (Scanlines_album_SP),hl
1595  8C5C
1596  8C5C 21 00 90     	ld hl,Scanlines_album_2
1597  8C5F 22 D4 89     	ld (Album_de_borrado),hl
1598  8C62
1599  8C62 C9           	ret
1600  8C63
1601  8C63
1602  8C63
1603  8C63              ; ---------------------------------------------------------------------------------------------------------------------
1604  8C63              ;
1605  8C63              ; 8/1/23
1606  8C63              ;
1607  8C63              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1608  8C63              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1609  8C63              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1610  8C63
1611  8C63              ; Destruye HL y DE !!!!!
1612  8C63
1613  8C63              Inicia_punteros_de_cajas
1614  8C63
1615  8C63 21 FF 86     	ld hl,Indice_de_cajas_de_entidades
1616  8C66 CD 79 8C         call Extrae_address
1617  8C69 22 C0 89         ld (Puntero_store_caja),hl
1618  8C6C 21 01 87     	ld hl,Indice_de_cajas_de_entidades+2
1619  8C6F 22 C4 89     	ld (Indice_restore_caja),hl
1620  8C72 CD 79 8C     	call Extrae_address
1621  8C75 22 C2 89     	ld (Puntero_restore_caja),hl
1622  8C78 C9               ret
1623  8C79
1624  8C79              ; *************************************************************************************************************************************************************
1625  8C79              ;
1626  8C79              ; 8/1/23
1627  8C79              ;
1628  8C79              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1629  8C79
1630  8C79              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1631  8C79              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1632  8C79              ;	ret
1633  8C79              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1634  8C79              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1635  8C79              ;	ret
1636  8C79
1637  8C79              ; -------------------------------------------------------------------------------------------------------------
1638  8C79              ;
1639  8C79              ; 21/9/23
1640  8C79              ;
1641  8C79
1642  8C79              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1643  8C79
1644  8C79              ;;Limpia_album_Amadeus
1645  8C79              ;
1646  8C79              ;;	ld hl,Scanlines_album_Amadeus
1647  8C79              ;;	ld a,(hl)
1648  8C79              ;;	and a
1649  8C79              ;;	ret z
1650  8C79
1651  8C79              ;;	ld hl,Scanlines_album_Amadeus;
1652  8C79              ;;	ld de,Scanlines_album_Amadeus+1
1653  8C79              ;;	ld bc,11
1654  8C79              ;;	xor a
1655  8C79              ;;	ld (hl),a
1656  8C79              ;;	ldir
1657  8C79
1658  8C79              ;;	ld hl,Scanlines_album_Amadeus
1659  8C79              ;;	ld (End_Snapshot_Amadeus),hl
1660  8C79
1661  8C79              ;;	ret
1662  8C79
1663  8C79              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1664  8C79              ;	ld de,Variables_de_borrado+1
1665  8C79              ;	ld bc,5
1666  8C79              ;	xor a
1667  8C79              ;	ld (hl),a
1668  8C79              ;	ldir
1669  8C79              ;	ret
1670  8C79
1671  8C79              ; *************************************************************************************************************************************************************
1672  8C79              ;
1673  8C79              ; 20/10/22
1674  8C79              ;
1675  8C79              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1676  8C79              ;
1677  8C79              ; Destruye el puntero y DE !!!!!
1678  8C79
1679  8C79 5E           Extrae_address ld e,(hl)
1680  8C7A 23           	inc hl
1681  8C7B 56           	ld d,(hl)
1682  8C7C 2B           	dec hl
1683  8C7D EB           	ex de,hl
1684  8C7E C9           	ret
1685  8C7F
1686  8C7F              ; *************************************************************************************************************************************************************
1687  8C7F              ;
1688  8C7F              ;	20/1/24
1689  8C7F              ;
1690  8C7F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1691  8C7F              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1692  8C7F              ;
1693  8C7F              ;   Destruye HL y BC !!!!!,
1694  8C7F              ;
1695  8C7F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1696  8C7F              ;					"0" ..... Izquierda.
1697  8C7F
1698  8C7F              Inicia_Puntero_objeto
1699  8C7F
1700  8C7F 3A 96 89     	ld a,(Cuad_objeto)
1701  8C82 E6 01        	and 1
1702  8C84 F5           	push af
1703  8C85 CC A1 8C     	call z,Inicia_puntero_objeto_izq
1704  8C88 F1           	pop af
1705  8C89 C8           	ret z
1706  8C8A CD 8E 8C     	call Inicia_puntero_objeto_der
1707  8C8D C9           	ret
1708  8C8E
1709  8C8E              ; Arrancamos desde la parte izquierda de la pantalla.
1710  8C8E              ; Iniciamos (Indice_Sprite_der).
1711  8C8E
1712  8C8E 2A 8C 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1713  8C91 22 90 89     	ld (Puntero_DESPLZ_der),hl
1714  8C94 CD 79 8C     	call Extrae_address
1715  8C97 22 86 89     	ld (Puntero_objeto),hl
1716  8C9A
1717  8C9A 2A 8E 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1718  8C9D 22 92 89     	ld (Puntero_DESPLZ_izq),hl
1719  8CA0 C9           	ret
1720  8CA1
1721  8CA1              ; Arrancamos desde la parte derecha de la pantalla.
1722  8CA1              ; Iniciamos (Indice_Sprite_izq).
1723  8CA1
1724  8CA1 2A 8E 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1725  8CA4 22 92 89     	ld (Puntero_DESPLZ_izq),hl
1726  8CA7 CD 79 8C     	call Extrae_address
1727  8CAA 22 86 89     	ld (Puntero_objeto),hl
1728  8CAD
1729  8CAD 2A 8C 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1730  8CB0 22 90 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1731  8CB3 C9           	ret
1732  8CB4
1733  8CB4              ; **************************************************************************************************
1734  8CB4              ;
1735  8CB4              ;	31/01/24
1736  8CB4              ;
1737  8CB4              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1738  8CB4
1739  8CB4              Restore_entidad
1740  8CB4
1741  8CB4 2A C0 89     	ld hl,(Puntero_store_caja)
1742  8CB7 11 81 89     	ld de,Bandeja_DRAW
1743  8CBA 7E           	ld a,(hl)
1744  8CBB 12           	ld (de),a
1745  8CBC 23           	inc hl 											; (Tipo).
1746  8CBD
1747  8CBD 11 88 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1748  8CC0 01 02 00     	ld bc,2
1749  8CC3 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1750  8CC5
1751  8CC5 13           	inc de
1752  8CC6 7E           	ld a,(hl)
1753  8CC7 12           	ld (de),a 										; Transferimos (Attr).
1754  8CC8 23           	inc hl
1755  8CC9
1756  8CC9 11 97 89     	ld de,Impacto
1757  8CCC
1758  8CCC 7E           	ld a,(hl)
1759  8CCD 12           	ld (de),a 										; Transferimos (Impacto).
1760  8CCE 23           	inc hl
1761  8CCF
1762  8CCF 13           	inc de
1763  8CD0 01 07 00     	ld bc,7
1764  8CD3 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1765  8CD5              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1766  8CD5 11 A3 89     	ld de,Ctrl_2
1767  8CD8
1768  8CD8 7E           	ld a,(hl)
1769  8CD9 12           	ld (de),a 										; Transferimos (Ctrl_2).
1770  8CDA
1771  8CDA C9           	ret
1772  8CDB
1773  8CDB              ; **************************************************************************************************
1774  8CDB              ;
1775  8CDB              ;	08/05/23
1776  8CDB              ;
1777  8CDB              ;	Incrementamos los dos punteros de entidades. (+1).
1778  8CDB
1779  8CDB              Incrementa_punteros_de_cajas
1780  8CDB
1781  8CDB 2A C2 89     	ld hl,(Puntero_restore_caja)
1782  8CDE 22 C0 89     	ld (Puntero_store_caja),hl
1783  8CE1 2A C4 89     	ld hl,(Indice_restore_caja)
1784  8CE4 23           	inc hl
1785  8CE5 23           	inc hl
1786  8CE6 22 C4 89     	ld (Indice_restore_caja),hl
1787  8CE9 CD 79 8C         call Extrae_address
1788  8CEC 22 C2 89         ld (Puntero_restore_caja),hl
1789  8CEF C9               ret
1790  8CF0
1791  8CF0              ; **************************************************************************************************
1792  8CF0              ;
1793  8CF0              ;	21/12/23
1794  8CF0              ;
1795  8CF0              ;	Restore_Amadeus
1796  8CF0              ;
1797  8CF0              ;	Cargamos en DRAW los parámetros de Amadeus.
1798  8CF0              ;
1799  8CF0
1800  8CF0              ;Restore_Amadeus	push hl
1801  8CF0              ;	push de
1802  8CF0              ; 	push bc
1803  8CF0              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1804  8CF0              ;	ld de,Bandeja_DRAW
1805  8CF0              ;	ld bc,42
1806  8CF0              ;	ldir
1807  8CF0              ;	pop bc
1808  8CF0              ;	pop de
1809  8CF0              ;	pop hl
1810  8CF0              ;	ret
1811  8CF0
1812  8CF0              ; *************************************************************************************************************************************************************
1813  8CF0              ;
1814  8CF0              ;	21/12/23
1815  8CF0              ;
1816  8CF0              ;	Store_Amadeus
1817  8CF0              ;
1818  8CF0              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1819  8CF0              ;
1820  8CF0              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1821  8CF0              ;
1822  8CF0              ;	DESTRUYE: HL y BC y DE.
1823  8CF0
1824  8CF0              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1825  8CF0              ;	ld bc,42
1826  8CF0              ;	ldir
1827  8CF0              ;	ret
1828  8CF0
1829  8CF0              ; -----------------------------------------------------------
1830  8CF0              ;
1831  8CF0              ;	21/12/23
1832  8CF0              ;
1833  8CF0              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1834  8CF0              ;
1835  8CF0              ;	Destruye: HL,BC,DE,A
1836  8CF0
1837  8CF0              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1838  8CF0              ;	ld bc,41
1839  8CF0              ;	xor a
1840  8CF0              ;	ld (hl),a;
1841  8CF0              ;	ld de,Bandeja_DRAW+1
1842  8CF0              ;	ldir
1843  8CF0              ;	ret
1844  8CF0
1845  8CF0              ; -----------------------------------------------------------
1846  8CF0
1847  8CF0              ; Teclado.
1848  8CF0
1849  8CF0 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1850  8CF2 DB FE        	in a,($fe)
1851  8CF4 E6 01        	and $01
1852  8CF6 28 02        	jr z,1f
1853  8CF8 18 F6        	jr Pulsa_ENTER
1854  8CFA C9           1 ret
1855  8CFB
1856  8CFB              ; **************************************************************************************************
1857  8CFB              ;
1858  8CFB              ; Temporización.
1859  8CFB
1860  8CFB              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1861  8CFB              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1862  8CFB              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1863  8CFB              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1864  8CFB
1865  8CFB              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1866  8CFB              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1867  8CFB              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1868  8CFB
1869  8CFB              ; A partir de $4f61 no hace falta DELAY.
1870  8CFB
1871  8CFB              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1872  8CFB
1873  8CFB 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1874  8CFE 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1875  8CFF 78           	LD A,B
1876  8D00 A7           	AND A
1877  8D01 20 FB        	JR NZ,wait
1878  8D03 C9           	RET
1879  8D04
1880  8D04              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1881  8D04              ;
1882  8D04              ;	5/3/23
1883  8D04              ;
1884  8D04              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1885  8D04
1886  8D04              ;Movimiento_Amadeus
1887  8D04
1888  8D04              ; Disparo.
1889  8D04
1890  8D04              ;	ld a,(Disparo_Amadeus)
1891  8D04              ;	and a
1892  8D04              ;	jr nz,1F
1893  8D04              ;	jr 2F
1894  8D04
1895  8D04              ;1 ld a,$f7													; "5" para disparar.
1896  8D04              ;	in a,($fe)
1897  8D04              ;	and $10
1898  8D04
1899  8D04              ;	push af
1900  8D04              ;	call z,Genera_disparo
1901  8D04              ;	pop af
1902  8D04              ;	jr nz,2F
1903  8D04
1904  8D04              ;	ld a,(Disparo_Amadeus)
1905  8D04              ;	xor 1
1906  8D04              ;	ld (Disparo_Amadeus),a
1907  8D04              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1908  8D04              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1909  8D04              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1910  8D04              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1911  8D04
1912  8D04              ;	ld a,$f7
1913  8D04              ;	in a,($fe)
1914  8D04              ;	and $01
1915  8D04              ;	ret z
1916  8D04
1917  8D04              ;	ld a,$f7
1918  8D04              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1919  8D04              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1920  8D04              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1921  8D04              ;	ret
1922  8D04
1923  8D04              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1924  8D04              ;
1925  8D04              ;	Rutina provisional para que los malotes cagen balas.
1926  8D04
1927  8D04              ;Detecta_disparo_entidad
1928  8D04
1929  8D04              ;	ld a,(Disparo_entidad)
1930  8D04              ;	and a
1931  8D04              ;	ret z
1932  8D04
1933  8D04              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1934  8D04
1935  8D04              ;	ld a,$7f				; Detecta SPACE.
1936  8D04              ;	in a,($fe)
1937  8D04              ;	and 1
1938  8D04              ;	ret nz
1939  8D04
1940  8D04              ;	call Genera_disparo
1941  8D04              ;	ret
1942  8D04
1943  8D04              ; ----------------------------------------------------------------------
1944  8D04              ;
1945  8D04              ;	8/9/23
1946  8D04
1947  8D04              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1948  8D04              ; 	dec hl
1949  8D04              ;	ld a,(hl)
1950  8D04              ;	and a
1951  8D04              ;	ret z										; Salimos si es álbum está vacío.
1952  8D04
1953  8D04              ;	ld de,Variables_de_borrado+5
1954  8D04              ;	ld bc,6
1955  8D04              ;	lddr
1956  8D04              ;	ret
1957  8D04
1958  8D04              ; ----------------------------------------------------------------------
1959  8D04              ;
1960  8D04              ;	9/9/23
1961  8D04
1962  8D04              ;Repone_datos_de_borrado_Amadeus
1963  8D04
1964  8D04              ;	ld hl,Variables_de_borrado
1965  8D04              ;	ld de,Scanlines_album_Amadeus
1966  8D04              ;	ld bc,6
1967  8D04              ;	ldir
1968  8D04
1969  8D04              ;	ex de,hl
1970  8D04              ;	ld (End_Snapshot_Amadeus),hl
1971  8D04
1972  8D04              ;	ret
1973  8D04
1974  8D04              ; ----------------------------------------------------------------------
1975  8D04              ;
1976  8D04              ;	27/10/23
1977  8D04              ;
1978  8D04
1979  8D04              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1980  8D04              ;	_ Scanlines_album correspondiente.
1981  8D04
1982  8D04              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1983  8D04              ;	_ durante el proceso de escritura.
1984  8D04
1985  8D04              ;Repone_datos_de_borrado
1986  8D04
1987  8D04              ;	ld de,(Scanlines_album_SP)
1988  8D04              ;	ld hl,Variables_de_borrado
1989  8D04              ;	ld bc,6
1990  8D04              ;	ldir
1991  8D04
1992  8D04              ;	ex de,hl
1993  8D04              ;	ld (Scanlines_album_SP),hl
1994  8D04
1995  8D04              ;	ret
1996  8D04
1997  8D04              ; --------------------------------------------------------------------------------------
1998  8D04
1999  8D04              ;Pinta_Amadeus
2000  8D04
2001  8D04              ;   	call Calcula_malotes_Amadeus
2002  8D04              ;	call Extrae_foto_Amadeus
2003  8D04              ;	call Limpia_album_Amadeus
2004  8D04
2005  8D04              ;	ret
2006  8D04
2007  8D04              ; ---------------------------------------------------------------
2008  8D04
2009  8D04              	org $aa7f
2010  AA7F
2011  AA7F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ AA7F              ; ******************************************************************************************************************************************************************************************
   2+ AA7F              ;
   3+ AA7F              ;   21/04/24
   4+ AA7F              ;
   5+ AA7F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ AA7F              ;   (XOR) bit a bit.
   7+ AA7F              ;
   8+ AA7F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ AA7F
  10+ AA7F              Derivando_RND
  11+ AA7F
  12+ AA7F 21 5C 86         ld hl,Numeros_aleatorios
  13+ AA82 ED 5F            ld a,r      			            ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  14+ AA84 C5           3 push bc
  15+ AA85
  16+ AA85              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ AA85 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ AA88              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ AA88
  20+ AA88 A7           6 and a                                 ; Carry a "0".
  21+ AA89 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ AA8B 30 02            jr nc,1F
  23+ AA8D
  24+ AA8D CB C1            set 0,c
  25+ AA8F
  26+ AA8F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ AA90 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ AA92 5F               ld e,a
  29+ AA93
  30+ AA93 7A               ld a,d
  31+ AA94 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ AA96 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ AA98
  34+ AA98 CB 3F            srl a
  35+ AA9A
  36+ AA9A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ AA9B
  38+ AA9B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ AA9C 28 04            jr z,4F
  40+ AA9E
  41+ AA9E CB FF            set 7,a
  42+ AAA0 18 02            jr 5F
  43+ AAA2
  44+ AAA2 CB BF        4 res 7,a
  45+ AAA4
  46+ AAA4 CB 21        5 sla c
  47+ AAA6 10 E0            djnz 6B
  48+ AAA8
  49+ AAA8 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ AAA9
  51+ AAA9 77               ld (hl),a
  52+ AAAA 23               inc hl
  53+ AAAB C1               pop bc
  54+ AAAC 10 D6            djnz 3B
  55+ AAAE
  56+ AAAE C9               ret
  57+ AAAF
  58+ AAAF
  59+ AAAF
# file closed: RND_Derivando.asm
2012  AAAF              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ AAAF              ;---------------------------------------------------------------------------------------------------------------
   2+ AAAF              ;
   3+ AAAF              ;   8/3/24
   4+ AAAF              ;
   5+ AAAF              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ AAAF              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ AAAF              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ AAAF              ;	_ de la 1ª entidad del Nivel.
   9+ AAAF              ;
  10+ AAAF              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ AAAF
  12+ AAAF              ;	MODIFICA: HL,DE y A.
  13+ AAAF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ AAAF
  15+ AAAF              Inicializa_Nivel
  16+ AAAF
  17+ AAAF 2A ED 89     	ld hl,(Puntero_indice_NIVELES)
  18+ AAB2 CD 79 8C     	call Extrae_address
  19+ AAB5 7E           	ld a,(hl)
  20+ AAB6 32 C6 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ AAB9 23           	inc hl
  22+ AABA CD C7 AA     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ AABD 22 EF 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ AAC0 CD D0 AA     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ AAC3
  26+ AAC3 CD E1 AA     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ AAC6 C9           	ret
  28+ AAC7
  29+ AAC7              ; ----------------------
  30+ AAC7
  31+ AAC7 11 A5 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ AACA 01 04 00     	ld bc,4
  33+ AACD ED B0        	ldir
  34+ AACF C9           	ret
  35+ AAD0
  36+ AAD0 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ AAD1 CD 04 AC         call Calcula_salto_en_BC
  38+ AAD4 21 7B 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ AAD7 A7               and a
  40+ AAD8 ED 4A            adc hl,bc
  41+ AADA CD 79 8C         call Extrae_address
  42+ AADD 22 B1 89         ld (Puntero_indice_mov),hl
  43+ AAE0 C9               ret
  44+ AAE1
  45+ AAE1 3A 81 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ AAE4 CD 04 AC     	call Calcula_salto_en_BC
  47+ AAE7 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ AAEA A7               and a
  49+ AAEB ED 4A            adc hl,bc
  50+ AAED CD 79 8C         call Extrae_address
  51+ AAF0 22 9A 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ AAF3 C9           	ret
  53+ AAF4
  54+ AAF4              ;---------------------------------------------------------------------------------------------------------------
  55+ AAF4              ;
  56+ AAF4              ;   5/1/24
  57+ AAF4              ;
  58+ AAF4              ;	Destruye A,BC,HL,DE
  59+ AAF4
  60+ AAF4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ AAF4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ AAF4
  63+ AAF4              Inicia_Entidades
  64+ AAF4
  65+ AAF4              ; Preparamos los punteros de las cajas de entidades:
  66+ AAF4
  67+ AAF4 CD 63 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ AAF7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ AAF7 CD 68 AC     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ AAFA
  71+ AAFA 2A EF 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ AAFD
  73+ AAFD 22 EF 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ AB00
  75+ AB00 CD B2 AB     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ AB03
  77+ AB03 2A EF 89     	ld hl,(Datos_de_nivel)
  78+ AB06
  79+ AB06              ; En este punto:
  80+ AB06              ;
  81+ AB06              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ AB06              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ AB06
  84+ AB06 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ AB07
  86+ AB07 7E           	ld a,(hl)
  87+ AB08 CD 4F AB     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ AB0B
  89+ AB0B CD 16 AC     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ AB0E
  91+ AB0E              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ AB0E
  93+ AB0E CD D4 AB     	call Busca_mov_masticados_segun_tipo
  94+ AB11
  95+ AB11 A7           	and a
  96+ AB12 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ AB14
  98+ AB14              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ AB14
 100+ AB14              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ AB14              ;	_ de este tipo de entidad.
 102+ AB14
 103+ AB14 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
 104+ AB17 CD 01 9A     	call Transfiere_datos_de_contadores
 105+ AB1A
 106+ AB1A 18 06        	jr 4F
 107+ AB1C
 108+ AB1C CD AB 8B     3 call Construye_movimientos_masticados_entidad
 109+ AB1F
 110+ AB1F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ AB1F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ AB1F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ AB1F              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ AB1F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ AB1F
 116+ AB1F CD 92 AB     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ AB22              ;																; _ Mov_masticados ya generados.
 118+ AB22
 119+ AB22 CD FF 8B     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ AB25
 121+ AB25 DD E5        	push ix
 122+ AB27 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ AB28
 124+ AB28 D5           	push de
 125+ AB29 CD A3 AC     	call Genera_coordenadas
 126+ AB2C CD 0F 8B     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 127+ AB2F D1           	pop de
 128+ AB30
 129+ AB30 CD F6 AC     	call Genera_datos_de_impresion
 130+ AB33              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 131+ AB33              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 132+ AB33              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 133+ AB33              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 134+ AB33
 135+ AB33 CD 6E AB     	call Decrementa_Contador_de_mov_masticados
 136+ AB36
 137+ AB36              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 138+ AB36
 139+ AB36 CD 3D AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 140+ AB39 CD 63 AB     	call Limpiamos_bandeja_DRAW
 141+ AB3C CD DB 8C     	call Incrementa_punteros_de_cajas
 142+ AB3F
 143+ AB3F              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 144+ AB3F              ; _ entidad del Nivel.
 145+ AB3F
 146+ AB3F 3A E4 89     	ld a,(Ctrl_4)
 147+ AB42 E6 F0        	and $f0
 148+ AB44 32 E4 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 149+ AB47
 150+ AB47              ; Siguiente entidad del Nivel.
 151+ AB47
 152+ AB47 2A EF 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 153+ AB4A 23           	inc hl 														; _ entidad del Nivel.
 154+ AB4B
 155+ AB4B C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 156+ AB4C
 157+ AB4C 10 AF        	djnz 2B
 158+ AB4E
 159+ AB4E C9           	ret
 160+ AB4F
 161+ AB4F              ; ---------------------------------------------------------------------
 162+ AB4F              ;
 163+ AB4F              ;	10/02/24
 164+ AB4F              ;
 165+ AB4F              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 166+ AB4F              ;
 167+ AB4F              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 168+ AB4F
 169+ AB4F              Definicion_segun_tipo
 170+ AB4F
 171+ AB4F CD 04 AC     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 172+ AB52 21 A2 87     	ld hl,Indice_de_definiciones_de_entidades
 173+ AB55 CD 0C AC     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 174+ AB58 C9           	ret
 175+ AB59
 176+ AB59              ; ---------------------------------------------------------------------
 177+ AB59              ;
 178+ AB59              ;	27/03/24
 179+ AB59
 180+ AB59
 181+ AB59              Store_Restore_cajas
 182+ AB59
 183+ AB59 CD 3D AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 184+ AB5C CD 63 AB     	call Limpiamos_bandeja_DRAW
 185+ AB5F
 186+ AB5F              ; 	Entidad_sospechosa. 20/4/23
 187+ AB5F
 188+ AB5F              ;	ld a,(Impacto)
 189+ AB5F              ;	and a
 190+ AB5F              ;	jr z,1F
 191+ AB5F
 192+ AB5F              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 193+ AB5F              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 194+ AB5F              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 195+ AB5F              ;	adc hl,bc 											; _ "0" más adelante.
 196+ AB5F              ;	ld (Entidad_sospechosa_de_colision),hl
 197+ AB5F
 198+ AB5F
 199+ AB5F              ;1 ld hl,(Puntero_restore_caja)
 200+ AB5F              ;	ld a,(hl)
 201+ AB5F              ;	and a
 202+ AB5F              ;	push af
 203+ AB5F              ;	jr z,2F
 204+ AB5F
 205+ AB5F              ;	di
 206+ AB5F              ;	ld de,Bandeja_DRAW
 207+ AB5F              ;	ld bc,42
 208+ AB5F              ;	ldir
 209+ AB5F              ;	ei
 210+ AB5F
 211+ AB5F CD DB 8C     2 call Incrementa_punteros_de_cajas
 212+ AB62 C9           	ret
 213+ AB63
 214+ AB63              ; ---------------------------------------------------------------------
 215+ AB63              ;
 216+ AB63              ;	26/03/24
 217+ AB63
 218+ AB63 21 81 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 219+ AB66 06 24        	ld b,36
 220+ AB68 AF           	xor a
 221+ AB69 77           1 ld (hl),a
 222+ AB6A 23           	inc hl
 223+ AB6B 10 FC        	djnz 1B
 224+ AB6D C9           	ret
 225+ AB6E
 226+ AB6E              ; ---------------------------------------------------------------------
 227+ AB6E              ;
 228+ AB6E              ;	24/03/24
 229+ AB6E
 230+ AB6E 2A 9C 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 231+ AB71 2B           	dec hl
 232+ AB72 22 9C 89     	ld (Contador_de_mov_masticados),hl
 233+ AB75 C9           	ret
 234+ AB76
 235+ AB76              ; ---------------------------------------------------------------------
 236+ AB76              ;
 237+ AB76              ;	10/2/24
 238+ AB76
 239+ AB76              Reinicia_entidad_maliciosa
 240+ AB76
 241+ AB76              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 242+ AB76
 243+ AB76 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
 244+ AB79 CD 01 9A     	call Transfiere_datos_de_contadores
 245+ AB7C
 246+ AB7C              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 247+ AB7C
 248+ AB7C 3A 81 89     	ld a,(Tipo)
 249+ AB7F CD 4F AB     	call Definicion_segun_tipo
 250+ AB82
 251+ AB82 E5           	push hl
 252+ AB83 DD E1        	pop ix
 253+ AB85
 254+ AB85 DD 6E 0B     	ld l,(ix+11)
 255+ AB88 DD 66 0C     	ld h,(ix+12)
 256+ AB8B
 257+ AB8B 22 9A 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 258+ AB8E
 259+ AB8E CD FF 8B     	call Cargamos_registros_con_mov_masticado
 260+ AB91
 261+ AB91 C9           	ret
 262+ AB92
 263+ AB92              ; ---------------------------------------------------------------------
 264+ AB92              ;
 265+ AB92              ;	22/01/24
 266+ AB92
 267+ AB92 21 E4 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 268+ AB95 CB 46        	bit 0,(hl)
 269+ AB97 20 0D        	jr nz,1F
 270+ AB99 CB 4E        	bit 1,(hl)
 271+ AB9B 20 0C        	jr nz,2F
 272+ AB9D CB 56        	bit 2,(hl)
 273+ AB9F 20 0B        	jr nz,3F
 274+ ABA1 CB 5E        	bit 3,(hl)
 275+ ABA3 20 0A        	jr nz,4F
 276+ ABA5 C9           	ret
 277+ ABA6
 278+ ABA6 CB E6        1 set 4,(hl)
 279+ ABA8 C9           	ret
 280+ ABA9 CB EE        2 set 5,(hl)
 281+ ABAB C9           	ret
 282+ ABAC CB F6        3 set 6,(hl)
 283+ ABAE C9           	ret
 284+ ABAF CB FE        4 set 7,(hl)
 285+ ABB1 C9           	ret
 286+ ABB2
 287+ ABB2              ; ---------------------------------------------------------------------
 288+ ABB2              ;
 289+ ABB2              ;	23/01/24
 290+ ABB2              ;
 291+ ABB2              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 292+ ABB2              ;
 293+ ABB2              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 294+ ABB2              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 295+ ABB2              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 296+ ABB2              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 297+ ABB2
 298+ ABB2              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 299+ ABB2
 300+ ABB2 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 301+ ABB3 3D           	dec a
 302+ ABB4 20 06        	jr nz,1F
 303+ ABB6
 304+ ABB6              ; --- Tipo_1
 305+ ABB6
 306+ ABB6 21 E4 89     	ld hl,Ctrl_4
 307+ ABB9 CB C6        	set 0,(hl)
 308+ ABBB C9           	ret
 309+ ABBC
 310+ ABBC 3D           1 dec a
 311+ ABBD 20 06        	jr nz,2F
 312+ ABBF
 313+ ABBF              ; --- Tipo_2
 314+ ABBF
 315+ ABBF 21 E4 89     	ld hl,Ctrl_4
 316+ ABC2 CB CE        	set 1,(hl)
 317+ ABC4 C9           	ret
 318+ ABC5
 319+ ABC5 3D           2 dec a
 320+ ABC6 20 06        	jr nz,3F
 321+ ABC8
 322+ ABC8              ; --- Tipo_3
 323+ ABC8
 324+ ABC8 21 E4 89     	ld hl,Ctrl_4
 325+ ABCB CB D6        	set 2,(hl)
 326+ ABCD C9           	ret
 327+ ABCE
 328+ ABCE              ; --- Tipo_3
 329+ ABCE
 330+ ABCE 21 E4 89     3 ld hl,Ctrl_4
 331+ ABD1 CB D6        	set 2,(hl)
 332+ ABD3 C9           	ret
 333+ ABD4
 334+ ABD4              ; ---------------------------------------------------------------------
 335+ ABD4              ;
 336+ ABD4              ;	22/01/24
 337+ ABD4
 338+ ABD4 21 E4 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 339+ ABD7 CB 46        	bit 0,(hl)
 340+ ABD9 20 0E        	jr nz,1F
 341+ ABDB
 342+ ABDB CB 4E        	bit 1,(hl)
 343+ ABDD 20 10        	jr nz,2F
 344+ ABDF
 345+ ABDF CB 56        	bit 2,(hl)
 346+ ABE1 20 12        	jr nz,3F
 347+ ABE3
 348+ ABE3 CB 5E        	bit 3,(hl)
 349+ ABE5 20 14        	jr nz,4F
 350+ ABE7 18 19        	jr 6F
 351+ ABE9
 352+ ABE9              ; Entidad_de_Tipo_1.
 353+ ABE9
 354+ ABE9 CB 66        1 bit 4,(hl)
 355+ ABEB 28 15        	jr z,6F
 356+ ABED 18 10        	jr 5F
 357+ ABEF
 358+ ABEF              ; Entidad_de_Tipo_2.
 359+ ABEF
 360+ ABEF CB 6E        2 bit 5,(hl)
 361+ ABF1 28 0F        	jr z,6F
 362+ ABF3 18 0A        	jr 5F
 363+ ABF5
 364+ ABF5              ; Entidad_de_Tipo_3.
 365+ ABF5
 366+ ABF5 CB 76        3 bit 6,(hl)
 367+ ABF7 28 09        	jr z,6F
 368+ ABF9 18 04        	jr 5F
 369+ ABFB
 370+ ABFB              ; Entidad_de_Tipo_4.
 371+ ABFB
 372+ ABFB CB 7E        4 bit 7,(hl)
 373+ ABFD 28 03        	jr z,6F
 374+ ABFF
 375+ ABFF              ; Esta entidad TIENE MOV_MASTICADOS.
 376+ ABFF
 377+ ABFF AF           5 xor a
 378+ AC00 3C           	inc a
 379+ AC01 C9           	ret
 380+ AC02
 381+ AC02              ; Esta entidad NO TIENE MOV_MASTICADOS.
 382+ AC02
 383+ AC02 AF           6 xor a
 384+ AC03 C9           	ret
 385+ AC04
 386+ AC04              ;	------------------------------------------------------------------------------------
 387+ AC04              ;
 388+ AC04              ;	12/01/24
 389+ AC04              ;
 390+ AC04              ;	INPUTS:	A contiene el (Tipo) de entidad.
 391+ AC04              ;
 392+ AC04              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 393+ AC04              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 394+ AC04
 395+ AC04 CB 27        Calcula_salto_en_BC sla a
 396+ AC06 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 397+ AC08 4F           	ld c,a
 398+ AC09 06 00        	ld b,0
 399+ AC0B C9           	ret
 400+ AC0C
 401+ AC0C              ; ------------------------------------------------------------------
 402+ AC0C              ;
 403+ AC0C              ;	19/1/24
 404+ AC0C              ;
 405+ AC0C              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 406+ AC0C              ;	Actualiza (Datos_de_entidad) con esa dirección.
 407+ AC0C
 408+ AC0C A7           Situa_en_datos_de_definicion and a
 409+ AC0D ED 4A        	adc hl,bc
 410+ AC0F CD 79 8C     	call Extrae_address
 411+ AC12 22 CC 89         ld (Datos_de_entidad),hl
 412+ AC15 C9           	ret
 413+ AC16
 414+ AC16              ; ------------------------------------------------------------------
 415+ AC16
 416+ AC16              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 417+ AC16              ; 	inc de
 418+ AC16              ; 	inc de
 419+ AC16              ; 	ex de,hl
 420+ AC16              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 421+ AC16              ; 	ret
 422+ AC16
 423+ AC16              ; ----------------------------------------------------------------------------------------------------------
 424+ AC16              ;
 425+ AC16              ;	31/1/24
 426+ AC16              ;
 427+ AC16              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 428+ AC16              ;	_ de entidad.
 429+ AC16              ;
 430+ AC16              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 431+ AC16              ;
 432+ AC16              ;
 433+ AC16              ;	MODIFICA: HL,DE y BC
 434+ AC16
 435+ AC16
 436+ AC16              Definicion_de_entidad_a_bandeja_DRAW
 437+ AC16
 438+ AC16 11 81 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 439+ AC19 01 03 00     	ld bc,3
 440+ AC1C ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 441+ AC1E              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 442+ AC1E 11 8B 89     	ld de,Attr									; DE en (Attr).
 443+ AC21 01 05 00     	ld bc,5
 444+ AC24 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 445+ AC26              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 446+ AC26 11 94 89     	ld de,Posicion_inicio
 447+ AC29 01 03 00     	ld bc,3
 448+ AC2C ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 449+ AC2E              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 450+ AC2E 11 9A 89     	ld de,Puntero_de_almacen_de_mov_masticados
 451+ AC31 01 02 00     	ld bc,2
 452+ AC34 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 453+ AC36
 454+ AC36 11 A4 89     	ld de,Frames_explosion
 455+ AC39 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 456+ AC3B 12           	ld (de),a 									; Vuelco (Frames_explosion).
 457+ AC3C
 458+ AC3C C9           	ret
 459+ AC3D
 460+ AC3D              ; ----------------------------------------------------------------------------------------------------------
 461+ AC3D              ;
 462+ AC3D              ;	22/01/24
 463+ AC3D              ;
 464+ AC3D              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 465+ AC3D              ;
 466+ AC3D              ;	Las cajas contienen entidades iniciadas:
 467+ AC3D              ;
 468+ AC3D              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 469+ AC3D              ;
 470+ AC3D              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 471+ AC3D              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 472+ AC3D              ;
 473+ AC3D              ;	MODIFICA: HL,DE y BC
 474+ AC3D
 475+ AC3D              Parametros_de_bandeja_DRAW_a_caja
 476+ AC3D
 477+ AC3D 21 81 89     	ld hl,Bandeja_DRAW
 478+ AC40 ED 5B C0 89  	ld de,(Puntero_store_caja)
 479+ AC44 7E           	ld a,(hl)
 480+ AC45 12           	ld (de),a
 481+ AC46 13           	inc de 													; (Tipo).
 482+ AC47
 483+ AC47 21 88 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 484+ AC4A 01 02 00     	ld bc,2
 485+ AC4D ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 486+ AC4F              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 487+ AC4F 23           	inc hl
 488+ AC50 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 489+ AC51 12           	ld (de),a
 490+ AC52 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 491+ AC53
 492+ AC53 21 97 89     	ld hl,Impacto
 493+ AC56 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 494+ AC57 12           	ld (de),a
 495+ AC58 13           	inc de 													; (Impacto), volcado a la caja.
 496+ AC59
 497+ AC59 21 98 89     	ld hl,Puntero_de_impresion								; DE situado ahora en (Puntero_de_impresión).
 498+ AC5C 01 07 00     	ld bc,7
 499+ AC5F ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 500+ AC61              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 501+ AC61              ;															; HL apunta ahora a (Columnas).
 502+ AC61 21 A3 89     	ld hl,Ctrl_2
 503+ AC64 7E           	ld a,(hl)
 504+ AC65 12           	ld (de),a 												; Volcamos (Ctrl_2).
 505+ AC66 13           	inc de
 506+ AC67
 507+ AC67 C9           	ret
 508+ AC68
 509+ AC68              ;---------------------------------------------------------------------------------------------------------------
 510+ AC68              ;
 511+ AC68              ;	5/1/24
 512+ AC68              ;
 513+ AC68              ;	INICIALIZA (Numero_parcial_de_entidades).
 514+ AC68              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 515+ AC68              ;
 516+ AC68              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 517+ AC68              ;
 518+ AC68              ;	(Numero_parcial_de_entidades)="7".
 519+ AC68              ;
 520+ AC68              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 521+ AC68              ;
 522+ AC68              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 523+ AC68              ;
 524+ AC68              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 525+ AC68              ;	MODIFICA: A y B.
 526+ AC68              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 527+ AC68
 528+ AC68              Inicializa_Numero_parcial_de_entidades
 529+ AC68
 530+ AC68              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 531+ AC68
 532+ AC68 3A C6 89     	ld a,(Numero_de_entidades)
 533+ AC6B A7           	and a
 534+ AC6C
 535+ AC6C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 536+ AC6C              ;	jr z,$
 537+ AC6C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 538+ AC6C
 539+ AC6C 20 03        	jr nz,3F
 540+ AC6E
 541+ AC6E              ; ---------- ---------- ----------
 542+ AC6E
 543+ AC6E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 544+ AC6E              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 545+ AC6E
 546+ AC6E CD AF AA     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 547+ AC71
 548+ AC71              ; ---------- ---------- ----------
 549+ AC71
 550+ AC71 3A C6 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 551+ AC74 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 552+ AC76 38 08        	jr c,1F
 553+ AC78
 554+ AC78              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 555+ AC78              ; Actualizamos variables.
 556+ AC78
 557+ AC78 3E 07        	ld a,7
 558+ AC7A 32 C7 89     	ld (Numero_parcial_de_entidades),a
 559+ AC7D 47           	ld b,a
 560+ AC7E 18 04        	jr 2F
 561+ AC80
 562+ AC80              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 563+ AC80              ; (Numero_de_entidades)="0".
 564+ AC80
 565+ AC80 32 C7 89     1 ld (Numero_parcial_de_entidades),a
 566+ AC83 47           	ld b,a
 567+ AC84 C9           2 ret
 568+ AC85
# file closed: Rutinas_de_inicio_y_niveles.asm
2013  AC85              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ AC85              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ AC85              ;
   3+ AC85              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ AC85              ;
   5+ AC85              ; *****************************************************************************************************************************************************************************************
   6+ AC85              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ AC85
   8+ AC85 7C           calcula_tercio ld a,h
   9+ AC86 E6 18        	and $18
  10+ AC88 CB 2F        	sra a
  11+ AC8A CB 2F        	sra a
  12+ AC8C CB 2F        	sra a
  13+ AC8E C9           	ret
  14+ AC8F
# file closed: calcula_tercio.asm
2014  AC8F              	include "Cls.asm"
# file opened: Cls.asm
   1+ AC8F              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ AC8F              ;
   3+ AC8F              ;
   4+ AC8F              ;	CLS.
   5+ AC8F              ;
   6+ AC8F              ;	Limpia la pantalla y define sus atributos.
   7+ AC8F              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ AC8F              ;
   9+ AC8F              ;	COLORES: 0 ..... NEGRO
  10+ AC8F              ;    		 1 ..... AZUL
  11+ AC8F              ; 			 2 ..... ROJO
  12+ AC8F              ;			 3 ..... MAGENTA
  13+ AC8F              ; 			 4 ..... VERDE
  14+ AC8F              ; 			 5 ..... CIAN
  15+ AC8F              ;			 6 ..... AMARILLO
  16+ AC8F              ; 			 7 ..... BLANCO
  17+ AC8F              ;
  18+ AC8F              ;	INPUT: A contiene los atributos de pantalla.
  19+ AC8F              ;
  20+ AC8F              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ AC8F
  22+ AC8F
  23+ AC8F 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ AC92 11 01 40     	LD DE,$4001
  25+ AC95 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ AC98 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ AC9A ED B0        	LDIR
  28+ AC9C 01 FF 02     	LD BC,767
  29+ AC9F 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ ACA0 ED B0        	LDIR
  31+ ACA2 C9           	ret
  32+ ACA3
# file closed: Cls.asm
2015  ACA3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ ACA3              ; ------------------------------------------------------------------------
   2+ ACA3              ;
   3+ ACA3              ;	30/1/24
   4+ ACA3              ;
   5+ ACA3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ ACA3              ;	Fila superior "0", Columna izquierda "0".
   7+ ACA3              ;
   8+ ACA3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ ACA3              ;
  10+ ACA3              ;	Modifica: A,BC y DE.
  11+ ACA3
  12+ ACA3 7D           Genera_coordenadas ld a,l
  13+ ACA4 E6 1F        	and $1f
  14+ ACA6 32 88 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ ACA9
  16+ ACA9 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ ACAA FE 40        	cp $40
  18+ ACAC 38 1C        	jr c,4F
  19+ ACAE
  20+ ACAE CD 85 AC     	call calcula_tercio
  21+ ACB1 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ ACB2
  23+ ACB2 1E 00        	ld e,0
  24+ ACB4 7D           	ld a,l
  25+ ACB5 E6 E0        	and $e0
  26+ ACB7 28 01        	jr z,1F
  27+ ACB9 04           	inc b
  28+ ACBA
  29+ ACBA 04           1 inc b
  30+ ACBB 05           	dec b
  31+ ACBC 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ ACBE              ;														; _ , salimos.
  33+ ACBE 1C           3 inc e
  34+ ACBF D6 20        	sub 32
  35+ ACC1 20 FB        	jr nz,3B
  36+ ACC3 10 F5        	djnz 1B
  37+ ACC5
  38+ ACC5 7B           2 ld a,e
  39+ ACC6 32 89 89     	ld (Coordenada_y),a
  40+ ACC9 C9           	ret
  41+ ACCA
  42+ ACCA AF           4 xor a
  43+ ACCB 32 89 89     	ld (Coordenada_y),a
  44+ ACCE C9           	ret
  45+ ACCF
  46+ ACCF              ; ------------------------------------------------------------------------
  47+ ACCF              ;	28/05/23
  48+ ACCF              ;
  49+ ACCF              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ ACCF              ;	Fila superior "0", Columna izquierda "0".
  51+ ACCF              ;
  52+ ACCF              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ ACCF              ;	Output: DE contendrá las coordenadas del disparo:
  54+ ACCF              ;
  55+ ACCF              ;		DE="$120d"
  56+ ACCF              ;
  57+ ACCF              ;		D, (Coordenada_X), Columnas, $12
  58+ ACCF              ;		E, (Coordenada_y), Filas, $0d
  59+ ACCF              ;
  60+ ACCF              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ ACCF
  62+ ACCF              ;	Modifica: A,BC y DE.
  63+ ACCF
  64+ ACCF
  65+ ACCF              Genera_coordenadas_disparo
  66+ ACCF
  67+ ACCF              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ ACCF
  69+ ACCF 7D           	ld a,l
  70+ ACD0 E6 1F        	and $1f
  71+ ACD2 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ ACD3 CD 85 AC     	call calcula_tercio
  73+ ACD6 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ ACD7 1E 00        	ld e,0
  75+ ACD9 7D           	ld a,l
  76+ ACDA E6 E0        	and $e0
  77+ ACDC 28 01        	jr z,1F
  78+ ACDE 04           	inc b
  79+ ACDF 1C           1 inc e
  80+ ACE0 D6 20        	sub 32
  81+ ACE2 20 FB        	jr nz,1B
  82+ ACE4 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ ACE6 C9           	ret
  84+ ACE7
# file closed: Genera_coordenadas.asm
2016  ACE7              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ ACE7              ; Relojes y temporizaciones.
   2+ ACE7
   3+ ACE7              ; ------------------------------------------------------
   4+ ACE7              ;
   5+ ACE7              ;	16/7/23
   6+ ACE7              ;
   7+ ACE7              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ ACE7              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ ACE7              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ ACE7              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ ACE7              ;
  12+ ACE7              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ ACE7              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ ACE7
  15+ ACE7              ; Disparo_entidad db 1
  16+ ACE7              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ ACE7              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ ACE7
  19+ ACE7              Habilita_disparos
  20+ ACE7
  21+ ACE7 7E           	ld a,(hl)
  22+ ACE8 A7           	and a
  23+ ACE9 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ ACEA
  25+ ACEA EB           	ex de,hl
  26+ ACEB
  27+ ACEB 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ ACEC C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ ACED
  30+ ACED              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ ACED
  32+ ACED 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ ACEE 7E           	ld a,(hl)
  34+ ACEF 23           	inc hl
  35+ ACF0 77           	ld (hl),a
  36+ ACF1
  37+ ACF1 EB           	ex de,hl						; Habilitamos disparo.
  38+ ACF2 3E 01        	ld a,1
  39+ ACF4 77           	ld (hl),a
  40+ ACF5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
2017  ACF6              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ ACF6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ ACF6              ;
   3+ ACF6              ;	11/03/24
   4+ ACF6              ;
   5+ ACF6              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ ACF6              ;   DE contiene Puntero_objeto.
   7+ ACF6              ;   IX contiene el Puntero de impresión.
   8+ ACF6
   9+ ACF6              Genera_datos_de_impresion
  10+ ACF6
  11+ ACF6 ED 73 CE 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ ACFA 31 9A 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ ACFD DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ ACFF
  15+ ACFF 2A DD 89         ld hl,(Scanlines_album_SP)
  16+ AD02
  17+ AD02 3E 05            ld a,5
  18+ AD04 85               add l
  19+ AD05 6F               ld l,a
  20+ AD06
  21+ AD06 F9               ld sp,hl
  22+ AD07 22 DD 89         ld (Scanlines_album_SP),hl
  23+ AD0A
  24+ AD0A 21 00 00         ld hl,0
  25+ AD0D
  26+ AD0D DD E5            push ix
  27+ AD0F 3B               dec sp
  28+ AD10 ED 7A            adc hl,sp
  29+ AD12 D5               push de
  30+ AD13
  31+ AD13              ; Recuperamos SP.
  32+ AD13
  33+ AD13 ED 7B CE 89      ld sp,(Stack)
  34+ AD17
  35+ AD17 E5               push hl
  36+ AD18 F1               pop af
  37+ AD19 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ AD1A
  39+ AD1A              ; Tenemos el encabezado listo.
  40+ AD1A              ; Preparamos registros para generar los scanlines.
  41+ AD1A
  42+ AD1A DD E5            push ix
  43+ AD1C E1               pop hl                                          ; 1er scanline en HL.
  44+ AD1D
  45+ AD1D ED 5B DD 89      ld de,(Scanlines_album_SP)
  46+ AD21
  47+ AD21              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ AD21              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ AD21
  50+ AD21 7C               ld a,h
  51+ AD22 FE 50            cp $50
  52+ AD24 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ AD26
  54+ AD26 20 05            jr nz,2F
  55+ AD28
  56+ AD28 7D               ld a,l
  57+ AD29 FE E0            cp $e0
  58+ AD2B 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ AD2D
  60+ AD2D 7D           2 ld a,l
  61+ AD2E FE C0            cp $c0
  62+ AD30 D2 C2 AD         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ AD33
  64+ AD33              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ AD33
  66+ AD33 CD F8 94         call NextScan
  67+ AD36 EB               ex de,hl
  68+ AD37
  69+ AD37 73               ld (hl),e
  70+ AD38 23               inc hl
  71+ AD39 72               ld (hl),d
  72+ AD3A 23               inc hl
  73+ AD3B
  74+ AD3B EB               ex de,hl
  75+ AD3C
  76+ AD3C CD F8 94         call NextScan
  77+ AD3F EB               ex de,hl
  78+ AD40
  79+ AD40 73               ld (hl),e
  80+ AD41 23               inc hl
  81+ AD42 72               ld (hl),d
  82+ AD43 23               inc hl
  83+ AD44
  84+ AD44 EB               ex de,hl
  85+ AD45
  86+ AD45 CD F8 94         call NextScan
  87+ AD48 EB               ex de,hl
  88+ AD49
  89+ AD49 73               ld (hl),e
  90+ AD4A 23               inc hl
  91+ AD4B 72               ld (hl),d
  92+ AD4C 23               inc hl
  93+ AD4D
  94+ AD4D EB               ex de,hl
  95+ AD4E
  96+ AD4E CD F8 94         call NextScan
  97+ AD51 EB               ex de,hl
  98+ AD52
  99+ AD52 73               ld (hl),e
 100+ AD53 23               inc hl
 101+ AD54 72               ld (hl),d
 102+ AD55 23               inc hl
 103+ AD56
 104+ AD56 EB               ex de,hl
 105+ AD57
 106+ AD57 CD F8 94         call NextScan
 107+ AD5A EB               ex de,hl
 108+ AD5B
 109+ AD5B 73               ld (hl),e
 110+ AD5C 23               inc hl
 111+ AD5D 72               ld (hl),d
 112+ AD5E 23               inc hl
 113+ AD5F
 114+ AD5F EB               ex de,hl
 115+ AD60
 116+ AD60 CD F8 94         call NextScan
 117+ AD63 EB               ex de,hl
 118+ AD64
 119+ AD64 73               ld (hl),e
 120+ AD65 23               inc hl
 121+ AD66 72               ld (hl),d
 122+ AD67 23               inc hl
 123+ AD68
 124+ AD68 EB               ex de,hl
 125+ AD69
 126+ AD69 CD F8 94         call NextScan
 127+ AD6C EB               ex de,hl
 128+ AD6D
 129+ AD6D 73               ld (hl),e
 130+ AD6E 23               inc hl
 131+ AD6F 72               ld (hl),d
 132+ AD70 23               inc hl
 133+ AD71
 134+ AD71 EB               ex de,hl
 135+ AD72
 136+ AD72 CD F8 94         call NextScan
 137+ AD75 EB               ex de,hl
 138+ AD76
 139+ AD76 73               ld (hl),e
 140+ AD77 23               inc hl
 141+ AD78 72               ld (hl),d
 142+ AD79 23               inc hl
 143+ AD7A
 144+ AD7A EB               ex de,hl
 145+ AD7B
 146+ AD7B CD F8 94         call NextScan
 147+ AD7E EB               ex de,hl
 148+ AD7F
 149+ AD7F 73               ld (hl),e
 150+ AD80 23               inc hl
 151+ AD81 72               ld (hl),d
 152+ AD82 23               inc hl
 153+ AD83
 154+ AD83 EB               ex de,hl
 155+ AD84
 156+ AD84 CD F8 94         call NextScan
 157+ AD87 EB               ex de,hl
 158+ AD88
 159+ AD88 73               ld (hl),e
 160+ AD89 23               inc hl
 161+ AD8A 72               ld (hl),d
 162+ AD8B 23               inc hl
 163+ AD8C
 164+ AD8C EB               ex de,hl
 165+ AD8D
 166+ AD8D CD F8 94         call NextScan
 167+ AD90 EB               ex de,hl
 168+ AD91
 169+ AD91 73               ld (hl),e
 170+ AD92 23               inc hl
 171+ AD93 72               ld (hl),d
 172+ AD94 23               inc hl
 173+ AD95
 174+ AD95 EB               ex de,hl
 175+ AD96
 176+ AD96 CD F8 94         call NextScan
 177+ AD99 EB               ex de,hl
 178+ AD9A
 179+ AD9A 73               ld (hl),e
 180+ AD9B 23               inc hl
 181+ AD9C 72               ld (hl),d
 182+ AD9D 23               inc hl
 183+ AD9E
 184+ AD9E EB               ex de,hl
 185+ AD9F
 186+ AD9F CD F8 94         call NextScan
 187+ ADA2 EB               ex de,hl
 188+ ADA3
 189+ ADA3 73               ld (hl),e
 190+ ADA4 23               inc hl
 191+ ADA5 72               ld (hl),d
 192+ ADA6 23               inc hl
 193+ ADA7
 194+ ADA7 EB               ex de,hl
 195+ ADA8
 196+ ADA8 CD F8 94         call NextScan
 197+ ADAB EB               ex de,hl
 198+ ADAC
 199+ ADAC 73               ld (hl),e
 200+ ADAD 23               inc hl
 201+ ADAE 72               ld (hl),d
 202+ ADAF 23               inc hl
 203+ ADB0
 204+ ADB0 EB               ex de,hl
 205+ ADB1
 206+ ADB1 CD F8 94         call NextScan
 207+ ADB4 EB               ex de,hl
 208+ ADB5
 209+ ADB5 73               ld (hl),e
 210+ ADB6 23               inc hl
 211+ ADB7 72               ld (hl),d
 212+ ADB8 23               inc hl
 213+ ADB9
 214+ ADB9              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ ADB9
 216+ ADB9 22 DD 89         ld (Scanlines_album_SP),hl
 217+ ADBC
 218+ ADBC              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ ADBC
 220+ ADBC 08               ex af,af
 221+ ADBD
 222+ ADBD F5               push af
 223+ ADBE E1               pop hl
 224+ ADBF
 225+ ADBF 36 10            ld (hl),16
 226+ ADC1
 227+ ADC1 C9               ret
 228+ ADC2
 229+ ADC2              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ ADC2
 231+ ADC2              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ ADC2
 233+ ADC2 3E 57            ld a,$57
 234+ ADC4 94               sub h
 235+ ADC5 47               ld b,a
 236+ ADC6
 237+ ADC6 3E DF            ld a,$df
 238+ ADC8 BD               cp l
 239+ ADC9 38 04            jr c,1F
 240+ ADCB
 241+ ADCB 3E 08            ld a,8
 242+ ADCD 80               add b
 243+ ADCE 47               ld b,a
 244+ ADCF
 245+ ADCF              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 246+ ADCF              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 247+ ADCF
 248+ ADCF 48           1 ld c,b
 249+ ADD0 0C               inc c
 250+ ADD1
 251+ ADD1 04               inc b
 252+ ADD2 05               dec b
 253+ ADD3 20 02            jr nz,3F
 254+ ADD5
 255+ ADD5 18 0B            jr 6F
 256+ ADD7
 257+ ADD7 CD F8 94     3 call NextScan
 258+ ADDA EB               ex de,hl
 259+ ADDB
 260+ ADDB 73               ld (hl),e
 261+ ADDC 23               inc hl
 262+ ADDD 72               ld (hl),d
 263+ ADDE 23               inc hl
 264+ ADDF
 265+ ADDF EB               ex de,hl
 266+ ADE0 10 F5            djnz 3B
 267+ ADE2
 268+ ADE2 ED 53 DD 89  6 ld (Scanlines_album_SP),de
 269+ ADE6
 270+ ADE6 08           5 ex af,af
 271+ ADE7 F5               push af
 272+ ADE8 E1               pop hl
 273+ ADE9
 274+ ADE9 71               ld (hl),c
 275+ ADEA
 276+ ADEA C9               ret
 277+ ADEB
# file closed: Genera_datos_de_impresion.asm
2018  ADEB
2019  ADEB              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ ADEB              ; -----------------------------------------------------------------------------
   2+ ADEB              ;
   3+ ADEB              ;   11/03/24
   4+ ADEB              ;
   5+ ADEB
   6+ ADEB                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 CE 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 22 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 73 DD 89      ld (Scanlines_album_SP),sp
 312+ 921D ED 7B CE 89      ld sp,(Stack)
 313+ 9221 C9               ret
 314+ 9222
 315+ 9222              Pinta_lento
 316+ 9222
 317+ 9222 E1           1 pop hl
 318+ 9223
 319+ 9223 1A               ld a,(de)
 320+ 9224 AE               xor (hl)
 321+ 9225 77               ld (hl),a
 322+ 9226 2C               inc l
 323+ 9227 1C               inc e
 324+ 9228 1A               ld a,(de)
 325+ 9229 AE               xor (hl)
 326+ 922A 77               ld (hl),a
 327+ 922B 2C               inc l
 328+ 922C 1C               inc e
 329+ 922D 1A               ld a,(de)
 330+ 922E AE               xor (hl)
 331+ 922F 77               ld (hl),a
 332+ 9230 13               inc de
 333+ 9231
 334+ 9231 10 EF            djnz 1B
 335+ 9233
 336+ 9233 ED 73 DD 89      ld (Scanlines_album_SP),sp
 337+ 9237 ED 7B CE 89      ld sp,(Stack)
 338+ 923B C9               ret
# file closed: Pinta_Sprites.asm
2020  923C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ; 26/06/23
   4+ 923C              ;
   5+ 923C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 923C
   7+ 923C              Draw
   8+ 923C
   9+ 923C CD EC 94     	call Prepara_draw
  10+ 923F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9240 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9241 28 05        	jr z,2F
  13+ 9243
  14+ 9243 3A 96 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9246 18 0C        	jr 1F
  16+ 9248
  17+ 9248 2A 94 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924B 22 84 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 924E CD DA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9251              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9251
  22+ 9251 CD 58 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9254
  24+ 9254 3A 9E 89     1 ld a,(Ctrl_0)
  25+ 9257 CB 6F        	bit 5,a
  26+ 9259 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925B
  28+ 925B CD 70 92     	call Comprueba_limite_horizontal
  29+ 925E CD 00 93     	call Comprueba_limite_vertical
  30+ 9261
  31+ 9261              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9261              ; -----------------------
  33+ 9261              ; -----------------------
  34+ 9261              ; -----------------------
  35+ 9261
  36+ 9261 CD 56 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9264 CD 8D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9267
  39+ 9267 3A 9E 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 926C 32 9E 89     	ld (Ctrl_0),a
  42+ 926F
  43+ 926F C9           	ret
  44+ 9270
  45+ 9270              ; *******************************************************************************************************************************************************************************************
  46+ 9270              ;	21/01/23
  47+ 9270              ;
  48+ 9270              ; 	Comprueba_limite_horizontal.
  49+ 9270              ;
  50+ 9270              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9270              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9270              ;
  53+ 9270              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9270              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9270              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9270              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9270
  58+ 9270
  59+ 9270
  60+ 9270 3A 9E 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9273 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9275 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9277 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9279 32 9E 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 927C 18 09            jr 6F
  66+ 927E CB 5F        1 bit 3,a
  67+ 9280 28 0A            jr z,2F
  68+ 9282 E6 F7            and $f7
  69+ 9284 32 9E 89         ld (Ctrl_0),a
  70+ 9287 CD DA 93     6 call Inicializacion
  71+ 928A 18 5B            jr 5F
  72+ 928C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 928D
  74+ 928D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 928D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 928D
  77+ 928D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 928E 2A A0 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9291 CD 85 AC     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9294 67           	ld h,a
  81+ 9295 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9296 CD 85 AC     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9299 67           	ld h,a
  84+ 929A A7           	and a
  85+ 929B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 929D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 929E 3A 96 89     	ld a,(Cuad_objeto)
  88+ 92A1 FE 02        	cp 2
  89+ 92A3 38 1E        	jr c,3F
  90+ 92A5 28 1C        	jr z,3F
  91+ 92A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A8 28 23            jr z,7F
  93+ 92AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92AE E1           	pop hl
  96+ 92AF
  97+ 92AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92AF              ; _para indicar con E="2" en caso necesario.
  99+ 92AF
 100+ 92AF E5               push hl
 101+ 92B0 C5               push bc
 102+ 92B1 CD 85 AC     	call calcula_tercio
 103+ 92B4 FE 01        	cp 1
 104+ 92B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B8 CD E8 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BB 28 26            jr z,9F
 107+ 92BD 38 24            jr c,9F
 108+ 92BF 1E 00        11 ld e,0
 109+ 92C1 18 22            jr 8F
 110+ 92C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C4 28 07        	jr z, 7F
 112+ 92C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C8 1E 00         	ld e,0
 114+ 92CA E1           	pop hl
 115+ 92CB 18 04        	jr 4F
 116+ 92CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92CF 18 15            jr 10F
 118+ 92D1
 119+ 92D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D1              ; _para indicar con E="2" en caso necesario.
 121+ 92D1
 122+ 92D1 E5           4 push hl
 123+ 92D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D3 CD 85 AC     	call calcula_tercio
 125+ 92D6 FE 01        	cp 1
 126+ 92D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DA CD E8 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92DD 28 04            jr z,9F
 129+ 92DF 30 02            jr nc,9F
 130+ 92E1 18 02        	jr 8F
 131+ 92E3 1E 02        9 ld e,2
 132+ 92E5 C1           8 pop bc
 133+ 92E6 E1           10 pop hl
 134+ 92E7 C9           5 ret
 135+ 92E8
 136+ 92E8              ; --------------------
 137+ 92E8              ;
 138+ 92E8              ; 25/08/22
 139+ 92E8
 140+ 92E8 CD 85 AC     Comprueba_centro call calcula_tercio
 141+ 92EB 67               ld h,a
 142+ 92EC 08           	ex af,af
 143+ 92ED FE 02        	cp 2
 144+ 92EF 38 07        	jr c,1F
 145+ 92F1 28 05        	jr z,1F
 146+ 92F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92F6 18 03        	jr 2F
 148+ 92F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FB 08           2 ex af,af
 150+ 92FC A7               and a
 151+ 92FD ED 42            sbc hl,bc
 152+ 92FF C9               ret
 153+ 9300
 154+ 9300              ; *********************************************************************************************************************************************************************************************
 155+ 9300              ;
 156+ 9300              ;   16/8/22
 157+ 9300              ;
 158+ 9300              ;	Comprueba_limite_vertical
 159+ 9300              ;
 160+ 9300              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9300              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9300              ;
 163+ 9300
 164+ 9300 2A 84 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9303 7D           	ld a,l
 166+ 9304 E6 1F        	and $1F
 167+ 9306 57           	ld d,a
 168+ 9307 3A A2 89     	ld a,(Limite_vertical)
 169+ 930A BA           	cp d 											; Límite - Posición.
 170+ 930B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 930C 3A 96 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 930F CB 47        	bit 0,a
 173+ 9311 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9313
 175+ 9313              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9313
 177+ 9313 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9314 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9316
 180+ 9316              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9316              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9316
 183+ 9316 3A 88 89         ld a,(Coordenada_X)
 184+ 9319 16 0F            ld d,Centro_izquierda
 185+ 931B A7               and a
 186+ 931C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 931D 28 1E            jr z,3F
 188+ 931F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9321              ;                                                    ; _salimos sin modificar nada.
 190+ 9321 18 0E            jr 2F
 191+ 9323 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9324 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9326
 194+ 9326              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9326              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9326
 197+ 9326 3A 88 89         ld a,(Coordenada_X)
 198+ 9329 16 10            ld d,Centro_derecha
 199+ 932B A7               and a
 200+ 932C 92               sub d
 201+ 932D 28 0E            jr z,3F
 202+ 932F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9331              ;                                                    ; _salimos sin modificar nada.
 204+ 9331 CB 43        2 bit 0,e
 205+ 9333 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9335 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9336 CD CA 93         call Modificaccionne
 208+ 9339 C1           	pop bc
 209+ 933A CD DA 93         call Inicializacion
 210+ 933D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 933E
 212+ 933E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 933E
 214+ 933E C5           4 push bc
 215+ 933F 01 83 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9342 0A           	ld a,(bc)
 217+ 9343 3D           	dec a
 218+ 9344 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9345 7D           	ld a,l
 220+ 9346 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9347 CB 47        	bit 0,a
 222+ 9349 28 03        	jr z,5F
 223+ 934B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 934C 18 2E        	jr 7F
 225+ 934E
 226+ 934E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 934E
 228+ 934E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 934F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9350 3A 9E 89     	ld a,(Ctrl_0)
 231+ 9353 CB 4F        	bit 1,a
 232+ 9355 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9357 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9358
 235+ 9358              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9358
 237+ 9358 1C               inc e
 238+ 9359 1D               dec e
 239+ 935A 20 07            jr nz,12F
 240+ 935C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 935D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 935E 22 84 89     	ld (Posicion_actual),hl
 243+ 9361 18 44        13 jr 9F
 244+ 9363 CB 43        12 bit 0,e
 245+ 9365 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9367              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9367 C1           	pop bc
 248+ 9368 18 D3        	jr 3B
 249+ 936A 80           14 add b
 250+ 936B 6F               ld l,a
 251+ 936C 22 84 89     	ld (Posicion_actual),hl
 252+ 936F CD CA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9372 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9374 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9376 32 9E 89         ld (Ctrl_0),a
 256+ 9379 F1           	pop af
 257+ 937A 18 2B        	jr 9F
 258+ 937C
 259+ 937C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 937C
 261+ 937C F5           7 push af
 262+ 937D 3A 9E 89     	ld a,(Ctrl_0)
 263+ 9380 CB 47        	bit 0,a
 264+ 9382 20 1D        	jr nz,8F
 265+ 9384 F1           	pop af
 266+ 9385
 267+ 9385              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9385
 269+ 9385 1C           	inc e
 270+ 9386 1D               dec e
 271+ 9387 20 07            jr nz,10F
 272+ 9389 90           	sub b
 273+ 938A 6F               ld l,a
 274+ 938B 22 84 89     	ld (Posicion_actual),hl
 275+ 938E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9390              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9390 CB 43        10 bit 0,e
 278+ 9392 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9394              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9394 C1           	pop bc
 281+ 9395 18 A6        	jr 3B
 282+ 9397 90           16 sub b
 283+ 9398 6F               ld l,a
 284+ 9399 22 84 89     	ld (Posicion_actual),hl
 285+ 939C CD CA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 939F 18 06            jr 9F
 287+ 93A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A3 32 9E 89         ld (Ctrl_0),a
 289+ 93A6 F1           	pop af
 290+ 93A7 C1           9 pop bc
 291+ 93A8 1E 00        	ld e,0
 292+ 93AA CD DA 93         call Inicializacion
 293+ 93AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93AE 08           	ex af,af
 295+ 93AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B0 18 8B            jr 3B
 297+ 93B2
 298+ 93B2              ; --------------------
 299+ 93B2
 300+ 93B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B4 CD 07 95     1 call PreviousScan
 302+ 93B7 10 FB            djnz 1B
 303+ 93B9 22 84 89     	ld (Posicion_actual),hl
 304+ 93BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93BD C9           	ret
 306+ 93BE
 307+ 93BE              ; --------------------
 308+ 93BE
 309+ 93BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C0 CD F8 94     1 call NextScan
 311+ 93C3 10 FB            djnz 1B
 312+ 93C5 22 84 89     	ld (Posicion_actual),hl
 313+ 93C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C9 C9           	ret
 315+ 93CA
 316+ 93CA              ; --------------------
 317+ 93CA              ;
 318+ 93CA              ;	22/01/23
 319+ 93CA              ;
 320+ 93CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CA
 324+ 93CA
 325+ 93CA              Modificaccionne
 326+ 93CA
 327+ 93CA 3A 96 89     	ld a,(Cuad_objeto)
 328+ 93CD FE 02        	cp 2
 329+ 93CF CC B2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D2 DC B2 93         call c,Modifica_Pos_actual
 331+ 93D5 C8           	ret z
 332+ 93D6 CD BE 93         call Modifica_Pos_actual2
 333+ 93D9 C9               ret
 334+ 93DA
 335+ 93DA              ; *************************************************************************************************************************************************************************************************
 336+ 93DA              ;
 337+ 93DA              ;	13/8/22
 338+ 93DA              ;
 339+ 93DA              ;	Inicializacion
 340+ 93DA              ;
 341+ 93DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DA              ;
 345+ 93DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DA              ;	_ desaparece/aparece.
 348+ 93DA
 349+ 93DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DA              ;
 352+ 93DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DA              ; 		   [E] ="0"
 355+ 93DA
 356+ 93DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DA
 358+ 93DA CD 85 AC     Inicializacion call calcula_tercio
 359+ 93DD 28 36        	jr z,primit
 360+ 93DF E6 02        	and 2
 361+ 93E1 20 07        	jr nz,segmit
 362+ 93E3 7D           	ld a,l
 363+ 93E4 FE 7F        	cp $7f
 364+ 93E6 38 2D        	jr c,primit
 365+ 93E8 28 2B        	jr z,primit
 366+ 93EA CD 50 94     segmit call column
 367+ 93ED 38 13        	jr c,tercuad
 368+ 93EF 3E 04        cuarcuad ld a,4
 369+ 93F1 32 96 89     	ld (Cuad_objeto),a
 370+ 93F4 21 20 48     	ld hl,$4820
 371+ 93F7 22 A0 89     	ld (Limite_horizontal),hl
 372+ 93FA 21 A2 89     	ld hl,Limite_vertical
 373+ 93FD 36 0D        	ld (hl),$0d
 374+ 93FF 08           	ex af,af
 375+ 9400 18 3C        	jr 1F
 376+ 9402              tercuad
 377+ 9402 3E 03        	ld a,3
 378+ 9404 32 96 89     	ld (Cuad_objeto),a
 379+ 9407 21 20 48     	ld hl,$4820
 380+ 940A 22 A0 89     	ld (Limite_horizontal),hl
 381+ 940D 21 A2 89     	ld hl,Limite_vertical
 382+ 9410 36 12        	ld (hl),$12
 383+ 9412 08           	ex af,af
 384+ 9413 18 29        	jr 1F
 385+ 9415 CD 50 94     primit call column
 386+ 9418 38 13        	jr c, primcuad
 387+ 941A              segcuad
 388+ 941A 3E 02        	ld a,2
 389+ 941C 32 96 89     	ld (Cuad_objeto),a
 390+ 941F 21 C0 4F     	ld hl,$4fc0
 391+ 9422 22 A0 89     	ld (Limite_horizontal),hl
 392+ 9425 21 A2 89     	ld hl,Limite_vertical
 393+ 9428 36 0D        	ld (hl),$0d
 394+ 942A 08           	ex af,af
 395+ 942B 18 11        	jr 1F
 396+ 942D              primcuad
 397+ 942D 3E 01        	ld a,1
 398+ 942F 32 96 89     	ld (Cuad_objeto),a
 399+ 9432 21 C0 4F     	ld hl,$4fc0
 400+ 9435 22 A0 89     	ld (Limite_horizontal),hl
 401+ 9438 21 A2 89     	ld hl,Limite_vertical
 402+ 943B 36 12        	ld (hl),$12
 403+ 943D 08           	ex af,af
 404+ 943E
 405+ 943E C5           1 push bc
 406+ 943F E5           	push hl
 407+ 9440 D5           	push de
 408+ 9441
 409+ 9441 2A 84 89     	ld hl,(Posicion_actual)
 410+ 9444 CD A3 AC     	call Genera_coordenadas
 411+ 9447
 412+ 9447 D1           	pop de
 413+ 9448 E1           	pop hl
 414+ 9449 C1           	pop bc
 415+ 944A
 416+ 944A 21 9E 89     	ld hl,Ctrl_0
 417+ 944D CB EE        	set 5,(hl)
 418+ 944F C9           	ret
 419+ 9450
 420+ 9450              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9450
 422+ 9450              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9450              ;
 424+ 9450              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9450
 426+ 9450 7D           column ld a,l
 427+ 9451 E6 1F        	and $1f
 428+ 9453 FE 10         	cp $10
 429+ 9455 C9            	ret
 430+ 9456
 431+ 9456              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9456              ;
 433+ 9456              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9456              ;
 435+ 9456              ; 14/12/22
 436+ 9456              ;
 437+ 9456              ;	Modifica: A y BC.
 438+ 9456
 439+ 9456 3A 96 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9459 E6 01        	and 1
 441+ 945B 28 17        	jr z,1F
 442+ 945D
 443+ 945D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 945D
 445+ 945D 3A 88 89     	ld a,(Coordenada_X)
 446+ 9460 47           	ld b,a
 447+ 9461 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9462 79           	ld a,c
 449+ 9463 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9464 38 08        	jr c,2F
 451+ 9466 47           	ld b,a
 452+ 9467 79           	ld a,c
 453+ 9468 90           	sub b
 454+ 9469 32 9F 89     	ld (Columnas),a
 455+ 946C 18 1B        	jr 4F
 456+ 946E 79           2 ld a,c
 457+ 946F 32 9F 89     	ld (Columnas),a
 458+ 9472 18 15        	jr 4F
 459+ 9474
 460+ 9474              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9474
 462+ 9474 3A 88 89     1 ld a,(Coordenada_X)
 463+ 9477 81           	add c
 464+ 9478 3D           	dec a
 465+ 9479 D6 1F        	sub $1f
 466+ 947B 38 08        	jr c,3F
 467+ 947D 47           	ld b,a
 468+ 947E 79           	ld a,c
 469+ 947F 90           	sub b
 470+ 9480 32 9F 89     	ld (Columnas),a
 471+ 9483 18 04        	jr 4F
 472+ 9485 79           3 ld a,c
 473+ 9486 32 9F 89     	ld (Columnas),a
 474+ 9489 D9           4 exx
 475+ 948A 4F           	ld c,a
 476+ 948B D9           	exx
 477+ 948C C9            ret
 478+ 948D
 479+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 948D              ;
 481+ 948D              ;   19/7/23
 482+ 948D              ;
 483+ 948D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 948D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 948D              ;
 486+ 948D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 948D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 948D              ;
 489+ 948D              ;	DESTRUYE: HL,B Y A.
 490+ 948D
 491+ 948D 3A 96 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9490 FE 02        	cp 2
 493+ 9492 38 18        	jr c,1F
 494+ 9494 28 16        	jr z,1F
 495+ 9496 E6 01        	and 1
 496+ 9498 28 0D        	jr z,3F
 497+ 949A
 498+ 949A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949A
 500+ 949A CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 949D
 502+ 949D 7D           9 ld a,l
 503+ 949E E6 1F        	and $1f
 504+ 94A0 28 2A        	jr z,7F
 505+ 94A2 2B           	dec hl
 506+ 94A3 10 F8        	djnz 9B
 507+ 94A5 18 25        	jr 7F
 508+ 94A7
 509+ 94A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94A7
 511+ 94A7 2A 84 89     3 ld hl,(Posicion_actual)
 512+ 94AA 18 20        	jr 7F
 513+ 94AC
 514+ 94AC 28 14        1 jr z,2F
 515+ 94AE
 516+ 94AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94AE
 518+ 94AE CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B1
 520+ 94B1 7D           4 ld a,l
 521+ 94B2 E6 1F        	and $1f
 522+ 94B4 28 03        	jr z,6F
 523+ 94B6 2B           	dec hl
 524+ 94B7 10 F8        	djnz 4B
 525+ 94B9 06 0F        6 ld b,15
 526+ 94BB CD 07 95     5 call PreviousScan
 527+ 94BE 10 FB        	djnz 5B
 528+ 94C0 18 0A        	jr 7F
 529+ 94C2
 530+ 94C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C2
 532+ 94C2 CD E0 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C5 06 0F        	ld b,15
 534+ 94C7 CD 07 95     8 call PreviousScan
 535+ 94CA 10 FB        	djnz 8B
 536+ 94CC
 537+ 94CC E5           7 push hl
 538+ 94CD DD E1        	pop ix
 539+ 94CF
 540+ 94CF 2A 86 89     	ld hl,(Puntero_objeto)
 541+ 94D2 E5           	push hl
 542+ 94D3 FD E1        	pop iy
 543+ 94D5
 544+ 94D5              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 545+ 94D5
 546+ 94D5 3A 9E 89     	ld a,(Ctrl_0)
 547+ 94D8 CB 77        	bit 6,a
 548+ 94DA C8           	ret z
 549+ 94DB
 550+ 94DB              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 551+ 94DB              ; _ entidad / Amadeus´.
 552+ 94DB
 553+ 94DB DD 22 2E 87  	ld (p.imp.amadeus),ix
 554+ 94DF
 555+ 94DF C9           	ret
 556+ 94E0
 557+ 94E0              ; --------------------------------------------------------------------------------------------------------------------
 558+ 94E0              ;
 559+ 94E0              ;	2/1/23
 560+ 94E0              ;
 561+ 94E0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 562+ 94E0              ;
 563+ 94E0              ;	Tras esta rutina tenemos:
 564+ 94E0              ;
 565+ 94E0              ;	OUTPUT: HL contiene (Posicion_actual).
 566+ 94E0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 567+ 94E0              ;
 568+ 94E0              ;	DESTRUYE!!!!! HL,B y A.
 569+ 94E0
 570+ 94E0 2A 84 89     Operandos ld hl,(Posicion_actual)
 571+ 94E3 3A 9F 89     	ld a,(Columnas)
 572+ 94E6 3D           	dec a
 573+ 94E7 20 01        	jr nz,1F
 574+ 94E9 3C           	inc a
 575+ 94EA 47           1 ld b,a
 576+ 94EB C9           	ret
 577+ 94EC
 578+ 94EC              ; --------------------------------------------------------------------------------------------------------------------
 579+ 94EC              ;
 580+ 94EC              ;	Prepara_draw
 581+ 94EC              ;
 582+ 94EC              ;	Es una rutina de carga.
 583+ 94EC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 584+ 94EC              ;
 585+ 94EC              ;	FUNCIONAMIENTO:
 586+ 94EC              ;
 587+ 94EC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 588+ 94EC              ;	- LD (Posicion_actual) del objeto en [HL].
 589+ 94EC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 590+ 94EC              ;
 591+ 94EC              ;	DESTRUYE:
 592+ 94EC              ;
 593+ 94EC              ;	Logicamente, BC,HL y E quedan destruidos.
 594+ 94EC
 595+ 94EC 21 82 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 596+ 94EF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 597+ 94F0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 598+ 94F1 4E           	ld c,(hl)
 599+ 94F2 2A 84 89     	ld hl,(Posicion_actual)
 600+ 94F5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 601+ 94F7 C9           	ret
 602+ 94F8
 603+ 94F8              ;----------------------------------------------------------------------------------------------------------------
 604+ 94F8              ;
 605+ 94F8              ;	5/08/22
 606+ 94F8              ;
 607+ 94F8              ;   NextScan.
 608+ 94F8              ;
 609+ 94F8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 610+ 94F8              ;
 611+ 94F8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 612+ 94F8              ;
 613+ 94F8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 614+ 94F8              ;
 615+ 94F8              ;       DESTRUIDOS: AF y HL !!!
 616+ 94F8              ;
 617+ 94F8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 618+ 94F8              ;
 619+ 94F8
 620+ 94F8 24           NextScan inc h          ; Incrementamos el scanline.
 621+ 94F9 7C               ld a,h
 622+ 94FA E6 07            and 7
 623+ 94FC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 624+ 94FD
 625+ 94FD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 626+ 94FE C6 20            add a,$20           ; Vamos a comprobarlo...
 627+ 9500 6F               ld l,a
 628+ 9501 D8               ret c               ; Salimos si se produce el cambio de tercio.
 629+ 9502
 630+ 9502 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 631+ 9503 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 632+ 9505 67               ld h,a
 633+ 9506 C9               ret
 634+ 9507
 635+ 9507              ;----------------------------------------------------------------------------------------------------------------
 636+ 9507              ;
 637+ 9507              ;	5/08/22
 638+ 9507              ;
 639+ 9507              ;   PreviousScan.
 640+ 9507              ;
 641+ 9507              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 642+ 9507              ;
 643+ 9507              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 644+ 9507              ;
 645+ 9507              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 646+ 9507              ;
 647+ 9507              ;       DESTRUIDOS: AF y HL !!!
 648+ 9507              ;
 649+ 9507              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 650+ 9507              ;
 651+ 9507
 652+ 9507 7C           PreviousScan ld a,h
 653+ 9508 25               dec h               ; Dec H.
 654+ 9509 E6 07            and 7
 655+ 950B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 656+ 950C
 657+ 950C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 658+ 950D D6 20            sub $20             ; Vamos a comprobarlo...
 659+ 950F 6F               ld l,a
 660+ 9510 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 661+ 9511
 662+ 9511 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 663+ 9512 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 664+ 9514 67               ld h,a
 665+ 9515 C9               ret
 666+ 9516
 667+ 9516
 668+ 9516
 669+ 9516
 670+ 9516
 671+ 9516
 672+ 9516
 673+ 9516
 674+ 9516
 675+ 9516
 676+ 9516
 677+ 9516
# file closed: Draw_XOR.asm
2021  9516              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9516
   2+ 9516              ; ******************************************************************************************************************************************************************************************
   3+ 9516              ;
   4+ 9516              ;   20/05/23
   5+ 9516              ;
   6+ 9516              ;	Recompone_posicion_inicio
   7+ 9516              ;
   8+ 9516              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9516              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9516              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9516              ;	_ a una u otra rutina.
  12+ 9516
  13+ 9516              Recompone_posicion_inicio
  14+ 9516
  15+ 9516 2A 94 89     	ld hl,(Posicion_inicio)
  16+ 9519 7D           	ld a,l
  17+ 951A E6 1F        	and $1f
  18+ 951C 28 16        	jr z,1F
  19+ 951E
  20+ 951E FE 1F        	cp $1f
  21+ 9520 28 0D        	jr z,3F
  22+ 9522
  23+ 9522 21 A3 89     	ld hl,Ctrl_2
  24+ 9525 CB C6        	set 0,(hl)
  25+ 9527 2A 86 89     	ld hl,(Puntero_objeto)
  26+ 952A 22 BE 89     	ld (Repone_puntero_objeto),hl
  27+ 952D 18 08        	jr 2F
  28+ 952F
  29+ 952F CD DD 96     3 call Mov_left
  30+ 9532 18 03        	jr 2F
  31+ 9534
  32+ 9534 CD BA 95     1 call Mov_right
  33+ 9537 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 953A 22 86 89     	ld (Puntero_objeto),hl
  35+ 953D C9           	ret
  36+ 953E
  37+ 953E              ; ******************************************************************************************************************************************************************************************
  38+ 953E              ;
  39+ 953E              ;   27/05/23
  40+ 953E              ;
  41+ 953E              ;	Mov_down
  42+ 953E              ;
  43+ 953E              ; 	Mueve el Sprite X px hacia abajo.
  44+ 953E              ;
  45+ 953E              ;
  46+ 953E              Mov_down
  47+ 953E
  48+ 953E CD A8 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9541              ;																	; _ repone (Puntero_objeto).
  50+ 9541 21 9E 89     	ld hl,Ctrl_0
  51+ 9544 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9546              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9546              ; 																	; _ en el caso de que no lo haya.
  54+ 9546 3A A8 89     	ld a,(Vel_down)
  55+ 9549 47           	ld b,a
  56+ 954A 2A 84 89         ld hl,(Posicion_actual)
  57+ 954D CD 85 AC     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9550 E6 02        	and 2
  59+ 9552 28 17        	jr z,1F
  60+ 9554
  61+ 9554              ; Nos encontramos en el último tercio de pantalla.
  62+ 9554              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9554
  64+ 9554 7C           	ld a,h
  65+ 9555 FE 57        	cp $57
  66+ 9557 20 12        	jr nz,1F
  67+ 9559
  68+ 9559 7D           	ld a,l
  69+ 955A C6 20        	add $20
  70+ 955C 30 0D        	jr nc,1F
  71+ 955E
  72+ 955E              ; ------------------------------
  73+ 955E              ;
  74+ 955E              ;	12/01/24
  75+ 955E
  76+ 955E              ;	call Reaparece_arriba
  77+ 955E CD 6A 98     	call Reinicio
  78+ 9561
  79+ 9561              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9561
  81+ 9561 3A E3 89     	ld a,(Ctrl_3)
  82+ 9564 CB CF        	set 1,a
  83+ 9566 32 E3 89     	ld (Ctrl_3),a
  84+ 9569
  85+ 9569 18 08        	jr 3F
  86+ 956B              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 956B              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 956B              ; ------------------------------
  89+ 956B
  90+ 956B CD F8 94     1 call NextScan
  91+ 956E 22 84 89     	ld (Posicion_actual),hl
  92+ 9571 10 DA            djnz 2B
  93+ 9573 CD A3 AC     3 call Genera_coordenadas
  94+ 9576 C9           	ret
  95+ 9577
  96+ 9577              ; ******************************************************************************************************************************************************************************************
  97+ 9577              ;
  98+ 9577              ;   27/05/23
  99+ 9577              ;
 100+ 9577              ;	Mov_up
 101+ 9577              ;
 102+ 9577              ; 	Mueve el Sprite hacia arriba.
 103+ 9577              ;
 104+ 9577              ;
 105+ 9577              Mov_up
 106+ 9577
 107+ 9577 CD A8 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 957A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 957A 21 9E 89     	ld hl,Ctrl_0
 110+ 957D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 957F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 957F              ; 																		; _ en el caso de que no lo haya.
 113+ 957F 3A A7 89     	ld a,(Vel_up)
 114+ 9582 47           	ld b,a
 115+ 9583 2A 84 89     	ld hl,(Posicion_actual)
 116+ 9586 CD 85 AC     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9589 A7           	and a
 118+ 958A 20 10        	jr nz,1F
 119+ 958C
 120+ 958C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 958C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 958C
 123+ 958C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 958D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 958F 20 0B            jr nz,1F
 126+ 9591 7D               ld a,l
 127+ 9592 D6 20            sub $20
 128+ 9594 30 06            jr nc,1F
 129+ 9596 25               dec h
 130+ 9597
 131+ 9597              ; -----------------------------
 132+ 9597 CD 4B 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 959A              ;	call Reinicio
 134+ 959A              ; -----------------------------
 135+ 959A
 136+ 959A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 959C CD 07 95     1 call PreviousScan
 138+ 959F 22 84 89     	ld (Posicion_actual),hl
 139+ 95A2 10 E2            djnz 3B
 140+ 95A4 CD A3 AC     2 call Genera_coordenadas
 141+ 95A7 C9           	ret
 142+ 95A8
 143+ 95A8              ; -----------------------------
 144+ 95A8              ;
 145+ 95A8              ;	27/5/23
 146+ 95A8              ;
 147+ 95A8              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95A8              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95A8              ;
 150+ 95A8              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95A8              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95A8              ;
 153+ 95A8              ;	Modifica: A y (Puntero_objeto).
 154+ 95A8
 155+ 95A8 3A A3 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95AB CB 47        	bit 0,a
 157+ 95AD C8           	ret z
 158+ 95AE CB 87        	res 0,a
 159+ 95B0 32 A3 89     	ld (Ctrl_2),a
 160+ 95B3 2A BE 89     	ld hl,(Repone_puntero_objeto)
 161+ 95B6 22 86 89     	ld (Puntero_objeto),hl
 162+ 95B9 C9           	ret
 163+ 95BA
 164+ 95BA              ; ******************************************************************************************************************************************************************************************
 165+ 95BA              ;
 166+ 95BA              ;	19/10/22
 167+ 95BA              ;
 168+ 95BA              ;	Mov_right.
 169+ 95BA              ;
 170+ 95BA              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95BA              ;
 172+ 95BA
 173+ 95BA 3A 9E 89     Mov_right ld a,(Ctrl_0)
 174+ 95BD CB 77        	bit 6,a
 175+ 95BF 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95C1
 177+ 95C1 CD F9 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95C4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95C5
 180+ 95C5 21 9E 89     	ld hl,Ctrl_0
 181+ 95C8 CB E6        	set 4,(hl)
 182+ 95CA 18 52        	jr 8F
 183+ 95CC
 184+ 95CC 21 9E 89     10 ld hl,Ctrl_0
 185+ 95CF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95D1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95D1              ; 																	; _ en el caso de que no lo haya.
 188+ 95D1 3A 88 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95D4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95D6 20 46        	jr nz,8F
 191+ 95D8
 192+ 95D8 3A 8A 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95DB A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95DC 28 40        	jr z,8F
 195+ 95DE
 196+ 95DE              ; ---------- ---------- ----------
 197+ 95DE              ;
 198+ 95DE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95DE
 200+ 95DE 3A A6 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95E1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95E3 28 11        	jr z,1F
 203+ 95E5 38 06        	jr c,6F
 204+ 95E7 FE 04        	cp 4
 205+ 95E9 28 14        	jr z,7F
 206+ 95EB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95ED
 208+ 95ED              ; ---------- ---------- ----------
 209+ 95ED              ;
 210+ 95ED              ; Perfiles de velocidad
 211+ 95ED              ;
 212+ 95ED
 213+ 95ED 3A 8A 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95F0 FE FE        	cp $fe
 215+ 95F2 20 2A        	jr nz,8F
 216+ 95F4 18 10        	jr 3F
 217+ 95F6 3A 8A 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95F9 FE FD        	cp $fd
 219+ 95FB 20 21        	jr nz,8F
 220+ 95FD 18 07        	jr 3F
 221+ 95FF 3A 8A 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9602 FE FB        	cp $fb
 223+ 9604 20 18        	jr nz,8F
 224+ 9606
 225+ 9606              ; ---------- ---------- ----------
 226+ 9606
 227+ 9606              3
 228+ 9606 CD 39 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9609              ;	call Reinicio
 230+ 9609
 231+ 9609              ; ---------- ---------- ----------
 232+ 9609              ;
 233+ 9609              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9609
 235+ 9609 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 960B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 960C CD 25 96     	call DESPLZ_DER
 238+ 960F C1           	pop bc
 239+ 9610 10 F9        	djnz 5B
 240+ 9612 2A 84 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9615 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9616 22 84 89     	ld (Posicion_actual),hl
 243+ 9619 CD A3 AC     	call Genera_coordenadas
 244+ 961C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 961E
 246+ 961E              ; ---------- ---------- ----------
 247+ 961E
 248+ 961E 2A 84 89     8 ld hl,(Posicion_actual)
 249+ 9621 CD 25 96     	call DESPLZ_DER
 250+ 9624 C9           2 ret
 251+ 9625
 252+ 9625              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9625              ;
 254+ 9625              ;	22/9/22
 255+ 9625              ;
 256+ 9625
 257+ 9625 CD 34 96     DESPLZ_DER call Desplaza_derecha
 258+ 9628 CD 80 96         call modifica_parametros_1er_DESPLZ_2
 259+ 962B CD A9 96         call Ciclo_completo
 260+ 962E 21 9E 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9631 CB FE        	set 7,(hl)
 262+ 9633 C9           	ret
 263+ 9634
 264+ 9634              ; ******************************************************************************************************************************************************************************************
 265+ 9634              ;	15/02/23
 266+ 9634              ;
 267+ 9634
 268+ 9634 3A A6 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9637 47           	ld b,a
 270+ 9638 2A 90 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 963B 23           1 inc hl
 272+ 963C 23           	inc hl
 273+ 963D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 963F 22 90 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9642 CD 79 8C     	call Extrae_address
 276+ 9645 22 86 89     	ld (Puntero_objeto),hl
 277+ 9648
 278+ 9648              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9648
 280+ 9648              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9648              ; Cuántos movimientos hemos hecho ??
 282+ 9648              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9648
 284+ 9648 2A 8C 89     7 ld hl,(Indice_Sprite_der)
 285+ 964B EB           	ex de,hl
 286+ 964C A7           	and a
 287+ 964D ED 52        	sbc hl,de
 288+ 964F CB 3D        	srl l
 289+ 9651 3E 08        6 ld a,8
 290+ 9653 95           	sub l
 291+ 9654 30 1E        	jr nc,3F
 292+ 9656
 293+ 9656              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9656              ; B="0".
 295+ 9656
 296+ 9656 04           4 inc b
 297+ 9657 3C           	inc a
 298+ 9658 20 FC        	jr nz,4B
 299+ 965A 78           	ld a,b
 300+ 965B 08           	ex af,af
 301+ 965C 2A 8C 89     	ld hl,(Indice_Sprite_der)
 302+ 965F 23           5 inc hl
 303+ 9660 23           	inc hl
 304+ 9661 10 FC        	djnz 5B
 305+ 9663 22 90 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9666 CD 79 8C     	call Extrae_address
 307+ 9669 22 86 89     	ld (Puntero_objeto),hl
 308+ 966C
 309+ 966C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 966C              ; _(Posicion_actual).
 311+ 966C
 312+ 966C 21 84 89     	ld hl,Posicion_actual
 313+ 966F 34           	inc (hl)
 314+ 9670 08               ex af,af
 315+ 9671 6F           	ld l,a
 316+ 9672 18 DD        	jr 6B
 317+ 9674
 318+ 9674              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9674
 320+ 9674 47           3 ld b,a
 321+ 9675 2A 8E 89     	ld hl,(Indice_Sprite_izq)
 322+ 9678 23           2 inc hl
 323+ 9679 23           	inc hl
 324+ 967A 10 FC        	djnz 2B
 325+ 967C 22 92 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 967F C9           8 ret
 327+ 9680
 328+ 9680              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9680              ;
 330+ 9680              ;	24/7/22
 331+ 9680              ;
 332+ 9680              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9680              ;
 334+ 9680              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9680              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9680              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9680
 338+ 9680 3A 8A 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9683 A7           	and a
 340+ 9684 20 1F        	jr nz,1F
 341+ 9686 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9688 32 8A 89         ld (CTRL_DESPLZ),a
 343+ 968B
 344+ 968B 21 83 89     	ld hl,Columns
 345+ 968E 34           	inc (hl)
 346+ 968F 3A 96 89     	ld a,(Cuad_objeto)
 347+ 9692 E6 01        	and 1
 348+ 9694 28 0F        	jr z,1F
 349+ 9696 2A 84 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9699 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 969A 22 84 89     	ld (Posicion_actual),hl
 352+ 969D CD A3 AC     	call Genera_coordenadas
 353+ 96A0 CD 05 98     	call Inc_CTRL_DESPLZ
 354+ 96A3 18 03        	jr 2F
 355+ 96A5 CD 05 98     1 call Inc_CTRL_DESPLZ
 356+ 96A8 C9           2 ret
 357+ 96A9
 358+ 96A9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96A9              ;
 360+ 96A9              ;	24/7/22
 361+ 96A9              ;
 362+ 96A9              ;	Ciclo_completo.
 363+ 96A9              ;
 364+ 96A9              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96A9              ;
 366+ 96A9              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96A9              ; 	Decrementamos (Columns).
 368+ 96A9              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96A9              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96A9
 371+ 96A9
 372+ 96A9 3A 8A 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96AC FE FF        	cp $ff
 374+ 96AE 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96B0 E6 F0        	and $f0
 376+ 96B2 20 28        	jr nz,3F
 377+ 96B4
 378+ 96B4              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96B4
 380+ 96B4 3A 8A 89     	ld a,(CTRL_DESPLZ)
 381+ 96B7 47           	ld b,a
 382+ 96B8 3E F8        	ld a,$f8
 383+ 96BA 80           	add b
 384+ 96BB 32 8A 89     	ld (CTRL_DESPLZ),a
 385+ 96BE 18 1C        	jr 3F
 386+ 96C0 21 83 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96C3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96C4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96C5 32 8A 89     	ld (CTRL_DESPLZ),a
 390+ 96C8 3A 96 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96CB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96CD 20 0A        	jr nz,2F
 393+ 96CF 2A 84 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96D2 23           	inc hl
 395+ 96D3 22 84 89     	ld (Posicion_actual),hl
 396+ 96D6 CD A3 AC     	call Genera_coordenadas
 397+ 96D9
 398+ 96D9              ; Inicia el puntero de Sprite.
 399+ 96D9
 400+ 96D9 CD 8E 8C     2 call Inicia_puntero_objeto_der
 401+ 96DC C9           3 ret
 402+ 96DD
 403+ 96DD              ; ******************************************************************************************************************************************************************************************
 404+ 96DD              ;
 405+ 96DD              ;	15/02/23
 406+ 96DD              ;
 407+ 96DD              ;	Mov_left.
 408+ 96DD              ;
 409+ 96DD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96DD              ;
 411+ 96DD              Mov_left
 412+ 96DD
 413+ 96DD 21 9E 89     	ld hl,Ctrl_0
 414+ 96E0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96E2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96E2              ; 																	; _ en el caso de que no lo haya.
 417+ 96E2 3A 9E 89     	ld a,(Ctrl_0)
 418+ 96E5 CB 77        	bit 6,a
 419+ 96E7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96E9
 421+ 96E9 CD FF 97     	call Stop_Amadeus_left
 422+ 96EC C8           	ret z
 423+ 96ED 20 4A        	jr nz,8F
 424+ 96EF
 425+ 96EF 3A 88 89     11 ld a,(Coordenada_X)
 426+ 96F2 A7           	and a
 427+ 96F3 20 44        	jr nz,8F
 428+ 96F5
 429+ 96F5 3A 8A 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96F8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96F9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96FB
 433+ 96FB              ; ---------- ---------- ----------
 434+ 96FB
 435+ 96FB 3A A5 89     	ld a,(Vel_left)
 436+ 96FE FE 02        	cp 2
 437+ 9700 28 0F        	jr z,1F
 438+ 9702 38 04        	jr c,6F
 439+ 9704 FE 04        	cp 4
 440+ 9706 28 12        	jr z,7F
 441+ 9708
 442+ 9708              ; ---------- ---------- ----------
 443+ 9708
 444+ 9708 3A 8A 89     6 ld a,(CTRL_DESPLZ)
 445+ 970B FE F8        	cp $f8
 446+ 970D 20 2A        	jr nz,8F
 447+ 970F 18 10        	jr 4F
 448+ 9711 3A 8A 89     1 ld a,(CTRL_DESPLZ)
 449+ 9714 FE F9        	cp $f9
 450+ 9716 20 21        	jr nz,8F
 451+ 9718 18 07        	jr 4F
 452+ 971A 3A 8A 89     7 ld a,(CTRL_DESPLZ)
 453+ 971D FE FB        	cp $fb
 454+ 971F 20 18        	jr nz,8F
 455+ 9721
 456+ 9721              ; ---------- ---------- ----------
 457+ 9721
 458+ 9721              4
 459+ 9721 CD 27 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9724              ;	call Reinicio
 461+ 9724
 462+ 9724              ; ---------- ---------- ----------
 463+ 9724
 464+ 9724 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9726 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9727
 467+ 9727              ;	ld hl,(Indice_Sprite_izq)
 468+ 9727              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9727
 470+ 9727 CD 40 97     	call DESPLZ_IZQ
 471+ 972A C1           	pop bc
 472+ 972B 10 F9        	djnz 5B
 473+ 972D 2A 84 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9730 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9731 22 84 89     	ld (Posicion_actual),hl
 476+ 9734 CD A3 AC     	call Genera_coordenadas
 477+ 9737 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9739
 479+ 9739              ; ---------- ---------- ----------
 480+ 9739
 481+ 9739              ; Movemos, no hay recolocación.
 482+ 9739
 483+ 9739 2A 84 89     8 ld hl,(Posicion_actual)
 484+ 973C CD 40 97     	call DESPLZ_IZQ
 485+ 973F C9           2 ret
 486+ 9740
 487+ 9740              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9740              ;
 489+ 9740              ;	22/9/22
 490+ 9740
 491+ 9740              DESPLZ_IZQ
 492+ 9740
 493+ 9740 CD 4F 97     	call Desplaza_izquierda
 494+ 9743 CD 9B 97         call modifica_parametros_1er_DESPLZ
 495+ 9746 CD C3 97     	call Ciclo_completo_2
 496+ 9749 21 9E 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 974C CB BE        	res 7,(hl)
 498+ 974E C9           	ret
 499+ 974F
 500+ 974F              Desplaza_izquierda
 501+ 974F
 502+ 974F 3A A5 89     	ld a,(Vel_left)
 503+ 9752 47           	ld b,a
 504+ 9753 2A 92 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9756 23           1 inc hl
 506+ 9757 23           	inc hl
 507+ 9758 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 975A 22 92 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 975D CD 79 8C     	call Extrae_address
 510+ 9760 22 86 89     	ld (Puntero_objeto),hl
 511+ 9763
 512+ 9763              ; Modifica (Puntero_DESPLZ_der).
 513+ 9763
 514+ 9763              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9763              ; Cuántos movimientos hemos hecho ??
 516+ 9763              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9763
 518+ 9763 2A 8E 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9766 EB           	ex de,hl
 520+ 9767 A7           	and a
 521+ 9768 ED 52        	sbc hl,de
 522+ 976A CB 3D        	srl l
 523+ 976C 3E 08        6 ld a,8
 524+ 976E 95           	sub l
 525+ 976F 30 1E        	jr nc,3F
 526+ 9771
 527+ 9771              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9771              ; B="0".
 529+ 9771
 530+ 9771 04           4 inc b
 531+ 9772 3C           	inc a
 532+ 9773 20 FC        	jr nz,4B
 533+ 9775 78           	ld a,b
 534+ 9776 08           	ex af,af
 535+ 9777 2A 8E 89     	ld hl,(Indice_Sprite_izq)
 536+ 977A 23           5 inc hl
 537+ 977B 23           	inc hl
 538+ 977C 10 FC        	djnz 5B
 539+ 977E 22 92 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9781 CD 79 8C     	call Extrae_address
 541+ 9784 22 86 89     	ld (Puntero_objeto),hl
 542+ 9787
 543+ 9787              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9787              ; _(Posicion_actual).
 545+ 9787
 546+ 9787 21 84 89     	ld hl,Posicion_actual
 547+ 978A 35           	dec (hl)
 548+ 978B 08           	ex af,af
 549+ 978C 6F           	ld l,a
 550+ 978D 18 DD        	jr 6B
 551+ 978F
 552+ 978F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 978F
 554+ 978F 47           3 ld b,a
 555+ 9790 2A 8C 89     	ld hl,(Indice_Sprite_der)
 556+ 9793 23           2 inc hl
 557+ 9794 23           	inc hl
 558+ 9795 10 FC        	djnz 2B
 559+ 9797 22 90 89     	ld (Puntero_DESPLZ_der),hl
 560+ 979A C9           8 ret
 561+ 979B
 562+ 979B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 979B              ;
 564+ 979B              ;	modifica_parametros_1er_DESPLZ
 565+ 979B              ;
 566+ 979B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 979B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 979B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 979B
 570+ 979B 3A 8A 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 979E A7           	and a
 572+ 979F 20 1E        	jr nz,1F
 573+ 97A1 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97A2 32 8A 89         ld (CTRL_DESPLZ),a
 575+ 97A5 21 83 89     	ld hl,Columns
 576+ 97A8 34           	inc (hl)
 577+ 97A9 3A 96 89     	ld a,(Cuad_objeto)
 578+ 97AC E6 01        	and 1
 579+ 97AE 20 0F        	jr nz,1F
 580+ 97B0 2A 84 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97B3 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97B4 22 84 89     	ld (Posicion_actual),hl
 583+ 97B7 CD A3 AC     	call Genera_coordenadas
 584+ 97BA CD 16 98     	call Dec_CTRL_DESPLZ
 585+ 97BD 18 03        	jr 2F
 586+ 97BF CD 16 98     1 call Dec_CTRL_DESPLZ
 587+ 97C2 C9           2 ret
 588+ 97C3
 589+ 97C3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97C3
 591+ 97C3 3A 8A 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97C6 FE F7        	cp $f7
 593+ 97C8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97CA 30 2C        	jr nc,3F
 595+ 97CC
 596+ 97CC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97CC
 598+ 97CC 06 00        	ld b,0
 599+ 97CE 04           4 inc b
 600+ 97CF 3C           	inc a
 601+ 97D0 FE F7        	cp $f7
 602+ 97D2 20 FA        	jr nz,4B
 603+ 97D4 3E FF        	ld a,$ff
 604+ 97D6 90           	sub b
 605+ 97D7 32 8A 89     	ld (CTRL_DESPLZ),a
 606+ 97DA 18 1C        	jr 3F
 607+ 97DC
 608+ 97DC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97DC
 610+ 97DC 21 83 89     1 ld hl,Columns
 611+ 97DF 35           	dec (hl)
 612+ 97E0 AF           	xor a
 613+ 97E1 32 8A 89     	ld (CTRL_DESPLZ),a
 614+ 97E4 3A 96 89     	ld a,(Cuad_objeto)
 615+ 97E7 E6 01        	and 1
 616+ 97E9 28 0A        	jr z,2F
 617+ 97EB 2A 84 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97EE 2B           	dec hl
 619+ 97EF 22 84 89     	ld (Posicion_actual),hl
 620+ 97F2 CD A3 AC     	call Genera_coordenadas
 621+ 97F5
 622+ 97F5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97F5
 624+ 97F5 CD A1 8C     2 call Inicia_puntero_objeto_izq
 625+ 97F8 C9           3 ret
 626+ 97F9
 627+ 97F9              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97F9              ;
 629+ 97F9              ;	19/10/22
 630+ 97F9              ;
 631+ 97F9              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97F9              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97F9
 634+ 97F9 3A 88 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97FC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97FE C9           	ret
 637+ 97FF
 638+ 97FF              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97FF              ;
 640+ 97FF              ;	19/10/22
 641+ 97FF              ;
 642+ 97FF              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97FF              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97FF
 645+ 97FF 3A 88 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9802 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9804 C9           	ret
 648+ 9805
 649+ 9805              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9805              ;
 651+ 9805              ;	24/7/22
 652+ 9805              ;
 653+ 9805              ;	Inc_CTRL_DESPLZ
 654+ 9805              ;
 655+ 9805              ;
 656+ 9805              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9805
 658+ 9805 21 8A 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9808 3A A6 89     	ld a,(Vel_right)
 660+ 980B A7           	and a
 661+ 980C 28 06        	jr z,1F
 662+ 980E 47           	ld b,a
 663+ 980F 34           3 inc (hl)
 664+ 9810 10 FD        	djnz 3B
 665+ 9812 18 01        	jr 2F
 666+ 9814 34           1 inc (hl)
 667+ 9815 C9           2 ret
 668+ 9816
 669+ 9816              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9816              ;
 671+ 9816              ;	5/2/23
 672+ 9816              ;
 673+ 9816              ;	Dec_CTRL_DESPLZ
 674+ 9816              ;
 675+ 9816              ;
 676+ 9816              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9816
 678+ 9816 21 8A 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9819 3A A5 89     	ld a,(Vel_left)
 680+ 981C A7           	and a
 681+ 981D 28 06        	jr z,1F
 682+ 981F 47           	ld b,a
 683+ 9820 35           3 dec (hl)
 684+ 9821 10 FD        	djnz 3B
 685+ 9823 18 01        	jr 2F
 686+ 9825 35           1 dec (hl)
 687+ 9826 C9           2 ret
 688+ 9827
 689+ 9827              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9827
 691+ 9827 2A 84 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 982A 01 1F 00     	ld bc,31
 693+ 982D A7           	and a
 694+ 982E ED 4A        	adc hl,bc
 695+ 9830 22 84 89     	ld (Posicion_actual),hl
 696+ 9833 21 9E 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9836 CB C6        	set 0,(hl)
 698+ 9838 C9           	ret
 699+ 9839
 700+ 9839              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9839
 702+ 9839 2A 84 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 983C 01 1F 00     	ld bc,31
 704+ 983F A7           	and a
 705+ 9840 ED 42        	sbc hl,bc
 706+ 9842 22 84 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9845 21 9E 89     	ld hl,Ctrl_0
 708+ 9848 CB CE        	set 1,(hl)
 709+ 984A C9           	ret
 710+ 984B
 711+ 984B              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 984B
 713+ 984B 24           Reaparece_abajo inc h
 714+ 984C 01 E0 17     	ld bc,$17e0
 715+ 984F A7           	and a
 716+ 9850 ED 4A        	adc hl,bc
 717+ 9852 22 84 89     	ld (Posicion_actual),hl
 718+ 9855 21 9E 89     	ld hl,Ctrl_0
 719+ 9858 CB D6        	set 2,(hl)
 720+ 985A C9           	ret
 721+ 985B
 722+ 985B              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 985B
 724+ 985B 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 985E A7           	and a
 726+ 985F ED 42        	sbc hl,bc
 727+ 9861 22 84 89     	ld (Posicion_actual),hl
 728+ 9864 21 9E 89     	ld hl,Ctrl_0
 729+ 9867 CB DE        	set 3,(hl)
 730+ 9869 C9           	ret
 731+ 986A
 732+ 986A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 986A              ;
 734+ 986A              ;	15/07/23
 735+ 986A
 736+ 986A              Reinicio
 737+ 986A
 738+ 986A              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 986A
 740+ 986A AF           	xor a
 741+ 986B 21 B5 89     	ld hl,Puntero_indice_mov_bucle
 742+ 986E CD 8C 98     	call Limpia_contenido_hl
 743+ 9871
 744+ 9871 21 84 89     	ld hl,Posicion_actual
 745+ 9874 CD 8C 98     	call Limpia_contenido_hl
 746+ 9877
 747+ 9877 CD D0 AA     	call Inicializa_Puntero_indice_mov
 748+ 987A CD 58 99     	call Inicia_Puntero_mov
 749+ 987D
 750+ 987D 21 B7 89     	ld hl,Incrementa_puntero
 751+ 9880 06 05        	ld b,5
 752+ 9882 77           1 ld (hl),a
 753+ 9883 23           	inc hl
 754+ 9884 10 FC        	djnz 1B
 755+ 9886
 756+ 9886 21 A3 89     	ld hl,Ctrl_2
 757+ 9889 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 988B
 759+ 988B C9           	ret
 760+ 988C
 761+ 988C 77           Limpia_contenido_hl	ld (hl),a
 762+ 988D 23           	inc hl
 763+ 988E 77           	ld (hl),a
 764+ 988F C9           	ret
 765+ 9890
 766+ 9890
# file closed: Direcciones.asm
2022  9890              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9890              ; ----- ----- ----- ----- -----
   2+ 9890              ;
   3+ 9890              ;   28/12/23
   4+ 9890
   5+ 9890              Movimiento
   6+ 9890
   7+ 9890              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9890
   9+ 9890 3A A3 89         ld a,(Ctrl_2)
  10+ 9893 CB 57            bit 2,a
  11+ 9895 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9897
  13+ 9897 2A B3 89         ld hl,(Puntero_mov)
  14+ 989A 7E               ld a,(hl)
  15+ 989B
  16+ 989B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 989B
  18+ 989B              Inicia_desplazamiento.
  19+ 989B
  20+ 989B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 989B
  22+ 989B CD 8E 99         call Ajusta_velocidad_desplazamiento
  23+ 989E
  24+ 989E              ; Iniciamos (Repetimos_mov).
  25+ 989E
  26+ 989E 7E               ld a,(hl)
  27+ 989F E6 0F            and $0f
  28+ 98A1 32 B9 89         ld (Repetimos_desplazamiento),a
  29+ 98A4 32 BA 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98A7
  31+ 98A7              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98A7
  33+ 98A7 23               inc hl
  34+ 98A8 7E               ld a,(hl)
  35+ 98A9 32 BC 89         ld (Cola_de_desplazamiento),a
  36+ 98AC 2B               dec hl
  37+ 98AD
  38+ 98AD 21 A3 89         ld hl,Ctrl_2
  39+ 98B0 CB D6            set 2,(hl)
  40+ 98B2
  41+ 98B2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98B2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98B2
  44+ 98B2              Desplazamiento_iniciado
  45+ 98B2
  46+ 98B2 CD 62 99         call Aplica_desplazamiento
  47+ 98B5
  48+ 98B5              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98B5
  50+ 98B5 3A E3 89         ld a,(Ctrl_3)
  51+ 98B8 CB 4F            bit 1,a
  52+ 98BA C0               ret nz
  53+ 98BB
  54+ 98BB 21 B9 89     3 ld hl,Repetimos_desplazamiento
  55+ 98BE 35               dec (hl)
  56+ 98BF C0               ret nz
  57+ 98C0
  58+ 98C0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98C0              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98C0              ; Analiza (Cola_de_desplazamiento).
  61+ 98C0
  62+ 98C0 3A BC 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98C3 A7               and a
  64+ 98C4 CC B7 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98C7 28 30            jr z,Reinicia_el_movimiento
  66+ 98C9
  67+ 98C9 FE FF            cp $ff
  68+ 98CB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98CD
  70+ 98CD FE FE            cp $fe
  71+ 98CF CC 3C 99         call z,Fijamos_bucle
  72+ 98D2 28 25            jr z,Reinicia_el_movimiento
  73+ 98D4
  74+ 98D4 FE FD            cp $fd
  75+ 98D6 20 11            jr nz,1F
  76+ 98D8
  77+ 98D8              ; ---
  78+ 98D8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98D8
  80+ 98D8 3A A3 89         ld a,(Ctrl_2)
  81+ 98DB CB 5F            bit 3,a
  82+ 98DD 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98DF
  84+ 98DF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98DF
  86+ 98DF 21 A3 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98E2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98E4
  89+ 98E4 CD 4D 99         call Inicia_Repetimos_movimiento
  90+ 98E7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98E9              ; ---
  92+ 98E9
  93+ 98E9 FE 01        1 cp 1
  94+ 98EB CA 26 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98EE
  96+ 98EE 3D               dec a
  97+ 98EF 32 BC 89         ld (Cola_de_desplazamiento),a
  98+ 98F2
  99+ 98F2 3A BA 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98F5 32 B9 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98F8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98F8 C9               ret
 103+ 98F9
 104+ 98F9              Reinicia_el_movimiento
 105+ 98F9
 106+ 98F9 3A A3 89         ld a,(Ctrl_2)
 107+ 98FC CB 5F            bit 3,a
 108+ 98FE 28 1B            jr z,2F
 109+ 9900
 110+ 9900              ; (Cola_de_desplazamiento)="254".
 111+ 9900
 112+ 9900 21 BB 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9903 35               dec (hl)
 114+ 9904 20 15            jr nz,2F
 115+ 9906
 116+ 9906              ; Fin de las repeticiones del último movimiento.
 117+ 9906
 118+ 9906 21 A3 89         ld hl,Ctrl_2
 119+ 9909 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 990B
 121+ 990B 2A B3 89         ld hl,(Puntero_mov)
 122+ 990E 23               inc hl
 123+ 990F 23               inc hl
 124+ 9910 23               inc hl
 125+ 9911 22 B3 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9914              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9914 7E               ld a,(hl)
 128+ 9915 32 BC 89         ld (Cola_de_desplazamiento),a
 129+ 9918
 130+ 9918 C3 C0 98         jp Cola
 131+ 991B
 132+ 991B CD 58 99     2 call Inicia_Puntero_mov
 133+ 991E
 134+ 991E 21 A3 89         ld hl,Ctrl_2
 135+ 9921 CB 96            res 2,(hl)
 136+ 9923
 137+ 9923 C3 90 98         jp Movimiento
 138+ 9926
 139+ 9926              Siguiente_desplazamiento
 140+ 9926
 141+ 9926              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9926              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9926
 144+ 9926 21 A3 89         ld hl,Ctrl_2
 145+ 9929 CB 96            res 2,(hl)
 146+ 992B
 147+ 992B 2A B3 89         ld hl,(Puntero_mov)
 148+ 992E 23               inc hl
 149+ 992F 23               inc hl
 150+ 9930 22 B3 89         ld (Puntero_mov),hl
 151+ 9933
 152+ 9933 7E               ld a,(hl)
 153+ 9934 A7               and a
 154+ 9935 CC B7 99         call z,Incrementa_Puntero_indice_mov
 155+ 9938 CA F9 98         jp z,Reinicia_el_movimiento
 156+ 993B
 157+ 993B C9               ret
 158+ 993C
 159+ 993C              ; Subrutinas -----------------------------------------
 160+ 993C              ; ---------- --------- --------- ---------- ----------
 161+ 993C              ;
 162+ 993C              ;   24/07/23
 163+ 993C              ;
 164+ 993C              ;   Fijamos_bucle
 165+ 993C              ;
 166+ 993C              ;
 167+ 993C
 168+ 993C              Fijamos_bucle
 169+ 993C
 170+ 993C 3A B7 89         ld a,(Incrementa_puntero)
 171+ 993F 3C               inc a
 172+ 9940 32 B8 89         ld (Incrementa_puntero_backup),a
 173+ 9943
 174+ 9943 CD B7 99         call Incrementa_Puntero_indice_mov
 175+ 9946 2A B1 89         ld hl,(Puntero_indice_mov)
 176+ 9949 22 B5 89         ld (Puntero_indice_mov_bucle),hl
 177+ 994C C9               ret
 178+ 994D
 179+ 994D              ; ---------- --------- --------- ---------- ----------
 180+ 994D              ;
 181+ 994D              ;   07/7/23
 182+ 994D              ;
 183+ 994D              ;   Inicia_Repetimos_movimiento
 184+ 994D              ;
 185+ 994D              ;
 186+ 994D
 187+ 994D              Inicia_Repetimos_movimiento
 188+ 994D
 189+ 994D              ; Iniciamos (Repetimos_movimiento).
 190+ 994D
 191+ 994D DD 2A B3 89      ld ix,(Puntero_mov)
 192+ 9951 DD 7E 02         ld a,(ix+2)
 193+ 9954 32 BB 89         ld (Repetimos_movimiento),a
 194+ 9957
 195+ 9957 C9               ret
 196+ 9958
 197+ 9958              ; ---------- --------- --------- ---------- ----------
 198+ 9958              ;
 199+ 9958              ;   26/6/23
 200+ 9958              ;
 201+ 9958              ;   Inicia_Puntero_mov
 202+ 9958              ;
 203+ 9958              ;
 204+ 9958
 205+ 9958 2A B1 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 995B CD 79 8C         call Extrae_address
 207+ 995E 22 B3 89         ld (Puntero_mov),hl
 208+ 9961 C9               ret
 209+ 9962
 210+ 9962              ; ---------- --------- --------- ---------- ----------
 211+ 9962              ;
 212+ 9962              ;   27/06/23
 213+ 9962              ;
 214+ 9962              ;   Aplica_movimiento.
 215+ 9962
 216+ 9962              Aplica_desplazamiento
 217+ 9962
 218+ 9962              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9962
 220+ 9962 2A B3 89         ld hl, (Puntero_mov)
 221+ 9965
 222+ 9965 7E               ld a,(hl)
 223+ 9966 E6 F0            and $f0
 224+ 9968 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9969
 226+ 9969 CB 7E            bit 7,(hl)
 227+ 996B 28 03            jr z,1F
 228+ 996D CD 77 95         call Mov_up
 229+ 9970 2A B3 89     1 ld hl, (Puntero_mov)
 230+ 9973 CB 76            bit 6,(hl)
 231+ 9975 28 03            jr z,2F
 232+ 9977 CD 3E 95         call Mov_down
 233+ 997A
 234+ 997A              ; Se ha aplicado reinicio ???
 235+ 997A              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 997A
 237+ 997A              ;    ld a,(Ctrl_3)
 238+ 997A              ;    bit 1,a
 239+ 997A              ;    ret nz
 240+ 997A
 241+ 997A 2A B3 89     2 ld hl, (Puntero_mov)
 242+ 997D CB 6E            bit 5,(hl)
 243+ 997F 28 03            jr z,3F
 244+ 9981 CD DD 96         call Mov_left
 245+ 9984 2A B3 89     3 ld hl, (Puntero_mov)
 246+ 9987 CB 66            bit 4,(hl)
 247+ 9989 C8               ret z
 248+ 998A CD BA 95         call Mov_right
 249+ 998D C9               ret
 250+ 998E
 251+ 998E              ; ---------- --------- --------- ---------- ----------
 252+ 998E              ;
 253+ 998E              ;   26/06/23
 254+ 998E              ;
 255+ 998E              ;   Ajusta_velocidad_desplazamiento.
 256+ 998E
 257+ 998E              Ajusta_velocidad_desplazamiento
 258+ 998E
 259+ 998E              ; 1er byte de la cadena de movimiento.
 260+ 998E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 998E
 262+ 998E CD AC 99         call Extrae_nibble_alto
 263+ 9991
 264+ 9991 32 A7 89         ld (Vel_up),a
 265+ 9994 79               ld a,c
 266+ 9995 E6 0F            and $0f
 267+ 9997 32 A8 89         ld (Vel_down),a
 268+ 999A
 269+ 999A              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 999A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 999A
 272+ 999A 23               inc hl
 273+ 999B CD AC 99         call Extrae_nibble_alto
 274+ 999E
 275+ 999E 32 A5 89         ld (Vel_left),a
 276+ 99A1 79               ld a,c
 277+ 99A2 E6 0F            and $0f
 278+ 99A4 32 A6 89         ld (Vel_right),a
 279+ 99A7
 280+ 99A7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99A7
 282+ 99A7 23               inc hl
 283+ 99A8 22 B3 89         ld (Puntero_mov),hl
 284+ 99AB C9               ret
 285+ 99AC
 286+ 99AC 06 04        Extrae_nibble_alto ld b,4
 287+ 99AE 7E               ld a,(hl)
 288+ 99AF 4F               ld c,a
 289+ 99B0 E6 F0            and $f0
 290+ 99B2 CB 3F        1 srl a
 291+ 99B4 10 FC            djnz 1B
 292+ 99B6 C9               ret
 293+ 99B7
 294+ 99B7              ; ---------- --------- --------- ---------- ----------
 295+ 99B7              ;
 296+ 99B7              ;   5/7/23
 297+ 99B7              ;
 298+ 99B7              ;   Incrementa_Puntero_indice_mov
 299+ 99B7
 300+ 99B7              Incrementa_Puntero_indice_mov
 301+ 99B7
 302+ 99B7 21 B7 89         ld hl,Incrementa_puntero
 303+ 99BA 34               inc (hl)
 304+ 99BB
 305+ 99BB 2A B1 89         ld hl,(Puntero_indice_mov)
 306+ 99BE 01 02 00         ld bc,2
 307+ 99C1 A7               and a
 308+ 99C2 09               add hl,bc
 309+ 99C3 22 B1 89         ld (Puntero_indice_mov),hl
 310+ 99C6
 311+ 99C6 7E               ld a,(hl)
 312+ 99C7 A7               and a
 313+ 99C8
 314+ 99C8              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99C8
 316+ 99C8              ;    jr z,$
 317+ 99C8
 318+ 99C8              ;! Reinicia el Patrón de movimiento.
 319+ 99C8
 320+ 99C8 CC CD 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99CB
 322+ 99CB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99CC
 324+ 99CC C9               ret
 325+ 99CD
 326+ 99CD              ; ---------- --------- --------- ---------- ----------
 327+ 99CD              ;
 328+ 99CD              ;   15/01/24
 329+ 99CD              ;
 330+ 99CD              ;   Inicializa_Puntero_indice_mov
 331+ 99CD
 332+ 99CD              Inicializa_Puntero_indice_mov_2
 333+ 99CD
 334+ 99CD              ; Existe etiqueta de bucle principal???
 335+ 99CD
 336+ 99CD 2A B5 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99D0 24               inc h
 338+ 99D1 25               dec h
 339+ 99D2 28 05            jr z,2F
 340+ 99D4
 341+ 99D4 22 B1 89         ld (Puntero_indice_mov),hl
 342+ 99D7 18 14            jr 3F
 343+ 99D9
 344+ 99D9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99D9
 346+ 99D9 3A B7 89     2 ld a,(Incrementa_puntero)
 347+ 99DC 47               ld b,a
 348+ 99DD
 349+ 99DD 2A B1 89         ld hl,(Puntero_indice_mov)
 350+ 99E0 2B           1 dec hl
 351+ 99E1 2B               dec hl
 352+ 99E2 10 FC            djnz 1B
 353+ 99E4 22 B1 89         ld (Puntero_indice_mov),hl
 354+ 99E7
 355+ 99E7 AF               xor a
 356+ 99E8 32 B7 89         ld (Incrementa_puntero),a
 357+ 99EB 18 06            jr 4F
 358+ 99ED
 359+ 99ED 3A B8 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99F0 32 B7 89         ld (Incrementa_puntero),a
 361+ 99F3 C9           4 ret
 362+ 99F4
 363+ 99F4              ; ----------------------------------------------------------------------
 364+ 99F4              ;
 365+ 99F4              ;   30/01/24
 366+ 99F4              ;
 367+ 99F4              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99F4
 369+ 99F4 3A 81 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99F7 CD 04 AC         call Calcula_salto_en_BC
 371+ 99FA 21 A9 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99FD A7               and a
 373+ 99FE ED 4A            adc hl,bc
 374+ 9A00 C9               ret
 375+ 9A01
 376+ 9A01              ; ----------------------------------------------------------------------
 377+ 9A01              ;
 378+ 9A01              ;   30/01/24
 379+ 9A01              ;
 380+ 9A01              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A01              ;
 382+ 9A01              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A01
 384+ 9A01 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A02 23               inc hl
 386+ 9A03 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A04 69               ld l,c
 388+ 9A05 60               ld h,b
 389+ 9A06 22 9C 89         ld (Contador_de_mov_masticados),hl
 390+ 9A09 C9               ret
 391+ 9A0A
# file closed: Movimiento.asm
2023  9A0A
2024  9A0A
2025  9A0A              ;	include "Disparo.asm"
2026  9A0A
2027  9A0A
2028  9A0A              	SAVESNA "Pruebas.sna", START
2029  9A0A
2030  9A0A
2031  9A0A
2032  9A0A
# file closed: Banco_de_pruebas.asm
