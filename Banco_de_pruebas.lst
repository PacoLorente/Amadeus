# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  40  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  41  FE01
  42  FE01              ;																		; Scanlines_album.
  43  FE01
  44  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  45  FE01
  46  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  47  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  48  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  49  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  50  FE01
  51  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  52  FE01              ;
  53  FE01              ;	13/08/24
  54  FE01              ;
  55  FE01
  56  FE01              	org $82f4
  57  82F4
  58  82F4 F5           	push af
  59  82F5 E5           	push hl
  60  82F6
  61  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  62  82F6 21 27 8C     	ld hl,Ctrl_3
  63  82F9 CB 46        	bit 0,(hl)
  64  82FB 28 FE        	jr z,$
  65  82FD              ;! -------------------
  66  82FD
  67  82FD              ; Disparos.
  68  82FD
  69  82FD CD C0 A0     	call Pinta_disparos
  70  8300
  71  8300              ; Shield -----------------------
  72  8300
  73  8300              Temporizacion_shield
  74  8300
  75  8300 21 51 8C     	ld hl,Shield
  76  8303 7E           	ld a,(hl)
  77  8304 A7           	and a
  78  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  79  8307
  80  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  81  8308
  82  8308 23           	inc hl
  83  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  84  830A
  85  830A 20 17        	jr nz,Incrementa_FRAMES
  86  830C
  87  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  88  830C
  89  830C              Cambio_de_estado
  90  830C
  91  830C              ;	Indica cambio de estado.
  92  830C
  93  830C 23           	inc hl						;	Sitúa en (Shield_3).
  94  830D
  95  830D CB 5E        	bit 3,(hl)
  96  830F 28 05        	jr z,2F
  97  8311
  98  8311 CD 05 91     	call Inicia_Shield
  99  8314
 100  8314 18 0D        	jr Incrementa_FRAMES
 101  8316
 102  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 103  8318
 104  8318              ;	Carga en (Shield_2) la siguiente temporización.
 105  8318
 106  8318 2A 4F 8C     	ld hl,(Puntero_datos_shield)
 107  831B 23           	inc hl
 108  831C 22 4F 8C     	ld (Puntero_datos_shield),hl
 109  831F 7E           	ld a,(hl)
 110  8320 32 52 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 111  8323
 112  8323              Incrementa_FRAMES
 113  8323
 114  8323 2A 78 5C     	ld hl,(FRAMES)
 115  8326 23           	inc hl
 116  8327 22 78 5C     	ld (FRAMES),hl
 117  832A
 118  832A 7C           	ld a,h
 119  832B B5           	or l
 120  832C 20 04        	jr nz,1F
 121  832E
 122  832E 21 7A 5C     	ld hl,FRAMES_3
 123  8331 34           	inc (hl)
 124  8332
 125  8332 D5           1 push de
 126  8333 C5           	push bc
 127  8334
 128  8334 CD 15 91     	call Actualiza_pantalla
 129  8337
 130  8337 C1           	pop bc
 131  8338 D1           	pop de
 132  8339 E1           	pop hl
 133  833A F1           	pop af
 134  833B
 135  833B FB           	ei
 136  833C
 137  833C C9           	ret
 138  833D
 139  833D              ; --------------------------------------------------------------------------------
 140  833D
 141  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_de_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 142  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 143  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 144  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A6 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 05           Nivel_1 db 5									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA5 01
  18+ 8BA6
  19+ 8BA6 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA7 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAF 01 02
  22+ 8BB1 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB5 01 02
  23+ 8BB7
# file closed: Niveles.asm
 145  8BB7
 146  8BB7              ; --------------------------------------------------------------------------------
 147  8BB7              ;
 148  8BB7              ; 12/05/24
 149  8BB7              ;
 150  8BB7              ; Parámetros DRAW.
 151  8BB7              ;
 152  8BB7
 153  8BB7              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 154  8BB7
 155  8BB7 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8BB8              ;															- Patrón de movimiento.
 157  8BB8 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8BB9 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8BBA
 160  8BBA 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 161  8BBB              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 162  8BBB
 163  8BBB              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 164  8BBB              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 165  8BBB              ; Ejemplos.
 166  8BBB
 167  8BBB              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 168  8BBB              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 169  8BBB              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 170  8BBB              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 171  8BBB              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 172  8BBB
 173  8BBB 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 174  8BBC              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 175  8BBC              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 176  8BBC
 177  8BBC 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 178  8BBE              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 179  8BBE
 180  8BBE 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 181  8BC0
 182  8BC0              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 183  8BC0
 184  8BC0 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC2              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC2
 187  8BC2              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC2
 189  8BC2 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC3              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC3              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC3              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC3              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC3
 195  8BC3 00           Ctrl_2 db 0
 196  8BC4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC4              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC4              ;
 204  8BC4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC4              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC4              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC4              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC4              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC4              ;														BIT 4, ???
 210  8BC4              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC4
 212  8BC4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC5              ;
 218  8BC5              ; 														DESCRIPCIÖN:
 219  8BC5              ;
 220  8BC5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC5              ;
 234  8BC5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC5
 238  8BC5              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC5
 240  8BC5 00           Filas db 0												; Filas. [DRAW]
 241  8BC6 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BC7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BC9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BCB
 245  8BCB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BCB
 247  8BCB 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BCC              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BCC              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BCC
 251  8BCC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BCC
 253  8BCC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BCC              ;
 255  8BCC              ;	COLORES: 0 ..... NEGRO
 256  8BCC              ;    		 1 ..... AZUL
 257  8BCC              ; 			 2 ..... ROJO
 258  8BCC              ;			 3 ..... MAGENTA
 259  8BCC              ; 			 4 ..... VERDE
 260  8BCC              ; 			 5 ..... CIAN
 261  8BCC              ;			 6 ..... AMARILLO
 262  8BCC              ; 			 7 ..... BLANCO
 263  8BCC
 264  8BCC 00 00        Indice_Sprite_der defw 0
 265  8BCE 00 00        Indice_Sprite_izq defw 0
 266  8BD0 00 00        Puntero_DESPLZ_der defw 0
 267  8BD2 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD4
 269  8BD4 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BD6 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BD7 00           Columnas db 0
 272  8BD8 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BDA              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDA 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BDB
 276  8BDB              ; variables de control general.
 277  8BDB
 278  8BDB 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BDC
 280  8BDC              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BDC
 282  8BDC              Perfiles_de_velocidad
 283  8BDC
 284  8BDC 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BDD 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BDE 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BDF 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BE0
 289  8BE0              ; Contadores de 16 bits.
 290  8BE0
 291  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BE8
 296  8BE8              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BE8
 298  8BE8 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BEA 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BEC 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BEE              ;
 302  8BEE              ;
 303  8BEE 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BEF              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BEF              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BEF 00           Incrementa_puntero_backup db 0
 307  8BF0 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BF1              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BF1 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF2 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF3 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF4              ;
 313  8BF4              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF4              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF4              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF4              ;
 317  8BF4              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF4              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF4              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF4              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF4              ;
 322  8BF4              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF4              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF4              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF4
 326  8BF4 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF5
 328  8BF5              ;														DESCRIPCIÓN:
 329  8BF5              ;
 330  8BF5              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF5              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF5              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF5              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF5              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF5              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF5
 337  8BF5              ;														BIT 3, Recarga de nueva oleada.
 338  8BF5              ;														BIT 4, Recarga de nueva oleada.
 339  8BF5              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF5              ;														BIT 6, **** Frame completo.
 341  8BF5              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF5
 343  8BF5 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BF7              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BF7              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BF7              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BF7
 348  8BF7              ; Gestión de ENTIDADES y CAJAS.
 349  8BF7
 350  8BF7 00 00        Puntero_store_caja defw 0
 351  8BF9 00 00        Puntero_restore_caja defw 0
 352  8BFB 00 00        Indice_restore_caja defw 0
 353  8BFD 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8BFE 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8BFF 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8C00
 357  8C00 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8C02 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C04              ;														; _ puntero (Indice_entidades).
 360  8C04
 361  8C04              ;---------------------------------------------------------------------------------------------------------------
 362  8C04              ;
 363  8C04              ;	11/09/24
 364  8C04              ;
 365  8C04              ;	Álbumes.
 366  8C04
 367  8C04 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C06              ;														; _variable para almacenar lo posición del puntero_
 369  8C06              ; 														; _de pila, SP.
 370  8C06 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C08              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C08
 373  8C08              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C08
 375  8C08 00 00        Album_de_pintado defw 0
 376  8C0A 00 00        Album_de_borrado defw 0
 377  8C0C 00 00        Album_de_pintado_Amadeus defw 0
 378  8C0E 00 00        Album_de_borrado_Amadeus defw 0
 379  8C10 00 00        Album_de_pintado_disparos defw 0
 380  8C12 00 00        Album_de_borrado_disparos defw 0
 381  8C14
 382  8C14 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C16 00           Num_de_bytes_album_de_disparos db 0
 384  8C17
 385  8C17 07           Numero_de_disparos_de_entidades db 7
 386  8C18
 387  8C18 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 388  8C19 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 389  8C1A
 390  8C1A 00 00        Techo_Scanlines_album defw 0
 391  8C1C 00 00        Techo_Scanlines_album_2 defw 0
 392  8C1E 00           Switch db 0
 393  8C1F 00 00        Techo defw 0
 394  8C21 00 00        Scanlines_album_SP defw 0
 395  8C23 00 89        India_SP defw Tabla_de_pintado
 396  8C25 03 89        India_2_SP defw Tabla_de_pintado+3
 397  8C27
 398  8C27 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 399  8C28              ;
 400  8C28              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 401  8C28              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 402  8C28              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 403  8C28              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 404  8C28              ;																Habilita el borrado/pintado de sprites.
 405  8C28              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 406  8C28              ;																_ a la baja.
 407  8C28              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 408  8C28              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 409  8C28              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 410  8C28              ; 																_ el último frame de la explosión de nuestra nave.
 411  8C28              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 412  8C28              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 413  8C28
 414  8C28 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 415  8C29              ;
 416  8C29              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 417  8C29              ;
 418  8C29              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 419  8C29              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 420  8C29              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 421  8C29              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 422  8C29              ;
 423  8C29              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 424  8C29              ;															_ masticados ya generados.
 425  8C29              ;
 426  8C29              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 427  8C29              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 428  8C29              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 429  8C29              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 430  8C29
 431  8C29 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 432  8C2A              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C2A              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 434  8C2A
 435  8C2A
 436  8C2A
 437  8C2A
 438  8C2A
 439  8C2A              ; Gestión de Disparos.
 440  8C2A
 441  8C2A 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 442  8C2C 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 443  8C2E 00           Impacto2 db 0											; Byte de control de impactos.
 444  8C2F
 445  8C2F              ;
 446  8C2F              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 447  8C2F              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 448  8C2F              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 449  8C2F              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 450  8C2F
 451  8C2F
 452  8C2F
 453  8C2F
 454  8C2F
 455  8C2F
 456  8C2F
 457  8C2F 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 458  8C31              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 459  8C31              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 460  8C31
 461  8C31 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 462  8C33              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 463  8C33 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C36              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 465  8C36 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C39              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 467  8C39
 468  8C39              ;---------------------------------------------------------------------------------------------------------------
 469  8C39
 470  8C39              ; Relojes y temporizaciones.
 471  8C39
 472  8C39 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 473  8C3A 05           Clock_explosion_Amadeus db 5
 474  8C3B 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 475  8C3C
 476  8C3C F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 477  8C3E F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 478  8C40 00           Numero_rnd_disparos db 0
 479  8C41
 480  8C41 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 481  8C43 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 482  8C44              ;														; Repite la oleada de entidades.
 483  8C44 60           Repone_CLOCK_disparos db $60							; Reloj, decreciente.
 484  8C45 60           CLOCK_disparos_de_entidades db $60
 485  8C46
 486  8C46              ;---------------------------------------------------------------------------------------------------------------
 487  8C46
 488  8C46              ; Gestión de NIVELES.
 489  8C46
 490  8C46 00           Nivel db 0												; Nivel actual del juego.
 491  8C47 00 00        Puntero_indice_NIVELES defw 0
 492  8C49 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 493  8C4B              ; 														; _ que definen el NIVEL.
 494  8C4B
 495  8C4B              ; ---------------------------------------------------------------------------------------------------------------
 496  8C4B
 497  8C4B              ; Temporizaciones Shield.
 498  8C4B
 499  8C4B 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 500  8C4F 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 501  8C51 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 502  8C52 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 503  8C53 00           Shield_3 db 0
 504  8C54
 505  8C54 06           Lives db 6
 506  8C55
 507  8C55              ; 	INICIO  *************************************************************************************************************************************************************************
 508  8C55              ;
 509  8C55              ;	5/1/24
 510  8C55
 511  8C55              START
 512  8C55
 513  8C55 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 514  8C58 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 515  8C5A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 516  8C5C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 517  8C5E F3           	DI
 518  8C5F
 519  8C5F              ; Limpiamos pantalla.
 520  8C5F
 521  8C5F 3E 07        	ld a,%00000111
 522  8C61              ;	call Cls
 523  8C61 CD FA 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 524  8C64
 525  8C64              ; INICIALIZACIÓN.
 526  8C64
 527  8C64 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 528  8C66 CD 47 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 529  8C69 CD 91 8E     	call Extrae_numero_aleatorio_y_avanza
 530  8C6C
 531  8C6C 6F           	ld l,a
 532  8C6D 26 00        	ld h,0
 533  8C6F 22 41 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 534  8C72
 535  8C72              ;	Inicializa 1er Nivel.
 536  8C72
 537  8C72 21 94 8B     	ld hl,Indice_de_niveles
 538  8C75 22 47 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 539  8C78 CD 77 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 540  8C7B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 541  8C7B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 542  8C7B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 543  8C7B
 544  8C7B              ;	Inicia los álbumes de líneas.
 545  8C7B
 546  8C7B CD 4A 90     	call Inicia_albumes_de_lineas
 547  8C7E              ;
 548  8C7E CD 5A 90     	call Inicia_albumes_de_lineas_Amadeus
 549  8C81 CD 67 90     	call Inicia_albumes_de_disparos
 550  8C84
 551  8C84 CD 90 90     	call Inicia_Puntero_Disparo_Entidades
 552  8C87
 553  8C87 CD BC 92     4 call Inicia_Entidades
 554  8C8A CD 1F 93     	call Inicia_Amadeus
 555  8C8D
 556  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 557  8C8D              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 558  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 559  8C8D
 560  8C8D 11 6D 89     	ld de,Amadeus_BOX
 561  8C90 CD 72 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 562  8C93 CD 62 93     	call Limpiamos_bandeja_DRAW
 563  8C96
 564  8C96              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 565  8C96
 566  8C96 06 3C        	ld b,60
 567  8C98 CD 4E 9D     2 call Amadeus_a_izquierda
 568  8C9B 10 FB        	djnz 2B
 569  8C9D
 570  8C9D CD 28 90     	call Genera_datos_de_impresion_Amadeus
 571  8CA0
 572  8CA0              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 573  8CA0
 574  8CA0 CD 7A 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 575  8CA3              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 576  8CA3
 577  8CA3              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 578  8CA3              ; (Esto se dá cuando se inicia una nueva oleada).
 579  8CA3
 580  8CA3              ;	ld a,(Ctrl_1)
 581  8CA3              ;	bit 3,a
 582  8CA3              ;	jr nz,5F											 ; Loop
 583  8CA3
 584  8CA3              ;	ld de,Amadeus_db
 585  8CA3              ;	call Store_Amadeus
 586  8CA3
 587  8CA3              ; 	INICIA DISPAROS !!!!!
 588  8CA3
 589  8CA3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 590  8CA3
 591  8CA3              ;5 call Inicia_punteros_de_cajas
 592  8CA3              ;	call Restore_entidad
 593  8CA3
 594  8CA3              ;	ld a,(Ctrl_1)
 595  8CA3              ;	bit 3,a
 596  8CA3              ;	jr z,6F
 597  8CA3
 598  8CA3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 599  8CA3
 600  8CA3              ;	ld hl,Ctrl_1
 601  8CA3              ;	res 3,(hl)
 602  8CA3              ;	jr Main
 603  8CA3
 604  8CA3              ; Damos por concluida la construcción del FRAME.
 605  8CA3              ;
 606  8CA3
 607  8CA3 CD 05 91     	call Inicia_Shield
 608  8CA6
 609  8CA6
 610  8CA6 2A 21 8C     6 ld hl,(Scanlines_album_SP)
 611  8CA9 22 1A 8C     	ld (Techo_Scanlines_album),hl
 612  8CAC
 613  8CAC 2A 0A 8C     	ld hl,(Album_de_borrado)
 614  8CAF 22 21 8C     	ld (Scanlines_album_SP),hl
 615  8CB2
 616  8CB2 21 00 89     	ld hl,Tabla_de_pintado
 617  8CB5 22 23 8C     	ld (India_SP),hl
 618  8CB8
 619  8CB8 21 27 8C     	ld hl,Ctrl_3
 620  8CBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 621  8CBD CB D6        	set 2,(hl)
 622  8CBF CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 623  8CC1
 624  8CC1 FB           	ei 													; Ha de apuntar a $5c3a.
 625  8CC2
 626  8CC2 76           	halt
 627  8CC3
 628  8CC3              ; ------------------------------------
 629  8CC3
 630  8CC3              Main
 631  8CC3              ;
 632  8CC3              ; 20/09/24
 633  8CC3
 634  8CC3              ; Gestión de disparos.
 635  8CC3
 636  8CC3 CD FB 9E     	call Motor_de_disparos_entidades
 637  8CC6 CD 6A A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 638  8CC9 CD 7E 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 639  8CCC
 640  8CCC              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 641  8CCC              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 642  8CCC              ; Este hecho lo indica el bit2 de (Impacto2).
 643  8CCC
 644  8CCC CD 0C A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 645  8CCF
 646  8CCF              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 647  8CCF
 648  8CCF 21 45 8C     	ld hl,CLOCK_disparos_de_entidades
 649  8CD2 35           	dec (hl)
 650  8CD3 CC CE 8D     	call z,Autoriza_disparo_de_entidades
 651  8CD6
 652  8CD6 2A 41 8C     	ld hl,(Clock_next_entity)
 653  8CD9 ED 4B 78 5C  	ld bc,(FRAMES)
 654  8CDD A7           	and a
 655  8CDE ED 42        	sbc hl,bc
 656  8CE0 20 16        	jr nz,1F
 657  8CE2
 658  8CE2              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 659  8CE2              ; _ (Clock_next_entity) para la siguiente entidad.
 660  8CE2
 661  8CE2 3A FE 8B     	ld a,(Numero_parcial_de_entidades)
 662  8CE5 47           	ld b,a
 663  8CE6 3A FF 8B     	ld a,(Entidades_en_curso)
 664  8CE9 B8           	cp b
 665  8CEA 28 0C        	jr z,1F
 666  8CEC 30 0A        	jr nc,1F
 667  8CEE
 668  8CEE 3C           	inc a
 669  8CEF 32 FF 8B     	ld (Entidades_en_curso),a
 670  8CF2
 671  8CF2              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 672  8CF2
 673  8CF2 CD 91 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 674  8CF5 CD AD 8E     	call Define_Clock_next_entity
 675  8CF8
 676  8CF8 3A FF 8B     1 ld a,(Entidades_en_curso)
 677  8CFB A7           	and a
 678  8CFC CA 76 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 679  8CFF 47           	ld b,a												; No hay entidades que gestionar.
 680  8D00
 681  8D00              ; ( Código que ejecutamos con cada entidad: ).
 682  8D00
 683  8D00              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 684  8D00              ;
 685  8D00              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 686  8D00
 687  8D00 21 00 89     	ld hl,Tabla_de_pintado
 688  8D03 22 23 8C     	ld (India_SP),hl
 689  8D06
 690  8D06 21 27 8C     	ld hl,Ctrl_3
 691  8D09 CB D6        	set 2,(hl)
 692  8D0B CD 53 8E     	call Change
 693  8D0E
 694  8D0E C5           2 push bc 												; Nº de entidades en curso.
 695  8D0F
 696  8D0F CD D2 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 697  8D12 ED 5B 21 8C  	ld de,(Scanlines_album_SP)
 698  8D16
 699  8D16              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 700  8D16
 701  8D16              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 702  8D16              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 703  8D16
 704  8D16 3A 2E 8C     	ld a,(Impacto2)
 705  8D19 CB 5F        	bit 3,a
 706  8D1B C4 F7 9F     	call nz,Compara_con_coordenadas_de_disparo
 707  8D1E
 708  8D1E 3A BB 8B     	ld a,(Impacto)
 709  8D21 CB 4F        	bit 1,a
 710  8D23 C4 E2 91     	call nz,Genera_explosion
 711  8D26 20 31        	jr nz,Gestiona_siguiente_entidad
 712  8D28
 713  8D28 3A BB 8B     	ld a,(Impacto)
 714  8D2B A7           	and a
 715  8D2C 28 0C        	jr z,3F
 716  8D2E
 717  8D2E              ; IMPACTO en entidad por colisión con Amadeus.
 718  8D2E
 719  8D2E              ; 5/7/24
 720  8D2E              ; Nota importante:
 721  8D2E              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 722  8D2E              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 723  8D2E              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 724  8D2E
 725  8D2E 3A 71 89     	ld a,(Impacto_Amadeus)
 726  8D31 A7           	and a
 727  8D32 C4 E2 91     	call nz,Genera_explosion
 728  8D35 20 22        	jr nz,Gestiona_siguiente_entidad
 729  8D37
 730  8D37              ; Falsa colisión !!!
 731  8D37
 732  8D37 32 BB 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 733  8D3A
 734  8D3A              ; -------------------------------------------
 735  8D3A
 736  8D3A CD F1 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 737  8D3D CD 33 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 738  8D40 CD E1 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 739  8D43 CD E2 94     	call Genera_datos_de_impresion
 740  8D46 CD 85 93     	call Decrementa_Contador_de_mov_masticados
 741  8D49
 742  8D49              ; -------------------------------------------
 743  8D49
 744  8D49              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 745  8D49
 746  8D49 2A BC 8B     	ld hl,(Puntero_de_impresion)
 747  8D4C CD B6 94     	call Genera_coordenadas
 748  8D4F
 749  8D4F              ; TODO: Generamos disparo ???
 750  8D4F
 751  8D4F 3A 19 8C     	ld a,(Permiso_de_disparo_Entidades)
 752  8D52 A7           	and a
 753  8D53 C4 DA 8D     	call nz,Entidad_genera_disparo_si_procede
 754  8D56
 755  8D56 CD 8A A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 756  8D59
 757  8D59              Gestiona_siguiente_entidad
 758  8D59
 759  8D59 CD 57 93      	call Store_Restore_cajas
 760  8D5C C1           	pop bc
 761  8D5D 10 AF        	djnz 2B
 762  8D5F
 763  8D5F              ; Hemos gestionado todas las entidades.
 764  8D5F              ; ----- ----- -----
 765  8D5F
 766  8D5F CD 05 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 767  8D62 CD 1C 8F     	call Ordena_tabla_de_impresion
 768  8D65 CD 7A 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 769  8D68
 770  8D68 CD C2 8E     	call Borra_diferencia
 771  8D6B
 772  8D6B 3A 27 8C     	ld a,(Ctrl_3)
 773  8D6E CB 5F        	bit 3,a
 774  8D70 20 04        	jr nz,Gestion_de_Amadeus
 775  8D72
 776  8D72 EB           	ex de,hl
 777  8D73 71           	ld (hl),c
 778  8D74 2C           	inc l
 779  8D75 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 780  8D76
 781  8D76              ;! GESTIONA AMADEUS !!!!!!!!!!
 782  8D76
 783  8D76              Gestion_de_Amadeus
 784  8D76
 785  8D76 21 27 8C     	ld hl,Ctrl_3
 786  8D79 CB 76        	bit 6,(hl)
 787  8D7B 28 13        	jr z,Amadeus_vivo
 788  8D7D
 789  8D7D              ; Amadeus ha sido destruido.
 790  8D7D              ; Decrementa (Temp_new_live).
 791  8D7D
 792  8D7D 21 3B 8C     	ld hl,Temp_new_live
 793  8D80 35           	dec (hl)
 794  8D81 20 26        	jr nz,End_frame
 795  8D83
 796  8D83              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 797  8D83
 798  8D83 21 54 8C     	ld hl,Lives
 799  8D86 35           	dec (hl)
 800  8D87
 801  8D87              ;! Fin del juego
 802  8D87
 803  8D87 F3           	di
 804  8D88 28 FE        	jr z,$
 805  8D8A FB           	ei
 806  8D8B
 807  8D8B              ; Nueva nave.
 808  8D8B
 809  8D8B CD F9 8D     	call Reinicia_Amadeus
 810  8D8E 18 19        	jr End_frame
 811  8D90
 812  8D90              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 813  8D90
 814  8D90              Amadeus_vivo
 815  8D90
 816  8D90 3A 71 89     	ld a,(Impacto_Amadeus)
 817  8D93 A7           	and a
 818  8D94 C4 12 92     	call nz, Genera_explosion_Amadeus
 819  8D97 20 10        	jr nz, End_frame
 820  8D99
 821  8D99 CD BF 91     	call Teclado
 822  8D9C
 823  8D9C 21 27 8C     	ld hl,Ctrl_3
 824  8D9F CB 6E        	bit 5,(hl)
 825  8DA1 28 06        	jr z,End_frame
 826  8DA3
 827  8DA3              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 828  8DA3
 829  8DA3 CD 6E 8E     	call Change_Amadeus
 830  8DA6 CD 28 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 831  8DA9
 832  8DA9              End_frame
 833  8DA9
 834  8DA9              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 835  8DA9              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 836  8DA9
 837  8DA9 CD 56 9F     	call Genera_datos_de_impresion_disparos_Entidades
 838  8DAC CD F1 A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 839  8DAF CD 45 A0     	call Calcula_bytes_pintado_disparos
 840  8DB2 CD 52 A0     	call Limpia_album_de_pintado_disparos
 841  8DB5
 842  8DB5              ; ------------ ------------- --------------
 843  8DB5
 844  8DB5              ;	xor a
 845  8DB5              ;	ld (Permiso_de_disparo_Entidades),a
 846  8DB5
 847  8DB5 CD E5 8D     	call Actuaiza_sp_de_disparos_de_entidades
 848  8DB8
 849  8DB8 2A 0A 8C     	ld hl,(Album_de_borrado)
 850  8DBB 22 21 8C     	ld (Scanlines_album_SP),hl
 851  8DBE
 852  8DBE 21 27 8C     	ld hl,Ctrl_3
 853  8DC1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 854  8DC3 CB 9E        	res 3,(hl)
 855  8DC5 CB A6        	res 4,(hl)
 856  8DC7
 857  8DC7 AF           	xor a
 858  8DC8 D3 FE        	out ($fe),a
 859  8DCA
 860  8DCA 76           	halt
 861  8DCB
 862  8DCB              ; ----------------------------------------
 863  8DCB
 864  8DCB              ;	ld a,(Ctrl_1) 										; Existe Loop?
 865  8DCB              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 866  8DCB CA C3 8C     	jp z,Main
 867  8DCE
 868  8DCE              ;------------------------------------------
 869  8DCE              ;
 870  8DCE              ;	14/09/24
 871  8DCE
 872  8DCE              Autoriza_disparo_de_entidades
 873  8DCE
 874  8DCE 3E 01        	ld a,1
 875  8DD0 32 19 8C     	ld (Permiso_de_disparo_Entidades),a
 876  8DD3
 877  8DD3 3A 44 8C     	ld a,(Repone_CLOCK_disparos)
 878  8DD6 32 45 8C     	ld (CLOCK_disparos_de_entidades),a
 879  8DD9
 880  8DD9 C9           	ret
 881  8DDA
 882  8DDA              ;------------------------------------------
 883  8DDA              ;
 884  8DDA              ;	14/09/24
 885  8DDA              ;
 886  8DDA              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 887  8DDA
 888  8DDA              Entidad_genera_disparo_si_procede
 889  8DDA
 890  8DDA
 891  8DDA              ;	di
 892  8DDA              ;	jr $
 893  8DDA              ;	ei
 894  8DDA
 895  8DDA              ;	xor a
 896  8DDA 2A 3E 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 897  8DDD CB C6        	set 0,(hl)
 898  8DDF CB 16        	rl (hl)
 899  8DE1              ;	rl (hl)
 900  8DE1
 901  8DE1 DC 90 9F     	call c,Genera_disparo_de_entidad_maldosa
 902  8DE4
 903  8DE4 C9           	ret
 904  8DE5
 905  8DE5              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 906  8DE5              ;
 907  8DE5              ;	30/09/24
 908  8DE5
 909  8DE5              Actuaiza_sp_de_disparos_de_entidades
 910  8DE5
 911  8DE5 2A 3E 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 912  8DE8 23           	inc hl
 913  8DE9 22 3E 8C     	ld (Puntero_num_aleatorios_disparos),hl
 914  8DEC
 915  8DEC 11 FD 88     	ld de,Numeros_aleatorios+7
 916  8DEF 7B           	ld a,e
 917  8DF0 95           	sub l
 918  8DF1 C0           	ret nz
 919  8DF2
 920  8DF2 21 F6 88     1 ld hl,Numeros_aleatorios
 921  8DF5 22 3E 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 922  8DF8 C9           	ret
 923  8DF9
 924  8DF9              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 925  8DF9              ;
 926  8DF9              ;	24/07/24
 927  8DF9
 928  8DF9              Reinicia_Amadeus
 929  8DF9
 930  8DF9              ;	Reinicia posición y estado.
 931  8DF9
 932  8DF9 21 CF 50     	ld hl,$50cf
 933  8DFC 22 72 89     	ld (p.imp.amadeus),hl
 934  8DFF 21 F0 E0     	ld hl,$e0f0
 935  8E02 22 74 89     	ld (Pamm_Amadeus),hl
 936  8E05 21 3D 00     	ld hl,$003d
 937  8E08 22 76 89     	ld (Comm_Amadeus),hl
 938  8E0B
 939  8E0B              ;	limpiamos el álbum de borrado.
 940  8E0B
 941  8E0B 2A 0E 8C     	ld hl,(Album_de_borrado_Amadeus)
 942  8E0E
 943  8E0E AF           	xor a
 944  8E0F 77           	ld (hl),a
 945  8E10
 946  8E10 E5           	push hl
 947  8E11 D1           	pop de
 948  8E12 13           	inc de
 949  8E13
 950  8E13 01 23 00     	ld bc,35
 951  8E16 ED B0        	ldir
 952  8E18
 953  8E18 CD 28 90     	call Genera_datos_de_impresion_Amadeus
 954  8E1B
 955  8E1B              ;	Reinicia temporizaciones.
 956  8E1B
 957  8E1B CD 05 91     	call Inicia_Shield
 958  8E1E
 959  8E1E 3E 5A        	ld a,90
 960  8E20 32 51 8C     	ld (Shield),a
 961  8E23
 962  8E23 3E 64        	ld a,100
 963  8E25 32 3B 8C     	ld (Temp_new_live),a
 964  8E28
 965  8E28              ; 	Restauramos el FLAG: Amadeus vivo.
 966  8E28
 967  8E28 21 27 8C     	ld hl,Ctrl_3
 968  8E2B CB B6        	res 6,(hl)
 969  8E2D
 970  8E2D              ;	Fuerza la impresión de la nave en el siguiente frame.
 971  8E2D
 972  8E2D 21 27 8C      	ld hl,Ctrl_3
 973  8E30 CB EE        	set 5,(hl)
 974  8E32
 975  8E32 C9           	ret
 976  8E33
 977  8E33              ; --------------------------------------------------------------------------------------------------------------
 978  8E33              ;
 979  8E33              ;	12/05/24
 980  8E33
 981  8E33 3A C2 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 982  8E36 CB 27        	sla a
 983  8E38 32 C2 8B     	ld (Velocidad),a
 984  8E3B E6 10        	and $10
 985  8E3D C8           	ret z
 986  8E3E
 987  8E3E              ; Restaura (Velocidad) a razón del nº de vueltas.
 988  8E3E
 989  8E3E 3A BA 8B     	ld a,(Contador_de_vueltas)
 990  8E41 CB 2F        	sra a
 991  8E43 CB 2F        	sra a
 992  8E45 32 C2 8B     	ld (Velocidad),a
 993  8E48
 994  8E48 2A BE 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 995  8E4B 23           	inc hl
 996  8E4C 23           	inc hl
 997  8E4D 23           	inc hl
 998  8E4E 23           	inc hl
 999  8E4F 22 BE 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1000  8E52
1001  8E52 C9           	ret
1002  8E53
1003  8E53              ; --------------------------------------------------------------------------------------------------------------
1004  8E53              ;
1005  8E53              ;	25/08/24
1006  8E53
1007  8E53              Change
1008  8E53
1009  8E53 3A 1E 8C     	ld a,(Switch)
1010  8E56 EE 01        	xor 1
1011  8E58 32 1E 8C     	ld (Switch),a
1012  8E5B 2A 08 8C     	ld hl,(Album_de_pintado)
1013  8E5E ED 5B 0A 8C  	ld de,(Album_de_borrado)
1014  8E62 EB           	ex de,hl
1015  8E63 22 08 8C     	ld (Album_de_pintado),hl
1016  8E66 22 21 8C     	ld (Scanlines_album_SP),hl
1017  8E69 ED 53 0A 8C  	ld (Album_de_borrado),de
1018  8E6D C9           	ret
1019  8E6E
1020  8E6E              Change_Amadeus
1021  8E6E
1022  8E6E 2A 0C 8C     	ld hl,(Album_de_pintado_Amadeus)
1023  8E71 ED 5B 0E 8C  	ld de,(Album_de_borrado_Amadeus)
1024  8E75 EB           	ex de,hl
1025  8E76 22 0C 8C     	ld (Album_de_pintado_Amadeus),hl
1026  8E79 ED 53 0E 8C  	ld (Album_de_borrado_Amadeus),de
1027  8E7D C9           	ret
1028  8E7E
1029  8E7E              Change_Disparos
1030  8E7E
1031  8E7E 2A 10 8C     	ld hl,(Album_de_pintado_disparos)
1032  8E81 ED 5B 12 8C  	ld de,(Album_de_borrado_disparos)
1033  8E85 EB           	ex de,hl
1034  8E86 22 10 8C     	ld (Album_de_pintado_disparos),hl
1035  8E89 ED 53 12 8C  	ld (Album_de_borrado_disparos),de
1036  8E8D 22 14 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1037  8E90
1038  8E90 C9           	ret
1039  8E91
1040  8E91              ; ------------------------------------
1041  8E91              ;
1042  8E91              ; 1/05/24
1043  8E91
1044  8E91              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1045  8E91              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1046  8E91
1047  8E91              ;	DESTRUYE: HL,DE,A
1048  8E91              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1049  8E91
1050  8E91              ;	Variables implicadas: (RND_SP).
1051  8E91
1052  8E91              Extrae_numero_aleatorio_y_avanza
1053  8E91
1054  8E91 21 00 89     	ld hl,Tabla_de_pintado
1055  8E94 EB           	ex de,hl
1056  8E95 2A 3C 8C     	ld hl,(RND_SP)
1057  8E98 EB           	ex de,hl
1058  8E99 A7           	and a
1059  8E9A ED 52        	sbc hl,de
1060  8E9C
1061  8E9C 2A 3C 8C     	ld hl,(RND_SP)
1062  8E9F 20 06        	jr nz,1F
1063  8EA1
1064  8EA1              ; Sitúa HL al principio de la tabla de nº aleatorios.
1065  8EA1
1066  8EA1 21 F6 88     	ld hl,Numeros_aleatorios
1067  8EA4 22 3C 8C     	ld (RND_SP),HL
1068  8EA7
1069  8EA7              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1070  8EA7
1071  8EA7 7E           1 ld a,(hl)
1072  8EA8 23           	inc hl
1073  8EA9 22 3C 8C     	ld (RND_SP),hl
1074  8EAC C9           	ret
1075  8EAD
1076  8EAD              ; ------------------------------------
1077  8EAD              ;
1078  8EAD              ; 1/05/24
1079  8EAD
1080  8EAD              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1081  8EAD              ; (1 a 4 segundos).
1082  8EAD              ; Actualizamos (Clock_next_entity) con A.
1083  8EAD
1084  8EAD              ;	DESTRUYE: A y B.
1085  8EAD              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1086  8EAD              ;			 Actualiza (Clock_next_entity) con A.
1087  8EAD
1088  8EAD              ;	Variables implicadas: (Clock_next_entity).
1089  8EAD
1090  8EAD              ; Notas:
1091  8EAD
1092  8EAD              ; 	$32 1 seg.
1093  8EAD              ; 	$64 2 seg.
1094  8EAD              ; 	$96 3 seg.
1095  8EAD              ; 	$c8 4 seg.
1096  8EAD              ; 	$fa 5 seg.
1097  8EAD
1098  8EAD              ; $ffff 1310,7 seg, 22 minutos.
1099  8EAD
1100  8EAD              ;	$0100  5 seg. aproximadamente.
1101  8EAD              ;	$0200 10 seg. aproximadamente.
1102  8EAD              ;	$0300 15 seg. aproximadamente.
1103  8EAD              ;	$0400 20 seg. aproximadamente.
1104  8EAD              ;	$0500 25 seg. aproximadamente.
1105  8EAD              ;	$0600 30 seg. aproximadamente.
1106  8EAD
1107  8EAD              Define_Clock_next_entity
1108  8EAD
1109  8EAD FE 34        	cp $34
1110  8EAF 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1111  8EB1
1112  8EB1              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1113  8EB1
1114  8EB1 4F           3 ld c,a
1115  8EB2 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1116  8EB4 2A 78 5C     	ld hl,(FRAMES)
1117  8EB7 A7           	and a
1118  8EB8 ED 4A        	adc hl,bc
1119  8EBA 22 41 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1120  8EBD C9           	ret
1121  8EBE
1122  8EBE 3E 34        1 ld a,$34
1123  8EC0 18 EF        	jr 3B
1124  8EC2
1125  8EC2              ; ------------------------------------
1126  8EC2              ;
1127  8EC2              ; 18/03/24
1128  8EC2
1129  8EC2              Borra_diferencia
1130  8EC2
1131  8EC2 ED 4B 21 8C  	ld bc,(Scanlines_album_SP)
1132  8EC6
1133  8EC6 3A 1E 8C     	ld a,(Switch)
1134  8EC9 A7           	and a
1135  8ECA 28 08        	jr z,2F
1136  8ECC
1137  8ECC 2A 1C 8C     	ld hl,(Techo_Scanlines_album_2)
1138  8ECF 11 1C 8C     	ld de,Techo_Scanlines_album_2
1139  8ED2 18 06        	jr 3F
1140  8ED4
1141  8ED4 2A 1A 8C     2 ld hl,(Techo_Scanlines_album)
1142  8ED7 11 1A 8C     	ld de,Techo_Scanlines_album
1143  8EDA
1144  8EDA              ; Diferencia.
1145  8EDA
1146  8EDA ED 42        3 sbc hl,bc
1147  8EDC
1148  8EDC C8           	ret z
1149  8EDD D8           	ret c
1150  8EDE
1151  8EDE              ; Nuevo techo, (más bajo que el anterior).
1152  8EDE              ; Fijamos nuevo techo y borramos bytes sobrantes.
1153  8EDE
1154  8EDE EB           	ex de,hl
1155  8EDF
1156  8EDF 71           	ld (hl),c
1157  8EE0 2C           	inc l
1158  8EE1 70           	ld (hl),b
1159  8EE2
1160  8EE2 AF           	xor a
1161  8EE3 43           	ld b,e
1162  8EE4
1163  8EE4 2A 21 8C     	ld hl,(Scanlines_album_SP)
1164  8EE7
1165  8EE7 77           1 ld (hl),a
1166  8EE8 23           	inc hl
1167  8EE9 10 FC        	djnz 1B
1168  8EEB
1169  8EEB              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1170  8EEB
1171  8EEB 21 27 8C     	ld hl,Ctrl_3
1172  8EEE CB DE        	set 3,(hl)
1173  8EF0
1174  8EF0 C9           	ret
1175  8EF1
1176  8EF1              ; --------------------------------------------------------------------------------------------------------------
1177  8EF1              ;
1178  8EF1              ;	26/3/24
1179  8EF1
1180  8EF1              Recauda_informacion_de_entidad_en_curso
1181  8EF1
1182  8EF1              ; Almacena la Coordenada Y de la entidad en curso.
1183  8EF1
1184  8EF1              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1185  8EF1
1186  8EF1 3A B9 8B     	ld a,(Coordenada_y)
1187  8EF4 2A 23 8C     	ld hl,(India_SP)
1188  8EF7 77           	ld (hl),a
1189  8EF8 2C           	inc l
1190  8EF9
1191  8EF9              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1192  8EF9
1193  8EF9 ED 5B 21 8C  	ld de,(Scanlines_album_SP)
1194  8EFD
1195  8EFD 73           	ld (hl),e
1196  8EFE 2C           	inc l
1197  8EFF 72           	ld (hl),d
1198  8F00 2C           	inc l
1199  8F01
1200  8F01 22 23 8C     	ld (India_SP),hl
1201  8F04
1202  8F04 C9           	ret
1203  8F05
1204  8F05              ; --------------------------------------------------------------------------------------------------------------
1205  8F05              ;
1206  8F05              ;	27/03/24
1207  8F05              ;
1208  8F05
1209  8F05              Inicializa_India_y_limpia_Tabla_de_impresion
1210  8F05
1211  8F05 2A 23 8C     	ld hl,(India_SP)
1212  8F08 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1213  8F0B
1214  8F0B 79           	ld a,c
1215  8F0C 95           	sub l
1216  8F0D 28 06        	jr z,2F
1217  8F0F 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1218  8F10              ;														; _ y pasamos a inicializar (India_SP).
1219  8F10 AF           	xor a
1220  8F11
1221  8F11 77           1 ld (hl),a
1222  8F12 2C           	inc l
1223  8F13 10 FC        	djnz 1B												; Limpia Tabla.
1224  8F15
1225  8F15 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1226  8F18 22 23 8C     	ld (India_SP),hl
1227  8F1B
1228  8F1B C9           	ret
1229  8F1C
1230  8F1C              ; --------------------------------------------------------------------------------------------------------------
1231  8F1C              ;
1232  8F1C              ;	31/3/24
1233  8F1C
1234  8F1C              Ordena_tabla_de_impresion
1235  8F1C
1236  8F1C              ; 5794 T/states.
1237  8F1C              ; 6278 T/states.
1238  8F1C              ; 5310 T/states.
1239  8F1C
1240  8F1C              ; Inicializamos punteros (India_SP) e (India_2_SP).
1241  8F1C              ; Inicializamos contador de comparaciones, [C].
1242  8F1C              ; Cargamos los registros A y B para efectuar comparación.
1243  8F1C
1244  8F1C FD 2E 00     	ld iyl,0
1245  8F1F
1246  8F1F 3A FF 8B     	ld a,(Entidades_en_curso)
1247  8F22 FE 04        	cp 4 	;	4
1248  8F24 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1249  8F25
1250  8F25 3D           	dec a
1251  8F26 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1252  8F27 51           	ld d,c 										; Copia de respaldo.
1253  8F28
1254  8F28 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1255  8F29
1256  8F29 21 03 89     	ld hl,Tabla_de_pintado+3
1257  8F2C 46           	ld b,(hl)
1258  8F2D 22 25 8C     	ld (India_2_SP),hl
1259  8F30
1260  8F30 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1261  8F31 DC 59 8F     	call c, Avanza_India_2_SP
1262  8F34 CC 59 8F     	call z, Avanza_India_2_SP
1263  8F37
1264  8F37 FD 2D        	dec iyl
1265  8F39 28 18        	jr z,2F
1266  8F3B
1267  8F3B
1268  8F3B              ; --------------------------------------------------------------------------------------------------------------
1269  8F3B              ;
1270  8F3B              ;	7/4/24
1271  8F3B
1272  8F3B              Trueque
1273  8F3B
1274  8F3B              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1275  8F3B              ;  			A contiene en nº de fila de (India_SP).
1276  8F3B              ;			HL contiene (India_2_SP).
1277  8F3B
1278  8F3B D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1279  8F3C E5           	push hl										; Preservo (India_2_SP).
1280  8F3D
1281  8F3D ED 5B 23 8C  	ld de,(India_SP)
1282  8F41 EB           	ex de,hl
1283  8F42 70           	ld (hl),b
1284  8F43 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1285  8F44
1286  8F44 CD 85 8F     	call Intercambia_1_byte
1287  8F47 CD 85 8F     	call Intercambia_1_byte
1288  8F4A
1289  8F4A
1290  8F4A              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1291  8F4A              ; Recuperamos (India_2_SP) en HL.
1292  8F4A
1293  8F4A 2A 23 8C     	ld hl,(India_SP)
1294  8F4D 7E           	ld a,(hl)
1295  8F4E
1296  8F4E E1           	pop hl
1297  8F4F D1           	pop de
1298  8F50
1299  8F50              ; --------------------------------------------------------------------------------------------------------------
1300  8F50
1301  8F50 CD 59 8F     	call Avanza_India_2_SP
1302  8F53
1303  8F53 14           2 inc d
1304  8F54 15           	dec d
1305  8F55 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1306  8F56 18 D8        	jr 1B
1307  8F58
1308  8F58 C9           	ret
1309  8F59
1310  8F59              ; ----- ----- ----- ----- -----
1311  8F59
1312  8F59              Avanza_India_2_SP
1313  8F59
1314  8F59 0D           	dec c
1315  8F5A 28 0A        	jr z,Avanza_punteros_indios
1316  8F5C
1317  8F5C FD 2C        	inc iyl
1318  8F5E
1319  8F5E 2C           	inc l
1320  8F5F 2C           	inc l
1321  8F60 2C           	inc l
1322  8F61
1323  8F61 46           	ld b,(hl)
1324  8F62 22 25 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1325  8F65
1326  8F65 C9           	ret
1327  8F66
1328  8F66              ; ----- ----- ----- ----- -----
1329  8F66
1330  8F66              Avanza_punteros_indios
1331  8F66
1332  8F66 15           	dec d
1333  8F67 28 15        	jr z,Prepara_salida
1334  8F69
1335  8F69 4A           	ld c,d
1336  8F6A
1337  8F6A 2A 23 8C     	ld hl,(India_SP)
1338  8F6D 2C           	inc l
1339  8F6E 2C           	inc l
1340  8F6F 2C           	inc l
1341  8F70 7E           	ld a,(hl)
1342  8F71 22 23 8C     	ld (India_SP),hl
1343  8F74
1344  8F74 2C           	inc l
1345  8F75 2C           	inc l
1346  8F76 2C           	inc l
1347  8F77 46           	ld b,(hl)
1348  8F78 22 25 8C     	ld (India_2_SP),hl
1349  8F7B
1350  8F7B FD 2C        	inc iyl
1351  8F7D
1352  8F7D C9           	ret
1353  8F7E
1354  8F7E              Prepara_salida
1355  8F7E
1356  8F7E 21 00 89     	ld hl,Tabla_de_pintado
1357  8F81 22 23 8C     	ld (India_SP),hl
1358  8F84 C9           	ret
1359  8F85
1360  8F85
1361  8F85 2C           Intercambia_1_byte inc l
1362  8F86 1C           	inc e
1363  8F87 46           	ld b,(hl)
1364  8F88 1A           	ld a,(de)
1365  8F89 EB           	ex de,hl
1366  8F8A 70           	ld (hl),b
1367  8F8B 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1368  8F8C C9           	ret
1369  8F8D
1370  8F8D              ; -----------------------------------------------------------------------------------
1371  8F8D              ;
1372  8F8D              ;	20/01/24
1373  8F8D              ;
1374  8F8D              ;
1375  8F8D
1376  8F8D              Construye_movimientos_masticados_entidad
1377  8F8D
1378  8F8D 2A BE 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1379  8F90 E5           	push hl
1380  8F91 CD D4 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1381  8F94              ;															; _ el (Contador_de_mov_masticados).
1382  8F94 CD 9D 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1383  8F97              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1384  8F97 CD D4 99     	call Recompone_posicion_inicio
1385  8F9A
1386  8F9A CD 04 97     1 call Draw
1387  8F9D CD B9 8F     	call Guarda_movimiento_masticado
1388  8FA0
1389  8FA0 CD 81 9D     	call Movimiento
1390  8FA3
1391  8FA3 3A 27 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1392  8FA6 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1393  8FA8 28 F0        	jr z,1B
1394  8FAA
1395  8FAA              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1396  8FAA              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1397  8FAA
1398  8FAA E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1399  8FAB 22 BE 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1400  8FAE
1401  8FAE              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1402  8FAE
1403  8FAE CD E5 9E     	call Situa_en_contador_general_de_mov_masticados
1404  8FB1
1405  8FB1              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1406  8FB1              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1407  8FB1
1408  8FB1 ED 4B C0 8B  	ld bc,(Contador_de_mov_masticados)
1409  8FB5
1410  8FB5 71           	ld (hl),c
1411  8FB6 23           	inc hl
1412  8FB7 70           	ld (hl),b
1413  8FB8
1414  8FB8 C9           	ret
1415  8FB9
1416  8FB9              ; -----------------------------------------------------------------------------------
1417  8FB9              ;
1418  8FB9              ;	28/12/23
1419  8FB9              ;
1420  8FB9              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1421  8FB9              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1422  8FB9
1423  8FB9              Guarda_movimiento_masticado
1424  8FB9
1425  8FB9 ED 73 04 8C  	ld (Stack),sp
1426  8FBD ED 7B BE 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1427  8FC1
1428  8FC1 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1429  8FC3 FD E5            push iy 												; Pushea Puntero_objeto.
1430  8FC5
1431  8FC5 ED 7B 04 8C      ld sp,(Stack)
1432  8FC9
1433  8FC9 2A C0 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1434  8FCC 23           	inc hl
1435  8FCD 22 C0 8B     	ld (Contador_de_mov_masticados),hl
1436  8FD0
1437  8FD0 CD D4 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1438  8FD3              ;															; _ el (Contador_de_mov_masticados).
1439  8FD3 C9               ret
1440  8FD4
1441  8FD4              ; --------------------------------------------------------------------------------------------------------------
1442  8FD4              ;
1443  8FD4              ;	12/1/24
1444  8FD4              ;
1445  8FD4              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1446  8FD4
1447  8FD4              Actualiza_Puntero_de_almacen_de_mov_masticados
1448  8FD4
1449  8FD4 2A BE 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1450  8FD7 01 04 00     	ld bc,4
1451  8FDA A7           	and a
1452  8FDB ED 4A        	adc hl,bc
1453  8FDD 22 BE 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1454  8FE0 C9           	ret
1455  8FE1
1456  8FE1              ; --------------------------------------------------------------------------------------------------------------
1457  8FE1              ;
1458  8FE1              ;	24/03/24
1459  8FE1              ;
1460  8FE1              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1461  8FE1              ;
1462  8FE1              ;	IX contiene el puntero de impresión.
1463  8FE1              ;	DE contiene (Puntero_objeto).
1464  8FE1
1465  8FE1
1466  8FE1              Cargamos_registros_con_mov_masticado
1467  8FE1
1468  8FE1 ED 73 04 8C  	ld (Stack),sp
1469  8FE5 ED 7B BE 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1470  8FE9
1471  8FE9 D1           	pop de 															; DE contiene Puntero_objeto
1472  8FEA DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1473  8FEC
1474  8FEC ED 73 BE 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1475  8FF0 ED 7B 04 8C  	ld sp,(Stack)
1476  8FF4
1477  8FF4 7B           	ld a,e
1478  8FF5 82           	add d															; Comprueba si ya no hay datos en el almacén.
1479  8FF6
1480  8FF6 CC 8D 93     	call z,Reinicia_entidad_maliciosa
1481  8FF9
1482  8FF9 C9           	ret
1483  8FFA
1484  8FFA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1485  8FFA              ;
1486  8FFA              ;	22/7/24
1487  8FFA
1488  8FFA              Cargamos_registros_con_explosion
1489  8FFA
1490  8FFA
1491  8FFA 2A BE 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1492  8FFD CD 97 90     	call Extrae_address
1493  9000
1494  9000 5D           	ld e,l
1495  9001 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1496  9002
1497  9002 DD 2A BC 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1498  9006
1499  9006 C9           	ret
1500  9007
1501  9007
1502  9007              Cargamos_registros_con_explosion_Amadeus
1503  9007
1504  9007 2A 74 89     	ld hl,(Pamm_Amadeus)
1505  900A CD 97 90     	call Extrae_address
1506  900D
1507  900D 5D           	ld e,l
1508  900E 54           	ld d,h
1509  900F
1510  900F DD 2A 72 89  	ld ix,(p.imp.amadeus)
1511  9013
1512  9013 C9           	ret
1513  9014
1514  9014              ; --------------------------------------------------------------------------------------------------------------
1515  9014              ;
1516  9014              ;	17/06/24
1517  9014              ;
1518  9014              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1519  9014              ;
1520  9014              ;	IX contiene el puntero de impresión.
1521  9014              ;	DE contiene (Puntero_objeto).
1522  9014
1523  9014
1524  9014              Cargamos_registros_con_mov_masticado_Amadeus
1525  9014
1526  9014 ED 73 04 8C  	ld (Stack),sp
1527  9018 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1528  901C D1           	pop de 															; DE contiene Puntero_objeto
1529  901D DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1530  901F DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1531  9023 ED 7B 04 8C  	ld sp,(Stack)
1532  9027 C9           	ret
1533  9028
1534  9028              ; ---------------------------------------------------------------------------------------------------------------------
1535  9028              ;
1536  9028              ;	18/6/24
1537  9028              ;
1538  9028              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1539  9028
1540  9028              Genera_datos_de_impresion_Amadeus
1541  9028
1542  9028 3A 71 89     	ld a,(Impacto_Amadeus)
1543  902B A7           	and a
1544  902C 20 03        	jr nz,1F
1545  902E
1546  902E              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1547  902E              ; _apuntando a la correspondiente explosión.
1548  902E
1549  902E CD 14 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1550  9031
1551  9031 DD 7D        1 ld a,ixl
1552  9033 E6 1F        	and $1f
1553  9035 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1554  9038
1555  9038 2A 21 8C     	ld hl,(Scanlines_album_SP)
1556  903B E5           	push hl
1557  903C
1558  903C 2A 0C 8C     	ld hl,(Album_de_pintado_Amadeus)
1559  903F 22 21 8C     	ld (Scanlines_album_SP),hl
1560  9042
1561  9042 CD E2 94     	call Genera_datos_de_impresion
1562  9045
1563  9045 E1           	pop hl
1564  9046 22 21 8C     	ld (Scanlines_album_SP),hl
1565  9049
1566  9049 C9           	ret
1567  904A
1568  904A              ; ---------------------------------------------------------------------------------------------------------------------
1569  904A              ;
1570  904A              ;	13/03/24
1571  904A              ;
1572  904A              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1573  904A
1574  904A              Inicia_albumes_de_lineas
1575  904A
1576  904A 21 00 80     	ld hl,Scanlines_album
1577  904D 22 08 8C     	ld (Album_de_pintado),hl
1578  9050 22 21 8C     	ld (Scanlines_album_SP),hl
1579  9053
1580  9053 21 1A 81     	ld hl,Scanlines_album_2
1581  9056 22 0A 8C     	ld (Album_de_borrado),hl
1582  9059
1583  9059 C9           	ret
1584  905A
1585  905A              Inicia_albumes_de_lineas_Amadeus
1586  905A
1587  905A 21 34 82     	ld hl,Amadeus_scanlines_album
1588  905D 22 0C 8C     	ld (Album_de_pintado_Amadeus),hl
1589  9060 21 58 82     	ld hl,Amadeus_scanlines_album_2
1590  9063 22 0E 8C     	ld (Album_de_borrado_Amadeus),hl
1591  9066
1592  9066 C9           	ret
1593  9067
1594  9067              Inicia_albumes_de_disparos
1595  9067
1596  9067 21 7C 82     	ld hl,Disparos_scanlines_album
1597  906A 22 10 8C     	ld (Album_de_pintado_disparos),hl
1598  906D 21 B8 82     	ld hl,Disparos_scanlines_album_2
1599  9070 22 12 8C     	ld (Album_de_borrado_disparos),hl
1600  9073
1601  9073 21 7C 82     	ld hl,Disparos_scanlines_album
1602  9076 22 14 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1603  9079
1604  9079 C9           	ret
1605  907A
1606  907A              ; ---------------------------------------------------------------------------------------------------------------------
1607  907A              ;
1608  907A              ; 8/1/23
1609  907A              ;
1610  907A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1611  907A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1612  907A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1613  907A
1614  907A              ; Destruye HL y DE !!!!!
1615  907A
1616  907A              Inicia_punteros_de_cajas
1617  907A
1618  907A 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1619  907D CD 97 90         call Extrae_address
1620  9080 22 F7 8B         ld (Puntero_store_caja),hl
1621  9083 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1622  9086 22 FB 8B     	ld (Indice_restore_caja),hl
1623  9089 CD 97 90     	call Extrae_address
1624  908C 22 F9 8B     	ld (Puntero_restore_caja),hl
1625  908F C9               ret
1626  9090
1627  9090              ; *************************************************************************************************************************************************************
1628  9090              ;
1629  9090              ; 8/1/23
1630  9090              ;
1631  9090              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1632  9090
1633  9090 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1634  9093 22 2A 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1635  9096 C9           	ret
1636  9097
1637  9097              ; *************************************************************************************************************************************************************
1638  9097              ;
1639  9097              ; 20/10/22
1640  9097              ;
1641  9097              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1642  9097              ;
1643  9097              ; Destruye el puntero y DE !!!!!
1644  9097
1645  9097 5E           Extrae_address ld e,(hl)
1646  9098 23           	inc hl
1647  9099 56           	ld d,(hl)
1648  909A 2B           	dec hl
1649  909B EB           	ex de,hl
1650  909C C9           	ret
1651  909D
1652  909D              ; *************************************************************************************************************************************************************
1653  909D              ;
1654  909D              ;	20/1/24
1655  909D              ;
1656  909D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1657  909D              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1658  909D              ;
1659  909D              ;   Destruye HL y BC !!!!!,
1660  909D              ;
1661  909D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1662  909D              ;					"0" ..... Izquierda.
1663  909D
1664  909D              Inicia_Puntero_objeto
1665  909D
1666  909D 3A D6 8B     	ld a,(Cuad_objeto)
1667  90A0 E6 01        	and 1
1668  90A2 F5           	push af
1669  90A3 CC BF 90     	call z,Inicia_puntero_objeto_izq
1670  90A6 F1           	pop af
1671  90A7 C8           	ret z
1672  90A8 CD AC 90     	call Inicia_puntero_objeto_der
1673  90AB C9           	ret
1674  90AC
1675  90AC              ; Arrancamos desde la parte izquierda de la pantalla.
1676  90AC              ; Iniciamos (Indice_Sprite_der).
1677  90AC
1678  90AC 2A CC 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1679  90AF 22 D0 8B     	ld (Puntero_DESPLZ_der),hl
1680  90B2 CD 97 90     	call Extrae_address
1681  90B5 22 C9 8B     	ld (Puntero_objeto),hl
1682  90B8
1683  90B8 2A CE 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1684  90BB 22 D2 8B     	ld (Puntero_DESPLZ_izq),hl
1685  90BE C9           	ret
1686  90BF
1687  90BF              ; Arrancamos desde la parte derecha de la pantalla.
1688  90BF              ; Iniciamos (Indice_Sprite_izq).
1689  90BF
1690  90BF 2A CE 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1691  90C2 22 D2 8B     	ld (Puntero_DESPLZ_izq),hl
1692  90C5 CD 97 90     	call Extrae_address
1693  90C8 22 C9 8B     	ld (Puntero_objeto),hl
1694  90CB
1695  90CB 2A CC 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1696  90CE 22 D0 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1697  90D1 C9           	ret
1698  90D2
1699  90D2              ; **************************************************************************************************
1700  90D2              ;
1701  90D2              ;	06/07/24
1702  90D2              ;
1703  90D2              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1704  90D2
1705  90D2              Restore_entidad
1706  90D2
1707  90D2 2A F7 8B     	ld hl,(Puntero_store_caja)
1708  90D5 7E           	ld a,(hl)
1709  90D6 A7           	and a
1710  90D7 CC E5 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1711  90DA 28 F6        	jr z,Restore_entidad
1712  90DC
1713  90DC 11 B7 8B     	ld de,Bandeja_DRAW
1714  90DF 01 0C 00     	ld bc,12
1715  90E2 ED B0        	ldir
1716  90E4 C9           	ret
1717  90E5
1718  90E5              ; **************************************************************************************************
1719  90E5              ;
1720  90E5              ;	08/05/23
1721  90E5              ;
1722  90E5              ;	Incrementamos los dos punteros de entidades. (+1).
1723  90E5
1724  90E5              Incrementa_punteros_de_cajas
1725  90E5
1726  90E5 2A F9 8B     	ld hl,(Puntero_restore_caja)
1727  90E8 22 F7 8B     	ld (Puntero_store_caja),hl
1728  90EB 2A FB 8B     	ld hl,(Indice_restore_caja)
1729  90EE 23           	inc hl
1730  90EF 23           	inc hl
1731  90F0 22 FB 8B     	ld (Indice_restore_caja),hl
1732  90F3 CD 97 90         call Extrae_address
1733  90F6 22 F9 8B         ld (Puntero_restore_caja),hl
1734  90F9 C9               ret
1735  90FA
1736  90FA              ; -----------------------------------------------------------
1737  90FA
1738  90FA              ; Teclado.
1739  90FA
1740  90FA 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1741  90FC DB FE        	in a,($fe)
1742  90FE E6 01        	and $01
1743  9100 28 02        	jr z,1f
1744  9102 18 F6        	jr Pulsa_ENTER
1745  9104 C9           1 ret
1746  9105
1747  9105              ; **************************************************************************************************
1748  9105              ;
1749  9105              ; Temporización.
1750  9105
1751  9105              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1752  9105              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1753  9105              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1754  9105              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1755  9105
1756  9105              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1757  9105              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1758  9105              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1759  9105
1760  9105              ; A partir de $4f61 no hace falta DELAY.
1761  9105
1762  9105              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1763  9105
1764  9105              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1765  9105              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1766  9105              ;	LD A,B
1767  9105              ;	AND A
1768  9105              ;	JR NZ,wait
1769  9105              ;	RET
1770  9105
1771  9105              ; ---------------------------------------------------------------------------------------------------------------
1772  9105              ;
1773  9105              ;	13/07/24
1774  9105              ;
1775  9105
1776  9105              Inicia_Shield
1777  9105
1778  9105 21 4B 8C     	ld hl,Datos_Shield
1779  9108 22 4F 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1780  910B
1781  910B 7E           	ld a,(hl)
1782  910C 32 52 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1783  910F
1784  910F 3E 01        	ld a,1
1785  9111 32 53 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1786  9114
1787  9114 C9           	ret
1788  9115
1789  9115              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1790  9115              ;
1791  9115              ;	4/6/24
1792  9115              ;
1793  9115              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1794  9115              ;
1795  9115              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1796  9115              ;
1797  9115
1798  9115              Actualiza_pantalla
1799  9115
1800  9115 3E 02        	ld a,2
1801  9117 D3 FE        	out ($fe),a
1802  9119
1803  9119 3A 27 8C     	ld a,(Ctrl_3)
1804  911C CB 57        	bit 2,a
1805  911E 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1806  9120
1807  9120              Borrando_entidades
1808  9120
1809  9120 2A 21 8C     	ld hl,(Scanlines_album_SP)
1810  9123 CD 97 90     	call Extrae_address
1811  9126 24           	inc h
1812  9127 25           	dec h
1813  9128 28 05        	jr z,Pintando_entidades
1814  912A CD E1 95     	call Pinta_Sprites
1815  912D 18 F1        	jr Borrando_entidades
1816  912F
1817  912F              Pintando_entidades
1818  912F
1819  912F 2A 23 8C     	ld hl,(India_SP)
1820  9132 2C           	inc l
1821  9133 CD 97 90     	call Extrae_address
1822  9136 24           	inc h
1823  9137 25           	dec h
1824  9138 28 0E        	jr z,Ejecuta_escudo
1825  913A 1C           	inc e
1826  913B 1C           	inc e
1827  913C ED 53 23 8C  	ld (India_SP),de
1828  9140 CD 97 90     	call Extrae_address
1829  9143 CD E1 95     	call Pinta_Sprites
1830  9146 18 E7        	jr Pintando_entidades
1831  9148
1832  9148              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1833  9148
1834  9148              Ejecuta_escudo
1835  9148
1836  9148 3A 51 8C     	ld a,(Shield)
1837  914B A7           	and a
1838  914C 20 2F        	jr nz,Aplica_Shield
1839  914E
1840  914E              Borrando_Amadeus
1841  914E
1842  914E 21 27 8C     	ld hl,Ctrl_3
1843  9151 CB 6E        	bit 5,(hl)
1844  9153 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1845  9155
1846  9155 2A 0E 8C     	ld hl,(Album_de_borrado_Amadeus)
1847  9158 CD 97 90     	call Extrae_address
1848  915B 24           	inc h
1849  915C 25           	dec h
1850  915D 28 03        	jr z,Pintando_Amadeus
1851  915F CD E1 95     	call Pinta_Sprites
1852  9162
1853  9162              Pintando_Amadeus
1854  9162
1855  9162 2A 0C 8C     	ld hl,(Album_de_pintado_Amadeus)
1856  9165 CD 97 90     	call Extrae_address
1857  9168 24           	inc h
1858  9169 25           	dec h
1859  916A 28 03        	jr z,1F
1860  916C CD E1 95     	call Pinta_Sprites
1861  916F
1862  916F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1863  916F
1864  916F 21 27 8C     1 ld hl,Ctrl_3
1865  9172 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1866  9174 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1867  9176 CB AE        	res 5,(hl)
1868  9178
1869  9178 3E 01        	ld a,1												; Borde azul.
1870  917A D3 FE        	out ($fe),a
1871  917C
1872  917C C9           	ret
1873  917D
1874  917D              Aplica_Shield
1875  917D
1876  917D              ;	Bit 1 "1" (Shield_3) Sólo borra.
1877  917D              ;		  "0"     ""     Borra/Pinta.
1878  917D              ;	Bit 2    ""  RET.	 No borra, no pinta.
1879  917D
1880  917D 21 53 8C     	ld hl,Shield_3
1881  9180
1882  9180 CB 5E        	bit 3,(hl)
1883  9182 20 DE        	jr nz,Pintando_Amadeus
1884  9184
1885  9184 CB 56        	bit 2,(hl)
1886  9186 20 E7        	jr nz,1B
1887  9188
1888  9188 CB 4E        	bit 1,(hl)
1889  918A C4 91 91     	call nz,Borra_Amadeus_shield
1890  918D
1891  918D 28 BF        	jr z,Borrando_Amadeus
1892  918F 18 DE        	jr 1B
1893  9191
1894  9191              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1895  9191
1896  9191              Borra_Amadeus_shield
1897  9191
1898  9191 3A 27 8C     	ld a,(Ctrl_3)
1899  9194 CB 6F        	bit 5,a
1900  9196 28 08        	jr z,1F
1901  9198
1902  9198 2A 0E 8C     	ld hl,(Album_de_borrado_Amadeus)
1903  919B CD 97 90     	call Extrae_address
1904  919E 18 06        	jr 2F
1905  91A0
1906  91A0 2A 0C 8C     1 ld hl,(Album_de_pintado_Amadeus)
1907  91A3 CD 97 90     	call Extrae_address
1908  91A6
1909  91A6 CD E1 95     2 call Pinta_Sprites
1910  91A9
1911  91A9 AF           	xor a
1912  91AA 3C           	inc a											; Asegura NZ en la salida de la rutina.
1913  91AB
1914  91AB C9           	ret
1915  91AC
1916  91AC              Pinta_Amadeus_shield
1917  91AC
1918  91AC 2A 0C 8C     	ld hl,(Album_de_pintado_Amadeus)
1919  91AF CD 97 90     	call Extrae_address
1920  91B2 CD E1 95     	call Pinta_Sprites
1921  91B5
1922  91B5 AF           	xor a
1923  91B6 3C           	inc a											; Asegura NZ en la salida de la rutina.
1924  91B7
1925  91B7 C9           	ret
1926  91B8
1927  91B8              Borra_Pinta_Amadeus_shield
1928  91B8
1929  91B8 CD 91 91     	call Borra_Amadeus_shield
1930  91BB CD AC 91     	call Pinta_Amadeus_shield
1931  91BE C9           	ret
1932  91BF
1933  91BF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1934  91BF              ;
1935  91BF              ;	19/6/24
1936  91BF              ;
1937  91BF
1938  91BF              Teclado
1939  91BF
1940  91BF              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1941  91BF
1942  91BF 3E F7        	ld a,$f7												; "5" para disparar.
1943  91C1 DB FE        	in a,($fe)
1944  91C3 E6 10        	and $10
1945  91C5
1946  91C5 CC 14 A1     	call z,Genera_disparo_Amadeus
1947  91C8
1948  91C8 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1949  91CA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1950  91CC E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1951  91CE CC 4E 9D         call z,Amadeus_a_izquierda
1952  91D1
1953  91D1 3E F7        	ld a,$f7
1954  91D3 DB FE        	in a,($fe)
1955  91D5 E6 01        	and $01
1956  91D7 C8           	ret z
1957  91D8
1958  91D8 3E F7        	ld a,$f7
1959  91DA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1960  91DC E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1961  91DE CC 66 9D     	call z,Amadeus_a_derecha
1962  91E1
1963  91E1 C9           	ret
1964  91E2
1965  91E2              ; ------------------------------------------------------------------------------------------------------------------------
1966  91E2              ;
1967  91E2              ;	06/07/24
1968  91E2              ;
1969  91E2
1970  91E2              Genera_explosion
1971  91E2
1972  91E2 21 39 8C     	ld hl,Clock_explosion
1973  91E5 35           	dec (hl)
1974  91E6 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1975  91E8
1976  91E8              Borra_entidad_colisionada
1977  91E8
1978  91E8 CD F1 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1979  91EB CD FA 8F     	call Cargamos_registros_con_explosion
1980  91EE CD E2 94     	call Genera_datos_de_impresion
1981  91F1
1982  91F1 AF           	xor a
1983  91F2 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1984  91F3
1985  91F3 C9           	ret
1986  91F4
1987  91F4              Siguiente_frame_explosion
1988  91F4
1989  91F4 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1990  91F6
1991  91F6              ; Avanza Frame de explosión.
1992  91F6
1993  91F6 2A BE 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1994  91F9 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1995  91FC
1996  91FC 79           	ld a,c
1997  91FD 95           	sub l
1998  91FE 20 0B        	jr nz,1F
1999  9200
2000  9200              ; Fín de la entidad !!!!!!!!!!!!!
2001  9200
2002  9200 21 FE 8B     	ld hl,Numero_parcial_de_entidades
2003  9203 35           	dec (hl)
2004  9204 23           	inc hl
2005  9205 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2006  9206
2007  9206 CD 62 93     	call Limpiamos_bandeja_DRAW
2008  9209 18 DD        	jr Borra_entidad_colisionada
2009  920B
2010  920B 23           1 inc hl
2011  920C 23           	inc hl
2012  920D 22 BE 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2013  9210 18 D6        	jr Borra_entidad_colisionada
2014  9212
2015  9212              ; ----- ----- ----- ----- -----
2016  9212
2017  9212              Genera_explosion_Amadeus
2018  9212
2019  9212 21 3A 8C     	ld hl,Clock_explosion_Amadeus
2020  9215 35           	dec (hl)
2021  9216 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2022  9218
2023  9218              Borra_Amadeus_impactado
2024  9218
2025  9218 CD 6E 8E     	call Change_Amadeus
2026  921B CD 07 90     	call Cargamos_registros_con_explosion_Amadeus
2027  921E CD 28 90     	call Genera_datos_de_impresion_Amadeus
2028  9221
2029  9221 21 27 8C     	ld hl,Ctrl_3
2030  9224 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2031  9226
2032  9226 AF           	xor a
2033  9227 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2034  9228
2035  9228 C9           	ret
2036  9229
2037  9229              Siguiente_frame_explosion_Amadeus
2038  9229
2039  9229 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2040  922B
2041  922B              ; Avanza Frame de explosión.
2042  922B
2043  922B 2A 74 89     	ld hl,(Pamm_Amadeus)
2044  922E 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2045  9231
2046  9231 79           	ld a,c
2047  9232 95           	sub l
2048  9233 20 0B        	jr nz,1F
2049  9235
2050  9235              ; Fín de Amadeus !!!!!!!!!!!!!
2051  9235              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2052  9235
2053  9235 AF           	xor a
2054  9236 32 71 89     	ld (Impacto_Amadeus),a
2055  9239 21 27 8C     	ld hl,Ctrl_3
2056  923C CB F6        	set 6,(hl)
2057  923E
2058  923E 18 D8        	jr Borra_Amadeus_impactado
2059  9240
2060  9240 23           1 inc hl
2061  9241 23           	inc hl
2062  9242 22 74 89     	ld (Pamm_Amadeus),hl
2063  9245 18 D1        	jr Borra_Amadeus_impactado
2064  9247
2065  9247              ; ---------------------------------------------------------------
2066  9247
2067  9247              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9247              ; ******************************************************************************************************************************************************************************************
   2+ 9247              ;
   3+ 9247              ;   21/04/24
   4+ 9247              ;
   5+ 9247              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9247              ;   (XOR) bit a bit.
   7+ 9247              ;
   8+ 9247              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9247
  10+ 9247              Derivando_RND
  11+ 9247
  12+ 9247 21 F6 88         ld hl,Numeros_aleatorios
  13+ 924A
  14+ 924A ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 924C C5               push bc
  16+ 924D              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 924D 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9250              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9250
  20+ 9250 A7           6 and a                                 ; Carry a "0".
  21+ 9251 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9253 30 02            jr nc,1F
  23+ 9255
  24+ 9255 CB C1            set 0,c
  25+ 9257
  26+ 9257 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9258 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 925A 5F               ld e,a
  29+ 925B
  30+ 925B 7A               ld a,d
  31+ 925C E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 925E 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9260
  34+ 9260 CB 3F            srl a
  35+ 9262
  36+ 9262 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9263
  38+ 9263 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9264 28 04            jr z,4F
  40+ 9266
  41+ 9266 CB FF            set 7,a
  42+ 9268 18 02            jr 5F
  43+ 926A
  44+ 926A CB BF        4 res 7,a
  45+ 926C
  46+ 926C CB 21        5 sla c
  47+ 926E 10 E0            djnz 6B
  48+ 9270
  49+ 9270 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9271
  51+ 9271 77               ld (hl),a
  52+ 9272 23               inc hl
  53+ 9273 C1               pop bc
  54+ 9274 10 D4            djnz 3B
  55+ 9276
  56+ 9276 C9               ret
  57+ 9277
  58+ 9277
  59+ 9277
# file closed: RND_Derivando.asm
2068  9277              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9277              ;---------------------------------------------------------------------------------------------------------------
   2+ 9277              ;
   3+ 9277              ;   8/3/24
   4+ 9277              ;
   5+ 9277              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9277              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9277              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9277              ;	_ de la 1ª entidad del Nivel.
   9+ 9277              ;
  10+ 9277              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9277
  12+ 9277              ;	MODIFICA: HL,DE y A.
  13+ 9277              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9277
  15+ 9277              Inicializa_Nivel
  16+ 9277
  17+ 9277 2A 47 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 927A CD 97 90     	call Extrae_address
  19+ 927D 7E           	ld a,(hl)
  20+ 927E 32 FD 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9281 23           	inc hl
  22+ 9282 CD 8F 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9285 22 49 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9288 CD 98 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 928B
  26+ 928B CD A9 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 928E C9           	ret
  28+ 928F
  29+ 928F              ; ----------------------
  30+ 928F
  31+ 928F 11 DC 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9292 01 04 00     	ld bc,4
  33+ 9295 ED B0        	ldir
  34+ 9297 C9           	ret
  35+ 9298
  36+ 9298 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9299 CD 33 94         call Calcula_salto_en_BC
  38+ 929C 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 929F A7               and a
  40+ 92A0 ED 4A            adc hl,bc
  41+ 92A2 CD 97 90         call Extrae_address
  42+ 92A5 22 E8 8B         ld (Puntero_indice_mov),hl
  43+ 92A8 C9               ret
  44+ 92A9
  45+ 92A9 3A B7 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92AC CD 33 94     	call Calcula_salto_en_BC
  47+ 92AF 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92B2 A7               and a
  49+ 92B3 ED 4A            adc hl,bc
  50+ 92B5 CD 97 90         call Extrae_address
  51+ 92B8 22 BE 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92BB C9           	ret
  53+ 92BC
  54+ 92BC              ;---------------------------------------------------------------------------------------------------------------
  55+ 92BC              ;
  56+ 92BC              ;   5/1/24
  57+ 92BC              ;
  58+ 92BC              ;	Destruye A,BC,HL,DE
  59+ 92BC
  60+ 92BC              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92BC              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92BC
  63+ 92BC              Inicia_Entidades
  64+ 92BC
  65+ 92BC              ; Preparamos los punteros de las cajas de entidades:
  66+ 92BC
  67+ 92BC CD 7A 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92BF              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92BF CD 7B 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92C2
  71+ 92C2 2A 49 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92C5
  73+ 92C5 22 49 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92C8
  75+ 92C8 CD E1 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92CB
  77+ 92CB 2A 49 8C     	ld hl,(Datos_de_nivel)
  78+ 92CE
  79+ 92CE              ; En este punto:
  80+ 92CE              ;
  81+ 92CE              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92CE              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92CE
  84+ 92CE C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92CF
  86+ 92CF 7E           	ld a,(hl)
  87+ 92D0 CD 4D 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92D3
  89+ 92D3 CD 45 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92D6
  91+ 92D6              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92D6
  93+ 92D6 CD 03 94     	call Busca_mov_masticados_segun_tipo
  94+ 92D9
  95+ 92D9 A7           	and a
  96+ 92DA 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92DC
  98+ 92DC              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92DC
 100+ 92DC              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92DC              ;	_ de este tipo de entidad.
 102+ 92DC
 103+ 92DC CD E5 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92DF CD F2 9E     	call Transfiere_datos_de_contadores
 105+ 92E2
 106+ 92E2 18 06        	jr 4F
 107+ 92E4
 108+ 92E4 CD 8D 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92E7
 110+ 92E7              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92E7              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92E7              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92E7              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92E7              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92E7
 116+ 92E7 CD C1 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92EA              ;																; _ Mov_masticados ya generados.
 118+ 92EA
 119+ 92EA CD E1 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92ED
 121+ 92ED DD E5        	push ix
 122+ 92EF E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92F0
 124+ 92F0 D5           	push de
 125+ 92F1 CD B6 94     	call Genera_coordenadas
 126+ 92F4
 127+ 92F4 ED 5B 21 8C  	ld de,(Scanlines_album_SP)
 128+ 92F8 CD F1 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92FB D1           	pop de
 130+ 92FC
 131+ 92FC CD E2 94     	call Genera_datos_de_impresion
 132+ 92FF              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92FF              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92FF              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92FF              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92FF
 137+ 92FF CD 85 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9302
 139+ 9302              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9302
 141+ 9302 ED 5B F7 8B  	ld de,(Puntero_store_caja)
 142+ 9306 CD 72 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9309
 144+ 9309 CD 62 93     	call Limpiamos_bandeja_DRAW
 145+ 930C CD E5 90     	call Incrementa_punteros_de_cajas
 146+ 930F
 147+ 930F              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 930F              ; _ entidad del Nivel.
 149+ 930F
 150+ 930F 3A 28 8C     	ld a,(Ctrl_4)
 151+ 9312 E6 F0        	and $f0
 152+ 9314 32 28 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9317
 154+ 9317              ; Siguiente entidad del Nivel.
 155+ 9317
 156+ 9317 2A 49 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 931A 23           	inc hl 														; _ entidad del Nivel.
 158+ 931B
 159+ 931B C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 931C
 161+ 931C 10 A7        	djnz 2B
 162+ 931E
 163+ 931E C9           	ret
 164+ 931F
 165+ 931F              ; -------------------------------------------------------------------------------------------------------------------
 166+ 931F              ;
 167+ 931F              ;	27/5/24
 168+ 931F              ;
 169+ 931F              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 931F              ;
 171+ 931F
 172+ 931F              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 931F              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 931F
 175+ 931F 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9322 CD 45 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9325
 178+ 9325
 179+ 9325              Construye_movimientos_masticados_Amadeus
 180+ 9325
 181+ 9325 2A BE 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9328 CD D4 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 932B              ;															; _ el (Contador_de_mov_masticados).
 184+ 932B CD 9D 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 932E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 932E
 187+ 932E              ; Generamos movimientos masticados de Amadeus.
 188+ 932E
 189+ 932E 06 79        	ld b,121												; $0079, 121d.
 190+ 9330
 191+ 9330 C5           1 push bc
 192+ 9331 CD 04 97     	call Draw
 193+ 9334 CD B9 8F     	call Guarda_movimiento_masticado
 194+ 9337
 195+ 9337 CD 78 9A     	call Mov_right
 196+ 933A CD 78 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 933D
 198+ 933D C1           	pop bc
 199+ 933E 10 F0        	djnz 1B
 200+ 9340
 201+ 9340              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9340
 203+ 9340              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9340              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9340
 206+ 9340 2A BE 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9343 01 08 00     	ld bc,8
 208+ 9346 A7           	and a
 209+ 9347 ED 42        	sbc hl,bc
 210+ 9349 22 BE 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 934C
 212+ 934C C9           	ret
 213+ 934D
 214+ 934D              ; ---------------------------------------------------------------------
 215+ 934D              ;
 216+ 934D              ;	10/02/24
 217+ 934D              ;
 218+ 934D              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 934D              ;
 220+ 934D              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 934D
 222+ 934D              Definicion_segun_tipo
 223+ 934D
 224+ 934D CD 33 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9350 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9353 CD 3B 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9356 C9           	ret
 228+ 9357
 229+ 9357              ; ---------------------------------------------------------------------
 230+ 9357              ;
 231+ 9357              ;	6/7/24
 232+ 9357
 233+ 9357
 234+ 9357              Store_Restore_cajas
 235+ 9357
 236+ 9357 ED 5B F7 8B  	ld de,(Puntero_store_caja)
 237+ 935B CD 72 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 935E CD E5 90     	call Incrementa_punteros_de_cajas
 239+ 9361 C9           	ret
 240+ 9362
 241+ 9362              ; ---------------------------------------------------------------------
 242+ 9362              ;
 243+ 9362              ;	23/6/24
 244+ 9362              ;
 245+ 9362              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9362              ;
 247+ 9362              ;	MODIFY: HL
 248+ 9362
 249+ 9362              Limpiamos_bandeja_DRAW
 250+ 9362
 251+ 9362 ED 73 04 8C  	ld (Stack),sp
 252+ 9366 31 DC 8B     	ld sp,Vel_left
 253+ 9369
 254+ 9369 AF           	xor a
 255+ 936A 67           	ld h,a
 256+ 936B 6F           	ld l,a
 257+ 936C
 258+ 936C E5           	push hl
 259+ 936D E5           	push hl
 260+ 936E E5           	push hl
 261+ 936F E5           	push hl
 262+ 9370 E5           	push hl
 263+ 9371 E5           	push hl
 264+ 9372 E5           	push hl
 265+ 9373 E5           	push hl
 266+ 9374 E5           	push hl
 267+ 9375 E5           	push hl
 268+ 9376 E5           	push hl
 269+ 9377 E5           	push hl
 270+ 9378 E5           	push hl
 271+ 9379 E5           	push hl
 272+ 937A E5           	push hl
 273+ 937B E5           	push hl
 274+ 937C E5           	push hl
 275+ 937D E5           	push hl
 276+ 937E
 277+ 937E 33           	inc sp
 278+ 937F
 279+ 937F E5           	push hl
 280+ 9380 ED 7B 04 8C  	ld sp,(Stack)
 281+ 9384
 282+ 9384 C9           	ret
 283+ 9385
 284+ 9385              ; ---------------------------------------------------------------------
 285+ 9385              ;
 286+ 9385              ;	24/03/24
 287+ 9385
 288+ 9385 2A C0 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9388 2B           	dec hl
 290+ 9389 22 C0 8B     	ld (Contador_de_mov_masticados),hl
 291+ 938C C9           	ret
 292+ 938D
 293+ 938D              ; ---------------------------------------------------------------------
 294+ 938D              ;
 295+ 938D              ;	8/5/24
 296+ 938D
 297+ 938D              Reinicia_entidad_maliciosa
 298+ 938D
 299+ 938D              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 938D
 301+ 938D CD E5 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9390 CD F2 9E     	call Transfiere_datos_de_contadores
 303+ 9393
 304+ 9393              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9393
 306+ 9393 3A B7 8B     	ld a,(Tipo)
 307+ 9396 CD 4D 93     	call Definicion_segun_tipo
 308+ 9399
 309+ 9399 E5           	push hl
 310+ 939A DD E1        	pop ix
 311+ 939C
 312+ 939C DD 6E 0B     	ld l,(ix+11)
 313+ 939F DD 66 0C     	ld h,(ix+12)
 314+ 93A2
 315+ 93A2 22 BE 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93A5
 317+ 93A5 CD E1 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93A8
 319+ 93A8              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93A8              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93A8              ; Ejemplos.
 322+ 93A8
 323+ 93A8              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93A8              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93A8              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93A8              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93A8              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93A8
 329+ 93A8 21 BA 8B     	ld hl,Contador_de_vueltas
 330+ 93AB CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93AD
 332+ 93AD 7E           	ld a,(hl)
 333+ 93AE CB 2F        	sra a
 334+ 93B0 CB 2F        	sra a
 335+ 93B2
 336+ 93B2 32 C2 8B     	ld (Velocidad),a
 337+ 93B5
 338+ 93B5 3E 40        	ld a,$40
 339+ 93B7 BE           	cp (hl)
 340+ 93B8 C0           	ret nz
 341+ 93B9
 342+ 93B9              ; Límitador.
 343+ 93B9
 344+ 93B9              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93B9
 346+ 93B9 CB 2E        	sra (hl)
 347+ 93BB 21 C2 8B     	ld hl,Velocidad
 348+ 93BE CB 2E        	sra (hl)
 349+ 93C0
 350+ 93C0 C9           	ret
 351+ 93C1
 352+ 93C1              ; ---------------------------------------------------------------------
 353+ 93C1              ;
 354+ 93C1              ;	22/01/24
 355+ 93C1
 356+ 93C1 21 28 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93C4 CB 46        	bit 0,(hl)
 358+ 93C6 20 0D        	jr nz,1F
 359+ 93C8 CB 4E        	bit 1,(hl)
 360+ 93CA 20 0C        	jr nz,2F
 361+ 93CC CB 56        	bit 2,(hl)
 362+ 93CE 20 0B        	jr nz,3F
 363+ 93D0 CB 5E        	bit 3,(hl)
 364+ 93D2 20 0A        	jr nz,4F
 365+ 93D4 C9           	ret
 366+ 93D5
 367+ 93D5 CB E6        1 set 4,(hl)
 368+ 93D7 C9           	ret
 369+ 93D8 CB EE        2 set 5,(hl)
 370+ 93DA C9           	ret
 371+ 93DB CB F6        3 set 6,(hl)
 372+ 93DD C9           	ret
 373+ 93DE CB FE        4 set 7,(hl)
 374+ 93E0 C9           	ret
 375+ 93E1
 376+ 93E1              ; ---------------------------------------------------------------------
 377+ 93E1              ;
 378+ 93E1              ;	23/01/24
 379+ 93E1              ;
 380+ 93E1              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93E1              ;
 382+ 93E1              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93E1              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93E1              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93E1              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93E1
 387+ 93E1              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93E1
 389+ 93E1 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93E2 3D           	dec a
 391+ 93E3 20 06        	jr nz,1F
 392+ 93E5
 393+ 93E5              ; --- Tipo_1
 394+ 93E5
 395+ 93E5 21 28 8C     	ld hl,Ctrl_4
 396+ 93E8 CB C6        	set 0,(hl)
 397+ 93EA C9           	ret
 398+ 93EB
 399+ 93EB 3D           1 dec a
 400+ 93EC 20 06        	jr nz,2F
 401+ 93EE
 402+ 93EE              ; --- Tipo_2
 403+ 93EE
 404+ 93EE 21 28 8C     	ld hl,Ctrl_4
 405+ 93F1 CB CE        	set 1,(hl)
 406+ 93F3 C9           	ret
 407+ 93F4
 408+ 93F4 3D           2 dec a
 409+ 93F5 20 06        	jr nz,3F
 410+ 93F7
 411+ 93F7              ; --- Tipo_3
 412+ 93F7
 413+ 93F7 21 28 8C     	ld hl,Ctrl_4
 414+ 93FA CB D6        	set 2,(hl)
 415+ 93FC C9           	ret
 416+ 93FD
 417+ 93FD              ; --- Tipo_3
 418+ 93FD
 419+ 93FD 21 28 8C     3 ld hl,Ctrl_4
 420+ 9400 CB D6        	set 2,(hl)
 421+ 9402 C9           	ret
 422+ 9403
 423+ 9403              ; ---------------------------------------------------------------------
 424+ 9403              ;
 425+ 9403              ;	22/01/24
 426+ 9403
 427+ 9403 21 28 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9406 CB 46        	bit 0,(hl)
 429+ 9408 20 0E        	jr nz,1F
 430+ 940A
 431+ 940A CB 4E        	bit 1,(hl)
 432+ 940C 20 10        	jr nz,2F
 433+ 940E
 434+ 940E CB 56        	bit 2,(hl)
 435+ 9410 20 12        	jr nz,3F
 436+ 9412
 437+ 9412 CB 5E        	bit 3,(hl)
 438+ 9414 20 14        	jr nz,4F
 439+ 9416 18 19        	jr 6F
 440+ 9418
 441+ 9418              ; Entidad_de_Tipo_1.
 442+ 9418
 443+ 9418 CB 66        1 bit 4,(hl)
 444+ 941A 28 15        	jr z,6F
 445+ 941C 18 10        	jr 5F
 446+ 941E
 447+ 941E              ; Entidad_de_Tipo_2.
 448+ 941E
 449+ 941E CB 6E        2 bit 5,(hl)
 450+ 9420 28 0F        	jr z,6F
 451+ 9422 18 0A        	jr 5F
 452+ 9424
 453+ 9424              ; Entidad_de_Tipo_3.
 454+ 9424
 455+ 9424 CB 76        3 bit 6,(hl)
 456+ 9426 28 09        	jr z,6F
 457+ 9428 18 04        	jr 5F
 458+ 942A
 459+ 942A              ; Entidad_de_Tipo_4.
 460+ 942A
 461+ 942A CB 7E        4 bit 7,(hl)
 462+ 942C 28 03        	jr z,6F
 463+ 942E
 464+ 942E              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 942E
 466+ 942E AF           5 xor a
 467+ 942F 3C           	inc a
 468+ 9430 C9           	ret
 469+ 9431
 470+ 9431              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9431
 472+ 9431 AF           6 xor a
 473+ 9432 C9           	ret
 474+ 9433
 475+ 9433              ;	------------------------------------------------------------------------------------
 476+ 9433              ;
 477+ 9433              ;	12/01/24
 478+ 9433              ;
 479+ 9433              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9433              ;
 481+ 9433              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9433              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9433
 484+ 9433 CB 27        Calcula_salto_en_BC sla a
 485+ 9435 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9437 4F           	ld c,a
 487+ 9438 06 00        	ld b,0
 488+ 943A C9           	ret
 489+ 943B
 490+ 943B              ; ------------------------------------------------------------------
 491+ 943B              ;
 492+ 943B              ;	19/1/24
 493+ 943B              ;
 494+ 943B              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 943B              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 943B
 497+ 943B A7           Situa_en_datos_de_definicion and a
 498+ 943C ED 4A        	adc hl,bc
 499+ 943E CD 97 90     	call Extrae_address
 500+ 9441 22 02 8C         ld (Datos_de_entidad),hl
 501+ 9444 C9           	ret
 502+ 9445
 503+ 9445              ; ------------------------------------------------------------------
 504+ 9445
 505+ 9445              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9445              ; 	inc de
 507+ 9445              ; 	inc de
 508+ 9445              ; 	ex de,hl
 509+ 9445              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9445              ; 	ret
 511+ 9445
 512+ 9445              ; ----------------------------------------------------------------------------------------------------------
 513+ 9445              ;
 514+ 9445              ;	24/6/24
 515+ 9445              ;
 516+ 9445              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9445              ;	_ de entidad.
 518+ 9445              ;
 519+ 9445              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9445              ;
 521+ 9445              ;
 522+ 9445              ;	MODIFICA: HL,DE y BC
 523+ 9445
 524+ 9445
 525+ 9445              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9445
 527+ 9445 11 B7 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9448 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9449 12           	ld (de),a
 530+ 944A 23           	inc hl
 531+ 944B              ;
 532+ 944B 11 C5 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 944E 01 02 00     	ld bc,2
 534+ 9451 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9453              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9453 11 BA 8B     	ld de,Contador_de_vueltas
 537+ 9456 7E           	ld a,(hl)
 538+ 9457 12           	ld (de),a
 539+ 9458 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9459
 541+ 9459 11 CC 8B     	ld de,Indice_Sprite_der
 542+ 945C 01 04 00     	ld bc,4
 543+ 945F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9461
 545+ 9461 11 D4 8B     	ld de,Posicion_inicio
 546+ 9464 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9467 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9469
 549+ 9469 11 BE 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 946C 01 02 00     	ld bc,2
 551+ 946F ED B0        	ldir
 552+ 9471
 553+ 9471 C9           	ret
 554+ 9472
 555+ 9472              ; ----------------------------------------------------------------------------------------------------------
 556+ 9472              ;
 557+ 9472              ;	1/8/24
 558+ 9472              ;
 559+ 9472
 560+ 9472              Parametros_de_bandeja_DRAW_a_caja
 561+ 9472
 562+ 9472 21 B7 8B     	ld hl,Bandeja_DRAW
 563+ 9475 01 0C 00     	ld bc,12
 564+ 9478 ED B0        	ldir
 565+ 947A C9           	ret
 566+ 947B
 567+ 947B              ;---------------------------------------------------------------------------------------------------------------
 568+ 947B              ;
 569+ 947B              ;	5/1/24
 570+ 947B              ;
 571+ 947B              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 947B              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 947B              ;
 574+ 947B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 947B              ;
 576+ 947B              ;	(Numero_parcial_de_entidades)="7".
 577+ 947B              ;
 578+ 947B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 947B              ;
 580+ 947B              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 947B              ;
 582+ 947B              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 947B              ;	MODIFICA: A y B.
 584+ 947B              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 947B
 586+ 947B              Inicializa_Numero_parcial_de_entidades
 587+ 947B
 588+ 947B              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 947B
 590+ 947B 3A FD 8B     	ld a,(Numero_de_entidades)
 591+ 947E A7           	and a
 592+ 947F
 593+ 947F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 947F              ;	jr z,$
 595+ 947F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 947F
 597+ 947F 20 03        	jr nz,3F
 598+ 9481
 599+ 9481              ; ---------- ---------- ----------
 600+ 9481
 601+ 9481              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9481              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9481
 604+ 9481 CD 77 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9484
 606+ 9484              ; ---------- ---------- ----------
 607+ 9484
 608+ 9484 3A FD 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9487 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9489 38 08        	jr c,1F
 611+ 948B
 612+ 948B              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 948B              ; Actualizamos variables.
 614+ 948B
 615+ 948B 3E 07        	ld a,7
 616+ 948D 32 FE 8B     	ld (Numero_parcial_de_entidades),a
 617+ 9490 47           	ld b,a
 618+ 9491 18 04        	jr 2F
 619+ 9493
 620+ 9493              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9493              ; (Numero_de_entidades)="0".
 622+ 9493
 623+ 9493 32 FE 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 9496 47           	ld b,a
 625+ 9497 C9           2 ret
 626+ 9498
# file closed: Rutinas_de_inicio_y_niveles.asm
2069  9498              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9498              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9498              ;
   3+ 9498              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9498              ;
   5+ 9498              ; *****************************************************************************************************************************************************************************************
   6+ 9498              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9498
   8+ 9498 7C           calcula_tercio ld a,h
   9+ 9499 E6 18        	and $18
  10+ 949B CB 2F        	sra a
  11+ 949D CB 2F        	sra a
  12+ 949F CB 2F        	sra a
  13+ 94A1 C9           	ret
  14+ 94A2
# file closed: calcula_tercio.asm
2070  94A2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94A2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94A2              ;
   3+ 94A2              ;
   4+ 94A2              ;	CLS.
   5+ 94A2              ;
   6+ 94A2              ;	Limpia la pantalla y define sus atributos.
   7+ 94A2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94A2              ;
   9+ 94A2              ;	COLORES: 0 ..... NEGRO
  10+ 94A2              ;    		 1 ..... AZUL
  11+ 94A2              ; 			 2 ..... ROJO
  12+ 94A2              ;			 3 ..... MAGENTA
  13+ 94A2              ; 			 4 ..... VERDE
  14+ 94A2              ; 			 5 ..... CIAN
  15+ 94A2              ;			 6 ..... AMARILLO
  16+ 94A2              ; 			 7 ..... BLANCO
  17+ 94A2              ;
  18+ 94A2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94A2              ;
  20+ 94A2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94A2
  22+ 94A2
  23+ 94A2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94A5 11 01 40     	LD DE,$4001
  25+ 94A8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94AB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94AD ED B0        	LDIR
  28+ 94AF 01 FF 02     	LD BC,767
  29+ 94B2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94B3 ED B0        	LDIR
  31+ 94B5 C9           	ret
  32+ 94B6
# file closed: Cls.asm
2071  94B6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94B6              ; ------------------------------------------------------------------------
   2+ 94B6              ;
   3+ 94B6              ;	30/1/24
   4+ 94B6              ;
   5+ 94B6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94B6              ;	Fila superior "0", Columna izquierda "0".
   7+ 94B6              ;
   8+ 94B6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94B6              ;
  10+ 94B6              ;	Modifica: A,BC y DE.
  11+ 94B6
  12+ 94B6 7D           Genera_coordenadas ld a,l
  13+ 94B7 E6 1F        	and $1f
  14+ 94B9 32 B8 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94BC
  16+ 94BC 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94BD FE 40        	cp $40
  18+ 94BF 38 1C        	jr c,4F
  19+ 94C1
  20+ 94C1 CD 98 94     	call calcula_tercio
  21+ 94C4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94C5
  23+ 94C5 1E 00        	ld e,0
  24+ 94C7 7D           	ld a,l
  25+ 94C8 E6 E0        	and $e0
  26+ 94CA 28 01        	jr z,1F
  27+ 94CC 04           	inc b
  28+ 94CD
  29+ 94CD 04           1 inc b
  30+ 94CE 05           	dec b
  31+ 94CF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94D1              ;														; _ , salimos.
  33+ 94D1 1C           3 inc e
  34+ 94D2 D6 20        	sub 32
  35+ 94D4 20 FB        	jr nz,3B
  36+ 94D6 10 F5        	djnz 1B
  37+ 94D8
  38+ 94D8 7B           2 ld a,e
  39+ 94D9 32 B9 8B     	ld (Coordenada_y),a
  40+ 94DC C9           	ret
  41+ 94DD
  42+ 94DD AF           4 xor a
  43+ 94DE 32 B9 8B     	ld (Coordenada_y),a
  44+ 94E1 C9           	ret
  45+ 94E2
# file closed: Genera_coordenadas.asm
2072  94E2              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94E2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94E2              ;
   3+ 94E2              ;	20/09/24
   4+ 94E2              ;
   5+ 94E2              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94E2              ;   DE contiene Puntero_objeto.
   7+ 94E2              ;   IX contiene el Puntero de impresión.
   8+ 94E2
   9+ 94E2              Genera_datos_de_impresion
  10+ 94E2
  11+ 94E2 ED 73 04 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94E6
  13+ 94E6 31 BE 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94E9 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94EB
  16+ 94EB 2A 21 8C         ld hl,(Scanlines_album_SP)
  17+ 94EE
  18+ 94EE 3E 05            ld a,5
  19+ 94F0 85               add l
  20+ 94F1 6F               ld l,a
  21+ 94F2
  22+ 94F2 F9               ld sp,hl
  23+ 94F3 22 21 8C         ld (Scanlines_album_SP),hl
  24+ 94F6
  25+ 94F6 21 00 00         ld hl,0
  26+ 94F9
  27+ 94F9 DD E5            push ix
  28+ 94FB 3B               dec sp
  29+ 94FC ED 7A            adc hl,sp
  30+ 94FE D5               push de
  31+ 94FF
  32+ 94FF              ; Recuperamos SP.
  33+ 94FF
  34+ 94FF ED 7B 04 8C      ld sp,(Stack)
  35+ 9503
  36+ 9503 E5               push hl
  37+ 9504 F1               pop af
  38+ 9505 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9506
  40+ 9506              ; Tenemos el encabezado listo.
  41+ 9506              ; Preparamos registros para generar los scanlines.
  42+ 9506
  43+ 9506 DD E5            push ix
  44+ 9508 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9509
  46+ 9509 ED 5B 21 8C      ld de,(Scanlines_album_SP)
  47+ 950D
  48+ 950D              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 950D              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 950D
  51+ 950D 7C               ld a,h
  52+ 950E FE 50            cp $50
  53+ 9510 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9512
  55+ 9512 20 05            jr nz,2F
  56+ 9514
  57+ 9514 7D               ld a,l
  58+ 9515 FE E0            cp $e0
  59+ 9517 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9519
  61+ 9519 7D           2 ld a,l
  62+ 951A FE C0            cp $c0
  63+ 951C D2 B8 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 951F
  65+ 951F              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 951F
  67+ 951F CD B6 99         call NextScan
  68+ 9522 EB               ex de,hl
  69+ 9523
  70+ 9523 73               ld (hl),e
  71+ 9524 23               inc hl
  72+ 9525 72               ld (hl),d
  73+ 9526 23               inc hl
  74+ 9527
  75+ 9527 EB               ex de,hl
  76+ 9528
  77+ 9528 CD B6 99         call NextScan
  78+ 952B EB               ex de,hl
  79+ 952C
  80+ 952C 73               ld (hl),e
  81+ 952D 23               inc hl
  82+ 952E 72               ld (hl),d
  83+ 952F 23               inc hl
  84+ 9530
  85+ 9530 EB               ex de,hl
  86+ 9531
  87+ 9531 CD B6 99         call NextScan
  88+ 9534 EB               ex de,hl
  89+ 9535
  90+ 9535 73               ld (hl),e
  91+ 9536 23               inc hl
  92+ 9537 72               ld (hl),d
  93+ 9538 23               inc hl
  94+ 9539
  95+ 9539 EB               ex de,hl
  96+ 953A
  97+ 953A CD B6 99         call NextScan
  98+ 953D EB               ex de,hl
  99+ 953E
 100+ 953E 73               ld (hl),e
 101+ 953F 23               inc hl
 102+ 9540 72               ld (hl),d
 103+ 9541 23               inc hl
 104+ 9542
 105+ 9542 EB               ex de,hl
 106+ 9543
 107+ 9543 CD B6 99         call NextScan
 108+ 9546 EB               ex de,hl
 109+ 9547
 110+ 9547 73               ld (hl),e
 111+ 9548 23               inc hl
 112+ 9549 72               ld (hl),d
 113+ 954A 23               inc hl
 114+ 954B
 115+ 954B EB               ex de,hl
 116+ 954C
 117+ 954C CD B6 99         call NextScan
 118+ 954F EB               ex de,hl
 119+ 9550
 120+ 9550 73               ld (hl),e
 121+ 9551 23               inc hl
 122+ 9552 72               ld (hl),d
 123+ 9553 23               inc hl
 124+ 9554
 125+ 9554 EB               ex de,hl
 126+ 9555
 127+ 9555 CD B6 99         call NextScan
 128+ 9558 EB               ex de,hl
 129+ 9559
 130+ 9559 73               ld (hl),e
 131+ 955A 23               inc hl
 132+ 955B 72               ld (hl),d
 133+ 955C 23               inc hl
 134+ 955D
 135+ 955D EB               ex de,hl
 136+ 955E
 137+ 955E CD B6 99         call NextScan
 138+ 9561 EB               ex de,hl
 139+ 9562
 140+ 9562 73               ld (hl),e
 141+ 9563 23               inc hl
 142+ 9564 72               ld (hl),d
 143+ 9565 23               inc hl
 144+ 9566
 145+ 9566 EB               ex de,hl
 146+ 9567
 147+ 9567 CD B6 99         call NextScan
 148+ 956A EB               ex de,hl
 149+ 956B
 150+ 956B 73               ld (hl),e
 151+ 956C 23               inc hl
 152+ 956D 72               ld (hl),d
 153+ 956E 23               inc hl
 154+ 956F
 155+ 956F EB               ex de,hl
 156+ 9570
 157+ 9570 CD B6 99         call NextScan
 158+ 9573 EB               ex de,hl
 159+ 9574
 160+ 9574 73               ld (hl),e
 161+ 9575 23               inc hl
 162+ 9576 72               ld (hl),d
 163+ 9577 23               inc hl
 164+ 9578
 165+ 9578 EB               ex de,hl
 166+ 9579
 167+ 9579 CD B6 99         call NextScan
 168+ 957C EB               ex de,hl
 169+ 957D
 170+ 957D 73               ld (hl),e
 171+ 957E 23               inc hl
 172+ 957F 72               ld (hl),d
 173+ 9580 23               inc hl
 174+ 9581
 175+ 9581 EB               ex de,hl
 176+ 9582
 177+ 9582 CD B6 99         call NextScan
 178+ 9585 EB               ex de,hl
 179+ 9586
 180+ 9586 73               ld (hl),e
 181+ 9587 23               inc hl
 182+ 9588 72               ld (hl),d
 183+ 9589 23               inc hl
 184+ 958A
 185+ 958A EB               ex de,hl
 186+ 958B
 187+ 958B CD B6 99         call NextScan
 188+ 958E EB               ex de,hl
 189+ 958F
 190+ 958F 73               ld (hl),e
 191+ 9590 23               inc hl
 192+ 9591 72               ld (hl),d
 193+ 9592 23               inc hl
 194+ 9593
 195+ 9593 EB               ex de,hl
 196+ 9594
 197+ 9594 CD B6 99         call NextScan
 198+ 9597 EB               ex de,hl
 199+ 9598
 200+ 9598 73               ld (hl),e
 201+ 9599 23               inc hl
 202+ 959A 72               ld (hl),d
 203+ 959B 23               inc hl
 204+ 959C
 205+ 959C EB               ex de,hl
 206+ 959D
 207+ 959D CD B6 99         call NextScan
 208+ 95A0 EB               ex de,hl
 209+ 95A1
 210+ 95A1              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95A1              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95A1              ;   _ generar sus scanlines.
 213+ 95A1
 214+ 95A1              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95A1
 216+ 95A1 73               ld (hl),e
 217+ 95A2 23               inc hl
 218+ 95A3 72               ld (hl),d
 219+ 95A4 23               inc hl
 220+ 95A5
 221+ 95A5              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95A5
 223+ 95A5 22 21 8C         ld (Scanlines_album_SP),hl
 224+ 95A8
 225+ 95A8 EB               ex de,hl
 226+ 95A9
 227+ 95A9              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95A9
 229+ 95A9 CD B6 99         call NextScan
 230+ 95AC CD B6 99         call NextScan
 231+ 95AF
 232+ 95AF 22 2C 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95B2
 234+ 95B2              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95B2
 236+ 95B2 08               ex af,af
 237+ 95B3
 238+ 95B3 F5               push af
 239+ 95B4 E1               pop hl
 240+ 95B5
 241+ 95B5 36 10            ld (hl),16
 242+ 95B7
 243+ 95B7 C9               ret
 244+ 95B8
 245+ 95B8              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95B8
 247+ 95B8              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95B8
 249+ 95B8 3E 57            ld a,$57
 250+ 95BA 94               sub h
 251+ 95BB 47               ld b,a
 252+ 95BC
 253+ 95BC 3E DF            ld a,$df
 254+ 95BE BD               cp l
 255+ 95BF 38 04            jr c,1F
 256+ 95C1
 257+ 95C1 3E 08            ld a,8
 258+ 95C3 80               add b
 259+ 95C4 47               ld b,a
 260+ 95C5
 261+ 95C5              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95C5              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95C5
 264+ 95C5 48           1 ld c,b
 265+ 95C6 0C               inc c
 266+ 95C7
 267+ 95C7 04               inc b
 268+ 95C8 05               dec b
 269+ 95C9 20 02            jr nz,3F
 270+ 95CB
 271+ 95CB 18 0B            jr 6F
 272+ 95CD
 273+ 95CD CD B6 99     3 call NextScan
 274+ 95D0 EB               ex de,hl
 275+ 95D1
 276+ 95D1 73               ld (hl),e
 277+ 95D2 23               inc hl
 278+ 95D3 72               ld (hl),d
 279+ 95D4 23               inc hl
 280+ 95D5
 281+ 95D5 EB               ex de,hl
 282+ 95D6 10 F5            djnz 3B
 283+ 95D8
 284+ 95D8 ED 53 21 8C  6 ld (Scanlines_album_SP),de
 285+ 95DC
 286+ 95DC 08           5 ex af,af
 287+ 95DD F5               push af
 288+ 95DE E1               pop hl
 289+ 95DF
 290+ 95DF 71               ld (hl),c
 291+ 95E0
 292+ 95E0 C9               ret
 293+ 95E1
# file closed: Genera_datos_de_impresion.asm
2073  95E1              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95E1              ; -----------------------------------------------------------------------------
   2+ 95E1              ;
   3+ 95E1              ;   11/03/24
   4+ 95E1              ;
   5+ 95E1
   6+ 95E1              Pinta_Sprites
   7+ 95E1
   8+ 95E1              ;    ld hl,(Scanlines_album_SP)
   9+ 95E1              ;    call Extrae_address
  10+ 95E1
  11+ 95E1              ;    inc h
  12+ 95E1              ;    dec h
  13+ 95E1              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95E1
  15+ 95E1 ED 73 04 8C      ld (Stack),sp
  16+ 95E5
  17+ 95E5 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95E6              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95E6 2C               inc l
  20+ 95E7 2C               inc l
  21+ 95E8
  22+ 95E8 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95E9
  24+ 95E9 2C               inc l
  25+ 95EA F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95EB
  27+ 95EB              ;   Seleccionamos rutina de impresión:
  28+ 95EB
  29+ 95EB 3E 10            ld a,16
  30+ 95ED B8               cp b
  31+ 95EE C2 EA 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95F1
  33+ 95F1              ;   Rutinas:
  34+ 95F1
  35+ 95F1              Pinta_rapido    ;   1520 t/states.
  36+ 95F1
  37+ 95F1 E1               pop hl
  38+ 95F2
  39+ 95F2 1A               ld a,(de)
  40+ 95F3 AE               xor (hl)
  41+ 95F4 77               ld (hl),a
  42+ 95F5 2C               inc l
  43+ 95F6 1C               inc e
  44+ 95F7 1A               ld a,(de)
  45+ 95F8 AE               xor (hl)
  46+ 95F9 77               ld (hl),a
  47+ 95FA 2C               inc l
  48+ 95FB 1C               inc e
  49+ 95FC 1A               ld a,(de)
  50+ 95FD AE               xor (hl)
  51+ 95FE 77               ld (hl),a
  52+ 95FF 13               inc de
  53+ 9600
  54+ 9600 E1               pop hl
  55+ 9601
  56+ 9601 1A               ld a,(de)
  57+ 9602 AE               xor (hl)
  58+ 9603 77               ld (hl),a
  59+ 9604 2C               inc l
  60+ 9605 1C               inc e
  61+ 9606 1A               ld a,(de)
  62+ 9607 AE               xor (hl)
  63+ 9608 77               ld (hl),a
  64+ 9609 2C               inc l
  65+ 960A 1C               inc e
  66+ 960B 1A               ld a,(de)
  67+ 960C AE               xor (hl)
  68+ 960D 77               ld (hl),a
  69+ 960E 13               inc de
  70+ 960F
  71+ 960F E1               pop hl
  72+ 9610
  73+ 9610 1A               ld a,(de)
  74+ 9611 AE               xor (hl)
  75+ 9612 77               ld (hl),a
  76+ 9613 2C               inc l
  77+ 9614 1C               inc e
  78+ 9615 1A               ld a,(de)
  79+ 9616 AE               xor (hl)
  80+ 9617 77               ld (hl),a
  81+ 9618 2C               inc l
  82+ 9619 1C               inc e
  83+ 961A 1A               ld a,(de)
  84+ 961B AE               xor (hl)
  85+ 961C 77               ld (hl),a
  86+ 961D 13               inc de
  87+ 961E
  88+ 961E E1               pop hl
  89+ 961F
  90+ 961F 1A               ld a,(de)
  91+ 9620 AE               xor (hl)
  92+ 9621 77               ld (hl),a
  93+ 9622 2C               inc l
  94+ 9623 1C               inc e
  95+ 9624 1A               ld a,(de)
  96+ 9625 AE               xor (hl)
  97+ 9626 77               ld (hl),a
  98+ 9627 2C               inc l
  99+ 9628 1C               inc e
 100+ 9629 1A               ld a,(de)
 101+ 962A AE               xor (hl)
 102+ 962B 77               ld (hl),a
 103+ 962C 13               inc de
 104+ 962D
 105+ 962D E1               pop hl
 106+ 962E
 107+ 962E 1A               ld a,(de)
 108+ 962F AE               xor (hl)
 109+ 9630 77               ld (hl),a
 110+ 9631 2C               inc l
 111+ 9632 1C               inc e
 112+ 9633 1A               ld a,(de)
 113+ 9634 AE               xor (hl)
 114+ 9635 77               ld (hl),a
 115+ 9636 2C               inc l
 116+ 9637 1C               inc e
 117+ 9638 1A               ld a,(de)
 118+ 9639 AE               xor (hl)
 119+ 963A 77               ld (hl),a
 120+ 963B 13               inc de
 121+ 963C
 122+ 963C E1               pop hl
 123+ 963D
 124+ 963D 1A               ld a,(de)
 125+ 963E AE               xor (hl)
 126+ 963F 77               ld (hl),a
 127+ 9640 2C               inc l
 128+ 9641 1C               inc e
 129+ 9642 1A               ld a,(de)
 130+ 9643 AE               xor (hl)
 131+ 9644 77               ld (hl),a
 132+ 9645 2C               inc l
 133+ 9646 1C               inc e
 134+ 9647 1A               ld a,(de)
 135+ 9648 AE               xor (hl)
 136+ 9649 77               ld (hl),a
 137+ 964A 13               inc de
 138+ 964B
 139+ 964B E1               pop hl
 140+ 964C
 141+ 964C 1A               ld a,(de)
 142+ 964D AE               xor (hl)
 143+ 964E 77               ld (hl),a
 144+ 964F 2C               inc l
 145+ 9650 1C               inc e
 146+ 9651 1A               ld a,(de)
 147+ 9652 AE               xor (hl)
 148+ 9653 77               ld (hl),a
 149+ 9654 2C               inc l
 150+ 9655 1C               inc e
 151+ 9656 1A               ld a,(de)
 152+ 9657 AE               xor (hl)
 153+ 9658 77               ld (hl),a
 154+ 9659 13               inc de
 155+ 965A
 156+ 965A E1               pop hl
 157+ 965B
 158+ 965B 1A               ld a,(de)
 159+ 965C AE               xor (hl)
 160+ 965D 77               ld (hl),a
 161+ 965E 2C               inc l
 162+ 965F 1C               inc e
 163+ 9660 1A               ld a,(de)
 164+ 9661 AE               xor (hl)
 165+ 9662 77               ld (hl),a
 166+ 9663 2C               inc l
 167+ 9664 1C               inc e
 168+ 9665 1A               ld a,(de)
 169+ 9666 AE               xor (hl)
 170+ 9667 77               ld (hl),a
 171+ 9668 13               inc de
 172+ 9669
 173+ 9669 E1               pop hl
 174+ 966A
 175+ 966A 1A               ld a,(de)
 176+ 966B AE               xor (hl)
 177+ 966C 77               ld (hl),a
 178+ 966D 2C               inc l
 179+ 966E 1C               inc e
 180+ 966F 1A               ld a,(de)
 181+ 9670 AE               xor (hl)
 182+ 9671 77               ld (hl),a
 183+ 9672 2C               inc l
 184+ 9673 1C               inc e
 185+ 9674 1A               ld a,(de)
 186+ 9675 AE               xor (hl)
 187+ 9676 77               ld (hl),a
 188+ 9677 13               inc de
 189+ 9678
 190+ 9678 E1               pop hl
 191+ 9679
 192+ 9679 1A               ld a,(de)
 193+ 967A AE               xor (hl)
 194+ 967B 77               ld (hl),a
 195+ 967C 2C               inc l
 196+ 967D 1C               inc e
 197+ 967E 1A               ld a,(de)
 198+ 967F AE               xor (hl)
 199+ 9680 77               ld (hl),a
 200+ 9681 2C               inc l
 201+ 9682 1C               inc e
 202+ 9683 1A               ld a,(de)
 203+ 9684 AE               xor (hl)
 204+ 9685 77               ld (hl),a
 205+ 9686 13               inc de
 206+ 9687
 207+ 9687 E1               pop hl
 208+ 9688
 209+ 9688 1A               ld a,(de)
 210+ 9689 AE               xor (hl)
 211+ 968A 77               ld (hl),a
 212+ 968B 2C               inc l
 213+ 968C 1C               inc e
 214+ 968D 1A               ld a,(de)
 215+ 968E AE               xor (hl)
 216+ 968F 77               ld (hl),a
 217+ 9690 2C               inc l
 218+ 9691 1C               inc e
 219+ 9692 1A               ld a,(de)
 220+ 9693 AE               xor (hl)
 221+ 9694 77               ld (hl),a
 222+ 9695 13               inc de
 223+ 9696
 224+ 9696 E1               pop hl
 225+ 9697
 226+ 9697 1A               ld a,(de)
 227+ 9698 AE               xor (hl)
 228+ 9699 77               ld (hl),a
 229+ 969A 2C               inc l
 230+ 969B 1C               inc e
 231+ 969C 1A               ld a,(de)
 232+ 969D AE               xor (hl)
 233+ 969E 77               ld (hl),a
 234+ 969F 2C               inc l
 235+ 96A0 1C               inc e
 236+ 96A1 1A               ld a,(de)
 237+ 96A2 AE               xor (hl)
 238+ 96A3 77               ld (hl),a
 239+ 96A4 13               inc de
 240+ 96A5
 241+ 96A5 E1               pop hl
 242+ 96A6
 243+ 96A6 1A               ld a,(de)
 244+ 96A7 AE               xor (hl)
 245+ 96A8 77               ld (hl),a
 246+ 96A9 2C               inc l
 247+ 96AA 1C               inc e
 248+ 96AB 1A               ld a,(de)
 249+ 96AC AE               xor (hl)
 250+ 96AD 77               ld (hl),a
 251+ 96AE 2C               inc l
 252+ 96AF 1C               inc e
 253+ 96B0 1A               ld a,(de)
 254+ 96B1 AE               xor (hl)
 255+ 96B2 77               ld (hl),a
 256+ 96B3 13               inc de
 257+ 96B4
 258+ 96B4 E1               pop hl
 259+ 96B5
 260+ 96B5 1A               ld a,(de)
 261+ 96B6 AE               xor (hl)
 262+ 96B7 77               ld (hl),a
 263+ 96B8 2C               inc l
 264+ 96B9 1C               inc e
 265+ 96BA 1A               ld a,(de)
 266+ 96BB AE               xor (hl)
 267+ 96BC 77               ld (hl),a
 268+ 96BD 2C               inc l
 269+ 96BE 1C               inc e
 270+ 96BF 1A               ld a,(de)
 271+ 96C0 AE               xor (hl)
 272+ 96C1 77               ld (hl),a
 273+ 96C2 13               inc de
 274+ 96C3
 275+ 96C3 E1               pop hl
 276+ 96C4
 277+ 96C4 1A               ld a,(de)
 278+ 96C5 AE               xor (hl)
 279+ 96C6 77               ld (hl),a
 280+ 96C7 2C               inc l
 281+ 96C8 1C               inc e
 282+ 96C9 1A               ld a,(de)
 283+ 96CA AE               xor (hl)
 284+ 96CB 77               ld (hl),a
 285+ 96CC 2C               inc l
 286+ 96CD 1C               inc e
 287+ 96CE 1A               ld a,(de)
 288+ 96CF AE               xor (hl)
 289+ 96D0 77               ld (hl),a
 290+ 96D1 13               inc de
 291+ 96D2
 292+ 96D2 E1               pop hl
 293+ 96D3
 294+ 96D3 1A               ld a,(de)
 295+ 96D4 AE               xor (hl)
 296+ 96D5 77               ld (hl),a
 297+ 96D6 2C               inc l
 298+ 96D7 1C               inc e
 299+ 96D8 1A               ld a,(de)
 300+ 96D9 AE               xor (hl)
 301+ 96DA 77               ld (hl),a
 302+ 96DB 2C               inc l
 303+ 96DC 1C               inc e
 304+ 96DD 1A               ld a,(de)
 305+ 96DE AE               xor (hl)
 306+ 96DF 77               ld (hl),a
 307+ 96E0 13               inc de
 308+ 96E1
 309+ 96E1 ED 73 21 8C      ld (Scanlines_album_SP),sp
 310+ 96E5 ED 7B 04 8C      ld sp,(Stack)
 311+ 96E9 C9               ret
 312+ 96EA
 313+ 96EA              Pinta_lento
 314+ 96EA
 315+ 96EA E1           1 pop hl
 316+ 96EB
 317+ 96EB 1A               ld a,(de)
 318+ 96EC AE               xor (hl)
 319+ 96ED 77               ld (hl),a
 320+ 96EE 2C               inc l
 321+ 96EF 1C               inc e
 322+ 96F0 1A               ld a,(de)
 323+ 96F1 AE               xor (hl)
 324+ 96F2 77               ld (hl),a
 325+ 96F3 2C               inc l
 326+ 96F4 1C               inc e
 327+ 96F5 1A               ld a,(de)
 328+ 96F6 AE               xor (hl)
 329+ 96F7 77               ld (hl),a
 330+ 96F8 13               inc de
 331+ 96F9
 332+ 96F9 10 EF            djnz 1B
 333+ 96FB
 334+ 96FB ED 73 21 8C      ld (Scanlines_album_SP),sp
 335+ 96FF ED 7B 04 8C      ld sp,(Stack)
 336+ 9703 C9               ret
# file closed: Pinta_Sprites.asm
2074  9704              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9704              ; ******************************************************************************************************************************************************************************************
   2+ 9704              ;
   3+ 9704              ; 26/06/23
   4+ 9704              ;
   5+ 9704              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9704
   7+ 9704              Draw
   8+ 9704
   9+ 9704 CD AA 99     	call Prepara_draw
  10+ 9707 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9708 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9709 28 05        	jr z,2F
  13+ 970B
  14+ 970B 3A D6 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 970E 18 0C        	jr 1F
  16+ 9710
  17+ 9710 2A D4 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9713 22 C7 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9716 CD A2 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9719              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9719
  22+ 9719 CD 49 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 971C
  24+ 971C 3A C4 8B     1 ld a,(Ctrl_0)
  25+ 971F CB 6F        	bit 5,a
  26+ 9721 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9723
  28+ 9723 CD 38 97     	call Comprueba_limite_horizontal
  29+ 9726 CD C8 97     	call Comprueba_limite_vertical
  30+ 9729
  31+ 9729              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9729              ; -----------------------
  33+ 9729              ; -----------------------
  34+ 9729              ; -----------------------
  35+ 9729
  36+ 9729 CD 1E 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 972C CD 55 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 972F
  39+ 972F 3A C4 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9732 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9734 32 C4 8B     	ld (Ctrl_0),a
  42+ 9737
  43+ 9737 C9           	ret
  44+ 9738
  45+ 9738              ; *******************************************************************************************************************************************************************************************
  46+ 9738              ;	21/01/23
  47+ 9738              ;
  48+ 9738              ; 	Comprueba_limite_horizontal.
  49+ 9738              ;
  50+ 9738              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9738              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9738              ;
  53+ 9738              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9738              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9738              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9738              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9738
  58+ 9738
  59+ 9738
  60+ 9738 3A C4 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 973B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 973D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 973F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9741 32 C4 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9744 18 09            jr 6F
  66+ 9746 CB 5F        1 bit 3,a
  67+ 9748 28 0A            jr z,2F
  68+ 974A E6 F7            and $f7
  69+ 974C 32 C4 8B         ld (Ctrl_0),a
  70+ 974F CD A2 98     6 call Inicializacion
  71+ 9752 18 5B            jr 5F
  72+ 9754 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9755
  74+ 9755              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9755              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9755
  77+ 9755 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9756 2A D8 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9759 CD 98 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 975C 67           	ld h,a
  81+ 975D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 975E CD 98 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9761 67           	ld h,a
  84+ 9762 A7           	and a
  85+ 9763 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9765 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9766 3A D6 8B     	ld a,(Cuad_objeto)
  88+ 9769 FE 02        	cp 2
  89+ 976B 38 1E        	jr c,3F
  90+ 976D 28 1C        	jr z,3F
  91+ 976F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9770 28 23            jr z,7F
  93+ 9772 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9774 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9776 E1           	pop hl
  96+ 9777
  97+ 9777              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9777              ; _para indicar con E="2" en caso necesario.
  99+ 9777
 100+ 9777 E5               push hl
 101+ 9778 C5               push bc
 102+ 9779 CD 98 94     	call calcula_tercio
 103+ 977C FE 01        	cp 1
 104+ 977E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9780 CD B0 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9783 28 26            jr z,9F
 107+ 9785 38 24            jr c,9F
 108+ 9787 1E 00        11 ld e,0
 109+ 9789 18 22            jr 8F
 110+ 978B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 978C 28 07        	jr z, 7F
 112+ 978E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9790 1E 00         	ld e,0
 114+ 9792 E1           	pop hl
 115+ 9793 18 04        	jr 4F
 116+ 9795 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9797 18 15            jr 10F
 118+ 9799
 119+ 9799              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9799              ; _para indicar con E="2" en caso necesario.
 121+ 9799
 122+ 9799 E5           4 push hl
 123+ 979A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 979B CD 98 94     	call calcula_tercio
 125+ 979E FE 01        	cp 1
 126+ 97A0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97A2 CD B0 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97A5 28 04            jr z,9F
 129+ 97A7 30 02            jr nc,9F
 130+ 97A9 18 02        	jr 8F
 131+ 97AB 1E 02        9 ld e,2
 132+ 97AD C1           8 pop bc
 133+ 97AE E1           10 pop hl
 134+ 97AF C9           5 ret
 135+ 97B0
 136+ 97B0              ; --------------------
 137+ 97B0              ;
 138+ 97B0              ; 25/08/22
 139+ 97B0
 140+ 97B0 CD 98 94     Comprueba_centro call calcula_tercio
 141+ 97B3 67               ld h,a
 142+ 97B4 08           	ex af,af
 143+ 97B5 FE 02        	cp 2
 144+ 97B7 38 07        	jr c,1F
 145+ 97B9 28 05        	jr z,1F
 146+ 97BB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97BE 18 03        	jr 2F
 148+ 97C0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97C3 08           2 ex af,af
 150+ 97C4 A7               and a
 151+ 97C5 ED 42            sbc hl,bc
 152+ 97C7 C9               ret
 153+ 97C8
 154+ 97C8              ; *********************************************************************************************************************************************************************************************
 155+ 97C8              ;
 156+ 97C8              ;   16/8/22
 157+ 97C8              ;
 158+ 97C8              ;	Comprueba_limite_vertical
 159+ 97C8              ;
 160+ 97C8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97C8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97C8              ;
 163+ 97C8
 164+ 97C8 2A C7 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97CB 7D           	ld a,l
 166+ 97CC E6 1F        	and $1F
 167+ 97CE 57           	ld d,a
 168+ 97CF 3A DA 8B     	ld a,(Limite_vertical)
 169+ 97D2 BA           	cp d 											; Límite - Posición.
 170+ 97D3 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97D4 3A D6 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97D7 CB 47        	bit 0,a
 173+ 97D9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97DB
 175+ 97DB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97DB
 177+ 97DB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97DC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97DE
 180+ 97DE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97DE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97DE
 183+ 97DE 3A B8 8B         ld a,(Coordenada_X)
 184+ 97E1 16 0F            ld d,Centro_izquierda
 185+ 97E3 A7               and a
 186+ 97E4 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97E5 28 1E            jr z,3F
 188+ 97E7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97E9              ;                                                    ; _salimos sin modificar nada.
 190+ 97E9 18 0E            jr 2F
 191+ 97EB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97EC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97EE
 194+ 97EE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97EE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97EE
 197+ 97EE 3A B8 8B         ld a,(Coordenada_X)
 198+ 97F1 16 10            ld d,Centro_derecha
 199+ 97F3 A7               and a
 200+ 97F4 92               sub d
 201+ 97F5 28 0E            jr z,3F
 202+ 97F7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97F9              ;                                                    ; _salimos sin modificar nada.
 204+ 97F9 CB 43        2 bit 0,e
 205+ 97FB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97FD C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97FE CD 92 98         call Modificaccionne
 208+ 9801 C1           	pop bc
 209+ 9802 CD A2 98         call Inicializacion
 210+ 9805 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9806
 212+ 9806              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9806
 214+ 9806 C5           4 push bc
 215+ 9807 01 C6 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 980A 0A           	ld a,(bc)
 217+ 980B 3D           	dec a
 218+ 980C 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 980D 7D           	ld a,l
 220+ 980E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 980F CB 47        	bit 0,a
 222+ 9811 28 03        	jr z,5F
 223+ 9813 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9814 18 2E        	jr 7F
 225+ 9816
 226+ 9816              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9816
 228+ 9816 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9817 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9818 3A C4 8B     	ld a,(Ctrl_0)
 231+ 981B CB 4F        	bit 1,a
 232+ 981D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 981F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9820
 235+ 9820              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9820
 237+ 9820 1C               inc e
 238+ 9821 1D               dec e
 239+ 9822 20 07            jr nz,12F
 240+ 9824 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9825 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9826 22 C7 8B     	ld (Posicion_actual),hl
 243+ 9829 18 44        13 jr 9F
 244+ 982B CB 43        12 bit 0,e
 245+ 982D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 982F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 982F C1           	pop bc
 248+ 9830 18 D3        	jr 3B
 249+ 9832 80           14 add b
 250+ 9833 6F               ld l,a
 251+ 9834 22 C7 8B     	ld (Posicion_actual),hl
 252+ 9837 CD 92 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 983A 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 983C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 983E 32 C4 8B         ld (Ctrl_0),a
 256+ 9841 F1           	pop af
 257+ 9842 18 2B        	jr 9F
 258+ 9844
 259+ 9844              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9844
 261+ 9844 F5           7 push af
 262+ 9845 3A C4 8B     	ld a,(Ctrl_0)
 263+ 9848 CB 47        	bit 0,a
 264+ 984A 20 1D        	jr nz,8F
 265+ 984C F1           	pop af
 266+ 984D
 267+ 984D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 984D
 269+ 984D 1C           	inc e
 270+ 984E 1D               dec e
 271+ 984F 20 07            jr nz,10F
 272+ 9851 90           	sub b
 273+ 9852 6F               ld l,a
 274+ 9853 22 C7 8B     	ld (Posicion_actual),hl
 275+ 9856 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9858              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9858 CB 43        10 bit 0,e
 278+ 985A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 985C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 985C C1           	pop bc
 281+ 985D 18 A6        	jr 3B
 282+ 985F 90           16 sub b
 283+ 9860 6F               ld l,a
 284+ 9861 22 C7 8B     	ld (Posicion_actual),hl
 285+ 9864 CD 92 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9867 18 06            jr 9F
 287+ 9869 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 986B 32 C4 8B         ld (Ctrl_0),a
 289+ 986E F1           	pop af
 290+ 986F C1           9 pop bc
 291+ 9870 1E 00        	ld e,0
 292+ 9872 CD A2 98         call Inicializacion
 293+ 9875 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9876 08           	ex af,af
 295+ 9877 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9878 18 8B            jr 3B
 297+ 987A
 298+ 987A              ; --------------------
 299+ 987A
 300+ 987A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 987C CD C5 99     1 call PreviousScan
 302+ 987F 10 FB            djnz 1B
 303+ 9881 22 C7 8B     	ld (Posicion_actual),hl
 304+ 9884 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9885 C9           	ret
 306+ 9886
 307+ 9886              ; --------------------
 308+ 9886
 309+ 9886 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9888 CD B6 99     1 call NextScan
 311+ 988B 10 FB            djnz 1B
 312+ 988D 22 C7 8B     	ld (Posicion_actual),hl
 313+ 9890 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9891 C9           	ret
 315+ 9892
 316+ 9892              ; --------------------
 317+ 9892              ;
 318+ 9892              ;	22/01/23
 319+ 9892              ;
 320+ 9892              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9892              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9892              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9892
 324+ 9892
 325+ 9892              Modificaccionne
 326+ 9892
 327+ 9892 3A D6 8B     	ld a,(Cuad_objeto)
 328+ 9895 FE 02        	cp 2
 329+ 9897 CC 7A 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 989A DC 7A 98         call c,Modifica_Pos_actual
 331+ 989D C8           	ret z
 332+ 989E CD 86 98         call Modifica_Pos_actual2
 333+ 98A1 C9               ret
 334+ 98A2
 335+ 98A2              ; *************************************************************************************************************************************************************************************************
 336+ 98A2              ;
 337+ 98A2              ;	13/8/22
 338+ 98A2              ;
 339+ 98A2              ;	Inicializacion
 340+ 98A2              ;
 341+ 98A2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98A2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98A2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98A2              ;
 345+ 98A2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98A2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98A2              ;	_ desaparece/aparece.
 348+ 98A2
 349+ 98A2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98A2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98A2              ;
 352+ 98A2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98A2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98A2              ; 		   [E] ="0"
 355+ 98A2
 356+ 98A2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98A2
 358+ 98A2 CD 98 94     Inicializacion call calcula_tercio
 359+ 98A5 28 36        	jr z,primit
 360+ 98A7 E6 02        	and 2
 361+ 98A9 20 07        	jr nz,segmit
 362+ 98AB 7D           	ld a,l
 363+ 98AC FE 7F        	cp $7f
 364+ 98AE 38 2D        	jr c,primit
 365+ 98B0 28 2B        	jr z,primit
 366+ 98B2 CD 18 99     segmit call column
 367+ 98B5 38 13        	jr c,tercuad
 368+ 98B7 3E 04        cuarcuad ld a,4
 369+ 98B9 32 D6 8B     	ld (Cuad_objeto),a
 370+ 98BC 21 20 48     	ld hl,$4820
 371+ 98BF 22 D8 8B     	ld (Limite_horizontal),hl
 372+ 98C2 21 DA 8B     	ld hl,Limite_vertical
 373+ 98C5 36 0D        	ld (hl),$0d
 374+ 98C7 08           	ex af,af
 375+ 98C8 18 3C        	jr 1F
 376+ 98CA              tercuad
 377+ 98CA 3E 03        	ld a,3
 378+ 98CC 32 D6 8B     	ld (Cuad_objeto),a
 379+ 98CF 21 20 48     	ld hl,$4820
 380+ 98D2 22 D8 8B     	ld (Limite_horizontal),hl
 381+ 98D5 21 DA 8B     	ld hl,Limite_vertical
 382+ 98D8 36 12        	ld (hl),$12
 383+ 98DA 08           	ex af,af
 384+ 98DB 18 29        	jr 1F
 385+ 98DD CD 18 99     primit call column
 386+ 98E0 38 13        	jr c, primcuad
 387+ 98E2              segcuad
 388+ 98E2 3E 02        	ld a,2
 389+ 98E4 32 D6 8B     	ld (Cuad_objeto),a
 390+ 98E7 21 C0 4F     	ld hl,$4fc0
 391+ 98EA 22 D8 8B     	ld (Limite_horizontal),hl
 392+ 98ED 21 DA 8B     	ld hl,Limite_vertical
 393+ 98F0 36 0D        	ld (hl),$0d
 394+ 98F2 08           	ex af,af
 395+ 98F3 18 11        	jr 1F
 396+ 98F5              primcuad
 397+ 98F5 3E 01        	ld a,1
 398+ 98F7 32 D6 8B     	ld (Cuad_objeto),a
 399+ 98FA 21 C0 4F     	ld hl,$4fc0
 400+ 98FD 22 D8 8B     	ld (Limite_horizontal),hl
 401+ 9900 21 DA 8B     	ld hl,Limite_vertical
 402+ 9903 36 12        	ld (hl),$12
 403+ 9905 08           	ex af,af
 404+ 9906
 405+ 9906 C5           1 push bc
 406+ 9907 E5           	push hl
 407+ 9908 D5           	push de
 408+ 9909
 409+ 9909 2A C7 8B     	ld hl,(Posicion_actual)
 410+ 990C CD B6 94     	call Genera_coordenadas
 411+ 990F
 412+ 990F D1           	pop de
 413+ 9910 E1           	pop hl
 414+ 9911 C1           	pop bc
 415+ 9912
 416+ 9912 21 C4 8B     	ld hl,Ctrl_0
 417+ 9915 CB EE        	set 5,(hl)
 418+ 9917 C9           	ret
 419+ 9918
 420+ 9918              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9918
 422+ 9918              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9918              ;
 424+ 9918              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9918
 426+ 9918 7D           column ld a,l
 427+ 9919 E6 1F        	and $1f
 428+ 991B FE 10         	cp $10
 429+ 991D C9            	ret
 430+ 991E
 431+ 991E              ; --------------------------------------------------------------------------------------------------------------------
 432+ 991E              ;
 433+ 991E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 991E              ;
 435+ 991E              ; 14/12/22
 436+ 991E              ;
 437+ 991E              ;	Modifica: A y BC.
 438+ 991E
 439+ 991E 3A D6 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9921 E6 01        	and 1
 441+ 9923 28 17        	jr z,1F
 442+ 9925
 443+ 9925              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9925
 445+ 9925 3A B8 8B     	ld a,(Coordenada_X)
 446+ 9928 47           	ld b,a
 447+ 9929 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 992A 79           	ld a,c
 449+ 992B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 992C 38 08        	jr c,2F
 451+ 992E 47           	ld b,a
 452+ 992F 79           	ld a,c
 453+ 9930 90           	sub b
 454+ 9931 32 D7 8B     	ld (Columnas),a
 455+ 9934 18 1B        	jr 4F
 456+ 9936 79           2 ld a,c
 457+ 9937 32 D7 8B     	ld (Columnas),a
 458+ 993A 18 15        	jr 4F
 459+ 993C
 460+ 993C              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 993C
 462+ 993C 3A B8 8B     1 ld a,(Coordenada_X)
 463+ 993F 81           	add c
 464+ 9940 3D           	dec a
 465+ 9941 D6 1F        	sub $1f
 466+ 9943 38 08        	jr c,3F
 467+ 9945 47           	ld b,a
 468+ 9946 79           	ld a,c
 469+ 9947 90           	sub b
 470+ 9948 32 D7 8B     	ld (Columnas),a
 471+ 994B 18 04        	jr 4F
 472+ 994D 79           3 ld a,c
 473+ 994E 32 D7 8B     	ld (Columnas),a
 474+ 9951 D9           4 exx
 475+ 9952 4F           	ld c,a
 476+ 9953 D9           	exx
 477+ 9954 C9            ret
 478+ 9955
 479+ 9955              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9955              ;
 481+ 9955              ;   19/7/23
 482+ 9955              ;
 483+ 9955              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9955              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9955              ;
 486+ 9955              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9955              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9955              ;
 489+ 9955              ;	DESTRUYE: HL,B Y A.
 490+ 9955
 491+ 9955 3A D6 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9958 FE 02        	cp 2
 493+ 995A 38 18        	jr c,1F
 494+ 995C 28 16        	jr z,1F
 495+ 995E E6 01        	and 1
 496+ 9960 28 0D        	jr z,3F
 497+ 9962
 498+ 9962              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9962
 500+ 9962 CD 9E 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9965
 502+ 9965 7D           9 ld a,l
 503+ 9966 E6 1F        	and $1f
 504+ 9968 28 2A        	jr z,7F
 505+ 996A 2B           	dec hl
 506+ 996B 10 F8        	djnz 9B
 507+ 996D 18 25        	jr 7F
 508+ 996F
 509+ 996F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 996F
 511+ 996F 2A C7 8B     3 ld hl,(Posicion_actual)
 512+ 9972 18 20        	jr 7F
 513+ 9974
 514+ 9974 28 14        1 jr z,2F
 515+ 9976
 516+ 9976              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9976
 518+ 9976 CD 9E 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9979
 520+ 9979 7D           4 ld a,l
 521+ 997A E6 1F        	and $1f
 522+ 997C 28 03        	jr z,6F
 523+ 997E 2B           	dec hl
 524+ 997F 10 F8        	djnz 4B
 525+ 9981 06 0F        6 ld b,15
 526+ 9983 CD C5 99     5 call PreviousScan
 527+ 9986 10 FB        	djnz 5B
 528+ 9988 18 0A        	jr 7F
 529+ 998A
 530+ 998A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 998A
 532+ 998A CD 9E 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 998D 06 0F        	ld b,15
 534+ 998F CD C5 99     8 call PreviousScan
 535+ 9992 10 FB        	djnz 8B
 536+ 9994
 537+ 9994 E5           7 push hl
 538+ 9995 DD E1        	pop ix
 539+ 9997
 540+ 9997 2A C9 8B     	ld hl,(Puntero_objeto)
 541+ 999A E5           	push hl
 542+ 999B FD E1        	pop iy
 543+ 999D
 544+ 999D C9           	ret
 545+ 999E
 546+ 999E              ; --------------------------------------------------------------------------------------------------------------------
 547+ 999E              ;
 548+ 999E              ;	2/1/23
 549+ 999E              ;
 550+ 999E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 999E              ;
 552+ 999E              ;	Tras esta rutina tenemos:
 553+ 999E              ;
 554+ 999E              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 999E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 999E              ;
 557+ 999E              ;	DESTRUYE!!!!! HL,B y A.
 558+ 999E
 559+ 999E 2A C7 8B     Operandos ld hl,(Posicion_actual)
 560+ 99A1 3A D7 8B     	ld a,(Columnas)
 561+ 99A4 3D           	dec a
 562+ 99A5 20 01        	jr nz,1F
 563+ 99A7 3C           	inc a
 564+ 99A8 47           1 ld b,a
 565+ 99A9 C9           	ret
 566+ 99AA
 567+ 99AA              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99AA              ;
 569+ 99AA              ;	Prepara_draw
 570+ 99AA              ;
 571+ 99AA              ;	Es una rutina de carga.
 572+ 99AA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99AA              ;
 574+ 99AA              ;	FUNCIONAMIENTO:
 575+ 99AA              ;
 576+ 99AA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99AA              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99AA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99AA              ;
 580+ 99AA              ;	DESTRUYE:
 581+ 99AA              ;
 582+ 99AA              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99AA
 584+ 99AA 21 C5 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99AD 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99AE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99AF 4E           	ld c,(hl)
 588+ 99B0 2A C7 8B     	ld hl,(Posicion_actual)
 589+ 99B3 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99B5 C9           	ret
 591+ 99B6
 592+ 99B6              ;----------------------------------------------------------------------------------------------------------------
 593+ 99B6              ;
 594+ 99B6              ;	5/08/22
 595+ 99B6              ;
 596+ 99B6              ;   NextScan.
 597+ 99B6              ;
 598+ 99B6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99B6              ;
 600+ 99B6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99B6              ;
 602+ 99B6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99B6              ;
 604+ 99B6              ;       DESTRUIDOS: AF y HL !!!
 605+ 99B6              ;
 606+ 99B6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99B6              ;
 608+ 99B6
 609+ 99B6 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99B7 7C               ld a,h
 611+ 99B8 E6 07            and 7
 612+ 99BA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99BB
 614+ 99BB 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99BC C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99BE 6F               ld l,a
 617+ 99BF D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99C0
 619+ 99C0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99C1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99C3 67               ld h,a
 622+ 99C4 C9               ret
 623+ 99C5
 624+ 99C5              ;----------------------------------------------------------------------------------------------------------------
 625+ 99C5              ;
 626+ 99C5              ;	5/08/22
 627+ 99C5              ;
 628+ 99C5              ;   PreviousScan.
 629+ 99C5              ;
 630+ 99C5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99C5              ;
 632+ 99C5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99C5              ;
 634+ 99C5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99C5              ;
 636+ 99C5              ;       DESTRUIDOS: AF y HL !!!
 637+ 99C5              ;
 638+ 99C5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99C5              ;
 640+ 99C5
 641+ 99C5 7C           PreviousScan ld a,h
 642+ 99C6 25               dec h               ; Dec H.
 643+ 99C7 E6 07            and 7
 644+ 99C9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99CA
 646+ 99CA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99CB D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99CD 6F               ld l,a
 649+ 99CE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99CF
 651+ 99CF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99D0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99D2 67               ld h,a
 654+ 99D3 C9               ret
 655+ 99D4
 656+ 99D4
 657+ 99D4
 658+ 99D4
 659+ 99D4
 660+ 99D4
 661+ 99D4
 662+ 99D4
 663+ 99D4
 664+ 99D4
 665+ 99D4
 666+ 99D4
# file closed: Draw_XOR.asm
2075  99D4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D4
   2+ 99D4              ; ******************************************************************************************************************************************************************************************
   3+ 99D4              ;
   4+ 99D4              ;   20/05/23
   5+ 99D4              ;
   6+ 99D4              ;	Recompone_posicion_inicio
   7+ 99D4              ;
   8+ 99D4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99D4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99D4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99D4              ;	_ a una u otra rutina.
  12+ 99D4
  13+ 99D4              Recompone_posicion_inicio
  14+ 99D4
  15+ 99D4 2A D4 8B     	ld hl,(Posicion_inicio)
  16+ 99D7 7D           	ld a,l
  17+ 99D8 E6 1F        	and $1f
  18+ 99DA 28 16        	jr z,1F
  19+ 99DC
  20+ 99DC FE 1F        	cp $1f
  21+ 99DE 28 0D        	jr z,3F
  22+ 99E0
  23+ 99E0 21 C3 8B     	ld hl,Ctrl_2
  24+ 99E3 CB C6        	set 0,(hl)
  25+ 99E5 2A C9 8B     	ld hl,(Puntero_objeto)
  26+ 99E8 22 F5 8B     	ld (Repone_puntero_objeto),hl
  27+ 99EB 18 08        	jr 2F
  28+ 99ED
  29+ 99ED CD 9B 9B     3 call Mov_left
  30+ 99F0 18 03        	jr 2F
  31+ 99F2
  32+ 99F2 CD 78 9A     1 call Mov_right
  33+ 99F5 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99F8 22 C9 8B     	ld (Puntero_objeto),hl
  35+ 99FB C9           	ret
  36+ 99FC
  37+ 99FC              ; ******************************************************************************************************************************************************************************************
  38+ 99FC              ;
  39+ 99FC              ;   27/05/23
  40+ 99FC              ;
  41+ 99FC              ;	Mov_down
  42+ 99FC              ;
  43+ 99FC              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99FC              ;
  45+ 99FC              ;
  46+ 99FC              Mov_down
  47+ 99FC
  48+ 99FC CD 66 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99FF              ;																	; _ repone (Puntero_objeto).
  50+ 99FF 21 C4 8B     	ld hl,Ctrl_0
  51+ 9A02 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A04              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A04              ; 																	; _ en el caso de que no lo haya.
  54+ 9A04 3A DF 8B     	ld a,(Vel_down)
  55+ 9A07 47           	ld b,a
  56+ 9A08 2A C7 8B         ld hl,(Posicion_actual)
  57+ 9A0B CD 98 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A0E E6 02        	and 2
  59+ 9A10 28 17        	jr z,1F
  60+ 9A12
  61+ 9A12              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A12              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A12
  64+ 9A12 7C           	ld a,h
  65+ 9A13 FE 57        	cp $57
  66+ 9A15 20 12        	jr nz,1F
  67+ 9A17
  68+ 9A17 7D           	ld a,l
  69+ 9A18 C6 20        	add $20
  70+ 9A1A 30 0D        	jr nc,1F
  71+ 9A1C
  72+ 9A1C              ; ------------------------------
  73+ 9A1C              ;
  74+ 9A1C              ;	12/01/24
  75+ 9A1C
  76+ 9A1C              ;	call Reaparece_arriba
  77+ 9A1C CD 28 9D     	call Reinicio
  78+ 9A1F
  79+ 9A1F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A1F
  81+ 9A1F 3A 27 8C     	ld a,(Ctrl_3)
  82+ 9A22 CB CF        	set 1,a
  83+ 9A24 32 27 8C     	ld (Ctrl_3),a
  84+ 9A27
  85+ 9A27 18 08        	jr 3F
  86+ 9A29              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A29              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A29              ; ------------------------------
  89+ 9A29
  90+ 9A29 CD B6 99     1 call NextScan
  91+ 9A2C 22 C7 8B     	ld (Posicion_actual),hl
  92+ 9A2F 10 DA            djnz 2B
  93+ 9A31 CD B6 94     3 call Genera_coordenadas
  94+ 9A34 C9           	ret
  95+ 9A35
  96+ 9A35              ; ******************************************************************************************************************************************************************************************
  97+ 9A35              ;
  98+ 9A35              ;   27/05/23
  99+ 9A35              ;
 100+ 9A35              ;	Mov_up
 101+ 9A35              ;
 102+ 9A35              ; 	Mueve el Sprite hacia arriba.
 103+ 9A35              ;
 104+ 9A35              ;
 105+ 9A35              Mov_up
 106+ 9A35
 107+ 9A35 CD 66 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A38              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A38 21 C4 8B     	ld hl,Ctrl_0
 110+ 9A3B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A3D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A3D              ; 																		; _ en el caso de que no lo haya.
 113+ 9A3D 3A DE 8B     	ld a,(Vel_up)
 114+ 9A40 47           	ld b,a
 115+ 9A41 2A C7 8B     	ld hl,(Posicion_actual)
 116+ 9A44 CD 98 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A47 A7           	and a
 118+ 9A48 20 10        	jr nz,1F
 119+ 9A4A
 120+ 9A4A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A4A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A4A
 123+ 9A4A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A4B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A4D 20 0B            jr nz,1F
 126+ 9A4F 7D               ld a,l
 127+ 9A50 D6 20            sub $20
 128+ 9A52 30 06            jr nc,1F
 129+ 9A54 25               dec h
 130+ 9A55
 131+ 9A55              ; -----------------------------
 132+ 9A55 CD 09 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A58              ;	call Reinicio
 134+ 9A58              ; -----------------------------
 135+ 9A58
 136+ 9A58 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A5A CD C5 99     1 call PreviousScan
 138+ 9A5D 22 C7 8B     	ld (Posicion_actual),hl
 139+ 9A60 10 E2            djnz 3B
 140+ 9A62 CD B6 94     2 call Genera_coordenadas
 141+ 9A65 C9           	ret
 142+ 9A66
 143+ 9A66              ; -----------------------------
 144+ 9A66              ;
 145+ 9A66              ;	27/5/23
 146+ 9A66              ;
 147+ 9A66              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A66              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A66              ;
 150+ 9A66              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A66              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A66              ;
 153+ 9A66              ;	Modifica: A y (Puntero_objeto).
 154+ 9A66
 155+ 9A66 3A C3 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A69 CB 47        	bit 0,a
 157+ 9A6B C8           	ret z
 158+ 9A6C CB 87        	res 0,a
 159+ 9A6E 32 C3 8B     	ld (Ctrl_2),a
 160+ 9A71 2A F5 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A74 22 C9 8B     	ld (Puntero_objeto),hl
 162+ 9A77 C9           	ret
 163+ 9A78
 164+ 9A78              ; ******************************************************************************************************************************************************************************************
 165+ 9A78              ;
 166+ 9A78              ;	19/10/22
 167+ 9A78              ;
 168+ 9A78              ;	Mov_right.
 169+ 9A78              ;
 170+ 9A78              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A78              ;
 172+ 9A78
 173+ 9A78 3A C4 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A7B CB 77        	bit 6,a
 175+ 9A7D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A7F
 177+ 9A7F CD B7 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A82 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A83
 180+ 9A83 21 C4 8B     	ld hl,Ctrl_0
 181+ 9A86 CB E6        	set 4,(hl)
 182+ 9A88 18 52        	jr 8F
 183+ 9A8A
 184+ 9A8A 21 C4 8B     10 ld hl,Ctrl_0
 185+ 9A8D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A8F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A8F              ; 																	; _ en el caso de que no lo haya.
 188+ 9A8F 3A B8 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A92 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A94 20 46        	jr nz,8F
 191+ 9A96
 192+ 9A96 3A CB 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A99 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A9A 28 40        	jr z,8F
 195+ 9A9C
 196+ 9A9C              ; ---------- ---------- ----------
 197+ 9A9C              ;
 198+ 9A9C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A9C
 200+ 9A9C 3A DD 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A9F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AA1 28 11        	jr z,1F
 203+ 9AA3 38 06        	jr c,6F
 204+ 9AA5 FE 04        	cp 4
 205+ 9AA7 28 14        	jr z,7F
 206+ 9AA9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AAB
 208+ 9AAB              ; ---------- ---------- ----------
 209+ 9AAB              ;
 210+ 9AAB              ; Perfiles de velocidad
 211+ 9AAB              ;
 212+ 9AAB
 213+ 9AAB 3A CB 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AAE FE FE        	cp $fe
 215+ 9AB0 20 2A        	jr nz,8F
 216+ 9AB2 18 10        	jr 3F
 217+ 9AB4 3A CB 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AB7 FE FD        	cp $fd
 219+ 9AB9 20 21        	jr nz,8F
 220+ 9ABB 18 07        	jr 3F
 221+ 9ABD 3A CB 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AC0 FE FB        	cp $fb
 223+ 9AC2 20 18        	jr nz,8F
 224+ 9AC4
 225+ 9AC4              ; ---------- ---------- ----------
 226+ 9AC4
 227+ 9AC4              3
 228+ 9AC4 CD F7 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AC7              ;	call Reinicio
 230+ 9AC7
 231+ 9AC7              ; ---------- ---------- ----------
 232+ 9AC7              ;
 233+ 9AC7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AC7
 235+ 9AC7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AC9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ACA CD E3 9A     	call DESPLZ_DER
 238+ 9ACD C1           	pop bc
 239+ 9ACE 10 F9        	djnz 5B
 240+ 9AD0 2A C7 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AD3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AD4 22 C7 8B     	ld (Posicion_actual),hl
 243+ 9AD7 CD B6 94     	call Genera_coordenadas
 244+ 9ADA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9ADC
 246+ 9ADC              ; ---------- ---------- ----------
 247+ 9ADC
 248+ 9ADC 2A C7 8B     8 ld hl,(Posicion_actual)
 249+ 9ADF CD E3 9A     	call DESPLZ_DER
 250+ 9AE2 C9           2 ret
 251+ 9AE3
 252+ 9AE3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AE3              ;
 254+ 9AE3              ;	22/9/22
 255+ 9AE3              ;
 256+ 9AE3
 257+ 9AE3 CD F2 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AE6 CD 3E 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AE9 CD 67 9B         call Ciclo_completo
 260+ 9AEC 21 C4 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AEF CB FE        	set 7,(hl)
 262+ 9AF1 C9           	ret
 263+ 9AF2
 264+ 9AF2              ; ******************************************************************************************************************************************************************************************
 265+ 9AF2              ;	15/02/23
 266+ 9AF2              ;
 267+ 9AF2
 268+ 9AF2 3A DD 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AF5 47           	ld b,a
 270+ 9AF6 2A D0 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AF9 23           1 inc hl
 272+ 9AFA 23           	inc hl
 273+ 9AFB 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AFD 22 D0 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B00 CD 97 90     	call Extrae_address
 276+ 9B03 22 C9 8B     	ld (Puntero_objeto),hl
 277+ 9B06
 278+ 9B06              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B06
 280+ 9B06              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B06              ; Cuántos movimientos hemos hecho ??
 282+ 9B06              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B06
 284+ 9B06 2A CC 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B09 EB           	ex de,hl
 286+ 9B0A A7           	and a
 287+ 9B0B ED 52        	sbc hl,de
 288+ 9B0D CB 3D        	srl l
 289+ 9B0F 3E 08        6 ld a,8
 290+ 9B11 95           	sub l
 291+ 9B12 30 1E        	jr nc,3F
 292+ 9B14
 293+ 9B14              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B14              ; B="0".
 295+ 9B14
 296+ 9B14 04           4 inc b
 297+ 9B15 3C           	inc a
 298+ 9B16 20 FC        	jr nz,4B
 299+ 9B18 78           	ld a,b
 300+ 9B19 08           	ex af,af
 301+ 9B1A 2A CC 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B1D 23           5 inc hl
 303+ 9B1E 23           	inc hl
 304+ 9B1F 10 FC        	djnz 5B
 305+ 9B21 22 D0 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B24 CD 97 90     	call Extrae_address
 307+ 9B27 22 C9 8B     	ld (Puntero_objeto),hl
 308+ 9B2A
 309+ 9B2A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B2A              ; _(Posicion_actual).
 311+ 9B2A
 312+ 9B2A 21 C7 8B     	ld hl,Posicion_actual
 313+ 9B2D 34           	inc (hl)
 314+ 9B2E 08               ex af,af
 315+ 9B2F 6F           	ld l,a
 316+ 9B30 18 DD        	jr 6B
 317+ 9B32
 318+ 9B32              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B32
 320+ 9B32 47           3 ld b,a
 321+ 9B33 2A CE 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B36 23           2 inc hl
 323+ 9B37 23           	inc hl
 324+ 9B38 10 FC        	djnz 2B
 325+ 9B3A 22 D2 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B3D C9           8 ret
 327+ 9B3E
 328+ 9B3E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B3E              ;
 330+ 9B3E              ;	24/7/22
 331+ 9B3E              ;
 332+ 9B3E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B3E              ;
 334+ 9B3E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B3E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B3E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B3E
 338+ 9B3E 3A CB 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B41 A7           	and a
 340+ 9B42 20 1F        	jr nz,1F
 341+ 9B44 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B46 32 CB 8B         ld (CTRL_DESPLZ),a
 343+ 9B49
 344+ 9B49 21 C6 8B     	ld hl,Columns
 345+ 9B4C 34           	inc (hl)
 346+ 9B4D 3A D6 8B     	ld a,(Cuad_objeto)
 347+ 9B50 E6 01        	and 1
 348+ 9B52 28 0F        	jr z,1F
 349+ 9B54 2A C7 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B57 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B58 22 C7 8B     	ld (Posicion_actual),hl
 352+ 9B5B CD B6 94     	call Genera_coordenadas
 353+ 9B5E CD C3 9C     	call Inc_CTRL_DESPLZ
 354+ 9B61 18 03        	jr 2F
 355+ 9B63 CD C3 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B66 C9           2 ret
 357+ 9B67
 358+ 9B67              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B67              ;
 360+ 9B67              ;	24/7/22
 361+ 9B67              ;
 362+ 9B67              ;	Ciclo_completo.
 363+ 9B67              ;
 364+ 9B67              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B67              ;
 366+ 9B67              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B67              ; 	Decrementamos (Columns).
 368+ 9B67              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B67              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B67
 371+ 9B67
 372+ 9B67 3A CB 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B6A FE FF        	cp $ff
 374+ 9B6C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B6E E6 F0        	and $f0
 376+ 9B70 20 28        	jr nz,3F
 377+ 9B72
 378+ 9B72              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B72
 380+ 9B72 3A CB 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B75 47           	ld b,a
 382+ 9B76 3E F8        	ld a,$f8
 383+ 9B78 80           	add b
 384+ 9B79 32 CB 8B     	ld (CTRL_DESPLZ),a
 385+ 9B7C 18 1C        	jr 3F
 386+ 9B7E 21 C6 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B81 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B82 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B83 32 CB 8B     	ld (CTRL_DESPLZ),a
 390+ 9B86 3A D6 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B89 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B8B 20 0A        	jr nz,2F
 393+ 9B8D 2A C7 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B90 23           	inc hl
 395+ 9B91 22 C7 8B     	ld (Posicion_actual),hl
 396+ 9B94 CD B6 94     	call Genera_coordenadas
 397+ 9B97
 398+ 9B97              ; Inicia el puntero de Sprite.
 399+ 9B97
 400+ 9B97 CD AC 90     2 call Inicia_puntero_objeto_der
 401+ 9B9A C9           3 ret
 402+ 9B9B
 403+ 9B9B              ; ******************************************************************************************************************************************************************************************
 404+ 9B9B              ;
 405+ 9B9B              ;	15/02/23
 406+ 9B9B              ;
 407+ 9B9B              ;	Mov_left.
 408+ 9B9B              ;
 409+ 9B9B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B9B              ;
 411+ 9B9B              Mov_left
 412+ 9B9B
 413+ 9B9B 21 C4 8B     	ld hl,Ctrl_0
 414+ 9B9E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BA0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BA0              ; 																	; _ en el caso de que no lo haya.
 417+ 9BA0 3A C4 8B     	ld a,(Ctrl_0)
 418+ 9BA3 CB 77        	bit 6,a
 419+ 9BA5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BA7
 421+ 9BA7 CD BD 9C     	call Stop_Amadeus_left
 422+ 9BAA C8           	ret z
 423+ 9BAB 20 4A        	jr nz,8F
 424+ 9BAD
 425+ 9BAD 3A B8 8B     11 ld a,(Coordenada_X)
 426+ 9BB0 A7           	and a
 427+ 9BB1 20 44        	jr nz,8F
 428+ 9BB3
 429+ 9BB3 3A CB 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BB6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BB7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BB9
 433+ 9BB9              ; ---------- ---------- ----------
 434+ 9BB9
 435+ 9BB9 3A DC 8B     	ld a,(Vel_left)
 436+ 9BBC FE 02        	cp 2
 437+ 9BBE 28 0F        	jr z,1F
 438+ 9BC0 38 04        	jr c,6F
 439+ 9BC2 FE 04        	cp 4
 440+ 9BC4 28 12        	jr z,7F
 441+ 9BC6
 442+ 9BC6              ; ---------- ---------- ----------
 443+ 9BC6
 444+ 9BC6 3A CB 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BC9 FE F8        	cp $f8
 446+ 9BCB 20 2A        	jr nz,8F
 447+ 9BCD 18 10        	jr 4F
 448+ 9BCF 3A CB 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BD2 FE F9        	cp $f9
 450+ 9BD4 20 21        	jr nz,8F
 451+ 9BD6 18 07        	jr 4F
 452+ 9BD8 3A CB 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BDB FE FB        	cp $fb
 454+ 9BDD 20 18        	jr nz,8F
 455+ 9BDF
 456+ 9BDF              ; ---------- ---------- ----------
 457+ 9BDF
 458+ 9BDF              4
 459+ 9BDF CD E5 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BE2              ;	call Reinicio
 461+ 9BE2
 462+ 9BE2              ; ---------- ---------- ----------
 463+ 9BE2
 464+ 9BE2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BE4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BE5
 467+ 9BE5              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BE5              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BE5
 470+ 9BE5 CD FE 9B     	call DESPLZ_IZQ
 471+ 9BE8 C1           	pop bc
 472+ 9BE9 10 F9        	djnz 5B
 473+ 9BEB 2A C7 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BEE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BEF 22 C7 8B     	ld (Posicion_actual),hl
 476+ 9BF2 CD B6 94     	call Genera_coordenadas
 477+ 9BF5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BF7
 479+ 9BF7              ; ---------- ---------- ----------
 480+ 9BF7
 481+ 9BF7              ; Movemos, no hay recolocación.
 482+ 9BF7
 483+ 9BF7 2A C7 8B     8 ld hl,(Posicion_actual)
 484+ 9BFA CD FE 9B     	call DESPLZ_IZQ
 485+ 9BFD C9           2 ret
 486+ 9BFE
 487+ 9BFE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BFE              ;
 489+ 9BFE              ;	22/9/22
 490+ 9BFE
 491+ 9BFE              DESPLZ_IZQ
 492+ 9BFE
 493+ 9BFE CD 0D 9C     	call Desplaza_izquierda
 494+ 9C01 CD 59 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C04 CD 81 9C     	call Ciclo_completo_2
 496+ 9C07 21 C4 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C0A CB BE        	res 7,(hl)
 498+ 9C0C C9           	ret
 499+ 9C0D
 500+ 9C0D              Desplaza_izquierda
 501+ 9C0D
 502+ 9C0D 3A DC 8B     	ld a,(Vel_left)
 503+ 9C10 47           	ld b,a
 504+ 9C11 2A D2 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C14 23           1 inc hl
 506+ 9C15 23           	inc hl
 507+ 9C16 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C18 22 D2 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C1B CD 97 90     	call Extrae_address
 510+ 9C1E 22 C9 8B     	ld (Puntero_objeto),hl
 511+ 9C21
 512+ 9C21              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C21
 514+ 9C21              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C21              ; Cuántos movimientos hemos hecho ??
 516+ 9C21              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C21
 518+ 9C21 2A CE 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C24 EB           	ex de,hl
 520+ 9C25 A7           	and a
 521+ 9C26 ED 52        	sbc hl,de
 522+ 9C28 CB 3D        	srl l
 523+ 9C2A 3E 08        6 ld a,8
 524+ 9C2C 95           	sub l
 525+ 9C2D 30 1E        	jr nc,3F
 526+ 9C2F
 527+ 9C2F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C2F              ; B="0".
 529+ 9C2F
 530+ 9C2F 04           4 inc b
 531+ 9C30 3C           	inc a
 532+ 9C31 20 FC        	jr nz,4B
 533+ 9C33 78           	ld a,b
 534+ 9C34 08           	ex af,af
 535+ 9C35 2A CE 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C38 23           5 inc hl
 537+ 9C39 23           	inc hl
 538+ 9C3A 10 FC        	djnz 5B
 539+ 9C3C 22 D2 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C3F CD 97 90     	call Extrae_address
 541+ 9C42 22 C9 8B     	ld (Puntero_objeto),hl
 542+ 9C45
 543+ 9C45              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C45              ; _(Posicion_actual).
 545+ 9C45
 546+ 9C45 21 C7 8B     	ld hl,Posicion_actual
 547+ 9C48 35           	dec (hl)
 548+ 9C49 08           	ex af,af
 549+ 9C4A 6F           	ld l,a
 550+ 9C4B 18 DD        	jr 6B
 551+ 9C4D
 552+ 9C4D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C4D
 554+ 9C4D 47           3 ld b,a
 555+ 9C4E 2A CC 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C51 23           2 inc hl
 557+ 9C52 23           	inc hl
 558+ 9C53 10 FC        	djnz 2B
 559+ 9C55 22 D0 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C58 C9           8 ret
 561+ 9C59
 562+ 9C59              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C59              ;
 564+ 9C59              ;	modifica_parametros_1er_DESPLZ
 565+ 9C59              ;
 566+ 9C59              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C59              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C59              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C59
 570+ 9C59 3A CB 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C5C A7           	and a
 572+ 9C5D 20 1E        	jr nz,1F
 573+ 9C5F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C60 32 CB 8B         ld (CTRL_DESPLZ),a
 575+ 9C63 21 C6 8B     	ld hl,Columns
 576+ 9C66 34           	inc (hl)
 577+ 9C67 3A D6 8B     	ld a,(Cuad_objeto)
 578+ 9C6A E6 01        	and 1
 579+ 9C6C 20 0F        	jr nz,1F
 580+ 9C6E 2A C7 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C71 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C72 22 C7 8B     	ld (Posicion_actual),hl
 583+ 9C75 CD B6 94     	call Genera_coordenadas
 584+ 9C78 CD D4 9C     	call Dec_CTRL_DESPLZ
 585+ 9C7B 18 03        	jr 2F
 586+ 9C7D CD D4 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C80 C9           2 ret
 588+ 9C81
 589+ 9C81              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C81
 591+ 9C81 3A CB 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C84 FE F7        	cp $f7
 593+ 9C86 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C88 30 2C        	jr nc,3F
 595+ 9C8A
 596+ 9C8A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C8A
 598+ 9C8A 06 00        	ld b,0
 599+ 9C8C 04           4 inc b
 600+ 9C8D 3C           	inc a
 601+ 9C8E FE F7        	cp $f7
 602+ 9C90 20 FA        	jr nz,4B
 603+ 9C92 3E FF        	ld a,$ff
 604+ 9C94 90           	sub b
 605+ 9C95 32 CB 8B     	ld (CTRL_DESPLZ),a
 606+ 9C98 18 1C        	jr 3F
 607+ 9C9A
 608+ 9C9A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C9A
 610+ 9C9A 21 C6 8B     1 ld hl,Columns
 611+ 9C9D 35           	dec (hl)
 612+ 9C9E AF           	xor a
 613+ 9C9F 32 CB 8B     	ld (CTRL_DESPLZ),a
 614+ 9CA2 3A D6 8B     	ld a,(Cuad_objeto)
 615+ 9CA5 E6 01        	and 1
 616+ 9CA7 28 0A        	jr z,2F
 617+ 9CA9 2A C7 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CAC 2B           	dec hl
 619+ 9CAD 22 C7 8B     	ld (Posicion_actual),hl
 620+ 9CB0 CD B6 94     	call Genera_coordenadas
 621+ 9CB3
 622+ 9CB3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CB3
 624+ 9CB3 CD BF 90     2 call Inicia_puntero_objeto_izq
 625+ 9CB6 C9           3 ret
 626+ 9CB7
 627+ 9CB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CB7              ;
 629+ 9CB7              ;	19/10/22
 630+ 9CB7              ;
 631+ 9CB7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CB7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CB7
 634+ 9CB7 3A B8 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CBA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CBC C9           	ret
 637+ 9CBD
 638+ 9CBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CBD              ;
 640+ 9CBD              ;	19/10/22
 641+ 9CBD              ;
 642+ 9CBD              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CBD              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CBD
 645+ 9CBD 3A B8 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CC0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CC2 C9           	ret
 648+ 9CC3
 649+ 9CC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CC3              ;
 651+ 9CC3              ;	24/7/22
 652+ 9CC3              ;
 653+ 9CC3              ;	Inc_CTRL_DESPLZ
 654+ 9CC3              ;
 655+ 9CC3              ;
 656+ 9CC3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CC3
 658+ 9CC3 21 CB 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CC6 3A DD 8B     	ld a,(Vel_right)
 660+ 9CC9 A7           	and a
 661+ 9CCA 28 06        	jr z,1F
 662+ 9CCC 47           	ld b,a
 663+ 9CCD 34           3 inc (hl)
 664+ 9CCE 10 FD        	djnz 3B
 665+ 9CD0 18 01        	jr 2F
 666+ 9CD2 34           1 inc (hl)
 667+ 9CD3 C9           2 ret
 668+ 9CD4
 669+ 9CD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CD4              ;
 671+ 9CD4              ;	5/2/23
 672+ 9CD4              ;
 673+ 9CD4              ;	Dec_CTRL_DESPLZ
 674+ 9CD4              ;
 675+ 9CD4              ;
 676+ 9CD4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CD4
 678+ 9CD4 21 CB 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CD7 3A DC 8B     	ld a,(Vel_left)
 680+ 9CDA A7           	and a
 681+ 9CDB 28 06        	jr z,1F
 682+ 9CDD 47           	ld b,a
 683+ 9CDE 35           3 dec (hl)
 684+ 9CDF 10 FD        	djnz 3B
 685+ 9CE1 18 01        	jr 2F
 686+ 9CE3 35           1 dec (hl)
 687+ 9CE4 C9           2 ret
 688+ 9CE5
 689+ 9CE5              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CE5
 691+ 9CE5 2A C7 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CE8 01 1F 00     	ld bc,31
 693+ 9CEB A7           	and a
 694+ 9CEC ED 4A        	adc hl,bc
 695+ 9CEE 22 C7 8B     	ld (Posicion_actual),hl
 696+ 9CF1 21 C4 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CF4 CB C6        	set 0,(hl)
 698+ 9CF6 C9           	ret
 699+ 9CF7
 700+ 9CF7              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CF7
 702+ 9CF7 2A C7 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CFA 01 1F 00     	ld bc,31
 704+ 9CFD A7           	and a
 705+ 9CFE ED 42        	sbc hl,bc
 706+ 9D00 22 C7 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D03 21 C4 8B     	ld hl,Ctrl_0
 708+ 9D06 CB CE        	set 1,(hl)
 709+ 9D08 C9           	ret
 710+ 9D09
 711+ 9D09              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D09
 713+ 9D09 24           Reaparece_abajo inc h
 714+ 9D0A 01 E0 17     	ld bc,$17e0
 715+ 9D0D A7           	and a
 716+ 9D0E ED 4A        	adc hl,bc
 717+ 9D10 22 C7 8B     	ld (Posicion_actual),hl
 718+ 9D13 21 C4 8B     	ld hl,Ctrl_0
 719+ 9D16 CB D6        	set 2,(hl)
 720+ 9D18 C9           	ret
 721+ 9D19
 722+ 9D19              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D19
 724+ 9D19 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D1C A7           	and a
 726+ 9D1D ED 42        	sbc hl,bc
 727+ 9D1F 22 C7 8B     	ld (Posicion_actual),hl
 728+ 9D22 21 C4 8B     	ld hl,Ctrl_0
 729+ 9D25 CB DE        	set 3,(hl)
 730+ 9D27 C9           	ret
 731+ 9D28
 732+ 9D28              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D28              ;
 734+ 9D28              ;	15/07/23
 735+ 9D28
 736+ 9D28              Reinicio
 737+ 9D28
 738+ 9D28              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D28
 740+ 9D28 AF           	xor a
 741+ 9D29 21 EC 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D2C CD 4A 9D     	call Limpia_contenido_hl
 743+ 9D2F
 744+ 9D2F 21 C7 8B     	ld hl,Posicion_actual
 745+ 9D32 CD 4A 9D     	call Limpia_contenido_hl
 746+ 9D35
 747+ 9D35 CD 98 92     	call Inicializa_Puntero_indice_mov
 748+ 9D38 CD 49 9E     	call Inicia_Puntero_mov
 749+ 9D3B
 750+ 9D3B 21 EE 8B     	ld hl,Incrementa_puntero
 751+ 9D3E 06 05        	ld b,5
 752+ 9D40 77           1 ld (hl),a
 753+ 9D41 23           	inc hl
 754+ 9D42 10 FC        	djnz 1B
 755+ 9D44
 756+ 9D44 21 C3 8B     	ld hl,Ctrl_2
 757+ 9D47 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D49
 759+ 9D49 C9           	ret
 760+ 9D4A
 761+ 9D4A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D4B 23           	inc hl
 763+ 9D4C 77           	ld (hl),a
 764+ 9D4D C9           	ret
 765+ 9D4E
 766+ 9D4E              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D4E              ;
 768+ 9D4E              ;	18/6/24
 769+ 9D4E              ;
 770+ 9D4E
 771+ 9D4E              Amadeus_a_izquierda
 772+ 9D4E
 773+ 9D4E              ;	Actualiza contador de movimientos.
 774+ 9D4E
 775+ 9D4E 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D51 35           	dec (hl)
 777+ 9D52 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D54
 779+ 9D54 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D57 2B           	dec hl
 781+ 9D58 2B           	dec hl
 782+ 9D59 2B           	dec hl
 783+ 9D5A 2B           	dec hl
 784+ 9D5B 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D5E
 786+ 9D5E 21 27 8C     	ld hl,Ctrl_3
 787+ 9D61 CB EE        	set 5,(hl)
 788+ 9D63
 789+ 9D63 C9           	ret
 790+ 9D64
 791+ 9D64 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D65 C9           	ret
 793+ 9D66
 794+ 9D66
 795+ 9D66              Amadeus_a_derecha
 796+ 9D66
 797+ 9D66              ;	Actualiza contador de movimientos.
 798+ 9D66
 799+ 9D66 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D69 34           	inc (hl)
 801+ 9D6A 3E 7A        	ld a,$7a
 802+ 9D6C BE           	cp (hl)
 803+ 9D6D 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D6F
 805+ 9D6F 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D72 23           	inc hl
 807+ 9D73 23           	inc hl
 808+ 9D74 23           	inc hl
 809+ 9D75 23           	inc hl
 810+ 9D76 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D79
 812+ 9D79 21 27 8C     	ld hl,Ctrl_3
 813+ 9D7C CB EE        	set 5,(hl)
 814+ 9D7E C9           	ret
 815+ 9D7F
 816+ 9D7F 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D80 C9           	ret
# file closed: Direcciones.asm
2076  9D81              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D81              ; ----- ----- ----- ----- -----
   2+ 9D81              ;
   3+ 9D81              ;   28/12/23
   4+ 9D81
   5+ 9D81              Movimiento
   6+ 9D81
   7+ 9D81              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D81
   9+ 9D81 3A C3 8B         ld a,(Ctrl_2)
  10+ 9D84 CB 57            bit 2,a
  11+ 9D86 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D88
  13+ 9D88 2A EA 8B         ld hl,(Puntero_mov)
  14+ 9D8B 7E               ld a,(hl)
  15+ 9D8C
  16+ 9D8C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D8C
  18+ 9D8C              Inicia_desplazamiento.
  19+ 9D8C
  20+ 9D8C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D8C
  22+ 9D8C CD 7F 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D8F
  24+ 9D8F              ; Iniciamos (Repetimos_mov).
  25+ 9D8F
  26+ 9D8F 7E               ld a,(hl)
  27+ 9D90 E6 0F            and $0f
  28+ 9D92 32 F0 8B         ld (Repetimos_desplazamiento),a
  29+ 9D95 32 F1 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D98
  31+ 9D98              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D98
  33+ 9D98 23               inc hl
  34+ 9D99 7E               ld a,(hl)
  35+ 9D9A 32 F3 8B         ld (Cola_de_desplazamiento),a
  36+ 9D9D 2B               dec hl
  37+ 9D9E
  38+ 9D9E 21 C3 8B         ld hl,Ctrl_2
  39+ 9DA1 CB D6            set 2,(hl)
  40+ 9DA3
  41+ 9DA3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DA3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DA3
  44+ 9DA3              Desplazamiento_iniciado
  45+ 9DA3
  46+ 9DA3 CD 53 9E         call Aplica_desplazamiento
  47+ 9DA6
  48+ 9DA6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DA6
  50+ 9DA6 3A 27 8C         ld a,(Ctrl_3)
  51+ 9DA9 CB 4F            bit 1,a
  52+ 9DAB C0               ret nz
  53+ 9DAC
  54+ 9DAC 21 F0 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DAF 35               dec (hl)
  56+ 9DB0 C0               ret nz
  57+ 9DB1
  58+ 9DB1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DB1              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DB1              ; Analiza (Cola_de_desplazamiento).
  61+ 9DB1
  62+ 9DB1 3A F3 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DB4 A7               and a
  64+ 9DB5 CC A8 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DB8 28 30            jr z,Reinicia_el_movimiento
  66+ 9DBA
  67+ 9DBA FE FF            cp $ff
  68+ 9DBC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DBE
  70+ 9DBE FE FE            cp $fe
  71+ 9DC0 CC 2D 9E         call z,Fijamos_bucle
  72+ 9DC3 28 25            jr z,Reinicia_el_movimiento
  73+ 9DC5
  74+ 9DC5 FE FD            cp $fd
  75+ 9DC7 20 11            jr nz,1F
  76+ 9DC9
  77+ 9DC9              ; ---
  78+ 9DC9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DC9
  80+ 9DC9 3A C3 8B         ld a,(Ctrl_2)
  81+ 9DCC CB 5F            bit 3,a
  82+ 9DCE 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DD0
  84+ 9DD0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DD0
  86+ 9DD0 21 C3 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DD3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DD5
  89+ 9DD5 CD 3E 9E         call Inicia_Repetimos_movimiento
  90+ 9DD8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DDA              ; ---
  92+ 9DDA
  93+ 9DDA FE 01        1 cp 1
  94+ 9DDC CA 17 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DDF
  96+ 9DDF 3D               dec a
  97+ 9DE0 32 F3 8B         ld (Cola_de_desplazamiento),a
  98+ 9DE3
  99+ 9DE3 3A F1 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DE6 32 F0 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DE9              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DE9 C9               ret
 103+ 9DEA
 104+ 9DEA              Reinicia_el_movimiento
 105+ 9DEA
 106+ 9DEA 3A C3 8B         ld a,(Ctrl_2)
 107+ 9DED CB 5F            bit 3,a
 108+ 9DEF 28 1B            jr z,2F
 109+ 9DF1
 110+ 9DF1              ; (Cola_de_desplazamiento)="254".
 111+ 9DF1
 112+ 9DF1 21 F2 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DF4 35               dec (hl)
 114+ 9DF5 20 15            jr nz,2F
 115+ 9DF7
 116+ 9DF7              ; Fin de las repeticiones del último movimiento.
 117+ 9DF7
 118+ 9DF7 21 C3 8B         ld hl,Ctrl_2
 119+ 9DFA CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DFC
 121+ 9DFC 2A EA 8B         ld hl,(Puntero_mov)
 122+ 9DFF 23               inc hl
 123+ 9E00 23               inc hl
 124+ 9E01 23               inc hl
 125+ 9E02 22 EA 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E05              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E05 7E               ld a,(hl)
 128+ 9E06 32 F3 8B         ld (Cola_de_desplazamiento),a
 129+ 9E09
 130+ 9E09 C3 B1 9D         jp Cola
 131+ 9E0C
 132+ 9E0C CD 49 9E     2 call Inicia_Puntero_mov
 133+ 9E0F
 134+ 9E0F 21 C3 8B         ld hl,Ctrl_2
 135+ 9E12 CB 96            res 2,(hl)
 136+ 9E14
 137+ 9E14 C3 81 9D         jp Movimiento
 138+ 9E17
 139+ 9E17              Siguiente_desplazamiento
 140+ 9E17
 141+ 9E17              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E17              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E17
 144+ 9E17 21 C3 8B         ld hl,Ctrl_2
 145+ 9E1A CB 96            res 2,(hl)
 146+ 9E1C
 147+ 9E1C 2A EA 8B         ld hl,(Puntero_mov)
 148+ 9E1F 23               inc hl
 149+ 9E20 23               inc hl
 150+ 9E21 22 EA 8B         ld (Puntero_mov),hl
 151+ 9E24
 152+ 9E24 7E               ld a,(hl)
 153+ 9E25 A7               and a
 154+ 9E26 CC A8 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E29 CA EA 9D         jp z,Reinicia_el_movimiento
 156+ 9E2C
 157+ 9E2C C9               ret
 158+ 9E2D
 159+ 9E2D              ; Subrutinas -----------------------------------------
 160+ 9E2D              ; ---------- --------- --------- ---------- ----------
 161+ 9E2D              ;
 162+ 9E2D              ;   24/07/23
 163+ 9E2D              ;
 164+ 9E2D              ;   Fijamos_bucle
 165+ 9E2D              ;
 166+ 9E2D              ;
 167+ 9E2D
 168+ 9E2D              Fijamos_bucle
 169+ 9E2D
 170+ 9E2D 3A EE 8B         ld a,(Incrementa_puntero)
 171+ 9E30 3C               inc a
 172+ 9E31 32 EF 8B         ld (Incrementa_puntero_backup),a
 173+ 9E34
 174+ 9E34 CD A8 9E         call Incrementa_Puntero_indice_mov
 175+ 9E37 2A E8 8B         ld hl,(Puntero_indice_mov)
 176+ 9E3A 22 EC 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E3D C9               ret
 178+ 9E3E
 179+ 9E3E              ; ---------- --------- --------- ---------- ----------
 180+ 9E3E              ;
 181+ 9E3E              ;   07/7/23
 182+ 9E3E              ;
 183+ 9E3E              ;   Inicia_Repetimos_movimiento
 184+ 9E3E              ;
 185+ 9E3E              ;
 186+ 9E3E
 187+ 9E3E              Inicia_Repetimos_movimiento
 188+ 9E3E
 189+ 9E3E              ; Iniciamos (Repetimos_movimiento).
 190+ 9E3E
 191+ 9E3E DD 2A EA 8B      ld ix,(Puntero_mov)
 192+ 9E42 DD 7E 02         ld a,(ix+2)
 193+ 9E45 32 F2 8B         ld (Repetimos_movimiento),a
 194+ 9E48
 195+ 9E48 C9               ret
 196+ 9E49
 197+ 9E49              ; ---------- --------- --------- ---------- ----------
 198+ 9E49              ;
 199+ 9E49              ;   26/6/23
 200+ 9E49              ;
 201+ 9E49              ;   Inicia_Puntero_mov
 202+ 9E49              ;
 203+ 9E49              ;
 204+ 9E49
 205+ 9E49 2A E8 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E4C CD 97 90         call Extrae_address
 207+ 9E4F 22 EA 8B         ld (Puntero_mov),hl
 208+ 9E52 C9               ret
 209+ 9E53
 210+ 9E53              ; ---------- --------- --------- ---------- ----------
 211+ 9E53              ;
 212+ 9E53              ;   27/06/23
 213+ 9E53              ;
 214+ 9E53              ;   Aplica_movimiento.
 215+ 9E53
 216+ 9E53              Aplica_desplazamiento
 217+ 9E53
 218+ 9E53              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E53
 220+ 9E53 2A EA 8B         ld hl, (Puntero_mov)
 221+ 9E56
 222+ 9E56 7E               ld a,(hl)
 223+ 9E57 E6 F0            and $f0
 224+ 9E59 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E5A
 226+ 9E5A CB 7E            bit 7,(hl)
 227+ 9E5C 28 03            jr z,1F
 228+ 9E5E CD 35 9A         call Mov_up
 229+ 9E61 2A EA 8B     1 ld hl, (Puntero_mov)
 230+ 9E64 CB 76            bit 6,(hl)
 231+ 9E66 28 03            jr z,2F
 232+ 9E68 CD FC 99         call Mov_down
 233+ 9E6B
 234+ 9E6B              ; Se ha aplicado reinicio ???
 235+ 9E6B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E6B
 237+ 9E6B              ;    ld a,(Ctrl_3)
 238+ 9E6B              ;    bit 1,a
 239+ 9E6B              ;    ret nz
 240+ 9E6B
 241+ 9E6B 2A EA 8B     2 ld hl, (Puntero_mov)
 242+ 9E6E CB 6E            bit 5,(hl)
 243+ 9E70 28 03            jr z,3F
 244+ 9E72 CD 9B 9B         call Mov_left
 245+ 9E75 2A EA 8B     3 ld hl, (Puntero_mov)
 246+ 9E78 CB 66            bit 4,(hl)
 247+ 9E7A C8               ret z
 248+ 9E7B CD 78 9A         call Mov_right
 249+ 9E7E C9               ret
 250+ 9E7F
 251+ 9E7F              ; ---------- --------- --------- ---------- ----------
 252+ 9E7F              ;
 253+ 9E7F              ;   26/06/23
 254+ 9E7F              ;
 255+ 9E7F              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E7F
 257+ 9E7F              Ajusta_velocidad_desplazamiento
 258+ 9E7F
 259+ 9E7F              ; 1er byte de la cadena de movimiento.
 260+ 9E7F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E7F
 262+ 9E7F CD 9D 9E         call Extrae_nibble_alto
 263+ 9E82
 264+ 9E82 32 DE 8B         ld (Vel_up),a
 265+ 9E85 79               ld a,c
 266+ 9E86 E6 0F            and $0f
 267+ 9E88 32 DF 8B         ld (Vel_down),a
 268+ 9E8B
 269+ 9E8B              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E8B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E8B
 272+ 9E8B 23               inc hl
 273+ 9E8C CD 9D 9E         call Extrae_nibble_alto
 274+ 9E8F
 275+ 9E8F 32 DC 8B         ld (Vel_left),a
 276+ 9E92 79               ld a,c
 277+ 9E93 E6 0F            and $0f
 278+ 9E95 32 DD 8B         ld (Vel_right),a
 279+ 9E98
 280+ 9E98              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E98
 282+ 9E98 23               inc hl
 283+ 9E99 22 EA 8B         ld (Puntero_mov),hl
 284+ 9E9C C9               ret
 285+ 9E9D
 286+ 9E9D 06 04        Extrae_nibble_alto ld b,4
 287+ 9E9F 7E               ld a,(hl)
 288+ 9EA0 4F               ld c,a
 289+ 9EA1 E6 F0            and $f0
 290+ 9EA3 CB 3F        1 srl a
 291+ 9EA5 10 FC            djnz 1B
 292+ 9EA7 C9               ret
 293+ 9EA8
 294+ 9EA8              ; ---------- --------- --------- ---------- ----------
 295+ 9EA8              ;
 296+ 9EA8              ;   5/7/23
 297+ 9EA8              ;
 298+ 9EA8              ;   Incrementa_Puntero_indice_mov
 299+ 9EA8
 300+ 9EA8              Incrementa_Puntero_indice_mov
 301+ 9EA8
 302+ 9EA8 21 EE 8B         ld hl,Incrementa_puntero
 303+ 9EAB 34               inc (hl)
 304+ 9EAC
 305+ 9EAC 2A E8 8B         ld hl,(Puntero_indice_mov)
 306+ 9EAF 01 02 00         ld bc,2
 307+ 9EB2 A7               and a
 308+ 9EB3 09               add hl,bc
 309+ 9EB4 22 E8 8B         ld (Puntero_indice_mov),hl
 310+ 9EB7
 311+ 9EB7 7E               ld a,(hl)
 312+ 9EB8 A7               and a
 313+ 9EB9
 314+ 9EB9              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EB9
 316+ 9EB9              ;    jr z,$
 317+ 9EB9
 318+ 9EB9              ;! Reinicia el Patrón de movimiento.
 319+ 9EB9
 320+ 9EB9 CC BE 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EBC
 322+ 9EBC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EBD
 324+ 9EBD C9               ret
 325+ 9EBE
 326+ 9EBE              ; ---------- --------- --------- ---------- ----------
 327+ 9EBE              ;
 328+ 9EBE              ;   15/01/24
 329+ 9EBE              ;
 330+ 9EBE              ;   Inicializa_Puntero_indice_mov
 331+ 9EBE
 332+ 9EBE              Inicializa_Puntero_indice_mov_2
 333+ 9EBE
 334+ 9EBE              ; Existe etiqueta de bucle principal???
 335+ 9EBE
 336+ 9EBE 2A EC 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EC1 24               inc h
 338+ 9EC2 25               dec h
 339+ 9EC3 28 05            jr z,2F
 340+ 9EC5
 341+ 9EC5 22 E8 8B         ld (Puntero_indice_mov),hl
 342+ 9EC8 18 14            jr 3F
 343+ 9ECA
 344+ 9ECA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ECA
 346+ 9ECA 3A EE 8B     2 ld a,(Incrementa_puntero)
 347+ 9ECD 47               ld b,a
 348+ 9ECE
 349+ 9ECE 2A E8 8B         ld hl,(Puntero_indice_mov)
 350+ 9ED1 2B           1 dec hl
 351+ 9ED2 2B               dec hl
 352+ 9ED3 10 FC            djnz 1B
 353+ 9ED5 22 E8 8B         ld (Puntero_indice_mov),hl
 354+ 9ED8
 355+ 9ED8 AF               xor a
 356+ 9ED9 32 EE 8B         ld (Incrementa_puntero),a
 357+ 9EDC 18 06            jr 4F
 358+ 9EDE
 359+ 9EDE 3A EF 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EE1 32 EE 8B         ld (Incrementa_puntero),a
 361+ 9EE4 C9           4 ret
 362+ 9EE5
 363+ 9EE5              ; ----------------------------------------------------------------------
 364+ 9EE5              ;
 365+ 9EE5              ;   30/01/24
 366+ 9EE5              ;
 367+ 9EE5              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EE5
 369+ 9EE5 3A B7 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EE8 CD 33 94         call Calcula_salto_en_BC
 371+ 9EEB 21 E0 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EEE A7               and a
 373+ 9EEF ED 4A            adc hl,bc
 374+ 9EF1 C9               ret
 375+ 9EF2
 376+ 9EF2              ; ----------------------------------------------------------------------
 377+ 9EF2              ;
 378+ 9EF2              ;   30/01/24
 379+ 9EF2              ;
 380+ 9EF2              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EF2              ;
 382+ 9EF2              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EF2
 384+ 9EF2 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EF3 23               inc hl
 386+ 9EF4 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EF5 69               ld l,c
 388+ 9EF6 60               ld h,b
 389+ 9EF7 22 C0 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EFA C9               ret
 391+ 9EFB
# file closed: Movimiento.asm
2077  9EFB              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EFB              Motor_de_disparos_entidades
   2+ 9EFB
   3+ 9EFB 3A 17 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9EFE FE 07            cp 7
   5+ 9F00 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9F01
   7+ 9F01 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9F03 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9F06
  10+ 9F06 CD 97 90     1 call Extrae_address
  11+ 9F09 13               inc de
  12+ 9F0A 13               inc de
  13+ 9F0B ED 53 2A 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F0F
  15+ 9F0F 23               inc hl
  16+ 9F10
  17+ 9F10 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
  18+ 9F11 35               dec (hl)
  19+ 9F12 28 17            jr z,3F
  20+ 9F14
  21+ 9F14 23               inc hl
  22+ 9F15
  23+ 9F15 CD 97 90         call Extrae_address
  24+ 9F18              ;   (Puntero_de_impresion) del disparo en HL.
  25+ 9F18
  26+ 9F18
  27+ 9F18              ;! Velocidad del disparo de entidades.
  28+ 9F18
  29+ 9F18              ;    call NextScan
  30+ 9F18              ;    call NextScan
  31+ 9F18              ;    call NextScan
  32+ 9F18 CD B6 99         call NextScan
  33+ 9F1B CD B6 99         call NextScan
  34+ 9F1E
  35+ 9F1E              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  36+ 9F1E
  37+ 9F1E CD 2F 9F         call Fin_de_disparo_de_entidad
  38+ 9F21
  39+ 9F21 EB               ex de,hl
  40+ 9F22
  41+ 9F22 73               ld (hl),e
  42+ 9F23 23               inc hl
  43+ 9F24 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  44+ 9F25
  45+ 9F25 2A 2A 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  46+ 9F28 18 02            jr 2F
  47+ 9F2A
  48+ 9F2A C9               ret
  49+ 9F2B
  50+ 9F2B EB           3 ex de,hl
  51+ 9F2C 10 D8        2 djnz 1B
  52+ 9F2E
  53+ 9F2E C9               ret
  54+ 9F2F
  55+ 9F2F              ; ------------- ------------- ------------
  56+ 9F2F              ;
  57+ 9F2F              ;   25/9/24
  58+ 9F2F
  59+ 9F2F              Fin_de_disparo_de_entidad
  60+ 9F2F
  61+ 9F2F 7C               ld a,h
  62+ 9F30 FE 54            cp $54
  63+ 9F32 D8               ret c
  64+ 9F33
  65+ 9F33 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  66+ 9F34
  67+ 9F34 5D               ld e,l
  68+ 9F35 54               ld d,h
  69+ 9F36
  70+ 9F36 21 E0 57         ld hl,$57e0
  71+ 9F39 ED 52            sbc hl,de
  72+ 9F3B
  73+ 9F3B 38 04            jr c,Elimina_disparo_entidad
  74+ 9F3D
  75+ 9F3D 6B               ld l,e
  76+ 9F3E 62               ld h,d
  77+ 9F3F
  78+ 9F3F D1               pop de
  79+ 9F40
  80+ 9F40 C9               ret
  81+ 9F41
  82+ 9F41              ; ------------ ----------- ------------
  83+ 9F41              ;
  84+ 9F41              ;   25/9/24
  85+ 9F41
  86+ 9F41              Elimina_disparo_entidad
  87+ 9F41
  88+ 9F41 21 17 8C         ld hl,Numero_de_disparos_de_entidades
  89+ 9F44 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
  90+ 9F45
  91+ 9F45 E1               pop hl
  92+ 9F46 E5               push hl
  93+ 9F47
  94+ 9F47 2B               dec hl
  95+ 9F48 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
  96+ 9F49
  97+ 9F49 16 06            ld d,6                                                              ; Contador
  98+ 9F4B AF               xor a                                                               ; Borrador
  99+ 9F4C
 100+ 9F4C 77           1 ld (hl),a
 101+ 9F4D 15               dec d
 102+ 9F4E 23               inc hl
 103+ 9F4F 20 FB            jr nz,1B
 104+ 9F51
 105+ 9F51 D1               pop de
 106+ 9F52
 107+ 9F52 21 00 00         ld hl,0
 108+ 9F55
 109+ 9F55 C9               ret
 110+ 9F56              ; --------------------------------------------------------------------------------------
 111+ 9F56              ;
 112+ 9F56              ;   29/09/24
 113+ 9F56              ;
 114+ 9F56
 115+ 9F56              Genera_datos_de_impresion_disparos_Entidades
 116+ 9F56
 117+ 9F56 3A 17 8C         ld a,(Numero_de_disparos_de_entidades)
 118+ 9F59 47               ld b,a
 119+ 9F5A 3E 07            ld a,7
 120+ 9F5C 90               sub b
 121+ 9F5D C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 122+ 9F5E
 123+ 9F5E 08               ex af,af
 124+ 9F5F
 125+ 9F5F              ; ---------------
 126+ 9F5F
 127+ 9F5F              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 128+ 9F5F
 129+ 9F5F CD 90 90         call Inicia_Puntero_Disparo_Entidades
 130+ 9F62
 131+ 9F62 CD 97 90     1 call Extrae_address
 132+ 9F65
 133+ 9F65 23               inc hl
 134+ 9F66 7E               ld a,(hl)
 135+ 9F67 A7               and a
 136+ 9F68
 137+ 9F68 28 21            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 138+ 9F6A
 139+ 9F6A 2B               dec hl
 140+ 9F6B
 141+ 9F6B ED 73 04 8C      ld (Stack),sp
 142+ 9F6F F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 143+ 9F70
 144+ 9F70              Genera_scanlines_de_los_disparos_de_entidades.
 145+ 9F70
 146+ 9F70 C1               pop bc
 147+ 9F71 E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 148+ 9F72              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 149+ 9F72 ED 7B 14 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 150+ 9F76
 151+ 9F76 F1               pop af
 152+ 9F77 F1               pop af
 153+ 9F78 F1               pop af
 154+ 9F79
 155+ 9F79 ED 73 14 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 156+ 9F7D
 157+ 9F7D E5               push hl                                                   ;? Sube 2º scanline al álbum.
 158+ 9F7E CD B6 99         call NextScan
 159+ 9F81 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 160+ 9F82 C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 161+ 9F83
 162+ 9F83 ED 7B 04 8C      ld sp,(Stack)
 163+ 9F87
 164+ 9F87 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 165+ 9F88 3D               dec a
 166+ 9F89 C8               ret z
 167+ 9F8A 08               ex af,af
 168+ 9F8B
 169+ 9F8B              Situa_en_siguiente_caja
 170+ 9F8B
 171+ 9F8B 13               inc de
 172+ 9F8C 13               inc de
 173+ 9F8D
 174+ 9F8D EB               ex de,hl
 175+ 9F8E
 176+ 9F8E 18 D2            jr 1B
 177+ 9F90
 178+ 9F90              ; --------------------------------------------------------------------------------------
 179+ 9F90              ;
 180+ 9F90              ;   18/09/24
 181+ 9F90              ;
 182+ 9F90
 183+ 9F90              Genera_disparo_de_entidad_maldosa
 184+ 9F90
 185+ 9F90              ;   Estructura de un disparo de entidades.
 186+ 9F90
 187+ 9F90              ;   Disparo_1 defw 0								; Puntero objeto.
 188+ 9F90              ; 	defw 0											; Puntero de impresión.
 189+ 9F90              ;	defw 0											; Control.
 190+ 9F90
 191+ 9F90              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 192+ 9F90              ;   _de la entidad en el momento de disparar.
 193+ 9F90
 194+ 9F90              ;   El byte alto muestra la siguiente información:
 195+ 9F90              ;
 196+ 9F90              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 197+ 9F90              ;                        _antes de desplazarse a derecha/izquierda.
 198+ 9F90              ;
 199+ 9F90              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 200+ 9F90              ;
 201+ 9F90              ;                        10xx ..... Izquierda.
 202+ 9F90              ;                        01xx ..... Derecha.
 203+ 9F90              ;                        00xx ..... Recto.
 204+ 9F90
 205+ 9F90              ;*  Exclusiones.
 206+ 9F90
 207+ 9F90              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 208+ 9F90              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 209+ 9F90
 210+ 9F90 3A 17 8C         ld a,(Numero_de_disparos_de_entidades)
 211+ 9F93 A7               and a
 212+ 9F94 C8               ret z
 213+ 9F95
 214+ 9F95 3A B9 8B         ld a,(Coordenada_y)
 215+ 9F98 A7               and a
 216+ 9F99 C8               ret z
 217+ 9F9A
 218+ 9F9A 3D               dec a
 219+ 9F9B C8               ret z
 220+ 9F9C
 221+ 9F9C FE 10            cp 16
 222+ 9F9E D0               ret nc
 223+ 9F9F
 224+ 9F9F              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 225+ 9F9F              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 226+ 9F9F              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 227+ 9F9F              ;
 228+ 9F9F
 229+ 9F9F 21 19 8C         ld hl,Permiso_de_disparo_Entidades			        ; No más disparos en este FRAME.
 230+ 9FA2 35               dec (hl)
 231+ 9FA3
 232+ 9FA3 FD 21 70 83      ld iy,Disparo_de_entidad
 233+ 9FA7
 234+ 9FA7              ;   Decrementa el numero de disparos de entidades.
 235+ 9FA7
 236+ 9FA7 21 17 8C         ld hl,Numero_de_disparos_de_entidades
 237+ 9FAA 35               dec (hl)
 238+ 9FAB
 239+ 9FAB              ;   Puntero de impresión del disparo en BC.
 240+ 9FAB
 241+ 9FAB 21 2C 8C         ld hl,Puntero_de_impresion_disparo_de_entidad
 242+ 9FAE 4E               ld c,(hl)
 243+ 9FAF 23               inc hl
 244+ 9FB0 46               ld b,(hl)
 245+ 9FB1
 246+ 9FB1 CD 90 90         call Inicia_Puntero_Disparo_Entidades
 247+ 9FB4
 248+ 9FB4 2A 2A 8C     1 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)              ; En la 1ª caja del índice.
 249+ 9FB7 CD 97 90         call Extrae_address
 250+ 9FBA
 251+ 9FBA              ;   Comprobamos si la caja está vacía.
 252+ 9FBA
 253+ 9FBA 23               inc hl
 254+ 9FBB 7E               ld a,(hl)
 255+ 9FBC A7               and a
 256+ 9FBD
 257+ 9FBD 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 258+ 9FBF
 259+ 9FBF              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 260+ 9FBF
 261+ 9FBF 2B               dec hl
 262+ 9FC0
 263+ 9FC0 FD 7D            ld a,iyl
 264+ 9FC2 77               ld (hl),a
 265+ 9FC3 23               inc hl
 266+ 9FC4 FD 7C            ld a,iyh
 267+ 9FC6 77               ld (hl),a                                           ; Guarda el (puntero objeto) del disparo en la caja.
 268+ 9FC7
 269+ 9FC7 23               inc hl
 270+ 9FC8
 271+ 9FC8 71               ld (hl),c
 272+ 9FC9 23               inc hl
 273+ 9FCA 70               ld (hl),b                                           ; Guarda el puntero de impresión.
 274+ 9FCB
 275+ 9FCB 23               inc hl
 276+ 9FCC
 277+ 9FCC 3A C2 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 278+ 9FCF 77               ld (hl),a
 279+ 9FD0
 280+ 9FD0 23               inc hl
 281+ 9FD1
 282+ 9FD1              ;! Ajusta el grado de inclinación del disparo.
 283+ 9FD1
 284+ 9FD1 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 285+ 9FD3
 286+ 9FD3              ; Determina tendencia del disparo.
 287+ 9FD3
 288+ 9FD3 3A 6E 89         ld a,(CX_Amadeus)
 289+ 9FD6 47               ld b,a
 290+ 9FD7 3A B8 8B         ld a,(Coordenada_X)
 291+ 9FDA 90               sub b
 292+ 9FDB 38 07            jr c,Disparo_a_derecha
 293+ 9FDD
 294+ 9FDD FE 04        Disparo_a_izquierda cp 4
 295+ 9FDF
 296+ 9FDF D8               ret c
 297+ 9FE0 C8               ret z
 298+ 9FE1
 299+ 9FE1 CB FE            set 7,(hl)
 300+ 9FE3 C9               ret
 301+ 9FE4
 302+ 9FE4 47           Disparo_a_derecha ld b,a
 303+ 9FE5 3E FF            ld a,$ff
 304+ 9FE7 90               sub b
 305+ 9FE8
 306+ 9FE8 FE 04            cp 4
 307+ 9FEA
 308+ 9FEA D8               ret c
 309+ 9FEB C8               ret z
 310+ 9FEC
 311+ 9FEC CB F6            set 6,(hl)
 312+ 9FEE C9               ret
 313+ 9FEF
 314+ 9FEF              ;   --- --- ---
 315+ 9FEF
 316+ 9FEF              Situa_en_siguiente_disparo
 317+ 9FEF
 318+ 9FEF 13               inc de
 319+ 9FF0 13               inc de
 320+ 9FF1
 321+ 9FF1 ED 53 2A 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 322+ 9FF5 18 BD            jr 1B
 323+ 9FF7
 324+ 9FF7              ; --------------------------------------------------------------------------------------
 325+ 9FF7              ;
 326+ 9FF7              ;   31/08/24
 327+ 9FF7              ;
 328+ 9FF7
 329+ 9FF7              Compara_con_coordenadas_de_disparo
 330+ 9FF7
 331+ 9FF7 3A B9 8B         ld a,(Coordenada_y)
 332+ 9FFA 47               ld b,a
 333+ 9FFB 3A 31 8C         ld a,(Coordenadas_disparo_certero)
 334+ 9FFE 90               sub b
 335+ 9FFF
 336+ 9FFF              ; A = "0" ok
 337+ 9FFF              ; A = "1" ok
 338+ 9FFF
 339+ 9FFF 28 08            jr z,Comprueba_coordenada_X
 340+ A001 3D               dec a
 341+ A002 28 05            jr z,Comprueba_coordenada_X
 342+ A004
 343+ A004              ; A = "$ff" ok
 344+ A004
 345+ A004 FE FE            cp $fe
 346+ A006 28 01            jr z,Comprueba_coordenada_X
 347+ A008
 348+ A008 C9               ret
 349+ A009
 350+ A009              Comprueba_coordenada_X
 351+ A009
 352+ A009 3A B8 8B         ld a,(Coordenada_X)
 353+ A00C 47               ld b,a
 354+ A00D 21 32 8C         ld hl,Coordenadas_disparo_certero+1
 355+ A010 7E               ld a,(hl)
 356+ A011 90               sub b
 357+ A012
 358+ A012              ; A = "0" ok
 359+ A012              ; A = "1" ok
 360+ A012
 361+ A012 28 09            jr z,Activa_Impacto_en_entidad
 362+ A014 3D               dec a
 363+ A015 28 06            jr z,Activa_Impacto_en_entidad
 364+ A017
 365+ A017              ; A = "2" ok
 366+ A017
 367+ A017 3D               dec a
 368+ A018 28 03            jr z,Activa_Impacto_en_entidad
 369+ A01A
 370+ A01A              ; A = "$ff"
 371+ A01A
 372+ A01A FE FD            cp $fd
 373+ A01C C0               ret nz
 374+ A01D
 375+ A01D              Activa_Impacto_en_entidad
 376+ A01D
 377+ A01D              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 378+ A01D
 379+ A01D 3E 02            ld a,2
 380+ A01F 32 BB 8B         ld (Impacto),a
 381+ A022
 382+ A022              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 383+ A022
 384+ A022 11 C0 87         ld de,Indice_Explosion_entidades
 385+ A025 21 BE 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 386+ A028
 387+ A028 73               ld (hl),e
 388+ A029 23               inc hl
 389+ A02A 72               ld (hl),d
 390+ A02B
 391+ A02B              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 392+ A02B
 393+ A02B 21 2E 8C         ld hl,Impacto2
 394+ A02E CB 9E            res 3,(hl)
 395+ A030
 396+ A030 C9               ret
 397+ A031
 398+ A031              ; --------------------------------------------------------------------------------------
 399+ A031              ;
 400+ A031              ;   11/09/24
 401+ A031              ;
 402+ A031
 403+ A031              Limpia_album_de_borrado_disparos
 404+ A031
 405+ A031 21 29 8C         ld hl,Ctrl_5
 406+ A034 CB 56            bit 2,(hl)
 407+ A036 C8               ret z
 408+ A037
 409+ A037              ;    jr z,1F
 410+ A037
 411+ A037              ;    res 2,(hl)
 412+ A037
 413+ A037              ;    jr Limpiando
 414+ A037
 415+ A037              ;1 bit 0,(hl)
 416+ A037              ;    ret z
 417+ A037              ;    res 0,(hl)
 418+ A037
 419+ A037              Limpiando
 420+ A037
 421+ A037 AF               xor a
 422+ A038 2A 10 8C         ld hl,(Album_de_pintado_disparos)
 423+ A03B 77               ld (hl),a
 424+ A03C 5D               ld e,l
 425+ A03D 54               ld d,h
 426+ A03E 1C               inc e                                           ; DE = HL+1
 427+ A03F 01 3A 00         ld bc,$003a
 428+ A042 ED B0            ldir
 429+ A044
 430+ A044 C9               ret
 431+ A045
 432+ A045
 433+ A045              ; --------------------------------------------------------------------------------------
 434+ A045              ;
 435+ A045              ;   29/09/24
 436+ A045              ;
 437+ A045
 438+ A045              Calcula_bytes_pintado_disparos
 439+ A045
 440+ A045 2A 10 8C         ld hl,(Album_de_pintado_disparos)
 441+ A048 45               ld b,l
 442+ A049 2A 14 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 443+ A04C 7D               ld a,l
 444+ A04D
 445+ A04D 90               sub b
 446+ A04E 32 16 8C         ld (Num_de_bytes_album_de_disparos),a
 447+ A051
 448+ A051 C9               ret
 449+ A052
 450+ A052              ; --------------------------------------------------------------------------------------
 451+ A052              ;
 452+ A052              ;   29/09/24
 453+ A052              ;
 454+ A052              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 455+ A052              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 456+ A052              ;   _disparos que el álbum del FRAME actual).
 457+ A052
 458+ A052              Limpia_album_de_pintado_disparos
 459+ A052
 460+ A052 3A 16 8C         ld a,(Num_de_bytes_album_de_disparos)
 461+ A055 A7               and a
 462+ A056 28 0E            jr z,Clean_only_one
 463+ A058
 464+ A058 47               ld b,a
 465+ A059 3E 3B            ld a,$3b
 466+ A05B 90               sub b
 467+ A05C 47               ld b,a
 468+ A05D AF           2 xor a
 469+ A05E
 470+ A05E 2A 14 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 471+ A061 77           1 ld (hl),a
 472+ A062 23               inc hl
 473+ A063 10 FC            djnz 1B
 474+ A065 C9               ret
 475+ A066
 476+ A066              Clean_only_one
 477+ A066
 478+ A066 06 06            ld b,6
 479+ A068 18 F3            jr 2B
 480+ A06A
 481+ A06A              ; --------------------------------------------------------------------------------------
 482+ A06A              ;
 483+ A06A              ;   29/09/24
 484+ A06A              ;
 485+ A06A
 486+ A06A              Motor_Disparos_Amadeus
 487+ A06A
 488+ A06A              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 489+ A06A
 490+ A06A 21 20 89         ld hl,Disparo_Amad+1
 491+ A06D
 492+ A06D 34               inc (hl)
 493+ A06E 35               dec (hl)
 494+ A06F
 495+ A06F C8               ret z
 496+ A070
 497+ A070              ;   Esta caja contiene un disparo.
 498+ A070
 499+ A070 CD 77 A0         call Consulta_Impacto
 500+ A073 CC 90 A0         call z,Mueve_disparo_Amadeus
 501+ A076
 502+ A076 C9               ret
 503+ A077
 504+ A077              ; ----------------------
 505+ A077              ;
 506+ A077              ;
 507+ A077              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 508+ A077              ;
 509+ A077              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 510+ A077
 511+ A077
 512+ A077              Consulta_Impacto
 513+ A077
 514+ A077              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 515+ A077              ;   _sea lo más coherente posible.
 516+ A077
 517+ A077 E5               push hl
 518+ A078 2B               dec hl
 519+ A079 CD 71 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 520+ A07C E1               pop hl
 521+ A07D 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 522+ A07E
 523+ A07E C8               ret z
 524+ A07F
 525+ A07F 3A 2E 8C         ld a,(Impacto2)
 526+ A082 CB DF            set 3,a
 527+ A084 32 2E 8C         ld (Impacto2),a
 528+ A087
 529+ A087 E5               push hl
 530+ A088 CD 5E A1         call Genera_coordenadas_de_disparo_Amadeus
 531+ A08B E1               pop hl
 532+ A08C CD A9 A0         call Elimina_disparo_Amadeus
 533+ A08F
 534+ A08F C9               ret
 535+ A090
 536+ A090              ; ----------------------
 537+ A090              ;
 538+ A090              ;
 539+ A090              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 540+ A090
 541+ A090              Mueve_disparo_Amadeus
 542+ A090
 543+ A090 CD 97 90         call Extrae_address
 544+ A093
 545+ A093 CD C5 99         call PreviousScan
 546+ A096 CD C5 99         call PreviousScan
 547+ A099 CD C5 99         call PreviousScan
 548+ A09C CD C5 99         call PreviousScan
 549+ A09F
 550+ A09F              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 551+ A09F
 552+ A09F 7C               ld a,h
 553+ A0A0 D6 40            sub $40
 554+ A0A2 EB               ex de,hl
 555+ A0A3 38 04            jr c,Elimina_disparo_Amadeus
 556+ A0A5
 557+ A0A5               ; Introduce nuevo puntero_de_impresión en la caja.
 558+ A0A5
 559+ A0A5 73               ld (hl),e
 560+ A0A6 23               inc hl
 561+ A0A7 72               ld (hl),d
 562+ A0A8
 563+ A0A8 C9               ret
 564+ A0A9
 565+ A0A9              ; ----------------------
 566+ A0A9              ;
 567+ A0A9              ;   29/9/24
 568+ A0A9
 569+ A0A9              Elimina_disparo_Amadeus
 570+ A0A9
 571+ A0A9              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 572+ A0A9              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 573+ A0A9
 574+ A0A9              ;   Disparo_1A defw 0									; Puntero objeto.
 575+ A0A9              ;   	defw 0											; Puntero de impresión.
 576+ A0A9
 577+ A0A9 2B               dec hl
 578+ A0AA 2B               dec hl
 579+ A0AB
 580+ A0AB AF               xor a
 581+ A0AC 77               ld (hl),a
 582+ A0AD 23               inc hl
 583+ A0AE 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 584+ A0AF
 585+ A0AF 23               inc hl
 586+ A0B0 77               ld (hl),a
 587+ A0B1 23               inc hl
 588+ A0B2 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 589+ A0B3
 590+ A0B3 3E 01            ld a,1
 591+ A0B5 32 18 8C         ld (Permiso_de_disparo_Amadeus),a
 592+ A0B8
 593+ A0B8 21 29 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 594+ A0BB CB C6            set 0,(hl)
 595+ A0BD
 596+ A0BD AF               xor a
 597+ A0BE 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 598+ A0BF
 599+ A0BF C9               ret
 600+ A0C0
 601+ A0C0              ; --------------------------------------------------------------------------------------
 602+ A0C0              ;
 603+ A0C0              ;   21/8/24
 604+ A0C0              ;
 605+ A0C0
 606+ A0C0              Pinta_disparos
 607+ A0C0
 608+ A0C0              ;    ld a,(Ctrl_5)
 609+ A0C0              ;    bit 2,a
 610+ A0C0              ;    jr nz,$
 611+ A0C0
 612+ A0C0 ED 73 04 8C      ld (Stack),sp
 613+ A0C4 06 02            ld b,2
 614+ A0C6
 615+ A0C6 ED 7B 12 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 616+ A0CA
 617+ A0CA D1           2 pop de
 618+ A0CB
 619+ A0CB 14               inc d
 620+ A0CC 15               dec d
 621+ A0CD
 622+ A0CD 28 1B            jr z,1F
 623+ A0CF
 624+ A0CF              Imprime_scanlines_de_disparo
 625+ A0CF
 626+ A0CF E1               pop hl
 627+ A0D0
 628+ A0D0              ; Puntero objeto en DE.
 629+ A0D0              ; Puntero_de_impresión en HL.
 630+ A0D0
 631+ A0D0              ; 1er scanline.
 632+ A0D0
 633+ A0D0 1A               ld a,(de)
 634+ A0D1 AE               xor (hl)
 635+ A0D2 77               ld (hl),a
 636+ A0D3
 637+ A0D3 13               inc de
 638+ A0D4 2C               inc l
 639+ A0D5
 640+ A0D5 1A               ld a,(de)
 641+ A0D6 AE               xor (hl)
 642+ A0D7 77               ld (hl),a
 643+ A0D8
 644+ A0D8              ; 2º scanline.
 645+ A0D8
 646+ A0D8 E1               pop hl
 647+ A0D9 1B               dec de
 648+ A0DA
 649+ A0DA 1A               ld a,(de)
 650+ A0DB AE               xor (hl)
 651+ A0DC 77               ld (hl),a
 652+ A0DD
 653+ A0DD 13               inc de
 654+ A0DE 2C               inc l
 655+ A0DF
 656+ A0DF 1A               ld a,(de)
 657+ A0E0 AE               xor (hl)
 658+ A0E1 77               ld (hl),a
 659+ A0E2
 660+ A0E2              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 661+ A0E2
 662+ A0E2 18 E6            jr 2B
 663+ A0E4
 664+ A0E4 ED 7B 10 8C  3 ld sp,(Album_de_pintado_disparos)
 665+ A0E8 18 E0            jr 2B
 666+ A0EA
 667+ A0EA 10 F8        1 djnz 3B
 668+ A0EC ED 7B 04 8C      ld sp,(Stack)
 669+ A0F0 C9               ret
 670+ A0F1
 671+ A0F1              ; --------------------------------------------------------------------------------------
 672+ A0F1              ;
 673+ A0F1              ;   14/09/24
 674+ A0F1              ;
 675+ A0F1              ;   Modifica: HL y DE.
 676+ A0F1
 677+ A0F1
 678+ A0F1              Genera_datos_de_impresion_disparos_Amadeus
 679+ A0F1
 680+ A0F1 ED 73 04 8C      ld (Stack),sp
 681+ A0F5 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 682+ A0F8 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 683+ A0F9
 684+ A0F9 14               inc d                                                     ;? Salimos si no hay disparo.
 685+ A0FA 15               dec d
 686+ A0FB
 687+ A0FB 28 12            jr z,Salida
 688+ A0FD
 689+ A0FD              Genera_scanlines_de_disparo_Amadeus
 690+ A0FD
 691+ A0FD E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 692+ A0FE              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 693+ A0FE ED 7B 14 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 694+ A102
 695+ A102 C1               pop bc
 696+ A103 C1               pop bc
 697+ A104 C1               pop bc
 698+ A105
 699+ A105 ED 73 14 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 700+ A109
 701+ A109 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 702+ A10A CD C5 99         call PreviousScan
 703+ A10D E5               push hl                                                   ;? Sube 1er scanline al álbum.
 704+ A10E D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 705+ A10F
 706+ A10F              Salida
 707+ A10F
 708+ A10F ED 7B 04 8C      ld sp,(Stack)
 709+ A113
 710+ A113 C9               ret
 711+ A114
 712+ A114              ; --------------------------------------------------------------------------------------
 713+ A114              ;
 714+ A114              ;   12/09/24
 715+ A114              ;
 716+ A114
 717+ A114              Genera_disparo_Amadeus
 718+ A114
 719+ A114              ;*  Exclusiones.
 720+ A114
 721+ A114 3A 18 8C         ld a,(Permiso_de_disparo_Amadeus)
 722+ A117 A7               and a
 723+ A118 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 724+ A119
 725+ A119 3D               dec a
 726+ A11A 32 18 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 727+ A11D
 728+ A11D              Define_puntero_objeto_disparo
 729+ A11D
 730+ A11D              ;   Inicializamos contador.
 731+ A11D
 732+ A11D 06 00            ld b,0
 733+ A11F
 734+ A11F 2A 72 89         ld hl,(p.imp.amadeus)
 735+ A122 2C               inc l
 736+ A123
 737+ A123 3E 80            ld a,$80
 738+ A125 BE               cp (hl)
 739+ A126 28 0D            jr z,1F
 740+ A128
 741+ A128 04               inc b
 742+ A129
 743+ A129 3E 60            ld a,$60
 744+ A12B BE               cp (hl)
 745+ A12C 28 07            jr z,1F
 746+ A12E
 747+ A12E
 748+ A12E 04               inc b
 749+ A12F
 750+ A12F 3E 18            ld a,$18
 751+ A131 BE               cp (hl)
 752+ A132 28 01            jr z,1F
 753+ A134
 754+ A134 04               inc b
 755+ A135
 756+ A135              ;   Calcula el Puntero_de_impresión del disparo.
 757+ A135
 758+ A135              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 759+ A135
 760+ A135 CD C5 99     1 call PreviousScan
 761+ A138
 762+ A138 78               ld a,b
 763+ A139 CB 3F            srl a
 764+ A13B 28 03            jr z,4F
 765+ A13D
 766+ A13D              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 767+ A13D E5               push hl
 768+ A13E 18 02            jr 5F
 769+ A140 2D           4 dec l
 770+ A141 E5               push hl
 771+ A142              ; ---
 772+ A142
 773+ A142              ;   Calcula el Puntero_objeto del disparo.
 774+ A142
 775+ A142 21 72 83     5 ld hl,Indice_disparo_Amadeus
 776+ A145 04               inc b
 777+ A146 05               dec b
 778+ A147 28 04            jr z,2F
 779+ A149
 780+ A149              ;   Nos desplazamos por el índice de disparos.
 781+ A149
 782+ A149 2C           3 inc l
 783+ A14A 2C               inc l
 784+ A14B 10 FC            djnz 3B
 785+ A14D
 786+ A14D              ; --- Guarda el Puntero_objeto del disparo en la pila.
 787+ A14D CD 97 90     2 call Extrae_address
 788+ A150 E5               push hl
 789+ A151              ; ---
 790+ A151
 791+ A151              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 792+ A151              ; HL en el 1er .db de la caja.
 793+ A151
 794+ A151 21 1F 89         ld hl,Disparo_Amad
 795+ A154
 796+ A154 06 02            ld b,2
 797+ A156
 798+ A156 D1           6 pop de
 799+ A157 73               ld (hl),e
 800+ A158 23               inc hl
 801+ A159 72               ld (hl),d
 802+ A15A 23               inc hl
 803+ A15B
 804+ A15B 10 F9            djnz 6B
 805+ A15D
 806+ A15D C9               ret
 807+ A15E
 808+ A15E              Genera_coordenadas_de_disparo_Amadeus
 809+ A15E
 810+ A15E              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 811+ A15E              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 812+ A15E              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 813+ A15E
 814+ A15E CD 97 90         call Extrae_address
 815+ A161 CD B6 94         call Genera_coordenadas
 816+ A164
 817+ A164 3D               dec a
 818+ A165
 819+ A165 21 31 8C         ld hl,Coordenadas_disparo_certero
 820+ A168 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 821+ A169 23               inc hl
 822+ A16A 3A B8 8B         ld a,(Coordenada_X)
 823+ A16D 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 824+ A16E
 825+ A16E AF               xor a
 826+ A16F 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 827+ A170
 828+ A170 C9               ret
 829+ A171
 830+ A171              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 831+ A171              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 832+ A171              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 833+ A171
 834+ A171              ; ----------------------------------------------
 835+ A171              ;
 836+ A171              ;   27/08/24
 837+ A171              ;
 838+ A171              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 839+ A171              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 840+ A171
 841+ A171              Detecta_impacto_en_disparo_de_Amadeus
 842+ A171
 843+ A171              Extraccion_de_datos
 844+ A171
 845+ A171 13               inc de
 846+ A172 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 847+ A173
 848+ A173 5E               ld e,(hl)
 849+ A174 23               inc hl
 850+ A175 56               ld d,(hl)
 851+ A176
 852+ A176 23               inc hl
 853+ A177
 854+ A177 4E               ld c,(hl)
 855+ A178 23               inc hl
 856+ A179 46               ld b,(hl)
 857+ A17A
 858+ A17A C5               push bc
 859+ A17B E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 860+ A17C
 861+ A17C              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 862+ A17C
 863+ A17C CD C5 99         call PreviousScan
 864+ A17F CD C5 99         call PreviousScan
 865+ A182
 866+ A182              Detecta_impacto_
 867+ A182
 868+ A182 1A               ld a,(de)
 869+ A183 A6               and (hl)
 870+ A184 C0               ret nz
 871+ A185
 872+ A185 13               inc de
 873+ A186 23               inc hl
 874+ A187
 875+ A187 1A               ld a,(de)
 876+ A188 A6               and (hl)
 877+ A189 C9               ret
 878+ A18A
 879+ A18A              ; -------------------------------------------------------------------------------------------------------------
 880+ A18A              ;
 881+ A18A              ;   8/8/24
 882+ A18A              ;
 883+ A18A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 884+ A18A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 885+ A18A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 886+ A18A              ;
 887+ A18A              ;   MODIFICA: HL,DE,BC y A.
 888+ A18A              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 889+ A18A              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 890+ A18A
 891+ A18A              Colision_Entidad_Amadeus
 892+ A18A
 893+ A18A              ; Posible contacto de entidad con Amadeus. ?????
 894+ A18A
 895+ A18A              ; Exclusiones:
 896+ A18A
 897+ A18A 3A 51 8C         ld a,(Shield)
 898+ A18D A7               and a
 899+ A18E C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 900+ A18F
 901+ A18F 21 27 8C         ld hl,Ctrl_3
 902+ A192 CB 76            bit 6,(hl)
 903+ A194 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 904+ A195
 905+ A195 21 2E 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 906+ A198 CB 56            bit 2,(hl)
 907+ A19A C0               ret nz
 908+ A19B
 909+ A19B 3A B9 8B     	ld a,(Coordenada_y)
 910+ A19E FE 14        	cp $14
 911+ A1A0 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 912+ A1A1
 913+ A1A1 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 914+ A1A4 A7               and a
 915+ A1A5 C0               ret nz
 916+ A1A6
 917+ A1A6              Genera_coordenadas_X
 918+ A1A6
 919+ A1A6              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 920+ A1A6              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 921+ A1A6
 922+ A1A6              ;   Limpiamos almacenes.
 923+ A1A6
 924+ A1A6              ;    call Limpia_Coordenadas_X
 925+ A1A6
 926+ A1A6              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 927+ A1A6
 928+ A1A6 21 33 8C         ld hl,Coordenadas_X_Entidad
 929+ A1A9 3A B8 8B         ld a,(Coordenada_X)
 930+ A1AC CD CE A1         call Guarda_coordenadas_X
 931+ A1AF
 932+ A1AF              ;   Almacenamos las coordenadas X de Amadeus.
 933+ A1AF
 934+ A1AF 3A 6E 89         ld a,(CX_Amadeus)
 935+ A1B2 CD CE A1         call Guarda_coordenadas_X
 936+ A1B5 CD E2 A1         call Compara_coordenadas_X
 937+ A1B8 C0               ret nz
 938+ A1B9
 939+ A1B9 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 940+ A1BB 32 BB 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 941+ A1BE
 942+ A1BE 2A F7 8B         ld hl,(Puntero_store_caja)
 943+ A1C1 2C               inc l
 944+ A1C2 2C               inc l
 945+ A1C3 2C               inc l
 946+ A1C4 2C               inc l
 947+ A1C5 22 2F 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 948+ A1C8
 949+ A1C8 21 2E 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 950+ A1CB CB D6            set 2,(hl)
 951+ A1CD
 952+ A1CD C9               ret
 953+ A1CE
 954+ A1CE               ; ----- ----- ----- ----- -----
 955+ A1CE
 956+ A1CE 77           Guarda_coordenadas_X ld (hl),a
 957+ A1CF 3C               inc a
 958+ A1D0 2C               inc l
 959+ A1D1 77               ld (hl),a
 960+ A1D2 3C               inc a
 961+ A1D3 2C               inc l
 962+ A1D4 77               ld (hl),a
 963+ A1D5 2C               inc l
 964+ A1D6 C9               ret
 965+ A1D7
 966+ A1D7 AF           Limpia_Coordenadas_X xor a
 967+ A1D8 06 06            ld b,6
 968+ A1DA 21 36 8C         ld hl,Coordenadas_X_Amadeus
 969+ A1DD 77           1 ld (hl),a
 970+ A1DE 23               inc hl
 971+ A1DF 10 FC            djnz 1B
 972+ A1E1 C9               ret
 973+ A1E2
 974+ A1E2              ; ----- ----- ----- ----- -----
 975+ A1E2
 976+ A1E2              Compara_coordenadas_X
 977+ A1E2
 978+ A1E2 DD 21 33 8C      ld ix,Coordenadas_X_Entidad
 979+ A1E6 DD 7E 00         ld a,(ix+0)
 980+ A1E9 CD F7 A1         call Comparando
 981+ A1EC C8               ret z
 982+ A1ED
 983+ A1ED 3C               inc a
 984+ A1EE CD 06 A2         call Comparando_1
 985+ A1F1 C8               ret z
 986+ A1F2
 987+ A1F2 3C               inc a
 988+ A1F3 CD 06 A2         call Comparando_1
 989+ A1F6 C9               ret
 990+ A1F7
 991+ A1F7              ; ----- ----- ----- ----- -----
 992+ A1F7              ;
 993+ A1F7              ;   4/12/23
 994+ A1F7              ;
 995+ A1F7              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 996+ A1F7
 997+ A1F7              Comparando
 998+ A1F7
 999+ A1F7 DD 2C            inc ixl
1000+ A1F9 DD 2C            inc ixl
1001+ A1FB DD 2C            inc ixl
1002+ A1FD
1003+ A1FD DD 46 00         ld b,(ix+0)
1004+ A200 DD 4E 01         ld c,(ix+1)
1005+ A203 DD 56 02         ld d,(ix+2)
1006+ A206
1007+ A206 B8           Comparando_1 cp b
1008+ A207 C8               ret z
1009+ A208 B9               cp c
1010+ A209 C8               ret z
1011+ A20A BA               cp d
1012+ A20B C9               ret
1013+ A20C
1014+ A20C              ; -----------------------------------------------------------------------
1015+ A20C              ;
1016+ A20C              ;   04/7/24
1017+ A20C              ;
1018+ A20C
1019+ A20C              Detecta_colision_nave_entidad
1020+ A20C
1021+ A20C              ; Exclusiones:
1022+ A20C
1023+ A20C              ; Salimos de la rutina si no hay advertencia de posible colisión.
1024+ A20C
1025+ A20C 21 2E 8C     	ld hl,Impacto2
1026+ A20F CB 56        	bit 2,(hl)
1027+ A211 C8           	ret z
1028+ A212
1029+ A212              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1030+ A212
1031+ A212 2A 74 89         ld hl,(Pamm_Amadeus)
1032+ A215 CD 97 90         call Extrae_address
1033+ A218 54               ld d,h
1034+ A219 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1035+ A21A
1036+ A21A 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1037+ A21D 06 10            ld b,16                                        ; Contador de scanlines en B.
1038+ A21F FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1039+ A222
1040+ A222 C5           1 push bc
1041+ A223 06 03            ld b,3
1042+ A225 E5               push hl
1043+ A226
1044+ A226              ; .db
1045+ A226
1046+ A226 1A           3 ld a,(de)
1047+ A227 A7               and a
1048+ A228 20 03            jr nz,4F
1049+ A22A
1050+ A22A 2C               inc l
1051+ A22B 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1052+ A22D
1053+ A22D ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1054+ A22F 28 04            jr z,2F
1055+ A231
1056+ A231              ; Impacto.
1057+ A231 FD 2D            dec iyl
1058+ A233 28 22            jr z,5F
1059+ A235
1060+ A235 1C           2 inc e
1061+ A236 10 EE            djnz 3B
1062+ A238
1063+ A238 E1               pop hl
1064+ A239
1065+ A239              ; Hay salto de línea en el puntero de impresión ???
1066+ A239
1067+ A239 7C               ld a,h
1068+ A23A D6 57            sub $57
1069+ A23C 20 0A            jr nz,6F
1070+ A23E
1071+ A23E              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1072+ A23E
1073+ A23E 2A 72 89         ld hl,(p.imp.amadeus)
1074+ A241 3E 20            ld a,$20
1075+ A243 A7               and a
1076+ A244 85               add l
1077+ A245 6F               ld l,a
1078+ A246 18 01            jr 7F
1079+ A248
1080+ A248 24           6 inc h
1081+ A249
1082+ A249 C1           7 pop bc
1083+ A24A 10 D6            djnz 1B
1084+ A24C
1085+ A24C              ;   Fin de la comparativa.
1086+ A24C
1087+ A24C              ;   NO HAY COLISIÓN !!!!!.
1088+ A24C              ;
1089+ A24C              ;   .db (Impacto) de Amadeus a "0".
1090+ A24C              ;   RES el bit2 de (Impacto2).
1091+ A24C              ;
1092+ A24C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1093+ A24C              ;   Lo colocamos a "0".
1094+ A24C
1095+ A24C 21 2E 8C         ld hl,Impacto2
1096+ A24F CB 96            res 2,(hl)
1097+ A251 2A 2F 8C         ld hl,(Entidad_sospechosa_de_colision)
1098+ A254 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1099+ A256 C9               ret
1100+ A257
1101+ A257              ;   COLISIÓN !!!!!.
1102+ A257              ;
1103+ A257              ;   .db (Impacto) de Amadeus a "1".
1104+ A257              ;   SET el bit3 de (Impacto2).
1105+ A257              ;
1106+ A257              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1107+ A257
1108+ A257 E1           5 pop hl
1109+ A258 C1               pop bc
1110+ A259
1111+ A259 21 71 89         ld hl,Impacto_Amadeus
1112+ A25C 36 01            ld (hl),1
1113+ A25E 21 2E 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1114+ A261 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1115+ A263
1116+ A263 11 C0 87         ld de,Indice_Explosion_entidades
1117+ A266 2A 2F 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1118+ A269
1119+ A269 23               inc hl
1120+ A26A 23               inc hl
1121+ A26B 23               inc hl
1122+ A26C
1123+ A26C 73               ld (hl),e
1124+ A26D 23               inc hl
1125+ A26E 72               ld (hl),d
1126+ A26F
1127+ A26F              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1128+ A26F
1129+ A26F 11 60 88         ld de,Indice_Explosion_Amadeus
1130+ A272 21 74 89         ld hl,Pamm_Amadeus
1131+ A275
1132+ A275 73               ld (hl),e
1133+ A276 23               inc hl
1134+ A277 72               ld (hl),d
1135+ A278
1136+ A278 C9               ret
1137+ A279
1138+ A279
1139+ A279
# file closed: Disparo.asm
2078  A279
2079  A279              	SAVESNA "Pruebas.sna", START
2080  A279
2081  A279
2082  A279
2083  A279
# file closed: Banco_de_pruebas.asm
