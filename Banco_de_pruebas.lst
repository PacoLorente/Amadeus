# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 65 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 4D A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 1E 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8F 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 88 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8D 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8D 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 90 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 98 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 36 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C3 89        	defw Caja_1
 154+ 89A9 CF 89        	defw Caja_2
 155+ 89AB DB 89        	defw Caja_3
 156+ 89AD E7 89        	defw Caja_4
 157+ 89AF F3 89        	defw Caja_5
 158+ 89B1 FF 89        	defw Caja_6
 159+ 89B3              ;	defw Caja_7
 160+ 89B3
 161+ 89B3 00 00        	defw 0
 162+ 89B5 00 00        	defw 0
 163+ 89B7
 164+ 89B7              ; -------------------------
 165+ 89B7
 166+ 89B7              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B7
 168+ 89B7              ;	db 0
 169+ 89B7
 170+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B7              ;
 172+ 89B7              ;	28/05/24
 173+ 89B7              ;
 174+ 89B7              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B7              ;
 176+ 89B7              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B7
 178+ 89B7 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89B8 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BA 00           	db 0												; (Contador_de_vueltas).
 181+ 89BB 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BC 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89BE 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C0 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C2 00           	db 0												; (Velocidad).
 186+ 89C3
 187+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C3              ;
 189+ 89C3              ;	22/01/24
 190+ 89C3              ;
 191+ 89C3              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C3
 193+ 89C3 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C6 00           	db 0												; (Contador_de_vueltas).
 195+ 89C7 00           	db 0												; (Impacto).
 196+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89CE 00           	db 0												; (Velocidad).
 200+ 89CF
 201+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 202+ 89CF
 203+ 89CF 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D3 00           	db 0												; (Impacto).
 206+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DA 00           	db 0												; (Velocidad).
 210+ 89DB
 211+ 89DB              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DB
 213+ 89DB 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89DE 00           	db 0 												; (Contador_de_vueltas).
 215+ 89DF 00           	db 0												; (Impacto).
 216+ 89E0 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E6 00           	db 0												; (Velocidad).
 220+ 89E7
 221+ 89E7              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E7
 223+ 89E7 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EA 00           	db 0 												; (Contador_de_vueltas).
 225+ 89EB 00           	db 0												; (Impacto).
 226+ 89EC 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F2 00           	db 0												; (Velocidad).
 230+ 89F3
 231+ 89F3              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F3
 233+ 89F3 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F6 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F7 00           	db 0												; (Impacto).
 236+ 89F8 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 89FE 00           	db 0												; (Velocidad).
 240+ 89FF
 241+ 89FF              ; ---------- ---------- ---------- ---------- ----------
 242+ 89FF
 243+ 89FF 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A02 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A03 00           	db 0												; (Impacto).
 246+ 8A04 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A06 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A08 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0A 00           	db 0												; (Velocidad).
 250+ 8A0B
 251+ 8A0B              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0B
 253+ 8A0B              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A0B              ;	db 0 												; (Contador_de_vueltas).
 255+ 8A0B              ;	db 0												; (Impacto).
 256+ 8A0B              ;	defw 0												; (Puntero_de_impresion).
 257+ 8A0B              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A0B              ;	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A0B              ;	db 0												; (Velocidad).
 260+ 8A0B
 261+ 8A0B              ; -------------------------------------------------------------------------------------
 262+ 8A0B              ;
 263+ 8A0B              ;	10/11/24
 264+ 8A0B              ;
 265+ 8A0B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A0B              ;
 267+ 8A0B              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A0B              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A0B              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A0B              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A0B
 272+ 8A0B              Indice_de_definiciones_de_entidades
 273+ 8A0B
 274+ 8A0B 0F 8A        	defw Entidad_1
 275+ 8A0D 1C 8A        	defw Entidad_2
 276+ 8A0F
 277+ 8A0F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A0F
 279+ 8A0F              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A0F
 281+ 8A0F 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A12 01           	db 1												; (Contador_de_vueltas).
 283+ 8A13 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A15 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A17
 286+ 8A17              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A17              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A17
 289+ 8A17 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A19 00           	db 0												; (Cuad_objeto).
 291+ 8A1A
 292+ 8A1A C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A1C
 294+ 8A1C              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A1C
 296+ 8A1C 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A1F 01           	db 1												; (Contador_de_vueltas).
 298+ 8A20 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A22 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A24 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A26 01           	db 1												; (Cuad_objeto).
 302+ 8A27 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A29
 304+ 8A29              ; -------------------------------------------------------------------------------------
 305+ 8A29              ;
 306+ 8A29              ;	28/05/24
 307+ 8A29              ;
 308+ 8A29              ;	Definición de Amadeus.
 309+ 8A29              ;
 310+ 8A29              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A29              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A29
 313+ 8A29 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A2C 00           	db 0												; (Contador_de_vueltas).
 315+ 8A2D C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A2F D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A31 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A33 03           	db 3												; (Cuad_objeto).
 319+ 8A34 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A36              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A36
   2+ 8A36
   3+ 8A36              ;   07/07/23
   4+ 8A36              ;
   5+ 8A36              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A36              ;
   7+ 8A36              ;   Codificación:
   8+ 8A36              ;
   9+ 8A36              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A36              ;
  11+ 8A36              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A36              ;
  13+ 8A36              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A36              ;
  15+ 8A36              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A36              ;
  17+ 8A36              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A36              ;                               ..... %01000010 Vel_up 4
  19+ 8A36              ;                                               Vel_down 2
  20+ 8A36              ;                               ..... $42
  21+ 8A36              ;
  22+ 8A36              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A36              ;
  24+ 8A36              ;                               ..... %01000010 Vel_left 4
  25+ 8A36              ;                                               Vel_right 2
  26+ 8A36              ;                               ..... $42
  27+ 8A36              ;
  28+ 8A36              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A36              ;
  30+ 8A36              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A36              ;
  32+ 8A36              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A36              ;
  34+ 8A36              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A36              ;                                     $53
  36+ 8A36              ;
  37+ 8A36              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A36              ;
  39+ 8A36              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A36              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A36              ;
  42+ 8A36              ;                       Arriba ..... $81
  43+ 8A36              ;                       Arriba - izquierda ..... $a1
  44+ 8A36              ;                       Arriba - derecha ..... $91
  45+ 8A36              ;
  46+ 8A36              ;                       Abajo ..... $41
  47+ 8A36              ;                       Abajo - izquierda ..... $61
  48+ 8A36              ;                       Abajo - derecha ..... $51
  49+ 8A36              ;
  50+ 8A36              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A36              ;
  52+ 8A36              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A36              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A36              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A36              ;
  56+ 8A36              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A36              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A36              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A36              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A36              ;
  61+ 8A36              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A36              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A36              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A36              ;
  65+ 8A36              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A36              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A36              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A36              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A36
  70+ 8A36              ; ----- ----- ----- ----- -----
  71+ 8A36
  72+ 8A36 62 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A38 6A 8A            defw F_1
  74+ 8A3A 74 8A            defw F_2
  75+ 8A3C 7E 8A            defw Codo_abajo_derecha
  76+ 8A3E B2 8A            defw Derecha_y_subiendo
  77+ 8A40 BC 8A            defw Derecha_y_subiendo_1
  78+ 8A42 C6 8A            defw F_3
  79+ 8A44 D0 8A            defw F_4
  80+ 8A46 DA 8A            defw Derecha_y_bajando
  81+ 8A48 E4 8A            defw Derecha_y_bajando_1
  82+ 8A4A EE 8A            defw Derecha_y_bajando_2
  83+ 8A4C F8 8A            defw Codo_derecha_abajo
  84+ 8A4E 28 8B            defw Codo_abajo_izq.
  85+ 8A50 5C 8B            defw Izquierda_y_subiendo
  86+ 8A52 66 8B            defw Izquierda_y_subiendo_1
  87+ 8A54 70 8B            defw F_5
  88+ 8A56 7A 8B            defw F_6
  89+ 8A58 84 8B            defw Izquierda_y_bajando
  90+ 8A5A 8E 8B            defw Izquierda_y_bajando_1
  91+ 8A5C 98 8B            defw Izquierda_y_bajando_2
  92+ 8A5E A2 8B            defw Codo_izquierda_abajo
  93+ 8A60 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A62
  95+ 8A62 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A66 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6A
  98+ 8A6A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A72 08 00
 100+ 8A74
 101+ 8A74 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A78 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7C 0F FE
 103+ 8A7E
 104+ 8A7E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A92 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB2
 118+ 8AB2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABA 06 00
 120+ 8ABC
 121+ 8ABC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC0 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC4 02 00
 123+ 8AC6
 124+ 8AC6 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACA 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACE 04 00
 126+ 8AD0
 127+ 8AD0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD8 08 00
 129+ 8ADA
 130+ 8ADA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE2 02 00
 132+ 8AE4
 133+ 8AE4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AEC 06 00
 135+ 8AEE
 136+ 8AEE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF6 06 00
 138+ 8AF8
 139+ 8AF8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF8
 141+ 8AF8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B04 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B24 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B28
 154+ 8B28 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B30 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B34 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B38 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B40 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B44 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B48 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B50 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B54 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B58 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5C
 168+ 8B5C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B60 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B64 06 00
 170+ 8B66
 171+ 8B66 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6E 02 00
 173+ 8B70
 174+ 8B70 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B74 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B78 04 00
 176+ 8B7A
 177+ 8B7A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B82 08 00
 179+ 8B84
 180+ 8B84 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B88 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8C 02 00
 182+ 8B8E
 183+ 8B8E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B92 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B96 06 00
 185+ 8B98
 186+ 8B98 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA0 06 00
 188+ 8BA2
 189+ 8BA2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC6 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCE 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD2
 202+ 8BD2
 203+ 8BD2
 204+ 8BD2
 205+ 8BD2
 206+ 8BD2
 207+ 8BD2
 208+ 8BD2
 209+ 8BD2
 210+ 8BD2
# file closed: Patrones_de_mov.asm
 149  8BD2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD2              ; 19/1/24
   2+ 8BD2
   3+ 8BD2              Indice_de_niveles
   4+ 8BD2
   5+ 8BD2 DA 8B        	defw Nivel_1
   6+ 8BD4 E1 8B        	defw Nivel_2
   7+ 8BD6
   8+ 8BD6              ;	...
   9+ 8BD6              ;	...
  10+ 8BD6              ;	+ Niveles ...
  11+ 8BD6
  12+ 8BD6 00 00        	defw 0
  13+ 8BD8 00 00        	defw 0
  14+ 8BDA
  15+ 8BDA 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDB 01 01 01 01  	db 1,1,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BDF 01 01
  17+ 8BE1
  18+ 8BE1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE6 01 02
  20+ 8BE8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BEC 01 02
  21+ 8BEE
# file closed: Niveles.asm
 150  8BEE
 151  8BEE              ; --------------------------------------------------------------------------------
 152  8BEE              ;
 153  8BEE              ; 12/05/24
 154  8BEE              ;
 155  8BEE              ; Parámetros DRAW.
 156  8BEE              ;
 157  8BEE
 158  8BEE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEE
 160  8BEE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEF              ;															- Patrón de movimiento.
 162  8BEF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF1
 165  8BF1 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF2
 168  8BF2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF2              ; Ejemplos.
 171  8BF2
 172  8BF2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF2
 178  8BF2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF3
 182  8BF3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF5
 185  8BF5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF7
 187  8BF7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF7
 189  8BF7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF9              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF9
 192  8BF9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF9
 194  8BF9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFA
 200  8BFA 00           Ctrl_2 db 0
 201  8BFB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFB              ;
 209  8BFB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFB              ;														BIT 4, ???
 215  8BFB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFB
 217  8BFB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFC              ;
 223  8BFC              ; 														DESCRIPCIÖN:
 224  8BFC              ;
 225  8BFC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFC              ;
 239  8BFC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFC
 243  8BFC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFC
 245  8BFC 00           Filas db 0												; Filas. [DRAW]
 246  8BFD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C00 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C02
 250  8C02              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C02
 252  8C02 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C03              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C03              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C03
 256  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C03
 258  8C03              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C03              ;
 260  8C03              ;	COLORES: 0 ..... NEGRO
 261  8C03              ;    		 1 ..... AZUL
 262  8C03              ; 			 2 ..... ROJO
 263  8C03              ;			 3 ..... MAGENTA
 264  8C03              ; 			 4 ..... VERDE
 265  8C03              ; 			 5 ..... CIAN
 266  8C03              ;			 6 ..... AMARILLO
 267  8C03              ; 			 7 ..... BLANCO
 268  8C03
 269  8C03 00 00        Indice_Sprite_der defw 0
 270  8C05 00 00        Indice_Sprite_izq defw 0
 271  8C07 00 00        Puntero_DESPLZ_der defw 0
 272  8C09 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0B
 274  8C0B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0E 00           Columnas db 0
 277  8C0F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C11              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C11 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C12
 281  8C12              ; variables de control general.
 282  8C12
 283  8C12 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C13
 285  8C13              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C13
 287  8C13              Perfiles_de_velocidad
 288  8C13
 289  8C13 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C14 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C15 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C16 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C17
 294  8C17              ; Contadores de 16 bits.
 295  8C17
 296  8C17 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C19 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1F
 301  8C1F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1F
 303  8C1F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C21 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C23 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C25              ;
 307  8C25              ;
 308  8C25 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C26              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C26              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C26 00           Incrementa_puntero_backup db 0
 312  8C27 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C28              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C28 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C29 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2B              ;
 318  8C2B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2B              ;
 322  8C2B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2B              ;
 327  8C2B              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2B
 331  8C2B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2C
 333  8C2C              ;														DESCRIPCIÓN:
 334  8C2C              ;
 335  8C2C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2C
 342  8C2C              ;														BIT 3, Recarga de nueva oleada.
 343  8C2C              ;														BIT 4, Recarga de nueva oleada.
 344  8C2C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2C              ;														BIT 6, **** Frame completo.
 346  8C2C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2C
 348  8C2C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2E
 353  8C2E              ; Gestión de ENTIDADES y CAJAS.
 354  8C2E
 355  8C2E 00 00        Puntero_store_caja defw 0
 356  8C30 00 00        Puntero_restore_caja defw 0
 357  8C32 00 00        Indice_restore_caja defw 0
 358  8C34 00 00        Puntero_indice_master defw 0
 359  8C36
 360  8C36 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C37 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C38 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C39
 364  8C39 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3D              ;														; _ puntero (Indice_entidades).
 367  8C3D
 368  8C3D              ;---------------------------------------------------------------------------------------------------------------
 369  8C3D              ;
 370  8C3D              ;	13/10/24
 371  8C3D              ;
 372  8C3D              ;	Álbumes.
 373  8C3D
 374  8C3D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3F              ;														; _variable para almacenar lo posición del puntero_
 376  8C3F              ; 														; _de pila, SP.
 377  8C3F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C41              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C41
 380  8C41              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C41
 382  8C41 00 00        Album_de_pintado defw 0
 383  8C43 00 00        Album_de_borrado defw 0
 384  8C45 00 00        Album_de_pintado_Amadeus defw 0
 385  8C47 00 00        Album_de_borrado_Amadeus defw 0
 386  8C49
 387  8C49 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4D
 390  8C4D 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4F 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C51
 393  8C51
 394  8C51 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C53
 396  8C53 00           Num_de_bytes_album_de_disparos db 0
 397  8C54 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C55
 399  8C55 07           Numero_de_disparos_de_entidades db 7
 400  8C56
 401  8C56 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C57 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C58
 404  8C58 00 00        Techo_Scanlines_album defw 0
 405  8C5A 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5C 00           Switch db 0
 407  8C5D 00 00        Techo defw 0
 408  8C5F 00 00        Scanlines_album_SP defw 0
 409  8C61 00 89        India_SP defw Tabla_de_pintado
 410  8C63 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C65
 412  8C65 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C66              ;
 414  8C66              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C66              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C66              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C66              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C66              ;																Habilita el borrado/pintado de sprites.
 419  8C66              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C66              ;																_ a la baja.
 421  8C66              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C66              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C66              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C66              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C66              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C66              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C66
 428  8C66 00           Ctrl_4 db 0
 429  8C67 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C68              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C68              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C68
 433  8C68              ; Gestión de Disparos.
 434  8C68
 435  8C68 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6C 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6D
 439  8C6D              ;
 440  8C6D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6D
 445  8C6D
 446  8C6D
 447  8C6D
 448  8C6D
 449  8C6D
 450  8C6D
 451  8C6D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6F
 455  8C6F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C71              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C71 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C74              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C74 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C77              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C77
 462  8C77              ;---------------------------------------------------------------------------------------------------------------
 463  8C77
 464  8C77              ; Relojes y temporizaciones.
 465  8C77
 466  8C77 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C78 05           Clock_explosion_Amadeus db 5
 468  8C79 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7A
 470  8C7A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7E 00           Numero_rnd_disparos db 0
 473  8C7F
 474  8C7F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C81 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C82              ;																		; Repite la oleada de entidades.
 477  8C82 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C83 A0           CLOCK_disparos_de_entidades db $a0
 479  8C84
 480  8C84              ;---------------------------------------------------------------------------------------------------------------
 481  8C84
 482  8C84              ; Gestión de NIVELES.
 483  8C84
 484  8C84 00           Nivel db 0												; Nivel actual del juego.
 485  8C85 00 00        Puntero_indice_NIVELES defw 0
 486  8C87 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C89              ; 														; _ que definen el NIVEL.
 488  8C89
 489  8C89              ; ---------------------------------------------------------------------------------------------------------------
 490  8C89
 491  8C89              ; Temporizaciones Shield.
 492  8C89
 493  8C89 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C90 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C91 00           Shield_3 db 0
 498  8C92
 499  8C92 03           Lives db 3
 500  8C93
 501  8C93              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C93              ;
 503  8C93              ;	13/11/24
 504  8C93
 505  8C93              START
 506  8C93
 507  8C93 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C96 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C98 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9C F3           	DI
 512  8C9D
 513  8C9D              ; Limpiamos pantalla.
 514  8C9D
 515  8C9D 3E 07        	ld a,%00000111
 516  8C9F CD D0 94     	call Cls
 517  8CA2 CD 7D 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA5
 519  8CA5              INICIALIZACION
 520  8CA5
 521  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA7 CD CA 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAA CD FF 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 7F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3              ;	Inicia los álbumes de líneas.
 529  8CB3
 530  8CB3 CD CB 90     	call Inicia_albumes_de_lineas
 531  8CB6 CD DB 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CB9 CD E8 90     	call Inicia_albumes_de_disparos
 533  8CBC
 534  8CBC              ;	Inicia 1er Nivel.
 535  8CBC
 536  8CBC CD 2C 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CBF CD FA 92     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CC2              ;														   _reponiendo entidades eliminadas.
 539  8CC2 CD 60 93     	call Prepara_Cajas_de_Entidades
 540  8CC5
 541  8CC5              4
 542  8CC5
 543  8CC5              ;	call Inicia_Entidades
 544  8CC5 CD B1 93     	call Inicia_Amadeus
 545  8CC8
 546  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC8
 550  8CC8 11 B7 89     	ld de,Amadeus_BOX
 551  8CCB CD 9F 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCE CD F4 93     	call Limpiamos_bandeja_DRAW
 553  8CD1
 554  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD1
 556  8CD1 06 3C        	ld b,60
 557  8CD3 CD 71 9D     2 call Amadeus_a_izquierda
 558  8CD6 10 FB        	djnz 2B
 559  8CD8
 560  8CD8 CD A9 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDB
 562  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDB
 564  8CDB CD 04 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDE
 566  8CDE CD 88 91     	call Inicia_Shield
 567  8CE1
 568  8CE1 2A 5F 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE4 22 58 8C     	ld (Techo_Scanlines_album),hl
 570  8CE7
 571  8CE7 2A 43 8C     	ld hl,(Album_de_borrado)
 572  8CEA 22 5F 8C     	ld (Scanlines_album_SP),hl
 573  8CED
 574  8CED 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF0 22 61 8C     	ld (India_SP),hl
 576  8CF3
 577  8CF3 21 65 8C     	ld hl,Ctrl_3
 578  8CF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF8 CB D6        	set 2,(hl)
 580  8CFA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFC
 582  8CFC FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFD
 584  8CFD 76           	halt
 585  8CFE
 586  8CFE              ; ------------------------------------
 587  8CFE
 588  8CFE              Main
 589  8CFE              ;
 590  8CFE              ; 07/11/24.
 591  8CFE
 592  8CFE              ; Gestión de disparos.
 593  8CFE
 594  8CFE CD D4 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D01 CD 64 9F     	call Motor_de_disparos_entidades
 596  8D04 CD F9 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D07
 598  8D07              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D07              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D07              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D07
 602  8D07 CD 96 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0A
 604  8D0A              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0A
 606  8D0A 21 83 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0D 35           	dec (hl)
 608  8D0E CC 15 8E     	call z,Autoriza_disparo_de_entidades
 609  8D11
 610  8D11 2A 7F 8C     	ld hl,(Clock_next_entity)
 611  8D14 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D18 A7           	and a
 613  8D19 ED 42        	sbc hl,bc
 614  8D1B 20 16        	jr nz,1F
 615  8D1D
 616  8D1D              ; GESTIÓN DE ENTIDADES.
 617  8D1D
 618  8D1D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1D              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1D
 621  8D1D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1D
 625  8D1D 21 37 8C     	ld hl,Numero_parcial_de_entidades
 626  8D20 46           	ld b,(hl)
 627  8D21 3A 38 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D24 B8           	cp b
 629  8D25 28 0C        	jr z,1F
 630  8D27 30 0A        	jr nc,1F
 631  8D29
 632  8D29              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D29
 634  8D29 3C           	inc a
 635  8D2A 32 38 8C     	ld (Entidades_en_curso),a
 636  8D2D
 637  8D2D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2D
 639  8D2D CD FF 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D30 CD 1B 8F     	call Define_Clock_next_entity
 641  8D33
 642  8D33 3A 38 8C     1 ld a,(Entidades_en_curso)
 643  8D36 A7           	and a
 644  8D37 CA C0 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3A 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3B
 647  8D3B              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3B
 649  8D3B              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3B              ;
 651  8D3B              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3B
 653  8D3B 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3E 22 61 8C     	ld (India_SP),hl
 655  8D41
 656  8D41 21 65 8C     	ld hl,Ctrl_3
 657  8D44 CB D6        	set 2,(hl)
 658  8D46 CD A9 8E     	call Change
 659  8D49
 660  8D49 C5           2 push bc 												; Nº de entidades en curso.
 661  8D4A
 662  8D4A DD 2A 2E 8C  	ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 663  8D4E              ;	ld de,(Scanlines_album_SP)
 664  8D4E
 665  8D4E              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 666  8D4E
 667  8D4E              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 668  8D4E              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 669  8D4E
 670  8D4E 3A 6C 8C     	ld a,(Impacto2)
 671  8D51 CB 5F        	bit 3,a
 672  8D53 C4 90 A1     	call nz,Compara_con_coordenadas_de_disparo
 673  8D56
 674  8D56 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 675  8D59 CB 4F        	bit 1,a
 676  8D5B C4 65 92     	call nz,Genera_explosion
 677  8D5E 20 43        	jr nz,Gestiona_siguiente_entidad
 678  8D60
 679  8D60 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 680  8D63 A7           	and a
 681  8D64 28 0C        	jr z,3F
 682  8D66
 683  8D66              ; IMPACTO en entidad por colisión con Amadeus.
 684  8D66
 685  8D66              ; 5/7/24
 686  8D66              ; Nota importante:
 687  8D66              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 688  8D66              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 689  8D66              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 690  8D66
 691  8D66 3A BB 89     	ld a,(Impacto_Amadeus)
 692  8D69 A7           	and a
 693  8D6A C4 65 92     	call nz,Genera_explosion
 694  8D6D 20 34        	jr nz,Gestiona_siguiente_entidad
 695  8D6F
 696  8D6F              ; Falsa colisión !!!
 697  8D6F
 698  8D6F 32 F2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 699  8D72
 700  8D72              ; -------------------------------------------
 701  8D72
 702  8D72 CD 5F 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 703  8D75 CD 81 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 704  8D78 CD 4F 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 705  8D7B
 706  8D7B DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 707  8D7D DD 2A F3 8B  	ld ix,(Puntero_de_impresion)
 708  8D81 CD 10 95     	call Genera_datos_de_impresion
 709  8D84 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 710  8D86
 711  8D86 CD 17 94     	call Decrementa_Contador_de_mov_masticados
 712  8D89
 713  8D89              ; -------------------------------------------
 714  8D89
 715  8D89              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 716  8D89
 717  8D89 2A F3 8B     	ld hl,(Puntero_de_impresion)
 718  8D8C CD E4 94     	call Genera_coordenadas
 719  8D8F
 720  8D8F ED 4B EF 8B  	ld bc,(Coordenada_X)
 721  8D93
 722  8D93 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 723  8D96 DD 70 02     	ld (ix+2),b
 724  8D99
 725  8D99              ; TODO: Generamos disparo ???
 726  8D99
 727  8D99 3A 57 8C     	ld a,(Permiso_de_disparo_Entidades)
 728  8D9C A7           	and a
 729  8D9D C4 2A 8E     	call nz,Entidad_genera_disparo_si_procede
 730  8DA0
 731  8DA0 CD 14 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 732  8DA3
 733  8DA3              Gestiona_siguiente_entidad
 734  8DA3
 735  8DA3 CD 68 91     	call Incrementa_punteros_de_cajas
 736  8DA6
 737  8DA6 C1           	pop bc
 738  8DA7 10 A0        	djnz 2B
 739  8DA9
 740  8DA9              ; Hemos gestionado todas las entidades.
 741  8DA9              ; ----- ----- -----
 742  8DA9
 743  8DA9 CD 73 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 744  8DAC CD 8A 8F     	call Ordena_tabla_de_impresion
 745  8DAF CD 04 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 746  8DB2
 747  8DB2 CD 30 8F     	call Borra_diferencia
 748  8DB5
 749  8DB5 3A 65 8C     	ld a,(Ctrl_3)
 750  8DB8 CB 5F        	bit 3,a
 751  8DBA 20 04        	jr nz,Gestion_de_Amadeus
 752  8DBC
 753  8DBC EB           	ex de,hl
 754  8DBD 71           	ld (hl),c
 755  8DBE 2C           	inc l
 756  8DBF 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 757  8DC0
 758  8DC0              ;! GESTIONA AMADEUS !!!!!!!!!!
 759  8DC0
 760  8DC0              Gestion_de_Amadeus
 761  8DC0
 762  8DC0 21 65 8C     	ld hl,Ctrl_3
 763  8DC3 CB 76        	bit 6,(hl)
 764  8DC5 28 13        	jr z,Amadeus_vivo
 765  8DC7
 766  8DC7              ; Amadeus ha sido destruido.
 767  8DC7              ; Decrementa (Temp_new_live).
 768  8DC7
 769  8DC7 21 79 8C     	ld hl,Temp_new_live
 770  8DCA 35           	dec (hl)
 771  8DCB 20 26        	jr nz,End_frame
 772  8DCD
 773  8DCD              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 774  8DCD
 775  8DCD 21 92 8C     	ld hl,Lives
 776  8DD0 35           	dec (hl)
 777  8DD1
 778  8DD1              ;! Fin del juego
 779  8DD1
 780  8DD1 F3           	di
 781  8DD2 28 FE        	jr z,$
 782  8DD4 FB           	ei
 783  8DD5
 784  8DD5              ; Nueva nave.
 785  8DD5
 786  8DD5 CD 47 8E     	call Reinicia_Amadeus
 787  8DD8 18 19        	jr End_frame
 788  8DDA
 789  8DDA              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 790  8DDA
 791  8DDA              Amadeus_vivo
 792  8DDA
 793  8DDA 3A BB 89     	ld a,(Impacto_Amadeus)
 794  8DDD A7           	and a
 795  8DDE C4 95 92     	call nz, Genera_explosion_Amadeus
 796  8DE1 20 10        	jr nz, End_frame
 797  8DE3
 798  8DE3 CD 42 92     	call Teclado
 799  8DE6 21 65 8C     	ld hl,Ctrl_3
 800  8DE9
 801  8DE9 CB 6E        	bit 5,(hl)
 802  8DEB 28 06        	jr z,End_frame
 803  8DED
 804  8DED              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 805  8DED
 806  8DED CD C4 8E     	call Change_Amadeus
 807  8DF0 CD A9 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 808  8DF3
 809  8DF3              End_frame
 810  8DF3
 811  8DF3              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 812  8DF3              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 813  8DF3
 814  8DF3 CD BB A0     	call Genera_datos_de_impresion_disparos_Entidades
 815  8DF6 CD 7F A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 816  8DF9 CD D5 A1     	call Calcula_bytes_pintado_disparos
 817  8DFC CD E2 A1     	call Limpia_album_de_pintado_disparos_entidades
 818  8DFF
 819  8DFF              ; ------------ ------------- --------------
 820  8DFF
 821  8DFF 2A 43 8C     	ld hl,(Album_de_borrado)
 822  8E02 22 5F 8C     	ld (Scanlines_album_SP),hl
 823  8E05
 824  8E05 21 65 8C     	ld hl,Ctrl_3
 825  8E08 CB C6        	set 0,(hl) 											; Indica Frame completo.
 826  8E0A CB 9E        	res 3,(hl)
 827  8E0C CB A6        	res 4,(hl)
 828  8E0E
 829  8E0E AF           	xor a
 830  8E0F D3 FE        	out ($fe),a
 831  8E11
 832  8E11 76           	halt
 833  8E12
 834  8E12              ; ----------------------------------------
 835  8E12
 836  8E12              ;	ld a,(Ctrl_1) 										; Existe Loop?
 837  8E12              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 838  8E12 CA FE 8C     	jp z,Main
 839  8E15
 840  8E15              ;------------------------------------------
 841  8E15              ;
 842  8E15              ;	07/11/24
 843  8E15
 844  8E15              Autoriza_disparo_de_entidades
 845  8E15
 846  8E15 3E 01        	ld a,1
 847  8E17 32 57 8C     	ld (Permiso_de_disparo_Entidades),a
 848  8E1A
 849  8E1A 3A 82 8C     	ld a,(Repone_CLOCK_disparos)
 850  8E1D FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 851  8E1F 38 02        	jr c,1F
 852  8E21
 853  8E21              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 854  8E21              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 855  8E21              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 856  8E21
 857  8E21 D6 03        	sub 3
 858  8E23
 859  8E23 32 82 8C     1 ld (Repone_CLOCK_disparos),a
 860  8E26 32 83 8C     	ld (CLOCK_disparos_de_entidades),a
 861  8E29
 862  8E29 C9           	ret
 863  8E2A
 864  8E2A              ;------------------------------------------
 865  8E2A              ;
 866  8E2A              ;	14/09/24
 867  8E2A              ;
 868  8E2A              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 869  8E2A
 870  8E2A              Entidad_genera_disparo_si_procede
 871  8E2A
 872  8E2A 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 873  8E2D CB 06        	rlc (hl)
 874  8E2F
 875  8E2F DC 0B A1     	call c,Genera_disparo_de_entidad_maldosa
 876  8E32
 877  8E32 C9           	ret
 878  8E33
 879  8E33              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 880  8E33              ;
 881  8E33              ;	30/09/24
 882  8E33
 883  8E33              Actuaiza_sp_de_disparos_de_entidades
 884  8E33
 885  8E33 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 886  8E36 23           	inc hl
 887  8E37 22 7C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 888  8E3A
 889  8E3A 11 FD 88     	ld de,Numeros_aleatorios+7
 890  8E3D 7B           	ld a,e
 891  8E3E 95           	sub l
 892  8E3F C0           	ret nz
 893  8E40
 894  8E40 21 F6 88     1 ld hl,Numeros_aleatorios
 895  8E43 22 7C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 896  8E46 C9           	ret
 897  8E47
 898  8E47              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 899  8E47              ;
 900  8E47              ;	24/07/24
 901  8E47
 902  8E47              Reinicia_Amadeus
 903  8E47
 904  8E47              ;	Reinicia posición y estado.
 905  8E47
 906  8E47 21 CF 50     	ld hl,$50cf
 907  8E4A 22 BC 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 908  8E4D 21 CC DC     	ld hl,$dccc
 909  8E50 22 BE 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 910  8E53 21 3D 00     	ld hl,$003d
 911  8E56 22 C0 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 912  8E59
 913  8E59              ;	limpiamos el álbum de borrado.
 914  8E59
 915  8E59 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
 916  8E5C
 917  8E5C AF           	xor a
 918  8E5D 77           	ld (hl),a
 919  8E5E
 920  8E5E E5           	push hl
 921  8E5F D1           	pop de
 922  8E60 13           	inc de
 923  8E61
 924  8E61 01 23 00     	ld bc,35
 925  8E64 ED B0        	ldir
 926  8E66
 927  8E66 CD A9 90     	call Genera_datos_de_impresion_Amadeus
 928  8E69
 929  8E69              ;	Reinicia temporizaciones.
 930  8E69
 931  8E69 CD 88 91     	call Inicia_Shield
 932  8E6C
 933  8E6C 3E 5A        	ld a,90
 934  8E6E 32 8F 8C     	ld (Shield),a
 935  8E71
 936  8E71 3E 64        	ld a,100
 937  8E73 32 79 8C     	ld (Temp_new_live),a
 938  8E76
 939  8E76              ; 	Restauramos el FLAG: Amadeus vivo.
 940  8E76
 941  8E76 21 65 8C     	ld hl,Ctrl_3
 942  8E79 CB B6        	res 6,(hl)
 943  8E7B
 944  8E7B              ;	Fuerza la impresión de la nave en el siguiente frame.
 945  8E7B
 946  8E7B 21 65 8C      	ld hl,Ctrl_3
 947  8E7E CB EE        	set 5,(hl)
 948  8E80
 949  8E80 C9           	ret
 950  8E81
 951  8E81              ; --------------------------------------------------------------------------------------------------------------
 952  8E81              ;
 953  8E81              ;	23/11/24
 954  8E81
 955  8E81              Ajusta_velocidad_entidad
 956  8E81
 957  8E81 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 958  8E84 A7           	and a
 959  8E85 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 960  8E86              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 961  8E86              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 962  8E86
 963  8E86
 964  8E86              ; Incrementa (Contador_de_vueltas)x2.
 965  8E86              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 966  8E86
 967  8E86              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 968  8E86              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 969  8E86              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 970  8E86              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 971  8E86              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 972  8E86
 973  8E86
 974  8E86 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
 975  8E88 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
 976  8E8B E6 10        	and $10
 977  8E8D C8           	ret z
 978  8E8E
 979  8E8E              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 980  8E8E
 981  8E8E DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
 982  8E91 CB 2F        	sra a
 983  8E93 CB 2F        	sra a
 984  8E95 DD 77 0B     	ld (ix+11),a
 985  8E98
 986  8E98 DD 6E 07     	ld l,(ix+7)
 987  8E9B DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
 988  8E9E
 989  8E9E              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
 990  8E9E 23           	inc hl
 991  8E9F 23           	inc hl
 992  8EA0 23           	inc hl
 993  8EA1 23           	inc hl
 994  8EA2              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
 995  8EA2
 996  8EA2 DD 75 07     	ld (ix+7),l
 997  8EA5 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
 998  8EA8
 999  8EA8 C9           	ret
1000  8EA9
1001  8EA9              ; --------------------------------------------------------------------------------------------------------------
1002  8EA9              ;
1003  8EA9              ;	25/08/24
1004  8EA9
1005  8EA9              Change
1006  8EA9
1007  8EA9 3A 5C 8C     	ld a,(Switch)
1008  8EAC EE 01        	xor 1
1009  8EAE 32 5C 8C     	ld (Switch),a
1010  8EB1 2A 41 8C     	ld hl,(Album_de_pintado)
1011  8EB4 ED 5B 43 8C  	ld de,(Album_de_borrado)
1012  8EB8 EB           	ex de,hl
1013  8EB9 22 41 8C     	ld (Album_de_pintado),hl
1014  8EBC 22 5F 8C     	ld (Scanlines_album_SP),hl
1015  8EBF ED 53 43 8C  	ld (Album_de_borrado),de
1016  8EC3 C9           	ret
1017  8EC4
1018  8EC4              Change_Amadeus
1019  8EC4
1020  8EC4 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1021  8EC7 ED 5B 47 8C  	ld de,(Album_de_borrado_Amadeus)
1022  8ECB EB           	ex de,hl
1023  8ECC 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1024  8ECF ED 53 47 8C  	ld (Album_de_borrado_Amadeus),de
1025  8ED3 C9           	ret
1026  8ED4
1027  8ED4              Change_Disparos
1028  8ED4
1029  8ED4              ; Álbumes de Amadeus.
1030  8ED4
1031  8ED4 2A 49 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1032  8ED7 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1033  8EDB EB           	ex de,hl
1034  8EDC 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1035  8EDF ED 53 4B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1036  8EE3 CD CA A1     	call Limpia_album_de_pintado_disparos_Amadeus
1037  8EE6
1038  8EE6              ; Álbumes de entidades.
1039  8EE6
1040  8EE6 2A 4D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1041  8EE9 ED 5B 4F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1042  8EED EB           	ex de,hl
1043  8EEE 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1044  8EF1 ED 53 4F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1045  8EF5 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1046  8EF8
1047  8EF8 3A 53 8C     	ld a,(Num_de_bytes_album_de_disparos)
1048  8EFB 32 54 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1049  8EFE
1050  8EFE C9           	ret
1051  8EFF
1052  8EFF              ; ------------------------------------
1053  8EFF              ;
1054  8EFF              ; 1/05/24
1055  8EFF
1056  8EFF              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1057  8EFF              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1058  8EFF
1059  8EFF              ;	DESTRUYE: HL,DE,A
1060  8EFF              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1061  8EFF
1062  8EFF              ;	Variables implicadas: (RND_SP).
1063  8EFF
1064  8EFF              Extrae_numero_aleatorio_y_avanza
1065  8EFF
1066  8EFF 21 00 89     	ld hl,Tabla_de_pintado
1067  8F02 EB           	ex de,hl
1068  8F03 2A 7A 8C     	ld hl,(RND_SP)
1069  8F06 EB           	ex de,hl
1070  8F07 A7           	and a
1071  8F08 ED 52        	sbc hl,de
1072  8F0A
1073  8F0A 2A 7A 8C     	ld hl,(RND_SP)
1074  8F0D 20 06        	jr nz,1F
1075  8F0F
1076  8F0F              ; Sitúa HL al principio de la tabla de nº aleatorios.
1077  8F0F
1078  8F0F 21 F6 88     	ld hl,Numeros_aleatorios
1079  8F12 22 7A 8C     	ld (RND_SP),HL
1080  8F15
1081  8F15              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1082  8F15
1083  8F15 7E           1 ld a,(hl)
1084  8F16 23           	inc hl
1085  8F17 22 7A 8C     	ld (RND_SP),hl
1086  8F1A C9           	ret
1087  8F1B
1088  8F1B              ; ------------------------------------
1089  8F1B              ;
1090  8F1B              ; 1/05/24
1091  8F1B
1092  8F1B              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1093  8F1B              ; (1 a 4 segundos).
1094  8F1B              ; Actualizamos (Clock_next_entity) con A.
1095  8F1B
1096  8F1B              ;	DESTRUYE: A y B.
1097  8F1B              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1098  8F1B              ;			 Actualiza (Clock_next_entity) con A.
1099  8F1B
1100  8F1B              ;	Variables implicadas: (Clock_next_entity).
1101  8F1B
1102  8F1B              ; Notas:
1103  8F1B
1104  8F1B              ; 	$32 1 seg.
1105  8F1B              ; 	$64 2 seg.
1106  8F1B              ; 	$96 3 seg.
1107  8F1B              ; 	$c8 4 seg.
1108  8F1B              ; 	$fa 5 seg.
1109  8F1B
1110  8F1B              ; $ffff 1310,7 seg, 22 minutos.
1111  8F1B
1112  8F1B              ;	$0100  5 seg. aproximadamente.
1113  8F1B              ;	$0200 10 seg. aproximadamente.
1114  8F1B              ;	$0300 15 seg. aproximadamente.
1115  8F1B              ;	$0400 20 seg. aproximadamente.
1116  8F1B              ;	$0500 25 seg. aproximadamente.
1117  8F1B              ;	$0600 30 seg. aproximadamente.
1118  8F1B
1119  8F1B              Define_Clock_next_entity
1120  8F1B
1121  8F1B FE 34        	cp $34
1122  8F1D 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1123  8F1F
1124  8F1F              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1125  8F1F
1126  8F1F 4F           3 ld c,a
1127  8F20 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1128  8F22 2A 78 5C     	ld hl,(FRAMES)
1129  8F25 A7           	and a
1130  8F26 ED 4A        	adc hl,bc
1131  8F28 22 7F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1132  8F2B C9           	ret
1133  8F2C
1134  8F2C 3E 34        1 ld a,$34
1135  8F2E 18 EF        	jr 3B
1136  8F30
1137  8F30              ; ------------------------------------
1138  8F30              ;
1139  8F30              ; 18/03/24
1140  8F30
1141  8F30              Borra_diferencia
1142  8F30
1143  8F30 ED 4B 5F 8C  	ld bc,(Scanlines_album_SP)
1144  8F34
1145  8F34 3A 5C 8C     	ld a,(Switch)
1146  8F37 A7           	and a
1147  8F38 28 08        	jr z,2F
1148  8F3A
1149  8F3A 2A 5A 8C     	ld hl,(Techo_Scanlines_album_2)
1150  8F3D 11 5A 8C     	ld de,Techo_Scanlines_album_2
1151  8F40 18 06        	jr 3F
1152  8F42
1153  8F42 2A 58 8C     2 ld hl,(Techo_Scanlines_album)
1154  8F45 11 58 8C     	ld de,Techo_Scanlines_album
1155  8F48
1156  8F48              ; Diferencia.
1157  8F48
1158  8F48 ED 42        3 sbc hl,bc
1159  8F4A
1160  8F4A C8           	ret z
1161  8F4B D8           	ret c
1162  8F4C
1163  8F4C              ; Nuevo techo, (más bajo que el anterior).
1164  8F4C              ; Fijamos nuevo techo y borramos bytes sobrantes.
1165  8F4C
1166  8F4C EB           	ex de,hl
1167  8F4D
1168  8F4D 71           	ld (hl),c
1169  8F4E 2C           	inc l
1170  8F4F 70           	ld (hl),b
1171  8F50
1172  8F50 AF           	xor a
1173  8F51 43           	ld b,e
1174  8F52
1175  8F52 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1176  8F55
1177  8F55 77           1 ld (hl),a
1178  8F56 23           	inc hl
1179  8F57 10 FC        	djnz 1B
1180  8F59
1181  8F59              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1182  8F59
1183  8F59 21 65 8C     	ld hl,Ctrl_3
1184  8F5C CB DE        	set 3,(hl)
1185  8F5E
1186  8F5E C9           	ret
1187  8F5F
1188  8F5F              ; --------------------------------------------------------------------------------------------------------------
1189  8F5F              ;
1190  8F5F              ;	23/11/24
1191  8F5F              ;
1192  8F5F              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1193  8F5F
1194  8F5F              Entidad_a_Tabla_de_pintado
1195  8F5F
1196  8F5F              ; Almacena la Coordenada Y de la entidad en curso.
1197  8F5F
1198  8F5F              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1199  8F5F
1200  8F5F DD 7E 02     	ld a,(ix+2)
1201  8F62 2A 61 8C     	ld hl,(India_SP)
1202  8F65 77           	ld (hl),a
1203  8F66 2C           	inc l
1204  8F67
1205  8F67              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1206  8F67
1207  8F67 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
1208  8F6B
1209  8F6B 73           	ld (hl),e
1210  8F6C 2C           	inc l
1211  8F6D 72           	ld (hl),d
1212  8F6E 2C           	inc l
1213  8F6F
1214  8F6F 22 61 8C     	ld (India_SP),hl
1215  8F72
1216  8F72 C9           	ret
1217  8F73
1218  8F73              ; --------------------------------------------------------------------------------------------------------------
1219  8F73              ;
1220  8F73              ;	27/03/24
1221  8F73              ;
1222  8F73
1223  8F73              Inicializa_India_y_limpia_Tabla_de_impresion
1224  8F73
1225  8F73 2A 61 8C     	ld hl,(India_SP)
1226  8F76 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1227  8F79
1228  8F79 79           	ld a,c
1229  8F7A 95           	sub l
1230  8F7B 28 06        	jr z,2F
1231  8F7D 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1232  8F7E              ;														; _ y pasamos a inicializar (India_SP).
1233  8F7E AF           	xor a
1234  8F7F
1235  8F7F 77           1 ld (hl),a
1236  8F80 2C           	inc l
1237  8F81 10 FC        	djnz 1B												; Limpia Tabla.
1238  8F83
1239  8F83 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1240  8F86 22 61 8C     	ld (India_SP),hl
1241  8F89
1242  8F89 C9           	ret
1243  8F8A
1244  8F8A              ; --------------------------------------------------------------------------------------------------------------
1245  8F8A              ;
1246  8F8A              ;	31/3/24
1247  8F8A
1248  8F8A              Ordena_tabla_de_impresion
1249  8F8A
1250  8F8A              ; 5794 T/states.
1251  8F8A              ; 6278 T/states.
1252  8F8A              ; 5310 T/states.
1253  8F8A
1254  8F8A              ; Inicializamos punteros (India_SP) e (India_2_SP).
1255  8F8A              ; Inicializamos contador de comparaciones, [C].
1256  8F8A              ; Cargamos los registros A y B para efectuar comparación.
1257  8F8A
1258  8F8A FD 2E 00     	ld iyl,0
1259  8F8D
1260  8F8D 3A 38 8C     	ld a,(Entidades_en_curso)
1261  8F90 FE 04        	cp 4 	;	4
1262  8F92 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1263  8F93
1264  8F93 3D           	dec a
1265  8F94 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1266  8F95 51           	ld d,c 										; Copia de respaldo.
1267  8F96
1268  8F96 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1269  8F97
1270  8F97 21 03 89     	ld hl,Tabla_de_pintado+3
1271  8F9A 46           	ld b,(hl)
1272  8F9B 22 63 8C     	ld (India_2_SP),hl
1273  8F9E
1274  8F9E B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1275  8F9F DC C7 8F     	call c, Avanza_India_2_SP
1276  8FA2 CC C7 8F     	call z, Avanza_India_2_SP
1277  8FA5
1278  8FA5 FD 2D        	dec iyl
1279  8FA7 28 18        	jr z,2F
1280  8FA9
1281  8FA9
1282  8FA9              ; --------------------------------------------------------------------------------------------------------------
1283  8FA9              ;
1284  8FA9              ;	7/4/24
1285  8FA9
1286  8FA9              Trueque
1287  8FA9
1288  8FA9              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1289  8FA9              ;  			A contiene en nº de fila de (India_SP).
1290  8FA9              ;			HL contiene (India_2_SP).
1291  8FA9
1292  8FA9 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1293  8FAA E5           	push hl										; Preservo (India_2_SP).
1294  8FAB
1295  8FAB ED 5B 61 8C  	ld de,(India_SP)
1296  8FAF EB           	ex de,hl
1297  8FB0 70           	ld (hl),b
1298  8FB1 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1299  8FB2
1300  8FB2 CD F3 8F     	call Intercambia_1_byte
1301  8FB5 CD F3 8F     	call Intercambia_1_byte
1302  8FB8
1303  8FB8
1304  8FB8              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1305  8FB8              ; Recuperamos (India_2_SP) en HL.
1306  8FB8
1307  8FB8 2A 61 8C     	ld hl,(India_SP)
1308  8FBB 7E           	ld a,(hl)
1309  8FBC
1310  8FBC E1           	pop hl
1311  8FBD D1           	pop de
1312  8FBE
1313  8FBE              ; --------------------------------------------------------------------------------------------------------------
1314  8FBE
1315  8FBE CD C7 8F     	call Avanza_India_2_SP
1316  8FC1
1317  8FC1 14           2 inc d
1318  8FC2 15           	dec d
1319  8FC3 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1320  8FC4 18 D8        	jr 1B
1321  8FC6
1322  8FC6 C9           	ret
1323  8FC7
1324  8FC7              ; ----- ----- ----- ----- -----
1325  8FC7
1326  8FC7              Avanza_India_2_SP
1327  8FC7
1328  8FC7 0D           	dec c
1329  8FC8 28 0A        	jr z,Avanza_punteros_indios
1330  8FCA
1331  8FCA FD 2C        	inc iyl
1332  8FCC
1333  8FCC 2C           	inc l
1334  8FCD 2C           	inc l
1335  8FCE 2C           	inc l
1336  8FCF
1337  8FCF 46           	ld b,(hl)
1338  8FD0 22 63 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1339  8FD3
1340  8FD3 C9           	ret
1341  8FD4
1342  8FD4              ; ----- ----- ----- ----- -----
1343  8FD4
1344  8FD4              Avanza_punteros_indios
1345  8FD4
1346  8FD4 15           	dec d
1347  8FD5 28 15        	jr z,Prepara_salida
1348  8FD7
1349  8FD7 4A           	ld c,d
1350  8FD8
1351  8FD8 2A 61 8C     	ld hl,(India_SP)
1352  8FDB 2C           	inc l
1353  8FDC 2C           	inc l
1354  8FDD 2C           	inc l
1355  8FDE 7E           	ld a,(hl)
1356  8FDF 22 61 8C     	ld (India_SP),hl
1357  8FE2
1358  8FE2 2C           	inc l
1359  8FE3 2C           	inc l
1360  8FE4 2C           	inc l
1361  8FE5 46           	ld b,(hl)
1362  8FE6 22 63 8C     	ld (India_2_SP),hl
1363  8FE9
1364  8FE9 FD 2C        	inc iyl
1365  8FEB
1366  8FEB C9           	ret
1367  8FEC
1368  8FEC              Prepara_salida
1369  8FEC
1370  8FEC 21 00 89     	ld hl,Tabla_de_pintado
1371  8FEF 22 61 8C     	ld (India_SP),hl
1372  8FF2 C9           	ret
1373  8FF3
1374  8FF3
1375  8FF3 2C           Intercambia_1_byte inc l
1376  8FF4 1C           	inc e
1377  8FF5 46           	ld b,(hl)
1378  8FF6 1A           	ld a,(de)
1379  8FF7 EB           	ex de,hl
1380  8FF8 70           	ld (hl),b
1381  8FF9 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1382  8FFA C9           	ret
1383  8FFB
1384  8FFB              ; -----------------------------------------------------------------------------------
1385  8FFB              ;
1386  8FFB              ;	20/01/24
1387  8FFB              ;
1388  8FFB              ;
1389  8FFB
1390  8FFB              Construye_movimientos_masticados_entidad
1391  8FFB
1392  8FFB 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1393  8FFE E5           	push hl
1394  8FFF CD 42 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1395  9002              ;															; _ el (Contador_de_mov_masticados).
1396  9002 CD 20 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1397  9005              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1398  9005 CD F7 99     	call Recompone_posicion_inicio
1399  9008
1400  9008 CD 27 97     1 call Draw
1401  900B CD 27 90     	call Guarda_movimiento_masticado
1402  900E
1403  900E CD A4 9D     	call Movimiento
1404  9011
1405  9011 3A 65 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1406  9014 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1407  9016 28 F0        	jr z,1B
1408  9018
1409  9018              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1410  9018              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1411  9018
1412  9018 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1413  9019 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1414  901C
1415  901C              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1416  901C
1417  901C CD 08 9F     	call Situa_en_contador_general_de_mov_masticados
1418  901F
1419  901F              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1420  901F              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1421  901F
1422  901F ED 4B F7 8B  	ld bc,(Contador_de_mov_masticados)
1423  9023
1424  9023 71           	ld (hl),c
1425  9024 23           	inc hl
1426  9025 70           	ld (hl),b
1427  9026
1428  9026 C9           	ret
1429  9027
1430  9027              ; -----------------------------------------------------------------------------------
1431  9027              ;
1432  9027              ;	28/12/23
1433  9027              ;
1434  9027              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1435  9027              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1436  9027
1437  9027              Guarda_movimiento_masticado
1438  9027
1439  9027 ED 73 3D 8C  	ld (Stack),sp
1440  902B ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1441  902F
1442  902F DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1443  9031 FD E5            push iy 												; Pushea Puntero_objeto.
1444  9033
1445  9033 ED 7B 3D 8C      ld sp,(Stack)
1446  9037
1447  9037 2A F7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1448  903A 23           	inc hl
1449  903B 22 F7 8B     	ld (Contador_de_mov_masticados),hl
1450  903E
1451  903E CD 42 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1452  9041              ;															; _ el (Contador_de_mov_masticados).
1453  9041 C9               ret
1454  9042
1455  9042              ; --------------------------------------------------------------------------------------------------------------
1456  9042              ;
1457  9042              ;	12/1/24
1458  9042              ;
1459  9042              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1460  9042
1461  9042              Actualiza_Puntero_de_almacen_de_mov_masticados
1462  9042
1463  9042 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1464  9045 01 04 00     	ld bc,4
1465  9048 A7           	and a
1466  9049 ED 4A        	adc hl,bc
1467  904B 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1468  904E C9           	ret
1469  904F
1470  904F              ; ------------------------------------------
1471  904F              ;
1472  904F              ;	23/11/24
1473  904F              ;
1474  904F              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1475  904F
1476  904F
1477  904F              Obtenemos_puntero_de_impresion
1478  904F
1479  904F DD 6E 07     	ld l,(ix+7)
1480  9052 DD 66 08     	ld h,(ix+8)
1481  9055
1482  9055              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1483  9055
1484  9055 ED 73 3D 8C  	ld (Stack),sp
1485  9059 F9           	ld sp,hl
1486  905A
1487  905A AF           	xor a
1488  905B 67           	ld h,a
1489  905C 6C           	ld l,h															; ld hl,"0"
1490  905D
1491  905D D1           	pop de															; (Puntero_objeto) en DE.
1492  905E C1           	pop bc
1493  905F
1494  905F              ; 	Almacena (Puntero_de_impresion) en caja.
1495  905F
1496  905F DD 71 05     	ld (ix+5),c
1497  9062 DD 70 06     	ld (ix+6),b
1498  9065
1499  9065 ED 43 F3 8B  	ld (Puntero_de_impresion),bc
1500  9069
1501  9069              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1502  9069
1503  9069 39           	add hl,sp
1504  906A DD 75 07     	ld (ix+7),l
1505  906D DD 74 08     	ld (ix+8),h
1506  9070
1507  9070 C1           	pop bc
1508  9071
1509  9071 79           	ld a,c
1510  9072 80           	add b															; Comprueba si ya no hay datos en el almacén.
1511  9073
1512  9073 CC 25 94     	call z,Reinicia_entidad_maliciosa
1513  9076
1514  9076 ED 7B 3D 8C  	ld sp,(Stack)
1515  907A
1516  907A C9           	ret
1517  907B
1518  907B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1519  907B              ;
1520  907B              ;	22/7/24
1521  907B
1522  907B              Cargamos_registros_con_explosion
1523  907B
1524  907B
1525  907B 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1526  907E CD 1A 91     	call Extrae_address
1527  9081
1528  9081 5D           	ld e,l
1529  9082 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1530  9083
1531  9083 DD 2A F3 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1532  9087
1533  9087 C9           	ret
1534  9088
1535  9088
1536  9088              Cargamos_registros_con_explosion_Amadeus
1537  9088
1538  9088 2A BE 89     	ld hl,(Pamm_Amadeus)
1539  908B CD 1A 91     	call Extrae_address
1540  908E
1541  908E 5D           	ld e,l
1542  908F 54           	ld d,h
1543  9090
1544  9090 DD 2A BC 89  	ld ix,(p.imp.amadeus)
1545  9094
1546  9094 C9           	ret
1547  9095
1548  9095              ; --------------------------------------------------------------------------------------------------------------
1549  9095              ;
1550  9095              ;	17/06/24
1551  9095              ;
1552  9095              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1553  9095              ;
1554  9095              ;	IX contiene el puntero de impresión.
1555  9095              ;	DE contiene (Puntero_objeto).
1556  9095
1557  9095
1558  9095              Cargamos_registros_con_mov_masticado_Amadeus
1559  9095
1560  9095 ED 73 3D 8C  	ld (Stack),sp
1561  9099 ED 7B BE 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1562  909D D1           	pop de 															; DE contiene Puntero_objeto
1563  909E DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1564  90A0 DD 22 BC 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1565  90A4 ED 7B 3D 8C  	ld sp,(Stack)
1566  90A8 C9           	ret
1567  90A9
1568  90A9              ; ---------------------------------------------------------------------------------------------------------------------
1569  90A9              ;
1570  90A9              ;	18/6/24
1571  90A9              ;
1572  90A9              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1573  90A9
1574  90A9              Genera_datos_de_impresion_Amadeus
1575  90A9
1576  90A9 3A BB 89     	ld a,(Impacto_Amadeus)
1577  90AC A7           	and a
1578  90AD 20 03        	jr nz,1F
1579  90AF
1580  90AF              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1581  90AF              ; _apuntando a la correspondiente explosión.
1582  90AF
1583  90AF CD 95 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1584  90B2
1585  90B2 DD 7D        1 ld a,ixl
1586  90B4 E6 1F        	and $1f
1587  90B6 32 B8 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1588  90B9
1589  90B9 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1590  90BC E5           	push hl
1591  90BD
1592  90BD 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1593  90C0 22 5F 8C     	ld (Scanlines_album_SP),hl
1594  90C3
1595  90C3 CD 10 95     	call Genera_datos_de_impresion
1596  90C6
1597  90C6 E1           	pop hl
1598  90C7 22 5F 8C     	ld (Scanlines_album_SP),hl
1599  90CA
1600  90CA C9           	ret
1601  90CB
1602  90CB              ; ---------------------------------------------------------------------------------------------------------------------
1603  90CB              ;
1604  90CB              ;	13/03/24
1605  90CB              ;
1606  90CB              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1607  90CB
1608  90CB              Inicia_albumes_de_lineas
1609  90CB
1610  90CB 21 00 80     	ld hl,Scanlines_album
1611  90CE 22 41 8C     	ld (Album_de_pintado),hl
1612  90D1 22 5F 8C     	ld (Scanlines_album_SP),hl
1613  90D4
1614  90D4 21 1A 81     	ld hl,Scanlines_album_2
1615  90D7 22 43 8C     	ld (Album_de_borrado),hl
1616  90DA
1617  90DA C9           	ret
1618  90DB
1619  90DB              Inicia_albumes_de_lineas_Amadeus
1620  90DB
1621  90DB 21 34 82     	ld hl,Amadeus_scanlines_album
1622  90DE 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1623  90E1 21 58 82     	ld hl,Amadeus_scanlines_album_2
1624  90E4 22 47 8C     	ld (Album_de_borrado_Amadeus),hl
1625  90E7
1626  90E7 C9           	ret
1627  90E8
1628  90E8              Inicia_albumes_de_disparos
1629  90E8
1630  90E8 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1631  90EB 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1632  90EE 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1633  90F1 22 4B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1634  90F4
1635  90F4 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1636  90F7 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1637  90FA 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1638  90FD
1639  90FD 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1640  9100 22 4F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1641  9103
1642  9103 C9           	ret
1643  9104
1644  9104              ; ---------------------------------------------------------------------------------------------------------------------
1645  9104              ;
1646  9104              ; 8/1/23
1647  9104              ;
1648  9104              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1649  9104              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1650  9104              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1651  9104
1652  9104              ; Destruye HL y DE !!!!!
1653  9104
1654  9104              Inicia_punteros_de_cajas
1655  9104
1656  9104 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1657  9107 CD 1A 91         call Extrae_address
1658  910A 22 2E 8C         ld (Puntero_store_caja),hl
1659  910D 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1660  9110 22 32 8C     	ld (Indice_restore_caja),hl
1661  9113 CD 1A 91     	call Extrae_address
1662  9116 22 30 8C     	ld (Puntero_restore_caja),hl
1663  9119 C9               ret
1664  911A
1665  911A              ; *************************************************************************************************************************************************************
1666  911A
1667  911A              ;
1668  911A              ; 20/10/22
1669  911A              ;
1670  911A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1671  911A              ;
1672  911A              ; Destruye el puntero y DE !!!!!
1673  911A
1674  911A 5E           Extrae_address ld e,(hl)
1675  911B 23           	inc hl
1676  911C 56           	ld d,(hl)
1677  911D 2B           	dec hl
1678  911E EB           	ex de,hl
1679  911F C9           	ret
1680  9120
1681  9120              ; *************************************************************************************************************************************************************
1682  9120              ;
1683  9120              ;	20/1/24
1684  9120              ;
1685  9120              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1686  9120              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1687  9120              ;
1688  9120              ;   Destruye HL y BC !!!!!,
1689  9120              ;
1690  9120              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1691  9120              ;					"0" ..... Izquierda.
1692  9120
1693  9120              Inicia_Puntero_objeto
1694  9120
1695  9120 3A 0D 8C     	ld a,(Cuad_objeto)
1696  9123 E6 01        	and 1
1697  9125 F5           	push af
1698  9126 CC 42 91     	call z,Inicia_puntero_objeto_izq
1699  9129 F1           	pop af
1700  912A C8           	ret z
1701  912B CD 2F 91     	call Inicia_puntero_objeto_der
1702  912E C9           	ret
1703  912F
1704  912F              ; Arrancamos desde la parte izquierda de la pantalla.
1705  912F              ; Iniciamos (Indice_Sprite_der).
1706  912F
1707  912F 2A 03 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1708  9132 22 07 8C     	ld (Puntero_DESPLZ_der),hl
1709  9135 CD 1A 91     	call Extrae_address
1710  9138 22 00 8C     	ld (Puntero_objeto),hl
1711  913B
1712  913B 2A 05 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1713  913E 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1714  9141 C9           	ret
1715  9142
1716  9142              ; Arrancamos desde la parte derecha de la pantalla.
1717  9142              ; Iniciamos (Indice_Sprite_izq).
1718  9142
1719  9142 2A 05 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1720  9145 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1721  9148 CD 1A 91     	call Extrae_address
1722  914B 22 00 8C     	ld (Puntero_objeto),hl
1723  914E
1724  914E 2A 03 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1725  9151 22 07 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1726  9154 C9           	ret
1727  9155
1728  9155              ; **************************************************************************************************
1729  9155              ;
1730  9155              ;	06/07/24
1731  9155              ;
1732  9155              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1733  9155
1734  9155              Restore_entidad
1735  9155
1736  9155 2A 2E 8C     	ld hl,(Puntero_store_caja)
1737  9158 7E           	ld a,(hl)
1738  9159 A7           	and a
1739  915A CC 68 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1740  915D 28 F6        	jr z,Restore_entidad
1741  915F
1742  915F 11 EE 8B     	ld de,Bandeja_DRAW
1743  9162 01 0C 00     	ld bc,12
1744  9165 ED B0        	ldir
1745  9167 C9           	ret
1746  9168
1747  9168              ; **************************************************************************************************
1748  9168              ;
1749  9168              ;	08/05/23
1750  9168              ;
1751  9168              ;	Incrementamos los dos punteros de entidades. (+1).
1752  9168
1753  9168              Incrementa_punteros_de_cajas
1754  9168
1755  9168 2A 30 8C     	ld hl,(Puntero_restore_caja)
1756  916B 22 2E 8C     	ld (Puntero_store_caja),hl
1757  916E 2A 32 8C     	ld hl,(Indice_restore_caja)
1758  9171 23           	inc hl
1759  9172 23           	inc hl
1760  9173 22 32 8C     	ld (Indice_restore_caja),hl
1761  9176 CD 1A 91         call Extrae_address
1762  9179 22 30 8C         ld (Puntero_restore_caja),hl
1763  917C C9               ret
1764  917D
1765  917D              ; -----------------------------------------------------------
1766  917D
1767  917D              ; Teclado.
1768  917D
1769  917D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1770  917F DB FE        	in a,($fe)
1771  9181 E6 01        	and $01
1772  9183 28 02        	jr z,1f
1773  9185 18 F6        	jr Pulsa_ENTER
1774  9187 C9           1 ret
1775  9188
1776  9188              ; **************************************************************************************************
1777  9188              ;
1778  9188              ; Temporización.
1779  9188
1780  9188              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1781  9188              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1782  9188              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1783  9188              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1784  9188
1785  9188              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1786  9188              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1787  9188              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1788  9188
1789  9188              ; A partir de $4f61 no hace falta DELAY.
1790  9188
1791  9188              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1792  9188
1793  9188              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1794  9188              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1795  9188              ;	LD A,B
1796  9188              ;	AND A
1797  9188              ;	JR NZ,wait
1798  9188              ;	RET
1799  9188
1800  9188              ; ---------------------------------------------------------------------------------------------------------------
1801  9188              ;
1802  9188              ;	13/07/24
1803  9188              ;
1804  9188
1805  9188              Inicia_Shield
1806  9188
1807  9188 21 89 8C     	ld hl,Datos_Shield
1808  918B 22 8D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1809  918E
1810  918E 7E           	ld a,(hl)
1811  918F 32 90 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1812  9192
1813  9192 3E 01        	ld a,1
1814  9194 32 91 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1815  9197
1816  9197 C9           	ret
1817  9198
1818  9198              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1819  9198              ;
1820  9198              ;	4/6/24
1821  9198              ;
1822  9198              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1823  9198              ;
1824  9198              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1825  9198              ;
1826  9198
1827  9198              Actualiza_pantalla
1828  9198
1829  9198 3E 02        	ld a,2
1830  919A D3 FE        	out ($fe),a
1831  919C
1832  919C 3A 65 8C     	ld a,(Ctrl_3)
1833  919F CB 57        	bit 2,a
1834  91A1 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1835  91A3
1836  91A3              Borrando_entidades
1837  91A3
1838  91A3 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1839  91A6 CD 1A 91     	call Extrae_address
1840  91A9 24           	inc h
1841  91AA 25           	dec h
1842  91AB 28 05        	jr z,Pintando_entidades
1843  91AD CD 04 96     	call Pinta_Sprites
1844  91B0 18 F1        	jr Borrando_entidades
1845  91B2
1846  91B2              Pintando_entidades
1847  91B2
1848  91B2 2A 61 8C     	ld hl,(India_SP)
1849  91B5 2C           	inc l
1850  91B6 CD 1A 91     	call Extrae_address
1851  91B9 24           	inc h
1852  91BA 25           	dec h
1853  91BB 28 0E        	jr z,Ejecuta_escudo
1854  91BD 1C           	inc e
1855  91BE 1C           	inc e
1856  91BF ED 53 61 8C  	ld (India_SP),de
1857  91C3 CD 1A 91     	call Extrae_address
1858  91C6 CD 04 96     	call Pinta_Sprites
1859  91C9 18 E7        	jr Pintando_entidades
1860  91CB
1861  91CB              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1862  91CB
1863  91CB              Ejecuta_escudo
1864  91CB
1865  91CB 3A 8F 8C     	ld a,(Shield)
1866  91CE A7           	and a
1867  91CF 20 2F        	jr nz,Aplica_Shield
1868  91D1
1869  91D1              Borrando_Amadeus
1870  91D1
1871  91D1 21 65 8C     	ld hl,Ctrl_3
1872  91D4 CB 6E        	bit 5,(hl)
1873  91D6 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1874  91D8
1875  91D8 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1876  91DB CD 1A 91     	call Extrae_address
1877  91DE 24           	inc h
1878  91DF 25           	dec h
1879  91E0 28 03        	jr z,Pintando_Amadeus
1880  91E2 CD 04 96     	call Pinta_Sprites
1881  91E5
1882  91E5              Pintando_Amadeus
1883  91E5
1884  91E5 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1885  91E8 CD 1A 91     	call Extrae_address
1886  91EB 24           	inc h
1887  91EC 25           	dec h
1888  91ED 28 03        	jr z,1F
1889  91EF CD 04 96     	call Pinta_Sprites
1890  91F2
1891  91F2              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1892  91F2
1893  91F2 21 65 8C     1 ld hl,Ctrl_3
1894  91F5 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1895  91F7 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1896  91F9 CB AE        	res 5,(hl)
1897  91FB
1898  91FB 3E 01        	ld a,1												; Borde azul.
1899  91FD D3 FE        	out ($fe),a
1900  91FF
1901  91FF C9           	ret
1902  9200
1903  9200              Aplica_Shield
1904  9200
1905  9200              ;	Bit 1 "1" (Shield_3) Sólo borra.
1906  9200              ;		  "0"     ""     Borra/Pinta.
1907  9200              ;	Bit 2    ""  RET.	 No borra, no pinta.
1908  9200
1909  9200 21 91 8C     	ld hl,Shield_3
1910  9203
1911  9203 CB 5E        	bit 3,(hl)
1912  9205 20 DE        	jr nz,Pintando_Amadeus
1913  9207
1914  9207 CB 56        	bit 2,(hl)
1915  9209 20 E7        	jr nz,1B
1916  920B
1917  920B CB 4E        	bit 1,(hl)
1918  920D C4 14 92     	call nz,Borra_Amadeus_shield
1919  9210
1920  9210 28 BF        	jr z,Borrando_Amadeus
1921  9212 18 DE        	jr 1B
1922  9214
1923  9214              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1924  9214
1925  9214              Borra_Amadeus_shield
1926  9214
1927  9214 3A 65 8C     	ld a,(Ctrl_3)
1928  9217 CB 6F        	bit 5,a
1929  9219 28 08        	jr z,1F
1930  921B
1931  921B 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1932  921E CD 1A 91     	call Extrae_address
1933  9221 18 06        	jr 2F
1934  9223
1935  9223 2A 45 8C     1 ld hl,(Album_de_pintado_Amadeus)
1936  9226 CD 1A 91     	call Extrae_address
1937  9229
1938  9229 CD 04 96     2 call Pinta_Sprites
1939  922C
1940  922C AF           	xor a
1941  922D 3C           	inc a											; Asegura NZ en la salida de la rutina.
1942  922E
1943  922E C9           	ret
1944  922F
1945  922F              Pinta_Amadeus_shield
1946  922F
1947  922F 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1948  9232 CD 1A 91     	call Extrae_address
1949  9235 CD 04 96     	call Pinta_Sprites
1950  9238
1951  9238 AF           	xor a
1952  9239 3C           	inc a											; Asegura NZ en la salida de la rutina.
1953  923A
1954  923A C9           	ret
1955  923B
1956  923B              Borra_Pinta_Amadeus_shield
1957  923B
1958  923B CD 14 92     	call Borra_Amadeus_shield
1959  923E CD 2F 92     	call Pinta_Amadeus_shield
1960  9241 C9           	ret
1961  9242
1962  9242              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1963  9242              ;
1964  9242              ;	19/6/24
1965  9242              ;
1966  9242
1967  9242              Teclado
1968  9242
1969  9242              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1970  9242
1971  9242 3E F7        	ld a,$f7												; "5" para disparar.
1972  9244 DB FE        	in a,($fe)
1973  9246 E6 10        	and $10
1974  9248
1975  9248 CC 9E A2     	call z,Genera_disparo_Amadeus
1976  924B
1977  924B 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1978  924D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1979  924F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1980  9251 CC 71 9D         call z,Amadeus_a_izquierda
1981  9254
1982  9254 3E F7        	ld a,$f7
1983  9256 DB FE        	in a,($fe)
1984  9258 E6 01        	and $01
1985  925A C8           	ret z
1986  925B
1987  925B 3E F7        	ld a,$f7
1988  925D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1989  925F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1990  9261 CC 89 9D     	call z,Amadeus_a_derecha
1991  9264
1992  9264 C9           	ret
1993  9265
1994  9265              ; ------------------------------------------------------------------------------------------------------------------------
1995  9265              ;
1996  9265              ;	06/07/24
1997  9265              ;
1998  9265
1999  9265              Genera_explosion
2000  9265
2001  9265 21 77 8C     	ld hl,Clock_explosion
2002  9268 35           	dec (hl)
2003  9269 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2004  926B
2005  926B              Borra_entidad_colisionada
2006  926B
2007  926B CD 5F 8F     	call Entidad_a_Tabla_de_pintado					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2008  926E CD 7B 90     	call Cargamos_registros_con_explosion
2009  9271 CD 10 95     	call Genera_datos_de_impresion
2010  9274
2011  9274 AF           	xor a
2012  9275 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2013  9276
2014  9276 C9           	ret
2015  9277
2016  9277              Siguiente_frame_explosion
2017  9277
2018  9277 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2019  9279
2020  9279              ; Avanza Frame de explosión.
2021  9279
2022  9279 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2023  927C 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2024  927F
2025  927F 79           	ld a,c
2026  9280 95           	sub l
2027  9281 20 0B        	jr nz,1F
2028  9283
2029  9283              ; Fín de la entidad !!!!!!!!!!!!!
2030  9283
2031  9283 21 37 8C     	ld hl,Numero_parcial_de_entidades
2032  9286 35           	dec (hl)
2033  9287 23           	inc hl
2034  9288 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2035  9289
2036  9289 CD F4 93     	call Limpiamos_bandeja_DRAW
2037  928C 18 DD        	jr Borra_entidad_colisionada
2038  928E
2039  928E 23           1 inc hl
2040  928F 23           	inc hl
2041  9290 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2042  9293 18 D6        	jr Borra_entidad_colisionada
2043  9295
2044  9295              ; ----- ----- ----- ----- -----
2045  9295
2046  9295              Genera_explosion_Amadeus
2047  9295
2048  9295 21 78 8C     	ld hl,Clock_explosion_Amadeus
2049  9298 35           	dec (hl)
2050  9299 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2051  929B
2052  929B              Borra_Amadeus_impactado
2053  929B
2054  929B CD C4 8E     	call Change_Amadeus
2055  929E CD 88 90     	call Cargamos_registros_con_explosion_Amadeus
2056  92A1 CD A9 90     	call Genera_datos_de_impresion_Amadeus
2057  92A4
2058  92A4 21 65 8C     	ld hl,Ctrl_3
2059  92A7 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2060  92A9
2061  92A9 AF           	xor a
2062  92AA 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2063  92AB
2064  92AB C9           	ret
2065  92AC
2066  92AC              Siguiente_frame_explosion_Amadeus
2067  92AC
2068  92AC 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2069  92AE
2070  92AE              ; Avanza Frame de explosión.
2071  92AE
2072  92AE 2A BE 89     	ld hl,(Pamm_Amadeus)
2073  92B1 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2074  92B4
2075  92B4 79           	ld a,c
2076  92B5 95           	sub l
2077  92B6 20 0B        	jr nz,1F
2078  92B8
2079  92B8              ; Fín de Amadeus !!!!!!!!!!!!!
2080  92B8              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2081  92B8
2082  92B8 AF           	xor a
2083  92B9 32 BB 89     	ld (Impacto_Amadeus),a
2084  92BC 21 65 8C     	ld hl,Ctrl_3
2085  92BF CB F6        	set 6,(hl)
2086  92C1
2087  92C1 18 D8        	jr Borra_Amadeus_impactado
2088  92C3
2089  92C3 23           1 inc hl
2090  92C4 23           	inc hl
2091  92C5 22 BE 89     	ld (Pamm_Amadeus),hl
2092  92C8 18 D1        	jr Borra_Amadeus_impactado
2093  92CA
2094  92CA              ; ---------------------------------------------------------------
2095  92CA
2096  92CA              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92CA              ; ******************************************************************************************************************************************************************************************
   2+ 92CA              ;
   3+ 92CA              ;   21/04/24
   4+ 92CA              ;
   5+ 92CA              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92CA              ;   (XOR) bit a bit.
   7+ 92CA              ;
   8+ 92CA              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92CA
  10+ 92CA              Derivando_RND
  11+ 92CA
  12+ 92CA 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92CD
  14+ 92CD ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92CF C5               push bc
  16+ 92D0              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92D0 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92D3              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92D3
  20+ 92D3 A7           6 and a                                 ; Carry a "0".
  21+ 92D4 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92D6 30 02            jr nc,1F
  23+ 92D8
  24+ 92D8 CB C1            set 0,c
  25+ 92DA
  26+ 92DA 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92DB E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92DD 5F               ld e,a
  29+ 92DE
  30+ 92DE 7A               ld a,d
  31+ 92DF E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92E1 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92E3
  34+ 92E3 CB 3F            srl a
  35+ 92E5
  36+ 92E5 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92E6
  38+ 92E6 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92E7 28 04            jr z,4F
  40+ 92E9
  41+ 92E9 CB FF            set 7,a
  42+ 92EB 18 02            jr 5F
  43+ 92ED
  44+ 92ED CB BF        4 res 7,a
  45+ 92EF
  46+ 92EF CB 21        5 sla c
  47+ 92F1 10 E0            djnz 6B
  48+ 92F3
  49+ 92F3 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92F4
  51+ 92F4 77               ld (hl),a
  52+ 92F5 23               inc hl
  53+ 92F6 C1               pop bc
  54+ 92F7 10 D4            djnz 3B
  55+ 92F9
  56+ 92F9 C9               ret
  57+ 92FA
  58+ 92FA
  59+ 92FA
# file closed: RND_Derivando.asm
2097  92FA              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92FA              ;---------------------------------------------------------------------------------------------------------------
   2+ 92FA              ;
   3+ 92FA              ;   13/11/24
   4+ 92FA
   5+ 92FA              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 92FA
   7+ 92FA              Genera_movimientos_masticados_del_nivel
   8+ 92FA
   9+ 92FA              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 92FA
  11+ 92FA              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 92FA              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 92FA              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 92FA
  15+ 92FA 2D           	dec l
  16+ 92FB 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 92FC 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 92FD 4E           	ld c,(hl)
  19+ 92FE
  20+ 92FE E5           1 push hl														; Push (Datos_de_nivel).
  21+ 92FF C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9300
  23+ 9300              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9300
  25+ 9300 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9301
  27+ 9301 CD 3F 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9304
  29+ 9304              ;	Caja Master inicializada ???
  30+ 9304
  31+ 9304 7E           	ld a,(hl)
  32+ 9305 A7           	and a
  33+ 9306 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9308
  35+ 9308              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9308
  37+ 9308 C1           	pop bc
  38+ 9309 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 930A C5           	push bc
  40+ 930B
  41+ 930B CD DF 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 930E CD 72 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9311
  44+ 9311 3A EE 8B     	ld a,(Tipo)
  45+ 9314 CD 4F 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9317
  47+ 9317              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9317
  49+ 9317              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9317              ;	ld a,(hl)
  51+ 9317              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9317
  53+ 9317              ;	ld hl,Posicion_inicio
  54+ 9317              ;	ld (hl),a
  55+ 9317
  56+ 9317              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9317              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9317
  59+ 9317 CD FB 8F     	call Construye_movimientos_masticados_entidad
  60+ 931A
  61+ 931A 2A 34 8C     	ld hl,(Puntero_indice_master)
  62+ 931D CD 1A 91     	call Extrae_address
  63+ 9320
  64+ 9320 5D           	ld e,l
  65+ 9321 54           	ld d,h
  66+ 9322
  67+ 9322 CD 9F 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9325
  69+ 9325              Movimientos_masticados_construidos
  70+ 9325
  71+ 9325 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9326
  73+ 9326 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 9327 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 9328
  76+ 9328 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9329 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 932B
  79+ 932B C9           	ret
  80+ 932C
  81+ 932C              ;---------------------------------------------------------------------------------------------------------------
  82+ 932C              ;
  83+ 932C              ;   9/11/24
  84+ 932C              ;
  85+ 932C              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 932C              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 932C              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 932C              ;	_ de la 1ª entidad del Nivel.
  89+ 932C              ;
  90+ 932C              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 932C
  92+ 932C              ;	MODIFICA: HL,DE y A.
  93+ 932C              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 932C
  95+ 932C              Inicializa_1er_Nivel
  96+ 932C
  97+ 932C              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 932C
  99+ 932C 21 D2 8B     	ld hl,Indice_de_niveles
 100+ 932F CD 1A 91     	call Extrae_address
 101+ 9332 ED 53 85 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 9336
 103+ 9336 7E           	ld a,(hl)
 104+ 9337 32 36 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 933A
 106+ 933A 2C           	inc l
 107+ 933B 22 87 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 933E
 109+ 933E C9           	ret
 110+ 933F
 111+ 933F              ; ----------------------
 112+ 933F              ;
 113+ 933F              ;	13/11/24
 114+ 933F              ;
 115+ 933F
 116+ 933F              Situa_en_Caja_Master
 117+ 933F
 118+ 933F CD 5D 94         call Calcula_salto_en_BC
 119+ 9342 21 61 89         ld hl,Indice_de_cajas_master
 120+ 9345 A7               and a
 121+ 9346 ED 4A            adc hl,bc
 122+ 9348 22 34 8C       	ld (Puntero_indice_master),hl
 123+ 934B CD 1A 91     	call Extrae_address
 124+ 934E C9           	ret
 125+ 934F
 126+ 934F              ; ----------------------
 127+ 934F
 128+ 934F              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 934F              ; 	ld bc,4
 130+ 934F              ; 	ldir
 131+ 934F              ; 	ret
 132+ 934F
 133+ 934F 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9350 CD 5D 94         call Calcula_salto_en_BC
 135+ 9353 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 9356 A7               and a
 137+ 9357 ED 4A            adc hl,bc
 138+ 9359 CD 1A 91         call Extrae_address
 139+ 935C 22 1F 8C         ld (Puntero_indice_mov),hl
 140+ 935F C9               ret
 141+ 9360
 142+ 9360              ;---------------------------------------------------------------------------------------------------------------
 143+ 9360              ;
 144+ 9360              ;   13/11/24
 145+ 9360              ;
 146+ 9360              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 9360
 148+ 9360
 149+ 9360              Prepara_Cajas_de_Entidades
 150+ 9360
 151+ 9360              ; Preparamos los punteros de las cajas de entidades:
 152+ 9360
 153+ 9360 CD 04 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 9363              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 9363 CD A8 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 9366
 157+ 9366 2A 87 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 9369
 159+ 9369              ; En este punto:
 160+ 9369              ;
 161+ 9369              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 9369              ; B contiene (Numero_parcial_de_entidades).
 163+ 9369
 164+ 9369 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 936A
 166+ 936A 7E           	ld a,(hl)
 167+ 936B
 168+ 936B CD 3F 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 936E
 170+ 936E ED 5B 2E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9372
 172+ 9372 D5           	push de
 173+ 9373 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 9375
 175+ 9375 01 0C 00     	ld bc,12
 176+ 9378 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 937A              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 937A
 179+ 937A              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 937A              ;
 181+ 937A              ;
 182+ 937A              ; ------------------------------------------------------ IX
 183+ 937A              ; ------------------------------------------------------ IX
 184+ 937A              ; ------------------------------------------------------ IX
 185+ 937A              ; ------------------------------------------------------ IX
 186+ 937A
 187+ 937A DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 937C
 189+ 937C CD 4F 90     	call Obtenemos_puntero_de_impresion
 190+ 937F
 191+ 937F DD 6E 05     	ld l,(ix+5)
 192+ 9382 2C           	inc l
 193+ 9383 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 9386
 195+ 9386 D5           	push de														; Push (Puntero_objeto).
 196+ 9387 E5           	push hl														; Push (Puntero_de_impresion).
 197+ 9388
 198+ 9388 CD E4 94     	call Genera_coordenadas
 199+ 938B
 200+ 938B ED 4B EF 8B  	ld bc,(Coordenada_X)
 201+ 938F
 202+ 938F DD 71 01     	ld (ix+1),c
 203+ 9392 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 9395
 205+ 9395 CD 5F 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 9398
 207+ 9398 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 939A D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 939B
 210+ 939B CD 10 95     	call Genera_datos_de_impresion
 211+ 939E
 212+ 939E DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 93A0
 214+ 93A0              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 93A0
 216+ 93A0 CD 17 94     	call Decrementa_Contador_de_mov_masticados
 217+ 93A3 CD F4 93     	call Limpiamos_bandeja_DRAW									;! Cuando el juego funcione, probar a eliminar esta línea!!!!!!!!!!!
 218+ 93A6 CD 68 91     	call Incrementa_punteros_de_cajas
 219+ 93A9
 220+ 93A9              ; Siguiente entidad del Nivel.
 221+ 93A9
 222+ 93A9 2A 87 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 93AC 23           	inc hl 														; _ entidad del Nivel.
 224+ 93AD
 225+ 93AD C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 93AE
 227+ 93AE 10 B9        	djnz 1B
 228+ 93B0
 229+ 93B0 C9           	ret
 230+ 93B1
 231+ 93B1              ; -------------------------------------------------------------------------------------------------------------------
 232+ 93B1              ;
 233+ 93B1              ;	27/5/24
 234+ 93B1              ;
 235+ 93B1              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 93B1              ;
 237+ 93B1
 238+ 93B1              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 93B1              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 93B1
 241+ 93B1 21 29 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 93B4 CD 72 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 93B7
 244+ 93B7
 245+ 93B7              Construye_movimientos_masticados_Amadeus
 246+ 93B7
 247+ 93B7 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 93BA CD 42 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 93BD              ;															; _ el (Contador_de_mov_masticados).
 250+ 93BD CD 20 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 93C0              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 93C0
 253+ 93C0              ; Generamos movimientos masticados de Amadeus.
 254+ 93C0
 255+ 93C0 06 79        	ld b,121												; $0079, 121d.
 256+ 93C2
 257+ 93C2 C5           1 push bc
 258+ 93C3 CD 27 97     	call Draw
 259+ 93C6 CD 27 90     	call Guarda_movimiento_masticado
 260+ 93C9
 261+ 93C9 CD 9B 9A     	call Mov_right
 262+ 93CC CD 9B 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 93CF
 264+ 93CF C1           	pop bc
 265+ 93D0 10 F0        	djnz 1B
 266+ 93D2
 267+ 93D2              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 93D2
 269+ 93D2              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 93D2              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 93D2
 272+ 93D2 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 93D5 01 08 00     	ld bc,8
 274+ 93D8 A7           	and a
 275+ 93D9 ED 42        	sbc hl,bc
 276+ 93DB 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 93DE
 278+ 93DE C9           	ret
 279+ 93DF
 280+ 93DF              ; ---------------------------------------------------------------------
 281+ 93DF              ;
 282+ 93DF              ;	10/02/24
 283+ 93DF              ;
 284+ 93DF              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 93DF              ;
 286+ 93DF              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 93DF
 288+ 93DF              Definicion_segun_tipo
 289+ 93DF
 290+ 93DF CD 5D 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 93E2 21 0B 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 93E5 CD 68 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 93E8 C9           	ret
 294+ 93E9
 295+ 93E9              ; ---------------------------------------------------------------------
 296+ 93E9              ;
 297+ 93E9              ;	6/7/24
 298+ 93E9
 299+ 93E9
 300+ 93E9              Store_Restore_cajas
 301+ 93E9
 302+ 93E9 ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 303+ 93ED CD 9F 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 93F0 CD 68 91     	call Incrementa_punteros_de_cajas
 305+ 93F3 C9           	ret
 306+ 93F4
 307+ 93F4              ; ---------------------------------------------------------------------
 308+ 93F4              ;
 309+ 93F4              ;	23/6/24
 310+ 93F4              ;
 311+ 93F4              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 93F4              ;
 313+ 93F4              ;	MODIFY: HL
 314+ 93F4
 315+ 93F4              Limpiamos_bandeja_DRAW
 316+ 93F4
 317+ 93F4 ED 73 3D 8C  	ld (Stack),sp
 318+ 93F8 31 13 8C     	ld sp,Vel_left
 319+ 93FB
 320+ 93FB AF           	xor a
 321+ 93FC 67           	ld h,a
 322+ 93FD 6F           	ld l,a
 323+ 93FE
 324+ 93FE E5           	push hl
 325+ 93FF E5           	push hl
 326+ 9400 E5           	push hl
 327+ 9401 E5           	push hl
 328+ 9402 E5           	push hl
 329+ 9403 E5           	push hl
 330+ 9404 E5           	push hl
 331+ 9405 E5           	push hl
 332+ 9406 E5           	push hl
 333+ 9407 E5           	push hl
 334+ 9408 E5           	push hl
 335+ 9409 E5           	push hl
 336+ 940A E5           	push hl
 337+ 940B E5           	push hl
 338+ 940C E5           	push hl
 339+ 940D E5           	push hl
 340+ 940E E5           	push hl
 341+ 940F E5           	push hl
 342+ 9410
 343+ 9410 33           	inc sp
 344+ 9411
 345+ 9411 E5           	push hl
 346+ 9412 ED 7B 3D 8C  	ld sp,(Stack)
 347+ 9416
 348+ 9416 C9           	ret
 349+ 9417
 350+ 9417              ; ---------------------------------------------------------------------
 351+ 9417              ;
 352+ 9417              ;	23/11/24
 353+ 9417              ;
 354+ 9417              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 9417
 356+ 9417              Decrementa_Contador_de_mov_masticados
 357+ 9417
 358+ 9417 DD 6E 09     	ld l,(ix+9)
 359+ 941A DD 66 0A     	ld h,(ix+10)
 360+ 941D
 361+ 941D 2B           	dec hl
 362+ 941E
 363+ 941E DD 75 09     	ld (ix+9),l
 364+ 9421 DD 74 0A     	ld (ix+10),h
 365+ 9424
 366+ 9424 C9           	ret
 367+ 9425
 368+ 9425              ; ---------------------------------------------------------------------
 369+ 9425              ;
 370+ 9425              ;	7/11/24
 371+ 9425
 372+ 9425              Reinicia_entidad_maliciosa
 373+ 9425
 374+ 9425              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 9425
 376+ 9425 F3           	di
 377+ 9426 18 FE        	jr $
 378+ 9428 FB           	ei
 379+ 9429
 380+ 9429 CD 08 9F     	call Situa_en_contador_general_de_mov_masticados
 381+ 942C CD 15 9F     	call Transfiere_datos_de_contadores
 382+ 942F
 383+ 942F              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 384+ 942F
 385+ 942F 3A EE 8B     	ld a,(Tipo)
 386+ 9432 CD DF 93     	call Definicion_segun_tipo
 387+ 9435
 388+ 9435 E5           	push hl
 389+ 9436 DD E1        	pop ix
 390+ 9438
 391+ 9438 DD 6E 0B     	ld l,(ix+11)
 392+ 943B DD 66 0C     	ld h,(ix+12)
 393+ 943E
 394+ 943E 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 395+ 9441
 396+ 9441 CD 4F 90     	call Obtenemos_puntero_de_impresion
 397+ 9444
 398+ 9444              ; Incrementa (Contador_de_vueltas)x2.
 399+ 9444              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 400+ 9444
 401+ 9444              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 402+ 9444              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 403+ 9444              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 404+ 9444              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 405+ 9444              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 406+ 9444
 407+ 9444 21 F1 8B     	ld hl,Contador_de_vueltas
 408+ 9447 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 409+ 9449
 410+ 9449 7E           	ld a,(hl)
 411+ 944A CB 2F        	sra a
 412+ 944C CB 2F        	sra a
 413+ 944E
 414+ 944E 32 F9 8B     	ld (Velocidad),a
 415+ 9451
 416+ 9451 3E 40        	ld a,$40
 417+ 9453 BE           	cp (hl)
 418+ 9454 C0           	ret nz
 419+ 9455
 420+ 9455              ; Límitador.
 421+ 9455
 422+ 9455              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 423+ 9455
 424+ 9455 CB 2E        	sra (hl)
 425+ 9457 21 F9 8B     	ld hl,Velocidad
 426+ 945A CB 2E        	sra (hl)
 427+ 945C
 428+ 945C C9           	ret
 429+ 945D
 430+ 945D              ;	------------------------------------------------------------------------------------
 431+ 945D              ;
 432+ 945D              ;	09/11/24
 433+ 945D              ;
 434+ 945D              ;	INPUTS:	A contiene el (Tipo) de entidad.
 435+ 945D              ;
 436+ 945D              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 437+ 945D              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 438+ 945D
 439+ 945D A7           Calcula_salto_en_BC and a
 440+ 945E 28 04        	jr z,1F
 441+ 9460 CB 27        	sla a
 442+ 9462 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 443+ 9464 4F           1 ld c,a
 444+ 9465 06 00        	ld b,0
 445+ 9467 C9           	ret
 446+ 9468
 447+ 9468              ; ------------------------------------------------------------------
 448+ 9468              ;
 449+ 9468              ;	19/1/24
 450+ 9468              ;
 451+ 9468              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 452+ 9468              ;	Actualiza (Datos_de_entidad) con esa dirección.
 453+ 9468
 454+ 9468 A7           Situa_en_datos_de_definicion and a
 455+ 9469 ED 4A        	adc hl,bc
 456+ 946B CD 1A 91     	call Extrae_address
 457+ 946E 22 3B 8C         ld (Datos_de_entidad),hl
 458+ 9471 C9           	ret
 459+ 9472
 460+ 9472              ; ------------------------------------------------------------------
 461+ 9472
 462+ 9472              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 463+ 9472              ; 	inc de
 464+ 9472              ; 	inc de
 465+ 9472              ; 	ex de,hl
 466+ 9472              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 467+ 9472              ; 	ret
 468+ 9472
 469+ 9472              ; ----------------------------------------------------------------------------------------------------------
 470+ 9472              ;
 471+ 9472              ;	24/6/24
 472+ 9472              ;
 473+ 9472              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 474+ 9472              ;	_ de entidad.
 475+ 9472              ;
 476+ 9472              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 477+ 9472              ;
 478+ 9472              ;
 479+ 9472              ;	MODIFICA: HL,DE y BC
 480+ 9472
 481+ 9472
 482+ 9472              Definicion_de_entidad_a_bandeja_DRAW
 483+ 9472
 484+ 9472 11 EE 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 485+ 9475 7E           	ld a,(hl) 									; Volcamos Tipo.
 486+ 9476 12           	ld (de),a
 487+ 9477 23           	inc hl
 488+ 9478              ;
 489+ 9478 11 FC 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 490+ 947B 01 02 00     	ld bc,2
 491+ 947E ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 492+ 9480              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 493+ 9480 11 F1 8B     	ld de,Contador_de_vueltas
 494+ 9483 7E           	ld a,(hl)
 495+ 9484 12           	ld (de),a
 496+ 9485 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 497+ 9486
 498+ 9486 11 03 8C     	ld de,Indice_Sprite_der
 499+ 9489 01 04 00     	ld bc,4
 500+ 948C ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 501+ 948E
 502+ 948E 11 0B 8C     	ld de,Posicion_inicio
 503+ 9491 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 504+ 9494 ED B0        	ldir 									; Vuelco (Frames_explosion).
 505+ 9496
 506+ 9496 11 F5 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 507+ 9499 01 02 00     	ld bc,2
 508+ 949C ED B0        	ldir
 509+ 949E
 510+ 949E C9           	ret
 511+ 949F
 512+ 949F              ; ----------------------------------------------------------------------------------------------------------
 513+ 949F              ;
 514+ 949F              ;	1/8/24
 515+ 949F              ;
 516+ 949F
 517+ 949F              Parametros_de_bandeja_DRAW_a_caja
 518+ 949F
 519+ 949F 21 EE 8B     	ld hl,Bandeja_DRAW
 520+ 94A2 01 0C 00     	ld bc,12
 521+ 94A5 ED B0        	ldir
 522+ 94A7 C9           	ret
 523+ 94A8
 524+ 94A8              ;---------------------------------------------------------------------------------------------------------------
 525+ 94A8              ;
 526+ 94A8              ;	13/11/24
 527+ 94A8              ;
 528+ 94A8              ;	INICIALIZA (Numero_parcial_de_entidades).
 529+ 94A8              ;
 530+ 94A8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 531+ 94A8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 532+ 94A8
 533+ 94A8              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 534+ 94A8              ;			- Actualiza (Numero_de_entidades).
 535+ 94A8
 536+ 94A8              ;	MODIFICA: A y B.
 537+ 94A8
 538+ 94A8
 539+ 94A8              Inicializa_Numero_parcial_de_entidades
 540+ 94A8
 541+ 94A8 3A 36 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 542+ 94AB FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 543+ 94AD 38 0E        	jr c,1F
 544+ 94AF 28 0C        	jr z,1F
 545+ 94B1
 546+ 94B1              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 547+ 94B1              ; Actualizamos variables.
 548+ 94B1
 549+ 94B1 D6 06        	sub 6
 550+ 94B3 32 36 8C     	ld (Numero_de_entidades),a
 551+ 94B6 3E 06        	ld a,6
 552+ 94B8 32 37 8C     	ld (Numero_parcial_de_entidades),a
 553+ 94BB 47           	ld b,a
 554+ 94BC C9           	ret
 555+ 94BD
 556+ 94BD              ; El nº total de entidades no supera el nº de cajas de entidades.
 557+ 94BD              ; (Numero_de_entidades)="0".
 558+ 94BD
 559+ 94BD 32 37 8C     1 ld (Numero_parcial_de_entidades),a
 560+ 94C0 47           	ld b,a
 561+ 94C1 AF           	xor a
 562+ 94C2 32 36 8C     	ld (Numero_de_entidades),a
 563+ 94C5 C9           	ret
 564+ 94C6
# file closed: Rutinas_de_inicio_y_niveles.asm
2098  94C6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94C6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94C6              ;
   3+ 94C6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94C6              ;
   5+ 94C6              ; *****************************************************************************************************************************************************************************************
   6+ 94C6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94C6
   8+ 94C6 7C           calcula_tercio ld a,h
   9+ 94C7 E6 18        	and $18
  10+ 94C9 CB 2F        	sra a
  11+ 94CB CB 2F        	sra a
  12+ 94CD CB 2F        	sra a
  13+ 94CF C9           	ret
  14+ 94D0
# file closed: calcula_tercio.asm
2099  94D0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94D0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94D0              ;
   3+ 94D0              ;
   4+ 94D0              ;	CLS.
   5+ 94D0              ;
   6+ 94D0              ;	Limpia la pantalla y define sus atributos.
   7+ 94D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94D0              ;
   9+ 94D0              ;	COLORES: 0 ..... NEGRO
  10+ 94D0              ;    		 1 ..... AZUL
  11+ 94D0              ; 			 2 ..... ROJO
  12+ 94D0              ;			 3 ..... MAGENTA
  13+ 94D0              ; 			 4 ..... VERDE
  14+ 94D0              ; 			 5 ..... CIAN
  15+ 94D0              ;			 6 ..... AMARILLO
  16+ 94D0              ; 			 7 ..... BLANCO
  17+ 94D0              ;
  18+ 94D0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94D0              ;
  20+ 94D0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94D0
  22+ 94D0
  23+ 94D0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94D3 11 01 40     	LD DE,$4001
  25+ 94D6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94DB ED B0        	LDIR
  28+ 94DD 01 FF 02     	LD BC,767
  29+ 94E0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94E1 ED B0        	LDIR
  31+ 94E3 C9           	ret
  32+ 94E4
# file closed: Cls.asm
2100  94E4              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94E4              ; ------------------------------------------------------------------------
   2+ 94E4              ;
   3+ 94E4              ;	30/1/24
   4+ 94E4              ;
   5+ 94E4              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94E4              ;	Fila superior "0", Columna izquierda "0".
   7+ 94E4              ;
   8+ 94E4              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94E4              ;
  10+ 94E4              ;	Modifica: A,BC y DE.
  11+ 94E4
  12+ 94E4              Genera_coordenadas
  13+ 94E4
  14+ 94E4 7D           	ld a,l
  15+ 94E5 E6 1F        	and $1f
  16+ 94E7
  17+ 94E7 32 EF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 94EA
  19+ 94EA 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 94EB FE 40        	cp $40
  21+ 94ED 38 1C        	jr c,4F
  22+ 94EF
  23+ 94EF CD C6 94     	call calcula_tercio
  24+ 94F2 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 94F3
  26+ 94F3 1E 00        	ld e,0
  27+ 94F5 7D           	ld a,l
  28+ 94F6 E6 E0        	and $e0
  29+ 94F8 28 01        	jr z,1F
  30+ 94FA 04           	inc b
  31+ 94FB
  32+ 94FB 04           1 inc b
  33+ 94FC 05           	dec b
  34+ 94FD 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 94FF              ;														; _ , salimos.
  36+ 94FF 1C           3 inc e
  37+ 9500 D6 20        	sub 32
  38+ 9502 20 FB        	jr nz,3B
  39+ 9504 10 F5        	djnz 1B
  40+ 9506
  41+ 9506 7B           2 ld a,e
  42+ 9507 32 F0 8B     	ld (Coordenada_y),a
  43+ 950A C9           	ret
  44+ 950B
  45+ 950B AF           4 xor a
  46+ 950C 32 F0 8B     	ld (Coordenada_y),a
  47+ 950F C9           	ret
  48+ 9510
# file closed: Genera_coordenadas.asm
2101  9510              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9510              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9510              ;
   3+ 9510              ;	20/09/24
   4+ 9510              ;
   5+ 9510              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9510              ;   DE contiene Puntero_objeto.
   7+ 9510              ;   IX contiene el Puntero de impresión.
   8+ 9510
   9+ 9510              Genera_datos_de_impresion
  10+ 9510
  11+ 9510 ED 73 3D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9514
  13+ 9514 2A 5F 8C         ld hl,(Scanlines_album_SP)
  14+ 9517
  15+ 9517 3E 05            ld a,5
  16+ 9519 85               add l
  17+ 951A 6F               ld l,a
  18+ 951B
  19+ 951B F9               ld sp,hl
  20+ 951C 22 5F 8C         ld (Scanlines_album_SP),hl
  21+ 951F
  22+ 951F 21 00 00         ld hl,0
  23+ 9522
  24+ 9522 DD E5            push ix
  25+ 9524 3B               dec sp
  26+ 9525 ED 7A            adc hl,sp
  27+ 9527 D5               push de
  28+ 9528
  29+ 9528              ; Recuperamos SP.
  30+ 9528
  31+ 9528 ED 7B 3D 8C      ld sp,(Stack)
  32+ 952C
  33+ 952C E5               push hl
  34+ 952D F1               pop af
  35+ 952E 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 952F
  37+ 952F              ; Tenemos el encabezado listo.
  38+ 952F              ; Preparamos registros para generar los scanlines.
  39+ 952F
  40+ 952F DD E5            push ix
  41+ 9531 E1               pop hl                                          ; 1er scanline en HL.
  42+ 9532
  43+ 9532 ED 5B 5F 8C      ld de,(Scanlines_album_SP)
  44+ 9536
  45+ 9536              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 9536              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 9536
  48+ 9536 7C               ld a,h
  49+ 9537 FE 50            cp $50
  50+ 9539 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 953B
  52+ 953B 20 05            jr nz,2F
  53+ 953D
  54+ 953D 7D               ld a,l
  55+ 953E FE E0            cp $e0
  56+ 9540 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9542
  58+ 9542 7D           2 ld a,l
  59+ 9543 FE C0            cp $c0
  60+ 9545 D2 DB 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 9548
  62+ 9548              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 9548
  64+ 9548 CD D9 99         call NextScan
  65+ 954B EB               ex de,hl
  66+ 954C
  67+ 954C 73               ld (hl),e
  68+ 954D 23               inc hl
  69+ 954E 72               ld (hl),d
  70+ 954F 23               inc hl
  71+ 9550
  72+ 9550 EB               ex de,hl
  73+ 9551
  74+ 9551 CD D9 99         call NextScan
  75+ 9554 EB               ex de,hl
  76+ 9555
  77+ 9555 73               ld (hl),e
  78+ 9556 23               inc hl
  79+ 9557 72               ld (hl),d
  80+ 9558 23               inc hl
  81+ 9559
  82+ 9559 EB               ex de,hl
  83+ 955A
  84+ 955A CD D9 99         call NextScan
  85+ 955D EB               ex de,hl
  86+ 955E
  87+ 955E 73               ld (hl),e
  88+ 955F 23               inc hl
  89+ 9560 72               ld (hl),d
  90+ 9561 23               inc hl
  91+ 9562
  92+ 9562 EB               ex de,hl
  93+ 9563
  94+ 9563 CD D9 99         call NextScan
  95+ 9566 EB               ex de,hl
  96+ 9567
  97+ 9567 73               ld (hl),e
  98+ 9568 23               inc hl
  99+ 9569 72               ld (hl),d
 100+ 956A 23               inc hl
 101+ 956B
 102+ 956B EB               ex de,hl
 103+ 956C
 104+ 956C CD D9 99         call NextScan
 105+ 956F EB               ex de,hl
 106+ 9570
 107+ 9570 73               ld (hl),e
 108+ 9571 23               inc hl
 109+ 9572 72               ld (hl),d
 110+ 9573 23               inc hl
 111+ 9574
 112+ 9574 EB               ex de,hl
 113+ 9575
 114+ 9575 CD D9 99         call NextScan
 115+ 9578 EB               ex de,hl
 116+ 9579
 117+ 9579 73               ld (hl),e
 118+ 957A 23               inc hl
 119+ 957B 72               ld (hl),d
 120+ 957C 23               inc hl
 121+ 957D
 122+ 957D EB               ex de,hl
 123+ 957E
 124+ 957E CD D9 99         call NextScan
 125+ 9581 EB               ex de,hl
 126+ 9582
 127+ 9582 73               ld (hl),e
 128+ 9583 23               inc hl
 129+ 9584 72               ld (hl),d
 130+ 9585 23               inc hl
 131+ 9586
 132+ 9586 EB               ex de,hl
 133+ 9587
 134+ 9587 CD D9 99         call NextScan
 135+ 958A EB               ex de,hl
 136+ 958B
 137+ 958B 73               ld (hl),e
 138+ 958C 23               inc hl
 139+ 958D 72               ld (hl),d
 140+ 958E 23               inc hl
 141+ 958F
 142+ 958F EB               ex de,hl
 143+ 9590
 144+ 9590 CD D9 99         call NextScan
 145+ 9593 EB               ex de,hl
 146+ 9594
 147+ 9594 73               ld (hl),e
 148+ 9595 23               inc hl
 149+ 9596 72               ld (hl),d
 150+ 9597 23               inc hl
 151+ 9598
 152+ 9598 EB               ex de,hl
 153+ 9599
 154+ 9599 CD D9 99         call NextScan
 155+ 959C EB               ex de,hl
 156+ 959D
 157+ 959D 73               ld (hl),e
 158+ 959E 23               inc hl
 159+ 959F 72               ld (hl),d
 160+ 95A0 23               inc hl
 161+ 95A1
 162+ 95A1 EB               ex de,hl
 163+ 95A2
 164+ 95A2 CD D9 99         call NextScan
 165+ 95A5 EB               ex de,hl
 166+ 95A6
 167+ 95A6 73               ld (hl),e
 168+ 95A7 23               inc hl
 169+ 95A8 72               ld (hl),d
 170+ 95A9 23               inc hl
 171+ 95AA
 172+ 95AA EB               ex de,hl
 173+ 95AB
 174+ 95AB CD D9 99         call NextScan
 175+ 95AE EB               ex de,hl
 176+ 95AF
 177+ 95AF 73               ld (hl),e
 178+ 95B0 23               inc hl
 179+ 95B1 72               ld (hl),d
 180+ 95B2 23               inc hl
 181+ 95B3
 182+ 95B3 EB               ex de,hl
 183+ 95B4
 184+ 95B4 CD D9 99         call NextScan
 185+ 95B7 EB               ex de,hl
 186+ 95B8
 187+ 95B8 73               ld (hl),e
 188+ 95B9 23               inc hl
 189+ 95BA 72               ld (hl),d
 190+ 95BB 23               inc hl
 191+ 95BC
 192+ 95BC EB               ex de,hl
 193+ 95BD
 194+ 95BD CD D9 99         call NextScan
 195+ 95C0 EB               ex de,hl
 196+ 95C1
 197+ 95C1 73               ld (hl),e
 198+ 95C2 23               inc hl
 199+ 95C3 72               ld (hl),d
 200+ 95C4 23               inc hl
 201+ 95C5
 202+ 95C5 EB               ex de,hl
 203+ 95C6
 204+ 95C6 CD D9 99         call NextScan
 205+ 95C9 EB               ex de,hl
 206+ 95CA
 207+ 95CA              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 95CA              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 95CA              ;   _ generar sus scanlines.
 210+ 95CA
 211+ 95CA              ;    ld (Puntero_de_impresion_disparo),de
 212+ 95CA
 213+ 95CA 73               ld (hl),e
 214+ 95CB 23               inc hl
 215+ 95CC 72               ld (hl),d
 216+ 95CD 23               inc hl
 217+ 95CE
 218+ 95CE              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 95CE
 220+ 95CE 22 5F 8C         ld (Scanlines_album_SP),hl
 221+ 95D1
 222+ 95D1 EB               ex de,hl
 223+ 95D2
 224+ 95D2              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 95D2
 226+ 95D2              ;    call NextScan
 227+ 95D2              ;    call NextScan
 228+ 95D2
 229+ 95D2 22 6A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 95D5
 231+ 95D5              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 95D5
 233+ 95D5 08               ex af,af
 234+ 95D6
 235+ 95D6 F5               push af
 236+ 95D7 E1               pop hl
 237+ 95D8
 238+ 95D8 36 10            ld (hl),16
 239+ 95DA
 240+ 95DA C9               ret
 241+ 95DB
 242+ 95DB              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 95DB
 244+ 95DB              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 95DB
 246+ 95DB 3E 57            ld a,$57
 247+ 95DD 94               sub h
 248+ 95DE 47               ld b,a
 249+ 95DF
 250+ 95DF 3E DF            ld a,$df
 251+ 95E1 BD               cp l
 252+ 95E2 38 04            jr c,1F
 253+ 95E4
 254+ 95E4 3E 08            ld a,8
 255+ 95E6 80               add b
 256+ 95E7 47               ld b,a
 257+ 95E8
 258+ 95E8              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 95E8              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 95E8
 261+ 95E8 48           1 ld c,b
 262+ 95E9 0C               inc c
 263+ 95EA
 264+ 95EA 04               inc b
 265+ 95EB 05               dec b
 266+ 95EC 20 02            jr nz,3F
 267+ 95EE
 268+ 95EE 18 0B            jr 6F
 269+ 95F0
 270+ 95F0 CD D9 99     3 call NextScan
 271+ 95F3 EB               ex de,hl
 272+ 95F4
 273+ 95F4 73               ld (hl),e
 274+ 95F5 23               inc hl
 275+ 95F6 72               ld (hl),d
 276+ 95F7 23               inc hl
 277+ 95F8
 278+ 95F8 EB               ex de,hl
 279+ 95F9 10 F5            djnz 3B
 280+ 95FB
 281+ 95FB ED 53 5F 8C  6 ld (Scanlines_album_SP),de
 282+ 95FF
 283+ 95FF 08           5 ex af,af
 284+ 9600 F5               push af
 285+ 9601 E1               pop hl
 286+ 9602
 287+ 9602 71               ld (hl),c
 288+ 9603
 289+ 9603 C9               ret
 290+ 9604
# file closed: Genera_datos_de_impresion.asm
2102  9604              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9604              ; -----------------------------------------------------------------------------
   2+ 9604              ;
   3+ 9604              ;   11/03/24
   4+ 9604              ;
   5+ 9604
   6+ 9604              Pinta_Sprites
   7+ 9604
   8+ 9604              ;    ld hl,(Scanlines_album_SP)
   9+ 9604              ;    call Extrae_address
  10+ 9604
  11+ 9604              ;    inc h
  12+ 9604              ;    dec h
  13+ 9604              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9604
  15+ 9604 ED 73 3D 8C      ld (Stack),sp
  16+ 9608
  17+ 9608 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9609              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9609 2C               inc l
  20+ 960A 2C               inc l
  21+ 960B
  22+ 960B 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 960C
  24+ 960C 2C               inc l
  25+ 960D F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 960E
  27+ 960E              ;   Seleccionamos rutina de impresión:
  28+ 960E
  29+ 960E 3E 10            ld a,16
  30+ 9610 B8               cp b
  31+ 9611 C2 0D 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9614
  33+ 9614              ;   Rutinas:
  34+ 9614
  35+ 9614              Pinta_rapido    ;   1520 t/states.
  36+ 9614
  37+ 9614 E1               pop hl
  38+ 9615
  39+ 9615 1A               ld a,(de)
  40+ 9616 AE               xor (hl)
  41+ 9617 77               ld (hl),a
  42+ 9618 2C               inc l
  43+ 9619 1C               inc e
  44+ 961A 1A               ld a,(de)
  45+ 961B AE               xor (hl)
  46+ 961C 77               ld (hl),a
  47+ 961D 2C               inc l
  48+ 961E 1C               inc e
  49+ 961F 1A               ld a,(de)
  50+ 9620 AE               xor (hl)
  51+ 9621 77               ld (hl),a
  52+ 9622 13               inc de
  53+ 9623
  54+ 9623 E1               pop hl
  55+ 9624
  56+ 9624 1A               ld a,(de)
  57+ 9625 AE               xor (hl)
  58+ 9626 77               ld (hl),a
  59+ 9627 2C               inc l
  60+ 9628 1C               inc e
  61+ 9629 1A               ld a,(de)
  62+ 962A AE               xor (hl)
  63+ 962B 77               ld (hl),a
  64+ 962C 2C               inc l
  65+ 962D 1C               inc e
  66+ 962E 1A               ld a,(de)
  67+ 962F AE               xor (hl)
  68+ 9630 77               ld (hl),a
  69+ 9631 13               inc de
  70+ 9632
  71+ 9632 E1               pop hl
  72+ 9633
  73+ 9633 1A               ld a,(de)
  74+ 9634 AE               xor (hl)
  75+ 9635 77               ld (hl),a
  76+ 9636 2C               inc l
  77+ 9637 1C               inc e
  78+ 9638 1A               ld a,(de)
  79+ 9639 AE               xor (hl)
  80+ 963A 77               ld (hl),a
  81+ 963B 2C               inc l
  82+ 963C 1C               inc e
  83+ 963D 1A               ld a,(de)
  84+ 963E AE               xor (hl)
  85+ 963F 77               ld (hl),a
  86+ 9640 13               inc de
  87+ 9641
  88+ 9641 E1               pop hl
  89+ 9642
  90+ 9642 1A               ld a,(de)
  91+ 9643 AE               xor (hl)
  92+ 9644 77               ld (hl),a
  93+ 9645 2C               inc l
  94+ 9646 1C               inc e
  95+ 9647 1A               ld a,(de)
  96+ 9648 AE               xor (hl)
  97+ 9649 77               ld (hl),a
  98+ 964A 2C               inc l
  99+ 964B 1C               inc e
 100+ 964C 1A               ld a,(de)
 101+ 964D AE               xor (hl)
 102+ 964E 77               ld (hl),a
 103+ 964F 13               inc de
 104+ 9650
 105+ 9650 E1               pop hl
 106+ 9651
 107+ 9651 1A               ld a,(de)
 108+ 9652 AE               xor (hl)
 109+ 9653 77               ld (hl),a
 110+ 9654 2C               inc l
 111+ 9655 1C               inc e
 112+ 9656 1A               ld a,(de)
 113+ 9657 AE               xor (hl)
 114+ 9658 77               ld (hl),a
 115+ 9659 2C               inc l
 116+ 965A 1C               inc e
 117+ 965B 1A               ld a,(de)
 118+ 965C AE               xor (hl)
 119+ 965D 77               ld (hl),a
 120+ 965E 13               inc de
 121+ 965F
 122+ 965F E1               pop hl
 123+ 9660
 124+ 9660 1A               ld a,(de)
 125+ 9661 AE               xor (hl)
 126+ 9662 77               ld (hl),a
 127+ 9663 2C               inc l
 128+ 9664 1C               inc e
 129+ 9665 1A               ld a,(de)
 130+ 9666 AE               xor (hl)
 131+ 9667 77               ld (hl),a
 132+ 9668 2C               inc l
 133+ 9669 1C               inc e
 134+ 966A 1A               ld a,(de)
 135+ 966B AE               xor (hl)
 136+ 966C 77               ld (hl),a
 137+ 966D 13               inc de
 138+ 966E
 139+ 966E E1               pop hl
 140+ 966F
 141+ 966F 1A               ld a,(de)
 142+ 9670 AE               xor (hl)
 143+ 9671 77               ld (hl),a
 144+ 9672 2C               inc l
 145+ 9673 1C               inc e
 146+ 9674 1A               ld a,(de)
 147+ 9675 AE               xor (hl)
 148+ 9676 77               ld (hl),a
 149+ 9677 2C               inc l
 150+ 9678 1C               inc e
 151+ 9679 1A               ld a,(de)
 152+ 967A AE               xor (hl)
 153+ 967B 77               ld (hl),a
 154+ 967C 13               inc de
 155+ 967D
 156+ 967D E1               pop hl
 157+ 967E
 158+ 967E 1A               ld a,(de)
 159+ 967F AE               xor (hl)
 160+ 9680 77               ld (hl),a
 161+ 9681 2C               inc l
 162+ 9682 1C               inc e
 163+ 9683 1A               ld a,(de)
 164+ 9684 AE               xor (hl)
 165+ 9685 77               ld (hl),a
 166+ 9686 2C               inc l
 167+ 9687 1C               inc e
 168+ 9688 1A               ld a,(de)
 169+ 9689 AE               xor (hl)
 170+ 968A 77               ld (hl),a
 171+ 968B 13               inc de
 172+ 968C
 173+ 968C E1               pop hl
 174+ 968D
 175+ 968D 1A               ld a,(de)
 176+ 968E AE               xor (hl)
 177+ 968F 77               ld (hl),a
 178+ 9690 2C               inc l
 179+ 9691 1C               inc e
 180+ 9692 1A               ld a,(de)
 181+ 9693 AE               xor (hl)
 182+ 9694 77               ld (hl),a
 183+ 9695 2C               inc l
 184+ 9696 1C               inc e
 185+ 9697 1A               ld a,(de)
 186+ 9698 AE               xor (hl)
 187+ 9699 77               ld (hl),a
 188+ 969A 13               inc de
 189+ 969B
 190+ 969B E1               pop hl
 191+ 969C
 192+ 969C 1A               ld a,(de)
 193+ 969D AE               xor (hl)
 194+ 969E 77               ld (hl),a
 195+ 969F 2C               inc l
 196+ 96A0 1C               inc e
 197+ 96A1 1A               ld a,(de)
 198+ 96A2 AE               xor (hl)
 199+ 96A3 77               ld (hl),a
 200+ 96A4 2C               inc l
 201+ 96A5 1C               inc e
 202+ 96A6 1A               ld a,(de)
 203+ 96A7 AE               xor (hl)
 204+ 96A8 77               ld (hl),a
 205+ 96A9 13               inc de
 206+ 96AA
 207+ 96AA E1               pop hl
 208+ 96AB
 209+ 96AB 1A               ld a,(de)
 210+ 96AC AE               xor (hl)
 211+ 96AD 77               ld (hl),a
 212+ 96AE 2C               inc l
 213+ 96AF 1C               inc e
 214+ 96B0 1A               ld a,(de)
 215+ 96B1 AE               xor (hl)
 216+ 96B2 77               ld (hl),a
 217+ 96B3 2C               inc l
 218+ 96B4 1C               inc e
 219+ 96B5 1A               ld a,(de)
 220+ 96B6 AE               xor (hl)
 221+ 96B7 77               ld (hl),a
 222+ 96B8 13               inc de
 223+ 96B9
 224+ 96B9 E1               pop hl
 225+ 96BA
 226+ 96BA 1A               ld a,(de)
 227+ 96BB AE               xor (hl)
 228+ 96BC 77               ld (hl),a
 229+ 96BD 2C               inc l
 230+ 96BE 1C               inc e
 231+ 96BF 1A               ld a,(de)
 232+ 96C0 AE               xor (hl)
 233+ 96C1 77               ld (hl),a
 234+ 96C2 2C               inc l
 235+ 96C3 1C               inc e
 236+ 96C4 1A               ld a,(de)
 237+ 96C5 AE               xor (hl)
 238+ 96C6 77               ld (hl),a
 239+ 96C7 13               inc de
 240+ 96C8
 241+ 96C8 E1               pop hl
 242+ 96C9
 243+ 96C9 1A               ld a,(de)
 244+ 96CA AE               xor (hl)
 245+ 96CB 77               ld (hl),a
 246+ 96CC 2C               inc l
 247+ 96CD 1C               inc e
 248+ 96CE 1A               ld a,(de)
 249+ 96CF AE               xor (hl)
 250+ 96D0 77               ld (hl),a
 251+ 96D1 2C               inc l
 252+ 96D2 1C               inc e
 253+ 96D3 1A               ld a,(de)
 254+ 96D4 AE               xor (hl)
 255+ 96D5 77               ld (hl),a
 256+ 96D6 13               inc de
 257+ 96D7
 258+ 96D7 E1               pop hl
 259+ 96D8
 260+ 96D8 1A               ld a,(de)
 261+ 96D9 AE               xor (hl)
 262+ 96DA 77               ld (hl),a
 263+ 96DB 2C               inc l
 264+ 96DC 1C               inc e
 265+ 96DD 1A               ld a,(de)
 266+ 96DE AE               xor (hl)
 267+ 96DF 77               ld (hl),a
 268+ 96E0 2C               inc l
 269+ 96E1 1C               inc e
 270+ 96E2 1A               ld a,(de)
 271+ 96E3 AE               xor (hl)
 272+ 96E4 77               ld (hl),a
 273+ 96E5 13               inc de
 274+ 96E6
 275+ 96E6 E1               pop hl
 276+ 96E7
 277+ 96E7 1A               ld a,(de)
 278+ 96E8 AE               xor (hl)
 279+ 96E9 77               ld (hl),a
 280+ 96EA 2C               inc l
 281+ 96EB 1C               inc e
 282+ 96EC 1A               ld a,(de)
 283+ 96ED AE               xor (hl)
 284+ 96EE 77               ld (hl),a
 285+ 96EF 2C               inc l
 286+ 96F0 1C               inc e
 287+ 96F1 1A               ld a,(de)
 288+ 96F2 AE               xor (hl)
 289+ 96F3 77               ld (hl),a
 290+ 96F4 13               inc de
 291+ 96F5
 292+ 96F5 E1               pop hl
 293+ 96F6
 294+ 96F6 1A               ld a,(de)
 295+ 96F7 AE               xor (hl)
 296+ 96F8 77               ld (hl),a
 297+ 96F9 2C               inc l
 298+ 96FA 1C               inc e
 299+ 96FB 1A               ld a,(de)
 300+ 96FC AE               xor (hl)
 301+ 96FD 77               ld (hl),a
 302+ 96FE 2C               inc l
 303+ 96FF 1C               inc e
 304+ 9700 1A               ld a,(de)
 305+ 9701 AE               xor (hl)
 306+ 9702 77               ld (hl),a
 307+ 9703 13               inc de
 308+ 9704
 309+ 9704 ED 73 5F 8C      ld (Scanlines_album_SP),sp
 310+ 9708 ED 7B 3D 8C      ld sp,(Stack)
 311+ 970C C9               ret
 312+ 970D
 313+ 970D              Pinta_lento
 314+ 970D
 315+ 970D E1           1 pop hl
 316+ 970E
 317+ 970E 1A               ld a,(de)
 318+ 970F AE               xor (hl)
 319+ 9710 77               ld (hl),a
 320+ 9711 2C               inc l
 321+ 9712 1C               inc e
 322+ 9713 1A               ld a,(de)
 323+ 9714 AE               xor (hl)
 324+ 9715 77               ld (hl),a
 325+ 9716 2C               inc l
 326+ 9717 1C               inc e
 327+ 9718 1A               ld a,(de)
 328+ 9719 AE               xor (hl)
 329+ 971A 77               ld (hl),a
 330+ 971B 13               inc de
 331+ 971C
 332+ 971C 10 EF            djnz 1B
 333+ 971E
 334+ 971E ED 73 5F 8C      ld (Scanlines_album_SP),sp
 335+ 9722 ED 7B 3D 8C      ld sp,(Stack)
 336+ 9726 C9               ret
# file closed: Pinta_Sprites.asm
2103  9727              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9727              ; ******************************************************************************************************************************************************************************************
   2+ 9727              ;
   3+ 9727              ; 26/06/23
   4+ 9727              ;
   5+ 9727              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9727
   7+ 9727              Draw
   8+ 9727
   9+ 9727 CD CD 99     	call Prepara_draw
  10+ 972A 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 972B A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 972C 28 05        	jr z,2F
  13+ 972E
  14+ 972E 3A 0D 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9731 18 0C        	jr 1F
  16+ 9733
  17+ 9733 2A 0B 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9736 22 FE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9739 CD C5 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 973C              ;													; _la esquina superior izquierda de la pantalla.
  21+ 973C
  22+ 973C CD 6C 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 973F
  24+ 973F 3A FB 8B     1 ld a,(Ctrl_0)
  25+ 9742 CB 6F        	bit 5,a
  26+ 9744 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9746
  28+ 9746 CD 5B 97     	call Comprueba_limite_horizontal
  29+ 9749 CD EB 97     	call Comprueba_limite_vertical
  30+ 974C
  31+ 974C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 974C              ; -----------------------
  33+ 974C              ; -----------------------
  34+ 974C              ; -----------------------
  35+ 974C
  36+ 974C CD 41 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 974F CD 78 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9752
  39+ 9752 3A FB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9755 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9757 32 FB 8B     	ld (Ctrl_0),a
  42+ 975A
  43+ 975A C9           	ret
  44+ 975B
  45+ 975B              ; *******************************************************************************************************************************************************************************************
  46+ 975B              ;	21/01/23
  47+ 975B              ;
  48+ 975B              ; 	Comprueba_limite_horizontal.
  49+ 975B              ;
  50+ 975B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 975B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 975B              ;
  53+ 975B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 975B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 975B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 975B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 975B
  58+ 975B
  59+ 975B
  60+ 975B 3A FB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 975E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9760 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9762 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9764 32 FB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9767 18 09            jr 6F
  66+ 9769 CB 5F        1 bit 3,a
  67+ 976B 28 0A            jr z,2F
  68+ 976D E6 F7            and $f7
  69+ 976F 32 FB 8B         ld (Ctrl_0),a
  70+ 9772 CD C5 98     6 call Inicializacion
  71+ 9775 18 5B            jr 5F
  72+ 9777 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9778
  74+ 9778              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9778              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9778
  77+ 9778 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9779 2A 0F 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 977C CD C6 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 977F 67           	ld h,a
  81+ 9780 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9781 CD C6 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9784 67           	ld h,a
  84+ 9785 A7           	and a
  85+ 9786 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9788 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9789 3A 0D 8C     	ld a,(Cuad_objeto)
  88+ 978C FE 02        	cp 2
  89+ 978E 38 1E        	jr c,3F
  90+ 9790 28 1C        	jr z,3F
  91+ 9792 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9793 28 23            jr z,7F
  93+ 9795 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9797 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9799 E1           	pop hl
  96+ 979A
  97+ 979A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 979A              ; _para indicar con E="2" en caso necesario.
  99+ 979A
 100+ 979A E5               push hl
 101+ 979B C5               push bc
 102+ 979C CD C6 94     	call calcula_tercio
 103+ 979F FE 01        	cp 1
 104+ 97A1 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97A3 CD D3 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A6 28 26            jr z,9F
 107+ 97A8 38 24            jr c,9F
 108+ 97AA 1E 00        11 ld e,0
 109+ 97AC 18 22            jr 8F
 110+ 97AE 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97AF 28 07        	jr z, 7F
 112+ 97B1 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97B3 1E 00         	ld e,0
 114+ 97B5 E1           	pop hl
 115+ 97B6 18 04        	jr 4F
 116+ 97B8 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97BA 18 15            jr 10F
 118+ 97BC
 119+ 97BC              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97BC              ; _para indicar con E="2" en caso necesario.
 121+ 97BC
 122+ 97BC E5           4 push hl
 123+ 97BD C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97BE CD C6 94     	call calcula_tercio
 125+ 97C1 FE 01        	cp 1
 126+ 97C3 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C5 CD D3 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C8 28 04            jr z,9F
 129+ 97CA 30 02            jr nc,9F
 130+ 97CC 18 02        	jr 8F
 131+ 97CE 1E 02        9 ld e,2
 132+ 97D0 C1           8 pop bc
 133+ 97D1 E1           10 pop hl
 134+ 97D2 C9           5 ret
 135+ 97D3
 136+ 97D3              ; --------------------
 137+ 97D3              ;
 138+ 97D3              ; 25/08/22
 139+ 97D3
 140+ 97D3 CD C6 94     Comprueba_centro call calcula_tercio
 141+ 97D6 67               ld h,a
 142+ 97D7 08           	ex af,af
 143+ 97D8 FE 02        	cp 2
 144+ 97DA 38 07        	jr c,1F
 145+ 97DC 28 05        	jr z,1F
 146+ 97DE 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97E1 18 03        	jr 2F
 148+ 97E3 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E6 08           2 ex af,af
 150+ 97E7 A7               and a
 151+ 97E8 ED 42            sbc hl,bc
 152+ 97EA C9               ret
 153+ 97EB
 154+ 97EB              ; *********************************************************************************************************************************************************************************************
 155+ 97EB              ;
 156+ 97EB              ;   16/8/22
 157+ 97EB              ;
 158+ 97EB              ;	Comprueba_limite_vertical
 159+ 97EB              ;
 160+ 97EB              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97EB              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97EB              ;
 163+ 97EB
 164+ 97EB 2A FE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97EE 7D           	ld a,l
 166+ 97EF E6 1F        	and $1F
 167+ 97F1 57           	ld d,a
 168+ 97F2 3A 11 8C     	ld a,(Limite_vertical)
 169+ 97F5 BA           	cp d 											; Límite - Posición.
 170+ 97F6 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F7 3A 0D 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97FA CB 47        	bit 0,a
 173+ 97FC 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97FE
 175+ 97FE              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97FE
 177+ 97FE 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97FF 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9801
 180+ 9801              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9801              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9801
 183+ 9801 3A EF 8B         ld a,(Coordenada_X)
 184+ 9804 16 0F            ld d,Centro_izquierda
 185+ 9806 A7               and a
 186+ 9807 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9808 28 1E            jr z,3F
 188+ 980A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 980C              ;                                                    ; _salimos sin modificar nada.
 190+ 980C 18 0E            jr 2F
 191+ 980E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 980F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9811
 194+ 9811              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9811              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9811
 197+ 9811 3A EF 8B         ld a,(Coordenada_X)
 198+ 9814 16 10            ld d,Centro_derecha
 199+ 9816 A7               and a
 200+ 9817 92               sub d
 201+ 9818 28 0E            jr z,3F
 202+ 981A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 981C              ;                                                    ; _salimos sin modificar nada.
 204+ 981C CB 43        2 bit 0,e
 205+ 981E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9820 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9821 CD B5 98         call Modificaccionne
 208+ 9824 C1           	pop bc
 209+ 9825 CD C5 98         call Inicializacion
 210+ 9828 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9829
 212+ 9829              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9829
 214+ 9829 C5           4 push bc
 215+ 982A 01 FD 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 982D 0A           	ld a,(bc)
 217+ 982E 3D           	dec a
 218+ 982F 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9830 7D           	ld a,l
 220+ 9831 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9832 CB 47        	bit 0,a
 222+ 9834 28 03        	jr z,5F
 223+ 9836 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9837 18 2E        	jr 7F
 225+ 9839
 226+ 9839              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9839
 228+ 9839 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 983A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 983B 3A FB 8B     	ld a,(Ctrl_0)
 231+ 983E CB 4F        	bit 1,a
 232+ 9840 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9842 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9843
 235+ 9843              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9843
 237+ 9843 1C               inc e
 238+ 9844 1D               dec e
 239+ 9845 20 07            jr nz,12F
 240+ 9847 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9848 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9849 22 FE 8B     	ld (Posicion_actual),hl
 243+ 984C 18 44        13 jr 9F
 244+ 984E CB 43        12 bit 0,e
 245+ 9850 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9852              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9852 C1           	pop bc
 248+ 9853 18 D3        	jr 3B
 249+ 9855 80           14 add b
 250+ 9856 6F               ld l,a
 251+ 9857 22 FE 8B     	ld (Posicion_actual),hl
 252+ 985A CD B5 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 985D 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 985F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9861 32 FB 8B         ld (Ctrl_0),a
 256+ 9864 F1           	pop af
 257+ 9865 18 2B        	jr 9F
 258+ 9867
 259+ 9867              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9867
 261+ 9867 F5           7 push af
 262+ 9868 3A FB 8B     	ld a,(Ctrl_0)
 263+ 986B CB 47        	bit 0,a
 264+ 986D 20 1D        	jr nz,8F
 265+ 986F F1           	pop af
 266+ 9870
 267+ 9870              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9870
 269+ 9870 1C           	inc e
 270+ 9871 1D               dec e
 271+ 9872 20 07            jr nz,10F
 272+ 9874 90           	sub b
 273+ 9875 6F               ld l,a
 274+ 9876 22 FE 8B     	ld (Posicion_actual),hl
 275+ 9879 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 987B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 987B CB 43        10 bit 0,e
 278+ 987D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 987F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 987F C1           	pop bc
 281+ 9880 18 A6        	jr 3B
 282+ 9882 90           16 sub b
 283+ 9883 6F               ld l,a
 284+ 9884 22 FE 8B     	ld (Posicion_actual),hl
 285+ 9887 CD B5 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 988A 18 06            jr 9F
 287+ 988C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 988E 32 FB 8B         ld (Ctrl_0),a
 289+ 9891 F1           	pop af
 290+ 9892 C1           9 pop bc
 291+ 9893 1E 00        	ld e,0
 292+ 9895 CD C5 98         call Inicializacion
 293+ 9898 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9899 08           	ex af,af
 295+ 989A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 989B 18 8B            jr 3B
 297+ 989D
 298+ 989D              ; --------------------
 299+ 989D
 300+ 989D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 989F CD E8 99     1 call PreviousScan
 302+ 98A2 10 FB            djnz 1B
 303+ 98A4 22 FE 8B     	ld (Posicion_actual),hl
 304+ 98A7 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A8 C9           	ret
 306+ 98A9
 307+ 98A9              ; --------------------
 308+ 98A9
 309+ 98A9 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98AB CD D9 99     1 call NextScan
 311+ 98AE 10 FB            djnz 1B
 312+ 98B0 22 FE 8B     	ld (Posicion_actual),hl
 313+ 98B3 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B4 C9           	ret
 315+ 98B5
 316+ 98B5              ; --------------------
 317+ 98B5              ;
 318+ 98B5              ;	22/01/23
 319+ 98B5              ;
 320+ 98B5              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B5              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B5              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B5
 324+ 98B5
 325+ 98B5              Modificaccionne
 326+ 98B5
 327+ 98B5 3A 0D 8C     	ld a,(Cuad_objeto)
 328+ 98B8 FE 02        	cp 2
 329+ 98BA CC 9D 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98BD DC 9D 98         call c,Modifica_Pos_actual
 331+ 98C0 C8           	ret z
 332+ 98C1 CD A9 98         call Modifica_Pos_actual2
 333+ 98C4 C9               ret
 334+ 98C5
 335+ 98C5              ; *************************************************************************************************************************************************************************************************
 336+ 98C5              ;
 337+ 98C5              ;	13/8/22
 338+ 98C5              ;
 339+ 98C5              ;	Inicializacion
 340+ 98C5              ;
 341+ 98C5              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C5              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C5              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C5              ;
 345+ 98C5              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C5              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C5              ;	_ desaparece/aparece.
 348+ 98C5
 349+ 98C5              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C5              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C5              ;
 352+ 98C5              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C5              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C5              ; 		   [E] ="0"
 355+ 98C5
 356+ 98C5              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C5
 358+ 98C5 CD C6 94     Inicializacion call calcula_tercio
 359+ 98C8 28 36        	jr z,primit
 360+ 98CA E6 02        	and 2
 361+ 98CC 20 07        	jr nz,segmit
 362+ 98CE 7D           	ld a,l
 363+ 98CF FE 7F        	cp $7f
 364+ 98D1 38 2D        	jr c,primit
 365+ 98D3 28 2B        	jr z,primit
 366+ 98D5 CD 3B 99     segmit call column
 367+ 98D8 38 13        	jr c,tercuad
 368+ 98DA 3E 04        cuarcuad ld a,4
 369+ 98DC 32 0D 8C     	ld (Cuad_objeto),a
 370+ 98DF 21 20 48     	ld hl,$4820
 371+ 98E2 22 0F 8C     	ld (Limite_horizontal),hl
 372+ 98E5 21 11 8C     	ld hl,Limite_vertical
 373+ 98E8 36 0D        	ld (hl),$0d
 374+ 98EA 08           	ex af,af
 375+ 98EB 18 3C        	jr 1F
 376+ 98ED              tercuad
 377+ 98ED 3E 03        	ld a,3
 378+ 98EF 32 0D 8C     	ld (Cuad_objeto),a
 379+ 98F2 21 20 48     	ld hl,$4820
 380+ 98F5 22 0F 8C     	ld (Limite_horizontal),hl
 381+ 98F8 21 11 8C     	ld hl,Limite_vertical
 382+ 98FB 36 12        	ld (hl),$12
 383+ 98FD 08           	ex af,af
 384+ 98FE 18 29        	jr 1F
 385+ 9900 CD 3B 99     primit call column
 386+ 9903 38 13        	jr c, primcuad
 387+ 9905              segcuad
 388+ 9905 3E 02        	ld a,2
 389+ 9907 32 0D 8C     	ld (Cuad_objeto),a
 390+ 990A 21 C0 4F     	ld hl,$4fc0
 391+ 990D 22 0F 8C     	ld (Limite_horizontal),hl
 392+ 9910 21 11 8C     	ld hl,Limite_vertical
 393+ 9913 36 0D        	ld (hl),$0d
 394+ 9915 08           	ex af,af
 395+ 9916 18 11        	jr 1F
 396+ 9918              primcuad
 397+ 9918 3E 01        	ld a,1
 398+ 991A 32 0D 8C     	ld (Cuad_objeto),a
 399+ 991D 21 C0 4F     	ld hl,$4fc0
 400+ 9920 22 0F 8C     	ld (Limite_horizontal),hl
 401+ 9923 21 11 8C     	ld hl,Limite_vertical
 402+ 9926 36 12        	ld (hl),$12
 403+ 9928 08           	ex af,af
 404+ 9929
 405+ 9929 C5           1 push bc
 406+ 992A E5           	push hl
 407+ 992B D5           	push de
 408+ 992C
 409+ 992C 2A FE 8B     	ld hl,(Posicion_actual)
 410+ 992F CD E4 94     	call Genera_coordenadas
 411+ 9932
 412+ 9932 D1           	pop de
 413+ 9933 E1           	pop hl
 414+ 9934 C1           	pop bc
 415+ 9935
 416+ 9935 21 FB 8B     	ld hl,Ctrl_0
 417+ 9938 CB EE        	set 5,(hl)
 418+ 993A C9           	ret
 419+ 993B
 420+ 993B              ; ------------------------------------------------------------------------------------------------------------------
 421+ 993B
 422+ 993B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 993B              ;
 424+ 993B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 993B
 426+ 993B 7D           column ld a,l
 427+ 993C E6 1F        	and $1f
 428+ 993E FE 10         	cp $10
 429+ 9940 C9            	ret
 430+ 9941
 431+ 9941              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9941              ;
 433+ 9941              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9941              ;
 435+ 9941              ; 14/12/22
 436+ 9941              ;
 437+ 9941              ;	Modifica: A y BC.
 438+ 9941
 439+ 9941 3A 0D 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9944 E6 01        	and 1
 441+ 9946 28 17        	jr z,1F
 442+ 9948
 443+ 9948              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9948
 445+ 9948 3A EF 8B     	ld a,(Coordenada_X)
 446+ 994B 47           	ld b,a
 447+ 994C 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 994D 79           	ld a,c
 449+ 994E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 994F 38 08        	jr c,2F
 451+ 9951 47           	ld b,a
 452+ 9952 79           	ld a,c
 453+ 9953 90           	sub b
 454+ 9954 32 0E 8C     	ld (Columnas),a
 455+ 9957 18 1B        	jr 4F
 456+ 9959 79           2 ld a,c
 457+ 995A 32 0E 8C     	ld (Columnas),a
 458+ 995D 18 15        	jr 4F
 459+ 995F
 460+ 995F              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 995F
 462+ 995F 3A EF 8B     1 ld a,(Coordenada_X)
 463+ 9962 81           	add c
 464+ 9963 3D           	dec a
 465+ 9964 D6 1F        	sub $1f
 466+ 9966 38 08        	jr c,3F
 467+ 9968 47           	ld b,a
 468+ 9969 79           	ld a,c
 469+ 996A 90           	sub b
 470+ 996B 32 0E 8C     	ld (Columnas),a
 471+ 996E 18 04        	jr 4F
 472+ 9970 79           3 ld a,c
 473+ 9971 32 0E 8C     	ld (Columnas),a
 474+ 9974 D9           4 exx
 475+ 9975 4F           	ld c,a
 476+ 9976 D9           	exx
 477+ 9977 C9            ret
 478+ 9978
 479+ 9978              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9978              ;
 481+ 9978              ;   19/7/23
 482+ 9978              ;
 483+ 9978              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9978              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9978              ;
 486+ 9978              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9978              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9978              ;
 489+ 9978              ;	DESTRUYE: HL,B Y A.
 490+ 9978
 491+ 9978 3A 0D 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 997B FE 02        	cp 2
 493+ 997D 38 18        	jr c,1F
 494+ 997F 28 16        	jr z,1F
 495+ 9981 E6 01        	and 1
 496+ 9983 28 0D        	jr z,3F
 497+ 9985
 498+ 9985              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9985
 500+ 9985 CD C1 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9988
 502+ 9988 7D           9 ld a,l
 503+ 9989 E6 1F        	and $1f
 504+ 998B 28 2A        	jr z,7F
 505+ 998D 2B           	dec hl
 506+ 998E 10 F8        	djnz 9B
 507+ 9990 18 25        	jr 7F
 508+ 9992
 509+ 9992              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9992
 511+ 9992 2A FE 8B     3 ld hl,(Posicion_actual)
 512+ 9995 18 20        	jr 7F
 513+ 9997
 514+ 9997 28 14        1 jr z,2F
 515+ 9999
 516+ 9999              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9999
 518+ 9999 CD C1 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 999C
 520+ 999C 7D           4 ld a,l
 521+ 999D E6 1F        	and $1f
 522+ 999F 28 03        	jr z,6F
 523+ 99A1 2B           	dec hl
 524+ 99A2 10 F8        	djnz 4B
 525+ 99A4 06 0F        6 ld b,15
 526+ 99A6 CD E8 99     5 call PreviousScan
 527+ 99A9 10 FB        	djnz 5B
 528+ 99AB 18 0A        	jr 7F
 529+ 99AD
 530+ 99AD              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99AD
 532+ 99AD CD C1 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99B0 06 0F        	ld b,15
 534+ 99B2 CD E8 99     8 call PreviousScan
 535+ 99B5 10 FB        	djnz 8B
 536+ 99B7
 537+ 99B7 E5           7 push hl
 538+ 99B8 DD E1        	pop ix
 539+ 99BA
 540+ 99BA 2A 00 8C     	ld hl,(Puntero_objeto)
 541+ 99BD E5           	push hl
 542+ 99BE FD E1        	pop iy
 543+ 99C0
 544+ 99C0 C9           	ret
 545+ 99C1
 546+ 99C1              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99C1              ;
 548+ 99C1              ;	2/1/23
 549+ 99C1              ;
 550+ 99C1              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99C1              ;
 552+ 99C1              ;	Tras esta rutina tenemos:
 553+ 99C1              ;
 554+ 99C1              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99C1              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99C1              ;
 557+ 99C1              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99C1
 559+ 99C1 2A FE 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C4 3A 0E 8C     	ld a,(Columnas)
 561+ 99C7 3D           	dec a
 562+ 99C8 20 01        	jr nz,1F
 563+ 99CA 3C           	inc a
 564+ 99CB 47           1 ld b,a
 565+ 99CC C9           	ret
 566+ 99CD
 567+ 99CD              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99CD              ;
 569+ 99CD              ;	Prepara_draw
 570+ 99CD              ;
 571+ 99CD              ;	Es una rutina de carga.
 572+ 99CD              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99CD              ;
 574+ 99CD              ;	FUNCIONAMIENTO:
 575+ 99CD              ;
 576+ 99CD              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99CD              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99CD              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99CD              ;
 580+ 99CD              ;	DESTRUYE:
 581+ 99CD              ;
 582+ 99CD              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99CD
 584+ 99CD 21 FC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99D0 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99D1 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99D2 4E           	ld c,(hl)
 588+ 99D3 2A FE 8B     	ld hl,(Posicion_actual)
 589+ 99D6 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D8 C9           	ret
 591+ 99D9
 592+ 99D9              ;----------------------------------------------------------------------------------------------------------------
 593+ 99D9              ;
 594+ 99D9              ;	5/08/22
 595+ 99D9              ;
 596+ 99D9              ;   NextScan.
 597+ 99D9              ;
 598+ 99D9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99D9              ;
 600+ 99D9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99D9              ;
 602+ 99D9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99D9              ;
 604+ 99D9              ;       DESTRUIDOS: AF y HL !!!
 605+ 99D9              ;
 606+ 99D9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99D9              ;
 608+ 99D9
 609+ 99D9 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99DA 7C               ld a,h
 611+ 99DB E6 07            and 7
 612+ 99DD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99DE
 614+ 99DE 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99DF C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99E1 6F               ld l,a
 617+ 99E2 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99E3
 619+ 99E3 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E4 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E6 67               ld h,a
 622+ 99E7 C9               ret
 623+ 99E8
 624+ 99E8              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E8              ;
 626+ 99E8              ;	5/08/22
 627+ 99E8              ;
 628+ 99E8              ;   PreviousScan.
 629+ 99E8              ;
 630+ 99E8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E8              ;
 632+ 99E8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E8              ;
 634+ 99E8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E8              ;
 636+ 99E8              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E8              ;
 638+ 99E8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E8              ;
 640+ 99E8
 641+ 99E8 7C           PreviousScan ld a,h
 642+ 99E9 25               dec h               ; Dec H.
 643+ 99EA E6 07            and 7
 644+ 99EC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99ED
 646+ 99ED 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99EE D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99F0 6F               ld l,a
 649+ 99F1 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99F2
 651+ 99F2 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99F3 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F5 67               ld h,a
 654+ 99F6 C9               ret
 655+ 99F7
 656+ 99F7
 657+ 99F7
 658+ 99F7
 659+ 99F7
 660+ 99F7
 661+ 99F7
 662+ 99F7
 663+ 99F7
 664+ 99F7
 665+ 99F7
 666+ 99F7
# file closed: Draw_XOR.asm
2104  99F7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F7
   2+ 99F7              ; ******************************************************************************************************************************************************************************************
   3+ 99F7              ;
   4+ 99F7              ;   20/05/23
   5+ 99F7              ;
   6+ 99F7              ;	Recompone_posicion_inicio
   7+ 99F7              ;
   8+ 99F7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F7              ;	_ a una u otra rutina.
  12+ 99F7
  13+ 99F7              Recompone_posicion_inicio
  14+ 99F7
  15+ 99F7 2A 0B 8C     	ld hl,(Posicion_inicio)
  16+ 99FA 7D           	ld a,l
  17+ 99FB E6 1F        	and $1f
  18+ 99FD 28 16        	jr z,1F
  19+ 99FF
  20+ 99FF FE 1F        	cp $1f
  21+ 9A01 28 0D        	jr z,3F
  22+ 9A03
  23+ 9A03 21 FA 8B     	ld hl,Ctrl_2
  24+ 9A06 CB C6        	set 0,(hl)
  25+ 9A08 2A 00 8C     	ld hl,(Puntero_objeto)
  26+ 9A0B 22 2C 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A0E 18 08        	jr 2F
  28+ 9A10
  29+ 9A10 CD BE 9B     3 call Mov_left
  30+ 9A13 18 03        	jr 2F
  31+ 9A15
  32+ 9A15 CD 9B 9A     1 call Mov_right
  33+ 9A18 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A1B 22 00 8C     	ld (Puntero_objeto),hl
  35+ 9A1E C9           	ret
  36+ 9A1F
  37+ 9A1F              ; ******************************************************************************************************************************************************************************************
  38+ 9A1F              ;
  39+ 9A1F              ;   27/05/23
  40+ 9A1F              ;
  41+ 9A1F              ;	Mov_down
  42+ 9A1F              ;
  43+ 9A1F              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A1F              ;
  45+ 9A1F              ;
  46+ 9A1F              Mov_down
  47+ 9A1F
  48+ 9A1F CD 89 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A22              ;																	; _ repone (Puntero_objeto).
  50+ 9A22 21 FB 8B     	ld hl,Ctrl_0
  51+ 9A25 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A27              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A27              ; 																	; _ en el caso de que no lo haya.
  54+ 9A27 3A 16 8C     	ld a,(Vel_down)
  55+ 9A2A 47           	ld b,a
  56+ 9A2B 2A FE 8B         ld hl,(Posicion_actual)
  57+ 9A2E CD C6 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A31 E6 02        	and 2
  59+ 9A33 28 17        	jr z,1F
  60+ 9A35
  61+ 9A35              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A35              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A35
  64+ 9A35 7C           	ld a,h
  65+ 9A36 FE 57        	cp $57
  66+ 9A38 20 12        	jr nz,1F
  67+ 9A3A
  68+ 9A3A 7D           	ld a,l
  69+ 9A3B C6 20        	add $20
  70+ 9A3D 30 0D        	jr nc,1F
  71+ 9A3F
  72+ 9A3F              ; ------------------------------
  73+ 9A3F              ;
  74+ 9A3F              ;	12/01/24
  75+ 9A3F
  76+ 9A3F              ;	call Reaparece_arriba
  77+ 9A3F CD 4B 9D     	call Reinicio
  78+ 9A42
  79+ 9A42              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A42
  81+ 9A42 3A 65 8C     	ld a,(Ctrl_3)
  82+ 9A45 CB CF        	set 1,a
  83+ 9A47 32 65 8C     	ld (Ctrl_3),a
  84+ 9A4A
  85+ 9A4A 18 08        	jr 3F
  86+ 9A4C              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A4C              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A4C              ; ------------------------------
  89+ 9A4C
  90+ 9A4C CD D9 99     1 call NextScan
  91+ 9A4F 22 FE 8B     	ld (Posicion_actual),hl
  92+ 9A52 10 DA            djnz 2B
  93+ 9A54 CD E4 94     3 call Genera_coordenadas
  94+ 9A57 C9           	ret
  95+ 9A58
  96+ 9A58              ; ******************************************************************************************************************************************************************************************
  97+ 9A58              ;
  98+ 9A58              ;   27/05/23
  99+ 9A58              ;
 100+ 9A58              ;	Mov_up
 101+ 9A58              ;
 102+ 9A58              ; 	Mueve el Sprite hacia arriba.
 103+ 9A58              ;
 104+ 9A58              ;
 105+ 9A58              Mov_up
 106+ 9A58
 107+ 9A58 CD 89 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A5B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A5B 21 FB 8B     	ld hl,Ctrl_0
 110+ 9A5E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A60              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A60              ; 																		; _ en el caso de que no lo haya.
 113+ 9A60 3A 15 8C     	ld a,(Vel_up)
 114+ 9A63 47           	ld b,a
 115+ 9A64 2A FE 8B     	ld hl,(Posicion_actual)
 116+ 9A67 CD C6 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A6A A7           	and a
 118+ 9A6B 20 10        	jr nz,1F
 119+ 9A6D
 120+ 9A6D              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A6D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A6D
 123+ 9A6D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A6E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A70 20 0B            jr nz,1F
 126+ 9A72 7D               ld a,l
 127+ 9A73 D6 20            sub $20
 128+ 9A75 30 06            jr nc,1F
 129+ 9A77 25               dec h
 130+ 9A78
 131+ 9A78              ; -----------------------------
 132+ 9A78 CD 2C 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A7B              ;	call Reinicio
 134+ 9A7B              ; -----------------------------
 135+ 9A7B
 136+ 9A7B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A7D CD E8 99     1 call PreviousScan
 138+ 9A80 22 FE 8B     	ld (Posicion_actual),hl
 139+ 9A83 10 E2            djnz 3B
 140+ 9A85 CD E4 94     2 call Genera_coordenadas
 141+ 9A88 C9           	ret
 142+ 9A89
 143+ 9A89              ; -----------------------------
 144+ 9A89              ;
 145+ 9A89              ;	27/5/23
 146+ 9A89              ;
 147+ 9A89              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A89              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A89              ;
 150+ 9A89              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A89              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A89              ;
 153+ 9A89              ;	Modifica: A y (Puntero_objeto).
 154+ 9A89
 155+ 9A89 3A FA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A8C CB 47        	bit 0,a
 157+ 9A8E C8           	ret z
 158+ 9A8F CB 87        	res 0,a
 159+ 9A91 32 FA 8B     	ld (Ctrl_2),a
 160+ 9A94 2A 2C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A97 22 00 8C     	ld (Puntero_objeto),hl
 162+ 9A9A C9           	ret
 163+ 9A9B
 164+ 9A9B              ; ******************************************************************************************************************************************************************************************
 165+ 9A9B              ;
 166+ 9A9B              ;	19/10/22
 167+ 9A9B              ;
 168+ 9A9B              ;	Mov_right.
 169+ 9A9B              ;
 170+ 9A9B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A9B              ;
 172+ 9A9B
 173+ 9A9B 3A FB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A9E CB 77        	bit 6,a
 175+ 9AA0 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AA2
 177+ 9AA2 CD DA 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA5 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA6
 180+ 9AA6 21 FB 8B     	ld hl,Ctrl_0
 181+ 9AA9 CB E6        	set 4,(hl)
 182+ 9AAB 18 52        	jr 8F
 183+ 9AAD
 184+ 9AAD 21 FB 8B     10 ld hl,Ctrl_0
 185+ 9AB0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AB2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AB2              ; 																	; _ en el caso de que no lo haya.
 188+ 9AB2 3A EF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB5 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB7 20 46        	jr nz,8F
 191+ 9AB9
 192+ 9AB9 3A 02 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9ABC A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9ABD 28 40        	jr z,8F
 195+ 9ABF
 196+ 9ABF              ; ---------- ---------- ----------
 197+ 9ABF              ;
 198+ 9ABF              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9ABF
 200+ 9ABF 3A 14 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AC2 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC4 28 11        	jr z,1F
 203+ 9AC6 38 06        	jr c,6F
 204+ 9AC8 FE 04        	cp 4
 205+ 9ACA 28 14        	jr z,7F
 206+ 9ACC 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ACE
 208+ 9ACE              ; ---------- ---------- ----------
 209+ 9ACE              ;
 210+ 9ACE              ; Perfiles de velocidad
 211+ 9ACE              ;
 212+ 9ACE
 213+ 9ACE 3A 02 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AD1 FE FE        	cp $fe
 215+ 9AD3 20 2A        	jr nz,8F
 216+ 9AD5 18 10        	jr 3F
 217+ 9AD7 3A 02 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ADA FE FD        	cp $fd
 219+ 9ADC 20 21        	jr nz,8F
 220+ 9ADE 18 07        	jr 3F
 221+ 9AE0 3A 02 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AE3 FE FB        	cp $fb
 223+ 9AE5 20 18        	jr nz,8F
 224+ 9AE7
 225+ 9AE7              ; ---------- ---------- ----------
 226+ 9AE7
 227+ 9AE7              3
 228+ 9AE7 CD 1A 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AEA              ;	call Reinicio
 230+ 9AEA
 231+ 9AEA              ; ---------- ---------- ----------
 232+ 9AEA              ;
 233+ 9AEA              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AEA
 235+ 9AEA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AEC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AED CD 06 9B     	call DESPLZ_DER
 238+ 9AF0 C1           	pop bc
 239+ 9AF1 10 F9        	djnz 5B
 240+ 9AF3 2A FE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF6 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF7 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9AFA CD E4 94     	call Genera_coordenadas
 244+ 9AFD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AFF
 246+ 9AFF              ; ---------- ---------- ----------
 247+ 9AFF
 248+ 9AFF 2A FE 8B     8 ld hl,(Posicion_actual)
 249+ 9B02 CD 06 9B     	call DESPLZ_DER
 250+ 9B05 C9           2 ret
 251+ 9B06
 252+ 9B06              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B06              ;
 254+ 9B06              ;	22/9/22
 255+ 9B06              ;
 256+ 9B06
 257+ 9B06 CD 15 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B09 CD 61 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B0C CD 8A 9B         call Ciclo_completo
 260+ 9B0F 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B12 CB FE        	set 7,(hl)
 262+ 9B14 C9           	ret
 263+ 9B15
 264+ 9B15              ; ******************************************************************************************************************************************************************************************
 265+ 9B15              ;	15/02/23
 266+ 9B15              ;
 267+ 9B15
 268+ 9B15 3A 14 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B18 47           	ld b,a
 270+ 9B19 2A 07 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B1C 23           1 inc hl
 272+ 9B1D 23           	inc hl
 273+ 9B1E 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B20 22 07 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B23 CD 1A 91     	call Extrae_address
 276+ 9B26 22 00 8C     	ld (Puntero_objeto),hl
 277+ 9B29
 278+ 9B29              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B29
 280+ 9B29              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B29              ; Cuántos movimientos hemos hecho ??
 282+ 9B29              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B29
 284+ 9B29 2A 03 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B2C EB           	ex de,hl
 286+ 9B2D A7           	and a
 287+ 9B2E ED 52        	sbc hl,de
 288+ 9B30 CB 3D        	srl l
 289+ 9B32 3E 08        6 ld a,8
 290+ 9B34 95           	sub l
 291+ 9B35 30 1E        	jr nc,3F
 292+ 9B37
 293+ 9B37              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B37              ; B="0".
 295+ 9B37
 296+ 9B37 04           4 inc b
 297+ 9B38 3C           	inc a
 298+ 9B39 20 FC        	jr nz,4B
 299+ 9B3B 78           	ld a,b
 300+ 9B3C 08           	ex af,af
 301+ 9B3D 2A 03 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B40 23           5 inc hl
 303+ 9B41 23           	inc hl
 304+ 9B42 10 FC        	djnz 5B
 305+ 9B44 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B47 CD 1A 91     	call Extrae_address
 307+ 9B4A 22 00 8C     	ld (Puntero_objeto),hl
 308+ 9B4D
 309+ 9B4D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B4D              ; _(Posicion_actual).
 311+ 9B4D
 312+ 9B4D 21 FE 8B     	ld hl,Posicion_actual
 313+ 9B50 34           	inc (hl)
 314+ 9B51 08               ex af,af
 315+ 9B52 6F           	ld l,a
 316+ 9B53 18 DD        	jr 6B
 317+ 9B55
 318+ 9B55              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B55
 320+ 9B55 47           3 ld b,a
 321+ 9B56 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B59 23           2 inc hl
 323+ 9B5A 23           	inc hl
 324+ 9B5B 10 FC        	djnz 2B
 325+ 9B5D 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B60 C9           8 ret
 327+ 9B61
 328+ 9B61              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B61              ;
 330+ 9B61              ;	24/7/22
 331+ 9B61              ;
 332+ 9B61              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B61              ;
 334+ 9B61              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B61              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B61              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B61
 338+ 9B61 3A 02 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B64 A7           	and a
 340+ 9B65 20 1F        	jr nz,1F
 341+ 9B67 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B69 32 02 8C         ld (CTRL_DESPLZ),a
 343+ 9B6C
 344+ 9B6C 21 FD 8B     	ld hl,Columns
 345+ 9B6F 34           	inc (hl)
 346+ 9B70 3A 0D 8C     	ld a,(Cuad_objeto)
 347+ 9B73 E6 01        	and 1
 348+ 9B75 28 0F        	jr z,1F
 349+ 9B77 2A FE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B7A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B7B 22 FE 8B     	ld (Posicion_actual),hl
 352+ 9B7E CD E4 94     	call Genera_coordenadas
 353+ 9B81 CD E6 9C     	call Inc_CTRL_DESPLZ
 354+ 9B84 18 03        	jr 2F
 355+ 9B86 CD E6 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B89 C9           2 ret
 357+ 9B8A
 358+ 9B8A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B8A              ;
 360+ 9B8A              ;	24/7/22
 361+ 9B8A              ;
 362+ 9B8A              ;	Ciclo_completo.
 363+ 9B8A              ;
 364+ 9B8A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B8A              ;
 366+ 9B8A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B8A              ; 	Decrementamos (Columns).
 368+ 9B8A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B8A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B8A
 371+ 9B8A
 372+ 9B8A 3A 02 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B8D FE FF        	cp $ff
 374+ 9B8F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B91 E6 F0        	and $f0
 376+ 9B93 20 28        	jr nz,3F
 377+ 9B95
 378+ 9B95              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B95
 380+ 9B95 3A 02 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B98 47           	ld b,a
 382+ 9B99 3E F8        	ld a,$f8
 383+ 9B9B 80           	add b
 384+ 9B9C 32 02 8C     	ld (CTRL_DESPLZ),a
 385+ 9B9F 18 1C        	jr 3F
 386+ 9BA1 21 FD 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA4 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA5 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA6 32 02 8C     	ld (CTRL_DESPLZ),a
 390+ 9BA9 3A 0D 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BAC E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BAE 20 0A        	jr nz,2F
 393+ 9BB0 2A FE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BB3 23           	inc hl
 395+ 9BB4 22 FE 8B     	ld (Posicion_actual),hl
 396+ 9BB7 CD E4 94     	call Genera_coordenadas
 397+ 9BBA
 398+ 9BBA              ; Inicia el puntero de Sprite.
 399+ 9BBA
 400+ 9BBA CD 2F 91     2 call Inicia_puntero_objeto_der
 401+ 9BBD C9           3 ret
 402+ 9BBE
 403+ 9BBE              ; ******************************************************************************************************************************************************************************************
 404+ 9BBE              ;
 405+ 9BBE              ;	15/02/23
 406+ 9BBE              ;
 407+ 9BBE              ;	Mov_left.
 408+ 9BBE              ;
 409+ 9BBE              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BBE              ;
 411+ 9BBE              Mov_left
 412+ 9BBE
 413+ 9BBE 21 FB 8B     	ld hl,Ctrl_0
 414+ 9BC1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BC3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BC3              ; 																	; _ en el caso de que no lo haya.
 417+ 9BC3 3A FB 8B     	ld a,(Ctrl_0)
 418+ 9BC6 CB 77        	bit 6,a
 419+ 9BC8 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BCA
 421+ 9BCA CD E0 9C     	call Stop_Amadeus_left
 422+ 9BCD C8           	ret z
 423+ 9BCE 20 4A        	jr nz,8F
 424+ 9BD0
 425+ 9BD0 3A EF 8B     11 ld a,(Coordenada_X)
 426+ 9BD3 A7           	and a
 427+ 9BD4 20 44        	jr nz,8F
 428+ 9BD6
 429+ 9BD6 3A 02 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BD9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BDA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BDC
 433+ 9BDC              ; ---------- ---------- ----------
 434+ 9BDC
 435+ 9BDC 3A 13 8C     	ld a,(Vel_left)
 436+ 9BDF FE 02        	cp 2
 437+ 9BE1 28 0F        	jr z,1F
 438+ 9BE3 38 04        	jr c,6F
 439+ 9BE5 FE 04        	cp 4
 440+ 9BE7 28 12        	jr z,7F
 441+ 9BE9
 442+ 9BE9              ; ---------- ---------- ----------
 443+ 9BE9
 444+ 9BE9 3A 02 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BEC FE F8        	cp $f8
 446+ 9BEE 20 2A        	jr nz,8F
 447+ 9BF0 18 10        	jr 4F
 448+ 9BF2 3A 02 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9BF5 FE F9        	cp $f9
 450+ 9BF7 20 21        	jr nz,8F
 451+ 9BF9 18 07        	jr 4F
 452+ 9BFB 3A 02 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9BFE FE FB        	cp $fb
 454+ 9C00 20 18        	jr nz,8F
 455+ 9C02
 456+ 9C02              ; ---------- ---------- ----------
 457+ 9C02
 458+ 9C02              4
 459+ 9C02 CD 08 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C05              ;	call Reinicio
 461+ 9C05
 462+ 9C05              ; ---------- ---------- ----------
 463+ 9C05
 464+ 9C05 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C07 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C08
 467+ 9C08              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C08              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C08
 470+ 9C08 CD 21 9C     	call DESPLZ_IZQ
 471+ 9C0B C1           	pop bc
 472+ 9C0C 10 F9        	djnz 5B
 473+ 9C0E 2A FE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C11 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C12 22 FE 8B     	ld (Posicion_actual),hl
 476+ 9C15 CD E4 94     	call Genera_coordenadas
 477+ 9C18 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C1A
 479+ 9C1A              ; ---------- ---------- ----------
 480+ 9C1A
 481+ 9C1A              ; Movemos, no hay recolocación.
 482+ 9C1A
 483+ 9C1A 2A FE 8B     8 ld hl,(Posicion_actual)
 484+ 9C1D CD 21 9C     	call DESPLZ_IZQ
 485+ 9C20 C9           2 ret
 486+ 9C21
 487+ 9C21              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C21              ;
 489+ 9C21              ;	22/9/22
 490+ 9C21
 491+ 9C21              DESPLZ_IZQ
 492+ 9C21
 493+ 9C21 CD 30 9C     	call Desplaza_izquierda
 494+ 9C24 CD 7C 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C27 CD A4 9C     	call Ciclo_completo_2
 496+ 9C2A 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C2D CB BE        	res 7,(hl)
 498+ 9C2F C9           	ret
 499+ 9C30
 500+ 9C30              Desplaza_izquierda
 501+ 9C30
 502+ 9C30 3A 13 8C     	ld a,(Vel_left)
 503+ 9C33 47           	ld b,a
 504+ 9C34 2A 09 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C37 23           1 inc hl
 506+ 9C38 23           	inc hl
 507+ 9C39 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C3B 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C3E CD 1A 91     	call Extrae_address
 510+ 9C41 22 00 8C     	ld (Puntero_objeto),hl
 511+ 9C44
 512+ 9C44              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C44
 514+ 9C44              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C44              ; Cuántos movimientos hemos hecho ??
 516+ 9C44              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C44
 518+ 9C44 2A 05 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C47 EB           	ex de,hl
 520+ 9C48 A7           	and a
 521+ 9C49 ED 52        	sbc hl,de
 522+ 9C4B CB 3D        	srl l
 523+ 9C4D 3E 08        6 ld a,8
 524+ 9C4F 95           	sub l
 525+ 9C50 30 1E        	jr nc,3F
 526+ 9C52
 527+ 9C52              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C52              ; B="0".
 529+ 9C52
 530+ 9C52 04           4 inc b
 531+ 9C53 3C           	inc a
 532+ 9C54 20 FC        	jr nz,4B
 533+ 9C56 78           	ld a,b
 534+ 9C57 08           	ex af,af
 535+ 9C58 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C5B 23           5 inc hl
 537+ 9C5C 23           	inc hl
 538+ 9C5D 10 FC        	djnz 5B
 539+ 9C5F 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C62 CD 1A 91     	call Extrae_address
 541+ 9C65 22 00 8C     	ld (Puntero_objeto),hl
 542+ 9C68
 543+ 9C68              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C68              ; _(Posicion_actual).
 545+ 9C68
 546+ 9C68 21 FE 8B     	ld hl,Posicion_actual
 547+ 9C6B 35           	dec (hl)
 548+ 9C6C 08           	ex af,af
 549+ 9C6D 6F           	ld l,a
 550+ 9C6E 18 DD        	jr 6B
 551+ 9C70
 552+ 9C70              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C70
 554+ 9C70 47           3 ld b,a
 555+ 9C71 2A 03 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C74 23           2 inc hl
 557+ 9C75 23           	inc hl
 558+ 9C76 10 FC        	djnz 2B
 559+ 9C78 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C7B C9           8 ret
 561+ 9C7C
 562+ 9C7C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C7C              ;
 564+ 9C7C              ;	modifica_parametros_1er_DESPLZ
 565+ 9C7C              ;
 566+ 9C7C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C7C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C7C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C7C
 570+ 9C7C 3A 02 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C7F A7           	and a
 572+ 9C80 20 1E        	jr nz,1F
 573+ 9C82 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C83 32 02 8C         ld (CTRL_DESPLZ),a
 575+ 9C86 21 FD 8B     	ld hl,Columns
 576+ 9C89 34           	inc (hl)
 577+ 9C8A 3A 0D 8C     	ld a,(Cuad_objeto)
 578+ 9C8D E6 01        	and 1
 579+ 9C8F 20 0F        	jr nz,1F
 580+ 9C91 2A FE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C94 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C95 22 FE 8B     	ld (Posicion_actual),hl
 583+ 9C98 CD E4 94     	call Genera_coordenadas
 584+ 9C9B CD F7 9C     	call Dec_CTRL_DESPLZ
 585+ 9C9E 18 03        	jr 2F
 586+ 9CA0 CD F7 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CA3 C9           2 ret
 588+ 9CA4
 589+ 9CA4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA4
 591+ 9CA4 3A 02 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA7 FE F7        	cp $f7
 593+ 9CA9 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CAB 30 2C        	jr nc,3F
 595+ 9CAD
 596+ 9CAD              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CAD
 598+ 9CAD 06 00        	ld b,0
 599+ 9CAF 04           4 inc b
 600+ 9CB0 3C           	inc a
 601+ 9CB1 FE F7        	cp $f7
 602+ 9CB3 20 FA        	jr nz,4B
 603+ 9CB5 3E FF        	ld a,$ff
 604+ 9CB7 90           	sub b
 605+ 9CB8 32 02 8C     	ld (CTRL_DESPLZ),a
 606+ 9CBB 18 1C        	jr 3F
 607+ 9CBD
 608+ 9CBD              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CBD
 610+ 9CBD 21 FD 8B     1 ld hl,Columns
 611+ 9CC0 35           	dec (hl)
 612+ 9CC1 AF           	xor a
 613+ 9CC2 32 02 8C     	ld (CTRL_DESPLZ),a
 614+ 9CC5 3A 0D 8C     	ld a,(Cuad_objeto)
 615+ 9CC8 E6 01        	and 1
 616+ 9CCA 28 0A        	jr z,2F
 617+ 9CCC 2A FE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CCF 2B           	dec hl
 619+ 9CD0 22 FE 8B     	ld (Posicion_actual),hl
 620+ 9CD3 CD E4 94     	call Genera_coordenadas
 621+ 9CD6
 622+ 9CD6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD6
 624+ 9CD6 CD 42 91     2 call Inicia_puntero_objeto_izq
 625+ 9CD9 C9           3 ret
 626+ 9CDA
 627+ 9CDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CDA              ;
 629+ 9CDA              ;	19/10/22
 630+ 9CDA              ;
 631+ 9CDA              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CDA              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CDA
 634+ 9CDA 3A EF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CDD FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CDF C9           	ret
 637+ 9CE0
 638+ 9CE0              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CE0              ;
 640+ 9CE0              ;	19/10/22
 641+ 9CE0              ;
 642+ 9CE0              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CE0              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CE0
 645+ 9CE0 3A EF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CE3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE5 C9           	ret
 648+ 9CE6
 649+ 9CE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE6              ;
 651+ 9CE6              ;	24/7/22
 652+ 9CE6              ;
 653+ 9CE6              ;	Inc_CTRL_DESPLZ
 654+ 9CE6              ;
 655+ 9CE6              ;
 656+ 9CE6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE6
 658+ 9CE6 21 02 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CE9 3A 14 8C     	ld a,(Vel_right)
 660+ 9CEC A7           	and a
 661+ 9CED 28 06        	jr z,1F
 662+ 9CEF 47           	ld b,a
 663+ 9CF0 34           3 inc (hl)
 664+ 9CF1 10 FD        	djnz 3B
 665+ 9CF3 18 01        	jr 2F
 666+ 9CF5 34           1 inc (hl)
 667+ 9CF6 C9           2 ret
 668+ 9CF7
 669+ 9CF7              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF7              ;
 671+ 9CF7              ;	5/2/23
 672+ 9CF7              ;
 673+ 9CF7              ;	Dec_CTRL_DESPLZ
 674+ 9CF7              ;
 675+ 9CF7              ;
 676+ 9CF7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF7
 678+ 9CF7 21 02 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CFA 3A 13 8C     	ld a,(Vel_left)
 680+ 9CFD A7           	and a
 681+ 9CFE 28 06        	jr z,1F
 682+ 9D00 47           	ld b,a
 683+ 9D01 35           3 dec (hl)
 684+ 9D02 10 FD        	djnz 3B
 685+ 9D04 18 01        	jr 2F
 686+ 9D06 35           1 dec (hl)
 687+ 9D07 C9           2 ret
 688+ 9D08
 689+ 9D08              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D08
 691+ 9D08 2A FE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D0B 01 1F 00     	ld bc,31
 693+ 9D0E A7           	and a
 694+ 9D0F ED 4A        	adc hl,bc
 695+ 9D11 22 FE 8B     	ld (Posicion_actual),hl
 696+ 9D14 21 FB 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D17 CB C6        	set 0,(hl)
 698+ 9D19 C9           	ret
 699+ 9D1A
 700+ 9D1A              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D1A
 702+ 9D1A 2A FE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D1D 01 1F 00     	ld bc,31
 704+ 9D20 A7           	and a
 705+ 9D21 ED 42        	sbc hl,bc
 706+ 9D23 22 FE 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D26 21 FB 8B     	ld hl,Ctrl_0
 708+ 9D29 CB CE        	set 1,(hl)
 709+ 9D2B C9           	ret
 710+ 9D2C
 711+ 9D2C              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D2C
 713+ 9D2C 24           Reaparece_abajo inc h
 714+ 9D2D 01 E0 17     	ld bc,$17e0
 715+ 9D30 A7           	and a
 716+ 9D31 ED 4A        	adc hl,bc
 717+ 9D33 22 FE 8B     	ld (Posicion_actual),hl
 718+ 9D36 21 FB 8B     	ld hl,Ctrl_0
 719+ 9D39 CB D6        	set 2,(hl)
 720+ 9D3B C9           	ret
 721+ 9D3C
 722+ 9D3C              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D3C
 724+ 9D3C 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D3F A7           	and a
 726+ 9D40 ED 42        	sbc hl,bc
 727+ 9D42 22 FE 8B     	ld (Posicion_actual),hl
 728+ 9D45 21 FB 8B     	ld hl,Ctrl_0
 729+ 9D48 CB DE        	set 3,(hl)
 730+ 9D4A C9           	ret
 731+ 9D4B
 732+ 9D4B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D4B              ;
 734+ 9D4B              ;	15/07/23
 735+ 9D4B
 736+ 9D4B              Reinicio
 737+ 9D4B
 738+ 9D4B              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D4B
 740+ 9D4B AF           	xor a
 741+ 9D4C 21 23 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D4F CD 6D 9D     	call Limpia_contenido_hl
 743+ 9D52
 744+ 9D52 21 FE 8B     	ld hl,Posicion_actual
 745+ 9D55 CD 6D 9D     	call Limpia_contenido_hl
 746+ 9D58
 747+ 9D58 CD 4F 93     	call Situa_Puntero_indice_mov
 748+ 9D5B CD 6C 9E     	call Inicia_Puntero_mov
 749+ 9D5E
 750+ 9D5E 21 25 8C     	ld hl,Incrementa_puntero
 751+ 9D61 06 05        	ld b,5
 752+ 9D63 77           1 ld (hl),a
 753+ 9D64 23           	inc hl
 754+ 9D65 10 FC        	djnz 1B
 755+ 9D67
 756+ 9D67 21 FA 8B     	ld hl,Ctrl_2
 757+ 9D6A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D6C
 759+ 9D6C C9           	ret
 760+ 9D6D
 761+ 9D6D 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D6E 23           	inc hl
 763+ 9D6F 77           	ld (hl),a
 764+ 9D70 C9           	ret
 765+ 9D71
 766+ 9D71              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D71              ;
 768+ 9D71              ;	18/6/24
 769+ 9D71              ;
 770+ 9D71
 771+ 9D71              Amadeus_a_izquierda
 772+ 9D71
 773+ 9D71              ;	Actualiza contador de movimientos.
 774+ 9D71
 775+ 9D71 21 C0 89     	ld hl,Comm_Amadeus
 776+ 9D74 35           	dec (hl)
 777+ 9D75 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D77
 779+ 9D77 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D7A 2B           	dec hl
 781+ 9D7B 2B           	dec hl
 782+ 9D7C 2B           	dec hl
 783+ 9D7D 2B           	dec hl
 784+ 9D7E 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D81
 786+ 9D81 21 65 8C     	ld hl,Ctrl_3
 787+ 9D84 CB EE        	set 5,(hl)
 788+ 9D86
 789+ 9D86 C9           	ret
 790+ 9D87
 791+ 9D87 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D88 C9           	ret
 793+ 9D89
 794+ 9D89
 795+ 9D89              Amadeus_a_derecha
 796+ 9D89
 797+ 9D89              ;	Actualiza contador de movimientos.
 798+ 9D89
 799+ 9D89 21 C0 89     	ld hl,Comm_Amadeus
 800+ 9D8C 34           	inc (hl)
 801+ 9D8D 3E 7A        	ld a,$7a
 802+ 9D8F BE           	cp (hl)
 803+ 9D90 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D92
 805+ 9D92 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D95 23           	inc hl
 807+ 9D96 23           	inc hl
 808+ 9D97 23           	inc hl
 809+ 9D98 23           	inc hl
 810+ 9D99 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D9C
 812+ 9D9C 21 65 8C     	ld hl,Ctrl_3
 813+ 9D9F CB EE        	set 5,(hl)
 814+ 9DA1 C9           	ret
 815+ 9DA2
 816+ 9DA2 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DA3 C9           	ret
# file closed: Direcciones.asm
2105  9DA4              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA4              ; ----- ----- ----- ----- -----
   2+ 9DA4              ;
   3+ 9DA4              ;   28/12/23
   4+ 9DA4
   5+ 9DA4              Movimiento
   6+ 9DA4
   7+ 9DA4              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA4
   9+ 9DA4 3A FA 8B         ld a,(Ctrl_2)
  10+ 9DA7 CB 57            bit 2,a
  11+ 9DA9 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DAB
  13+ 9DAB 2A 21 8C         ld hl,(Puntero_mov)
  14+ 9DAE 7E               ld a,(hl)
  15+ 9DAF
  16+ 9DAF              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DAF
  18+ 9DAF              Inicia_desplazamiento.
  19+ 9DAF
  20+ 9DAF              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DAF
  22+ 9DAF CD A2 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DB2
  24+ 9DB2              ; Iniciamos (Repetimos_mov).
  25+ 9DB2
  26+ 9DB2 7E               ld a,(hl)
  27+ 9DB3 E6 0F            and $0f
  28+ 9DB5 32 27 8C         ld (Repetimos_desplazamiento),a
  29+ 9DB8 32 28 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DBB
  31+ 9DBB              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DBB
  33+ 9DBB 23               inc hl
  34+ 9DBC 7E               ld a,(hl)
  35+ 9DBD 32 2A 8C         ld (Cola_de_desplazamiento),a
  36+ 9DC0 2B               dec hl
  37+ 9DC1
  38+ 9DC1 21 FA 8B         ld hl,Ctrl_2
  39+ 9DC4 CB D6            set 2,(hl)
  40+ 9DC6
  41+ 9DC6              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC6              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC6
  44+ 9DC6              Desplazamiento_iniciado
  45+ 9DC6
  46+ 9DC6 CD 76 9E         call Aplica_desplazamiento
  47+ 9DC9
  48+ 9DC9              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DC9
  50+ 9DC9 3A 65 8C         ld a,(Ctrl_3)
  51+ 9DCC CB 4F            bit 1,a
  52+ 9DCE C0               ret nz
  53+ 9DCF
  54+ 9DCF 21 27 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DD2 35               dec (hl)
  56+ 9DD3 C0               ret nz
  57+ 9DD4
  58+ 9DD4              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD4              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD4              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD4
  62+ 9DD4 3A 2A 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD7 A7               and a
  64+ 9DD8 CC CB 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DDB 28 30            jr z,Reinicia_el_movimiento
  66+ 9DDD
  67+ 9DDD FE FF            cp $ff
  68+ 9DDF 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DE1
  70+ 9DE1 FE FE            cp $fe
  71+ 9DE3 CC 50 9E         call z,Fijamos_bucle
  72+ 9DE6 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE8
  74+ 9DE8 FE FD            cp $fd
  75+ 9DEA 20 11            jr nz,1F
  76+ 9DEC
  77+ 9DEC              ; ---
  78+ 9DEC              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DEC
  80+ 9DEC 3A FA 8B         ld a,(Ctrl_2)
  81+ 9DEF CB 5F            bit 3,a
  82+ 9DF1 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DF3
  84+ 9DF3              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DF3
  86+ 9DF3 21 FA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF6 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF8
  89+ 9DF8 CD 61 9E         call Inicia_Repetimos_movimiento
  90+ 9DFB 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DFD              ; ---
  92+ 9DFD
  93+ 9DFD FE 01        1 cp 1
  94+ 9DFF CA 3A 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E02
  96+ 9E02 3D               dec a
  97+ 9E03 32 2A 8C         ld (Cola_de_desplazamiento),a
  98+ 9E06
  99+ 9E06 3A 28 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E09 32 27 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E0C              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E0C C9               ret
 103+ 9E0D
 104+ 9E0D              Reinicia_el_movimiento
 105+ 9E0D
 106+ 9E0D 3A FA 8B         ld a,(Ctrl_2)
 107+ 9E10 CB 5F            bit 3,a
 108+ 9E12 28 1B            jr z,2F
 109+ 9E14
 110+ 9E14              ; (Cola_de_desplazamiento)="254".
 111+ 9E14
 112+ 9E14 21 29 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E17 35               dec (hl)
 114+ 9E18 20 15            jr nz,2F
 115+ 9E1A
 116+ 9E1A              ; Fin de las repeticiones del último movimiento.
 117+ 9E1A
 118+ 9E1A 21 FA 8B         ld hl,Ctrl_2
 119+ 9E1D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E1F
 121+ 9E1F 2A 21 8C         ld hl,(Puntero_mov)
 122+ 9E22 23               inc hl
 123+ 9E23 23               inc hl
 124+ 9E24 23               inc hl
 125+ 9E25 22 21 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E28              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E28 7E               ld a,(hl)
 128+ 9E29 32 2A 8C         ld (Cola_de_desplazamiento),a
 129+ 9E2C
 130+ 9E2C C3 D4 9D         jp Cola
 131+ 9E2F
 132+ 9E2F CD 6C 9E     2 call Inicia_Puntero_mov
 133+ 9E32
 134+ 9E32 21 FA 8B         ld hl,Ctrl_2
 135+ 9E35 CB 96            res 2,(hl)
 136+ 9E37
 137+ 9E37 C3 A4 9D         jp Movimiento
 138+ 9E3A
 139+ 9E3A              Siguiente_desplazamiento
 140+ 9E3A
 141+ 9E3A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E3A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E3A
 144+ 9E3A 21 FA 8B         ld hl,Ctrl_2
 145+ 9E3D CB 96            res 2,(hl)
 146+ 9E3F
 147+ 9E3F 2A 21 8C         ld hl,(Puntero_mov)
 148+ 9E42 23               inc hl
 149+ 9E43 23               inc hl
 150+ 9E44 22 21 8C         ld (Puntero_mov),hl
 151+ 9E47
 152+ 9E47 7E               ld a,(hl)
 153+ 9E48 A7               and a
 154+ 9E49 CC CB 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E4C CA 0D 9E         jp z,Reinicia_el_movimiento
 156+ 9E4F
 157+ 9E4F C9               ret
 158+ 9E50
 159+ 9E50              ; Subrutinas -----------------------------------------
 160+ 9E50              ; ---------- --------- --------- ---------- ----------
 161+ 9E50              ;
 162+ 9E50              ;   24/07/23
 163+ 9E50              ;
 164+ 9E50              ;   Fijamos_bucle
 165+ 9E50              ;
 166+ 9E50              ;
 167+ 9E50
 168+ 9E50              Fijamos_bucle
 169+ 9E50
 170+ 9E50 3A 25 8C         ld a,(Incrementa_puntero)
 171+ 9E53 3C               inc a
 172+ 9E54 32 26 8C         ld (Incrementa_puntero_backup),a
 173+ 9E57
 174+ 9E57 CD CB 9E         call Incrementa_Puntero_indice_mov
 175+ 9E5A 2A 1F 8C         ld hl,(Puntero_indice_mov)
 176+ 9E5D 22 23 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E60 C9               ret
 178+ 9E61
 179+ 9E61              ; ---------- --------- --------- ---------- ----------
 180+ 9E61              ;
 181+ 9E61              ;   07/7/23
 182+ 9E61              ;
 183+ 9E61              ;   Inicia_Repetimos_movimiento
 184+ 9E61              ;
 185+ 9E61              ;
 186+ 9E61
 187+ 9E61              Inicia_Repetimos_movimiento
 188+ 9E61
 189+ 9E61              ; Iniciamos (Repetimos_movimiento).
 190+ 9E61
 191+ 9E61 DD 2A 21 8C      ld ix,(Puntero_mov)
 192+ 9E65 DD 7E 02         ld a,(ix+2)
 193+ 9E68 32 29 8C         ld (Repetimos_movimiento),a
 194+ 9E6B
 195+ 9E6B C9               ret
 196+ 9E6C
 197+ 9E6C              ; ---------- --------- --------- ---------- ----------
 198+ 9E6C              ;
 199+ 9E6C              ;   26/6/23
 200+ 9E6C              ;
 201+ 9E6C              ;   Inicia_Puntero_mov
 202+ 9E6C              ;
 203+ 9E6C              ;
 204+ 9E6C
 205+ 9E6C 2A 1F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E6F CD 1A 91         call Extrae_address
 207+ 9E72 22 21 8C         ld (Puntero_mov),hl
 208+ 9E75 C9               ret
 209+ 9E76
 210+ 9E76              ; ---------- --------- --------- ---------- ----------
 211+ 9E76              ;
 212+ 9E76              ;   27/06/23
 213+ 9E76              ;
 214+ 9E76              ;   Aplica_movimiento.
 215+ 9E76
 216+ 9E76              Aplica_desplazamiento
 217+ 9E76
 218+ 9E76              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E76
 220+ 9E76 2A 21 8C         ld hl, (Puntero_mov)
 221+ 9E79
 222+ 9E79 7E               ld a,(hl)
 223+ 9E7A E6 F0            and $f0
 224+ 9E7C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E7D
 226+ 9E7D CB 7E            bit 7,(hl)
 227+ 9E7F 28 03            jr z,1F
 228+ 9E81 CD 58 9A         call Mov_up
 229+ 9E84 2A 21 8C     1 ld hl, (Puntero_mov)
 230+ 9E87 CB 76            bit 6,(hl)
 231+ 9E89 28 03            jr z,2F
 232+ 9E8B CD 1F 9A         call Mov_down
 233+ 9E8E
 234+ 9E8E              ; Se ha aplicado reinicio ???
 235+ 9E8E              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E8E
 237+ 9E8E              ;    ld a,(Ctrl_3)
 238+ 9E8E              ;    bit 1,a
 239+ 9E8E              ;    ret nz
 240+ 9E8E
 241+ 9E8E 2A 21 8C     2 ld hl, (Puntero_mov)
 242+ 9E91 CB 6E            bit 5,(hl)
 243+ 9E93 28 03            jr z,3F
 244+ 9E95 CD BE 9B         call Mov_left
 245+ 9E98 2A 21 8C     3 ld hl, (Puntero_mov)
 246+ 9E9B CB 66            bit 4,(hl)
 247+ 9E9D C8               ret z
 248+ 9E9E CD 9B 9A         call Mov_right
 249+ 9EA1 C9               ret
 250+ 9EA2
 251+ 9EA2              ; ---------- --------- --------- ---------- ----------
 252+ 9EA2              ;
 253+ 9EA2              ;   26/06/23
 254+ 9EA2              ;
 255+ 9EA2              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EA2
 257+ 9EA2              Ajusta_velocidad_desplazamiento
 258+ 9EA2
 259+ 9EA2              ; 1er byte de la cadena de movimiento.
 260+ 9EA2              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EA2
 262+ 9EA2 CD C0 9E         call Extrae_nibble_alto
 263+ 9EA5
 264+ 9EA5 32 15 8C         ld (Vel_up),a
 265+ 9EA8 79               ld a,c
 266+ 9EA9 E6 0F            and $0f
 267+ 9EAB 32 16 8C         ld (Vel_down),a
 268+ 9EAE
 269+ 9EAE              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EAE              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EAE
 272+ 9EAE 23               inc hl
 273+ 9EAF CD C0 9E         call Extrae_nibble_alto
 274+ 9EB2
 275+ 9EB2 32 13 8C         ld (Vel_left),a
 276+ 9EB5 79               ld a,c
 277+ 9EB6 E6 0F            and $0f
 278+ 9EB8 32 14 8C         ld (Vel_right),a
 279+ 9EBB
 280+ 9EBB              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EBB
 282+ 9EBB 23               inc hl
 283+ 9EBC 22 21 8C         ld (Puntero_mov),hl
 284+ 9EBF C9               ret
 285+ 9EC0
 286+ 9EC0 06 04        Extrae_nibble_alto ld b,4
 287+ 9EC2 7E               ld a,(hl)
 288+ 9EC3 4F               ld c,a
 289+ 9EC4 E6 F0            and $f0
 290+ 9EC6 CB 3F        1 srl a
 291+ 9EC8 10 FC            djnz 1B
 292+ 9ECA C9               ret
 293+ 9ECB
 294+ 9ECB              ; ---------- --------- --------- ---------- ----------
 295+ 9ECB              ;
 296+ 9ECB              ;   5/7/23
 297+ 9ECB              ;
 298+ 9ECB              ;   Incrementa_Puntero_indice_mov
 299+ 9ECB
 300+ 9ECB              Incrementa_Puntero_indice_mov
 301+ 9ECB
 302+ 9ECB 21 25 8C         ld hl,Incrementa_puntero
 303+ 9ECE 34               inc (hl)
 304+ 9ECF
 305+ 9ECF 2A 1F 8C         ld hl,(Puntero_indice_mov)
 306+ 9ED2 01 02 00         ld bc,2
 307+ 9ED5 A7               and a
 308+ 9ED6 09               add hl,bc
 309+ 9ED7 22 1F 8C         ld (Puntero_indice_mov),hl
 310+ 9EDA
 311+ 9EDA 7E               ld a,(hl)
 312+ 9EDB A7               and a
 313+ 9EDC
 314+ 9EDC              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EDC
 316+ 9EDC              ;    jr z,$
 317+ 9EDC
 318+ 9EDC              ;! Reinicia el Patrón de movimiento.
 319+ 9EDC
 320+ 9EDC CC E1 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EDF
 322+ 9EDF AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EE0
 324+ 9EE0 C9               ret
 325+ 9EE1
 326+ 9EE1              ; ---------- --------- --------- ---------- ----------
 327+ 9EE1              ;
 328+ 9EE1              ;   15/01/24
 329+ 9EE1              ;
 330+ 9EE1              ;   Inicializa_Puntero_indice_mov
 331+ 9EE1
 332+ 9EE1              Inicializa_Puntero_indice_mov_2
 333+ 9EE1
 334+ 9EE1              ; Existe etiqueta de bucle principal???
 335+ 9EE1
 336+ 9EE1 2A 23 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE4 24               inc h
 338+ 9EE5 25               dec h
 339+ 9EE6 28 05            jr z,2F
 340+ 9EE8
 341+ 9EE8 22 1F 8C         ld (Puntero_indice_mov),hl
 342+ 9EEB 18 14            jr 3F
 343+ 9EED
 344+ 9EED              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EED
 346+ 9EED 3A 25 8C     2 ld a,(Incrementa_puntero)
 347+ 9EF0 47               ld b,a
 348+ 9EF1
 349+ 9EF1 2A 1F 8C         ld hl,(Puntero_indice_mov)
 350+ 9EF4 2B           1 dec hl
 351+ 9EF5 2B               dec hl
 352+ 9EF6 10 FC            djnz 1B
 353+ 9EF8 22 1F 8C         ld (Puntero_indice_mov),hl
 354+ 9EFB
 355+ 9EFB AF               xor a
 356+ 9EFC 32 25 8C         ld (Incrementa_puntero),a
 357+ 9EFF 18 06            jr 4F
 358+ 9F01
 359+ 9F01 3A 26 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F04 32 25 8C         ld (Incrementa_puntero),a
 361+ 9F07 C9           4 ret
 362+ 9F08
 363+ 9F08              ; ----------------------------------------------------------------------
 364+ 9F08              ;
 365+ 9F08              ;   30/01/24
 366+ 9F08              ;
 367+ 9F08              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F08
 369+ 9F08 3A EE 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F0B CD 5D 94         call Calcula_salto_en_BC
 371+ 9F0E 21 17 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F11 A7               and a
 373+ 9F12 ED 4A            adc hl,bc
 374+ 9F14 C9               ret
 375+ 9F15
 376+ 9F15              ; ----------------------------------------------------------------------
 377+ 9F15              ;
 378+ 9F15              ;   30/01/24
 379+ 9F15              ;
 380+ 9F15              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F15              ;
 382+ 9F15              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F15
 384+ 9F15 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F16 23               inc hl
 386+ 9F17 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F18 69               ld l,c
 388+ 9F19 60               ld h,b
 389+ 9F1A 22 F7 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F1D C9               ret
 391+ 9F1E
# file closed: Movimiento.asm
2106  9F1E              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F1E              ; --------------------------------------------------------------------------------------
   2+ 9F1E              ;
   3+ 9F1E              ;   25/10/24
   4+ 9F1E              ;
   5+ 9F1E
   6+ 9F1E              Pinta_disparos_Entidades
   7+ 9F1E
   8+ 9F1E ED 73 3D 8C      ld (Stack),sp
   9+ 9F22 ED 7B 4F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F26
  11+ 9F26 3E 02            ld a,2
  12+ 9F28 08               ex af,af
  13+ 9F29
  14+ 9F29 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F2B              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F2B              ;                                     _ No encontraría "0".
  17+ 9F2B FD E1        4 pop iy
  18+ 9F2D D1               pop de                          ; 1er .db IYL
  19+ 9F2E              ;                                   ; 2º  .db IYH
  20+ 9F2E              ;                                   ; 3er .db E.
  21+ 9F2E              ;   Album vacío ???
  22+ 9F2E
  23+ 9F2E FD 7D            ld a,iyl
  24+ 9F30 FD 84            add iyh
  25+ 9F32 83               add e
  26+ 9F33 28 1F            jr z,1F
  27+ 9F35
  28+ 9F35              ;   Imprime album, (contiene datos).
  29+ 9F35
  30+ 9F35 3B               dec sp
  31+ 9F36
  32+ 9F36 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F37
  34+ 9F37              ; Imprime el 1er scanline del disparo.
  35+ 9F37
  36+ 9F37 FD 7D            ld a,iyl
  37+ 9F39 AE               xor (hl)
  38+ 9F3A 77               ld (hl),a
  39+ 9F3B
  40+ 9F3B 2C               inc l
  41+ 9F3C
  42+ 9F3C FD 7C            ld a,iyh
  43+ 9F3E AE               xor (hl)
  44+ 9F3F 77               ld (hl),a
  45+ 9F40
  46+ 9F40 2C               inc l
  47+ 9F41
  48+ 9F41 7B               ld a,e
  49+ 9F42 AE               xor (hl)
  50+ 9F43 77               ld (hl),a
  51+ 9F44
  52+ 9F44              ; Imprime el 2º scanline del disparo.
  53+ 9F44
  54+ 9F44 E1               pop hl
  55+ 9F45
  56+ 9F45 FD 7D            ld a,iyl
  57+ 9F47 AE               xor (hl)
  58+ 9F48 77               ld (hl),a
  59+ 9F49
  60+ 9F49 2C               inc l
  61+ 9F4A
  62+ 9F4A FD 7C            ld a,iyh
  63+ 9F4C AE               xor (hl)
  64+ 9F4D 77               ld (hl),a
  65+ 9F4E
  66+ 9F4E 2C               inc l
  67+ 9F4F
  68+ 9F4F 7B               ld a,e
  69+ 9F50 AE               xor (hl)
  70+ 9F51 77               ld (hl),a
  71+ 9F52
  72+ 9F52 10 D7            djnz 4B
  73+ 9F54
  74+ 9F54 08           1 ex af,af
  75+ 9F55 3D               dec a
  76+ 9F56 20 05            jr nz,2F
  77+ 9F58
  78+ 9F58 ED 7B 3D 8C      ld sp,(Stack)
  79+ 9F5C C9               ret
  80+ 9F5D
  81+ 9F5D ED 7B 4D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F61 08               ex af,af
  83+ 9F62 18 C5            jr 3B
  84+ 9F64
  85+ 9F64              ; --------------------------------------------------------------------------------------
  86+ 9F64              ;
  87+ 9F64              ;   30/10/24
  88+ 9F64              ;
  89+ 9F64
  90+ 9F64              Motor_de_disparos_entidades
  91+ 9F64
  92+ 9F64 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F67 FE 07            cp 7
  94+ 9F69 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F6A
  96+ 9F6A 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F6C 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F6F
  99+ 9F6F CD 1A 91     1 call Extrae_address
 100+ 9F72 1C               inc e
 101+ 9F73 1C               inc e
 102+ 9F74 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F78
 104+ 9F78               ; Caja vacía ???
 105+ 9F78
 106+ 9F78 2D               dec l
 107+ 9F79 7E               ld a,(hl)
 108+ 9F7A A7               and a
 109+ 9F7B 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F7D
 111+ 9F7D              ; --- Trabajamos con caja:
 112+ 9F7D
 113+ 9F7D 2C               inc l
 114+ 9F7E
 115+ 9F7E              ; --- Existe posibilidad de impacto ???
 116+ 9F7E
 117+ 9F7E CB 46            bit 0,(hl)
 118+ 9F80 C4 C0 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F83 20 37            jr nz,3F
 120+ 9F85
 121+ 9F85 CD 47 A0         call Rota_disparo_si_procede
 122+ 9F88
 123+ 9F88              ; ------------------------------------------------------------
 124+ 9F88
 125+ 9F88 2D               dec l
 126+ 9F89 2D               dec l
 127+ 9F8A
 128+ 9F8A CD 1A 91         call Extrae_address
 129+ 9F8D
 130+ 9F8D              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F8D              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F8D
 133+ 9F8D 3A 67 8C         ld a,(Ctrl_5)
 134+ 9F90 CB 57            bit 2,a
 135+ 9F92 28 09            jr z,4F
 136+ 9F94
 137+ 9F94 CB 97            res 2,a
 138+ 9F96 32 67 8C         ld (Ctrl_5),a
 139+ 9F99 2C               inc l
 140+ 9F9A 2C               inc l
 141+ 9F9B 18 0C            jr 5F
 142+ 9F9D
 143+ 9F9D CB 5F        4 bit 3,a
 144+ 9F9F 28 08            jr z,5F
 145+ 9FA1
 146+ 9FA1 CB 9F            res 3,a
 147+ 9FA3 32 67 8C         ld (Ctrl_5),a
 148+ 9FA6 2D               dec l
 149+ 9FA7 2D               dec l
 150+ 9FA8 2D               dec l
 151+ 9FA9
 152+ 9FA9              ; ---------------------------------------------------------------------
 153+ 9FA9
 154+ 9FA9              ;! Velocidad del disparo de entidades.
 155+ 9FA9
 156+ 9FA9 CD D9 99     5 call NextScan
 157+ 9FAC CD D9 99         call NextScan
 158+ 9FAF
 159+ 9FAF              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FAF
 161+ 9FAF CD 24 A0         call Fin_de_disparo_de_entidad
 162+ 9FB2
 163+ 9FB2 EB               ex de,hl
 164+ 9FB3
 165+ 9FB3 73               ld (hl),e
 166+ 9FB4 23               inc hl
 167+ 9FB5 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FB6
 169+ 9FB6 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FB9 18 02            jr 2F
 171+ 9FBB
 172+ 9FBB C9               ret
 173+ 9FBC
 174+ 9FBC EB           3 ex de,hl
 175+ 9FBD 10 B0        2 djnz 1B
 176+ 9FBF
 177+ 9FBF C9               ret
 178+ 9FC0
 179+ 9FC0              ; ------------- ------------- ------------
 180+ 9FC0              ;
 181+ 9FC0              ;   1/11/24
 182+ 9FC0
 183+ 9FC0              Comprueba_impacto_con_Amadeus
 184+ 9FC0
 185+ 9FC0              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FC0              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FC0
 188+ 9FC0              ;   Modificamos registros, así que guardamos ...
 189+ 9FC0
 190+ 9FC0 C5               push bc
 191+ 9FC1 E5               push hl
 192+ 9FC2 D5               push de
 193+ 9FC3
 194+ 9FC3 2D               dec l
 195+ 9FC4 2D               dec l
 196+ 9FC5
 197+ 9FC5 CD 1A 91         call Extrae_address
 198+ 9FC8
 199+ 9FC8 3A B8 89         ld a,(CX_Amadeus)
 200+ 9FCB 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FCC
 202+ 9FCC 7D               ld a,l
 203+ 9FCD E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FCF
 205+ 9FCF 06 03            ld b,3
 206+ 9FD1
 207+ 9FD1 B9           1 cp c
 208+ 9FD2 28 15            jr z,Coincidencia
 209+ 9FD4 0C               inc c
 210+ 9FD5 10 FA            djnz 1B
 211+ 9FD7
 212+ 9FD7 0D               dec c
 213+ 9FD8 0D               dec c
 214+ 9FD9 0D               dec c
 215+ 9FDA
 216+ 9FDA 3C               inc a
 217+ 9FDB B9               cp c
 218+ 9FDC 28 0B            jr z,Coincidencia
 219+ 9FDE
 220+ 9FDE 3C               inc a
 221+ 9FDF B9               cp c
 222+ 9FE0 28 07            jr z,Coincidencia
 223+ 9FE2
 224+ 9FE2 D1           2 pop de
 225+ 9FE3 E1               pop hl
 226+ 9FE4 C1               pop bc
 227+ 9FE5
 228+ 9FE5              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FE5
 230+ 9FE5 CB 86            res 0,(hl)
 231+ 9FE7 AF               xor a                       ; Z before RET.
 232+ 9FE8 C9               ret
 233+ 9FE9
 234+ 9FE9              Coincidencia
 235+ 9FE9
 236+ 9FE9              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FE9              ;   Existe posibilidad de impacto.
 238+ 9FE9              ;   Vamos a averiguarlo ...
 239+ 9FE9
 240+ 9FE9 1D               dec e
 241+ 9FEA 1D               dec e
 242+ 9FEB 1D               dec e
 243+ 9FEC
 244+ 9FEC              ; DE en Puntero_objeto del disparo.
 245+ 9FEC              ; HL en Puntero_de_impresión del disparo.
 246+ 9FEC
 247+ 9FEC              ; Comparador:
 248+ 9FEC
 249+ 9FEC 06 03            ld b,3
 250+ 9FEE
 251+ 9FEE 1A           3 ld a,(de)
 252+ 9FEF 4F               ld c,a
 253+ 9FF0 A6               and (hl)
 254+ 9FF1 B9               cp c
 255+ 9FF2 20 06            jr nz,Amadeus_impactado
 256+ 9FF4
 257+ 9FF4 2C               inc l
 258+ 9FF5 1C               inc e
 259+ 9FF6
 260+ 9FF6 10 F6            djnz 3B
 261+ 9FF8
 262+ 9FF8 18 E8            jr 2B
 263+ 9FFA
 264+ 9FFA              Amadeus_impactado
 265+ 9FFA
 266+ 9FFA              ; Borramos disparo.
 267+ 9FFA
 268+ 9FFA D1               pop de
 269+ 9FFB E1               pop hl
 270+ 9FFC
 271+ 9FFC E5               push hl
 272+ 9FFD D5               push de
 273+ 9FFE
 274+ 9FFE CD B2 A0         call Borra_6_bytes
 275+ A001
 276+ A001 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A004 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A005
 279+ A005              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A005
 281+ A005 21 BB 89         ld hl,Impacto_Amadeus
 282+ A008 36 01            ld (hl),1
 283+ A00A
 284+ A00A              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A00A              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A00A
 287+ A00A 3A BC 89         ld a,(p.imp.amadeus)
 288+ A00D FE DE            cp $de
 289+ A00F 20 04            jr nz,1F
 290+ A011
 291+ A011 3D               dec a
 292+ A012 32 BC 89         ld (p.imp.amadeus),a
 293+ A015
 294+ A015              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A015
 296+ A015 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A018 21 BE 89         ld hl,Pamm_Amadeus
 298+ A01B
 299+ A01B 73               ld (hl),e
 300+ A01C 23               inc hl
 301+ A01D 72               ld (hl),d
 302+ A01E
 303+ A01E D1               pop de
 304+ A01F E1               pop hl
 305+ A020 C1               pop bc
 306+ A021
 307+ A021 AF               xor a
 308+ A022 3C               inc a               ; NZ before RET.
 309+ A023 C9               ret
 310+ A024
 311+ A024              ; ------------- ------------- ------------
 312+ A024              ;
 313+ A024              ;   31/10/24
 314+ A024
 315+ A024              Fin_de_disparo_de_entidad
 316+ A024
 317+ A024              ; Estamos en zona de Amadeus ??
 318+ A024
 319+ A024 7C               ld a,h
 320+ A025 FE 54            cp $54
 321+ A027 38 0D            jr c,1F
 322+ A029
 323+ A029 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A02A
 325+ A02A 5D               ld e,l
 326+ A02B 54               ld d,h
 327+ A02C
 328+ A02C 21 E0 57         ld hl,$57e0
 329+ A02F ED 52            sbc hl,de
 330+ A031
 331+ A031 38 6F            jr c,Elimina_disparo_entidad
 332+ A033
 333+ A033 6B               ld l,e
 334+ A034 62               ld h,d
 335+ A035
 336+ A035 D1               pop de
 337+ A036
 338+ A036 7C           1 ld a,h
 339+ A037 FE 50            cp $50
 340+ A039 D8               ret c
 341+ A03A
 342+ A03A 7D               ld a,l
 343+ A03B FE C0            cp $c0
 344+ A03D D8               ret c
 345+ A03E
 346+ A03E              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A03E              ; Así podremos comprobar si hay colisión más adelante.
 348+ A03E
 349+ A03E 1C               inc e
 350+ A03F 1C               inc e
 351+ A040
 352+ A040 EB               ex de,hl
 353+ A041 CB C6            set 0,(hl)
 354+ A043 EB               ex de,hl
 355+ A044
 356+ A044 1D               dec e
 357+ A045 1D               dec e
 358+ A046
 359+ A046 C9               ret
 360+ A047
 361+ A047              ; ----------------------------------------------------------
 362+ A047              ;
 363+ A047              ;   08/10/24
 364+ A047
 365+ A047              ;   Estructura de un disparo de entidades.
 366+ A047
 367+ A047              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A047              ; 	defw 0											; Puntero de impresión.
 369+ A047              ;	defw 0											; Control.
 370+ A047
 371+ A047              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A047              ;   _de la entidad en el momento de disparar.
 373+ A047
 374+ A047              ;   El byte alto muestra la siguiente información:
 375+ A047              ;
 376+ A047              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A047              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A047              ;
 379+ A047              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A047              ;
 381+ A047              ;                        10xx ..... Izquierda.
 382+ A047              ;                        01xx ..... Derecha.
 383+ A047              ;                        00xx ..... Recto.
 384+ A047
 385+ A047              Rota_disparo_si_procede
 386+ A047
 387+ A047              ;   Nos situamos en el byte alto de (Control).
 388+ A047
 389+ A047 CB 76            bit 6,(hl)
 390+ A049 20 2D            jr nz,Rota_a_derecha
 391+ A04B CB 7E            bit 7,(hl)
 392+ A04D C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A04E
 394+ A04E              Rota_a_izq
 395+ A04E
 396+ A04E E5               push hl
 397+ A04F
 398+ A04F 7D               ld a,l
 399+ A050 D6 05            sub 5
 400+ A052 6F               ld l,a
 401+ A053
 402+ A053 E5               push hl
 403+ A054 FD E1            pop iy
 404+ A056
 405+ A056 A7               and a
 406+ A057
 407+ A057 FD CB 02 16      rl (iy+02)
 408+ A05B FD CB 01 16      rl (iy+01)
 409+ A05F FD CB 00 16      rl (iy+00)
 410+ A063
 411+ A063 30 3B            jr nc,Exit
 412+ A065
 413+ A065              ; Desplazamiento completo hasta Carry.
 414+ A065              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A065
 416+ A065 FD 36 02 03      ld (iy+02),$03
 417+ A069 FD 36 01 00      ld (iy+01),$00
 418+ A06D FD 36 00 00      ld (iy+00),$00
 419+ A071
 420+ A071 21 67 8C         ld hl,Ctrl_5
 421+ A074 CB DE            set 3,(hl)
 422+ A076
 423+ A076 18 28            jr Exit
 424+ A078
 425+ A078              Rota_a_derecha
 426+ A078
 427+ A078 E5               push hl
 428+ A079
 429+ A079 7D               ld a,l
 430+ A07A D6 05            sub 5
 431+ A07C 6F               ld l,a
 432+ A07D
 433+ A07D E5               push hl
 434+ A07E FD E1            pop iy
 435+ A080
 436+ A080 A7               and a
 437+ A081
 438+ A081 FD CB 00 1E      rr (iy+00)
 439+ A085 FD CB 01 1E      rr (iy+01)
 440+ A089 FD CB 02 1E      rr (iy+02)
 441+ A08D
 442+ A08D 30 11            jr nc,Exit
 443+ A08F
 444+ A08F              ; Desplazamiento completo hasta Carry.
 445+ A08F              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A08F
 447+ A08F FD 36 00 01      ld (iy+00),$01
 448+ A093 FD 36 01 80      ld (iy+01),$80
 449+ A097 FD 36 02 00      ld (iy+02),$00
 450+ A09B
 451+ A09B 21 67 8C         ld hl,Ctrl_5
 452+ A09E CB D6            set 2,(hl)
 453+ A0A0
 454+ A0A0 E1           Exit pop hl
 455+ A0A1 C9               ret
 456+ A0A2
 457+ A0A2              ; ------------ ----------- ------------
 458+ A0A2              ;
 459+ A0A2              ;   25/9/24
 460+ A0A2
 461+ A0A2              Elimina_disparo_entidad
 462+ A0A2
 463+ A0A2 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0A5 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0A6
 466+ A0A6 E1               pop hl
 467+ A0A7 E5               push hl
 468+ A0A8
 469+ A0A8 2C               inc l
 470+ A0A9 2C               inc l
 471+ A0AA
 472+ A0AA CD B2 A0         call Borra_6_bytes
 473+ A0AD
 474+ A0AD D1               pop de
 475+ A0AE
 476+ A0AE 21 00 00         ld hl,0
 477+ A0B1
 478+ A0B1 C9               ret
 479+ A0B2
 480+ A0B2              ; ----- ----- ----- ----- -----
 481+ A0B2
 482+ A0B2              Borra_6_bytes
 483+ A0B2
 484+ A0B2 16 06            ld d,6                                                    ; Contador
 485+ A0B4 AF               xor a                                                     ; Borrador
 486+ A0B5 77           1 ld (hl),a
 487+ A0B6 2D               dec l
 488+ A0B7 15               dec d
 489+ A0B8 20 FB            jr nz,1B
 490+ A0BA
 491+ A0BA C9               ret
 492+ A0BB
 493+ A0BB              ; --------------------------------------------------------------------------------------
 494+ A0BB              ;
 495+ A0BB              ;   12/10/24
 496+ A0BB              ;
 497+ A0BB
 498+ A0BB              Genera_datos_de_impresion_disparos_Entidades
 499+ A0BB
 500+ A0BB 3E 07            ld a,7
 501+ A0BD 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0BE
 503+ A0BE              ; ---------------
 504+ A0BE
 505+ A0BE              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0BE
 507+ A0BE 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0C1
 509+ A0C1 CD 1A 91     1 call Extrae_address
 510+ A0C4
 511+ A0C4 13               inc de
 512+ A0C5 13               inc de
 513+ A0C6
 514+ A0C6 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0CA
 516+ A0CA 2D               dec l
 517+ A0CB 7E               ld a,(hl)
 518+ A0CC A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0CD 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0CF
 521+ A0CF              ; ----- ----- ----- -----
 522+ A0CF
 523+ A0CF 2D               dec l
 524+ A0D0 CD 1A 91         call Extrae_address
 525+ A0D3 E5               push hl
 526+ A0D4
 527+ A0D4 1D               dec e
 528+ A0D5
 529+ A0D5 EB               ex de,hl
 530+ A0D6
 531+ A0D6 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0D7 2D               dec l
 533+ A0D8 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0D9 2D               dec l
 535+ A0DA 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0DB
 537+ A0DB E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0DC
 539+ A0DC              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0DC
 541+ A0DC FD 2A 51 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0E0 FD 73 00         ld (iy+0),e
 543+ A0E3 FD 70 01         ld (iy+1),b
 544+ A0E6 FD 71 02         ld (iy+2),c
 545+ A0E9
 546+ A0E9 FD 75 03         ld (iy+3),l
 547+ A0EC FD 74 04         ld (iy+4),h
 548+ A0EF
 549+ A0EF CD D9 99         call NextScan
 550+ A0F2
 551+ A0F2 FD 75 05         ld (iy+5),l
 552+ A0F5 FD 74 06         ld (iy+6),h
 553+ A0F8
 554+ A0F8 FD E5            push iy
 555+ A0FA E1               pop hl
 556+ A0FB
 557+ A0FB 3E 07            ld a,7
 558+ A0FD 85               add l
 559+ A0FE 6F               ld l,a
 560+ A0FF
 561+ A0FF 22 51 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A102
 563+ A102              ; ----- ----- ----- -----
 564+ A102
 565+ A102              Situa_en_siguiente_caja
 566+ A102
 567+ A102 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A103 3D               dec a
 569+ A104 C8               ret z
 570+ A105
 571+ A105 08               ex af,af
 572+ A106 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A109 18 B6            jr 1B
 574+ A10B
 575+ A10B              ; --------------------------------------------------------------------------------------
 576+ A10B              ;
 577+ A10B              ;   12/10/24
 578+ A10B              ;
 579+ A10B
 580+ A10B              Genera_disparo_de_entidad_maldosa
 581+ A10B
 582+ A10B              ;   Estructura de un disparo de entidades.
 583+ A10B
 584+ A10B              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A10B              ; 	defw 0											; Puntero de impresión.
 586+ A10B              ;	defw 0											; Control.
 587+ A10B
 588+ A10B              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A10B              ;   _de la entidad en el momento de disparar.
 590+ A10B
 591+ A10B              ;   El byte de control muestra la siguiente información:
 592+ A10B
 593+ A10B              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A10B              ;
 595+ A10B              ;                        10xx ..... Izquierda.
 596+ A10B              ;                        01xx ..... Derecha.
 597+ A10B              ;                        00xx ..... Recto.
 598+ A10B
 599+ A10B              ;*  Exclusiones.
 600+ A10B
 601+ A10B              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A10B              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A10B
 604+ A10B 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A10E A7               and a
 606+ A10F C8               ret z
 607+ A110
 608+ A110 3A F0 8B         ld a,(Coordenada_y)
 609+ A113 A7               and a
 610+ A114 C8               ret z
 611+ A115
 612+ A115 3D               dec a
 613+ A116 C8               ret z
 614+ A117
 615+ A117 FE 10            cp 16
 616+ A119 D0               ret nc
 617+ A11A
 618+ A11A              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A11A              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A11A              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A11A
 622+ A11A 21 57 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A11D 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A11E
 625+ A11E              ;   Decrementa el numero de disparos de entidades.
 626+ A11E
 627+ A11E 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A121 35               dec (hl)
 629+ A122
 630+ A122 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A125
 632+ A125 CD 1A 91     1 call Extrae_address
 633+ A128
 634+ A128 13               inc de
 635+ A129 13               inc de
 636+ A12A
 637+ A12A ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A12E
 639+ A12E              ;   Comprobamos si la caja está vacía.
 640+ A12E
 641+ A12E 2D               dec l
 642+ A12F 7E               ld a,(hl)
 643+ A130 A7               and a
 644+ A131 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A133 2C               inc l
 646+ A134
 647+ A134              ;   Caja vacía, vamos a generar un disparo.
 648+ A134              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A134
 650+ A134 CD 55 A1         call Genera_byte_inclinacion
 651+ A137
 652+ A137 7E               ld a,(hl)
 653+ A138 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A139
 655+ A139 2D               dec l
 656+ A13A
 657+ A13A CD 71 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A13D
 659+ A13D 70               ld (hl),b
 660+ A13E 2D               dec l
 661+ A13F 71               ld (hl),c
 662+ A140
 663+ A140 2D               dec l
 664+ A141
 665+ A141              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A141
 667+ A141 FD 7E 02         ld a,(iy+02)
 668+ A144 77               ld (hl),a
 669+ A145 2D               dec l
 670+ A146
 671+ A146 FD 7E 01         ld a,(iy+01)
 672+ A149 77               ld (hl),a
 673+ A14A 2D               dec l
 674+ A14B
 675+ A14B FD 7E 00         ld a,(iy+00)
 676+ A14E 77               ld (hl),a
 677+ A14F
 678+ A14F C9               ret
 679+ A150
 680+ A150              ;   --- --- ---
 681+ A150
 682+ A150              Situa_en_siguiente_disparo
 683+ A150
 684+ A150 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A153 18 D0            jr 1B
 686+ A155
 687+ A155              ; --------------------------------------------------------------------------------------
 688+ A155              ;
 689+ A155              ;   09/10/24
 690+ A155              ;
 691+ A155
 692+ A155              Genera_byte_inclinacion
 693+ A155
 694+ A155              ; Determina tendencia del disparo.
 695+ A155
 696+ A155 3A B8 89         ld a,(CX_Amadeus)
 697+ A158 47               ld b,a
 698+ A159 3A EF 8B         ld a,(Coordenada_X)
 699+ A15C 90               sub b
 700+ A15D 38 07            jr c,Disparo_a_derecha
 701+ A15F
 702+ A15F FE 06        Disparo_a_izquierda cp 6
 703+ A161
 704+ A161 D8               ret c
 705+ A162 C8               ret z
 706+ A163
 707+ A163 CB FE            set 7,(hl)
 708+ A165 C9               ret
 709+ A166
 710+ A166 47           Disparo_a_derecha ld b,a
 711+ A167 3E FF            ld a,$ff
 712+ A169 90               sub b
 713+ A16A
 714+ A16A FE 05            cp 5
 715+ A16C
 716+ A16C D8               ret c
 717+ A16D C8               ret z
 718+ A16E
 719+ A16E CB F6            set 6,(hl)
 720+ A170 C9               ret
 721+ A171
 722+ A171              ; --------------------------------------------------------------------------------------
 723+ A171              ;
 724+ A171              ;   09/10/24
 725+ A171              ;
 726+ A171
 727+ A171              Modifica_puntero_de_impresion
 728+ A171
 729+ A171              ;   Puntero de impresión del disparo en BC.
 730+ A171
 731+ A171 E5               push hl
 732+ A172
 733+ A172 2A 6A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A175 CD D9 99         call NextScan
 735+ A178
 736+ A178 4D               ld c,l
 737+ A179 44               ld b,h
 738+ A17A
 739+ A17A E1               pop hl
 740+ A17B
 741+ A17B 08               ex af,af
 742+ A17C CB 77            bit 6,a
 743+ A17E 28 06            jr z,1F
 744+ A180
 745+ A180 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A184 0C               inc c
 747+ A185 C9               ret
 748+ A186
 749+ A186 CB 7F        1 bit 7,a
 750+ A188 28 F6            jr z,2B
 751+ A18A
 752+ A18A FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A18E 0D               dec c
 754+ A18F
 755+ A18F C9               ret
 756+ A190
 757+ A190              ; --------------------------------------------------------------------------------------
 758+ A190              ;
 759+ A190              ;   31/08/24
 760+ A190              ;
 761+ A190
 762+ A190              Compara_con_coordenadas_de_disparo
 763+ A190
 764+ A190 3A F0 8B         ld a,(Coordenada_y)
 765+ A193 47               ld b,a
 766+ A194 3A 6F 8C         ld a,(Coordenadas_disparo_certero)
 767+ A197 90               sub b
 768+ A198
 769+ A198              ; A = "0" ok
 770+ A198              ; A = "1" ok
 771+ A198
 772+ A198 28 08            jr z,Comprueba_coordenada_X
 773+ A19A 3D               dec a
 774+ A19B 28 05            jr z,Comprueba_coordenada_X
 775+ A19D
 776+ A19D              ; A = "$ff" ok
 777+ A19D
 778+ A19D FE FE            cp $fe
 779+ A19F 28 01            jr z,Comprueba_coordenada_X
 780+ A1A1
 781+ A1A1 C9               ret
 782+ A1A2
 783+ A1A2              Comprueba_coordenada_X
 784+ A1A2
 785+ A1A2 3A EF 8B         ld a,(Coordenada_X)
 786+ A1A5 47               ld b,a
 787+ A1A6 21 70 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1A9 7E               ld a,(hl)
 789+ A1AA 90               sub b
 790+ A1AB
 791+ A1AB              ; A = "0" ok
 792+ A1AB              ; A = "1" ok
 793+ A1AB
 794+ A1AB 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1AD 3D               dec a
 796+ A1AE 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1B0
 798+ A1B0              ; A = "2" ok
 799+ A1B0
 800+ A1B0 3D               dec a
 801+ A1B1 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1B3
 803+ A1B3              ; A = "$ff"
 804+ A1B3
 805+ A1B3 FE FD            cp $fd
 806+ A1B5 C0               ret nz
 807+ A1B6
 808+ A1B6              Activa_Impacto_en_entidad
 809+ A1B6
 810+ A1B6              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1B6
 812+ A1B6 3E 02            ld a,2
 813+ A1B8 32 F2 8B         ld (Impacto),a
 814+ A1BB
 815+ A1BB              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1BB
 817+ A1BB 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1BE 21 F5 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1C1
 820+ A1C1 73               ld (hl),e
 821+ A1C2 23               inc hl
 822+ A1C3 72               ld (hl),d
 823+ A1C4
 824+ A1C4              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1C4
 826+ A1C4 21 6C 8C         ld hl,Impacto2
 827+ A1C7 CB 9E            res 3,(hl)
 828+ A1C9
 829+ A1C9 C9               ret
 830+ A1CA
 831+ A1CA              ; --------------------------------------------------------------------------------------
 832+ A1CA              ;
 833+ A1CA              ;   13/10/24
 834+ A1CA              ;
 835+ A1CA
 836+ A1CA              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1CA
 838+ A1CA              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1CA
 840+ A1CA 2A 49 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1CD 06 06            ld b,6
 842+ A1CF AF               xor a
 843+ A1D0 77           1 ld (hl),a
 844+ A1D1 2C               inc l
 845+ A1D2 10 FC            djnz 1B
 846+ A1D4
 847+ A1D4 C9               ret
 848+ A1D5
 849+ A1D5              ; --------------------------------------------------------------------------------------
 850+ A1D5              ;
 851+ A1D5              ;   29/09/24
 852+ A1D5              ;
 853+ A1D5
 854+ A1D5              Calcula_bytes_pintado_disparos
 855+ A1D5
 856+ A1D5 2A 4D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1D8 45               ld b,l
 858+ A1D9 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1DC 7D               ld a,l
 860+ A1DD
 861+ A1DD 90               sub b
 862+ A1DE 32 53 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1E1
 864+ A1E1 C9               ret
 865+ A1E2
 866+ A1E2              ; --------------------------------------------------------------------------------------
 867+ A1E2              ;
 868+ A1E2              ;   26/10/24
 869+ A1E2              ;
 870+ A1E2              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1E2              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1E2              ;   _disparos que el álbum del FRAME actual).
 873+ A1E2
 874+ A1E2              Limpia_album_de_pintado_disparos_entidades
 875+ A1E2
 876+ A1E2 21 54 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1E5 7E               ld a,(hl)
 878+ A1E6 2D               dec l
 879+ A1E7 46               ld b,(hl)
 880+ A1E8 90               sub b
 881+ A1E9
 882+ A1E9 D8               ret c
 883+ A1EA C8               ret z
 884+ A1EB
 885+ A1EB F5               push af
 886+ A1EC 80               add b
 887+ A1ED 77               ld (hl),a
 888+ A1EE F1               pop af
 889+ A1EF
 890+ A1EF              ; Clean.
 891+ A1EF
 892+ A1EF 47           2 ld b,a
 893+ A1F0 AF               xor a
 894+ A1F1 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1F4 77           1 ld (hl),a
 896+ A1F5 23               inc hl
 897+ A1F6 10 FC            djnz 1B
 898+ A1F8
 899+ A1F8 C9               ret
 900+ A1F9
 901+ A1F9              ; --------------------------------------------------------------------------------------
 902+ A1F9              ;
 903+ A1F9              ;   29/09/24
 904+ A1F9              ;
 905+ A1F9
 906+ A1F9              Motor_Disparos_Amadeus
 907+ A1F9
 908+ A1F9 21 26 89         ld hl,Disparo_Amad+1
 909+ A1FC
 910+ A1FC 34               inc (hl)
 911+ A1FD 35               dec (hl)
 912+ A1FE
 913+ A1FE C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1FF
 915+ A1FF              ;   Esta caja contiene un disparo.
 916+ A1FF
 917+ A1FF CD 06 A2         call Consulta_Impacto
 918+ A202 CC 1F A2         call z,Mueve_disparo_Amadeus
 919+ A205
 920+ A205 C9               ret
 921+ A206
 922+ A206              ; ----------------------
 923+ A206              ;
 924+ A206              ;
 925+ A206              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A206              ;
 927+ A206              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A206
 929+ A206
 930+ A206              Consulta_Impacto
 931+ A206
 932+ A206              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A206              ;   _sea lo más coherente posible.
 934+ A206
 935+ A206 E5               push hl
 936+ A207 2B               dec hl
 937+ A208 CD FB A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A20B E1               pop hl
 939+ A20C 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A20D
 941+ A20D C8               ret z
 942+ A20E
 943+ A20E 3A 6C 8C         ld a,(Impacto2)
 944+ A211 CB DF            set 3,a
 945+ A213 32 6C 8C         ld (Impacto2),a
 946+ A216
 947+ A216 E5               push hl
 948+ A217 CD E8 A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A21A E1               pop hl
 950+ A21B CD 38 A2         call Elimina_disparo_Amadeus
 951+ A21E
 952+ A21E C9               ret
 953+ A21F
 954+ A21F              ; ----------------------
 955+ A21F              ;
 956+ A21F              ;
 957+ A21F              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A21F
 959+ A21F              Mueve_disparo_Amadeus
 960+ A21F
 961+ A21F CD 1A 91         call Extrae_address
 962+ A222
 963+ A222 CD E8 99         call PreviousScan
 964+ A225 CD E8 99         call PreviousScan
 965+ A228 CD E8 99         call PreviousScan
 966+ A22B CD E8 99         call PreviousScan
 967+ A22E
 968+ A22E              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A22E
 970+ A22E 7C               ld a,h
 971+ A22F D6 40            sub $40
 972+ A231 EB               ex de,hl
 973+ A232 38 04            jr c,Elimina_disparo_Amadeus
 974+ A234
 975+ A234               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A234
 977+ A234 73               ld (hl),e
 978+ A235 23               inc hl
 979+ A236 72               ld (hl),d
 980+ A237
 981+ A237 C9               ret
 982+ A238
 983+ A238              ; ----------------------
 984+ A238              ;
 985+ A238              ;   29/9/24
 986+ A238
 987+ A238              Elimina_disparo_Amadeus
 988+ A238
 989+ A238              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A238              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A238
 992+ A238              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A238              ;   	defw 0											; Puntero de impresión.
 994+ A238
 995+ A238 2B               dec hl
 996+ A239 2B               dec hl
 997+ A23A
 998+ A23A AF               xor a
 999+ A23B 77               ld (hl),a
1000+ A23C 23               inc hl
1001+ A23D 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A23E
1003+ A23E 23               inc hl
1004+ A23F 77               ld (hl),a
1005+ A240 23               inc hl
1006+ A241 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A242
1008+ A242 3E 01            ld a,1
1009+ A244 32 56 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A247
1011+ A247 CD CA A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A24A
1013+ A24A AF               xor a
1014+ A24B 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A24C
1016+ A24C C9               ret
1017+ A24D
1018+ A24D              ; --------------------------------------------------------------------------------------
1019+ A24D              ;
1020+ A24D              ;   13/10/24
1021+ A24D              ;
1022+ A24D
1023+ A24D              Pinta_disparos_Amadeus
1024+ A24D
1025+ A24D 06 02            ld b,2
1026+ A24F ED 73 3D 8C      ld (Stack),sp
1027+ A253 ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A257 D1           3 pop de
1029+ A258 14               inc d
1030+ A259 15               dec d
1031+ A25A 28 1C            jr z,1F
1032+ A25C E1               pop hl
1033+ A25D
1034+ A25D              Imprime_scanlines_en_pantalla
1035+ A25D
1036+ A25D              ; 1er scanline
1037+ A25D
1038+ A25D 1A               ld a,(de)
1039+ A25E AE               xor (hl)
1040+ A25F 77               ld (hl),a
1041+ A260
1042+ A260 1C               inc e
1043+ A261 2C               inc l
1044+ A262
1045+ A262 1A               ld a,(de)
1046+ A263 AE               xor (hl)
1047+ A264 77               ld (hl),a
1048+ A265
1049+ A265 1D               dec e
1050+ A266 E1               pop hl
1051+ A267
1052+ A267              ; 2º scanline
1053+ A267
1054+ A267 1A               ld a,(de)
1055+ A268 AE               xor (hl)
1056+ A269 77               ld (hl),a
1057+ A26A
1058+ A26A 1C               inc e
1059+ A26B 2C               inc l
1060+ A26C
1061+ A26C 1A               ld a,(de)
1062+ A26D AE               xor (hl)
1063+ A26E 77               ld (hl),a
1064+ A26F
1065+ A26F 1D               dec e
1066+ A270
1067+ A270 18 06            jr 1F
1068+ A272
1069+ A272 ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A276 18 DF            jr 3B
1071+ A278 10 F8        1 djnz 2B
1072+ A27A ED 7B 3D 8C      ld sp,(Stack)
1073+ A27E C9               ret
1074+ A27F
1075+ A27F              ; --------------------------------------------------------------------------------------
1076+ A27F              ;
1077+ A27F              ;   13/10/24
1078+ A27F              ;
1079+ A27F              ;   Modifica: HL,BC y DE.
1080+ A27F
1081+ A27F
1082+ A27F              Genera_datos_de_impresion_disparos_Amadeus
1083+ A27F
1084+ A27F ED 73 3D 8C      ld (Stack),sp
1085+ A283 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A286 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A287
1088+ A287 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A288 15               dec d
1090+ A289
1091+ A289 28 0E            jr z,Salida
1092+ A28B
1093+ A28B              Genera_scanlines_de_disparo_Amadeus
1094+ A28B
1095+ A28B E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A28C              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A28C ED 7B 49 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A290
1099+ A290 C1               pop bc
1100+ A291 C1               pop bc
1101+ A292 C1               pop bc
1102+ A293
1103+ A293 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A294 CD E8 99         call PreviousScan
1105+ A297 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A298 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A299
1108+ A299              Salida
1109+ A299
1110+ A299 ED 7B 3D 8C      ld sp,(Stack)
1111+ A29D
1112+ A29D C9               ret
1113+ A29E
1114+ A29E              ; --------------------------------------------------------------------------------------
1115+ A29E              ;
1116+ A29E              ;   12/09/24
1117+ A29E              ;
1118+ A29E
1119+ A29E              Genera_disparo_Amadeus
1120+ A29E
1121+ A29E              ;*  Exclusiones.
1122+ A29E
1123+ A29E 3A 56 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A2A1 A7               and a
1125+ A2A2 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A2A3
1127+ A2A3 3D               dec a
1128+ A2A4 32 56 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2A7
1130+ A2A7              Define_puntero_objeto_disparo
1131+ A2A7
1132+ A2A7              ;   Inicializamos contador.
1133+ A2A7
1134+ A2A7 06 00            ld b,0
1135+ A2A9
1136+ A2A9 2A BC 89         ld hl,(p.imp.amadeus)
1137+ A2AC 2C               inc l
1138+ A2AD
1139+ A2AD 3E 80            ld a,$80
1140+ A2AF BE               cp (hl)
1141+ A2B0 28 0D            jr z,1F
1142+ A2B2
1143+ A2B2 04               inc b
1144+ A2B3
1145+ A2B3 3E 60            ld a,$60
1146+ A2B5 BE               cp (hl)
1147+ A2B6 28 07            jr z,1F
1148+ A2B8
1149+ A2B8
1150+ A2B8 04               inc b
1151+ A2B9
1152+ A2B9 3E 18            ld a,$18
1153+ A2BB BE               cp (hl)
1154+ A2BC 28 01            jr z,1F
1155+ A2BE
1156+ A2BE 04               inc b
1157+ A2BF
1158+ A2BF              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2BF
1160+ A2BF              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2BF
1162+ A2BF CD E8 99     1 call PreviousScan
1163+ A2C2
1164+ A2C2 78               ld a,b
1165+ A2C3 CB 3F            srl a
1166+ A2C5 28 03            jr z,4F
1167+ A2C7
1168+ A2C7              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2C7 E5               push hl
1170+ A2C8 18 02            jr 5F
1171+ A2CA 2D           4 dec l
1172+ A2CB E5               push hl
1173+ A2CC              ; ---
1174+ A2CC
1175+ A2CC              ;   Calcula el Puntero_objeto del disparo.
1176+ A2CC
1177+ A2CC 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2CF 04               inc b
1179+ A2D0 05               dec b
1180+ A2D1 28 04            jr z,2F
1181+ A2D3
1182+ A2D3              ;   Nos desplazamos por el índice de disparos.
1183+ A2D3
1184+ A2D3 2C           3 inc l
1185+ A2D4 2C               inc l
1186+ A2D5 10 FC            djnz 3B
1187+ A2D7
1188+ A2D7              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2D7 CD 1A 91     2 call Extrae_address
1190+ A2DA E5               push hl
1191+ A2DB              ; ---
1192+ A2DB
1193+ A2DB              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2DB              ; HL en el 1er .db de la caja.
1195+ A2DB
1196+ A2DB 21 25 89         ld hl,Disparo_Amad
1197+ A2DE
1198+ A2DE 06 02            ld b,2
1199+ A2E0
1200+ A2E0 D1           6 pop de
1201+ A2E1 73               ld (hl),e
1202+ A2E2 23               inc hl
1203+ A2E3 72               ld (hl),d
1204+ A2E4 23               inc hl
1205+ A2E5
1206+ A2E5 10 F9            djnz 6B
1207+ A2E7
1208+ A2E7 C9               ret
1209+ A2E8
1210+ A2E8              Genera_coordenadas_de_disparo_Amadeus
1211+ A2E8
1212+ A2E8              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2E8              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2E8              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2E8
1216+ A2E8 CD 1A 91         call Extrae_address
1217+ A2EB CD E4 94         call Genera_coordenadas
1218+ A2EE
1219+ A2EE 3D               dec a
1220+ A2EF
1221+ A2EF 21 6F 8C         ld hl,Coordenadas_disparo_certero
1222+ A2F2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2F3 23               inc hl
1224+ A2F4 3A EF 8B         ld a,(Coordenada_X)
1225+ A2F7 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2F8
1227+ A2F8 AF               xor a
1228+ A2F9 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2FA
1230+ A2FA C9               ret
1231+ A2FB
1232+ A2FB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2FB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2FB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2FB
1236+ A2FB              ; ----------------------------------------------
1237+ A2FB              ;
1238+ A2FB              ;   27/08/24
1239+ A2FB              ;
1240+ A2FB              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2FB              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2FB
1243+ A2FB              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2FB
1245+ A2FB              Extraccion_de_datos
1246+ A2FB
1247+ A2FB 13               inc de
1248+ A2FC 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2FD
1250+ A2FD 5E               ld e,(hl)
1251+ A2FE 23               inc hl
1252+ A2FF 56               ld d,(hl)
1253+ A300
1254+ A300 23               inc hl
1255+ A301
1256+ A301 4E               ld c,(hl)
1257+ A302 23               inc hl
1258+ A303 46               ld b,(hl)
1259+ A304
1260+ A304 C5               push bc
1261+ A305 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A306
1263+ A306              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A306
1265+ A306 CD E8 99         call PreviousScan
1266+ A309 CD E8 99         call PreviousScan
1267+ A30C
1268+ A30C              Detecta_impacto_
1269+ A30C
1270+ A30C 1A               ld a,(de)
1271+ A30D A6               and (hl)
1272+ A30E C0               ret nz
1273+ A30F
1274+ A30F 13               inc de
1275+ A310 23               inc hl
1276+ A311
1277+ A311 1A               ld a,(de)
1278+ A312 A6               and (hl)
1279+ A313 C9               ret
1280+ A314
1281+ A314              ; -------------------------------------------------------------------------------------------------------------
1282+ A314              ;
1283+ A314              ;   8/8/24
1284+ A314              ;
1285+ A314              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A314              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A314              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A314              ;
1289+ A314              ;   MODIFICA: HL,DE,BC y A.
1290+ A314              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A314              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A314
1293+ A314              Colision_Entidad_Amadeus
1294+ A314
1295+ A314              ; Posible contacto de entidad con Amadeus. ?????
1296+ A314
1297+ A314              ; Exclusiones:
1298+ A314
1299+ A314 3A 8F 8C         ld a,(Shield)
1300+ A317 A7               and a
1301+ A318 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A319
1303+ A319 21 65 8C         ld hl,Ctrl_3
1304+ A31C CB 76            bit 6,(hl)
1305+ A31E C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A31F
1307+ A31F 21 6C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A322 CB 56            bit 2,(hl)
1309+ A324 C0               ret nz
1310+ A325
1311+ A325 3A F0 8B     	ld a,(Coordenada_y)
1312+ A328 FE 14        	cp $14
1313+ A32A D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A32B
1315+ A32B 3A BB 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A32E A7               and a
1317+ A32F C0               ret nz
1318+ A330
1319+ A330              Genera_coordenadas_X
1320+ A330
1321+ A330              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A330              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A330
1324+ A330              ;   Limpiamos almacenes.
1325+ A330
1326+ A330              ;    call Limpia_Coordenadas_X
1327+ A330
1328+ A330              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A330
1330+ A330 21 71 8C         ld hl,Coordenadas_X_Entidad
1331+ A333 3A EF 8B         ld a,(Coordenada_X)
1332+ A336 CD 58 A3         call Guarda_coordenadas_X
1333+ A339
1334+ A339              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A339
1336+ A339 3A B8 89         ld a,(CX_Amadeus)
1337+ A33C CD 58 A3         call Guarda_coordenadas_X
1338+ A33F CD 6C A3         call Compara_coordenadas_X
1339+ A342 C0               ret nz
1340+ A343
1341+ A343 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A345 32 F2 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A348
1344+ A348 2A 2E 8C         ld hl,(Puntero_store_caja)
1345+ A34B 2C               inc l
1346+ A34C 2C               inc l
1347+ A34D 2C               inc l
1348+ A34E 2C               inc l
1349+ A34F 22 6D 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A352
1351+ A352 21 6C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A355 CB D6            set 2,(hl)
1353+ A357
1354+ A357 C9               ret
1355+ A358
1356+ A358               ; ----- ----- ----- ----- -----
1357+ A358
1358+ A358 77           Guarda_coordenadas_X ld (hl),a
1359+ A359 3C               inc a
1360+ A35A 2C               inc l
1361+ A35B 77               ld (hl),a
1362+ A35C 3C               inc a
1363+ A35D 2C               inc l
1364+ A35E 77               ld (hl),a
1365+ A35F 2C               inc l
1366+ A360 C9               ret
1367+ A361
1368+ A361 AF           Limpia_Coordenadas_X xor a
1369+ A362 06 06            ld b,6
1370+ A364 21 74 8C         ld hl,Coordenadas_X_Amadeus
1371+ A367 77           1 ld (hl),a
1372+ A368 23               inc hl
1373+ A369 10 FC            djnz 1B
1374+ A36B C9               ret
1375+ A36C
1376+ A36C              ; ----- ----- ----- ----- -----
1377+ A36C
1378+ A36C              Compara_coordenadas_X
1379+ A36C
1380+ A36C DD 21 71 8C      ld ix,Coordenadas_X_Entidad
1381+ A370 DD 7E 00         ld a,(ix+0)
1382+ A373 CD 81 A3         call Comparando
1383+ A376 C8               ret z
1384+ A377
1385+ A377 3C               inc a
1386+ A378 CD 90 A3         call Comparando_1
1387+ A37B C8               ret z
1388+ A37C
1389+ A37C 3C               inc a
1390+ A37D CD 90 A3         call Comparando_1
1391+ A380 C9               ret
1392+ A381
1393+ A381              ; ----- ----- ----- ----- -----
1394+ A381              ;
1395+ A381              ;   4/12/23
1396+ A381              ;
1397+ A381              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A381
1399+ A381              Comparando
1400+ A381
1401+ A381 DD 2C            inc ixl
1402+ A383 DD 2C            inc ixl
1403+ A385 DD 2C            inc ixl
1404+ A387
1405+ A387 DD 46 00         ld b,(ix+0)
1406+ A38A DD 4E 01         ld c,(ix+1)
1407+ A38D DD 56 02         ld d,(ix+2)
1408+ A390
1409+ A390 B8           Comparando_1 cp b
1410+ A391 C8               ret z
1411+ A392 B9               cp c
1412+ A393 C8               ret z
1413+ A394 BA               cp d
1414+ A395 C9               ret
1415+ A396
1416+ A396              ; -----------------------------------------------------------------------
1417+ A396              ;
1418+ A396              ;   04/7/24
1419+ A396              ;
1420+ A396
1421+ A396              Detecta_colision_nave_entidad
1422+ A396
1423+ A396              ; Exclusiones:
1424+ A396
1425+ A396              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A396
1427+ A396 21 6C 8C     	ld hl,Impacto2
1428+ A399 CB 56        	bit 2,(hl)
1429+ A39B C8           	ret z
1430+ A39C
1431+ A39C              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A39C
1433+ A39C 2A BE 89         ld hl,(Pamm_Amadeus)
1434+ A39F CD 1A 91         call Extrae_address
1435+ A3A2 54               ld d,h
1436+ A3A3 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A3A4
1438+ A3A4 2A BC 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A3A7 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A3A9 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A3AC
1442+ A3AC C5           1 push bc
1443+ A3AD 06 03            ld b,3
1444+ A3AF E5               push hl
1445+ A3B0
1446+ A3B0              ; .db
1447+ A3B0
1448+ A3B0 1A           3 ld a,(de)
1449+ A3B1 A7               and a
1450+ A3B2 20 03            jr nz,4F
1451+ A3B4
1452+ A3B4 2C               inc l
1453+ A3B5 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A3B7
1455+ A3B7 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A3B9 28 04            jr z,2F
1457+ A3BB
1458+ A3BB              ; Impacto.
1459+ A3BB FD 2D            dec iyl
1460+ A3BD 28 22            jr z,5F
1461+ A3BF
1462+ A3BF 1C           2 inc e
1463+ A3C0 10 EE            djnz 3B
1464+ A3C2
1465+ A3C2 E1               pop hl
1466+ A3C3
1467+ A3C3              ; Hay salto de línea en el puntero de impresión ???
1468+ A3C3
1469+ A3C3 7C               ld a,h
1470+ A3C4 D6 57            sub $57
1471+ A3C6 20 0A            jr nz,6F
1472+ A3C8
1473+ A3C8              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3C8
1475+ A3C8 2A BC 89         ld hl,(p.imp.amadeus)
1476+ A3CB 3E 20            ld a,$20
1477+ A3CD A7               and a
1478+ A3CE 85               add l
1479+ A3CF 6F               ld l,a
1480+ A3D0 18 01            jr 7F
1481+ A3D2
1482+ A3D2 24           6 inc h
1483+ A3D3
1484+ A3D3 C1           7 pop bc
1485+ A3D4 10 D6            djnz 1B
1486+ A3D6
1487+ A3D6              ;   Fin de la comparativa.
1488+ A3D6
1489+ A3D6              ;   NO HAY COLISIÓN !!!!!.
1490+ A3D6              ;
1491+ A3D6              ;   .db (Impacto) de Amadeus a "0".
1492+ A3D6              ;   RES el bit2 de (Impacto2).
1493+ A3D6              ;
1494+ A3D6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3D6              ;   Lo colocamos a "0".
1496+ A3D6
1497+ A3D6 21 6C 8C         ld hl,Impacto2
1498+ A3D9 CB 96            res 2,(hl)
1499+ A3DB 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3DE 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3E0 C9               ret
1502+ A3E1
1503+ A3E1              ;   COLISIÓN !!!!!.
1504+ A3E1              ;
1505+ A3E1              ;   .db (Impacto) de Amadeus a "1".
1506+ A3E1              ;   SET el bit3 de (Impacto2).
1507+ A3E1              ;
1508+ A3E1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3E1
1510+ A3E1 E1           5 pop hl
1511+ A3E2 C1               pop bc
1512+ A3E3
1513+ A3E3 21 BB 89         ld hl,Impacto_Amadeus
1514+ A3E6 36 01            ld (hl),1
1515+ A3E8 21 6C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3EB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3ED
1518+ A3ED 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3F0 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3F3
1521+ A3F3 23               inc hl
1522+ A3F4 23               inc hl
1523+ A3F5 23               inc hl
1524+ A3F6
1525+ A3F6 73               ld (hl),e
1526+ A3F7 23               inc hl
1527+ A3F8 72               ld (hl),d
1528+ A3F9
1529+ A3F9              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3F9
1531+ A3F9 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3FC 21 BE 89         ld hl,Pamm_Amadeus
1533+ A3FF
1534+ A3FF 73               ld (hl),e
1535+ A400 23               inc hl
1536+ A401 72               ld (hl),d
1537+ A402
1538+ A402 C9               ret
1539+ A403
1540+ A403
1541+ A403
# file closed: Disparo.asm
2107  A403
2108  A403              	SAVESNA "Pruebas.sna", START
2109  A403
2110  A403
2111  A403
2112  A403
# file closed: Banco_de_pruebas.asm
