# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E5 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A EF 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 03        	jr z,1F
  42  AA20
  43  AA20 CD BB 92     	call Extrae_foto_entidades
  44  AA23
  45  AA23              ;	ld a,6
  46  AA23              ;	out ($fe),a
  47  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  48  AA23
  49  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  50  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  51  AA23
  52  AA23              ;	ld a,7
  53  AA23              ;	out ($fe),a												; Borde blanco.
  54  AA23              ;	call Guarda_parametros_DRAW
  55  AA23              ;	call Restore_Amadeus
  56  AA23
  57  AA23              ; Posible colisión Entidad-Amadeus ???
  58  AA23
  59  AA23              ;	ld a,(Impacto2)
  60  AA23              ;	bit 2,a
  61  AA23              ;	jr z,1F
  62  AA23
  63  AA23              ;	call Detecta_colision_nave_entidad
  64  AA23
  65  AA23              ;1 ld a,4
  66  AA23              ;	out ($fe),a
  67  AA23              ;	call Gestiona_Amadeus
  68  AA23
  69  AA23              ;	ld a,7
  70  AA23              ;	out ($fe),a											; Borde blanco.
  71  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  72  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  73  AA23
  74  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  75  AA23
  76  AA23              ;	call Recupera_parametros_DRAW
  77  AA23
  78  AA23 CD 9C 8D     1 call Actualiza_relojes
  79  AA26
  80  AA26 21 EF 89     	ld hl,Ctrl_3
  81  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  82  AA2B
  83  AA2B FD E1        	pop iy
  84  AA2D DD E1        	pop ix
  85  AA2F F1           	pop af
  86  AA30 C1           	pop bc
  87  AA31 D1           	pop de
  88  AA32 E1           	pop hl
  89  AA33 D9           	exx
  90  AA34 C1           	pop bc
  91  AA35 D1           	pop de
  92  AA36 E1           	pop hl
  93  AA37 08           	ex af,af'
  94  AA38 F1           	pop af
  95  AA39 08           	ex af,af'
  96  AA3A D9           	exx
  97  AA3B
  98  AA3B ED 7B E5 89  	ld sp,(Stack_3)
  99  AA3F
 100  AA3F FB           	ei
 101  AA40
 102  AA40 3E 01        	ld a,1												; Borde azul.
 103  AA42 D3 FE        	out ($fe),a
 104  AA44
 105  AA44 C9           	ret
 106  AA45
 107  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 108  AA45
 109  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 20 83        	defw Badsat_der_f8
  97+ 82F4 50 83        	defw Badsat_der_f9
  98+ 82F6 80 83        	defw Badsat_der_fa
  99+ 82F8 B0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 104+ 8304 54 40 AA 40
 105+ 8308 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 105+ 830C 17 FE 06 C0
 106+ 8310 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 106+ 8314 17 D4 02 2A
 107+ 8318 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 107+ 831C 00 14 00 08
 108+ 8320
 109+ 8320 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 109+ 8324 20 00 2A 20
 110+ 8328 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 110+ 832C 2A A0 00 15
 111+ 8330 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 111+ 8334 00 03 60 00
 112+ 8338 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 112+ 833C F4 00 0B EA
 113+ 8340 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 113+ 8344 03 2A 80 00
 114+ 8348 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 114+ 834C 00 00 04 00
 115+ 8350
 116+ 8350 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 116+ 8354 10 00 15 10
 117+ 8358 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 117+ 835C 15 50 00 0A
 118+ 8360 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 118+ 8364 80 01 B0 00
 119+ 8368 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 119+ 836C FA 00 05 F5
 120+ 8370 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 120+ 8374 01 95 40 00
 121+ 8378 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 121+ 837C 00 00 02 00
 122+ 8380
 123+ 8380 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 123+ 8384 08 00 0A 88
 124+ 8388 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 124+ 838C 0A A8 00 05
 125+ 8390 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 125+ 8394 C0 00 D8 00
 126+ 8398 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 126+ 839C FD 00 02 FA
 127+ 83A0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 127+ 83A4 00 CA A0 00
 128+ 83A8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 128+ 83AC 80 00 01 00
 129+ 83B0
 130+ 83B0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 130+ 83B4 84 00 05 44
 131+ 83B8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 131+ 83BC 05 54 00 02
 132+ 83C0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 132+ 83C4 E0 00 6C 00
 133+ 83C8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 133+ 83CC FE 80 01 7D
 134+ 83D0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 134+ 83D4 00 65 50 00
 135+ 83D8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 135+ 83DC 40 00 00 80
 136+ 83E0
 137+ 83E0              	org $8400
 138+ 8400
 139+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 139+ 8404 42 00 02 A2
 140+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 140+ 840C 02 AA 00 01
 141+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 141+ 8414 F0 00 36 00
 142+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 142+ 841C FF 40 00 BE
 143+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 143+ 8424 00 32 A8 00
 144+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 144+ 842C A0 00 00 40
 145+ 8430
 146+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 146+ 8434 A1 00 01 51
 147+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 147+ 843C 01 55 00 00
 148+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 148+ 8444 F8 00 1B 00
 149+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 149+ 844C FF A0 00 1F
 150+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 150+ 8454 00 09 54 00
 151+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 151+ 845C 50 00 00 20
 152+ 8460
 153+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 153+ 8464 50 80 00 A8
 154+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 154+ 846C 00 AA 80 00
 155+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 155+ 8474 FC 00 0D 80
 156+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 156+ 847C FF D0 00 0F
 157+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 157+ 8484 00 04 AA 00
 158+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 158+ 848C 28 00 00 10
 159+ 8490
 160+ 8490              ; ----------------------------------------------------------------------------------------
 161+ 8490
 162+ 8490              ; Amadeus. 2x2.
 163+ 8490
 164+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 165+ 8492 00 00        	defw 0
 166+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 167+ 8496 00 00        	defw 0
 168+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 169+ 849A 00 00        	defw 0
 170+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 171+ 849E 00 00        	defw 0	 								; (Fín de índice).
 172+ 84A0
 173+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 174+ 84A2 00 00        	defw 0
 175+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 176+ 84A6 00 00        	defw 0
 177+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 178+ 84AA 00 00        	defw 0
 179+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 180+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 181+ 84B0
 182+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 182+ 84B4 26 64 24 24
 183+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 183+ 84BC 6F F6 67 E6
 184+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 184+ 84C4 F7 EF FF FF
 185+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 185+ 84CC 8B D1 71 8E
 186+ 84D0
 187+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 187+ 84D4 F1 00 09 99
 188+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 188+ 84DC 0B 0D 00 1B
 189+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 189+ 84E4 80 19 F9 80
 190+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 190+ 84EC F3 C0 3D FB
 191+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 191+ 84F4 3E F7 C0 3E
 192+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 192+ 84FC 40 1C 63 80
 193+ 8500
 194+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 194+ 8504 3C 40 02 66
 195+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 195+ 850C 02 C3 40 06
 196+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 196+ 8514 60 06 7E 60
 197+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 197+ 851C 3C F0 0F 7E
 198+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 198+ 8524 0F BD F0 0F
 199+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 199+ 852C 10 07 18 E0
 200+ 8530
 201+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 201+ 8534 8F 10 00 99
 202+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 202+ 853C 00 B0 D0 01
 203+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 203+ 8544 D8 01 9F 98
 204+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 204+ 854C CF 3C 03 DF
 205+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 205+ 8554 03 EF 7C 03
 206+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 206+ 855C 44 01 C6 38
 207+ 8560
 208+ 8560              ; ----------------------------------------------------------------------------------------
 209+ 8560
 210+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 211+ 8562 96 85        	defw Explosion_2x3_2
 212+ 8564 C6 85        	defw Explosion_2x3_3
 213+ 8566
 214+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 214+ 856A 10 00 04 38
 215+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 215+ 8572 02 E6 80 01
 216+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 216+ 857A 00 03 DD 80
 217+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 217+ 8582 3B 80 01 9D
 218+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 218+ 858A 02 FD 80 03
 219+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 219+ 8592 00 08 00 00
 220+ 8596
 221+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 221+ 859A 38 10 03 BC
 222+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 222+ 85A2 04 06 C0 00
 223+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 223+ 85AA 00 03 DD 80
 224+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 224+ 85B2 3A 70 01 9C
 225+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 225+ 85BA 04 F8 80 06
 226+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 226+ 85C2 00 00 00 00
 227+ 85C6
 228+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 228+ 85CA 00 20 08 00
 229+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 229+ 85D2 00 06 00 00
 230+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 230+ 85DA 00 00 14 30
 231+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 231+ 85E2 38 00 01 08
 232+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 232+ 85EA 00 80 00 04
 233+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 233+ 85F2 10 08 00 20
 234+ 85F6
 235+ 85F6              ; ------------------------------------------
 236+ 85F6
 237+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 238+ 85F8 20 86        	defw Explosion_2x2_2
 239+ 85FA 40 86        	defw Explosion_2x2_3
 240+ 85FC
 241+ 85FC              	org $8600
 242+ 8600
 243+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 243+ 8604 43 84 37 D8
 244+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 244+ 860C 17 F0 3D D8
 245+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 245+ 8614 19 D0 1F 60
 246+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 246+ 861C 40 00 80 00
 247+ 8620
 248+ 8620
 249+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 249+ 8624 3B C2 60 0C
 250+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 250+ 862C 07 F0 3D D8
 251+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 251+ 8634 19 C6 1F 64
 252+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 252+ 863C 80 00 00 00
 253+ 8640
 254+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 254+ 8644 88 04 10 0C
 255+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 255+ 864C 81 E0 01 43
 256+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 256+ 8654 10 80 18 00
 257+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 257+ 865C 60 01 80 02
 258+ 8660
 259+ 8660
 260+ 8660
 261+ 8660
 262+ 8660
# file closed: Sprites_e_indices.asm
 110  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 8719 40           	db $40												; (Ctrl_0).
 142+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 871E 00 00
 143+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 146+ 8726 00           	db 0 												; (Columnas).
 147+ 8727 00 00        	defw 0												; (Limite_horizontal).
 148+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 872C
 150+ 872C              ; ---------- ---------- ---------- ---------- ----------
 151+ 872C              ;
 152+ 872C              ;	22/01/24
 153+ 872C              ;
 154+ 872C              ; 	Cada caja tiene 19 bytes !!!
 155+ 872C
 156+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 872F 00           	db %00000000										; (Attr).
 158+ 8730              ;	db 0												; (Cuad_objeto).
 159+ 8730 00           	db 0												; (Impacto).
 160+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 873D 00           	db 0												; (Ctrl_0).
 165+ 873E 00           	db 0												; (Ctrl_2).
 166+ 873F
 167+ 873F              ; ---------- ---------- ---------- ---------- ----------
 168+ 873F
 169+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 8742 00           	db %00000000										; (Attr).
 171+ 8743              ;	db 0												; (Cuad_objeto).
 172+ 8743 00           	db 0												; (Impacto).
 173+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 8750 00           	db 0												; (Ctrl_0).
 178+ 8751 00           	db 0												; (Ctrl_2).
 179+ 8752
 180+ 8752              ; ---------- ---------- ---------- ---------- ----------
 181+ 8752
 182+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8755 00           	db %00000000										; (Attr).
 184+ 8756              ;	db 0												; (Cuad_objeto).
 185+ 8756 00           	db 0												; (Impacto).
 186+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8763 00           	db 0												; (Ctrl_0).
 191+ 8764 00           	db 0												; (Ctrl_2).
 192+ 8765
 193+ 8765              ; ---------- ---------- ---------- ---------- ----------
 194+ 8765
 195+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8768 00           	db %00000000										; (Attr).
 197+ 8769              ;	db 0												; (Cuad_objeto).
 198+ 8769 00           	db 0												; (Impacto).
 199+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8776 00           	db 0												; (Ctrl_0).
 204+ 8777 00           	db 0												; (Ctrl_2).
 205+ 8778
 206+ 8778              ; ---------- ---------- ---------- ---------- ----------
 207+ 8778
 208+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 877B 00           	db %00000000										; (Attr).
 210+ 877C              ;	db 0												; (Cuad_objeto).
 211+ 877C 00           	db 0												; (Impacto).
 212+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8789 00           	db 0												; (Ctrl_0).
 217+ 878A 00           	db 0												; (Ctrl_2).
 218+ 878B
 219+ 878B              ; ---------- ---------- ---------- ---------- ----------
 220+ 878B
 221+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 878E 00           	db %00000000										; (Attr).
 223+ 878F              ;	db 0												; (Cuad_objeto).
 224+ 878F 00           	db 0												; (Impacto).
 225+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 879C 00           	db 0												; (Ctrl_0).
 230+ 879D 00           	db 0												; (Ctrl_2).
 231+ 879E
 232+ 879E              ; ---------- ---------- ---------- ---------- ----------
 233+ 879E
 234+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 87A1 00           	db %00000000										; (Attr).
 236+ 87A2              ;	db 0												; (Cuad_objeto).
 237+ 87A2 00           	db 0												; (Impacto).
 238+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 87AF 00           	db 0												; (Ctrl_0).
 243+ 87B0 00           	db 0												; (Ctrl_2).
 244+ 87B1
 245+ 87B1              ; -------------------------------------------------------------------------------------
 246+ 87B1              ;
 247+ 87B1              ;	11/1/24
 248+ 87B1              ;
 249+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 87B1              ;
 251+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 87B1
 256+ 87B1              Indice_de_definiciones_de_entidades
 257+ 87B1
 258+ 87B1 B5 87        	defw Entidad_1
 259+ 87B3 C2 87        	defw Entidad_2
 260+ 87B5
 261+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 87B5
 263+ 87B5              ;	BADSAT, (Satélite malvado).
 264+ 87B5
 265+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 87B8 04           	db %00000100										; (Attr).
 267+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 270+ 87BF 01           	db 1												; (Cuad_objeto).
 271+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 87C2
 273+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 87C5 02           	db %00000010										; (Attr).
 275+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 87CC 01           	db 1												; (Cuad_objeto).
 279+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 87CF
# file closed: Cajas_y_disparos.asm
 111  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 112  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
# file closed: Niveles.asm
 113  898A
 114  898A              ; ******************************************************************************************************************************************************************************************
 115  898A              ; Constantes.
 116  898A              ; ******************************************************************************************************************************************************************************************
 117  898A              ;
 118  898A              ; 25/12/23
 119  898A
 120  898A              ;
 121  898A              ; Constantes.
 122  898A              ;
 123  898A
 124  898A              Sprite_vacio equ $eae0
 125  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 126  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 127  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 128  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 129  898A
 130  898A              Almacen_de_scanlines_masticados equ $e9df
 131  898A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 132  898A              Almacen_de_movimientos_masticados_Amadeus equ $e700
 133  898A              ;
 134  898A              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 135  898A              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 136  898A              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 137  898A              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 138  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 139  898A              ;														; 55 Bytes.
 140  898A
 141  898A              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 142  898A              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 143  898A
 144  898A              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 145  898A
 146  898A              ; ******************************************************************************************************************************************************************************************
 147  898A              ; Variables.
 148  898A              ; ******************************************************************************************************************************************************************************************
 149  898A              ;
 150  898A              ; 18/01/24
 151  898A              ;
 152  898A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 153  898A              ;
 154  898A
 155  898A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 156  898A
 157  898A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 158  898B              ;															- Patrón de movimiento.
 159  898B              ;															- Aspecto
 160  898B 00           Filas db 0												; Filas. [DRAW]
 161  898C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 162  898D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 163  898F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 164  8991 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 165  8992 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 166  8993
 167  8993              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 168  8993
 169  8993 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 170  8994              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 171  8994              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 172  8994 00           Attr db 0												; Atributos de la entidad:
 173  8995
 174  8995              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 175  8995              ;
 176  8995              ;	COLORES: 0 ..... NEGRO
 177  8995              ;    		 1 ..... AZUL
 178  8995              ; 			 2 ..... ROJO
 179  8995              ;			 3 ..... MAGENTA
 180  8995              ; 			 4 ..... VERDE
 181  8995              ; 			 5 ..... CIAN
 182  8995              ;			 6 ..... AMARILLO
 183  8995              ; 			 7 ..... BLANCO
 184  8995
 185  8995 00 00        Indice_Sprite_der defw 0
 186  8997 00 00        Indice_Sprite_izq defw 0
 187  8999 00 00        Puntero_DESPLZ_der defw 0
 188  899B 00 00        Puntero_DESPLZ_izq defw 0
 189  899D
 190  899D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 191  899F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 192  89A0
 193  89A0              ; Variables de objeto. (Características).
 194  89A0
 195  89A0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 196  89A1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 197  89A1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 198  89A1 00 00 00...  Variables_de_borrado ds 6
 199  89A7
 200  89A7 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 201  89A9              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 202  89A9
 203  89A9 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 204  89AB
 205  89AB              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 206  89AB              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 207  89AB
 208  89AB 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 209  89AD              ;														; _palabras que componen el "movimiento_masticado".
 210  89AD
 211  89AD              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 212  89AD
 213  89AD 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 214  89AE              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 215  89AE              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 216  89AE              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 217  89AE              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 218  89AE              ;
 219  89AE              ; 														DESCRIPCIÖN:
 220  89AE              ;
 221  89AE              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 222  89AE              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 223  89AE              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 224  89AE              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 225  89AE              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 226  89AE              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 227  89AE              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 228  89AE              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 229  89AE              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 230  89AE              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 231  89AE              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 232  89AE              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 233  89AE              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 234  89AE              ;
 235  89AE              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 236  89AE              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 237  89AE              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 238  89AE
 239  89AE              ; Variables de funcionamiento. [DRAW].
 240  89AE
 241  89AE 00           Columnas db 0
 242  89AF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 243  89B1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 244  89B1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 245  89B2
 246  89B2              ; variables de control general.
 247  89B2
 248  89B2 00           Ctrl_2 db 0
 249  89B3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 250  89B3              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 251  89B3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 252  89B3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 253  89B3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 254  89B3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 255  89B3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 256  89B3              ;
 257  89B3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 258  89B3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 259  89B3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 260  89B3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 261  89B3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 262  89B3              ;														BIT 4, ???
 263  89B3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 264  89B3
 265  89B3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 266  89B4
 267  89B4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 268  89B4
 269  89B4              ;					         		---------;      ;---------
 270  89B4
 271  89B4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 272  89B4
 273  89B4              Perfiles_de_velocidad
 274  89B4
 275  89B4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 276  89B5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 277  89B6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 278  89B7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 279  89B8
 280  89B8              ; Contadores de 16 bits.
 281  89B8
 282  89B8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 283  89BA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 284  89BC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 285  89BE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 286  89C0
 287  89C0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 288  89C0
 289  89C0 DF E9        Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 290  89C2 02 80        Puntero_de_scanlines_en_album defw Album_de_fotos+2
 291  89C4
 292  89C4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 293  89C6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 294  89C8 00 00        Puntero_indice_mov_bucle defw 0							;
 295  89CA              ;
 296  89CA              ;
 297  89CA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 298  89CB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 299  89CB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 300  89CB 00           Incrementa_puntero_backup db 0
 301  89CC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 302  89CD              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 303  89CD 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 304  89CE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 305  89CF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 306  89D0              ;
 307  89D0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 308  89D0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 309  89D0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 310  89D0              ;
 311  89D0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 312  89D0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 313  89D0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 314  89D0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 315  89D0              ;
 316  89D0              ;														;	"$ff" ..... Bucle infinito de repetición.
 317  89D0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 318  89D0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 319  89D0              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 320  89D0
 321  89D0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 322  89D1
 323  89D1              ;														DESCRIPCIÓN:
 324  89D1              ;
 325  89D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 326  89D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 327  89D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 328  89D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 329  89D1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 330  89D1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 331  89D1
 332  89D1              ;														BIT 3, Recarga de nueva oleada.
 333  89D1              ;														BIT 4, Recarga de nueva oleada.
 334  89D1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 335  89D1              ;														BIT 6, **** Frame completo.
 336  89D1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 337  89D1
 338  89D1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 339  89D3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 340  89D3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 341  89D3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 342  89D3
 343  89D3              ; Gestión de ENTIDADES y CAJAS.
 344  89D3
 345  89D3 00 00        Puntero_store_caja defw 0
 346  89D5 00 00        Puntero_restore_caja defw 0
 347  89D7 00 00        Indice_restore_caja defw 0
 348  89D9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 349  89DA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 350  89DB 00           Entidades_en_curso db 0									; ..... ..... .....
 351  89DC 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 352  89DD              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 353  89DD              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 354  89DD              ;														; _ (Numero_de_malotes)="0".
 355  89DD 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 356  89DF 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 357  89E1              ;														; _ puntero (Indice_entidades).
 358  89E1
 359  89E1              ;---------------------------------------------------------------------------------------------------------------
 360  89E1              ;
 361  89E1              ;	11/01/24
 362  89E1              ;
 363  89E1              ;	Álbumes.
 364  89E1
 365  89E1 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 366  89E3              ;														; _variable para almacenar lo posición del puntero_
 367  89E3              ; 														; _de pila, SP.
 368  89E3 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 369  89E5              ;														; La utiliza la rutina [Extrae_foto_registros].
 370  89E5 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 371  89E7 00 80        Stack_snapshot defw Album_de_fotos
 372  89E9 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 373  89EB
 374  89EB              ;End_Snapshot defw Album_de_fotos
 375  89EB              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 376  89EB 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 377  89ED              ;														; _el snapshot de los registros del siguiente disparo.
 378  89ED              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 379  89ED AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 380  89EF
 381  89EF 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 382  89F0              ;
 383  89F0              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 384  89F0              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 385  89F0              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 386  89F0
 387  89F0 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 388  89F1              ;
 389  89F1              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 390  89F1              ;
 391  89F1              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 392  89F1              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 393  89F1              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 394  89F1              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 395  89F1              ;
 396  89F1              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 397  89F1              ;															_ masticados ya generados.
 398  89F1              ;
 399  89F1              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 400  89F1              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 401  89F1              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 402  89F1              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 403  89F1
 404  89F1
 405  89F1              ; Gestión de Disparos.
 406  89F1
 407  89F1 00           Numero_de_disparotes db 0
 408  89F2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 409  89F4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 410  89F6 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 411  89F7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 412  89F7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 413  89F7 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 414  89F9              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 415  89F9              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 416  89F9              ;														; _produzca colisión.
 417  89F9 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 418  89FB              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 419  89FB 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 420  89FE              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 421  89FE 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 422  8A01              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 423  8A01 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 424  8A02
 425  8A02              ;---------------------------------------------------------------------------------------------------------------
 426  8A02
 427  8A02              ; Relojes y temporizaciones.
 428  8A02
 429  8A02 00           Contador_de_frames db 0
 430  8A03 00           Contador_de_frames_2 db 0
 431  8A04
 432  8A04 04           Clock_explosion db 4
 433  8A05 14           Clock_Entidades_en_curso db 20
 434  8A06 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 435  8A07              ;														; Repite la oleada de entidades.
 436  8A07 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 437  8A08 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 438  8A09 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 439  8A0A
 440  8A0A 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 441  8A0B 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 442  8A0C 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 443  8A0D
 444  8A0D              ;---------------------------------------------------------------------------------------------------------------
 445  8A0D
 446  8A0D              ; Gestión de NIVELES.
 447  8A0D
 448  8A0D 00           Nivel db 0												; Nivel actual del juego.
 449  8A0E 00 00        Puntero_indice_NIVELES defw 0
 450  8A10 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 451  8A12              ; 														; _ que definen el NIVEL.
 452  8A12              ; Y todo comienza aquí .....
 453  8A12              ;
 454  8A12              ; 	INICIO  *************************************************************************************************************************************************************************
 455  8A12              ;
 456  8A12              ;	5/1/24
 457  8A12
 458  8A12              START
 459  8A12
 460  8A12 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 461  8A15 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 462  8A17 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 463  8A19 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 464  8A1B F3           	DI
 465  8A1C
 466  8A1C              ;	ld a,%00000111
 467  8A1C              ;	call Cls
 468  8A1C CD 0D 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 469  8A1F
 470  8A1F              ; INICIALIZACIÓN.
 471  8A1F
 472  8A1F              ;	Inicializa 1er Nivel.
 473  8A1F
 474  8A1F 21 6B 89     	ld hl,Indice_de_niveles
 475  8A22 22 0E 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 476  8A25 CD AE 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 477  8A28              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 478  8A28              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 479  8A28              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 480  8A28
 481  8A28              ;	Provisional, (para desarrollo).
 482  8A28
 483  8A28              	;-
 484  8A28              ;	ld hl,Numero_parcial_de_entidades
 485  8A28              ;	ld b,(hl)
 486  8A28              ;	inc b
 487  8A28              ;	dec b
 488  8A28              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 489  8A28
 490  8A28 CD F3 8D     4 call Inicia_Entidades
 491  8A2B
 492  8A2B CD D0 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 493  8A2E
 494  8A2E              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 495  8A2E              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 496  8A2E              ; (Esto se dá cuando se inicia una nueva oleada).
 497  8A2E
 498  8A2E              ;	ld a,(Ctrl_1)
 499  8A2E              ;	bit 3,a
 500  8A2E              ;	jr nz,5F											; Loop
 501  8A2E
 502  8A2E              ; 	INICIA AMADEUS !!!!!
 503  8A2E
 504  8A2E              ;3 call Restore_Amadeus
 505  8A2E              ;	call Inicia_Puntero_objeto
 506  8A2E              ;	call Draw
 507  8A2E
 508  8A2E              ;	call Guarda_movimiento_masticado	;! Provisional
 509  8A2E
 510  8A2E              ;	call Guarda_foto_registros
 511  8A2E              ;	call Guarda_datos_de_borrado_Amadeus
 512  8A2E
 513  8A2E              ;	ld de,Amadeus_db
 514  8A2E              ;	call Store_Amadeus
 515  8A2E
 516  8A2E              ; 	INICIA DISPAROS !!!!!
 517  8A2E
 518  8A2E              ;	call Inicia_Puntero_Disparo_Entidades
 519  8A2E              ;	call Inicia_Puntero_Disparo_Amadeus
 520  8A2E
 521  8A2E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 522  8A2E
 523  8A2E              ;5 call Inicia_punteros_de_cajas
 524  8A2E              ;	call Restore_entidad
 525  8A2E
 526  8A2E              ;	ld a,(Ctrl_1)
 527  8A2E              ;	bit 3,a
 528  8A2E              ;	jr z,6F
 529  8A2E
 530  8A2E              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 531  8A2E
 532  8A2E              ;	ld hl,Ctrl_1
 533  8A2E              ;	res 3,(hl)
 534  8A2E              ;	jr Main
 535  8A2E
 536  8A2E              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 537  8A2E
 538  8A2E CD 1C 8C     6 call Calcula_numero_de_malotes
 539  8A31 CD 0B 8B     	call Genera_scanlines_masticados
 540  8A34
 541  8A34 21 EF 89     	ld hl,Ctrl_3
 542  8A37 CB C6        	set 0,(hl)											; Frame completo.
 543  8A39 FB           	ei
 544  8A3A 76           	halt
 545  8A3B
 546  8A3B              ; ------------------------------------
 547  8A3B
 548  8A3B              Main
 549  8A3B              ;
 550  8A3B              ;	11/12/23
 551  8A3B
 552  8A3B              ; Aparece nueva entidad ???
 553  8A3B
 554  8A3B              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 555  8A3B              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 556  8A3B              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 557  8A3B              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 558  8A3B              ;														; _un 2º bloque.
 559  8A3B
 560  8A3B              ;	call Limpia_Sprites
 561  8A3B CD 17 81     	call Limpia_y_reinicia_Stack_Snapshot 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 562  8A3E              ; 													 	; _(Stack_snapshot).
 563  8A3E
 564  8A3E 3A 05 8A     	ld a,(Clock_Entidades_en_curso)
 565  8A41 47           	ld b,a
 566  8A42 3A 02 8A     	ld a,(Contador_de_frames)
 567  8A45 B8           	cp b
 568  8A46 20 18        	jr nz,13F
 569  8A48
 570  8A48              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 571  8A48              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 572  8A48
 573  8A48 3A DA 89     21 ld a,(Numero_parcial_de_entidades)
 574  8A4B 47           	ld b,a
 575  8A4C 3A DB 89     	ld a,(Entidades_en_curso)
 576  8A4F B8           	cp b
 577  8A50 28 0E        	jr z,13F
 578  8A52 30 0C        	jr nc,13F
 579  8A54
 580  8A54 3C           	inc a
 581  8A55 32 DB 89     	ld (Entidades_en_curso),a
 582  8A58
 583  8A58              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 584  8A58
 585  8A58 3A 05 8A     	ld a,(Clock_Entidades_en_curso)
 586  8A5B              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 587  8A5B              ;! _ IMPREDECIBLE !!!!
 588  8A5B C6 64        	add 100
 589  8A5D 32 05 8A     	ld (Clock_Entidades_en_curso),a
 590  8A60
 591  8A60              ; -------------------------------------------------------------------------------------------------------------
 592  8A60
 593  8A60              ; Habilita disparos.
 594  8A60
 595  8A60              13
 596  8A60
 597  8A60              ;	ld hl,Disparo_Amadeus
 598  8A60              ;	ld de,CLOCK_repone_disparo_Amadeus
 599  8A60              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 600  8A60
 601  8A60              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 602  8A60              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 603  8A60              ;	call Habilita_disparos
 604  8A60
 605  8A60              ; COLISIONES.
 606  8A60
 607  8A60              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 608  8A60
 609  8A60              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 610  8A60              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 611  8A60              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 612  8A60
 613  8A60              ;	xor a
 614  8A60              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 615  8A60
 616  8A60              ;	call Inicia_punteros_de_cajas
 617  8A60              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 618  8A60              ; 														; _ en DRAW.
 619  8A60
 620  8A60              ;	ld a,(Filas)
 621  8A60              ;	and a
 622  8A60              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 623  8A60              ;	call Incrementa_punteros_de_cajas
 624  8A60              ;	jr 12B
 625  8A60
 626  8A60              ; ---------------------------------------------------------------------------------------
 627  8A60
 628  8A60 3A DA 89     10 ld a,(Numero_parcial_de_entidades)
 629  8A63 47               ld b,a
 630  8A64 A7           	and a
 631  8A65 20 00        	jr nz,11F
 632  8A67
 633  8A67              ;	ld hl,Ctrl_1;
 634  8A67              ;	bit 4,(hl)
 635  8A67              ;	jp nz,16F
 636  8A67
 637  8A67              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 638  8A67
 639  8A67              ;	ld hl,Ctrl_1
 640  8A67              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 641  8A67
 642  8A67              ;	ld a,(Contador_de_frames)
 643  8A67              ;	inc a
 644  8A67              ;	ld (Activa_recarga_cajas),a
 645  8A67
 646  8A67              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 647  8A67
 648  8A67 3A DB 89     11 ld a,(Entidades_en_curso)
 649  8A6A A7           	and a
 650  8A6B 28 21        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 651  8A6D 47           	ld b,a												; No hay entidades que gestionar.
 652  8A6E
 653  8A6E F3           	di
 654  8A6F 18 FE        	jr $
 655  8A71 FB           	ei
 656  8A72
 657  8A72              ; ( Código que ejecutamos con cada entidad: ).
 658  8A72
 659  8A72              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 660  8A72
 661  8A72 C5           15 push bc 												; Nº de entidades en curso.
 662  8A73
 663  8A73 CD A3 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 664  8A76
 665  8A76 3A EF 89     	ld a,(Ctrl_3)
 666  8A79 CB 57        	bit 2,a
 667  8A7B F3           	di
 668  8A7C 20 FE        	jr nz,$
 669  8A7E FB           	ei
 670  8A7F
 671  8A7F              ; Existe "Entidad_guía" ???.
 672  8A7F              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 673  8A7F
 674  8A7F              ;	ld a,(Ctrl_3)
 675  8A7F              ;	bit 1,a
 676  8A7F              ;	jr nz,22F
 677  8A7F
 678  8A7F              ; Almacén de "Movimientos_masticados" lleno ???
 679  8A7F              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 680  8A7F              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 681  8A7F
 682  8A7F              ;;	ld a,(Ctrl_3)
 683  8A7F              ;;	bit 3,a
 684  8A7F              ;;	jr nz,22F
 685  8A7F
 686  8A7F              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 687  8A7F
 688  8A7F              ;	ld hl,Ctrl_2
 689  8A7F              ;	set 5,(hl)
 690  8A7F              ;	ld hl,Ctrl_3
 691  8A7F              ;	set 1,(hl)
 692  8A7F
 693  8A7F              ; Impacto ???
 694  8A7F
 695  8A7F              ;22 ld a,(Impacto)
 696  8A7F              ;	and a
 697  8A7F              ;	jr z,8F
 698  8A7F
 699  8A7F              ; Hay Impacto en esta entidad.
 700  8A7F
 701  8A7F              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 702  8A7F              ;	dec (hl)
 703  8A7F              ;	jp nz,17F
 704  8A7F
 705  8A7F              ;! Velocidad de la animación de la explosión.
 706  8A7F
 707  8A7F              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 708  8A7F              ;														; _,(velocidad de la explosión).
 709  8A7F              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 710  8A7F
 711  8A7F              ;	call Repone_datos_de_borrado
 712  8A7F              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 713  8A7F
 714  8A7F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 715  8A7F
 716  8A7F              ;	ld a,(Ctrl_2)
 717  8A7F              ;	bit 1,a
 718  8A7F              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 719  8A7F
 720  8A7F              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 721  8A7F
 722  8A7F              ;	ld a,(CTRL_DESPLZ)
 723  8A7F              ;	and a
 724  8A7F              ;	jr nz,18F
 725  8A7F
 726  8A7F              ;	ld hl,Indice_Explosion_2x2-2
 727  8A7F              ;	ld (Puntero_DESPLZ_der),hl
 728  8A7F              ;	jr 19F
 729  8A7F
 730  8A7F              ;18 ld hl,Indice_Explosion_2x3-2
 731  8A7F              ;	ld (Puntero_DESPLZ_der),hl
 732  8A7F
 733  8A7F              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 734  8A7F              ;	set 1,(hl)
 735  8A7F              ;	jr 7F
 736  8A7F
 737  8A7F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 738  8A7F              ; _con las coordenadas de la entidad almacenada en DRAW.
 739  8A7F
 740  8A7F              ;8 ld a,(Ctrl_1)
 741  8A7F              ;	bit 2,a
 742  8A7F              ;	jr z,7F
 743  8A7F
 744  8A7F              ;	ld hl,(Coordenadas_disparo_certero)
 745  8A7F              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 746  8A7F              ;														; E contiene la coordenada_X del disparo.
 747  8A7F              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 748  8A7F              ;														; H FILA, (Coordenada_y de la entidad).
 749  8A7F              ;	and a
 750  8A7F              ;	sbc hl,de
 751  8A7F
 752  8A7F              ;	call Determina_resultado_comparativa
 753  8A7F
 754  8A7F              ;	ld a,b
 755  8A7F              ;	and a
 756  8A7F              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 757  8A7F
 758  8A7F              ; ----- ----- -----
 759  8A7F
 760  8A7F              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 761  8A7F              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 762  8A7F
 763  8A7F              ;	ld hl,Ctrl_1
 764  8A7F              ;	res 2,(hl)
 765  8A7F
 766  8A7F CD A1 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 767  8A82
 768  8A82              ;	ld a,(Ctrl_0)
 769  8A82              ;	bit 4,a
 770  8A82              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 771  8A82
 772  8A82              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 773  8A82              ; [[[
 774  8A82              ;	call Detecta_disparo_entidad
 775  8A82              ; ]]]
 776  8A82
 777  8A82 CD 5D 8E     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 778  8A85
 779  8A85              ;	ld hl,Ctrl_0
 780  8A85              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 781  8A85
 782  8A85 CD 4D 8E     17 call Store_Restore_cajas
 783  8A88
 784  8A88 C1           	pop bc
 785  8A89
 786  8A89 10 E7        	djnz 15B
 787  8A8B
 788  8A8B CD D0 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 789  8A8E
 790  8A8E              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 791  8A8E              ; Hemos gestionado todas las unidades.
 792  8A8E              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 793  8A8E
 794  8A8E              ;	ld hl,Ctrl_1
 795  8A8E              ;	res 2,(hl)
 796  8A8E
 797  8A8E              16
 798  8A8E CD 1C 8C     	call Calcula_numero_de_malotes
 799  8A91 CD 0B 8B     	call Genera_scanlines_masticados
 800  8A94
 801  8A94 21 EF 89     	ld hl,Ctrl_3
 802  8A97 CB C6        	set 0,(hl)											; Frame completo.
 803  8A99
 804  8A99 AF           	xor a
 805  8A9A D3 FE        	out ($fe),a
 806  8A9C 76           	halt
 807  8A9D
 808  8A9D              ; ----------------------------------------
 809  8A9D
 810  8A9D              ;	ld a,(Ctrl_1) 										; Existe Loop?
 811  8A9D              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 812  8A9D CA 3B 8A     	jp z,Main
 813  8AA0
 814  8AA0              ; RECARGA DE NUEVA OLEADA.
 815  8AA0
 816  8AA0              ;	ld a,(Contador_de_frames)
 817  8AA0              ;	ld b,a
 818  8AA0              ;	ld a,(Activa_recarga_cajas)
 819  8AA0              ;	cp b
 820  8AA0              ;	jr z,20F
 821  8AA0
 822  8AA0              ;	ld hl,Ctrl_1
 823  8AA0              ;	set 4,(hl)
 824  8AA0              ;	jp Main
 825  8AA0
 826  8AA0              ;20 ld hl,Ctrl_1
 827  8AA0              ;	res 4,(hl)
 828  8AA0
 829  8AA0              ;	ld a,(Contador_de_frames)
 830  8AA0
 831  8AA0              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 832  8AA0              ;! _ IMPREDECIBLE !!!!
 833  8AA0
 834  8AA0              ;	add 10
 835  8AA0              ;	ld (Clock_Entidades_en_curso),a
 836  8AA0
 837  8AA0              ;	jp 4B
 838  8AA0
 839  8AA0 C9           	ret
 840  8AA1
 841  8AA1              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 842  8AA1              ;
 843  8AA1              ;	16/11/23
 844  8AA1
 845  8AA1              ;;Gestiona_Amadeus
 846  8AA1
 847  8AA1              ;! Activa/desactiva impacto con Amadeus.
 848  8AA1
 849  8AA1              ;	ld a,(Impacto)
 850  8AA1              ;	and a
 851  8AA1              ;	jr nz,2F
 852  8AA1
 853  8AA1              ;;	call Mov_Amadeus
 854  8AA1
 855  8AA1              ;;2 ld a,(Ctrl_0)
 856  8AA1              ;;	bit 4,a
 857  8AA1              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 858  8AA1
 859  8AA1              ;;	call Guarda_foto_entidad_a_pintar
 860  8AA1              ;;	call Guarda_datos_de_borrado_Amadeus
 861  8AA1
 862  8AA1              ;;1 ld hl,Ctrl_0
 863  8AA1              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 864  8AA1
 865  8AA1              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 866  8AA1
 867  8AA1              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 868  8AA1
 869  8AA1              ;	call Calcula_numero_de_disparotes
 870  8AA1
 871  8AA1              ;;	ret
 872  8AA1
 873  8AA1              ; --------------------------------------------------------------------------------------------------------------
 874  8AA1              ;
 875  8AA1              ;	15/12/23
 876  8AA1
 877  8AA1              Mov_obj
 878  8AA1
 879  8AA1              ;	ld a,(Ctrl_2)
 880  8AA1              ;	bit 1,a
 881  8AA1              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 882  8AA1
 883  8AA1              ; Explosión:
 884  8AA1
 885  8AA1              ;	ld a,(Frames_explosion)
 886  8AA1              ;	and a
 887  8AA1              ;	jr nz,4F
 888  8AA1
 889  8AA1              ;!  Una alimaña menos!!!!!!!!!1
 890  8AA1
 891  8AA1              ; Se trataba de una Entidad_guía ???
 892  8AA1
 893  8AA1              ;	ld a,(Ctrl_2)
 894  8AA1              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 895  8AA1              ;	jr z,5F
 896  8AA1
 897  8AA1              ;	ld hl,Ctrl_3
 898  8AA1              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 899  8AA1
 900  8AA1              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 901  8AA1              ;!! _generado puede ser distinto, (aletoriedad).
 902  8AA1
 903  8AA1              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 904  8AA1              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 905  8AA1              ;	dec (hl)
 906  8AA1              ;	ld hl,Entidades_en_curso
 907  8AA1              ;	dec (hl)
 908  8AA1              ;	ld hl,Numero_de_entidades
 909  8AA1              ;	dec (hl)
 910  8AA1              ;	jr 3F
 911  8AA1
 912  8AA1              ; -----
 913  8AA1
 914  8AA1              ;	`Movemos´ la explosión.
 915  8AA1
 916  8AA1              ;4 ld hl,(Puntero_DESPLZ_der)
 917  8AA1              ;	inc hl
 918  8AA1              ;	inc hl
 919  8AA1              ;	call Extrae_address
 920  8AA1              ;;	ld (Puntero_objeto),hl
 921  8AA1
 922  8AA1              ;;	ld hl,Frames_explosion
 923  8AA1              ;;	dec (hl)
 924  8AA1
 925  8AA1              ;;	ld hl,Ctrl_0
 926  8AA1              ;;	set 4,(hl);;
 927  8AA1
 928  8AA1              ;;	jr 3F
 929  8AA1
 930  8AA1              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 931  8AA1
 932  8AA1              ;2 xor a
 933  8AA1              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 934  8AA1
 935  8AA1              ; Movemos Entidades malignas.
 936  8AA1              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 937  8AA1
 938  8AA1              ;	ld a,(Ctrl_2)
 939  8AA1              ;	bit 5,a
 940  8AA1              ;	jr nz,8F
 941  8AA1
 942  8AA1              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 943  8AA1              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 944  8AA1              ;	jr 7F
 945  8AA1
 946  8AA1              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 947  8AA1
 948  8AA1              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 949  8AA1              ;	bit 4,a
 950  8AA1              ;	ret z
 951  8AA1
 952  8AA1              ; Ha habido desplazamiento de la entidad maligna.
 953  8AA1              ; Ha llegado a zona de AMADEUS ???
 954  8AA1
 955  8AA1              ;7 ld a,(Coordenada_y)
 956  8AA1              ;	cp $14
 957  8AA1              ;	jr c,1F
 958  8AA1
 959  8AA1              ; ---------
 960  8AA1
 961  8AA1              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 962  8AA1              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 963  8AA1
 964  8AA1              ;	di
 965  8AA1              ;	call Genera_coordenadas_X
 966  8AA1              ;	call Compara_coordenadas_X
 967  8AA1              ;	ei
 968  8AA1
 969  8AA1              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 970  8AA1
 971  8AA1              ; ---------
 972  8AA1
 973  8AA1              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 974  8AA1              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 975  8AA1              ;	call Limpia_Variables_de_borrado
 976  8AA1
 977  8AA1 C9           3 ret
 978  8AA2
 979  8AA2              ; --------------------------------------------------------------------------------------------------------------
 980  8AA2              ;
 981  8AA2              ;	29/1/23
 982  8AA2
 983  8AA2              Mov_Amadeus
 984  8AA2
 985  8AA2              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 986  8AA2
 987  8AA2 CD 40 96     	call Mov_right
 988  8AA5
 989  8AA5 3A AD 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 990  8AA8 CB 67        	bit 4,a
 991  8AAA C8           	ret z
 992  8AAB
 993  8AAB              ; ---------
 994  8AAB
 995  8AAB              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 996  8AAB CD 71 8D     	call Repone_datos_de_borrado_Amadeus
 997  8AAE CD 0E 8C     	call Limpia_Variables_de_borrado
 998  8AB1
 999  8AB1 C9           	ret
1000  8AB2
1001  8AB2              ; -----------------------------------------------------------------------------------
1002  8AB2              ;
1003  8AB2              ;	20/01/24
1004  8AB2              ;
1005  8AB2              ;
1006  8AB2
1007  8AB2              Construye_movimientos_masticados_entidad
1008  8AB2
1009  8AB2 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1010  8AB5 E5           	push hl
1011  8AB6 CD 72 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1012  8AB9              ;															; _ el (Contador_de_mov_masticados).
1013  8AB9 CD 6E 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1014  8ABC              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1015  8ABC              ;	call Recompone_posicion_inicio
1016  8ABC
1017  8ABC CD A4 8F     1 call Draw
1018  8ABF CD 56 8B     	call Guarda_movimiento_masticado
1019  8AC2
1020  8AC2 CD 16 99     	call Movimiento
1021  8AC5
1022  8AC5 3A EF 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1023  8AC8 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1024  8ACA 28 F0        	jr z,1B
1025  8ACC
1026  8ACC              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1027  8ACC              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1028  8ACC
1029  8ACC E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1030  8ACD 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1031  8AD0
1032  8AD0              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1033  8AD0
1034  8AD0 CD 7A 9A     	call Situa_en_contador_general_de_mov_masticados
1035  8AD3
1036  8AD3              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1037  8AD3              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1038  8AD3
1039  8AD3 ED 4B AB 89  	ld bc,(Contador_de_mov_masticados)
1040  8AD7 71           	ld (hl),c
1041  8AD8 23           	inc hl
1042  8AD9 70           	ld (hl),b
1043  8ADA
1044  8ADA C9           	ret
1045  8ADB
1046  8ADB              ; -----------------------------------------------------------------------------------
1047  8ADB              ;
1048  8ADB              ;	24/02/24
1049  8ADB              ;
1050  8ADB
1051  8ADB              Limpia_Sprites
1052  8ADB
1053  8ADB 2A C0 89     	ld hl,(Puntero_de_scanlines_masticados)
1054  8ADE 01 DF E9     	ld bc,Almacen_de_scanlines_masticados
1055  8AE1 A7           	and a
1056  8AE2 ED 42        	sbc hl,bc
1057  8AE4 C8           	ret z
1058  8AE5
1059  8AE5 CB 3D        	srl l
1060  8AE7 45           	ld b,l
1061  8AE8
1062  8AE8 2A C0 89     	ld hl,(Puntero_de_scanlines_masticados)
1063  8AEB 2B           	dec hl
1064  8AEC
1065  8AEC E5           1 push hl
1066  8AED
1067  8AED 7E           	ld a,(hl)
1068  8AEE 08           	ex af,af'
1069  8AEF 2B           	dec hl
1070  8AF0 7E           	ld a,(hl)
1071  8AF1 6F           	ld l,a
1072  8AF2 08           	ex af,af
1073  8AF3 67           	ld h,a
1074  8AF4
1075  8AF4 AF           	xor a
1076  8AF5 77           	ld (hl),a
1077  8AF6 2C           	inc l
1078  8AF7 77           	ld (hl),a
1079  8AF8
1080  8AF8 E1           	pop hl
1081  8AF9
1082  8AF9 AF           	xor a
1083  8AFA 77           	ld (hl),a
1084  8AFB 2B           	dec hl
1085  8AFC 77           	ld (hl),a
1086  8AFD
1087  8AFD 2B           	dec hl
1088  8AFE
1089  8AFE 10 EC        	djnz 1B
1090  8B00
1091  8B00 23           	inc hl
1092  8B01
1093  8B01 22 C0 89     	ld (Puntero_de_scanlines_masticados),hl
1094  8B04 21 02 80     	ld hl,Album_de_fotos+2
1095  8B07 22 C2 89     	ld (Puntero_de_scanlines_en_album),hl
1096  8B0A
1097  8B0A C9           	ret
1098  8B0B
1099  8B0B              ; -----------------------------------------------------------------------------------
1100  8B0B              ;
1101  8B0B              ;	24/02/24
1102  8B0B              ;
1103  8B0B
1104  8B0B              Genera_scanlines_masticados
1105  8B0B
1106  8B0B A7           	and a
1107  8B0C C8           	ret z
1108  8B0D
1109  8B0D C5           	push bc
1110  8B0E
1111  8B0E 2A C2 89     	ld hl,(Puntero_de_scanlines_en_album) 				; Dirección donde se encuentra el puntero de impresión.
1112  8B11 ED 5B C0 89  	ld de,(Puntero_de_scanlines_masticados)
1113  8B15
1114  8B15 7E           1 ld a,(hl)
1115  8B16 12           	ld (de),a
1116  8B17 73           	ld (hl),e
1117  8B18
1118  8B18 23           	inc hl
1119  8B19 7E           	ld a,(hl)
1120  8B1A 72           	ld (hl),d
1121  8B1B
1122  8B1B 13           	inc de
1123  8B1C 12           	ld (de),a 											; 1er scanline, (Puntero_de_impresion) en el Almacén de scanlines masticados.
1124  8B1D              ;				                                        ; La dirección donde se encuentra el (Puntero_de_impresion) dentro del almacén de scanlines_masticados_
1125  8B1D              ; 														; _sustituye al (Puntero_de_impresion) dentro del Album_de_fotos.
1126  8B1D CD 2D 8B     	call Construimos_scanlines
1127  8B20
1128  8B20              ; Actualizamos (Puntero_de_scanlines_en_album). Nos situamos en el Puntero_de_impresion de la siguiente entidad.
1129  8B20
1130  8B20 01 05 00     	ld bc,5
1131  8B23 A7           	and a
1132  8B24 ED 4A        	adc hl,bc
1133  8B26 22 C2 89     	ld (Puntero_de_scanlines_en_album),hl
1134  8B29
1135  8B29 C1           	pop bc
1136  8B2A
1137  8B2A 10 E9        	djnz 1B
1138  8B2C
1139  8B2C C9           	ret
1140  8B2D
1141  8B2D              ; --------------------------------------------------------
1142  8B2D
1143  8B2D E5           Construimos_scanlines push hl
1144  8B2E C5           	push bc
1145  8B2F
1146  8B2F 06 0F        	ld b,15
1147  8B31 1B           	dec de
1148  8B32
1149  8B32 1A           	ld a,(de)
1150  8B33 6F           	ld l,a
1151  8B34 13           	inc de
1152  8B35 1A           	ld a,(de)
1153  8B36 67           	ld h,a 												; Puntero_de_impresión en HL.
1154  8B37
1155  8B37 13           	inc de
1156  8B38
1157  8B38 CD 9D 92     1 call NextScan
1158  8B3B
1159  8B3B              ; Entramos en memoria de attr.???
1160  8B3B
1161  8B3B              ; Si es así, decrementamos H. (Repetimos el último scancline).
1162  8B3B
1163  8B3B 7C           	ld a,h
1164  8B3C FE 58        	cp $58
1165  8B3E 20 03        	jr nz,2F
1166  8B40
1167  8B40 21 00 00     	ld hl,0 											; Scanline NO IMPRIMIBLE, "0".
1168  8B43
1169  8B43 7D           2 ld a,l
1170  8B44 12           	ld (de),a
1171  8B45 13           	inc de
1172  8B46 7C           	ld a,h
1173  8B47 12           	ld (de),a
1174  8B48
1175  8B48 13           	inc de
1176  8B49
1177  8B49 24           	inc h
1178  8B4A 25           	dec h
1179  8B4B 28 02        	jr z,3F  											; No generamos más escanlines si hemos entrado en memoria de attr.
1180  8B4D
1181  8B4D 10 E9        	djnz 1B 											; 16 scanlines generados.
1182  8B4F
1183  8B4F ED 53 C0 89  3 ld (Puntero_de_scanlines_masticados),de 				; Actualizamos puntero.
1184  8B53
1185  8B53 C1           	pop bc
1186  8B54 E1           	pop hl
1187  8B55
1188  8B55 C9           	ret
1189  8B56
1190  8B56              ; -----------------------------------------------------------------------------------
1191  8B56              ;
1192  8B56              ;	28/12/23
1193  8B56              ;
1194  8B56              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1195  8B56              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1196  8B56
1197  8B56              Guarda_movimiento_masticado
1198  8B56
1199  8B56 ED 73 E1 89  	ld (Stack),sp
1200  8B5A ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1201  8B5E
1202  8B5E E5           	push hl
1203  8B5F DD E5            push ix
1204  8B61 FD E5            push iy
1205  8B63
1206  8B63 ED 7B E1 89      ld sp,(Stack)
1207  8B67
1208  8B67 2A AB 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1209  8B6A 23           	inc hl
1210  8B6B 22 AB 89     	ld (Contador_de_mov_masticados),hl
1211  8B6E
1212  8B6E CD 72 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1213  8B71              ;															; _ el (Contador_de_mov_masticados).
1214  8B71 C9               ret
1215  8B72
1216  8B72              ; --------------------------------------------------------------------------------------------------------------
1217  8B72              ;
1218  8B72              ;	12/1/24
1219  8B72              ;
1220  8B72              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1221  8B72
1222  8B72              Actualiza_Puntero_de_almacen_de_mov_masticados
1223  8B72
1224  8B72 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1225  8B75 01 06 00     	ld bc,6
1226  8B78 A7           	and a
1227  8B79 ED 4A        	adc hl,bc
1228  8B7B 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1229  8B7E C9           	ret
1230  8B7F
1231  8B7F              ; --------------------------------------------------------------------------------------------------------------
1232  8B7F              ;
1233  8B7F              ;	15/01/24
1234  8B7F              ;
1235  8B7F              ;	Cargamos los registros_
1236  8B7F              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1237  8B7F              ;
1238  8B7F              ;	HL contiene la dirección de la rutina de impresión.
1239  8B7F              ;	IX contiene el puntero de impresión.
1240  8B7F              ;	IY contiene (Puntero_objeto).
1241  8B7F
1242  8B7F
1243  8B7F ED 73 E1 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1244  8B83 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1245  8B87
1246  8B87 FD E1        	pop iy
1247  8B89 DD E1        	pop ix
1248  8B8B E1           	pop hl
1249  8B8C
1250  8B8C ED 73 A9 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1251  8B90
1252  8B90 ED 7B E1 89  	ld sp,(Stack)
1253  8B94
1254  8B94 C9           	ret
1255  8B95
1256  8B95              ; --------------------------------------------------------------------------------------------------------------
1257  8B95              ;
1258  8B95              ;	28/12/23
1259  8B95              ;
1260  8B95              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1261  8B95              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1262  8B95
1263  8B95              Guarda_foto_entidad_a_pintar
1264  8B95
1265  8B95 3A AD 89     	ld a,(Ctrl_0)
1266  8B98 CB 77        	bit 6,a
1267  8B9A 28 04        	jr z,5F
1268  8B9C
1269  8B9C              ;	Guarda la foto de Amadeus.
1270  8B9C
1271  8B9C              ;	call Draw
1272  8B9C              ;	call Guarda_movimiento_masticado	;! Provisional
1273  8B9C CD BF 80     	call Guarda_foto_registros
1274  8B9F C9           	ret
1275  8BA0
1276  8BA0              ; ENTIDADES!
1277  8BA0              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1278  8BA0
1279  8BA0 3A EF 89     5 ld a,(Ctrl_3)
1280  8BA3 CB 5F        	bit 3,a
1281  8BA5 28 01        	jr z,1F
1282  8BA7
1283  8BA7              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1284  8BA7
1285  8BA7              4
1286  8BA7              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1287  8BA7 C9           	ret
1288  8BA8
1289  8BA8              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1290  8BA8
1291  8BA8 3A EF 89     1 ld a,(Ctrl_3)
1292  8BAB CB 57        	bit 2,a
1293  8BAD 20 10        	jr nz,6F
1294  8BAF
1295  8BAF              ; Entidad guía o fantasma ???
1296  8BAF
1297  8BAF 3A B2 89     	ld a,(Ctrl_2)
1298  8BB2 CB 6F        	bit 5,a
1299  8BB4 20 10        	jr nz,3F
1300  8BB6
1301  8BB6              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1302  8BB6
1303  8BB6 18 EF        	jr 4B
1304  8BB8
1305  8BB8              ; ENTIDAD_GUÍA:
1306  8BB8              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1307  8BB8              ; _guardando "movimientos_masticados".
1308  8BB8
1309  8BB8 3A EF 89     2 ld a,(Ctrl_3)
1310  8BBB CB 57        	bit 2,a
1311  8BBD 28 07        	jr z,3F
1312  8BBF
1313  8BBF              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1314  8BBF              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1315  8BBF
1316  8BBF CB 97        6 res 2,a
1317  8BC1 CB DF        	set 3,a
1318  8BC3 32 EF 89     	ld (Ctrl_3),a
1319  8BC6
1320  8BC6
1321  8BC6              ;	Esto sólo lo ejecuta una entidad guía.
1322  8BC6
1323  8BC6 CD A4 8F     3 	call Draw
1324  8BC9 CD 56 8B     	call Guarda_movimiento_masticado
1325  8BCC CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1326  8BCF
1327  8BCF              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1328  8BCF              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1329  8BCF
1330  8BCF              ;	call Convierte_guia_en_fantasma
1331  8BCF C9           	ret
1332  8BD0
1333  8BD0              ; *************************************************************************************************************************************************************
1334  8BD0              ;
1335  8BD0              ; 8/1/23
1336  8BD0              ;
1337  8BD0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1338  8BD0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1339  8BD0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1340  8BD0
1341  8BD0              ; Destruye HL y DE !!!!!
1342  8BD0
1343  8BD0              Inicia_punteros_de_cajas
1344  8BD0
1345  8BD0 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1346  8BD3 CD 68 8C         call Extrae_address
1347  8BD6 22 D3 89         ld (Puntero_store_caja),hl
1348  8BD9 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1349  8BDC 22 D7 89     	ld (Indice_restore_caja),hl
1350  8BDF CD 68 8C     	call Extrae_address
1351  8BE2 22 D5 89     	ld (Puntero_restore_caja),hl
1352  8BE5 C9               ret
1353  8BE6
1354  8BE6              ; *************************************************************************************************************************************************************
1355  8BE6              ;
1356  8BE6              ; 8/1/23
1357  8BE6              ;
1358  8BE6              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1359  8BE6
1360  8BE6 21 7C 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1361  8BE9 22 F2 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1362  8BEC C9           	ret
1363  8BED 21 64 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1364  8BF0 22 F4 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1365  8BF3 C9           	ret
1366  8BF4
1367  8BF4              ; -------------------------------------------------------------------------------------------------------------
1368  8BF4              ;
1369  8BF4              ; 21/9/23
1370  8BF4              ;
1371  8BF4
1372  8BF4              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1373  8BF4
1374  8BF4              Limpia_album_Amadeus
1375  8BF4
1376  8BF4 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1377  8BF7 7E           	ld a,(hl)
1378  8BF8 A7           	and a
1379  8BF9 C8           	ret z
1380  8BFA
1381  8BFA 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1382  8BFD 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1383  8C00 01 0B 00     	ld bc,11
1384  8C03 AF           	xor a
1385  8C04 77           	ld (hl),a
1386  8C05 ED B0        	ldir
1387  8C07
1388  8C07 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1389  8C0A 22 ED 89     	ld (End_Snapshot_Amadeus),hl
1390  8C0D
1391  8C0D C9           	ret
1392  8C0E
1393  8C0E 21 A1 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1394  8C11 11 A2 89     	ld de,Variables_de_borrado+1
1395  8C14 01 05 00     	ld bc,5
1396  8C17 AF           	xor a
1397  8C18 77           	ld (hl),a
1398  8C19 ED B0        	ldir
1399  8C1B C9           	ret
1400  8C1C
1401  8C1C              ; -------------------------------------------------------------------------------------------------------------
1402  8C1C              ;
1403  8C1C              ; 	21/02/24
1404  8C1C              ;
1405  8C1C              ;	MODIFICA: AF,HL,BC,DE
1406  8C1C              ;
1407  8C1C              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1408  8C1C              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1409  8C1C
1410  8C1C              Calcula_numero_de_malotes
1411  8C1C
1412  8C1C 21 00 80     	ld hl,Album_de_fotos
1413  8C1F EB           	ex de,hl
1414  8C20 2A E7 89     	ld hl,(Stack_snapshot)
1415  8C23
1416  8C23 06 00        	ld b,0
1417  8C25 7D           	ld a,l
1418  8C26 93           	sub e
1419  8C27 28 07        	jr z,1F
1420  8C29
1421  8C29              ; Nº de malotes no es "0".
1422  8C29
1423  8C29 D6 06        2 sub 6
1424  8C2B 04           	inc b
1425  8C2C A7           	and a
1426  8C2D 20 FA        	jr nz,2B
1427  8C2F 78           	ld a,b
1428  8C30
1429  8C30 32 DC 89     1 ld (Numero_de_malotes),a
1430  8C33 C9           	ret
1431  8C34
1432  8C34              ; -------------------------------------------------------------------------------------------------------------
1433  8C34              ;
1434  8C34              ; 8/9/23
1435  8C34              ;
1436  8C34
1437  8C34              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1438  8C34              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1439  8C34
1440  8C34              Calcula_malotes_Amadeus
1441  8C34
1442  8C34 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1443  8C37 EB           	ex de,hl
1444  8C38 2A ED 89     	ld hl,(End_Snapshot_Amadeus)
1445  8C3B
1446  8C3B 7C           	ld a,h
1447  8C3C A7           	and a
1448  8C3D 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1449  8C3F
1450  8C3F 06 00        	ld b,0
1451  8C41 7D           	ld a,l
1452  8C42 93           	sub e
1453  8C43 28 07        	jr z,1F
1454  8C45
1455  8C45              ; Nº de malotes no es "0".
1456  8C45
1457  8C45 D6 06        2 sub 6
1458  8C47 04           	inc b
1459  8C48 A7           	and a
1460  8C49 20 FA        	jr nz,2B
1461  8C4B 78           	ld a,b
1462  8C4C
1463  8C4C 32 DC 89     1 ld (Numero_de_malotes),a
1464  8C4F C9           	ret
1465  8C50
1466  8C50              ; -------------------------------------------------------------------------------------------------------------
1467  8C50              ;
1468  8C50              ; 28/2/23
1469  8C50              ;
1470  8C50
1471  8C50              Calcula_numero_de_disparotes
1472  8C50
1473  8C50 21 56 80     	ld hl,Album_de_fotos_disparos
1474  8C53 EB           	ex de,hl
1475  8C54 2A EB 89     	ld hl,(End_Snapshot_disparos)
1476  8C57
1477  8C57 06 00        	ld b,0
1478  8C59 7D           	ld a,l
1479  8C5A 93           	sub e
1480  8C5B 28 07        	jr z,1F
1481  8C5D
1482  8C5D              ; Nº de malotes no es "0".
1483  8C5D
1484  8C5D D6 06        2 sub 6
1485  8C5F 04           	inc b
1486  8C60 A7           	and a
1487  8C61 20 FA        	jr nz,2B
1488  8C63 78           	ld a,b
1489  8C64
1490  8C64 32 F1 89     1 ld (Numero_de_disparotes),a
1491  8C67 C9           	ret
1492  8C68
1493  8C68              ; *************************************************************************************************************************************************************
1494  8C68              ;
1495  8C68              ; 20/10/22
1496  8C68              ;
1497  8C68              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1498  8C68              ;
1499  8C68              ; Destruye el puntero y DE !!!!!
1500  8C68
1501  8C68 5E           Extrae_address ld e,(hl)
1502  8C69 23           	inc hl
1503  8C6A 56           	ld d,(hl)
1504  8C6B 2B           	dec hl
1505  8C6C EB           	ex de,hl
1506  8C6D C9           	ret
1507  8C6E
1508  8C6E              ; *************************************************************************************************************************************************************
1509  8C6E              ;
1510  8C6E              ;	20/1/24
1511  8C6E              ;
1512  8C6E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1513  8C6E              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1514  8C6E              ;
1515  8C6E              ;   Destruye HL y BC !!!!!,
1516  8C6E              ;
1517  8C6E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1518  8C6E              ;					"0" ..... Izquierda.
1519  8C6E
1520  8C6E              Inicia_Puntero_objeto
1521  8C6E
1522  8C6E 3A 9F 89     	ld a,(Cuad_objeto)
1523  8C71 E6 01        	and 1
1524  8C73 F5           	push af
1525  8C74 CC 90 8C     	call z,Inicia_puntero_objeto_izq
1526  8C77 F1           	pop af
1527  8C78 C8           	ret z
1528  8C79 CD 7D 8C     	call Inicia_puntero_objeto_der
1529  8C7C C9           	ret
1530  8C7D
1531  8C7D              ; Arrancamos desde la parte izquierda de la pantalla.
1532  8C7D              ; Iniciamos (Indice_Sprite_der).
1533  8C7D
1534  8C7D 2A 95 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1535  8C80 22 99 89     	ld (Puntero_DESPLZ_der),hl
1536  8C83 CD 68 8C     	call Extrae_address
1537  8C86 22 8F 89     	ld (Puntero_objeto),hl
1538  8C89
1539  8C89 2A 97 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1540  8C8C 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1541  8C8F C9           	ret
1542  8C90
1543  8C90              ; Arrancamos desde la parte derecha de la pantalla.
1544  8C90              ; Iniciamos (Indice_Sprite_izq).
1545  8C90
1546  8C90 2A 97 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1547  8C93 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1548  8C96 CD 68 8C     	call Extrae_address
1549  8C99 22 8F 89     	ld (Puntero_objeto),hl
1550  8C9C
1551  8C9C 2A 95 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1552  8C9F 22 99 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1553  8CA2 C9           	ret
1554  8CA3
1555  8CA3              ; **************************************************************************************************
1556  8CA3              ;
1557  8CA3              ;	31/01/24
1558  8CA3              ;
1559  8CA3              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1560  8CA3
1561  8CA3              Restore_entidad
1562  8CA3
1563  8CA3 2A D3 89     	ld hl,(Puntero_store_caja)
1564  8CA6 11 8A 89     	ld de,Bandeja_DRAW
1565  8CA9 7E           	ld a,(hl)
1566  8CAA 12           	ld (de),a
1567  8CAB 23           	inc hl 											; (Tipo).
1568  8CAC
1569  8CAC 11 91 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1570  8CAF 01 02 00     	ld bc,2
1571  8CB2 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1572  8CB4
1573  8CB4 13           	inc de
1574  8CB5 7E           	ld a,(hl)
1575  8CB6 12           	ld (de),a 										; Transferimos (Attr).
1576  8CB7 23           	inc hl
1577  8CB8
1578  8CB8 11 A0 89     	ld de,Impacto
1579  8CBB
1580  8CBB 7E           	ld a,(hl)
1581  8CBC 12           	ld (de),a 										; Transferimos (Impacto).
1582  8CBD 23           	inc hl
1583  8CBE
1584  8CBE 13           	inc de
1585  8CBF
1586  8CBF 01 06 00     	ld bc,6
1587  8CC2 ED B0        	ldir
1588  8CC4
1589  8CC4 01 07 00     	ld bc,7
1590  8CC7 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1591  8CC9              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1592  8CC9 11 B2 89     	ld de,Ctrl_2
1593  8CCC
1594  8CCC 7E           	ld a,(hl)
1595  8CCD 12           	ld (de),a 										; Transferimos (Ctrl_2).
1596  8CCE
1597  8CCE C9           	ret
1598  8CCF
1599  8CCF              ; **************************************************************************************************
1600  8CCF              ;
1601  8CCF              ;	08/05/23
1602  8CCF              ;
1603  8CCF              ;	Incrementamos los dos punteros de entidades. (+1).
1604  8CCF
1605  8CCF              Incrementa_punteros_de_cajas
1606  8CCF
1607  8CCF 2A D5 89     	ld hl,(Puntero_restore_caja)
1608  8CD2 22 D3 89     	ld (Puntero_store_caja),hl
1609  8CD5 2A D7 89     	ld hl,(Indice_restore_caja)
1610  8CD8 23           	inc hl
1611  8CD9 23           	inc hl
1612  8CDA 22 D7 89     	ld (Indice_restore_caja),hl
1613  8CDD CD 68 8C         call Extrae_address
1614  8CE0 22 D5 89         ld (Puntero_restore_caja),hl
1615  8CE3 C9               ret
1616  8CE4
1617  8CE4              ; **************************************************************************************************
1618  8CE4              ;
1619  8CE4              ;	21/12/23
1620  8CE4              ;
1621  8CE4              ;	Restore_Amadeus
1622  8CE4              ;
1623  8CE4              ;	Cargamos en DRAW los parámetros de Amadeus.
1624  8CE4              ;
1625  8CE4
1626  8CE4 E5           Restore_Amadeus	push hl
1627  8CE5 D5           	push de
1628  8CE6 C5            	push bc
1629  8CE7 21 F6 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1630  8CEA 11 8A 89     	ld de,Bandeja_DRAW
1631  8CED 01 2A 00     	ld bc,42
1632  8CF0 ED B0        	ldir
1633  8CF2 C1           	pop bc
1634  8CF3 D1           	pop de
1635  8CF4 E1           	pop hl
1636  8CF5 C9           	ret
1637  8CF6
1638  8CF6              ; *************************************************************************************************************************************************************
1639  8CF6              ;
1640  8CF6              ;	21/12/23
1641  8CF6              ;
1642  8CF6              ;	Store_Amadeus
1643  8CF6              ;
1644  8CF6              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1645  8CF6              ;
1646  8CF6              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1647  8CF6              ;
1648  8CF6              ;	DESTRUYE: HL y BC y DE.
1649  8CF6
1650  8CF6 21 8A 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1651  8CF9 01 2A 00     	ld bc,42
1652  8CFC ED B0        	ldir
1653  8CFE C9           	ret
1654  8CFF
1655  8CFF              ; -----------------------------------------------------------
1656  8CFF              ;
1657  8CFF              ;	21/12/23
1658  8CFF              ;
1659  8CFF              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1660  8CFF              ;
1661  8CFF              ;	Destruye: HL,BC,DE,A
1662  8CFF
1663  8CFF 21 8A 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1664  8D02 01 29 00     	ld bc,41
1665  8D05 AF           	xor a
1666  8D06 77           	ld (hl),a
1667  8D07 11 8B 89     	ld de,Bandeja_DRAW+1
1668  8D0A ED B0        	ldir
1669  8D0C C9           	ret
1670  8D0D
1671  8D0D              ; -----------------------------------------------------------
1672  8D0D
1673  8D0D              ; Teclado.
1674  8D0D
1675  8D0D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1676  8D0F DB FE        	in a,($fe)
1677  8D11 E6 01        	and $01
1678  8D13 28 02        	jr z,1f
1679  8D15 18 F6        	jr Pulsa_ENTER
1680  8D17 C9           1 ret
1681  8D18
1682  8D18              ; **************************************************************************************************
1683  8D18              ;
1684  8D18              ; Temporización.
1685  8D18
1686  8D18              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1687  8D18              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1688  8D18              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1689  8D18              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1690  8D18
1691  8D18              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1692  8D18              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1693  8D18              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1694  8D18
1695  8D18              ; A partir de $4f61 no hace falta DELAY.
1696  8D18
1697  8D18              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1698  8D18
1699  8D18 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1700  8D1B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1701  8D1C 78           	LD A,B
1702  8D1D A7           	AND A
1703  8D1E 20 FB        	JR NZ,wait
1704  8D20 C9           	RET
1705  8D21
1706  8D21              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1707  8D21              ;
1708  8D21              ;	5/3/23
1709  8D21              ;
1710  8D21              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1711  8D21
1712  8D21              Movimiento_Amadeus
1713  8D21
1714  8D21              ; Disparo.
1715  8D21
1716  8D21 3A 07 8A     	ld a,(Disparo_Amadeus)
1717  8D24 A7           	and a
1718  8D25 20 02        	jr nz,1F
1719  8D27 18 15        	jr 2F
1720  8D29
1721  8D29 3E F7        1 ld a,$f7													; "5" para disparar.
1722  8D2B DB FE        	in a,($fe)
1723  8D2D E6 10        	and $10
1724  8D2F
1725  8D2F F5           	push af
1726  8D30 CC 90 9A     	call z,Genera_disparo
1727  8D33 F1           	pop af
1728  8D34 20 08        	jr nz,2F
1729  8D36
1730  8D36 3A 07 8A     	ld a,(Disparo_Amadeus)
1731  8D39 EE 01        	xor 1
1732  8D3B 32 07 8A     	ld (Disparo_Amadeus),a
1733  8D3E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1734  8D40 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1735  8D42 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1736  8D44 CC 63 97         call z,Mov_left											;			"			"			"			"			"			"			"			"
1737  8D47
1738  8D47 3E F7        	ld a,$f7
1739  8D49 DB FE        	in a,($fe)
1740  8D4B E6 01        	and $01
1741  8D4D C8           	ret z
1742  8D4E
1743  8D4E 3E F7        	ld a,$f7
1744  8D50 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1745  8D52 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1746  8D54 CC 40 96     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1747  8D57 C9           	ret
1748  8D58
1749  8D58              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1750  8D58              ;
1751  8D58              ;	Rutina provisional para que los malotes cagen balas.
1752  8D58
1753  8D58              Detecta_disparo_entidad
1754  8D58
1755  8D58 3A 0A 8A     	ld a,(Disparo_entidad)
1756  8D5B A7           	and a
1757  8D5C C8           	ret z
1758  8D5D
1759  8D5D              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1760  8D5D
1761  8D5D              ;	ld a,$7f				; Detecta SPACE.
1762  8D5D              ;	in a,($fe)
1763  8D5D              ;	and 1
1764  8D5D              ;	ret nz
1765  8D5D
1766  8D5D CD 90 9A     	call Genera_disparo
1767  8D60 C9           	ret
1768  8D61
1769  8D61              ; ----------------------------------------------------------------------
1770  8D61              ;
1771  8D61              ;	8/9/23
1772  8D61
1773  8D61 2A ED 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1774  8D64 2B            	dec hl
1775  8D65 7E           	ld a,(hl)
1776  8D66 A7           	and a
1777  8D67 C8           	ret z										; Salimos si es álbum está vacío.
1778  8D68
1779  8D68 11 A6 89     	ld de,Variables_de_borrado+5
1780  8D6B 01 06 00     	ld bc,6
1781  8D6E ED B8        	lddr
1782  8D70 C9           	ret
1783  8D71
1784  8D71              ; ----------------------------------------------------------------------
1785  8D71              ;
1786  8D71              ;	9/9/23
1787  8D71
1788  8D71              Repone_datos_de_borrado_Amadeus
1789  8D71
1790  8D71 21 A1 89     	ld hl,Variables_de_borrado
1791  8D74 11 AC 80     	ld de,Album_de_fotos_Amadeus
1792  8D77 01 06 00     	ld bc,6
1793  8D7A ED B0        	ldir
1794  8D7C
1795  8D7C EB           	ex de,hl
1796  8D7D 22 ED 89     	ld (End_Snapshot_Amadeus),hl
1797  8D80
1798  8D80 C9           	ret
1799  8D81
1800  8D81              ; ----------------------------------------------------------------------
1801  8D81              ;
1802  8D81              ;	27/10/23
1803  8D81              ;
1804  8D81
1805  8D81              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1806  8D81              ;	_ Album_de_fotos correspondiente.
1807  8D81
1808  8D81              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1809  8D81              ;	_ durante el proceso de escritura.
1810  8D81
1811  8D81              Repone_datos_de_borrado
1812  8D81
1813  8D81 ED 5B E7 89  	ld de,(Stack_snapshot)
1814  8D85 21 A1 89     	ld hl,Variables_de_borrado
1815  8D88 01 06 00     	ld bc,6
1816  8D8B ED B0        	ldir
1817  8D8D
1818  8D8D EB           	ex de,hl
1819  8D8E 22 E7 89     	ld (Stack_snapshot),hl
1820  8D91
1821  8D91 C9           	ret
1822  8D92
1823  8D92              ; --------------------------------------------------------------------------------------
1824  8D92
1825  8D92              Pinta_Amadeus
1826  8D92
1827  8D92 CD 34 8C        	call Calcula_malotes_Amadeus
1828  8D95 CD 3D 93     	call Extrae_foto_Amadeus
1829  8D98 CD F4 8B     	call Limpia_album_Amadeus
1830  8D9B
1831  8D9B C9           	ret
1832  8D9C
1833  8D9C              ; -----------------------------------------------------------------------------------
1834  8D9C              ;
1835  8D9C              ;	10/12/23
1836  8D9C              ;
1837  8D9C              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1838  8D9C
1839  8D9C              Actualiza_relojes
1840  8D9C
1841  8D9C 3A EF 89     	ld a,(Ctrl_3)
1842  8D9F CB 47        	bit 0,a
1843  8DA1 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1844  8DA2
1845  8DA2 21 02 8A     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1846  8DA5 34           	inc (hl)
1847  8DA6
1848  8DA6 34           	inc (hl)
1849  8DA7 35           	dec (hl)
1850  8DA8 C0           	ret nz
1851  8DA9
1852  8DA9 21 03 8A     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1853  8DAC 34           	inc (hl)
1854  8DAD C9           	ret
1855  8DAE
1856  8DAE              ; ---------------------------------------------------------------
1857  8DAE
1858  8DAE              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8DAE              ;---------------------------------------------------------------------------------------------------------------
   2+ 8DAE              ;
   3+ 8DAE              ;   19/1/24
   4+ 8DAE              ;
   5+ 8DAE              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8DAE              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8DAE              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8DAE              ;	_ de la 1ª entidad del Nivel.
   9+ 8DAE              ;
  10+ 8DAE              ;	MODIFICA: HL,DE y A.
  11+ 8DAE              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8DAE
  13+ 8DAE              Inicializa_Nivel
  14+ 8DAE
  15+ 8DAE 2A 0E 8A     	ld hl,(Puntero_indice_NIVELES)
  16+ 8DB1 CD 68 8C     	call Extrae_address
  17+ 8DB4 7E           	ld a,(hl)
  18+ 8DB5 32 D9 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8DB8 23           	inc hl
  20+ 8DB9 CD C6 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8DBC 22 10 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8DBF CD CF 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8DC2              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8DC2 CD E0 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8DC5 C9           	ret
  26+ 8DC6
  27+ 8DC6              ; ----------------------
  28+ 8DC6
  29+ 8DC6 11 B4 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8DC9 01 04 00     	ld bc,4
  31+ 8DCC ED B0        	ldir
  32+ 8DCE C9           	ret
  33+ 8DCF
  34+ 8DCF 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8DD0 CD 20 8F         call Calcula_salto_en_BC
  36+ 8DD3 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8DD6 A7               and a
  38+ 8DD7 ED 4A            adc hl,bc
  39+ 8DD9 CD 68 8C         call Extrae_address
  40+ 8DDC 22 C4 89         ld (Puntero_indice_mov),hl
  41+ 8DDF C9               ret
  42+ 8DE0
  43+ 8DE0 3A 8A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8DE3 CD 20 8F     	call Calcula_salto_en_BC
  45+ 8DE6 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8DE9 A7               and a
  47+ 8DEA ED 4A            adc hl,bc
  48+ 8DEC CD 68 8C         call Extrae_address
  49+ 8DEF 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8DF2 C9           	ret
  51+ 8DF3
  52+ 8DF3              ;---------------------------------------------------------------------------------------------------------------
  53+ 8DF3              ;
  54+ 8DF3              ;   5/1/24
  55+ 8DF3              ;
  56+ 8DF3              ;	Destruye A,BC,HL,DE
  57+ 8DF3
  58+ 8DF3              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8DF3              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8DF3
  61+ 8DF3              Inicia_Entidades
  62+ 8DF3
  63+ 8DF3              ; Preparamos los punteros de las cajas de entidades:
  64+ 8DF3
  65+ 8DF3 CD D0 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8DF6              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8DF6 CD 87 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8DF9
  69+ 8DF9 2A 10 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8DFC
  71+ 8DFC 22 10 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8DFF
  73+ 8DFF CD CE 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8E02
  75+ 8E02 2A 10 8A     	ld hl,(Datos_de_nivel)
  76+ 8E05
  77+ 8E05              ; En este punto:
  78+ 8E05              ;
  79+ 8E05              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8E05              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8E05
  82+ 8E05 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8E06
  84+ 8E06 7E           	ld a,(hl)
  85+ 8E07 CD 43 8E     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8E0A
  87+ 8E0A CD 32 8F     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8E0D
  89+ 8E0D              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8E0D
  91+ 8E0D CD F0 8E     	call Busca_mov_masticados_segun_tipo
  92+ 8E10
  93+ 8E10 A7           	and a
  94+ 8E11 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8E13
  96+ 8E13              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8E13
  98+ 8E13              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8E13              ;	_ de este tipo de entidad.
 100+ 8E13
 101+ 8E13 CD 7A 9A     	call Situa_en_contador_general_de_mov_masticados
 102+ 8E16 CD 87 9A     	call Transfiere_datos_de_contadores
 103+ 8E19
 104+ 8E19 18 06        	jr 4F
 105+ 8E1B
 106+ 8E1B CD B2 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8E1E
 108+ 8E1E              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8E1E              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8E1E              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8E1E              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8E1E              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8E1E
 114+ 8E1E CD AE 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8E21              ;																; _ Mov_masticados ya generados.
 116+ 8E21 CD 5D 8E     4 call Guarda_foto_de_mov_masticado
 117+ 8E24
 118+ 8E24              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8E24
 120+ 8E24 2A A7 89     	ld hl,(Puntero_de_impresion)
 121+ 8E27 CD 91 9F     	call Genera_coordenadas
 122+ 8E2A CD 59 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8E2D CD 67 8E     	call Limpiamos_bandeja_DRAW
 124+ 8E30 CD CF 8C     	call Incrementa_punteros_de_cajas
 125+ 8E33
 126+ 8E33              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8E33              ; _ entidad del Nivel.
 128+ 8E33
 129+ 8E33 3A F0 89     	ld a,(Ctrl_4)
 130+ 8E36 E6 F0        	and $f0
 131+ 8E38 32 F0 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8E3B
 133+ 8E3B              ; Siguiente entidad del Nivel.
 134+ 8E3B
 135+ 8E3B 2A 10 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8E3E 23           	inc hl 														; _ entidad del Nivel.
 137+ 8E3F
 138+ 8E3F C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8E40
 140+ 8E40 10 BA        	djnz 2B
 141+ 8E42
 142+ 8E42 C9           	ret
 143+ 8E43
 144+ 8E43              ; ---------------------------------------------------------------------
 145+ 8E43              ;
 146+ 8E43              ;	10/02/24
 147+ 8E43              ;
 148+ 8E43              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8E43              ;
 150+ 8E43              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8E43
 152+ 8E43              Definicion_segun_tipo
 153+ 8E43
 154+ 8E43 CD 20 8F     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8E46 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8E49 CD 28 8F     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8E4C C9           	ret
 158+ 8E4D
 159+ 8E4D              ; ---------------------------------------------------------------------
 160+ 8E4D              ;
 161+ 8E4D              ;	30/01/24
 162+ 8E4D
 163+ 8E4D
 164+ 8E4D              Store_Restore_cajas
 165+ 8E4D
 166+ 8E4D              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8E4D
 168+ 8E4D 2A A7 89     	ld hl,(Puntero_de_impresion)
 169+ 8E50 CD 91 9F     	call Genera_coordenadas
 170+ 8E53
 171+ 8E53 CD 59 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8E56 CD 67 8E     	call Limpiamos_bandeja_DRAW
 173+ 8E59
 174+ 8E59              ; 	Entidad_sospechosa. 20/4/23
 175+ 8E59
 176+ 8E59              ;	ld a,(Impacto)
 177+ 8E59              ;	and a
 178+ 8E59              ;	jr z,1F
 179+ 8E59
 180+ 8E59              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8E59              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8E59              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8E59              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8E59              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8E59
 186+ 8E59
 187+ 8E59              ;1 ld hl,(Puntero_restore_caja)
 188+ 8E59              ;	ld a,(hl)
 189+ 8E59              ;	and a
 190+ 8E59              ;	push af
 191+ 8E59              ;	jr z,2F
 192+ 8E59
 193+ 8E59              ;	di
 194+ 8E59              ;	ld de,Bandeja_DRAW
 195+ 8E59              ;	ld bc,42
 196+ 8E59              ;	ldir
 197+ 8E59              ;	ei
 198+ 8E59
 199+ 8E59 CD CF 8C     2 call Incrementa_punteros_de_cajas
 200+ 8E5C C9           	ret
 201+ 8E5D
 202+ 8E5D
 203+ 8E5D              ; ---------------------------------------------------------------------
 204+ 8E5D              ;
 205+ 8E5D              ;	29/01/24
 206+ 8E5D
 207+ 8E5D CD 7F 8B     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 208+ 8E60 CD BF 80     	call Guarda_foto_registros
 209+ 8E63              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 210+ 8E63              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 211+ 8E63              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 212+ 8E63              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 213+ 8E63
 214+ 8E63 CD 72 8E     	call Decrementa_Contador_de_mov_masticados
 215+ 8E66 C9           	ret
 216+ 8E67
 217+ 8E67              ; ---------------------------------------------------------------------
 218+ 8E67              ;
 219+ 8E67              ;	25/01/24
 220+ 8E67
 221+ 8E67 21 8A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 222+ 8E6A 06 2A        	ld b,42
 223+ 8E6C AF           	xor a
 224+ 8E6D
 225+ 8E6D 77           1 ld (hl),a
 226+ 8E6E 23           	inc hl
 227+ 8E6F 10 FC        	djnz 1B
 228+ 8E71
 229+ 8E71 C9           	ret
 230+ 8E72
 231+ 8E72              ; ---------------------------------------------------------------------
 232+ 8E72              ;
 233+ 8E72              ;	22/01/24
 234+ 8E72
 235+ 8E72 2A AB 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 236+ 8E75 2B           	dec hl
 237+ 8E76
 238+ 8E76 24           	inc h
 239+ 8E77 25           	dec h
 240+ 8E78
 241+ 8E78 FC 7F 8E     	call m,Reinicia_entidad_maliciosa
 242+ 8E7B
 243+ 8E7B              ;	jr nz,1F
 244+ 8E7B
 245+ 8E7B              ;	inc l
 246+ 8E7B              ;	dec l
 247+ 8E7B
 248+ 8E7B              ;	di
 249+ 8E7B              ;	jr z,$
 250+ 8E7B              ;	ei
 251+ 8E7B
 252+ 8E7B 22 AB 89     1 ld (Contador_de_mov_masticados),hl
 253+ 8E7E C9           	ret
 254+ 8E7F
 255+ 8E7F              ; ---------------------------------------------------------------------
 256+ 8E7F              ;
 257+ 8E7F              ;	10/2/24
 258+ 8E7F
 259+ 8E7F              Reinicia_entidad_maliciosa
 260+ 8E7F
 261+ 8E7F              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 262+ 8E7F
 263+ 8E7F CD 7A 9A     	call Situa_en_contador_general_de_mov_masticados
 264+ 8E82 CD 87 9A     	call Transfiere_datos_de_contadores
 265+ 8E85
 266+ 8E85              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 267+ 8E85
 268+ 8E85 3A 8A 89     	ld a,(Tipo)
 269+ 8E88 CD 43 8E     	call Definicion_segun_tipo
 270+ 8E8B
 271+ 8E8B E5           	push hl
 272+ 8E8C DD E1        	pop ix
 273+ 8E8E
 274+ 8E8E DD 6E 0B     	ld l,(ix+11)
 275+ 8E91 DD 66 0C     	ld h,(ix+12)
 276+ 8E94
 277+ 8E94 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 278+ 8E97
 279+ 8E97              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 280+ 8E97              ;	Queremos pintar la entidad en su posición de inicio.
 281+ 8E97
 282+ 8E97 2A E7 89     	ld hl,(Stack_snapshot)
 283+ 8E9A 01 06 00     	ld bc,6
 284+ 8E9D A7           	and a
 285+ 8E9E ED 42        	sbc hl,bc
 286+ 8EA0 22 E7 89     	ld (Stack_snapshot),hl
 287+ 8EA3
 288+ 8EA3 CD 7F 8B     	call Cargamos_registros_con_mov_masticado
 289+ 8EA6 CD BF 80     	call Guarda_foto_registros
 290+ 8EA9
 291+ 8EA9 2A AB 89     	ld hl,(Contador_de_mov_masticados)
 292+ 8EAC 2B           	dec hl
 293+ 8EAD
 294+ 8EAD C9           	ret
 295+ 8EAE
 296+ 8EAE
 297+ 8EAE
 298+ 8EAE
 299+ 8EAE              ; ---------------------------------------------------------------------
 300+ 8EAE              ;
 301+ 8EAE              ;	22/01/24
 302+ 8EAE
 303+ 8EAE 21 F0 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 304+ 8EB1 CB 46        	bit 0,(hl)
 305+ 8EB3 20 0D        	jr nz,1F
 306+ 8EB5 CB 4E        	bit 1,(hl)
 307+ 8EB7 20 0C        	jr nz,2F
 308+ 8EB9 CB 56        	bit 2,(hl)
 309+ 8EBB 20 0B        	jr nz,3F
 310+ 8EBD CB 5E        	bit 3,(hl)
 311+ 8EBF 20 0A        	jr nz,4F
 312+ 8EC1 C9           	ret
 313+ 8EC2
 314+ 8EC2 CB E6        1 set 4,(hl)
 315+ 8EC4 C9           	ret
 316+ 8EC5 CB EE        2 set 5,(hl)
 317+ 8EC7 C9           	ret
 318+ 8EC8 CB F6        3 set 6,(hl)
 319+ 8ECA C9           	ret
 320+ 8ECB CB FE        4 set 7,(hl)
 321+ 8ECD C9           	ret
 322+ 8ECE
 323+ 8ECE              ; ---------------------------------------------------------------------
 324+ 8ECE              ;
 325+ 8ECE              ;	23/01/24
 326+ 8ECE              ;
 327+ 8ECE              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 328+ 8ECE              ;
 329+ 8ECE              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 330+ 8ECE              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 331+ 8ECE              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 332+ 8ECE              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 333+ 8ECE
 334+ 8ECE              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 335+ 8ECE
 336+ 8ECE 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 337+ 8ECF 3D           	dec a
 338+ 8ED0 20 06        	jr nz,1F
 339+ 8ED2
 340+ 8ED2              ; --- Tipo_1
 341+ 8ED2
 342+ 8ED2 21 F0 89     	ld hl,Ctrl_4
 343+ 8ED5 CB C6        	set 0,(hl)
 344+ 8ED7 C9           	ret
 345+ 8ED8
 346+ 8ED8 3D           1 dec a
 347+ 8ED9 20 06        	jr nz,2F
 348+ 8EDB
 349+ 8EDB              ; --- Tipo_2
 350+ 8EDB
 351+ 8EDB 21 F0 89     	ld hl,Ctrl_4
 352+ 8EDE CB CE        	set 1,(hl)
 353+ 8EE0 C9           	ret
 354+ 8EE1
 355+ 8EE1 3D           2 dec a
 356+ 8EE2 20 06        	jr nz,3F
 357+ 8EE4
 358+ 8EE4              ; --- Tipo_3
 359+ 8EE4
 360+ 8EE4 21 F0 89     	ld hl,Ctrl_4
 361+ 8EE7 CB D6        	set 2,(hl)
 362+ 8EE9 C9           	ret
 363+ 8EEA
 364+ 8EEA              ; --- Tipo_3
 365+ 8EEA
 366+ 8EEA 21 F0 89     3 ld hl,Ctrl_4
 367+ 8EED CB D6        	set 2,(hl)
 368+ 8EEF C9           	ret
 369+ 8EF0
 370+ 8EF0              ; ---------------------------------------------------------------------
 371+ 8EF0              ;
 372+ 8EF0              ;	22/01/24
 373+ 8EF0
 374+ 8EF0 21 F0 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 375+ 8EF3 CB 46        	bit 0,(hl)
 376+ 8EF5 20 0E        	jr nz,1F
 377+ 8EF7
 378+ 8EF7 CB 4E        	bit 1,(hl)
 379+ 8EF9 20 10        	jr nz,2F
 380+ 8EFB
 381+ 8EFB CB 56        	bit 2,(hl)
 382+ 8EFD 20 12        	jr nz,3F
 383+ 8EFF
 384+ 8EFF CB 5E        	bit 3,(hl)
 385+ 8F01 20 14        	jr nz,4F
 386+ 8F03 18 19        	jr 6F
 387+ 8F05
 388+ 8F05              ; Entidad_de_Tipo_1.
 389+ 8F05
 390+ 8F05 CB 66        1 bit 4,(hl)
 391+ 8F07 28 15        	jr z,6F
 392+ 8F09 18 10        	jr 5F
 393+ 8F0B
 394+ 8F0B              ; Entidad_de_Tipo_2.
 395+ 8F0B
 396+ 8F0B CB 6E        2 bit 5,(hl)
 397+ 8F0D 28 0F        	jr z,6F
 398+ 8F0F 18 0A        	jr 5F
 399+ 8F11
 400+ 8F11              ; Entidad_de_Tipo_3.
 401+ 8F11
 402+ 8F11 CB 76        3 bit 6,(hl)
 403+ 8F13 28 09        	jr z,6F
 404+ 8F15 18 04        	jr 5F
 405+ 8F17
 406+ 8F17              ; Entidad_de_Tipo_4.
 407+ 8F17
 408+ 8F17 CB 7E        4 bit 7,(hl)
 409+ 8F19 28 03        	jr z,6F
 410+ 8F1B
 411+ 8F1B              ; Esta entidad TIENE MOV_MASTICADOS.
 412+ 8F1B
 413+ 8F1B AF           5 xor a
 414+ 8F1C 3C           	inc a
 415+ 8F1D C9           	ret
 416+ 8F1E
 417+ 8F1E              ; Esta entidad NO TIENE MOV_MASTICADOS.
 418+ 8F1E
 419+ 8F1E AF           6 xor a
 420+ 8F1F C9           	ret
 421+ 8F20
 422+ 8F20              ;	------------------------------------------------------------------------------------
 423+ 8F20              ;
 424+ 8F20              ;	12/01/24
 425+ 8F20              ;
 426+ 8F20              ;	INPUTS:	A contiene el (Tipo) de entidad.
 427+ 8F20              ;
 428+ 8F20              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 429+ 8F20              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 430+ 8F20
 431+ 8F20 CB 27        Calcula_salto_en_BC sla a
 432+ 8F22 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 433+ 8F24 4F           	ld c,a
 434+ 8F25 06 00        	ld b,0
 435+ 8F27 C9           	ret
 436+ 8F28
 437+ 8F28              ; ------------------------------------------------------------------
 438+ 8F28              ;
 439+ 8F28              ;	19/1/24
 440+ 8F28              ;
 441+ 8F28              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 442+ 8F28              ;	Actualiza (Datos_de_entidad) con esa dirección.
 443+ 8F28
 444+ 8F28 A7           Situa_en_datos_de_definicion and a
 445+ 8F29 ED 4A        	adc hl,bc
 446+ 8F2B CD 68 8C     	call Extrae_address
 447+ 8F2E 22 DF 89         ld (Datos_de_entidad),hl
 448+ 8F31 C9           	ret
 449+ 8F32
 450+ 8F32              ; ------------------------------------------------------------------
 451+ 8F32
 452+ 8F32              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 453+ 8F32              ; 	inc de
 454+ 8F32              ; 	inc de
 455+ 8F32              ; 	ex de,hl
 456+ 8F32              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 457+ 8F32              ; 	ret
 458+ 8F32
 459+ 8F32              ; ----------------------------------------------------------------------------------------------------------
 460+ 8F32              ;
 461+ 8F32              ;	31/1/24
 462+ 8F32              ;
 463+ 8F32              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 464+ 8F32              ;	_ de entidad.
 465+ 8F32              ;
 466+ 8F32              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 467+ 8F32              ;
 468+ 8F32              ;
 469+ 8F32              ;	MODIFICA: HL,DE y BC
 470+ 8F32
 471+ 8F32
 472+ 8F32              Definicion_de_entidad_a_bandeja_DRAW
 473+ 8F32
 474+ 8F32 11 8A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 475+ 8F35 01 03 00     	ld bc,3
 476+ 8F38 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 477+ 8F3A              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 478+ 8F3A 11 94 89     	ld de,Attr									; DE en (Attr).
 479+ 8F3D 01 05 00     	ld bc,5
 480+ 8F40 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 481+ 8F42              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 482+ 8F42 11 9D 89     	ld de,Posicion_inicio
 483+ 8F45 01 03 00     	ld bc,3
 484+ 8F48 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 485+ 8F4A              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 486+ 8F4A 11 A9 89     	ld de,Puntero_de_almacen_de_mov_masticados
 487+ 8F4D 01 02 00     	ld bc,2
 488+ 8F50 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 489+ 8F52
 490+ 8F52 11 B3 89     	ld de,Frames_explosion
 491+ 8F55 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 492+ 8F57 12           	ld (de),a 									; Vuelco (Frames_explosion).
 493+ 8F58
 494+ 8F58 C9           	ret
 495+ 8F59
 496+ 8F59              ; ----------------------------------------------------------------------------------------------------------
 497+ 8F59              ;
 498+ 8F59              ;	22/01/24
 499+ 8F59              ;
 500+ 8F59              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 501+ 8F59              ;
 502+ 8F59              ;	Las cajas contienen entidades iniciadas:
 503+ 8F59              ;
 504+ 8F59              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 505+ 8F59              ;
 506+ 8F59              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 507+ 8F59              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 508+ 8F59              ;
 509+ 8F59              ;	MODIFICA: HL,DE y BC
 510+ 8F59
 511+ 8F59 21 8A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 512+ 8F5C ED 5B D3 89  	ld de,(Puntero_store_caja)
 513+ 8F60 7E           	ld a,(hl)
 514+ 8F61 12           	ld (de),a
 515+ 8F62 13           	inc de 													; (Tipo).
 516+ 8F63
 517+ 8F63 21 91 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 518+ 8F66 01 02 00     	ld bc,2
 519+ 8F69 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 520+ 8F6B              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 521+ 8F6B 23           	inc hl
 522+ 8F6C 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 523+ 8F6D 12           	ld (de),a
 524+ 8F6E 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 525+ 8F6F
 526+ 8F6F 21 A0 89     	ld hl,Impacto
 527+ 8F72 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 528+ 8F73 12           	ld (de),a
 529+ 8F74 13           	inc de 													; (Impacto), volcado a la caja.
 530+ 8F75              ;															; DE situado ahora en (Variables_de_borrado).
 531+ 8F75 23           	inc hl
 532+ 8F76 01 06 00     	ld bc,6
 533+ 8F79 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 534+ 8F7B              ; 															; DE situado ahora en (Puntero_de_impresión).
 535+ 8F7B 01 07 00     	ld bc,7
 536+ 8F7E ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 537+ 8F80              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 538+ 8F80              ;															; HL apunta ahora a (Columnas).
 539+ 8F80 21 B2 89     	ld hl,Ctrl_2
 540+ 8F83 7E           	ld a,(hl)
 541+ 8F84 12           	ld (de),a 												; Volcamos (Ctrl_2).
 542+ 8F85 13           	inc de
 543+ 8F86
 544+ 8F86 C9           	ret
 545+ 8F87
 546+ 8F87              ;---------------------------------------------------------------------------------------------------------------
 547+ 8F87              ;
 548+ 8F87              ;	5/1/24
 549+ 8F87              ;
 550+ 8F87              ;	INICIALIZA (Numero_parcial_de_entidades).
 551+ 8F87              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 552+ 8F87              ;
 553+ 8F87              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 554+ 8F87              ;
 555+ 8F87              ;	(Numero_parcial_de_entidades)="7".
 556+ 8F87              ;
 557+ 8F87              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 558+ 8F87              ;
 559+ 8F87              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 560+ 8F87              ;
 561+ 8F87              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 562+ 8F87              ;	MODIFICA: A y B.
 563+ 8F87              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 564+ 8F87
 565+ 8F87              Inicializa_Numero_parcial_de_entidades
 566+ 8F87
 567+ 8F87              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 568+ 8F87
 569+ 8F87 3A D9 89     	ld a,(Numero_de_entidades)
 570+ 8F8A A7           	and a
 571+ 8F8B
 572+ 8F8B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 573+ 8F8B              ;	jr z,$
 574+ 8F8B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 575+ 8F8B
 576+ 8F8B 20 03        	jr nz,3F
 577+ 8F8D
 578+ 8F8D              ; ---------- ---------- ----------
 579+ 8F8D
 580+ 8F8D              ;! RESET para pruebas. Omitir esta línea en modo normal.
 581+ 8F8D              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 582+ 8F8D
 583+ 8F8D CD AE 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 584+ 8F90
 585+ 8F90              ; ---------- ---------- ----------
 586+ 8F90
 587+ 8F90 3A D9 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 588+ 8F93 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 589+ 8F95 38 08        	jr c,1F
 590+ 8F97
 591+ 8F97              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 592+ 8F97              ; Actualizamos variables.
 593+ 8F97
 594+ 8F97 3E 07        	ld a,7
 595+ 8F99 32 DA 89     	ld (Numero_parcial_de_entidades),a
 596+ 8F9C 47           	ld b,a
 597+ 8F9D 18 04        	jr 2F
 598+ 8F9F
 599+ 8F9F              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 600+ 8F9F              ; (Numero_de_entidades)="0".
 601+ 8F9F
 602+ 8F9F 32 DA 89     1 ld (Numero_parcial_de_entidades),a
 603+ 8FA2 47           	ld b,a
 604+ 8FA3 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1859  8FA4              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8FA4              ; ******************************************************************************************************************************************************************************************
   2+ 8FA4              ;
   3+ 8FA4              ; 26/06/23
   4+ 8FA4              ;
   5+ 8FA4              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8FA4
   7+ 8FA4              Draw
   8+ 8FA4
   9+ 8FA4 CD 91 92     	call Prepara_draw
  10+ 8FA7 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8FA8 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8FA9 28 05        	jr z,2F
  13+ 8FAB
  14+ 8FAB 3A 9F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8FAE 18 0C        	jr 1F
  16+ 8FB0
  17+ 8FB0 2A 9D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8FB3 22 8D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8FB6 CD 45 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8FB9              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8FB9
  22+ 8FB9 CD DE 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8FBC
  24+ 8FBC 3A AD 89     1 ld a,(Ctrl_0)
  25+ 8FBF CB 6F        	bit 5,a
  26+ 8FC1 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8FC3
  28+ 8FC3 CD DB 8F     	call Comprueba_limite_horizontal
  29+ 8FC6 CD 6B 90     	call Comprueba_limite_vertical
  30+ 8FC9
  31+ 8FC9              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8FC9              ; -----------------------
  33+ 8FC9              ; -----------------------
  34+ 8FC9              ; -----------------------
  35+ 8FC9
  36+ 8FC9 CD C1 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8FCC CD F8 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8FCF CD 57 92     	call Define_rutina_de_impresion
  39+ 8FD2
  40+ 8FD2 3A AD 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8FD5 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8FD7 32 AD 89     	ld (Ctrl_0),a
  43+ 8FDA
  44+ 8FDA C9           	ret
  45+ 8FDB
  46+ 8FDB              ; *******************************************************************************************************************************************************************************************
  47+ 8FDB              ;	21/01/23
  48+ 8FDB              ;
  49+ 8FDB              ; 	Comprueba_limite_horizontal.
  50+ 8FDB              ;
  51+ 8FDB              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8FDB              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8FDB              ;
  54+ 8FDB              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8FDB              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8FDB              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8FDB              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8FDB
  59+ 8FDB
  60+ 8FDB
  61+ 8FDB 3A AD 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8FDE CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8FE0 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8FE2 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8FE4 32 AD 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8FE7 18 09            jr 6F
  67+ 8FE9 CB 5F        1 bit 3,a
  68+ 8FEB 28 0A            jr z,2F
  69+ 8FED E6 F7            and $f7
  70+ 8FEF 32 AD 89         ld (Ctrl_0),a
  71+ 8FF2 CD 45 91     6 call Inicializacion
  72+ 8FF5 18 5B            jr 5F
  73+ 8FF7 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8FF8
  75+ 8FF8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8FF8              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8FF8
  78+ 8FF8 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8FF9 2A AF 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8FFC CD 73 9F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8FFF 67           	ld h,a
  82+ 9000 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9001 CD 73 9F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9004 67           	ld h,a
  85+ 9005 A7           	and a
  86+ 9006 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9008 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9009 3A 9F 89     	ld a,(Cuad_objeto)
  89+ 900C FE 02        	cp 2
  90+ 900E 38 1E        	jr c,3F
  91+ 9010 28 1C        	jr z,3F
  92+ 9012 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9013 28 23            jr z,7F
  94+ 9015 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9017 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9019 E1           	pop hl
  97+ 901A
  98+ 901A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 901A              ; _para indicar con E="2" en caso necesario.
 100+ 901A
 101+ 901A E5               push hl
 102+ 901B C5               push bc
 103+ 901C CD 73 9F     	call calcula_tercio
 104+ 901F FE 01        	cp 1
 105+ 9021 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9023 CD 53 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9026 28 26            jr z,9F
 108+ 9028 38 24            jr c,9F
 109+ 902A 1E 00        11 ld e,0
 110+ 902C 18 22            jr 8F
 111+ 902E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 902F 28 07        	jr z, 7F
 113+ 9031 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9033 1E 00         	ld e,0
 115+ 9035 E1           	pop hl
 116+ 9036 18 04        	jr 4F
 117+ 9038 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 903A 18 15            jr 10F
 119+ 903C
 120+ 903C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 903C              ; _para indicar con E="2" en caso necesario.
 122+ 903C
 123+ 903C E5           4 push hl
 124+ 903D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 903E CD 73 9F     	call calcula_tercio
 126+ 9041 FE 01        	cp 1
 127+ 9043 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9045 CD 53 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9048 28 04            jr z,9F
 130+ 904A 30 02            jr nc,9F
 131+ 904C 18 02        	jr 8F
 132+ 904E 1E 02        9 ld e,2
 133+ 9050 C1           8 pop bc
 134+ 9051 E1           10 pop hl
 135+ 9052 C9           5 ret
 136+ 9053
 137+ 9053              ; --------------------
 138+ 9053              ;
 139+ 9053              ; 25/08/22
 140+ 9053
 141+ 9053 CD 73 9F     Comprueba_centro call calcula_tercio
 142+ 9056 67               ld h,a
 143+ 9057 08           	ex af,af
 144+ 9058 FE 02        	cp 2
 145+ 905A 38 07        	jr c,1F
 146+ 905C 28 05        	jr z,1F
 147+ 905E 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9061 18 03        	jr 2F
 149+ 9063 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9066 08           2 ex af,af
 151+ 9067 A7               and a
 152+ 9068 ED 42            sbc hl,bc
 153+ 906A C9               ret
 154+ 906B
 155+ 906B              ; *********************************************************************************************************************************************************************************************
 156+ 906B              ;
 157+ 906B              ;   16/8/22
 158+ 906B              ;
 159+ 906B              ;	Comprueba_limite_vertical
 160+ 906B              ;
 161+ 906B              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 906B              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 906B              ;
 164+ 906B
 165+ 906B 2A 8D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 906E 7D           	ld a,l
 167+ 906F E6 1F        	and $1F
 168+ 9071 57           	ld d,a
 169+ 9072 3A B1 89     	ld a,(Limite_vertical)
 170+ 9075 BA           	cp d 											; Límite - Posición.
 171+ 9076 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9077 3A 9F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 907A CB 47        	bit 0,a
 174+ 907C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 907E
 176+ 907E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 907E
 178+ 907E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 907F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9081
 181+ 9081              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9081              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9081
 184+ 9081 3A 91 89         ld a,(Coordenada_X)
 185+ 9084 16 0F            ld d,Centro_izquierda
 186+ 9086 A7               and a
 187+ 9087 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 9088 28 1E            jr z,3F
 189+ 908A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 908C              ;                                                    ; _salimos sin modificar nada.
 191+ 908C 18 0E            jr 2F
 192+ 908E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 908F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 9091
 195+ 9091              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 9091              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 9091
 198+ 9091 3A 91 89         ld a,(Coordenada_X)
 199+ 9094 16 10            ld d,Centro_derecha
 200+ 9096 A7               and a
 201+ 9097 92               sub d
 202+ 9098 28 0E            jr z,3F
 203+ 909A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 909C              ;                                                    ; _salimos sin modificar nada.
 205+ 909C CB 43        2 bit 0,e
 206+ 909E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 90A0 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 90A1 CD 35 91         call Modificaccionne
 209+ 90A4 C1           	pop bc
 210+ 90A5 CD 45 91         call Inicializacion
 211+ 90A8 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 90A9
 213+ 90A9              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 90A9
 215+ 90A9 C5           4 push bc
 216+ 90AA 01 8C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 90AD 0A           	ld a,(bc)
 218+ 90AE 3D           	dec a
 219+ 90AF 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 90B0 7D           	ld a,l
 221+ 90B1 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 90B2 CB 47        	bit 0,a
 223+ 90B4 28 03        	jr z,5F
 224+ 90B6 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 90B7 18 2E        	jr 7F
 226+ 90B9
 227+ 90B9              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 90B9
 229+ 90B9 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 90BA F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 90BB 3A AD 89     	ld a,(Ctrl_0)
 232+ 90BE CB 4F        	bit 1,a
 233+ 90C0 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 90C2 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 90C3
 236+ 90C3              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 90C3
 238+ 90C3 1C               inc e
 239+ 90C4 1D               dec e
 240+ 90C5 20 07            jr nz,12F
 241+ 90C7 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 90C8 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 90C9 22 8D 89     	ld (Posicion_actual),hl
 244+ 90CC 18 44        13 jr 9F
 245+ 90CE CB 43        12 bit 0,e
 246+ 90D0 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 90D2              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 90D2 C1           	pop bc
 249+ 90D3 18 D3        	jr 3B
 250+ 90D5 80           14 add b
 251+ 90D6 6F               ld l,a
 252+ 90D7 22 8D 89     	ld (Posicion_actual),hl
 253+ 90DA CD 35 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 90DD 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 90DF E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 90E1 32 AD 89         ld (Ctrl_0),a
 257+ 90E4 F1           	pop af
 258+ 90E5 18 2B        	jr 9F
 259+ 90E7
 260+ 90E7              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 90E7
 262+ 90E7 F5           7 push af
 263+ 90E8 3A AD 89     	ld a,(Ctrl_0)
 264+ 90EB CB 47        	bit 0,a
 265+ 90ED 20 1D        	jr nz,8F
 266+ 90EF F1           	pop af
 267+ 90F0
 268+ 90F0              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 90F0
 270+ 90F0 1C           	inc e
 271+ 90F1 1D               dec e
 272+ 90F2 20 07            jr nz,10F
 273+ 90F4 90           	sub b
 274+ 90F5 6F               ld l,a
 275+ 90F6 22 8D 89     	ld (Posicion_actual),hl
 276+ 90F9 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 90FB              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 90FB CB 43        10 bit 0,e
 279+ 90FD 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 90FF              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 90FF C1           	pop bc
 282+ 9100 18 A6        	jr 3B
 283+ 9102 90           16 sub b
 284+ 9103 6F               ld l,a
 285+ 9104 22 8D 89     	ld (Posicion_actual),hl
 286+ 9107 CD 35 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 910A 18 06            jr 9F
 288+ 910C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 910E 32 AD 89         ld (Ctrl_0),a
 290+ 9111 F1           	pop af
 291+ 9112 C1           9 pop bc
 292+ 9113 1E 00        	ld e,0
 293+ 9115 CD 45 91         call Inicializacion
 294+ 9118 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9119 08           	ex af,af
 296+ 911A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 911B 18 8B            jr 3B
 298+ 911D
 299+ 911D              ; --------------------
 300+ 911D
 301+ 911D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 911F CD AC 92     1 call PreviousScan
 303+ 9122 10 FB            djnz 1B
 304+ 9124 22 8D 89     	ld (Posicion_actual),hl
 305+ 9127 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9128 C9           	ret
 307+ 9129
 308+ 9129              ; --------------------
 309+ 9129
 310+ 9129 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 912B CD 9D 92     1 call NextScan
 312+ 912E 10 FB            djnz 1B
 313+ 9130 22 8D 89     	ld (Posicion_actual),hl
 314+ 9133 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9134 C9           	ret
 316+ 9135
 317+ 9135              ; --------------------
 318+ 9135              ;
 319+ 9135              ;	22/01/23
 320+ 9135              ;
 321+ 9135              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9135              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9135              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9135
 325+ 9135
 326+ 9135              Modificaccionne
 327+ 9135
 328+ 9135 3A 9F 89     	ld a,(Cuad_objeto)
 329+ 9138 FE 02        	cp 2
 330+ 913A CC 1D 91         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 913D DC 1D 91         call c,Modifica_Pos_actual
 332+ 9140 C8           	ret z
 333+ 9141 CD 29 91         call Modifica_Pos_actual2
 334+ 9144 C9               ret
 335+ 9145
 336+ 9145              ; *************************************************************************************************************************************************************************************************
 337+ 9145              ;
 338+ 9145              ;	13/8/22
 339+ 9145              ;
 340+ 9145              ;	Inicializacion
 341+ 9145              ;
 342+ 9145              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9145              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9145              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9145              ;
 346+ 9145              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9145              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9145              ;	_ desaparece/aparece.
 349+ 9145
 350+ 9145              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9145              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9145              ;
 353+ 9145              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9145              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9145              ; 		   [E] ="0"
 356+ 9145
 357+ 9145              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9145
 359+ 9145 CD 73 9F     Inicializacion call calcula_tercio
 360+ 9148 28 36        	jr z,primit
 361+ 914A E6 02        	and 2
 362+ 914C 20 07        	jr nz,segmit
 363+ 914E 7D           	ld a,l
 364+ 914F FE 7F        	cp $7f
 365+ 9151 38 2D        	jr c,primit
 366+ 9153 28 2B        	jr z,primit
 367+ 9155 CD BB 91     segmit call column
 368+ 9158 38 13        	jr c,tercuad
 369+ 915A 3E 04        cuarcuad ld a,4
 370+ 915C 32 9F 89     	ld (Cuad_objeto),a
 371+ 915F 21 20 48     	ld hl,$4820
 372+ 9162 22 AF 89     	ld (Limite_horizontal),hl
 373+ 9165 21 B1 89     	ld hl,Limite_vertical
 374+ 9168 36 0D        	ld (hl),$0d
 375+ 916A 08           	ex af,af
 376+ 916B 18 3C        	jr 1F
 377+ 916D              tercuad
 378+ 916D 3E 03        	ld a,3
 379+ 916F 32 9F 89     	ld (Cuad_objeto),a
 380+ 9172 21 20 48     	ld hl,$4820
 381+ 9175 22 AF 89     	ld (Limite_horizontal),hl
 382+ 9178 21 B1 89     	ld hl,Limite_vertical
 383+ 917B 36 12        	ld (hl),$12
 384+ 917D 08           	ex af,af
 385+ 917E 18 29        	jr 1F
 386+ 9180 CD BB 91     primit call column
 387+ 9183 38 13        	jr c, primcuad
 388+ 9185              segcuad
 389+ 9185 3E 02        	ld a,2
 390+ 9187 32 9F 89     	ld (Cuad_objeto),a
 391+ 918A 21 C0 4F     	ld hl,$4fc0
 392+ 918D 22 AF 89     	ld (Limite_horizontal),hl
 393+ 9190 21 B1 89     	ld hl,Limite_vertical
 394+ 9193 36 0D        	ld (hl),$0d
 395+ 9195 08           	ex af,af
 396+ 9196 18 11        	jr 1F
 397+ 9198              primcuad
 398+ 9198 3E 01        	ld a,1
 399+ 919A 32 9F 89     	ld (Cuad_objeto),a
 400+ 919D 21 C0 4F     	ld hl,$4fc0
 401+ 91A0 22 AF 89     	ld (Limite_horizontal),hl
 402+ 91A3 21 B1 89     	ld hl,Limite_vertical
 403+ 91A6 36 12        	ld (hl),$12
 404+ 91A8 08           	ex af,af
 405+ 91A9
 406+ 91A9 C5           1 push bc
 407+ 91AA E5           	push hl
 408+ 91AB D5           	push de
 409+ 91AC
 410+ 91AC 2A 8D 89     	ld hl,(Posicion_actual)
 411+ 91AF CD 91 9F     	call Genera_coordenadas
 412+ 91B2
 413+ 91B2 D1           	pop de
 414+ 91B3 E1           	pop hl
 415+ 91B4 C1           	pop bc
 416+ 91B5
 417+ 91B5 21 AD 89     	ld hl,Ctrl_0
 418+ 91B8 CB EE        	set 5,(hl)
 419+ 91BA C9           	ret
 420+ 91BB
 421+ 91BB              ; ------------------------------------------------------------------------------------------------------------------
 422+ 91BB
 423+ 91BB              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 91BB              ;
 425+ 91BB              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 91BB
 427+ 91BB 7D           column ld a,l
 428+ 91BC E6 1F        	and $1f
 429+ 91BE FE 10         	cp $10
 430+ 91C0 C9            	ret
 431+ 91C1
 432+ 91C1              ; --------------------------------------------------------------------------------------------------------------------
 433+ 91C1              ;
 434+ 91C1              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 91C1              ;
 436+ 91C1              ; 14/12/22
 437+ 91C1              ;
 438+ 91C1              ;	Modifica: A y BC.
 439+ 91C1
 440+ 91C1 3A 9F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 91C4 E6 01        	and 1
 442+ 91C6 28 17        	jr z,1F
 443+ 91C8
 444+ 91C8              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 91C8
 446+ 91C8 3A 91 89     	ld a,(Coordenada_X)
 447+ 91CB 47           	ld b,a
 448+ 91CC 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 91CD 79           	ld a,c
 450+ 91CE 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 91CF 38 08        	jr c,2F
 452+ 91D1 47           	ld b,a
 453+ 91D2 79           	ld a,c
 454+ 91D3 90           	sub b
 455+ 91D4 32 AE 89     	ld (Columnas),a
 456+ 91D7 18 1B        	jr 4F
 457+ 91D9 79           2 ld a,c
 458+ 91DA 32 AE 89     	ld (Columnas),a
 459+ 91DD 18 15        	jr 4F
 460+ 91DF
 461+ 91DF              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 91DF
 463+ 91DF 3A 91 89     1 ld a,(Coordenada_X)
 464+ 91E2 81           	add c
 465+ 91E3 3D           	dec a
 466+ 91E4 D6 1F        	sub $1f
 467+ 91E6 38 08        	jr c,3F
 468+ 91E8 47           	ld b,a
 469+ 91E9 79           	ld a,c
 470+ 91EA 90           	sub b
 471+ 91EB 32 AE 89     	ld (Columnas),a
 472+ 91EE 18 04        	jr 4F
 473+ 91F0 79           3 ld a,c
 474+ 91F1 32 AE 89     	ld (Columnas),a
 475+ 91F4 D9           4 exx
 476+ 91F5 4F           	ld c,a
 477+ 91F6 D9           	exx
 478+ 91F7 C9            ret
 479+ 91F8
 480+ 91F8              ; --------------------------------------------------------------------------------------------------------------------
 481+ 91F8              ;
 482+ 91F8              ;   19/7/23
 483+ 91F8              ;
 484+ 91F8              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 91F8              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 91F8              ;
 487+ 91F8              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 91F8              ;			HL e IY Contienen (Puntero_objeto).
 489+ 91F8              ;
 490+ 91F8              ;	DESTRUYE: HL,B Y A.
 491+ 91F8
 492+ 91F8 3A 9F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 91FB FE 02        	cp 2
 494+ 91FD 38 18        	jr c,1F
 495+ 91FF 28 16        	jr z,1F
 496+ 9201 E6 01        	and 1
 497+ 9203 28 0D        	jr z,3F
 498+ 9205
 499+ 9205              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9205
 501+ 9205 CD 4B 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9208
 503+ 9208 7D           9 ld a,l
 504+ 9209 E6 1F        	and $1f
 505+ 920B 28 2A        	jr z,7F
 506+ 920D 2B           	dec hl
 507+ 920E 10 F8        	djnz 9B
 508+ 9210 18 25        	jr 7F
 509+ 9212
 510+ 9212              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9212
 512+ 9212 2A 8D 89     3 ld hl,(Posicion_actual)
 513+ 9215 18 20        	jr 7F
 514+ 9217
 515+ 9217 28 14        1 jr z,2F
 516+ 9219
 517+ 9219              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9219
 519+ 9219 CD 4B 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 921C
 521+ 921C 7D           4 ld a,l
 522+ 921D E6 1F        	and $1f
 523+ 921F 28 03        	jr z,6F
 524+ 9221 2B           	dec hl
 525+ 9222 10 F8        	djnz 4B
 526+ 9224 06 0F        6 ld b,15
 527+ 9226 CD AC 92     5 call PreviousScan
 528+ 9229 10 FB        	djnz 5B
 529+ 922B 18 0A        	jr 7F
 530+ 922D
 531+ 922D              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 922D
 533+ 922D CD 4B 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9230 06 0F        	ld b,15
 535+ 9232 CD AC 92     8 call PreviousScan
 536+ 9235 10 FB        	djnz 8B
 537+ 9237
 538+ 9237 E5           7 push hl
 539+ 9238 DD E1        	pop ix
 540+ 923A
 541+ 923A 2A 8F 89     	ld hl,(Puntero_objeto)
 542+ 923D E5           	push hl
 543+ 923E FD E1        	pop iy
 544+ 9240
 545+ 9240              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9240
 547+ 9240 3A AD 89     	ld a,(Ctrl_0)
 548+ 9243 CB 77        	bit 6,a
 549+ 9245 C8           	ret z
 550+ 9246
 551+ 9246              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9246              ; _ entidad / Amadeus´.
 553+ 9246
 554+ 9246 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 924A
 556+ 924A C9           	ret
 557+ 924B
 558+ 924B              ; --------------------------------------------------------------------------------------------------------------------
 559+ 924B              ;
 560+ 924B              ;	2/1/23
 561+ 924B              ;
 562+ 924B              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 924B              ;
 564+ 924B              ;	Tras esta rutina tenemos:
 565+ 924B              ;
 566+ 924B              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 924B              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 924B              ;
 569+ 924B              ;	DESTRUYE!!!!! HL,B y A.
 570+ 924B
 571+ 924B 2A 8D 89     Operandos ld hl,(Posicion_actual)
 572+ 924E 3A AE 89     	ld a,(Columnas)
 573+ 9251 3D           	dec a
 574+ 9252 20 01        	jr nz,1F
 575+ 9254 3C           	inc a
 576+ 9255 47           1 ld b,a
 577+ 9256 C9           	ret
 578+ 9257
 579+ 9257              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9257              ;
 581+ 9257              ;	3/1/23
 582+ 9257              ;
 583+ 9257              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9257              ;
 585+ 9257              ;	Destruye: A,B,HL y DE.
 586+ 9257
 587+ 9257              Define_rutina_de_impresion
 588+ 9257
 589+ 9257 3A 8C 89     	ld a,(Columns)
 590+ 925A 47           	ld b,a
 591+ 925B 3A AE 89     	ld a,(Columnas)
 592+ 925E B8           	cp b
 593+ 925F 20 0D        	jr nz,2f
 594+ 9261
 595+ 9261              ;	La entidad se imprime entera.
 596+ 9261
 597+ 9261 21 80 93     	ld hl, Indice_entidades_completas
 598+ 9264 E6 01        	and 1
 599+ 9266 28 02        	jr z,1F
 600+ 9268
 601+ 9268 23           	inc hl
 602+ 9269 23           	inc hl
 603+ 926A
 604+ 926A CD 68 8C     1 call Extrae_address
 605+ 926D C9           	ret		;	ret
 606+ 926E
 607+ 926E              ;	La entidad no se imprime entera en pantalla.
 608+ 926E
 609+ 926E 3A 9F 89     2 ld a,(Cuad_objeto)
 610+ 9271 E6 01        	and 1
 611+ 9273 28 17        	jr z,3F
 612+ 9275
 613+ 9275              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9275
 615+ 9275 21 84 93     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9278 3A 8C 89     4 ld a,(Columns)
 617+ 927B E6 01        	and 1
 618+ 927D 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 927F
 620+ 927F 23           	inc hl
 621+ 9280 23           	inc hl
 622+ 9281
 623+ 9281 3A AE 89     	ld a,(Columnas)
 624+ 9284 E6 01        	and 1
 625+ 9286 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 9288
 627+ 9288 23           	inc hl
 628+ 9289 23           	inc hl
 629+ 928A
 630+ 928A 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 928C
 632+ 928C 21 8A 93     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 928F 18 E7        	jr 4B
 634+ 9291
 635+ 9291              ; --------------------------------------------------------------------------------------------------------------------
 636+ 9291              ;
 637+ 9291              ;	Prepara_draw
 638+ 9291              ;
 639+ 9291              ;	Es una rutina de carga.
 640+ 9291              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 9291              ;
 642+ 9291              ;	FUNCIONAMIENTO:
 643+ 9291              ;
 644+ 9291              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 9291              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 9291              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 9291              ;
 648+ 9291              ;	DESTRUYE:
 649+ 9291              ;
 650+ 9291              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 9291
 652+ 9291 21 8B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9294 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9295 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9296 4E           	ld c,(hl)
 656+ 9297 2A 8D 89     	ld hl,(Posicion_actual)
 657+ 929A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 929C C9           	ret
 659+ 929D
 660+ 929D              ;----------------------------------------------------------------------------------------------------------------
 661+ 929D              ;
 662+ 929D              ;	5/08/22
 663+ 929D              ;
 664+ 929D              ;   NextScan.
 665+ 929D              ;
 666+ 929D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 929D              ;
 668+ 929D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 929D              ;
 670+ 929D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 929D              ;
 672+ 929D              ;       DESTRUIDOS: AF y HL !!!
 673+ 929D              ;
 674+ 929D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 929D              ;
 676+ 929D
 677+ 929D 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 929E 7C               ld a,h
 679+ 929F E6 07            and 7
 680+ 92A1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 92A2
 682+ 92A2 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 92A3 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 92A5 6F               ld l,a
 685+ 92A6 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 92A7
 687+ 92A7 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 92A8 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 92AA 67               ld h,a
 690+ 92AB C9               ret
 691+ 92AC
 692+ 92AC              ;----------------------------------------------------------------------------------------------------------------
 693+ 92AC              ;
 694+ 92AC              ;	5/08/22
 695+ 92AC              ;
 696+ 92AC              ;   PreviousScan.
 697+ 92AC              ;
 698+ 92AC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 92AC              ;
 700+ 92AC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 92AC              ;
 702+ 92AC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 92AC              ;
 704+ 92AC              ;       DESTRUIDOS: AF y HL !!!
 705+ 92AC              ;
 706+ 92AC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 92AC              ;
 708+ 92AC
 709+ 92AC 7C           PreviousScan ld a,h
 710+ 92AD 25               dec h               ; Dec H.
 711+ 92AE E6 07            and 7
 712+ 92B0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 92B1
 714+ 92B1 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 92B2 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 92B4 6F               ld l,a
 717+ 92B5 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 92B6
 719+ 92B6 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 92B7 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 92B9 67               ld h,a
 722+ 92BA C9               ret
 723+ 92BB
 724+ 92BB              ; -----------------------------------------------------------------------------------
 725+ 92BB              ;
 726+ 92BB              ;	31/7/23
 727+ 92BB              ;
 728+ 92BB              ;	Rutina principal de pintado de entidades.
 729+ 92BB              ;	Extrae la foto del frame, (entidades).
 730+ 92BB
 731+ 92BB              Extrae_foto_entidades
 732+ 92BB
 733+ 92BB 21 01 80     	ld hl,Album_de_fotos+1
 734+ 92BE 7E           	ld a,(hl)
 735+ 92BF A7           	and a
 736+ 92C0 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 92C1
 738+ 92C1              ;	No hay datos, (entidades para pintar en este frame).
 739+ 92C1
 740+ 92C1 3A DC 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 92C4 A7           	and a
 742+ 92C5 C8           	ret z
 743+ 92C6
 744+ 92C6              ; -----------------------------------
 745+ 92C6
 746+ 92C6 ED 73 E1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 92CA 31 00 80     	ld sp,Album_de_fotos
 748+ 92CD
 749+ 92CD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 92CF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 92D0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 92D1
 753+ 92D1 ED 73 E3 89  	ld (Stack_2),sp
 754+ 92D5 ED 7B E1 89  	ld sp,(Stack)
 755+ 92D9
 756+ 92D9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 92D9
 758+ 92D9 3E CD        	ld a,$cd
 759+ 92DB 32 E3 92     	ld (Imprime),a
 760+ 92DE EB           	ex de,hl
 761+ 92DF 22 E4 92     	ld (Imprime+1),hl
 762+ 92E2 EB           	ex de,hl
 763+ 92E3
 764+ 92E3              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 92E3
 766+ 92E3 00 00 00     Imprime db 0,0,0
 767+ 92E6
 768+ 92E6 ED 73 E1 89  	ld (Stack),sp
 769+ 92EA
 770+ 92EA 3A DC 89     	ld a,(Numero_de_malotes)
 771+ 92ED 3D           	dec a
 772+ 92EE 28 09        	jr z,1F
 773+ 92F0 32 DC 89      	ld (Numero_de_malotes),a
 774+ 92F3
 775+ 92F3 ED 7B E3 89  	ld sp,(Stack_2)
 776+ 92F7 18 D4        	jr 2B
 777+ 92F9
 778+ 92F9 AF           1 xor a
 779+ 92FA 32 E3 89     	ld (Stack_2),a
 780+ 92FD
 781+ 92FD C9           	ret
 782+ 92FE
 783+ 92FE              ; -----------------------------------------------------------------------------------
 784+ 92FE              ;
 785+ 92FE              ;	28/2/23
 786+ 92FE              ;
 787+ 92FE              ;	Pinta los disparos generados.
 788+ 92FE
 789+ 92FE              Extrae_foto_disparos
 790+ 92FE
 791+ 92FE 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9301 7E               ld a,(hl)
 793+ 9302 A7               and a
 794+ 9303 C8               ret z
 795+ 9304
 796+ 9304 3A F1 89     	ld a,(Numero_de_disparotes)
 797+ 9307 A7           	and a
 798+ 9308 C8           	ret z
 799+ 9309 ED 73 E1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 930D 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9310
 802+ 9310 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9312 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9313 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9314
 806+ 9314 ED 73 E3 89  	ld (Stack_2),sp
 807+ 9318 ED 7B E1 89  	ld sp,(Stack)
 808+ 931C
 809+ 931C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 931C
 811+ 931C 3E CD        	ld a,$cd
 812+ 931E 32 26 93     	ld (Imprime2),a
 813+ 9321 EB           	ex de,hl
 814+ 9322 22 27 93     	ld (Imprime2+1),hl
 815+ 9325 EB           	ex de,hl
 816+ 9326
 817+ 9326              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9326
 819+ 9326 00 00 00     Imprime2 db 0,0,0
 820+ 9329
 821+ 9329 3A F1 89     	ld a,(Numero_de_disparotes)
 822+ 932C 3D           	dec a
 823+ 932D 28 09        	jr z,1F
 824+ 932F 32 F1 89      	ld (Numero_de_disparotes),a
 825+ 9332
 826+ 9332 ED 7B E3 89  	ld sp,(Stack_2)
 827+ 9336 18 D8        	jr 2B
 828+ 9338
 829+ 9338 AF           1 xor a
 830+ 9339 32 E3 89     	ld (Stack_2),a
 831+ 933C C9           	ret
 832+ 933D
 833+ 933D              ; -----------------------------------------------------------------------------------
 834+ 933D              ;
 835+ 933D              ;	4/9/23
 836+ 933D              ;
 837+ 933D              ;	Rutina principal de pintado de Amadeus.
 838+ 933D              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 933D
 840+ 933D 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9340 7E           	ld a,(hl)
 842+ 9341 A7           	and a
 843+ 9342 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9343
 845+ 9343 3A DC 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9346 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9347 C8           	ret z
 848+ 9348
 849+ 9348              ; -----------------------------------
 850+ 9348
 851+ 9348 ED 73 E1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 934C 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 934F
 854+ 934F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9351 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9352 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9353
 858+ 9353 ED 73 E3 89  	ld (Stack_2),sp
 859+ 9357 ED 7B E1 89  	ld sp,(Stack)
 860+ 935B
 861+ 935B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 935B
 863+ 935B 3E CD        	ld a,$cd
 864+ 935D 32 65 93     	ld (Imprime_Amadeus),a
 865+ 9360 EB           	ex de,hl
 866+ 9361 22 66 93     	ld (Imprime_Amadeus+1),hl
 867+ 9364 EB           	ex de,hl
 868+ 9365
 869+ 9365              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9365
 871+ 9365 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9368
 873+ 9368 ED 73 E1 89  	ld (Stack),sp
 874+ 936C
 875+ 936C 3A DC 89     	ld a,(Numero_de_malotes)
 876+ 936F 3D           	dec a
 877+ 9370 28 09        	jr z,1F
 878+ 9372 32 DC 89      	ld (Numero_de_malotes),a
 879+ 9375
 880+ 9375 ED 7B E3 89  	ld sp,(Stack_2)
 881+ 9379 18 D4        	jr 2B
 882+ 937B
 883+ 937B AF           1 xor a
 884+ 937C 32 E3 89     	ld (Stack_2),a
 885+ 937F
 886+ 937F C9           	ret
# file closed: Draw_XOR.asm
1860  9380              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9380              ;   índices de Rutinas de impresión.
   2+ 9380
   3+ 9380 90 93        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9382 A9 93            defw Pinta_Amadeus_3x2
   5+ 9384
   6+ 9384 FF 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9386 9F 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9388 53 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 938A
  10+ 938A 29 94        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 938C 2D 95            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 938E E1 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9390
  14+ 9390
  15+ 9390              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9390              ;
  17+ 9390              ;   12/12/22
  18+ 9390              ;
  19+ 9390              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9390              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9390              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9390              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9390              ;
  24+ 9390              ;   Modifica: DE y HL.
  25+ 9390
  26+ 9390              Pinta_Amadeus_2x2 ; 1081 t/states
  27+ 9390
  28+ 9390 FD E5            push iy
  29+ 9392 D1               pop de
  30+ 9393
  31+ 9393 ED 73 E1 89      ld (Stack),sp
  32+ 9397 F9           	ld sp,hl
  33+ 9398 06 10            ld b,16
  34+ 939A
  35+ 939A E1           1 pop hl
  36+ 939B
  37+ 939B 1A               ld a,(de)
  38+ 939C 77               ld (hl),a
  39+ 939D 1C           	inc e
  40+ 939E 2C               inc l
  41+ 939F 1A               ld a,(de)
  42+ 93A0 77               ld (hl),a
  43+ 93A1 1C               inc e
  44+ 93A2
  45+ 93A2 10 F6            djnz 1B
  46+ 93A4
  47+ 93A4 ED 7B E1 89      ld sp,(Stack)
  48+ 93A8
  49+ 93A8 C9           	ret
  50+ 93A9
  51+ 93A9 ED 73 E1 89  Pinta_Amadeus_3x2 ld (Stack),sp
  52+ 93AD FD F9        	ld sp,iy
  53+ 93AF 06 08            ld b,8
  54+ 93B1 D1           1 pop de
  55+ 93B2 7B               ld a,e
  56+ 93B3 AE               xor (hl)
  57+ 93B4 77           	ld (hl),a
  58+ 93B5 23           	inc hl
  59+ 93B6 7A               ld a,d
  60+ 93B7 AE               xor (hl)
  61+ 93B8 77           	ld (hl),a
  62+ 93B9 23           	inc hl
  63+ 93BA D1           	pop de
  64+ 93BB 7B               ld a,e
  65+ 93BC AE               xor (hl)
  66+ 93BD 77           	ld (hl),a
  67+ 93BE 2B           	dec hl
  68+ 93BF 2B           	dec hl
  69+ 93C0 24           	inc h
  70+ 93C1 7C               ld a,h
  71+ 93C2 E6 07            and 7
  72+ 93C4 20 0A            jr nz,2F
  73+ 93C6 7D               ld a,l
  74+ 93C7 C6 20            add a,$20
  75+ 93C9 6F               ld l,a
  76+ 93CA 38 04            jr c,2F
  77+ 93CC 7C               ld a,h
  78+ 93CD D6 08            sub 8
  79+ 93CF 67               ld h,a
  80+ 93D0 7C           2 ld a,h
  81+ 93D1 FE 58            cp $58
  82+ 93D3 28 25            jr z,4F
  83+ 93D5 7A               ld a,d
  84+ 93D6 AE               xor (hl)
  85+ 93D7 77               ld (hl),a
  86+ 93D8 D1           	pop de
  87+ 93D9 23           	inc hl
  88+ 93DA 7B               ld a,e
  89+ 93DB AE               xor (hl)
  90+ 93DC 77           	ld (hl),a
  91+ 93DD 23           	inc hl
  92+ 93DE 7A               ld a,d
  93+ 93DF AE               xor (hl)
  94+ 93E0 77           	ld (hl),a
  95+ 93E1 2B           	dec hl
  96+ 93E2 2B           	dec hl
  97+ 93E3 24           	inc h
  98+ 93E4 7C               ld a,h
  99+ 93E5 E6 07            and 7
 100+ 93E7 20 0A            jr nz,3F
 101+ 93E9 7D               ld a,l
 102+ 93EA C6 20            add a,$20
 103+ 93EC 6F               ld l,a
 104+ 93ED 38 04            jr c,3F
 105+ 93EF 7C               ld a,h
 106+ 93F0 D6 08            sub 8
 107+ 93F2 67               ld h,a
 108+ 93F3 7C           3 ld a,h
 109+ 93F4 FE 58            cp $58
 110+ 93F6 28 02            jr z,4F
 111+ 93F8 10 B7            djnz 1B
 112+ 93FA ED 7B E1 89  4 ld sp,(Stack)
 113+ 93FE C9           	ret
 114+ 93FF
 115+ 93FF              ; ---------------------------------------------------
 116+ 93FF
 117+ 93FF ED 73 E1 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 118+ 9403 FD F9        	ld sp,iy
 119+ 9405
 120+ 9405              ; >>>
 121+ 9405
 122+ 9405 06 10            ld b,16
 123+ 9407 D1           1 pop de
 124+ 9408 7A           	ld a,d
 125+ 9409 AE           	xor (hl)
 126+ 940A 77           	ld (hl),a
 127+ 940B 24           	inc h
 128+ 940C 7C               ld a,h
 129+ 940D E6 07            and 7
 130+ 940F 20 0C            jr nz,2F
 131+ 9411 7D               ld a,l
 132+ 9412 C6 20            add a,$20
 133+ 9414 6F               ld l,a
 134+ 9415 38 06            jr c,2F
 135+ 9417 7C               ld a,h
 136+ 9418 D6 08            sub 8
 137+ 941A 67               ld h,a
 138+ 941B 18 00            jr 2F
 139+ 941D 7C           2 ld a,h
 140+ 941E FE 58            cp $58
 141+ 9420 28 02            jr z,3F
 142+ 9422 10 E3            djnz 1B
 143+ 9424 ED 7B E1 89  3 ld sp,(Stack)
 144+ 9428 C9           	ret
 145+ 9429
 146+ 9429 ED 73 E1 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 147+ 942D FD F9        	ld sp,iy
 148+ 942F
 149+ 942F              ; >>>
 150+ 942F
 151+ 942F 06 10            ld b,16
 152+ 9431 D1           1 pop de
 153+ 9432 7B           	ld a,e
 154+ 9433 AE           	xor (hl)
 155+ 9434 77           	ld (hl),a
 156+ 9435 24           	inc h
 157+ 9436 7C               ld a,h
 158+ 9437 E6 07            and 7
 159+ 9439 20 0C            jr nz,2F
 160+ 943B 7D               ld a,l
 161+ 943C C6 20            add a,$20
 162+ 943E 6F               ld l,a
 163+ 943F 38 06            jr c,2F
 164+ 9441 7C               ld a,h
 165+ 9442 D6 08            sub 8
 166+ 9444 67               ld h,a
 167+ 9445 18 00            jr 2F
 168+ 9447 7C           2 ld a,h
 169+ 9448 FE 58            cp $58
 170+ 944A 28 02            jr z,3F
 171+ 944C 10 E3            djnz 1B
 172+ 944E ED 7B E1 89  3 ld sp,(Stack)
 173+ 9452 C9           	ret
 174+ 9453
 175+ 9453              ; ---------------------------------------------------
 176+ 9453
 177+ 9453 ED 73 E1 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 178+ 9457 FD F9        	ld sp,iy
 179+ 9459 06 08            ld b,8
 180+ 945B D1           1 pop de
 181+ 945C 7A           	ld a,d
 182+ 945D AE           	xor (hl)
 183+ 945E 77           	ld (hl),a
 184+ 945F 23           	inc hl
 185+ 9460 D1           	pop de
 186+ 9461 7B           	ld a,e
 187+ 9462 AE           	xor (hl)
 188+ 9463 77           	ld (hl),a
 189+ 9464 2B           	dec hl
 190+ 9465 24            	inc h
 191+ 9466 7C               ld a,h
 192+ 9467 E6 07            and 7
 193+ 9469 20 0A            jr nz,2F
 194+ 946B 7D               ld a,l
 195+ 946C C6 20            add a,$20
 196+ 946E 6F               ld l,a
 197+ 946F 38 04            jr c,2F
 198+ 9471 7C               ld a,h
 199+ 9472 D6 08            sub 8
 200+ 9474 67               ld h,a
 201+ 9475 7C           2 ld a,h
 202+ 9476 FE 58            cp $58
 203+ 9478 28 20            jr z,4F
 204+ 947A D1               pop de
 205+ 947B 7B           	ld a,e
 206+ 947C AE           	xor (hl)
 207+ 947D 77           	ld (hl),a
 208+ 947E 23           	inc hl
 209+ 947F 7A           	ld a,d
 210+ 9480 AE           	xor (hl)
 211+ 9481 77           	ld (hl),a
 212+ 9482 2B           	dec hl
 213+ 9483 24           	inc h
 214+ 9484 7C               ld a,h
 215+ 9485 E6 07            and 7
 216+ 9487 20 0A            jr nz,3F
 217+ 9489 7D               ld a,l
 218+ 948A C6 20            add a,$20
 219+ 948C 6F               ld l,a
 220+ 948D 38 04            jr c,3F
 221+ 948F 7C               ld a,h
 222+ 9490 D6 08            sub 8
 223+ 9492 67               ld h,a
 224+ 9493 7C           3 ld a,h
 225+ 9494 FE 58            cp $58
 226+ 9496 28 02            jr z,4F
 227+ 9498 10 C1            djnz 1B
 228+ 949A ED 7B E1 89  4 ld sp,(Stack)
 229+ 949E C9           	ret
 230+ 949F
 231+ 949F ED 73 E1 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 232+ 94A3 FD F9        	ld sp,iy
 233+ 94A5 06 08            ld b,8
 234+ 94A7 D1           1 pop de
 235+ 94A8 D1           	pop de
 236+ 94A9 7B           	ld a,e
 237+ 94AA AE           	xor (hl)
 238+ 94AB 77           	ld (hl),a
 239+ 94AC 24            	inc h
 240+ 94AD 7C               ld a,h
 241+ 94AE E6 07            and 7
 242+ 94B0 20 0A            jr nz,2F
 243+ 94B2 7D               ld a,l
 244+ 94B3 C6 20            add a,$20
 245+ 94B5 6F               ld l,a
 246+ 94B6 38 04            jr c,2F
 247+ 94B8 7C               ld a,h
 248+ 94B9 D6 08            sub 8
 249+ 94BB 67               ld h,a
 250+ 94BC 7C           2 ld a,h
 251+ 94BD FE 58            cp $58
 252+ 94BF 28 1B            jr z,4F
 253+ 94C1 D1               pop de
 254+ 94C2 7A           	ld a,d
 255+ 94C3 AE           	xor (hl)
 256+ 94C4 77           	ld (hl),a
 257+ 94C5 24           	inc h
 258+ 94C6 7C               ld a,h
 259+ 94C7 E6 07            and 7
 260+ 94C9 20 0A            jr nz,3F
 261+ 94CB 7D               ld a,l
 262+ 94CC C6 20            add a,$20
 263+ 94CE 6F               ld l,a
 264+ 94CF 38 04            jr c,3F
 265+ 94D1 7C               ld a,h
 266+ 94D2 D6 08            sub 8
 267+ 94D4 67               ld h,a
 268+ 94D5 7C           3 ld a,h
 269+ 94D6 FE 58            cp $58
 270+ 94D8 28 02            jr z,4F
 271+ 94DA 10 CB            djnz 1B
 272+ 94DC ED 7B E1 89  4 ld sp,(Stack)
 273+ 94E0 C9           	ret
 274+ 94E1
 275+ 94E1 ED 73 E1 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 276+ 94E5 FD F9        	ld sp,iy
 277+ 94E7 06 08            ld b,8
 278+ 94E9 D1           1 pop de
 279+ 94EA 7B           	ld a,e
 280+ 94EB AE           	xor (hl)
 281+ 94EC 77           	ld (hl),a
 282+ 94ED 23           	inc hl
 283+ 94EE 7A           	ld a,d
 284+ 94EF AE           	xor (hl)
 285+ 94F0 77           	ld (hl),a
 286+ 94F1 2B           	dec hl
 287+ 94F2 24             	inc h
 288+ 94F3 7C               ld a,h
 289+ 94F4 E6 07            and 7
 290+ 94F6 20 0A            jr nz,2F
 291+ 94F8 7D               ld a,l
 292+ 94F9 C6 20            add a,$20
 293+ 94FB 6F               ld l,a
 294+ 94FC 38 04            jr c,2F
 295+ 94FE 7C               ld a,h
 296+ 94FF D6 08            sub 8
 297+ 9501 67               ld h,a
 298+ 9502 7C           2 ld a,h
 299+ 9503 FE 58            cp $58
 300+ 9505 28 21            jr z,4F
 301+ 9507 D1               pop de
 302+ 9508 7A           	ld a,d
 303+ 9509 AE           	xor (hl)
 304+ 950A 77           	ld (hl),a
 305+ 950B 23           	inc hl
 306+ 950C D1               pop de
 307+ 950D 7B           	ld a,e
 308+ 950E AE           	xor (hl)
 309+ 950F 77           	ld (hl),a
 310+ 9510 2B           	dec hl
 311+ 9511 24           	inc h
 312+ 9512 7C               ld a,h
 313+ 9513 E6 07            and 7
 314+ 9515 20 0A            jr nz,3F
 315+ 9517 7D               ld a,l
 316+ 9518 C6 20            add a,$20
 317+ 951A 6F               ld l,a
 318+ 951B 38 04            jr c,3F
 319+ 951D 7C               ld a,h
 320+ 951E D6 08            sub 8
 321+ 9520 67               ld h,a
 322+ 9521 7C           3 ld a,h
 323+ 9522 FE 58            cp $58
 324+ 9524 28 02            jr z,4F
 325+ 9526 10 C1            djnz 1B
 326+ 9528 ED 7B E1 89  4 ld sp,(Stack)
 327+ 952C C9           	ret
 328+ 952D
 329+ 952D ED 73 E1 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 330+ 9531 FD F9        	ld sp,iy
 331+ 9533 06 08            ld b,8
 332+ 9535 D1           1 pop de
 333+ 9536 7B           	ld a,e
 334+ 9537 AE           	xor (hl)
 335+ 9538 77           	ld (hl),a
 336+ 9539 24            	inc h
 337+ 953A 7C               ld a,h
 338+ 953B E6 07            and 7
 339+ 953D 20 0A            jr nz,2F
 340+ 953F 7D               ld a,l
 341+ 9540 C6 20            add a,$20
 342+ 9542 6F               ld l,a
 343+ 9543 38 04            jr c,2F
 344+ 9545 7C               ld a,h
 345+ 9546 D6 08            sub 8
 346+ 9548 67               ld h,a
 347+ 9549 7C           2 ld a,h
 348+ 954A FE 58            cp $58
 349+ 954C 28 1C            jr z,4F
 350+ 954E D1               pop de
 351+ 954F 7A           	ld a,d
 352+ 9550 AE           	xor (hl)
 353+ 9551 77           	ld (hl),a
 354+ 9552 24           	inc h
 355+ 9553 7C               ld a,h
 356+ 9554 E6 07            and 7
 357+ 9556 20 0A            jr nz,3F
 358+ 9558 7D               ld a,l
 359+ 9559 C6 20            add a,$20
 360+ 955B 6F               ld l,a
 361+ 955C 38 04            jr c,3F
 362+ 955E 7C               ld a,h
 363+ 955F D6 08            sub 8
 364+ 9561 67               ld h,a
 365+ 9562 7C           3 ld a,h
 366+ 9563 FE 58            cp $58
 367+ 9565 28 03            jr z,4F
 368+ 9567 D1               pop de
 369+ 9568 10 CB            djnz 1B
 370+ 956A ED 7B E1 89  4 ld sp,(Stack)
 371+ 956E C9           	ret
 372+ 956F
 373+ 956F              ; ---------------------------------------------------
 374+ 956F              ;
 375+ 956F              ;   27/02/23
 376+ 956F              ;
 377+ 956F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 378+ 956F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 379+ 956F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 380+ 956F
 381+ 956F ED 73 E1 89  Pinta_Disparo ld (Stack),sp
 382+ 9573 FD F9            ld sp,iy
 383+ 9575 06 03            ld b,3
 384+ 9577 D1           1 pop de
 385+ 9578 7B               ld a,e
 386+ 9579 AE               xor (hl)
 387+ 957A 77               ld (hl),a
 388+ 957B 23               inc hl
 389+ 957C 7A               ld a,d
 390+ 957D AE               xor (hl)
 391+ 957E 77               ld (hl),a
 392+ 957F 2B               dec hl
 393+ 9580
 394+ 9580 24               inc h
 395+ 9581 7C               ld a,h
 396+ 9582 E6 07            and 7
 397+ 9584 20 0A            jr nz,2F
 398+ 9586 7D               ld a,l
 399+ 9587 C6 20            add a,$20
 400+ 9589 6F               ld l,a
 401+ 958A 38 04            jr c,2F
 402+ 958C 7C               ld a,h
 403+ 958D D6 08            sub 8
 404+ 958F 67               ld h,a
 405+ 9590 7C           2 ld a,h
 406+ 9591 FE 58            cp $58
 407+ 9593 28 02            jr z,3F
 408+ 9595
 409+ 9595 10 E0            djnz 1B
 410+ 9597 ED 7B E1 89  3 ld sp,(Stack)
 411+ 959B C9               ret
 412+ 959C
# file closed: Rutinas_de_impresion_sprites.asm
1861  959C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 959C
   2+ 959C              ; ******************************************************************************************************************************************************************************************
   3+ 959C              ;
   4+ 959C              ;   20/05/23
   5+ 959C              ;
   6+ 959C              ;	Recompone_posicion_inicio
   7+ 959C              ;
   8+ 959C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 959C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 959C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 959C              ;	_ a una u otra rutina.
  12+ 959C
  13+ 959C              Recompone_posicion_inicio
  14+ 959C
  15+ 959C 2A 9D 89     	ld hl,(Posicion_inicio)
  16+ 959F 7D           	ld a,l
  17+ 95A0 E6 1F        	and $1f
  18+ 95A2 28 16        	jr z,1F
  19+ 95A4
  20+ 95A4 FE 1F        	cp $1f
  21+ 95A6 28 0D        	jr z,3F
  22+ 95A8
  23+ 95A8 21 B2 89     	ld hl,Ctrl_2
  24+ 95AB CB C6        	set 0,(hl)
  25+ 95AD 2A 8F 89     	ld hl,(Puntero_objeto)
  26+ 95B0 22 D1 89     	ld (Repone_puntero_objeto),hl
  27+ 95B3 18 08        	jr 2F
  28+ 95B5
  29+ 95B5 CD 63 97     3 call Mov_left
  30+ 95B8 18 03        	jr 2F
  31+ 95BA
  32+ 95BA CD 40 96     1 call Mov_right
  33+ 95BD 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 95C0 22 8F 89     	ld (Puntero_objeto),hl
  35+ 95C3 C9           	ret
  36+ 95C4
  37+ 95C4              ; ******************************************************************************************************************************************************************************************
  38+ 95C4              ;
  39+ 95C4              ;   27/05/23
  40+ 95C4              ;
  41+ 95C4              ;	Mov_down
  42+ 95C4              ;
  43+ 95C4              ; 	Mueve el Sprite X px hacia abajo.
  44+ 95C4              ;
  45+ 95C4              ;
  46+ 95C4              Mov_down
  47+ 95C4
  48+ 95C4 CD 2E 96     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 95C7              ;																	; _ repone (Puntero_objeto).
  50+ 95C7 21 AD 89     	ld hl,Ctrl_0
  51+ 95CA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 95CC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 95CC              ; 																	; _ en el caso de que no lo haya.
  54+ 95CC 3A B7 89     	ld a,(Vel_down)
  55+ 95CF 47           	ld b,a
  56+ 95D0 2A 8D 89         ld hl,(Posicion_actual)
  57+ 95D3 CD 73 9F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 95D6 E6 02        	and 2
  59+ 95D8 28 17        	jr z,1F
  60+ 95DA
  61+ 95DA              ; Nos encontramos en el último tercio de pantalla.
  62+ 95DA              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 95DA
  64+ 95DA 7C           	ld a,h
  65+ 95DB FE 57        	cp $57
  66+ 95DD 20 12        	jr nz,1F
  67+ 95DF
  68+ 95DF 7D           	ld a,l
  69+ 95E0 C6 20        	add $20
  70+ 95E2 30 0D        	jr nc,1F
  71+ 95E4
  72+ 95E4              ; ------------------------------
  73+ 95E4              ;
  74+ 95E4              ;	12/01/24
  75+ 95E4
  76+ 95E4              ;	call Reaparece_arriba
  77+ 95E4 CD F0 98     	call Reinicio
  78+ 95E7
  79+ 95E7              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 95E7
  81+ 95E7 3A EF 89     	ld a,(Ctrl_3)
  82+ 95EA CB CF        	set 1,a
  83+ 95EC 32 EF 89     	ld (Ctrl_3),a
  84+ 95EF
  85+ 95EF 18 08        	jr 3F
  86+ 95F1              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 95F1              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 95F1              ; ------------------------------
  89+ 95F1
  90+ 95F1 CD 9D 92     1 call NextScan
  91+ 95F4 22 8D 89     	ld (Posicion_actual),hl
  92+ 95F7 10 DA            djnz 2B
  93+ 95F9 CD 91 9F     3 call Genera_coordenadas
  94+ 95FC C9           	ret
  95+ 95FD
  96+ 95FD              ; ******************************************************************************************************************************************************************************************
  97+ 95FD              ;
  98+ 95FD              ;   27/05/23
  99+ 95FD              ;
 100+ 95FD              ;	Mov_up
 101+ 95FD              ;
 102+ 95FD              ; 	Mueve el Sprite hacia arriba.
 103+ 95FD              ;
 104+ 95FD              ;
 105+ 95FD              Mov_up
 106+ 95FD
 107+ 95FD CD 2E 96     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9600              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9600 21 AD 89     	ld hl,Ctrl_0
 110+ 9603 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9605              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9605              ; 																		; _ en el caso de que no lo haya.
 113+ 9605 3A B6 89     	ld a,(Vel_up)
 114+ 9608 47           	ld b,a
 115+ 9609 2A 8D 89     	ld hl,(Posicion_actual)
 116+ 960C CD 73 9F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 960F A7           	and a
 118+ 9610 20 10        	jr nz,1F
 119+ 9612
 120+ 9612              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9612              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9612
 123+ 9612 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9613 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9615 20 0B            jr nz,1F
 126+ 9617 7D               ld a,l
 127+ 9618 D6 20            sub $20
 128+ 961A 30 06            jr nc,1F
 129+ 961C 25               dec h
 130+ 961D
 131+ 961D              ; -----------------------------
 132+ 961D CD D1 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9620              ;	call Reinicio
 134+ 9620              ; -----------------------------
 135+ 9620
 136+ 9620 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9622 CD AC 92     1 call PreviousScan
 138+ 9625 22 8D 89     	ld (Posicion_actual),hl
 139+ 9628 10 E2            djnz 3B
 140+ 962A CD 91 9F     2 call Genera_coordenadas
 141+ 962D C9           	ret
 142+ 962E
 143+ 962E              ; -----------------------------
 144+ 962E              ;
 145+ 962E              ;	27/5/23
 146+ 962E              ;
 147+ 962E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 962E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 962E              ;
 150+ 962E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 962E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 962E              ;
 153+ 962E              ;	Modifica: A y (Puntero_objeto).
 154+ 962E
 155+ 962E 3A B2 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9631 CB 47        	bit 0,a
 157+ 9633 C8           	ret z
 158+ 9634 CB 87        	res 0,a
 159+ 9636 32 B2 89     	ld (Ctrl_2),a
 160+ 9639 2A D1 89     	ld hl,(Repone_puntero_objeto)
 161+ 963C 22 8F 89     	ld (Puntero_objeto),hl
 162+ 963F C9           	ret
 163+ 9640
 164+ 9640              ; ******************************************************************************************************************************************************************************************
 165+ 9640              ;
 166+ 9640              ;	19/10/22
 167+ 9640              ;
 168+ 9640              ;	Mov_right.
 169+ 9640              ;
 170+ 9640              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9640              ;
 172+ 9640
 173+ 9640 3A AD 89     Mov_right ld a,(Ctrl_0)
 174+ 9643 CB 77        	bit 6,a
 175+ 9645 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9647
 177+ 9647 CD 7F 98     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 964A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 964B
 180+ 964B 21 AD 89     	ld hl,Ctrl_0
 181+ 964E CB E6        	set 4,(hl)
 182+ 9650 18 52        	jr 8F
 183+ 9652
 184+ 9652 21 AD 89     10 ld hl,Ctrl_0
 185+ 9655 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9657              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9657              ; 																	; _ en el caso de que no lo haya.
 188+ 9657 3A 91 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 965A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 965C 20 46        	jr nz,8F
 191+ 965E
 192+ 965E 3A 93 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9661 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9662 28 40        	jr z,8F
 195+ 9664
 196+ 9664              ; ---------- ---------- ----------
 197+ 9664              ;
 198+ 9664              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9664
 200+ 9664 3A B5 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9667 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9669 28 11        	jr z,1F
 203+ 966B 38 06        	jr c,6F
 204+ 966D FE 04        	cp 4
 205+ 966F 28 14        	jr z,7F
 206+ 9671 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9673
 208+ 9673              ; ---------- ---------- ----------
 209+ 9673              ;
 210+ 9673              ; Perfiles de velocidad
 211+ 9673              ;
 212+ 9673
 213+ 9673 3A 93 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9676 FE FE        	cp $fe
 215+ 9678 20 2A        	jr nz,8F
 216+ 967A 18 10        	jr 3F
 217+ 967C 3A 93 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 967F FE FD        	cp $fd
 219+ 9681 20 21        	jr nz,8F
 220+ 9683 18 07        	jr 3F
 221+ 9685 3A 93 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9688 FE FB        	cp $fb
 223+ 968A 20 18        	jr nz,8F
 224+ 968C
 225+ 968C              ; ---------- ---------- ----------
 226+ 968C
 227+ 968C              3
 228+ 968C CD BF 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 968F              ;	call Reinicio
 230+ 968F
 231+ 968F              ; ---------- ---------- ----------
 232+ 968F              ;
 233+ 968F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 968F
 235+ 968F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9691 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9692 CD AB 96     	call DESPLZ_DER
 238+ 9695 C1           	pop bc
 239+ 9696 10 F9        	djnz 5B
 240+ 9698 2A 8D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 969B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 969C 22 8D 89     	ld (Posicion_actual),hl
 243+ 969F CD 91 9F     	call Genera_coordenadas
 244+ 96A2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 96A4
 246+ 96A4              ; ---------- ---------- ----------
 247+ 96A4
 248+ 96A4 2A 8D 89     8 ld hl,(Posicion_actual)
 249+ 96A7 CD AB 96     	call DESPLZ_DER
 250+ 96AA C9           2 ret
 251+ 96AB
 252+ 96AB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 96AB              ;
 254+ 96AB              ;	22/9/22
 255+ 96AB              ;
 256+ 96AB
 257+ 96AB CD BA 96     DESPLZ_DER call Desplaza_derecha
 258+ 96AE CD 06 97         call modifica_parametros_1er_DESPLZ_2
 259+ 96B1 CD 2F 97         call Ciclo_completo
 260+ 96B4 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 96B7 CB FE        	set 7,(hl)
 262+ 96B9 C9           	ret
 263+ 96BA
 264+ 96BA              ; ******************************************************************************************************************************************************************************************
 265+ 96BA              ;	15/02/23
 266+ 96BA              ;
 267+ 96BA
 268+ 96BA 3A B5 89     Desplaza_derecha ld a,(Vel_right)
 269+ 96BD 47           	ld b,a
 270+ 96BE 2A 99 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 96C1 23           1 inc hl
 272+ 96C2 23           	inc hl
 273+ 96C3 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 96C5 22 99 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 96C8 CD 68 8C     	call Extrae_address
 276+ 96CB 22 8F 89     	ld (Puntero_objeto),hl
 277+ 96CE
 278+ 96CE              ; Modifica (Puntero_DESPLZ_izq).
 279+ 96CE
 280+ 96CE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 96CE              ; Cuántos movimientos hemos hecho ??
 282+ 96CE              ; DE contiene (Puntero_DESPLZ_der).
 283+ 96CE
 284+ 96CE 2A 95 89     7 ld hl,(Indice_Sprite_der)
 285+ 96D1 EB           	ex de,hl
 286+ 96D2 A7           	and a
 287+ 96D3 ED 52        	sbc hl,de
 288+ 96D5 CB 3D        	srl l
 289+ 96D7 3E 08        6 ld a,8
 290+ 96D9 95           	sub l
 291+ 96DA 30 1E        	jr nc,3F
 292+ 96DC
 293+ 96DC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 96DC              ; B="0".
 295+ 96DC
 296+ 96DC 04           4 inc b
 297+ 96DD 3C           	inc a
 298+ 96DE 20 FC        	jr nz,4B
 299+ 96E0 78           	ld a,b
 300+ 96E1 08           	ex af,af
 301+ 96E2 2A 95 89     	ld hl,(Indice_Sprite_der)
 302+ 96E5 23           5 inc hl
 303+ 96E6 23           	inc hl
 304+ 96E7 10 FC        	djnz 5B
 305+ 96E9 22 99 89     	ld (Puntero_DESPLZ_der),hl
 306+ 96EC CD 68 8C     	call Extrae_address
 307+ 96EF 22 8F 89     	ld (Puntero_objeto),hl
 308+ 96F2
 309+ 96F2              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 96F2              ; _(Posicion_actual).
 311+ 96F2
 312+ 96F2 21 8D 89     	ld hl,Posicion_actual
 313+ 96F5 34           	inc (hl)
 314+ 96F6 08               ex af,af
 315+ 96F7 6F           	ld l,a
 316+ 96F8 18 DD        	jr 6B
 317+ 96FA
 318+ 96FA              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 96FA
 320+ 96FA 47           3 ld b,a
 321+ 96FB 2A 97 89     	ld hl,(Indice_Sprite_izq)
 322+ 96FE 23           2 inc hl
 323+ 96FF 23           	inc hl
 324+ 9700 10 FC        	djnz 2B
 325+ 9702 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9705 C9           8 ret
 327+ 9706
 328+ 9706              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9706              ;
 330+ 9706              ;	24/7/22
 331+ 9706              ;
 332+ 9706              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9706              ;
 334+ 9706              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9706              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9706              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9706
 338+ 9706 3A 93 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9709 A7           	and a
 340+ 970A 20 1F        	jr nz,1F
 341+ 970C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 970E 32 93 89         ld (CTRL_DESPLZ),a
 343+ 9711
 344+ 9711 21 8C 89     	ld hl,Columns
 345+ 9714 34           	inc (hl)
 346+ 9715 3A 9F 89     	ld a,(Cuad_objeto)
 347+ 9718 E6 01        	and 1
 348+ 971A 28 0F        	jr z,1F
 349+ 971C 2A 8D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 971F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9720 22 8D 89     	ld (Posicion_actual),hl
 352+ 9723 CD 91 9F     	call Genera_coordenadas
 353+ 9726 CD 8B 98     	call Inc_CTRL_DESPLZ
 354+ 9729 18 03        	jr 2F
 355+ 972B CD 8B 98     1 call Inc_CTRL_DESPLZ
 356+ 972E C9           2 ret
 357+ 972F
 358+ 972F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 972F              ;
 360+ 972F              ;	24/7/22
 361+ 972F              ;
 362+ 972F              ;	Ciclo_completo.
 363+ 972F              ;
 364+ 972F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 972F              ;
 366+ 972F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 972F              ; 	Decrementamos (Columns).
 368+ 972F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 972F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 972F
 371+ 972F
 372+ 972F 3A 93 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9732 FE FF        	cp $ff
 374+ 9734 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9736 E6 F0        	and $f0
 376+ 9738 20 28        	jr nz,3F
 377+ 973A
 378+ 973A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 973A
 380+ 973A 3A 93 89     	ld a,(CTRL_DESPLZ)
 381+ 973D 47           	ld b,a
 382+ 973E 3E F8        	ld a,$f8
 383+ 9740 80           	add b
 384+ 9741 32 93 89     	ld (CTRL_DESPLZ),a
 385+ 9744 18 1C        	jr 3F
 386+ 9746 21 8C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9749 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 974A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 974B 32 93 89     	ld (CTRL_DESPLZ),a
 390+ 974E 3A 9F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9751 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9753 20 0A        	jr nz,2F
 393+ 9755 2A 8D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9758 23           	inc hl
 395+ 9759 22 8D 89     	ld (Posicion_actual),hl
 396+ 975C CD 91 9F     	call Genera_coordenadas
 397+ 975F
 398+ 975F              ; Inicia el puntero de Sprite.
 399+ 975F
 400+ 975F CD 7D 8C     2 call Inicia_puntero_objeto_der
 401+ 9762 C9           3 ret
 402+ 9763
 403+ 9763              ; ******************************************************************************************************************************************************************************************
 404+ 9763              ;
 405+ 9763              ;	15/02/23
 406+ 9763              ;
 407+ 9763              ;	Mov_left.
 408+ 9763              ;
 409+ 9763              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9763              ;
 411+ 9763              Mov_left
 412+ 9763
 413+ 9763 21 AD 89     	ld hl,Ctrl_0
 414+ 9766 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9768              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9768              ; 																	; _ en el caso de que no lo haya.
 417+ 9768 3A AD 89     	ld a,(Ctrl_0)
 418+ 976B CB 77        	bit 6,a
 419+ 976D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 976F
 421+ 976F CD 85 98     	call Stop_Amadeus_left
 422+ 9772 C8           	ret z
 423+ 9773 20 4A        	jr nz,8F
 424+ 9775
 425+ 9775 3A 91 89     11 ld a,(Coordenada_X)
 426+ 9778 A7           	and a
 427+ 9779 20 44        	jr nz,8F
 428+ 977B
 429+ 977B 3A 93 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 977E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 977F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9781
 433+ 9781              ; ---------- ---------- ----------
 434+ 9781
 435+ 9781 3A B4 89     	ld a,(Vel_left)
 436+ 9784 FE 02        	cp 2
 437+ 9786 28 0F        	jr z,1F
 438+ 9788 38 04        	jr c,6F
 439+ 978A FE 04        	cp 4
 440+ 978C 28 12        	jr z,7F
 441+ 978E
 442+ 978E              ; ---------- ---------- ----------
 443+ 978E
 444+ 978E 3A 93 89     6 ld a,(CTRL_DESPLZ)
 445+ 9791 FE F8        	cp $f8
 446+ 9793 20 2A        	jr nz,8F
 447+ 9795 18 10        	jr 4F
 448+ 9797 3A 93 89     1 ld a,(CTRL_DESPLZ)
 449+ 979A FE F9        	cp $f9
 450+ 979C 20 21        	jr nz,8F
 451+ 979E 18 07        	jr 4F
 452+ 97A0 3A 93 89     7 ld a,(CTRL_DESPLZ)
 453+ 97A3 FE FB        	cp $fb
 454+ 97A5 20 18        	jr nz,8F
 455+ 97A7
 456+ 97A7              ; ---------- ---------- ----------
 457+ 97A7
 458+ 97A7              4
 459+ 97A7 CD AD 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 97AA              ;	call Reinicio
 461+ 97AA
 462+ 97AA              ; ---------- ---------- ----------
 463+ 97AA
 464+ 97AA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 97AC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 97AD
 467+ 97AD              ;	ld hl,(Indice_Sprite_izq)
 468+ 97AD              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 97AD
 470+ 97AD CD C6 97     	call DESPLZ_IZQ
 471+ 97B0 C1           	pop bc
 472+ 97B1 10 F9        	djnz 5B
 473+ 97B3 2A 8D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 97B6 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 97B7 22 8D 89     	ld (Posicion_actual),hl
 476+ 97BA CD 91 9F     	call Genera_coordenadas
 477+ 97BD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 97BF
 479+ 97BF              ; ---------- ---------- ----------
 480+ 97BF
 481+ 97BF              ; Movemos, no hay recolocación.
 482+ 97BF
 483+ 97BF 2A 8D 89     8 ld hl,(Posicion_actual)
 484+ 97C2 CD C6 97     	call DESPLZ_IZQ
 485+ 97C5 C9           2 ret
 486+ 97C6
 487+ 97C6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 97C6              ;
 489+ 97C6              ;	22/9/22
 490+ 97C6
 491+ 97C6              DESPLZ_IZQ
 492+ 97C6
 493+ 97C6 CD D5 97     	call Desplaza_izquierda
 494+ 97C9 CD 21 98         call modifica_parametros_1er_DESPLZ
 495+ 97CC CD 49 98     	call Ciclo_completo_2
 496+ 97CF 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 97D2 CB BE        	res 7,(hl)
 498+ 97D4 C9           	ret
 499+ 97D5
 500+ 97D5              Desplaza_izquierda
 501+ 97D5
 502+ 97D5 3A B4 89     	ld a,(Vel_left)
 503+ 97D8 47           	ld b,a
 504+ 97D9 2A 9B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 97DC 23           1 inc hl
 506+ 97DD 23           	inc hl
 507+ 97DE 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 97E0 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 97E3 CD 68 8C     	call Extrae_address
 510+ 97E6 22 8F 89     	ld (Puntero_objeto),hl
 511+ 97E9
 512+ 97E9              ; Modifica (Puntero_DESPLZ_der).
 513+ 97E9
 514+ 97E9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 97E9              ; Cuántos movimientos hemos hecho ??
 516+ 97E9              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 97E9
 518+ 97E9 2A 97 89     7 ld hl,(Indice_Sprite_izq)
 519+ 97EC EB           	ex de,hl
 520+ 97ED A7           	and a
 521+ 97EE ED 52        	sbc hl,de
 522+ 97F0 CB 3D        	srl l
 523+ 97F2 3E 08        6 ld a,8
 524+ 97F4 95           	sub l
 525+ 97F5 30 1E        	jr nc,3F
 526+ 97F7
 527+ 97F7              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 97F7              ; B="0".
 529+ 97F7
 530+ 97F7 04           4 inc b
 531+ 97F8 3C           	inc a
 532+ 97F9 20 FC        	jr nz,4B
 533+ 97FB 78           	ld a,b
 534+ 97FC 08           	ex af,af
 535+ 97FD 2A 97 89     	ld hl,(Indice_Sprite_izq)
 536+ 9800 23           5 inc hl
 537+ 9801 23           	inc hl
 538+ 9802 10 FC        	djnz 5B
 539+ 9804 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9807 CD 68 8C     	call Extrae_address
 541+ 980A 22 8F 89     	ld (Puntero_objeto),hl
 542+ 980D
 543+ 980D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 980D              ; _(Posicion_actual).
 545+ 980D
 546+ 980D 21 8D 89     	ld hl,Posicion_actual
 547+ 9810 35           	dec (hl)
 548+ 9811 08           	ex af,af
 549+ 9812 6F           	ld l,a
 550+ 9813 18 DD        	jr 6B
 551+ 9815
 552+ 9815              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9815
 554+ 9815 47           3 ld b,a
 555+ 9816 2A 95 89     	ld hl,(Indice_Sprite_der)
 556+ 9819 23           2 inc hl
 557+ 981A 23           	inc hl
 558+ 981B 10 FC        	djnz 2B
 559+ 981D 22 99 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9820 C9           8 ret
 561+ 9821
 562+ 9821              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9821              ;
 564+ 9821              ;	modifica_parametros_1er_DESPLZ
 565+ 9821              ;
 566+ 9821              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9821              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9821              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9821
 570+ 9821 3A 93 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9824 A7           	and a
 572+ 9825 20 1E        	jr nz,1F
 573+ 9827 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9828 32 93 89         ld (CTRL_DESPLZ),a
 575+ 982B 21 8C 89     	ld hl,Columns
 576+ 982E 34           	inc (hl)
 577+ 982F 3A 9F 89     	ld a,(Cuad_objeto)
 578+ 9832 E6 01        	and 1
 579+ 9834 20 0F        	jr nz,1F
 580+ 9836 2A 8D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9839 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 983A 22 8D 89     	ld (Posicion_actual),hl
 583+ 983D CD 91 9F     	call Genera_coordenadas
 584+ 9840 CD 9C 98     	call Dec_CTRL_DESPLZ
 585+ 9843 18 03        	jr 2F
 586+ 9845 CD 9C 98     1 call Dec_CTRL_DESPLZ
 587+ 9848 C9           2 ret
 588+ 9849
 589+ 9849              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9849
 591+ 9849 3A 93 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 984C FE F7        	cp $f7
 593+ 984E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9850 30 2C        	jr nc,3F
 595+ 9852
 596+ 9852              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9852
 598+ 9852 06 00        	ld b,0
 599+ 9854 04           4 inc b
 600+ 9855 3C           	inc a
 601+ 9856 FE F7        	cp $f7
 602+ 9858 20 FA        	jr nz,4B
 603+ 985A 3E FF        	ld a,$ff
 604+ 985C 90           	sub b
 605+ 985D 32 93 89     	ld (CTRL_DESPLZ),a
 606+ 9860 18 1C        	jr 3F
 607+ 9862
 608+ 9862              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9862
 610+ 9862 21 8C 89     1 ld hl,Columns
 611+ 9865 35           	dec (hl)
 612+ 9866 AF           	xor a
 613+ 9867 32 93 89     	ld (CTRL_DESPLZ),a
 614+ 986A 3A 9F 89     	ld a,(Cuad_objeto)
 615+ 986D E6 01        	and 1
 616+ 986F 28 0A        	jr z,2F
 617+ 9871 2A 8D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9874 2B           	dec hl
 619+ 9875 22 8D 89     	ld (Posicion_actual),hl
 620+ 9878 CD 91 9F     	call Genera_coordenadas
 621+ 987B
 622+ 987B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 987B
 624+ 987B CD 90 8C     2 call Inicia_puntero_objeto_izq
 625+ 987E C9           3 ret
 626+ 987F
 627+ 987F              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 987F              ;
 629+ 987F              ;	19/10/22
 630+ 987F              ;
 631+ 987F              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 987F              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 987F
 634+ 987F 3A 91 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9882 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9884 C9           	ret
 637+ 9885
 638+ 9885              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9885              ;
 640+ 9885              ;	19/10/22
 641+ 9885              ;
 642+ 9885              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9885              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9885
 645+ 9885 3A 91 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9888 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 988A C9           	ret
 648+ 988B
 649+ 988B              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 988B              ;
 651+ 988B              ;	24/7/22
 652+ 988B              ;
 653+ 988B              ;	Inc_CTRL_DESPLZ
 654+ 988B              ;
 655+ 988B              ;
 656+ 988B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 988B
 658+ 988B 21 93 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 988E 3A B5 89     	ld a,(Vel_right)
 660+ 9891 A7           	and a
 661+ 9892 28 06        	jr z,1F
 662+ 9894 47           	ld b,a
 663+ 9895 34           3 inc (hl)
 664+ 9896 10 FD        	djnz 3B
 665+ 9898 18 01        	jr 2F
 666+ 989A 34           1 inc (hl)
 667+ 989B C9           2 ret
 668+ 989C
 669+ 989C              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 989C              ;
 671+ 989C              ;	5/2/23
 672+ 989C              ;
 673+ 989C              ;	Dec_CTRL_DESPLZ
 674+ 989C              ;
 675+ 989C              ;
 676+ 989C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 989C
 678+ 989C 21 93 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 989F 3A B4 89     	ld a,(Vel_left)
 680+ 98A2 A7           	and a
 681+ 98A3 28 06        	jr z,1F
 682+ 98A5 47           	ld b,a
 683+ 98A6 35           3 dec (hl)
 684+ 98A7 10 FD        	djnz 3B
 685+ 98A9 18 01        	jr 2F
 686+ 98AB 35           1 dec (hl)
 687+ 98AC C9           2 ret
 688+ 98AD
 689+ 98AD              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 98AD
 691+ 98AD 2A 8D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 98B0 01 1F 00     	ld bc,31
 693+ 98B3 A7           	and a
 694+ 98B4 ED 4A        	adc hl,bc
 695+ 98B6 22 8D 89     	ld (Posicion_actual),hl
 696+ 98B9 21 AD 89     	ld hl,Ctrl_0														; $xxx1
 697+ 98BC CB C6        	set 0,(hl)
 698+ 98BE C9           	ret
 699+ 98BF
 700+ 98BF              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 98BF
 702+ 98BF 2A 8D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 98C2 01 1F 00     	ld bc,31
 704+ 98C5 A7           	and a
 705+ 98C6 ED 42        	sbc hl,bc
 706+ 98C8 22 8D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 98CB 21 AD 89     	ld hl,Ctrl_0
 708+ 98CE CB CE        	set 1,(hl)
 709+ 98D0 C9           	ret
 710+ 98D1
 711+ 98D1              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 98D1
 713+ 98D1 24           Reaparece_abajo inc h
 714+ 98D2 01 E0 17     	ld bc,$17e0
 715+ 98D5 A7           	and a
 716+ 98D6 ED 4A        	adc hl,bc
 717+ 98D8 22 8D 89     	ld (Posicion_actual),hl
 718+ 98DB 21 AD 89     	ld hl,Ctrl_0
 719+ 98DE CB D6        	set 2,(hl)
 720+ 98E0 C9           	ret
 721+ 98E1
 722+ 98E1              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 98E1
 724+ 98E1 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 98E4 A7           	and a
 726+ 98E5 ED 42        	sbc hl,bc
 727+ 98E7 22 8D 89     	ld (Posicion_actual),hl
 728+ 98EA 21 AD 89     	ld hl,Ctrl_0
 729+ 98ED CB DE        	set 3,(hl)
 730+ 98EF C9           	ret
 731+ 98F0
 732+ 98F0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 98F0              ;
 734+ 98F0              ;	15/07/23
 735+ 98F0
 736+ 98F0              Reinicio
 737+ 98F0
 738+ 98F0              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 98F0
 740+ 98F0 AF           	xor a
 741+ 98F1 21 C8 89     	ld hl,Puntero_indice_mov_bucle
 742+ 98F4 CD 12 99     	call Limpia_contenido_hl
 743+ 98F7
 744+ 98F7 21 8D 89     	ld hl,Posicion_actual
 745+ 98FA CD 12 99     	call Limpia_contenido_hl
 746+ 98FD
 747+ 98FD CD CF 8D     	call Inicializa_Puntero_indice_mov
 748+ 9900 CD DE 99     	call Inicia_Puntero_mov
 749+ 9903
 750+ 9903 21 CA 89     	ld hl,Incrementa_puntero
 751+ 9906 06 05        	ld b,5
 752+ 9908 77           1 ld (hl),a
 753+ 9909 23           	inc hl
 754+ 990A 10 FC        	djnz 1B
 755+ 990C
 756+ 990C 21 B2 89     	ld hl,Ctrl_2
 757+ 990F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9911
 759+ 9911 C9           	ret
 760+ 9912
 761+ 9912 77           Limpia_contenido_hl	ld (hl),a
 762+ 9913 23           	inc hl
 763+ 9914 77           	ld (hl),a
 764+ 9915 C9           	ret
 765+ 9916
 766+ 9916
# file closed: Direcciones.asm
1862  9916              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9916              ; ----- ----- ----- ----- -----
   2+ 9916              ;
   3+ 9916              ;   28/12/23
   4+ 9916
   5+ 9916              Movimiento
   6+ 9916
   7+ 9916              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9916
   9+ 9916 3A B2 89         ld a,(Ctrl_2)
  10+ 9919 CB 57            bit 2,a
  11+ 991B 20 1B            jr nz, Desplazamiento_iniciado
  12+ 991D
  13+ 991D 2A C6 89         ld hl,(Puntero_mov)
  14+ 9920 7E               ld a,(hl)
  15+ 9921
  16+ 9921              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9921
  18+ 9921              Inicia_desplazamiento.
  19+ 9921
  20+ 9921              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9921
  22+ 9921 CD 14 9A         call Ajusta_velocidad_desplazamiento
  23+ 9924
  24+ 9924              ; Iniciamos (Repetimos_mov).
  25+ 9924
  26+ 9924 7E               ld a,(hl)
  27+ 9925 E6 0F            and $0f
  28+ 9927 32 CC 89         ld (Repetimos_desplazamiento),a
  29+ 992A 32 CD 89         ld (Repetimos_desplazamiento_backup),a
  30+ 992D
  31+ 992D              ; Iniciamos (Cola_de_desplazamiento).
  32+ 992D
  33+ 992D 23               inc hl
  34+ 992E 7E               ld a,(hl)
  35+ 992F 32 CF 89         ld (Cola_de_desplazamiento),a
  36+ 9932 2B               dec hl
  37+ 9933
  38+ 9933 21 B2 89         ld hl,Ctrl_2
  39+ 9936 CB D6            set 2,(hl)
  40+ 9938
  41+ 9938              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9938              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9938
  44+ 9938              Desplazamiento_iniciado
  45+ 9938
  46+ 9938 CD E8 99         call Aplica_desplazamiento
  47+ 993B
  48+ 993B              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 993B
  50+ 993B 3A EF 89         ld a,(Ctrl_3)
  51+ 993E CB 4F            bit 1,a
  52+ 9940 C0               ret nz
  53+ 9941
  54+ 9941 21 CC 89     3 ld hl,Repetimos_desplazamiento
  55+ 9944 35               dec (hl)
  56+ 9945 C0               ret nz
  57+ 9946
  58+ 9946              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9946              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9946              ; Analiza (Cola_de_desplazamiento).
  61+ 9946
  62+ 9946 3A CF 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 9949 A7               and a
  64+ 994A CC 3D 9A         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 994D 28 30            jr z,Reinicia_el_movimiento
  66+ 994F
  67+ 994F FE FF            cp $ff
  68+ 9951 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9953
  70+ 9953 FE FE            cp $fe
  71+ 9955 CC C2 99         call z,Fijamos_bucle
  72+ 9958 28 25            jr z,Reinicia_el_movimiento
  73+ 995A
  74+ 995A FE FD            cp $fd
  75+ 995C 20 11            jr nz,1F
  76+ 995E
  77+ 995E              ; ---
  78+ 995E              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 995E
  80+ 995E 3A B2 89         ld a,(Ctrl_2)
  81+ 9961 CB 5F            bit 3,a
  82+ 9963 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9965
  84+ 9965              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9965
  86+ 9965 21 B2 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9968 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 996A
  89+ 996A CD D3 99         call Inicia_Repetimos_movimiento
  90+ 996D 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 996F              ; ---
  92+ 996F
  93+ 996F FE 01        1 cp 1
  94+ 9971 CA AC 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9974
  96+ 9974 3D               dec a
  97+ 9975 32 CF 89         ld (Cola_de_desplazamiento),a
  98+ 9978
  99+ 9978 3A CD 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 997B 32 CC 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 997E              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 997E C9               ret
 103+ 997F
 104+ 997F              Reinicia_el_movimiento
 105+ 997F
 106+ 997F 3A B2 89         ld a,(Ctrl_2)
 107+ 9982 CB 5F            bit 3,a
 108+ 9984 28 1B            jr z,2F
 109+ 9986
 110+ 9986              ; (Cola_de_desplazamiento)="254".
 111+ 9986
 112+ 9986 21 CE 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9989 35               dec (hl)
 114+ 998A 20 15            jr nz,2F
 115+ 998C
 116+ 998C              ; Fin de las repeticiones del último movimiento.
 117+ 998C
 118+ 998C 21 B2 89         ld hl,Ctrl_2
 119+ 998F CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9991
 121+ 9991 2A C6 89         ld hl,(Puntero_mov)
 122+ 9994 23               inc hl
 123+ 9995 23               inc hl
 124+ 9996 23               inc hl
 125+ 9997 22 C6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 999A              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 999A 7E               ld a,(hl)
 128+ 999B 32 CF 89         ld (Cola_de_desplazamiento),a
 129+ 999E
 130+ 999E C3 46 99         jp Cola
 131+ 99A1
 132+ 99A1 CD DE 99     2 call Inicia_Puntero_mov
 133+ 99A4
 134+ 99A4 21 B2 89         ld hl,Ctrl_2
 135+ 99A7 CB 96            res 2,(hl)
 136+ 99A9
 137+ 99A9 C3 16 99         jp Movimiento
 138+ 99AC
 139+ 99AC              Siguiente_desplazamiento
 140+ 99AC
 141+ 99AC              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 99AC              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 99AC
 144+ 99AC 21 B2 89         ld hl,Ctrl_2
 145+ 99AF CB 96            res 2,(hl)
 146+ 99B1
 147+ 99B1 2A C6 89         ld hl,(Puntero_mov)
 148+ 99B4 23               inc hl
 149+ 99B5 23               inc hl
 150+ 99B6 22 C6 89         ld (Puntero_mov),hl
 151+ 99B9
 152+ 99B9 7E               ld a,(hl)
 153+ 99BA A7               and a
 154+ 99BB CC 3D 9A         call z,Incrementa_Puntero_indice_mov
 155+ 99BE CA 7F 99         jp z,Reinicia_el_movimiento
 156+ 99C1
 157+ 99C1 C9               ret
 158+ 99C2
 159+ 99C2              ; Subrutinas -----------------------------------------
 160+ 99C2              ; ---------- --------- --------- ---------- ----------
 161+ 99C2              ;
 162+ 99C2              ;   24/07/23
 163+ 99C2              ;
 164+ 99C2              ;   Fijamos_bucle
 165+ 99C2              ;
 166+ 99C2              ;
 167+ 99C2
 168+ 99C2              Fijamos_bucle
 169+ 99C2
 170+ 99C2 3A CA 89         ld a,(Incrementa_puntero)
 171+ 99C5 3C               inc a
 172+ 99C6 32 CB 89         ld (Incrementa_puntero_backup),a
 173+ 99C9
 174+ 99C9 CD 3D 9A         call Incrementa_Puntero_indice_mov
 175+ 99CC 2A C4 89         ld hl,(Puntero_indice_mov)
 176+ 99CF 22 C8 89         ld (Puntero_indice_mov_bucle),hl
 177+ 99D2 C9               ret
 178+ 99D3
 179+ 99D3              ; ---------- --------- --------- ---------- ----------
 180+ 99D3              ;
 181+ 99D3              ;   07/7/23
 182+ 99D3              ;
 183+ 99D3              ;   Inicia_Repetimos_movimiento
 184+ 99D3              ;
 185+ 99D3              ;
 186+ 99D3
 187+ 99D3              Inicia_Repetimos_movimiento
 188+ 99D3
 189+ 99D3              ; Iniciamos (Repetimos_movimiento).
 190+ 99D3
 191+ 99D3 DD 2A C6 89      ld ix,(Puntero_mov)
 192+ 99D7 DD 7E 02         ld a,(ix+2)
 193+ 99DA 32 CE 89         ld (Repetimos_movimiento),a
 194+ 99DD
 195+ 99DD C9               ret
 196+ 99DE
 197+ 99DE              ; ---------- --------- --------- ---------- ----------
 198+ 99DE              ;
 199+ 99DE              ;   26/6/23
 200+ 99DE              ;
 201+ 99DE              ;   Inicia_Puntero_mov
 202+ 99DE              ;
 203+ 99DE              ;
 204+ 99DE
 205+ 99DE 2A C4 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 99E1 CD 68 8C         call Extrae_address
 207+ 99E4 22 C6 89         ld (Puntero_mov),hl
 208+ 99E7 C9               ret
 209+ 99E8
 210+ 99E8              ; ---------- --------- --------- ---------- ----------
 211+ 99E8              ;
 212+ 99E8              ;   27/06/23
 213+ 99E8              ;
 214+ 99E8              ;   Aplica_movimiento.
 215+ 99E8
 216+ 99E8              Aplica_desplazamiento
 217+ 99E8
 218+ 99E8              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 99E8
 220+ 99E8 2A C6 89         ld hl, (Puntero_mov)
 221+ 99EB
 222+ 99EB 7E               ld a,(hl)
 223+ 99EC E6 F0            and $f0
 224+ 99EE C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 99EF
 226+ 99EF CB 7E            bit 7,(hl)
 227+ 99F1 28 03            jr z,1F
 228+ 99F3 CD FD 95         call Mov_up
 229+ 99F6 2A C6 89     1 ld hl, (Puntero_mov)
 230+ 99F9 CB 76            bit 6,(hl)
 231+ 99FB 28 03            jr z,2F
 232+ 99FD CD C4 95         call Mov_down
 233+ 9A00
 234+ 9A00              ; Se ha aplicado reinicio ???
 235+ 9A00              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9A00
 237+ 9A00              ;    ld a,(Ctrl_3)
 238+ 9A00              ;    bit 1,a
 239+ 9A00              ;    ret nz
 240+ 9A00
 241+ 9A00 2A C6 89     2 ld hl, (Puntero_mov)
 242+ 9A03 CB 6E            bit 5,(hl)
 243+ 9A05 28 03            jr z,3F
 244+ 9A07 CD 63 97         call Mov_left
 245+ 9A0A 2A C6 89     3 ld hl, (Puntero_mov)
 246+ 9A0D CB 66            bit 4,(hl)
 247+ 9A0F C8               ret z
 248+ 9A10 CD 40 96         call Mov_right
 249+ 9A13 C9               ret
 250+ 9A14
 251+ 9A14              ; ---------- --------- --------- ---------- ----------
 252+ 9A14              ;
 253+ 9A14              ;   26/06/23
 254+ 9A14              ;
 255+ 9A14              ;   Ajusta_velocidad_desplazamiento.
 256+ 9A14
 257+ 9A14              Ajusta_velocidad_desplazamiento
 258+ 9A14
 259+ 9A14              ; 1er byte de la cadena de movimiento.
 260+ 9A14              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9A14
 262+ 9A14 CD 32 9A         call Extrae_nibble_alto
 263+ 9A17
 264+ 9A17 32 B6 89         ld (Vel_up),a
 265+ 9A1A 79               ld a,c
 266+ 9A1B E6 0F            and $0f
 267+ 9A1D 32 B7 89         ld (Vel_down),a
 268+ 9A20
 269+ 9A20              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9A20              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9A20
 272+ 9A20 23               inc hl
 273+ 9A21 CD 32 9A         call Extrae_nibble_alto
 274+ 9A24
 275+ 9A24 32 B4 89         ld (Vel_left),a
 276+ 9A27 79               ld a,c
 277+ 9A28 E6 0F            and $0f
 278+ 9A2A 32 B5 89         ld (Vel_right),a
 279+ 9A2D
 280+ 9A2D              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9A2D
 282+ 9A2D 23               inc hl
 283+ 9A2E 22 C6 89         ld (Puntero_mov),hl
 284+ 9A31 C9               ret
 285+ 9A32
 286+ 9A32 06 04        Extrae_nibble_alto ld b,4
 287+ 9A34 7E               ld a,(hl)
 288+ 9A35 4F               ld c,a
 289+ 9A36 E6 F0            and $f0
 290+ 9A38 CB 3F        1 srl a
 291+ 9A3A 10 FC            djnz 1B
 292+ 9A3C C9               ret
 293+ 9A3D
 294+ 9A3D              ; ---------- --------- --------- ---------- ----------
 295+ 9A3D              ;
 296+ 9A3D              ;   5/7/23
 297+ 9A3D              ;
 298+ 9A3D              ;   Incrementa_Puntero_indice_mov
 299+ 9A3D
 300+ 9A3D              Incrementa_Puntero_indice_mov
 301+ 9A3D
 302+ 9A3D 21 CA 89         ld hl,Incrementa_puntero
 303+ 9A40 34               inc (hl)
 304+ 9A41
 305+ 9A41 2A C4 89         ld hl,(Puntero_indice_mov)
 306+ 9A44 01 02 00         ld bc,2
 307+ 9A47 A7               and a
 308+ 9A48 09               add hl,bc
 309+ 9A49 22 C4 89         ld (Puntero_indice_mov),hl
 310+ 9A4C
 311+ 9A4C 7E               ld a,(hl)
 312+ 9A4D A7               and a
 313+ 9A4E
 314+ 9A4E              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9A4E
 316+ 9A4E              ;    jr z,$
 317+ 9A4E
 318+ 9A4E              ;! Reinicia el Patrón de movimiento.
 319+ 9A4E
 320+ 9A4E CC 53 9A         call z,Inicializa_Puntero_indice_mov_2
 321+ 9A51
 322+ 9A51 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9A52
 324+ 9A52 C9               ret
 325+ 9A53
 326+ 9A53              ; ---------- --------- --------- ---------- ----------
 327+ 9A53              ;
 328+ 9A53              ;   15/01/24
 329+ 9A53              ;
 330+ 9A53              ;   Inicializa_Puntero_indice_mov
 331+ 9A53
 332+ 9A53              Inicializa_Puntero_indice_mov_2
 333+ 9A53
 334+ 9A53              ; Existe etiqueta de bucle principal???
 335+ 9A53
 336+ 9A53 2A C8 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9A56 24               inc h
 338+ 9A57 25               dec h
 339+ 9A58 28 05            jr z,2F
 340+ 9A5A
 341+ 9A5A 22 C4 89         ld (Puntero_indice_mov),hl
 342+ 9A5D 18 14            jr 3F
 343+ 9A5F
 344+ 9A5F              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9A5F
 346+ 9A5F 3A CA 89     2 ld a,(Incrementa_puntero)
 347+ 9A62 47               ld b,a
 348+ 9A63
 349+ 9A63 2A C4 89         ld hl,(Puntero_indice_mov)
 350+ 9A66 2B           1 dec hl
 351+ 9A67 2B               dec hl
 352+ 9A68 10 FC            djnz 1B
 353+ 9A6A 22 C4 89         ld (Puntero_indice_mov),hl
 354+ 9A6D
 355+ 9A6D AF               xor a
 356+ 9A6E 32 CA 89         ld (Incrementa_puntero),a
 357+ 9A71 18 06            jr 4F
 358+ 9A73
 359+ 9A73 3A CB 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9A76 32 CA 89         ld (Incrementa_puntero),a
 361+ 9A79 C9           4 ret
 362+ 9A7A
 363+ 9A7A              ; ----------------------------------------------------------------------
 364+ 9A7A              ;
 365+ 9A7A              ;   30/01/24
 366+ 9A7A              ;
 367+ 9A7A              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9A7A
 369+ 9A7A 3A 8A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9A7D CD 20 8F         call Calcula_salto_en_BC
 371+ 9A80 21 B8 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A83 A7               and a
 373+ 9A84 ED 4A            adc hl,bc
 374+ 9A86 C9               ret
 375+ 9A87
 376+ 9A87              ; ----------------------------------------------------------------------
 377+ 9A87              ;
 378+ 9A87              ;   30/01/24
 379+ 9A87              ;
 380+ 9A87              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A87              ;
 382+ 9A87              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A87
 384+ 9A87 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A88 23               inc hl
 386+ 9A89 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A8A 69               ld l,c
 388+ 9A8B 60               ld h,b
 389+ 9A8C 22 AB 89         ld (Contador_de_mov_masticados),hl
 390+ 9A8F C9               ret
 391+ 9A90
# file closed: Movimiento.asm
1863  9A90              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9A90              ; ******************************************************************************************************************************************************************************************
   2+ 9A90              ;
   3+ 9A90              ;   21/07/23
   4+ 9A90              ;
   5+ 9A90              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9A90              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9A90              ;
   8+ 9A90              ;
   9+ 9A90              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9A90              ;
  11+ 9A90              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9A90              ;               _ hacen las entidades hacia abajo.
  13+ 9A90              ;
  14+ 9A90              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9A90              ;
  16+ 9A90              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9A90              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9A90              ;
  19+ 9A90              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9A90              ;           _ la bala.
  21+ 9A90              ;
  22+ 9A90              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9A90              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9A90              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9A90              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9A90              ;           _ en el momento de generarse la bala)).
  27+ 9A90
  28+ 9A90              Genera_disparo
  29+ 9A90
  30+ 9A90              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9A90              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9A90              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9A90              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9A90              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9A90              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9A90              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9A90
  38+ 9A90              ; Exclusiones:
  39+ 9A90
  40+ 9A90 3A B7 89         ld a,(Vel_down)
  41+ 9A93 47               ld b,a
  42+ 9A94 3A 01 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9A97 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9A98 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9A99 3A AE 89         ld a,(Columnas)
  46+ 9A9C 47               ld b,a
  47+ 9A9D 3A 8C 89         ld a,(Columns)
  48+ 9AA0 B8               cp b
  49+ 9AA1 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9AA2
  51+ 9AA2              ; ----- ----- -----
  52+ 9AA2
  53+ 9AA2 3A AD 89         ld a,(Ctrl_0)
  54+ 9AA5 CB 77            bit 6,a
  55+ 9AA7 20 06            jr nz,14F
  56+ 9AA9
  57+ 9AA9 3A 92 89         ld a,(Coordenada_y)
  58+ 9AAC FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9AAE D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9AAF
  61+ 9AAF 21 31 81     14 ld hl,Indice_disparo
  62+ 9AB2 3A 93 89         ld a,(CTRL_DESPLZ)
  63+ 9AB5 4F               ld c,a
  64+ 9AB6 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9AB8              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9AB8              ;                                            ""        ""       "f9", B="1"
  67+ 9AB8              ;                                            ""        ""       "fb", B="2"
  68+ 9AB8              ;                                            ""        ""       "fb", B="3"
  69+ 9AB8 A7               and a
  70+ 9AB9 28 10            jr z,1F
  71+ 9ABB E6 01            and 1
  72+ 9ABD C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9ABE
  74+ 9ABE 79               ld a,c
  75+ 9ABF 16 F9            ld d,$f9
  76+ 9AC1 23           2 inc hl
  77+ 9AC2 23               inc hl
  78+ 9AC3 04               inc b
  79+ 9AC4 BA               cp d
  80+ 9AC5 28 04            jr z,1F
  81+ 9AC7 14               inc d
  82+ 9AC8 14               inc d
  83+ 9AC9 18 F6            jr 2B
  84+ 9ACB
  85+ 9ACB CD 68 8C     1 call Extrae_address
  86+ 9ACE E5               push hl
  87+ 9ACF FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9AD1 DD 21 6F 95  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9AD5
  90+ 9AD5              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9AD5              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9AD5
  93+ 9AD5 3A AD 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9AD8 CB 77            bit 6,a
  95+ 9ADA 20 04            jr nz,19F
  96+ 9ADC
  97+ 9ADC AF               xor a
  98+ 9ADD 32 0A 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9AE0
 100+ 9AE0 3A 9F 89     19 ld a,(Cuad_objeto)
 101+ 9AE3 FE 02            cp 2
 102+ 9AE5 38 66            jr c,3F
 103+ 9AE7 28 64            jr z,3F
 104+ 9AE9
 105+ 9AE9              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9AE9
 107+ 9AE9 E6 01            and 1
 108+ 9AEB 28 30            jr z,4F
 109+ 9AED
 110+ 9AED              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9AED              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9AED              ;
 113+ 9AED              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9AED              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9AED              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9AED
 117+ 9AED 2A 8D 89     	ld hl,(Posicion_actual)
 118+ 9AF0
 119+ 9AF0              ;   Amadeus o entidad ???.
 120+ 9AF0
 121+ 9AF0 3A AD 89         ld a,(Ctrl_0)
 122+ 9AF3 CB 77            bit 6,a
 123+ 9AF5 28 0A            jr z,8F
 124+ 9AF7
 125+ 9AF7              ; 	Dispara Amadeus.
 126+ 9AF7
 127+ 9AF7 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9AF9 CD AC 92         call PreviousScan
 129+ 9AFC CD AC 92         call PreviousScan
 130+ 9AFF
 131+ 9AFF              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9AFF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9AFF              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9AFF              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9AFF
 136+ 9AFF 18 11            jr 10F
 137+ 9B01
 138+ 9B01              ; 	Dispara Entidad.
 139+ 9B01
 140+ 9B01 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9B04              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9B04
 143+ 9B04              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9B04              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9B04
 146+ 9B04 C5               push bc
 147+ 9B05 06 10            ld b,16
 148+ 9B07 CD 9D 92     9 call NextScan
 149+ 9B0A 10 FB            djnz 9B
 150+ 9B0C C1               pop bc
 151+ 9B0D CD 77 9B         call Ajusta_disparo_parte_izquierda
 152+ 9B10 18 06            jr 17F
 153+ 9B12
 154+ 9B12              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9B12              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9B12              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9B12              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9B12
 159+ 9B12 CD 77 9B     10 call Ajusta_disparo_parte_izquierda
 160+ 9B15 CD EC 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9B18              ;                                                      ; _al generar el disparo.
 162+ 9B18
 163+ 9B18              ; 	LLegados a este punto tendremos:
 164+ 9B18              ;
 165+ 9B18              ;       Puntero_objeto_disparo en IY.
 166+ 9B18              ;       Rutinas_de_impresion en IX.
 167+ 9B18              ;       Puntero_de_impresion en HL.
 168+ 9B18              ;       Impacto/Dirección en BC.
 169+ 9B18
 170+ 9B18 CD 7F 9B     17 call Almacena_disparo
 171+ 9B1B 18 52            jr 6F                                             ; RET.
 172+ 9B1D
 173+ 9B1D              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9B1D              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9B1D              ;
 176+ 9B1D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9B1D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9B1D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9B1D
 180+ 9B1D 2A 8D 89     4 ld hl,(Posicion_actual)
 181+ 9B20
 182+ 9B20              ;   Amadeus o entidad ???.
 183+ 9B20
 184+ 9B20 3A AD 89         ld a,(Ctrl_0)
 185+ 9B23 CB 77            bit 6,a
 186+ 9B25 28 0A            jr z,11F
 187+ 9B27
 188+ 9B27              ; 	Dispara Amadeus.
 189+ 9B27
 190+ 9B27 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9B29 CD AC 92         call PreviousScan
 192+ 9B2C CD AC 92         call PreviousScan
 193+ 9B2F
 194+ 9B2F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9B2F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9B2F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9B2F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9B2F
 199+ 9B2F 18 11            jr 13F
 200+ 9B31
 201+ 9B31              ; 	Dispara Entidad.
 202+ 9B31
 203+ 9B31 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9B34              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9B34
 206+ 9B34              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9B34              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9B34
 209+ 9B34 C5               push bc
 210+ 9B35 06 10            ld b,16
 211+ 9B37 CD 9D 92     12 call NextScan
 212+ 9B3A 10 FB            djnz 12B
 213+ 9B3C C1               pop bc
 214+ 9B3D
 215+ 9B3D CD 70 9B         call Ajusta_disparo_parte_derecha
 216+ 9B40 18 06            jr 18F
 217+ 9B42
 218+ 9B42              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9B42              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9B42              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9B42              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9B42
 223+ 9B42 CD 70 9B     13 call Ajusta_disparo_parte_derecha
 224+ 9B45 CD EC 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9B48              ;                                                       ; _al generar el disparo.
 226+ 9B48
 227+ 9B48              ; LLegados a este punto tendremos:
 228+ 9B48              ;
 229+ 9B48              ;       Puntero_objeto_disparo en IY.
 230+ 9B48              ;       Rutinas_de_impresion en IX.
 231+ 9B48              ;       Puntero_de_impresion en HL.
 232+ 9B48              ;       Impacto/Dirección en BC.
 233+ 9B48
 234+ 9B48 CD 7F 9B     18 call Almacena_disparo
 235+ 9B4B 18 22            jr 6F                                               ; RET.
 236+ 9B4D
 237+ 9B4D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9B4D
 239+ 9B4D 28 11        3 jr z,5F
 240+ 9B4F
 241+ 9B4F              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9B4F              ;
 243+ 9B4F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9B4F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9B4F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9B4F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9B4F
 248+ 9B4F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9B4F              ;	   ""        ""       "f9", B="1"
 250+ 9B4F              ;	   ""        ""       "fb", B="2"
 251+ 9B4F              ; 	   ""        ""       "fb", B="3"
 252+ 9B4F
 253+ 9B4F 2A 8D 89     	ld hl,(Posicion_actual)
 254+ 9B52 CD 9D 92     	call NextScan
 255+ 9B55
 256+ 9B55              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9B55              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9B55              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9B55              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9B55
 261+ 9B55 CD 77 9B         call Ajusta_disparo_parte_izquierda
 262+ 9B58
 263+ 9B58              ; 	No se produce impacto. B="$80"
 264+ 9B58              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9B58
 266+ 9B58 01 80 80         ld bc,$8080
 267+ 9B5B
 268+ 9B5B              ; 	LLegados a este punto tendremos:
 269+ 9B5B              ;
 270+ 9B5B              ;       Puntero_objeto_disparo en IY.
 271+ 9B5B              ;       Rutinas_de_impresion en IX.
 272+ 9B5B              ;       Puntero_de_impresion en HL.
 273+ 9B5B              ;       Impacto/Dirección en BC.
 274+ 9B5B
 275+ 9B5B CD 7F 9B         call Almacena_disparo
 276+ 9B5E 18 0F            jr 6F                                           ; RET.
 277+ 9B60
 278+ 9B60              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9B60              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9B60              ;
 281+ 9B60              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9B60              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9B60              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9B60              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9B60
 286+ 9B60 2A 8D 89     5 ld hl,(Posicion_actual)
 287+ 9B63 CD 9D 92     	call NextScan
 288+ 9B66
 289+ 9B66              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9B66              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9B66              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9B66              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9B66
 294+ 9B66 CD 70 9B         call Ajusta_disparo_parte_derecha
 295+ 9B69
 296+ 9B69              ; 	No se produce impacto. B="$80"
 297+ 9B69              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9B69
 299+ 9B69 01 80 80     15 ld bc,$8080
 300+ 9B6C
 301+ 9B6C              ; 	LLegados a este punto tendremos:
 302+ 9B6C              ;
 303+ 9B6C              ;       Puntero_objeto_disparo en IY.
 304+ 9B6C              ;       Rutinas_de_impresion en IX.
 305+ 9B6C              ;       Puntero_de_impresion en HL.
 306+ 9B6C              ;       Impacto/Dirección en BC.
 307+ 9B6C
 308+ 9B6C CD 7F 9B         call Almacena_disparo
 309+ 9B6F
 310+ 9B6F C9           6 ret
 311+ 9B70
 312+ 9B70              ; ----------------------------------------------------------------
 313+ 9B70              ;
 314+ 9B70              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9B70              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9B70              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9B70
 318+ 9B70 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9B71 FE 02            cp 2
 320+ 9B73 38 01            jr c,1F
 321+ 9B75 23               inc hl
 322+ 9B76 C9           1 ret
 323+ 9B77
 324+ 9B77 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9B78 FE 01        	cp 1
 326+ 9B7A 20 01        	jr nz,1F
 327+ 9B7C 2B           	dec hl
 328+ 9B7D 2B           1 dec hl
 329+ 9B7E C9               ret
 330+ 9B7F
 331+ 9B7F              ; ----------------------------------------------------------------
 332+ 9B7F              ;
 333+ 9B7F              ;   25/02/23
 334+ 9B7F              ;
 335+ 9B7F              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9B7F              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9B7F              ;
 338+ 9B7F              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9B7F              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9B7F
 341+ 9B7F              Almacena_disparo
 342+ 9B7F
 343+ 9B7F E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9B80 F1               pop af
 345+ 9B81 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9B82
 347+ 9B82 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9B83 E6 01            and 1
 349+ 9B85 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9B87              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9B87              ; 	Dispara AMADEUS.
 352+ 9B87
 353+ 9B87              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9B87              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9B87              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9B87              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9B87
 358+ 9B87 C5               push bc
 359+ 9B88 01 68 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9B8B 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9B8E A7               and a
 362+ 9B8F ED 42            sbc hl,bc
 363+ 9B91 CC ED 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9B94 C1               pop bc
 365+ 9B95 28 54            jr z,4F
 366+ 9B97
 367+ 9B97 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9B9A 23               inc hl
 369+ 9B9B 23               inc hl
 370+ 9B9C 22 F4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9B9F              ;                                                   ; _ Disparo_(+1).
 372+ 9B9F 18 18            jr 2F
 373+ 9BA1
 374+ 9BA1              ; Dispara una entidad.
 375+ 9BA1
 376+ 9BA1 C5           1 push bc
 377+ 9BA2 01 90 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9BA5 2A F2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9BA8 A7               and a
 380+ 9BA9 ED 42            sbc hl,bc
 381+ 9BAB CC E6 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9BAE C1               pop bc
 383+ 9BAF 28 3A            jr z,4F
 384+ 9BB1
 385+ 9BB1 2A F2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9BB4 23               inc hl
 387+ 9BB5 23               inc hl
 388+ 9BB6 22 F2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9BB9              ;                                                   ; _ Disparo_(+1).
 390+ 9BB9 CD 68 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9BBC              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9BBC              ;
 393+ 9BBC              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9BBC              ;                                                     Rutinas_de_impresion en IX.
 395+ 9BBC              ;                                                     Puntero_de_impresion en HL.
 396+ 9BBC              ;                                                     Impacto/Dirección en BC.
 397+ 9BBC
 398+ 9BBC 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9BBD 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9BBE 23               inc hl                                          ; _ al siguiente.
 401+ 9BBF A7               and a
 402+ 9BC0 20 C0            jr nz,3B
 403+ 9BC2
 404+ 9BC2 08               ex af,af
 405+ 9BC3 ED 73 E1 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9BC7 F9               ld sp,hl
 407+ 9BC8
 408+ 9BC8 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9BCA F5               push af                                         ; Puntero de impresión.
 410+ 9BCB FD E5            push iy                                         ; Puntero objeto.
 411+ 9BCD C5               push bc                                         ; Control.
 412+ 9BCE
 413+ 9BCE ED 7B E1 89      ld sp,(Stack)
 414+ 9BD2
 415+ 9BD2              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9BD2
 417+ 9BD2 21 D0 89     	ld hl,Ctrl_1
 418+ 9BD5 CB C6        	set 0,(hl)
 419+ 9BD7
 420+ 9BD7 DD E5        	push ix
 421+ 9BD9 E1               pop hl
 422+ 9BDA F5               push af
 423+ 9BDB DD E1            pop ix
 424+ 9BDD
 425+ 9BDD CD BF 80     	call Guarda_foto_registros
 426+ 9BE0
 427+ 9BE0 21 D0 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9BE3 CB 86        	res 0,(hl)
 429+ 9BE5
 430+ 9BE5              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9BE5              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9BE5
 433+ 9BE5 CD ED 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9BE8 CD E6 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9BEB
 436+ 9BEB C9           4 ret
 437+ 9BEC
 438+ 9BEC              ; ----------------------------------------------------------------
 439+ 9BEC              ;
 440+ 9BEC              ;   4/3/23
 441+ 9BEC              ;
 442+ 9BEC              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9BEC              ;   _ al generarse el disparo.
 444+ 9BEC              ;
 445+ 9BEC              ;       "$80" ..... No se produce colisión.
 446+ 9BEC              ;       "$81" ..... Se produce colisión.
 447+ 9BEC              ;
 448+ 9BEC              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9BEC              ;         _ que forman el disparo.
 450+ 9BEC
 451+ 9BEC
 452+ 9BEC              Comprueba_Colision
 453+ 9BEC
 454+ 9BEC              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9BEC
 456+ 9BEC FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9BEE E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9BEF
 459+ 9BEF CD 25 9C         call Modifica_H_Velocidad_disparo
 460+ 9BF2
 461+ 9BF2 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9BF3 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9BF5 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9BF7
 465+ 9BF7 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9BF9 CD 15 9C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9BFC
 468+ 9BFC 7B               ld a,e
 469+ 9BFD E6 01            and 1
 470+ 9BFF 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9C01              ;                                                  ; _ para activar IMPACTO.
 472+ 9C01 E1               pop hl
 473+ 9C02 E5               push hl
 474+ 9C03 CD 9D 92         call NextScan
 475+ 9C06
 476+ 9C06 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9C07 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9C09 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9C0B              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9C0B 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9C0D CD 15 9C         call Bucle_2
 482+ 9C10
 483+ 9C10 43           1 ld b,e
 484+ 9C11 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9C12 FD E1            pop iy
 486+ 9C14 C9               ret
 487+ 9C15
 488+ 9C15              ; ---------- ----------
 489+ 9C15
 490+ 9C15 06 02        Bucle_2 ld b,2
 491+ 9C17 FD 7E 00     2 ld a,(iy)
 492+ 9C1A A6               and (hl)
 493+ 9C1B 28 02            jr z,1F
 494+ 9C1D 1E 81            ld e,$81
 495+ 9C1F 23           1 inc hl
 496+ 9C20 FD 23            inc iy
 497+ 9C22 10 F3            djnz 2B
 498+ 9C24 C9               ret
 499+ 9C25
 500+ 9C25              ; ---------- ----------
 501+ 9C25              ;
 502+ 9C25              ;   21/7/23
 503+ 9C25
 504+ 9C25              Modifica_H_Velocidad_disparo
 505+ 9C25
 506+ 9C25 3A 01 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9C28 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9C2A D0               ret nc                                         ; _ incrementamos H.
 509+ 9C2B 24               inc h
 510+ 9C2C
 511+ 9C2C C9               ret
 512+ 9C2D
 513+ 9C2D              ; -------------------------------------------------------------------------------------------------------------
 514+ 9C2D              ;
 515+ 9C2D              ;   04/12/23
 516+ 9C2D              ;
 517+ 9C2D              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9C2D              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9C2D              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9C2D              ;
 521+ 9C2D              ;   MODIFICA: HL,DE,B y A.
 522+ 9C2D
 523+ 9C2D              Genera_coordenadas_X
 524+ 9C2D
 525+ 9C2D              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9C2D              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9C2D
 528+ 9C2D              ;   Limpiamos almacenes.
 529+ 9C2D
 530+ 9C2D CD 5E 9C         call Limpia_Coordenadas_X
 531+ 9C30
 532+ 9C30              ;   Almacenamos coordenadas X.
 533+ 9C30
 534+ 9C30              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9C30
 536+ 9C30 2A A7 89         ld hl,(Puntero_de_impresion)
 537+ 9C33 11 FE 89         ld de,Coordenadas_X_Entidad
 538+ 9C36 06 02            ld b,2
 539+ 9C38
 540+ 9C38 3A 93 89         ld a,(CTRL_DESPLZ)
 541+ 9C3B A7               and a
 542+ 9C3C 28 01            jr z,1F
 543+ 9C3E 04               inc b
 544+ 9C3F
 545+ 9C3F CD 55 9C     1 call Guarda_coordenadas_X
 546+ 9C42
 547+ 9C42              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9C42
 549+ 9C42 2A 13 87         ld hl,(p.imp.amadeus)
 550+ 9C45 11 FB 89         ld de,Coordenadas_X_Amadeus
 551+ 9C48 06 02            ld b,2
 552+ 9C4A
 553+ 9C4A 3A FF 86         ld a,(ctrl_desplz_amadeus)
 554+ 9C4D A7               and a
 555+ 9C4E 28 01            jr z,2F
 556+ 9C50 04               inc b
 557+ 9C51
 558+ 9C51 CD 55 9C     2 call Guarda_coordenadas_X
 559+ 9C54
 560+ 9C54              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9C54
 562+ 9C54 C9               ret
 563+ 9C55
 564+ 9C55              ; ----- ----- ----- ----- -----
 565+ 9C55
 566+ 9C55 7D           Guarda_coordenadas_X  ld a,l
 567+ 9C56 E6 1F            and $1f
 568+ 9C58 12           1 ld (de),a
 569+ 9C59 3C               inc a
 570+ 9C5A 13               inc de
 571+ 9C5B 10 FB            djnz 1B
 572+ 9C5D C9               ret
 573+ 9C5E
 574+ 9C5E AF           Limpia_Coordenadas_X xor a
 575+ 9C5F 06 06            ld b,6
 576+ 9C61 21 FB 89         ld hl,Coordenadas_X_Amadeus
 577+ 9C64 77           1 ld (hl),a
 578+ 9C65 23               inc hl
 579+ 9C66 10 FC            djnz 1B
 580+ 9C68 C9               ret
 581+ 9C69
 582+ 9C69              ; ----- ----- ----- ----- -----
 583+ 9C69
 584+ 9C69              Compara_coordenadas_X
 585+ 9C69
 586+ 9C69 06 03            ld b,3
 587+ 9C6B 11 00 8A         ld de,Coordenadas_X_Entidad+2
 588+ 9C6E
 589+ 9C6E 1A               ld a,(de)
 590+ 9C6F A7               and a
 591+ 9C70 20 01            jr nz,2F
 592+ 9C72 05               dec b
 593+ 9C73
 594+ 9C73 1B           2 dec de
 595+ 9C74 1B               dec de
 596+ 9C75 21 FB 89         ld hl,Coordenadas_X_Amadeus
 597+ 9C78
 598+ 9C78 D5           1 push de
 599+ 9C79 E5               push hl
 600+ 9C7A C5               push bc
 601+ 9C7B
 602+ 9C7B CD 85 9C         call Comparando
 603+ 9C7E
 604+ 9C7E C1               pop bc
 605+ 9C7F E1               pop hl
 606+ 9C80 D1               pop de
 607+ 9C81
 608+ 9C81 13               inc de
 609+ 9C82 10 F4            djnz 1B
 610+ 9C84
 611+ 9C84 C9               ret
 612+ 9C85
 613+ 9C85              ; ----- ----- ----- ----- -----
 614+ 9C85              ;
 615+ 9C85              ;   4/12/23
 616+ 9C85              ;
 617+ 9C85              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9C85
 619+ 9C85 06 03        Comparando ld b,3
 620+ 9C87 1A               ld a,(de)
 621+ 9C88 4E           2 ld c,(hl)
 622+ 9C89 B9               cp c
 623+ 9C8A 28 04            jr z,1F
 624+ 9C8C 23               inc hl
 625+ 9C8D 10 F9            djnz 2B
 626+ 9C8F C9               ret
 627+ 9C90
 628+ 9C90 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9C92 32 A0 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9C95 21 F6 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9C98 CB D6            set 2,(hl)
 632+ 9C9A C9               ret
 633+ 9C9B
 634+ 9C9B              ; -----------------------------------------------------------------------
 635+ 9C9B              ;
 636+ 9C9B              ;   7/12/23
 637+ 9C9B              ;
 638+ 9C9B
 639+ 9C9B              Detecta_colision_nave_entidad
 640+ 9C9B
 641+ 9C9B              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9C9B
 643+ 9C9B FD 2A 8F 89      ld iy,(Puntero_objeto)
 644+ 9C9F 2A A7 89         ld hl,(Puntero_de_impresion)
 645+ 9CA2
 646+ 9CA2 E5               push hl
 647+ 9CA3
 648+ 9CA3              ; ----- ----- -----
 649+ 9CA3 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9CA5 06 0A            ld b,10
 651+ 9CA7 CD D7 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9CAA 7B               ld a,e
 653+ 9CAB FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9CAD 38 0E            jr c,3F
 655+ 9CAF
 656+ 9CAF              ; LLegados a este punto:
 657+ 9CAF              ;
 658+ 9CAF              ;   HAY COLISIÓN !!!!!.
 659+ 9CAF              ;
 660+ 9CAF              ;   .db (Impacto) de Amadeus a "1".
 661+ 9CAF              ;   SET el bit3 de (Impacto2).
 662+ 9CAF              ;
 663+ 9CAF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9CAF
 665+ 9CAF 21 A0 89         ld hl,Impacto
 666+ 9CB2 36 01            ld (hl),1
 667+ 9CB4 21 F6 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9CB7 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9CB9 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9CBB
 671+ 9CBB 18 18            jr 1F
 672+ 9CBD
 673+ 9CBD              ; -----
 674+ 9CBD
 675+ 9CBD E1           3 pop hl
 676+ 9CBE CD 9D 92         call NextScan
 677+ 9CC1 E5               push hl
 678+ 9CC2 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9CC3 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9CC5 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9CC7 30 0C            jr nc,1F
 682+ 9CC9              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9CC9 10 DC            djnz 2B
 684+ 9CCB
 685+ 9CCB              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9CCB
 687+ 9CCB              ; LLegados a este punto:
 688+ 9CCB              ;
 689+ 9CCB              ;   NO HAY COLISIÓN !!!!!.
 690+ 9CCB              ;
 691+ 9CCB              ;   .db (Impacto) de Amadeus a "0".
 692+ 9CCB              ;   RES el bit2 de (Impacto2).
 693+ 9CCB              ;
 694+ 9CCB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9CCB              ;   Lo colocamos a "0".
 696+ 9CCB
 697+ 9CCB 21 F6 89         ld hl,Impacto2
 698+ 9CCE CB 96            res 2,(hl)
 699+ 9CD0 2A F7 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9CD3 36 00            ld (hl),0
 701+ 9CD5
 702+ 9CD5 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9CD6 C9               ret
 704+ 9CD7
 705+ 9CD7               ; ---------- ----------
 706+ 9CD7
 707+ 9CD7 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9CD8 3A 8C 89         ld a,(Columns)
 709+ 9CDB 47               ld b,a
 710+ 9CDC FD 7E 00     2 ld a,(iy)
 711+ 9CDF BE               cp (hl)
 712+ 9CE0 28 01            jr z,1F
 713+ 9CE2
 714+ 9CE2 1C               inc e
 715+ 9CE3
 716+ 9CE3 23           1 inc hl
 717+ 9CE4 FD 23            inc iy
 718+ 9CE6 10 F4            djnz 2B
 719+ 9CE8 C1               pop bc
 720+ 9CE9 C9               ret
 721+ 9CEA
 722+ 9CEA              ; -------------------------------------------------------------------------------------------------------------
 723+ 9CEA              ;
 724+ 9CEA              ;   13/03/23
 725+ 9CEA              ;
 726+ 9CEA              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9CEA              ;
 728+ 9CEA              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9CEA
 730+ 9CEA 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9CED 7E               ld a,(hl)
 732+ 9CEE A7               and a
 733+ 9CEF C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9CF0
 735+ 9CF0 44               ld b,h
 736+ 9CF1 4D               ld c,l
 737+ 9CF2 2A E9 89         ld hl,(Stack_snapshot_disparos)
 738+ 9CF5 E5               push hl
 739+ 9CF6 A7               and a
 740+ 9CF7 ED 42            sbc hl,bc
 741+ 9CF9 E5               push hl
 742+ 9CFA C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9CFB
 744+ 9CFB E1               pop hl
 745+ 9CFC 54               ld d,h
 746+ 9CFD 5D               ld e,l
 747+ 9CFE 1B               dec de
 748+ 9CFF ED B8            lddr                                                ; Limpiamos.
 749+ 9D01
 750+ 9D01 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9D04 22 E9 89         ld (Stack_snapshot_disparos),hl
 752+ 9D07
 753+ 9D07 C9               ret
 754+ 9D08
 755+ 9D08              ; -------------------------------------------------------------------------------------------------------------
 756+ 9D08              ;
 757+ 9D08              ;   18/07/23
 758+ 9D08              ;
 759+ 9D08
 760+ 9D08              Motor_de_disparos
 761+ 9D08
 762+ 9D08              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9D08
 764+ 9D08 01 7A 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9D0B 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9D0E
 767+ 9D0E CD 68 8C     2 call Extrae_address
 768+ 9D11 7E               ld a,(hl)
 769+ 9D12 A7               and a
 770+ 9D13 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9D15
 772+ 9D15              ; ----- ----- ----- ----- ----- -----
 773+ 9D15
 774+ 9D15 C5               push bc
 775+ 9D16 CD DA 9D         call foto_disparo_a_borrar
 776+ 9D19
 777+ 9D19              ; Existe colisión con este disparo???
 778+ 9D19
 779+ 9D19 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9D1A 7E               ld a,(hl)
 781+ 9D1B 2B               dec hl
 782+ 9D1C E6 01            and 1
 783+ 9D1E 28 1D            jr z,9F
 784+ 9D20
 785+ 9D20              ;   En este punto:
 786+ 9D20              ;
 787+ 9D20              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9D20              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9D20              ;   _con la entidad).
 790+ 9D20              ;
 791+ 9D20              ;   Disparo_2A defw 0                                ; Control.
 792+ 9D20              ;    defw 0                                          ; Puntero objeto.
 793+ 9D20              ;    defw 0                                          ; Puntero de impresión.
 794+ 9D20              ;    defw 0                                          ; Rutina de impresión.
 795+ 9D20
 796+ 9D20 E5               push hl
 797+ 9D21
 798+ 9D21 06 04            ld b,4
 799+ 9D23 23           19 inc hl
 800+ 9D24 10 FD            djnz 19B
 801+ 9D26
 802+ 9D26 CD 68 8C         call Extrae_address
 803+ 9D29 CD BD 9F         call Genera_coordenadas_disparo
 804+ 9D2C
 805+ 9D2C              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9D2C
 807+ 9D2C 21 F9 89         ld hl,Coordenadas_disparo_certero
 808+ 9D2F 72               ld (hl),d
 809+ 9D30 23               inc hl
 810+ 9D31 73               ld (hl),e
 811+ 9D32
 812+ 9D32              ; Elimino el disparo de la base de datos.
 813+ 9D32
 814+ 9D32 E1               pop hl
 815+ 9D33 CD 59 9E         call Elimina_disparo_de_base_de_datos
 816+ 9D36 21 F6 89         ld hl,Impacto2
 817+ 9D39 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9D3B
 819+ 9D3B 18 06            jr 11F
 820+ 9D3D
 821+ 9D3D CD 03 9E     9 call Mueve_disparo
 822+ 9D40 CD DA 9D         call foto_disparo_a_borrar
 823+ 9D43
 824+ 9D43 C1           11 pop bc
 825+ 9D44 18 04            jr 7F
 826+ 9D46
 827+ 9D46              ; ----- ----- ----- ----- ----- -----
 828+ 9D46
 829+ 9D46 ED 42        1 sbc hl,bc
 830+ 9D48 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9D4A
 832+ 9D4A 2A F4 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9D4D 23               inc hl
 834+ 9D4E 23               inc hl
 835+ 9D4F 22 F4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9D52 18 BA            jr 2B
 837+ 9D54
 838+ 9D54 CD ED 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9D57              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9D57
 841+ 9D57              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9D57
 843+ 9D57 01 E2 86         ld bc,Disparo_11
 844+ 9D5A 2A F2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9D5D
 846+ 9D5D CD 68 8C     5 call Extrae_address
 847+ 9D60 7E               ld a,(hl)
 848+ 9D61 A7               and a
 849+ 9D62 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9D64
 851+ 9D64              ; ----- ----- ----- ----- ----- -----
 852+ 9D64
 853+ 9D64 C5               push bc
 854+ 9D65 CD DA 9D         call foto_disparo_a_borrar
 855+ 9D68
 856+ 9D68              ; Existe colisión con este disparo???
 857+ 9D68
 858+ 9D68 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9D69 7E               ld a,(hl)
 860+ 9D6A 2B               dec hl
 861+ 9D6B E6 01            and 1
 862+ 9D6D 28 4D            jr z,10F
 863+ 9D6F
 864+ 9D6F              ;! La colisión se produce con Amadeus???
 865+ 9D6F              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9D6F
 867+ 9D6F E5               push hl
 868+ 9D70
 869+ 9D70 06 04            ld b,4
 870+ 9D72 23           16 inc hl
 871+ 9D73 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9D75
 873+ 9D75 CD 68 8C         call Extrae_address
 874+ 9D78 CD BD 9F         call Genera_coordenadas_disparo
 875+ 9D7B
 876+ 9D7B 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9D7C FE 16            cp $16
 878+ 9D7E 38 2A            jr c,15F
 879+ 9D80
 880+ 9D80
 881+ 9D80              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9D80
 883+ 9D80 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9D81
 885+ 9D81              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9D81
 887+ 9D81 2A 13 87         ld hl,(p.imp.amadeus)
 888+ 9D84
 889+ 9D84              ; Coordenada X de Amadeus en D.
 890+ 9D84
 891+ 9D84 7D               ld a,l
 892+ 9D85 E6 1F            and $1F
 893+ 9D87 57               ld d,a
 894+ 9D88
 895+ 9D88 21 FE 86         ld hl,Amadeus_db+8
 896+ 9D8B 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9D8C
 898+ 9D8C 21 FB 89         ld hl,Coordenadas_X_Amadeus
 899+ 9D8F CD 55 9C         call Guarda_coordenadas_X
 900+ 9D92
 901+ 9D92 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9D93
 903+ 9D93              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9D93
 905+ 9D93 06 02            ld b,2
 906+ 9D95 C5           20 push bc
 907+ 9D96
 908+ 9D96 06 03            ld b,3
 909+ 9D98 21 FB 89         ld hl,Coordenadas_X_Amadeus
 910+ 9D9B 7E           18 ld a,(hl)
 911+ 9D9C BA               cp d
 912+ 9D9D 20 04            jr nz,17F
 913+ 9D9F
 914+ 9D9F              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9D9F
 916+ 9D9F C1               pop bc
 917+ 9DA0 E1               pop hl
 918+ 9DA1 18 0D            jr 14F
 919+ 9DA3
 920+ 9DA3 23           17 inc hl
 921+ 9DA4 10 F5            djnz 18B
 922+ 9DA6
 923+ 9DA6 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9DA7
 925+ 9DA7 C1               pop bc
 926+ 9DA8 10 EB            djnz 20B
 927+ 9DAA
 928+ 9DAA
 929+ 9DAA              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9DAA              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9DAA
 932+ 9DAA E1           15 pop hl
 933+ 9DAB 23               inc hl
 934+ 9DAC 35               dec (hl)
 935+ 9DAD 2B               dec hl
 936+ 9DAE 18 0C            jr 10F
 937+ 9DB0
 938+ 9DB0              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9DB0              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9DB0
 941+ 9DB0 E5           14 push hl
 942+ 9DB1 CD 59 9E         call Elimina_disparo_de_base_de_datos
 943+ 9DB4 21 F6 89         ld hl,Impacto2
 944+ 9DB7 CB CE            set 1,(hl)
 945+ 9DB9 E1               pop hl
 946+ 9DBA 18 06            jr 12F
 947+ 9DBC
 948+ 9DBC              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9DBC
 950+ 9DBC CD 03 9E     10 call Mueve_disparo
 951+ 9DBF CD DA 9D         call foto_disparo_a_borrar
 952+ 9DC2 C1           12 pop bc
 953+ 9DC3
 954+ 9DC3 18 04            jr 8F
 955+ 9DC5
 956+ 9DC5              ; ----- ----- ----- ----- ----- -----
 957+ 9DC5
 958+ 9DC5 ED 42        4 sbc hl,bc
 959+ 9DC7 28 0A            jr z,6F
 960+ 9DC9
 961+ 9DC9 2A F2 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9DCC 23               inc hl
 963+ 9DCD 23               inc hl
 964+ 9DCE 22 F2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9DD1 18 8A            jr 5B
 966+ 9DD3
 967+ 9DD3 CD E6 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9DD6 CD 5E 9C         call Limpia_Coordenadas_X
 969+ 9DD9 C9               ret
 970+ 9DDA
 971+ 9DDA              ; ------------------------------------------------------------------
 972+ 9DDA
 973+ 9DDA              foto_disparo_a_borrar
 974+ 9DDA
 975+ 9DDA 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9DDB A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9DDC C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9DDD
 979+ 9DDD E5               push hl
 980+ 9DDE 23               inc hl
 981+ 9DDF 23               inc hl
 982+ 9DE0 ED 73 E1 89      ld (Stack),sp
 983+ 9DE4 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9DE5 FD E1            pop iy
 985+ 9DE7 DD E1            pop ix
 986+ 9DE9 E1               pop hl
 987+ 9DEA ED 7B E1 89      ld sp,(Stack)
 988+ 9DEE 3A D0 89         ld a,(Ctrl_1)
 989+ 9DF1 CB C7            set 0,a
 990+ 9DF3 32 D0 89         ld (Ctrl_1),a
 991+ 9DF6 CD BF 80         call Guarda_foto_registros
 992+ 9DF9 3A D0 89         ld a,(Ctrl_1)
 993+ 9DFC CB 87            res 0,a
 994+ 9DFE 32 D0 89         ld (Ctrl_1),a
 995+ 9E01 E1               pop hl
 996+ 9E02 C9               ret
 997+ 9E03
 998+ 9E03              ;---------------------------------------------------
 999+ 9E03              ;
1000+ 9E03              ;   18/07/23
1001+ 9E03              ;
1002+ 9E03
1003+ 9E03              Mueve_disparo
1004+ 9E03
1005+ 9E03              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9E03              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9E03              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9E03
1009+ 9E03 E5               push hl
1010+ 9E04
1011+ 9E04 7E               ld a,(hl)
1012+ 9E05
1013+ 9E05 06 04            ld b,4
1014+ 9E07 23           1 inc hl
1015+ 9E08 10 FD            djnz 1B
1016+ 9E0A
1017+ 9E0A              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9E0A
1019+ 9E0A CD 68 8C         call Extrae_address
1020+ 9E0D
1021+ 9E0D E6 01            and 1
1022+ 9E0F 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9E11
1024+ 9E11              ; Disparo hacia arriba, (Amadeus).
1025+ 9E11
1026+ 9E11              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9E11              ; _ de la dificultad.
1028+ 9E11
1029+ 9E11 CD AC 92         call PreviousScan
1030+ 9E14 CD AC 92         call PreviousScan
1031+ 9E17 CD AC 92         call PreviousScan
1032+ 9E1A CD AC 92         call PreviousScan
1033+ 9E1D
1034+ 9E1D              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9E1D
1036+ 9E1D 7C               ld a,h
1037+ 9E1E FE 40            cp $40
1038+ 9E20 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9E22
1040+ 9E22              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9E22
1042+ 9E22 EB               ex de,hl
1043+ 9E23 06 04            ld b,4
1044+ 9E25 2B           6 dec hl
1045+ 9E26 10 FD            djnz 6B
1046+ 9E28
1047+ 9E28 CD 59 9E         call Elimina_disparo_de_base_de_datos
1048+ 9E2B E1               pop hl
1049+ 9E2C 18 10            jr 7F
1050+ 9E2E
1051+ 9E2E              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9E2E              ; HL contiene el puntero de impresión del disparo.
1053+ 9E2E              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9E2E
1055+ 9E2E D5           3 push de
1056+ 9E2F C5               push bc
1057+ 9E30
1058+ 9E30 CD EC 9B         call Comprueba_Colision
1059+ 9E33
1060+ 9E33              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9E33
1062+ 9E33 78               ld a,b
1063+ 9E34
1064+ 9E34 C1               pop bc
1065+ 9E35 D1               pop de
1066+ 9E36
1067+ 9E36 EB               ex de,hl
1068+ 9E37
1069+ 9E37 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9E38 23               inc hl                                      ; _ movimiento.
1071+ 9E39 72               ld (hl),d
1072+ 9E3A
1073+ 9E3A E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9E3B
1075+ 9E3B 23               inc hl                                      ; _ en curso.
1076+ 9E3C 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9E3D 2B               dec hl
1078+ 9E3E
1079+ 9E3E C9           7 ret
1080+ 9E3F
1081+ 9E3F              ; Disparo hacia abajo, (Entidad).
1082+ 9E3F
1083+ 9E3F 3A 01 8A     2 ld a,(Velocidad_disparo_entidades)
1084+ 9E42 47               ld b,a
1085+ 9E43
1086+ 9E43 CD 9D 92     4 call NextScan
1087+ 9E46 10 FB            djnz 4B
1088+ 9E48
1089+ 9E48              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9E48
1091+ 9E48 7C               ld a,h
1092+ 9E49 FE 58            cp $58
1093+ 9E4B 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9E4D
1095+ 9E4D EB               ex de,hl
1096+ 9E4E 06 04            ld b,4
1097+ 9E50 2B           5 dec hl
1098+ 9E51 10 FD            djnz 5B
1099+ 9E53
1100+ 9E53 CD 59 9E         call Elimina_disparo_de_base_de_datos
1101+ 9E56 E1               pop hl
1102+ 9E57 18 E5            jr 7B
1103+ 9E59
1104+ 9E59              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9E59
1106+ 9E59 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9E5C AF               xor a
1108+ 9E5D 77               ld (hl),a
1109+ 9E5E 54               ld d,h
1110+ 9E5F 5D               ld e,l
1111+ 9E60 13               inc de
1112+ 9E61 ED B0            ldir
1113+ 9E63 C9               ret
1114+ 9E64
1115+ 9E64              ; -----------------------------------------------------------------
1116+ 9E64              ;
1117+ 9E64              ;   7/12/23
1118+ 9E64              ;
1119+ 9E64
1120+ 9E64 3A F6 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9E67 A7               and a
1122+ 9E68 C8               ret z
1123+ 9E69
1124+ 9E69              ; Analizamos si hay impacto por disparos.
1125+ 9E69
1126+ 9E69              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9E69
1128+ 9E69 CB 4F            bit 1,a
1129+ 9E6B 28 07            jr z,1F
1130+ 9E6D
1131+ 9E6D 21 0F 87         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9E70 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9E72 18 08            jr 2F
1134+ 9E74
1135+ 9E74 CB 47        1 bit 0,a
1136+ 9E76 C8               ret z
1137+ 9E77
1138+ 9E77              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9E77
1140+ 9E77 21 D0 89         ld hl,Ctrl_1
1141+ 9E7A CB D6            set 2,(hl)
1142+ 9E7C
1143+ 9E7C C9           2 ret
1144+ 9E7D
1145+ 9E7D              ; -----------------------------------------------------------------
1146+ 9E7D              ;
1147+ 9E7D              ;   25/04/23
1148+ 9E7D              ;
1149+ 9E7D
1150+ 9E7D              Determina_resultado_comparativa
1151+ 9E7D
1152+ 9E7D              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9E7D              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9E7D              ;
1155+ 9E7D              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9E7D              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9E7D              ;
1158+ 9E7D              ;   SBC HL,DE
1159+ 9E7D
1160+ 9E7D              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9E7D              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9E7D
1163+ 9E7D              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9E7D              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9E7D
1166+ 9E7D
1167+ 9E7D 3A 9F 89         ld a,(Cuad_objeto)
1168+ 9E80 FE 02            cp 2
1169+ 9E82 28 26            jr z,2F
1170+ 9E84 38 24            jr c,2F
1171+ 9E86
1172+ 9E86              ; Cuadrantes 3º y 4º
1173+ 9E86
1174+ 9E86 E6 01            and 1
1175+ 9E88 28 10            jr z,4F
1176+ 9E8A
1177+ 9E8A              ; Cuadrante 3º
1178+ 9E8A
1179+ 9E8A 7C               ld a,h
1180+ 9E8B 06 00            ld b,0
1181+ 9E8D
1182+ 9E8D CD 18 9F         call Compara_cositas_H3
1183+ 9E90
1184+ 9E90 04               inc b
1185+ 9E91 05               dec b
1186+ 9E92 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9E93
1188+ 9E93 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9E94 06 00            ld b,0
1190+ 9E96
1191+ 9E96 CD 2A 9F         call Compara_cositas_L3
1192+ 9E99 C9               ret
1193+ 9E9A
1194+ 9E9A              ; Cuadrante 4º
1195+ 9E9A
1196+ 9E9A 7C           4 ld a,h
1197+ 9E9B 06 00            ld b,0
1198+ 9E9D
1199+ 9E9D CD 3C 9F         call Compara_cositas_H4
1200+ 9EA0
1201+ 9EA0 04               inc b
1202+ 9EA1 05               dec b
1203+ 9EA2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9EA3
1205+ 9EA3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9EA4 06 00            ld b,0
1207+ 9EA6
1208+ 9EA6 CD 52 9F         call Compara_cositas_L4
1209+ 9EA9 C9               ret
1210+ 9EAA
1211+ 9EAA              ; Cuadrantes 1º y 2º.
1212+ 9EAA
1213+ 9EAA 28 10        2 jr z,3F
1214+ 9EAC
1215+ 9EAC              ; 1er Cuadrante
1216+ 9EAC
1217+ 9EAC 7C               ld a,h
1218+ 9EAD 06 00            ld b,0
1219+ 9EAF
1220+ 9EAF CD F0 9E         call Compara_cositas_H1
1221+ 9EB2
1222+ 9EB2 04               inc b
1223+ 9EB3 05               dec b
1224+ 9EB4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9EB5
1226+ 9EB5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9EB6 06 00            ld b,0
1228+ 9EB8
1229+ 9EB8 CD 06 9F         call Compara_cositas_L1
1230+ 9EBB C9               ret
1231+ 9EBC
1232+ 9EBC
1233+ 9EBC              ; 2º Cuadrante
1234+ 9EBC
1235+ 9EBC 7C           3 ld a,h
1236+ 9EBD 06 00            ld b,0
1237+ 9EBF
1238+ 9EBF CD CC 9E         call Compara_cositas_H2
1239+ 9EC2
1240+ 9EC2 04               inc b
1241+ 9EC3 05               dec b
1242+ 9EC4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9EC5
1244+ 9EC5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9EC6 06 00            ld b,0
1246+ 9EC8
1247+ 9EC8 CD DE 9E         call Compara_cositas_L2
1248+ 9ECB C9               ret
1249+ 9ECC
1250+ 9ECC A7           Compara_cositas_H2 and a
1251+ 9ECD 28 0D            jr z,1F
1252+ 9ECF              ;    cp $fd
1253+ 9ECF              ;    jr z,1F
1254+ 9ECF              ;    cp $fe
1255+ 9ECF              ;    jr z,1F
1256+ 9ECF FE FF            cp $ff
1257+ 9ED1 28 09            jr z,1F
1258+ 9ED3 FE 01            cp $01
1259+ 9ED5 28 05            jr z,1F
1260+ 9ED7 FE 02            cp $02
1261+ 9ED9 28 01            jr z,1F
1262+ 9EDB C0               ret nz
1263+ 9EDC 04           1 inc b
1264+ 9EDD C9               ret
1265+ 9EDE
1266+ 9EDE A7           Compara_cositas_L2 and a
1267+ 9EDF 28 0D            jr z,1F
1268+ 9EE1              ;    cp $fd
1269+ 9EE1              ;    jr z,1F
1270+ 9EE1 FE FE            cp $fe
1271+ 9EE3 28 09            jr z,1F
1272+ 9EE5 FE FF            cp $ff
1273+ 9EE7 28 05            jr z,1F
1274+ 9EE9 FE 01            cp $01
1275+ 9EEB 28 01            jr z,1F
1276+ 9EED              ;    cp $02
1277+ 9EED              ;    jr z,1F
1278+ 9EED C0               ret nz
1279+ 9EEE 04           1 inc b
1280+ 9EEF C9               ret
1281+ 9EF0
1282+ 9EF0 A7           Compara_cositas_H1 and a
1283+ 9EF1 28 11            jr z,1F
1284+ 9EF3              ;    cp $fd
1285+ 9EF3              ;    jr z,1F
1286+ 9EF3              ;    cp $fe
1287+ 9EF3              ;    jr z,1F
1288+ 9EF3 FE FF            cp $ff
1289+ 9EF5 28 0D            jr z,1F
1290+ 9EF7 FE 01            cp $01
1291+ 9EF9 28 09            jr z,1F
1292+ 9EFB FE 02            cp $02
1293+ 9EFD 28 05            jr z,1F
1294+ 9EFF FE 03            cp $03
1295+ 9F01 28 01            jr z,1F
1296+ 9F03 C0               ret nz
1297+ 9F04 04           1 inc b
1298+ 9F05 C9               ret
1299+ 9F06
1300+ 9F06 A7           Compara_cositas_L1 and a
1301+ 9F07 28 0D            jr z,1F
1302+ 9F09              ;    cp $fd
1303+ 9F09              ;    jr z,1F
1304+ 9F09              ;    cp $fe
1305+ 9F09              ;    jr z,1F
1306+ 9F09              ;    cp $ff
1307+ 9F09              ;    jr z,1F
1308+ 9F09 FE 01            cp $01
1309+ 9F0B 28 09            jr z,1F
1310+ 9F0D FE 02            cp $02
1311+ 9F0F 28 05            jr z,1F
1312+ 9F11 FE 03            cp $03
1313+ 9F13 28 01            jr z,1F
1314+ 9F15 C0               ret nz
1315+ 9F16 04           1 inc b
1316+ 9F17 C9               ret
1317+ 9F18
1318+ 9F18 A7           Compara_cositas_H3 and a
1319+ 9F19 28 0D            jr z,1F
1320+ 9F1B              ;    cp $fd
1321+ 9F1B              ;    jr z,1F
1322+ 9F1B FE FE            cp $fe
1323+ 9F1D 28 09            jr z,1F
1324+ 9F1F FE FF            cp $ff
1325+ 9F21 28 05            jr z,1F
1326+ 9F23 FE 01            cp $01
1327+ 9F25 28 01            jr z,1F
1328+ 9F27              ;    cp $02
1329+ 9F27              ;    jr z,1F
1330+ 9F27              ;    cp $03
1331+ 9F27              ;    jr z,1F
1332+ 9F27 C0               ret nz
1333+ 9F28 04           1 inc b
1334+ 9F29 C9               ret
1335+ 9F2A
1336+ 9F2A A7           Compara_cositas_L3 and a
1337+ 9F2B 28 0D            jr z,1F
1338+ 9F2D              ;    cp $fd
1339+ 9F2D              ;    jr z,1F
1340+ 9F2D              ;    cp $fe
1341+ 9F2D              ;    jr z,1F
1342+ 9F2D              ;    cp $ff
1343+ 9F2D              ;    jr z,1F
1344+ 9F2D FE 01            cp $01
1345+ 9F2F 28 09            jr z,1F
1346+ 9F31 FE 02            cp $02
1347+ 9F33 28 05            jr z,1F
1348+ 9F35 FE 03            cp $03
1349+ 9F37 28 01            jr z,1F
1350+ 9F39 C0               ret nz
1351+ 9F3A 04           1 inc b
1352+ 9F3B C9               ret
1353+ 9F3C
1354+ 9F3C A7           Compara_cositas_H4 and a
1355+ 9F3D 28 11            jr z,1F
1356+ 9F3F FE FD            cp $fd
1357+ 9F41 28 0D            jr z,1F
1358+ 9F43 FE FE            cp $fe
1359+ 9F45 28 09            jr z,1F
1360+ 9F47 FE FF            cp $ff
1361+ 9F49 28 05            jr z,1F
1362+ 9F4B FE 01            cp $01
1363+ 9F4D 28 01            jr z,1F
1364+ 9F4F              ;    cp $02
1365+ 9F4F              ;    jr z,1F
1366+ 9F4F              ;    cp $03
1367+ 9F4F              ;    jr z,1F
1368+ 9F4F C0               ret nz
1369+ 9F50 04           1 inc b
1370+ 9F51 C9               ret
1371+ 9F52
1372+ 9F52 A7           Compara_cositas_L4 and a
1373+ 9F53 28 0D            jr z,1F
1374+ 9F55              ;    cp $fd
1375+ 9F55              ;    jr z,1F
1376+ 9F55 FE FE            cp $fe
1377+ 9F57 28 09            jr z,1F
1378+ 9F59 FE FF            cp $ff
1379+ 9F5B 28 05            jr z,1F
1380+ 9F5D FE 01            cp $01
1381+ 9F5F 28 01            jr z,1F
1382+ 9F61              ;    cp $02
1383+ 9F61              ;    jr z,1F
1384+ 9F61              ;    cp $03
1385+ 9F61              ;    jr z,1F
1386+ 9F61 C0               ret nz
1387+ 9F62 04           1 inc b
1388+ 9F63 C9               ret
# file closed: Disparo.asm
1864  9F64              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F64              ; Relojes y temporizaciones.
   2+ 9F64
   3+ 9F64              ; ------------------------------------------------------
   4+ 9F64              ;
   5+ 9F64              ;	16/7/23
   6+ 9F64              ;
   7+ 9F64              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9F64              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F64              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F64              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F64              ;
  12+ 9F64              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F64              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F64
  15+ 9F64              ; Disparo_entidad db 1
  16+ 9F64              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9F64              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9F64
  19+ 9F64              Habilita_disparos
  20+ 9F64
  21+ 9F64 7E           	ld a,(hl)
  22+ 9F65 A7           	and a
  23+ 9F66 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9F67
  25+ 9F67 EB           	ex de,hl
  26+ 9F68
  27+ 9F68 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9F69 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9F6A
  30+ 9F6A              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9F6A
  32+ 9F6A 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9F6B 7E           	ld a,(hl)
  34+ 9F6C 23           	inc hl
  35+ 9F6D 77           	ld (hl),a
  36+ 9F6E
  37+ 9F6E EB           	ex de,hl						; Habilitamos disparo.
  38+ 9F6F 3E 01        	ld a,1
  39+ 9F71 77           	ld (hl),a
  40+ 9F72 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1865  9F73              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9F73              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9F73              ;
   3+ 9F73              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9F73              ;
   5+ 9F73              ; *****************************************************************************************************************************************************************************************
   6+ 9F73              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9F73
   8+ 9F73 7C           calcula_tercio ld a,h
   9+ 9F74 E6 18        	and $18
  10+ 9F76 CB 2F        	sra a
  11+ 9F78 CB 2F        	sra a
  12+ 9F7A CB 2F        	sra a
  13+ 9F7C C9           	ret
  14+ 9F7D
# file closed: calcula_tercio.asm
1866  9F7D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9F7D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9F7D              ;
   3+ 9F7D              ;
   4+ 9F7D              ;	CLS.
   5+ 9F7D              ;
   6+ 9F7D              ;	Limpia la pantalla y define sus atributos.
   7+ 9F7D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9F7D              ;
   9+ 9F7D              ;	COLORES: 0 ..... NEGRO
  10+ 9F7D              ;    		 1 ..... AZUL
  11+ 9F7D              ; 			 2 ..... ROJO
  12+ 9F7D              ;			 3 ..... MAGENTA
  13+ 9F7D              ; 			 4 ..... VERDE
  14+ 9F7D              ; 			 5 ..... CIAN
  15+ 9F7D              ;			 6 ..... AMARILLO
  16+ 9F7D              ; 			 7 ..... BLANCO
  17+ 9F7D              ;
  18+ 9F7D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9F7D              ;
  20+ 9F7D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9F7D
  22+ 9F7D
  23+ 9F7D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9F80 11 01 40     	LD DE,$4001
  25+ 9F83 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9F86 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9F88 ED B0        	LDIR
  28+ 9F8A 01 FF 02     	LD BC,767
  29+ 9F8D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9F8E ED B0        	LDIR
  31+ 9F90 C9           	ret
  32+ 9F91
# file closed: Cls.asm
1867  9F91              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9F91              ; ------------------------------------------------------------------------
   2+ 9F91              ;
   3+ 9F91              ;	30/1/24
   4+ 9F91              ;
   5+ 9F91              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9F91              ;	Fila superior "0", Columna izquierda "0".
   7+ 9F91              ;
   8+ 9F91              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9F91              ;
  10+ 9F91              ;	Modifica: A,BC y DE.
  11+ 9F91
  12+ 9F91 7D           Genera_coordenadas ld a,l
  13+ 9F92 E6 1F        	and $1f
  14+ 9F94 32 91 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9F97
  16+ 9F97 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9F98 FE 40        	cp $40
  18+ 9F9A 38 1C        	jr c,4F
  19+ 9F9C
  20+ 9F9C CD 73 9F     	call calcula_tercio
  21+ 9F9F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9FA0
  23+ 9FA0 1E 00        	ld e,0
  24+ 9FA2 7D           	ld a,l
  25+ 9FA3 E6 E0        	and $e0
  26+ 9FA5 28 01        	jr z,1F
  27+ 9FA7 04           	inc b
  28+ 9FA8
  29+ 9FA8 04           1 inc b
  30+ 9FA9 05           	dec b
  31+ 9FAA 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9FAC              ;														; _ , salimos.
  33+ 9FAC 1C           3 inc e
  34+ 9FAD D6 20        	sub 32
  35+ 9FAF 20 FB        	jr nz,3B
  36+ 9FB1 10 F5        	djnz 1B
  37+ 9FB3
  38+ 9FB3 7B           2 ld a,e
  39+ 9FB4 32 92 89     	ld (Coordenada_y),a
  40+ 9FB7 C9           	ret
  41+ 9FB8
  42+ 9FB8 AF           4 xor a
  43+ 9FB9 32 92 89     	ld (Coordenada_y),a
  44+ 9FBC C9           	ret
  45+ 9FBD
  46+ 9FBD              ; ------------------------------------------------------------------------
  47+ 9FBD              ;	28/05/23
  48+ 9FBD              ;
  49+ 9FBD              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9FBD              ;	Fila superior "0", Columna izquierda "0".
  51+ 9FBD              ;
  52+ 9FBD              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9FBD              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9FBD              ;
  55+ 9FBD              ;		DE="$120d"
  56+ 9FBD              ;
  57+ 9FBD              ;		D, (Coordenada_X), Columnas, $12
  58+ 9FBD              ;		E, (Coordenada_y), Filas, $0d
  59+ 9FBD              ;
  60+ 9FBD              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9FBD
  62+ 9FBD              ;	Modifica: A,BC y DE.
  63+ 9FBD
  64+ 9FBD
  65+ 9FBD              Genera_coordenadas_disparo
  66+ 9FBD
  67+ 9FBD              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9FBD
  69+ 9FBD 7D           	ld a,l
  70+ 9FBE E6 1F        	and $1f
  71+ 9FC0 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9FC1 CD 73 9F     	call calcula_tercio
  73+ 9FC4 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9FC5 1E 00        	ld e,0
  75+ 9FC7 7D           	ld a,l
  76+ 9FC8 E6 E0        	and $e0
  77+ 9FCA 28 01        	jr z,1F
  78+ 9FCC 04           	inc b
  79+ 9FCD 1C           1 inc e
  80+ 9FCE D6 20        	sub 32
  81+ 9FD0 20 FB        	jr nz,1B
  82+ 9FD2 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9FD4 C9           	ret
  84+ 9FD5
# file closed: Genera_coordenadas.asm
1868  9FD5              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FD5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FD5              ;
   3+ 9FD5              ;	12/12/23
   4+ 9FD5              ;
   5+ 9FD5              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FD5
   7+ 9FD5              ;	ADC HL,SP	LD (addr),SP
   8+ 9FD5              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FD5              ;	ADD IX,SP	LD SP,nn
  10+ 9FD5              ; 	ADD IY,SP	LD SP,HL
  11+ 9FD5              ;				LD SP,IX
  12+ 9FD5              ;	DEC SP		LD SP,IY
  13+ 9FD5
  14+ 9FD5              ;	EX (SP),HL
  15+ 9FD5              ;	EX (SP),IX
  16+ 9FD5              ;	EX (SP),IY
  17+ 9FD5
  18+ 9FD5              ;	INC SP
  19+ 9FD5
  20+ 9FD5                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 E1 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3              ;    ld sp,Variables_de_borrado+6
  39+ 80C3
  40+ 80C3              ;    push hl
  41+ 80C3              ;    push ix
  42+ 80C3              ;    push iy
  43+ 80C3
  44+ 80C3 31 A9 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80C6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80C8              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80C8
  48+ 80C8 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80CB
  50+ 80CB E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80CC DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80CE FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D0
  54+ 80D0              ; Disparo o entidad?
  55+ 80D0
  56+ 80D0 3A D0 89         ld a,(Ctrl_1)
  57+ 80D3 CB 47            bit 0,a
  58+ 80D5 28 05            jr z,2F
  59+ 80D7
  60+ 80D7 2A E9 89         ld hl,(Stack_snapshot_disparos)
  61+ 80DA 18 0F            jr 4F
  62+ 80DC
  63+ 80DC              ; No es disparo. Entidad/Amadeus ????
  64+ 80DC
  65+ 80DC 3A AD 89     2 ld a,(Ctrl_0)
  66+ 80DF CB 77            bit 6,a
  67+ 80E1 28 05            jr z,7F
  68+ 80E3
  69+ 80E3              ; Guardamos foto de Amadeus.
  70+ 80E3
  71+ 80E3 2A ED 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80E6 18 03            jr 4F
  73+ 80E8
  74+ 80E8 2A E7 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80EB
  76+ 80EB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80ED
  78+ 80ED D1           1 pop de
  79+ 80EE 73               ld (hl),e
  80+ 80EF 23               inc hl
  81+ 80F0 72               ld (hl),d
  82+ 80F1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80F2 10 F9            djnz 1B
  84+ 80F4
  85+ 80F4              ; Disparo o entidad ?
  86+ 80F4
  87+ 80F4 3A D0 89         ld a,(Ctrl_1)
  88+ 80F7 CB 47            bit 0,a
  89+ 80F9 28 05            jr z,5F
  90+ 80FB
  91+ 80FB 22 E9 89         ld (Stack_snapshot_disparos),hl
  92+ 80FE 18 12            jr 6F
  93+ 8100
  94+ 8100              ; Entidad o Amadeus ?
  95+ 8100
  96+ 8100 3A AD 89     5 ld a,(Ctrl_0)
  97+ 8103 CB 77            bit 6,a
  98+ 8105 28 08            jr z,8F
  99+ 8107
 100+ 8107 22 ED 89         ld (End_Snapshot_Amadeus),hl
 101+ 810A ED 7B E1 89      ld sp,(Stack)
 102+ 810E C9               ret
 103+ 810F
 104+ 810F 22 E7 89     8 ld (Stack_snapshot),hl
 105+ 8112 ED 7B E1 89  6 ld sp,(Stack)
 106+ 8116
 107+ 8116 C9               ret
 108+ 8117
 109+ 8117              ; -----------------------------------------------------------------------------
 110+ 8117              ;
 111+ 8117              ;   21/11/23
 112+ 8117
 113+ 8117              Limpia_y_reinicia_Stack_Snapshot
 114+ 8117
 115+ 8117              ;   Limpia Album_de_fotos.
 116+ 8117
 117+ 8117 2A E7 89         ld hl,(Stack_snapshot)
 118+ 811A 7D               ld a,l
 119+ 811B A7               and a
 120+ 811C C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 811D
 122+ 811D 47               ld b,a
 123+ 811E 04               inc b
 124+ 811F
 125+ 811F 36 00        1 ld (hl),0
 126+ 8121 2D               dec l
 127+ 8122 10 FB            djnz 1B
 128+ 8124
 129+ 8124              ;   Reinicializa (Stack_snapshot).
 130+ 8124
 131+ 8124 21 00 80         ld hl,Album_de_fotos
 132+ 8127 22 E7 89         ld (Stack_snapshot),hl
 133+ 812A
 134+ 812A C9               ret
# file closed: Guarda_foto_registros.asm
1869  812B
1870  812B              	SAVESNA "Pruebas.sna", START
1871  812B
1872  812B
1873  812B
1874  812B
# file closed: Banco_de_pruebas.asm
