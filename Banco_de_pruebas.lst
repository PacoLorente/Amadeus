# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 B5 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD E3 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD F3 8C     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 BF 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B B5 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D D0 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 878C              ; 19/1/24
   2+ 878C
   3+ 878C              Indice_de_niveles
   4+ 878C
   5+ 878C 94 87        	defw Nivel_1
   6+ 878E 9D 87        	defw Nivel_2
   7+ 8790
   8+ 8790              ;	...
   9+ 8790              ;	...
  10+ 8790              ;	+ Niveles ...
  11+ 8790
  12+ 8790 00 00        	defw 0
  13+ 8792 00 00        	defw 0
  14+ 8794
  15+ 8794 04           Nivel_1 db 4									; Nº de entidades.
  16+ 8795 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8799 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 879D
  19+ 879D 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 879E 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 87A2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 87A6 01 02
  22+ 87A8 02 01 01 01  	db 2,1,1,1,1,2
  22+ 87AC 01 02
  23+ 87AE
  24+ 87AE              ;---------------------------------------------------------------------------------------------------------------
  25+ 87AE              ;
  26+ 87AE              ;   19/1/24
  27+ 87AE              ;
  28+ 87AE              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 87AE              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 87AE              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 87AE              ;	_ de la 1ª entidad del Nivel.
  32+ 87AE              ;
  33+ 87AE              ;	MODIFICA: HL,DE y A.
  34+ 87AE              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 87AE
  36+ 87AE              Inicializa_Nivel
  37+ 87AE
  38+ 87AE 2A DE 89     	ld hl,(Puntero_indice_NIVELES)
  39+ 87B1 CD AF 8B     	call Extrae_address
  40+ 87B4 7E           	ld a,(hl)
  41+ 87B5 32 A9 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 87B8 23           	inc hl
  43+ 87B9 CD C3 87     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 87BC 22 E0 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 87BF CD CC 87     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 87C2 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 87C3
  48+ 87C3              ; ----------------------
  49+ 87C3
  50+ 87C3 11 88 89     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 87C6 01 04 00     	ld bc,4
  52+ 87C9 ED B0        	ldir
  53+ 87CB C9           	ret
  54+ 87CC
  55+ 87CC 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 87CD CD DA 88         call Calcula_salto_en_BC
  57+ 87D0 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 87D3 A7               and a
  59+ 87D4 ED 4A            adc hl,bc
  60+ 87D6 CD AF 8B         call Extrae_address
  61+ 87D9 22 94 89         ld (Puntero_indice_mov),hl
  62+ 87DC C9               ret
  63+ 87DD
  64+ 87DD              ;---------------------------------------------------------------------------------------------------------------
  65+ 87DD              ;
  66+ 87DD              ;   5/1/24
  67+ 87DD              ;
  68+ 87DD              ;	Destruye A,BC,HL,DE
  69+ 87DD
  70+ 87DD              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 87DD              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 87DD
  73+ 87DD              Inicia_Entidades
  74+ 87DD
  75+ 87DD              ; Preparamos los punteros de las cajas de entidades:
  76+ 87DD
  77+ 87DD CD 17 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 87E0              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 87E0 CD 41 89     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 87E3
  81+ 87E3 2A E0 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 87E6
  83+ 87E6 22 E0 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 87E9
  85+ 87E9 CD 88 88     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 87EC
  87+ 87EC 2A E0 89     	ld hl,(Datos_de_nivel)
  88+ 87EF
  89+ 87EF              ; En este punto:
  90+ 87EF              ;
  91+ 87EF              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 87EF              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 87EF
  94+ 87EF C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 87F0
  96+ 87F0 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 87F1 CD DA 88     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 87F4
  99+ 87F4 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 100+ 87F7 CD E2 88     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 87FA
 102+ 87FA CD EC 88     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 87FD
 104+ 87FD              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 87FD
 106+ 87FD CD AA 88     	call Busca_mov_masticados_segun_tipo
 107+ 8800
 108+ 8800 A7           	and a
 109+ 8801 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 8803
 111+ 8803              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 8803
 113+ 8803              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 8803              ;	_ de este tipo de entidad.
 115+ 8803
 116+ 8803 CD D0 9E     	call Situa_en_contador_general_de_mov_masticados
 117+ 8806 CD DD 9E     	call Transfiere_datos_de_contadores
 118+ 8809
 119+ 8809 18 06        	jr 4F
 120+ 880B
 121+ 880B CD 71 8A     3 call Construye_movimientos_masticados_entidad
 122+ 880E
 123+ 880E              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 124+ 880E              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 125+ 880E              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 126+ 880E              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 127+ 880E              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 128+ 880E
 129+ 880E CD 68 88     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 130+ 8811              ;																; _ Mov_masticados ya generados.
 131+ 8811 CD 43 88     4 call Guarda_foto_de_mov_masticado
 132+ 8814
 133+ 8814              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 134+ 8814
 135+ 8814 2A 7B 89     	ld hl,(Puntero_de_impresion)
 136+ 8817 CD 7D 9B     	call Genera_coordenadas
 137+ 881A CD 13 89     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 138+ 881D CD 4D 88     	call Limpiamos_bandeja_DRAW
 139+ 8820 CD 16 8C     	call Incrementa_punteros_de_cajas
 140+ 8823
 141+ 8823              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 142+ 8823              ; _ entidad del Nivel.
 143+ 8823
 144+ 8823 3A C0 89     	ld a,(Ctrl_4)
 145+ 8826 E6 F0        	and $f0
 146+ 8828 32 C0 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 147+ 882B
 148+ 882B              ; Siguiente entidad del Nivel.
 149+ 882B
 150+ 882B 2A E0 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 151+ 882E 23           	inc hl 														; _ entidad del Nivel.
 152+ 882F
 153+ 882F C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 154+ 8830
 155+ 8830 10 B4        	djnz 2B
 156+ 8832
 157+ 8832 C9           	ret
 158+ 8833
 159+ 8833              ; ---------------------------------------------------------------------
 160+ 8833              ;
 161+ 8833              ;	30/01/24
 162+ 8833
 163+ 8833
 164+ 8833              Store_Restore_cajas
 165+ 8833
 166+ 8833              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8833
 168+ 8833 2A 7B 89     	ld hl,(Puntero_de_impresion)
 169+ 8836 CD 7D 9B     	call Genera_coordenadas
 170+ 8839 CD 13 89     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 171+ 883C CD 4D 88     	call Limpiamos_bandeja_DRAW
 172+ 883F
 173+ 883F              ; 	Entidad_sospechosa. 20/4/23
 174+ 883F
 175+ 883F              ;	ld a,(Impacto)
 176+ 883F              ;	and a
 177+ 883F              ;	jr z,1F
 178+ 883F
 179+ 883F              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 180+ 883F              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 181+ 883F              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 182+ 883F              ;	adc hl,bc 											; _ "0" más adelante.
 183+ 883F              ;	ld (Entidad_sospechosa_de_colision),hl
 184+ 883F
 185+ 883F
 186+ 883F              ;1 ld hl,(Puntero_restore_caja)
 187+ 883F              ;	ld a,(hl)
 188+ 883F              ;	and a
 189+ 883F              ;	push af
 190+ 883F              ;	jr z,2F
 191+ 883F
 192+ 883F              ;	di
 193+ 883F              ;	ld de,Bandeja_DRAW
 194+ 883F              ;	ld bc,42
 195+ 883F              ;	ldir
 196+ 883F              ;	ei
 197+ 883F
 198+ 883F CD 16 8C     2 call Incrementa_punteros_de_cajas
 199+ 8842 C9           	ret
 200+ 8843
 201+ 8843
 202+ 8843              ; ---------------------------------------------------------------------
 203+ 8843              ;
 204+ 8843              ;	29/01/24
 205+ 8843
 206+ 8843 CD C6 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 207+ 8846 CD BF 80     	call Guarda_foto_registros
 208+ 8849              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 209+ 8849              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 210+ 8849              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 211+ 8849              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 212+ 8849
 213+ 8849 CD 58 88     	call Decrementa_Contador_de_mov_masticados
 214+ 884C C9           	ret
 215+ 884D
 216+ 884D              ; ---------------------------------------------------------------------
 217+ 884D              ;
 218+ 884D              ;	25/01/24
 219+ 884D
 220+ 884D 21 5E 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 221+ 8850 06 2A        	ld b,42
 222+ 8852 AF           	xor a
 223+ 8853
 224+ 8853 77           1 ld (hl),a
 225+ 8854 23           	inc hl
 226+ 8855 10 FC        	djnz 1B
 227+ 8857
 228+ 8857 C9           	ret
 229+ 8858
 230+ 8858              ; ---------------------------------------------------------------------
 231+ 8858              ;
 232+ 8858              ;	22/01/24
 233+ 8858
 234+ 8858 2A 7F 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 235+ 885B 2B           	dec hl
 236+ 885C
 237+ 885C 24           	inc h
 238+ 885D 25           	dec h
 239+ 885E 20 04        	jr nz,1F
 240+ 8860
 241+ 8860 7D           	ld a,l
 242+ 8861 A7           	and a
 243+ 8862 28 FE        	jr z,$
 244+ 8864
 245+ 8864 22 7F 89     1 ld (Contador_de_mov_masticados),hl
 246+ 8867 C9           	ret
 247+ 8868
 248+ 8868              ; ---------------------------------------------------------------------
 249+ 8868              ;
 250+ 8868              ;	22/01/24
 251+ 8868
 252+ 8868 21 C0 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 253+ 886B CB 46        	bit 0,(hl)
 254+ 886D 20 0D        	jr nz,1F
 255+ 886F CB 4E        	bit 1,(hl)
 256+ 8871 20 0C        	jr nz,2F
 257+ 8873 CB 56        	bit 2,(hl)
 258+ 8875 20 0B        	jr nz,3F
 259+ 8877 CB 5E        	bit 3,(hl)
 260+ 8879 20 0A        	jr nz,4F
 261+ 887B C9           	ret
 262+ 887C
 263+ 887C CB E6        1 set 4,(hl)
 264+ 887E C9           	ret
 265+ 887F CB EE        2 set 5,(hl)
 266+ 8881 C9           	ret
 267+ 8882 CB F6        3 set 6,(hl)
 268+ 8884 C9           	ret
 269+ 8885 CB FE        4 set 7,(hl)
 270+ 8887 C9           	ret
 271+ 8888
 272+ 8888              ; ---------------------------------------------------------------------
 273+ 8888              ;
 274+ 8888              ;	23/01/24
 275+ 8888              ;
 276+ 8888              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 277+ 8888              ;
 278+ 8888              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 279+ 8888              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 280+ 8888              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 281+ 8888              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 282+ 8888
 283+ 8888              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 284+ 8888
 285+ 8888 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 286+ 8889 3D           	dec a
 287+ 888A 20 06        	jr nz,1F
 288+ 888C
 289+ 888C              ; --- Tipo_1
 290+ 888C
 291+ 888C 21 C0 89     	ld hl,Ctrl_4
 292+ 888F CB C6        	set 0,(hl)
 293+ 8891 C9           	ret
 294+ 8892
 295+ 8892 3D           1 dec a
 296+ 8893 20 06        	jr nz,2F
 297+ 8895
 298+ 8895              ; --- Tipo_2
 299+ 8895
 300+ 8895 21 C0 89     	ld hl,Ctrl_4
 301+ 8898 CB CE        	set 1,(hl)
 302+ 889A C9           	ret
 303+ 889B
 304+ 889B 3D           2 dec a
 305+ 889C 20 06        	jr nz,3F
 306+ 889E
 307+ 889E              ; --- Tipo_3
 308+ 889E
 309+ 889E 21 C0 89     	ld hl,Ctrl_4
 310+ 88A1 CB D6        	set 2,(hl)
 311+ 88A3 C9           	ret
 312+ 88A4
 313+ 88A4              ; --- Tipo_3
 314+ 88A4
 315+ 88A4 21 C0 89     3 ld hl,Ctrl_4
 316+ 88A7 CB D6        	set 2,(hl)
 317+ 88A9 C9           	ret
 318+ 88AA
 319+ 88AA              ; ---------------------------------------------------------------------
 320+ 88AA              ;
 321+ 88AA              ;	22/01/24
 322+ 88AA
 323+ 88AA 21 C0 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 324+ 88AD CB 46        	bit 0,(hl)
 325+ 88AF 20 0E        	jr nz,1F
 326+ 88B1
 327+ 88B1 CB 4E        	bit 1,(hl)
 328+ 88B3 20 10        	jr nz,2F
 329+ 88B5
 330+ 88B5 CB 56        	bit 2,(hl)
 331+ 88B7 20 12        	jr nz,3F
 332+ 88B9
 333+ 88B9 CB 5E        	bit 3,(hl)
 334+ 88BB 20 14        	jr nz,4F
 335+ 88BD 18 19        	jr 6F
 336+ 88BF
 337+ 88BF              ; Entidad_de_Tipo_1.
 338+ 88BF
 339+ 88BF CB 66        1 bit 4,(hl)
 340+ 88C1 28 15        	jr z,6F
 341+ 88C3 18 10        	jr 5F
 342+ 88C5
 343+ 88C5              ; Entidad_de_Tipo_2.
 344+ 88C5
 345+ 88C5 CB 6E        2 bit 5,(hl)
 346+ 88C7 28 0F        	jr z,6F
 347+ 88C9 18 0A        	jr 5F
 348+ 88CB
 349+ 88CB              ; Entidad_de_Tipo_3.
 350+ 88CB
 351+ 88CB CB 76        3 bit 6,(hl)
 352+ 88CD 28 09        	jr z,6F
 353+ 88CF 18 04        	jr 5F
 354+ 88D1
 355+ 88D1              ; Entidad_de_Tipo_4.
 356+ 88D1
 357+ 88D1 CB 7E        4 bit 7,(hl)
 358+ 88D3 28 03        	jr z,6F
 359+ 88D5
 360+ 88D5              ; Esta entidad TIENE MOV_MASTICADOS.
 361+ 88D5
 362+ 88D5 AF           5 xor a
 363+ 88D6 3C           	inc a
 364+ 88D7 C9           	ret
 365+ 88D8
 366+ 88D8              ; Esta entidad NO TIENE MOV_MASTICADOS.
 367+ 88D8
 368+ 88D8 AF           6 xor a
 369+ 88D9 C9           	ret
 370+ 88DA
 371+ 88DA              ;	------------------------------------------------------------------------------------
 372+ 88DA              ;
 373+ 88DA              ;	12/01/24
 374+ 88DA              ;
 375+ 88DA              ;	INPUTS:	A contiene el (Tipo) de entidad.
 376+ 88DA              ;
 377+ 88DA              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 378+ 88DA              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 379+ 88DA
 380+ 88DA CB 27        Calcula_salto_en_BC sla a
 381+ 88DC D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 382+ 88DE 4F           	ld c,a
 383+ 88DF 06 00        	ld b,0
 384+ 88E1 C9           	ret
 385+ 88E2
 386+ 88E2              ; ------------------------------------------------------------------
 387+ 88E2              ;
 388+ 88E2              ;	19/1/24
 389+ 88E2              ;
 390+ 88E2              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 391+ 88E2              ;	Actualiza (Datos_de_entidad) con esa dirección.
 392+ 88E2
 393+ 88E2 A7           Situa_en_datos_de_definicion and a
 394+ 88E3 ED 4A        	adc hl,bc
 395+ 88E5 CD AF 8B     	call Extrae_address
 396+ 88E8 22 AF 89         ld (Datos_de_entidad),hl
 397+ 88EB C9           	ret
 398+ 88EC
 399+ 88EC              ; ------------------------------------------------------------------
 400+ 88EC
 401+ 88EC              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 402+ 88EC              ; 	inc de
 403+ 88EC              ; 	inc de
 404+ 88EC              ; 	ex de,hl
 405+ 88EC              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 406+ 88EC              ; 	ret
 407+ 88EC
 408+ 88EC              ; ----------------------------------------------------------------------------------------------------------
 409+ 88EC              ;
 410+ 88EC              ;	31/1/24
 411+ 88EC              ;
 412+ 88EC              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 413+ 88EC              ;	_ de entidad.
 414+ 88EC              ;
 415+ 88EC              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 416+ 88EC              ;
 417+ 88EC              ;
 418+ 88EC              ;	MODIFICA: HL,DE y BC
 419+ 88EC
 420+ 88EC
 421+ 88EC              Definicion_de_entidad_a_bandeja_DRAW
 422+ 88EC
 423+ 88EC 11 5E 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 424+ 88EF 01 03 00     	ld bc,3
 425+ 88F2 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 426+ 88F4              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 427+ 88F4 11 68 89     	ld de,Attr									; DE en (Attr).
 428+ 88F7 01 05 00     	ld bc,5
 429+ 88FA ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 430+ 88FC              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 431+ 88FC 11 71 89     	ld de,Posicion_inicio
 432+ 88FF 01 03 00     	ld bc,3
 433+ 8902 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 434+ 8904              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 435+ 8904 11 7D 89     	ld de,Puntero_de_almacen_de_mov_masticados
 436+ 8907 01 02 00     	ld bc,2
 437+ 890A ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 438+ 890C
 439+ 890C 11 87 89     	ld de,Frames_explosion
 440+ 890F 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 441+ 8911 12           	ld (de),a 									; Vuelco (Frames_explosion).
 442+ 8912
 443+ 8912 C9           	ret
 444+ 8913
 445+ 8913              ; ----------------------------------------------------------------------------------------------------------
 446+ 8913              ;
 447+ 8913              ;	22/01/24
 448+ 8913              ;
 449+ 8913              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 450+ 8913              ;
 451+ 8913              ;	Las cajas contienen entidades iniciadas:
 452+ 8913              ;
 453+ 8913              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 454+ 8913              ;
 455+ 8913              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 456+ 8913              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 457+ 8913              ;
 458+ 8913              ;	MODIFICA: HL,DE y BC
 459+ 8913
 460+ 8913 21 5E 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 461+ 8916 ED 5B A3 89  	ld de,(Puntero_store_caja)
 462+ 891A 7E           	ld a,(hl)
 463+ 891B 12           	ld (de),a
 464+ 891C 13           	inc de 													; (Tipo).
 465+ 891D
 466+ 891D 21 65 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 467+ 8920 01 02 00     	ld bc,2
 468+ 8923 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 469+ 8925              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 470+ 8925 23           	inc hl
 471+ 8926 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 472+ 8927 12           	ld (de),a
 473+ 8928 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 474+ 8929
 475+ 8929 21 74 89     	ld hl,Impacto
 476+ 892C 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 477+ 892D 12           	ld (de),a
 478+ 892E 13           	inc de 													; (Impacto), volcado a la caja.
 479+ 892F              ;															; DE situado ahora en (Variables_de_borrado).
 480+ 892F 23           	inc hl
 481+ 8930 01 06 00     	ld bc,6
 482+ 8933 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 483+ 8935              ; 															; DE situado ahora en (Puntero_de_impresión).
 484+ 8935 01 07 00     	ld bc,7
 485+ 8938 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 486+ 893A              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 487+ 893A              ;															; HL apunta ahora a (Columnas).
 488+ 893A 21 86 89     	ld hl,Ctrl_2
 489+ 893D 7E           	ld a,(hl)
 490+ 893E 12           	ld (de),a 												; Volcamos (Ctrl_2).
 491+ 893F 13           	inc de
 492+ 8940
 493+ 8940 C9           	ret
 494+ 8941
 495+ 8941              ;---------------------------------------------------------------------------------------------------------------
 496+ 8941              ;
 497+ 8941              ;	5/1/24
 498+ 8941              ;
 499+ 8941              ;	INICIALIZA (Numero_parcial_de_entidades).
 500+ 8941              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 501+ 8941              ;
 502+ 8941              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 503+ 8941              ;
 504+ 8941              ;	(Numero_parcial_de_entidades)="7".
 505+ 8941              ;
 506+ 8941              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 507+ 8941              ;
 508+ 8941              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 509+ 8941              ;
 510+ 8941              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 511+ 8941              ;	MODIFICA: A y B.
 512+ 8941              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 513+ 8941
 514+ 8941              Inicializa_Numero_parcial_de_entidades
 515+ 8941
 516+ 8941              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 517+ 8941
 518+ 8941 3A A9 89     	ld a,(Numero_de_entidades)
 519+ 8944 A7           	and a
 520+ 8945
 521+ 8945              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 522+ 8945              ;	jr z,$
 523+ 8945              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 524+ 8945
 525+ 8945 20 03        	jr nz,3F
 526+ 8947
 527+ 8947              ; ---------- ---------- ----------
 528+ 8947
 529+ 8947              ;! RESET para pruebas. Omitir esta línea en modo normal.
 530+ 8947              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 531+ 8947
 532+ 8947 CD AE 87     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 533+ 894A
 534+ 894A              ; ---------- ---------- ----------
 535+ 894A
 536+ 894A 3A A9 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 537+ 894D FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 538+ 894F 38 08        	jr c,1F
 539+ 8951
 540+ 8951              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 541+ 8951              ; Actualizamos variables.
 542+ 8951
 543+ 8951 3E 07        	ld a,7
 544+ 8953 32 AA 89     	ld (Numero_parcial_de_entidades),a
 545+ 8956 47           	ld b,a
 546+ 8957 18 04        	jr 2F
 547+ 8959
 548+ 8959              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 549+ 8959              ; (Numero_de_entidades)="0".
 550+ 8959
 551+ 8959 32 AA 89     1 ld (Numero_parcial_de_entidades),a
 552+ 895C 47           	ld b,a
 553+ 895D C9           2 ret
# file closed: Niveles.asm
 107  895E
 108  895E              ; ******************************************************************************************************************************************************************************************
 109  895E              ; Constantes.
 110  895E              ; ******************************************************************************************************************************************************************************************
 111  895E              ;
 112  895E              ; 25/12/23
 113  895E
 114  895E              ;
 115  895E              ; Constantes.
 116  895E              ;
 117  895E
 118  895E              Sprite_vacio equ $eae0
 119  895E              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  895E              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  895E              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  895E              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  895E
 124  895E              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  895E              ;														;
 126  895E              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  895E
 128  895E              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  895E              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  895E              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  895E              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  895E              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  895E              ;														; 55 Bytes.
 134  895E
 135  895E              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 136  895E              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 137  895E
 138  895E              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  895E
 140  895E              ; ******************************************************************************************************************************************************************************************
 141  895E              ; Variables.
 142  895E              ; ******************************************************************************************************************************************************************************************
 143  895E              ;
 144  895E              ; 18/01/24
 145  895E              ;
 146  895E              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  895E              ;
 148  895E
 149  895E              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  895E
 151  895E 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  895F              ;															- Patrón de movimiento.
 153  895F              ;															- Aspecto
 154  895F 00           Filas db 0												; Filas. [DRAW]
 155  8960 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 156  8961 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8963 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8965 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8966 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8967
 161  8967              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8967
 163  8967 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8968              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8968              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8968 00           Attr db 0												; Atributos de la entidad:
 167  8969
 168  8969              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  8969              ;
 170  8969              ;	COLORES: 0 ..... NEGRO
 171  8969              ;    		 1 ..... AZUL
 172  8969              ; 			 2 ..... ROJO
 173  8969              ;			 3 ..... MAGENTA
 174  8969              ; 			 4 ..... VERDE
 175  8969              ; 			 5 ..... CIAN
 176  8969              ;			 6 ..... AMARILLO
 177  8969              ; 			 7 ..... BLANCO
 178  8969
 179  8969 00 00        Indice_Sprite_der defw 0
 180  896B 00 00        Indice_Sprite_izq defw 0
 181  896D 00 00        Puntero_DESPLZ_der defw 0
 182  896F 00 00        Puntero_DESPLZ_izq defw 0
 183  8971
 184  8971 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8973 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8974
 187  8974              ; Variables de objeto. (Características).
 188  8974
 189  8974 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8975              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8975              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8975 00 00 00...  Variables_de_borrado ds 6
 193  897B
 194  897B 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  897D              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  897D
 197  897D 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  897F
 199  897F              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  897F              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  897F
 202  897F 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  8981              ;														; _palabras que componen el "movimiento_masticado".
 204  8981
 205  8981              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  8981
 207  8981 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8982              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8982              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8982              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8982              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8982              ;
 213  8982              ; 														DESCRIPCIÖN:
 214  8982              ;
 215  8982              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8982              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8982              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8982              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8982              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8982              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8982              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8982              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8982              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8982              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8982              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8982              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8982              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8982              ;
 229  8982              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8982              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8982              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8982
 233  8982              ; Variables de funcionamiento. [DRAW].
 234  8982
 235  8982 00           Columnas db 0
 236  8983 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8985              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8985 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8986
 240  8986              ; variables de control general.
 241  8986
 242  8986 00           Ctrl_2 db 0
 243  8987              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  8987              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  8987              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  8987              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  8987              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  8987              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  8987              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  8987              ;
 251  8987              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  8987              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  8987              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  8987              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  8987              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  8987              ;														BIT 4, ???
 257  8987              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  8987
 259  8987 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  8988
 261  8988              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  8988
 263  8988              ;					         		---------;      ;---------
 264  8988
 265  8988              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  8988
 267  8988              Perfiles_de_velocidad
 268  8988
 269  8988 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  8989 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  898A 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  898B 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  898C
 274  898C              ; Contadores de 16 bits.
 275  898C
 276  898C 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  898E 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  8990 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8992 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8994
 281  8994              ; Movimiento. ------------------------------------------------------------------------------------------------------
 282  8994
 283  8994 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 284  8996 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 285  8998 00 00        Puntero_indice_mov_bucle defw 0							;
 286  899A              ;
 287  899A              ;
 288  899A 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 289  899B              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 290  899B              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 291  899B 00           Incrementa_puntero_backup db 0
 292  899C 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 293  899D              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 294  899D 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 295  899E 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 296  899F 00           Cola_de_desplazamiento db 0								; Este byte indica:
 297  89A0              ;
 298  89A0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 299  89A0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 300  89A0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 301  89A0              ;
 302  89A0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 303  89A0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 304  89A0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 305  89A0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 306  89A0              ;
 307  89A0              ;														;	"$ff" ..... Bucle infinito de repetición.
 308  89A0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 309  89A0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 310  89A0              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 311  89A0
 312  89A0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 313  89A1
 314  89A1              ;														DESCRIPCIÓN:
 315  89A1              ;
 316  89A1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 317  89A1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 318  89A1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 319  89A1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 320  89A1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 321  89A1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 322  89A1
 323  89A1              ;														BIT 3, Recarga de nueva oleada.
 324  89A1              ;														BIT 4, Recarga de nueva oleada.
 325  89A1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 326  89A1              ;														BIT 6, **** Frame completo.
 327  89A1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 328  89A1
 329  89A1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 330  89A3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 331  89A3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 332  89A3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 333  89A3
 334  89A3              ; Gestión de ENTIDADES y CAJAS.
 335  89A3
 336  89A3 00 00        Puntero_store_caja defw 0
 337  89A5 00 00        Puntero_restore_caja defw 0
 338  89A7 00 00        Indice_restore_caja defw 0
 339  89A9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 340  89AA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 341  89AB 00           Entidades_en_curso db 0									; ..... ..... .....
 342  89AC 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 343  89AD              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 344  89AD              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 345  89AD              ;														; _ (Numero_de_malotes)="0".
 346  89AD 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 347  89AF 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 348  89B1              ;														; _ puntero (Indice_entidades).
 349  89B1
 350  89B1              ;---------------------------------------------------------------------------------------------------------------
 351  89B1              ;
 352  89B1              ;	11/01/24
 353  89B1              ;
 354  89B1              ;	Álbumes.
 355  89B1
 356  89B1 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 357  89B3              ;														; _variable para almacenar lo posición del puntero_
 358  89B3              ; 														; _de pila, SP.
 359  89B3 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 360  89B5              ;														; La utiliza la rutina [Extrae_foto_registros].
 361  89B5 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 362  89B7 00 80        Stack_snapshot defw Album_de_fotos
 363  89B9 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 364  89BB
 365  89BB              ;End_Snapshot defw Album_de_fotos
 366  89BB              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 367  89BB 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 368  89BD              ;														; _el snapshot de los registros del siguiente disparo.
 369  89BD              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 370  89BD AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 371  89BF
 372  89BF 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 373  89C0              ;
 374  89C0              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 375  89C0              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 376  89C0              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 377  89C0
 378  89C0 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 379  89C1              ;
 380  89C1              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 381  89C1              ;
 382  89C1              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383  89C1              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384  89C1              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385  89C1              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386  89C1              ;
 387  89C1              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 388  89C1              ;															_ masticados ya generados.
 389  89C1              ;
 390  89C1              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 391  89C1              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 392  89C1              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 393  89C1              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 394  89C1
 395  89C1
 396  89C1              ; Gestión de Disparos.
 397  89C1
 398  89C1 00           Numero_de_disparotes db 0
 399  89C2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 400  89C4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 401  89C6 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 402  89C7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 403  89C7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 404  89C7 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 405  89C9              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 406  89C9              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 407  89C9              ;														; _produzca colisión.
 408  89C9 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 409  89CB              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 410  89CB 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 411  89CE              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 412  89CE 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 413  89D1              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 414  89D1 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 415  89D2
 416  89D2              ;---------------------------------------------------------------------------------------------------------------
 417  89D2
 418  89D2              ; Relojes y temporizaciones.
 419  89D2
 420  89D2 00           Contador_de_frames db 0
 421  89D3 00           Contador_de_frames_2 db 0
 422  89D4
 423  89D4 04           Clock_explosion db 4
 424  89D5 14           Clock_Entidades_en_curso db 20
 425  89D6 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 426  89D7              ;														; Repite la oleada de entidades.
 427  89D7 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 428  89D8 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 429  89D9 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 430  89DA
 431  89DA 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 432  89DB 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 433  89DC 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 434  89DD
 435  89DD              ;---------------------------------------------------------------------------------------------------------------
 436  89DD
 437  89DD              ; Gestión de NIVELES.
 438  89DD
 439  89DD 00           Nivel db 0												; Nivel actual del juego.
 440  89DE 00 00        Puntero_indice_NIVELES defw 0
 441  89E0 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 442  89E2              ; 														; _ que definen el NIVEL.
 443  89E2              ; Y todo comienza aquí .....
 444  89E2              ;
 445  89E2              ; 	INICIO  *************************************************************************************************************************************************************************
 446  89E2              ;
 447  89E2              ;	5/1/24
 448  89E2
 449  89E2              START
 450  89E2
 451  89E2 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 452  89E5 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 453  89E7 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 454  89E9 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 455  89EB F3           	DI
 456  89EC
 457  89EC 3E 07        	ld a,%00000111
 458  89EE CD EF 97     	call Cls
 459  89F1 CD 54 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 460  89F4
 461  89F4              ; INICIALIZACIÓN.
 462  89F4
 463  89F4              ;	Inicializa 1er Nivel.
 464  89F4
 465  89F4 21 8C 87     	ld hl,Indice_de_niveles
 466  89F7 22 DE 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 467  89FA CD AE 87     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 468  89FD
 469  89FD              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 470  89FD              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 471  89FD              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 472  89FD
 473  89FD              ;	Provisional, (para desarrollo).
 474  89FD
 475  89FD              	;-
 476  89FD              ;	ld hl,Numero_parcial_de_entidades
 477  89FD              ;	ld b,(hl)
 478  89FD              ;	inc b
 479  89FD              ;	dec b
 480  89FD              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 481  89FD
 482  89FD CD DD 87     4 call Inicia_Entidades
 483  8A00
 484  8A00 CD 17 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 485  8A03
 486  8A03              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 487  8A03              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 488  8A03              ; (Esto se dá cuando se inicia una nueva oleada).
 489  8A03
 490  8A03              ;	ld a,(Ctrl_1)
 491  8A03              ;	bit 3,a
 492  8A03              ;	jr nz,5F											; Loop
 493  8A03
 494  8A03              ; 	INICIA AMADEUS !!!!!
 495  8A03
 496  8A03              ;3 call Restore_Amadeus
 497  8A03              ;	call Inicia_Puntero_objeto
 498  8A03              ;	call Draw
 499  8A03
 500  8A03              ;	call Guarda_movimiento_masticado	;! Provisional
 501  8A03
 502  8A03              ;	call Guarda_foto_registros
 503  8A03              ;	call Guarda_datos_de_borrado_Amadeus
 504  8A03
 505  8A03              ;	ld de,Amadeus_db
 506  8A03              ;	call Store_Amadeus
 507  8A03
 508  8A03              ; 	INICIA DISPAROS !!!!!
 509  8A03
 510  8A03              ;	call Inicia_Puntero_Disparo_Entidades
 511  8A03              ;	call Inicia_Puntero_Disparo_Amadeus
 512  8A03
 513  8A03              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 514  8A03
 515  8A03              ;5 call Inicia_punteros_de_cajas
 516  8A03              ;	call Restore_entidad
 517  8A03
 518  8A03              ;	ld a,(Ctrl_1)
 519  8A03              ;	bit 3,a
 520  8A03              ;	jr z,6F
 521  8A03
 522  8A03              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 523  8A03
 524  8A03              ;	ld hl,Ctrl_1
 525  8A03              ;	res 3,(hl)
 526  8A03              ;	jr Main
 527  8A03
 528  8A03              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 529  8A03
 530  8A03 21 BF 89     6 ld hl,Ctrl_3
 531  8A06 CB C6        	set 0,(hl)											; Frame completo.
 532  8A08 FB           	ei
 533  8A09 76           	halt
 534  8A0A
 535  8A0A              ; ------------------------------------
 536  8A0A
 537  8A0A              Main
 538  8A0A              ;
 539  8A0A              ;	11/12/23
 540  8A0A
 541  8A0A              ; Aparece nueva entidad ???
 542  8A0A
 543  8A0A              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 544  8A0A              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 545  8A0A              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 546  8A0A              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 547  8A0A              ;														; _un 2º bloque.
 548  8A0A
 549  8A0A              ;	ld a,1
 550  8A0A              ;	out ($fe),a
 551  8A0A
 552  8A0A 3A D5 89     	ld a,(Clock_Entidades_en_curso)
 553  8A0D 47           	ld b,a
 554  8A0E 3A D2 89     	ld a,(Contador_de_frames)
 555  8A11 B8           	cp b
 556  8A12 20 18        	jr nz,13F
 557  8A14
 558  8A14              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 559  8A14              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 560  8A14
 561  8A14 3A AA 89     21 ld a,(Numero_parcial_de_entidades)
 562  8A17 47           	ld b,a
 563  8A18 3A AB 89     	ld a,(Entidades_en_curso)
 564  8A1B B8           	cp b
 565  8A1C 28 0E        	jr z,13F
 566  8A1E 30 0C        	jr nc,13F
 567  8A20
 568  8A20 3C           	inc a
 569  8A21 32 AB 89     	ld (Entidades_en_curso),a
 570  8A24
 571  8A24              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 572  8A24
 573  8A24 3A D5 89     	ld a,(Clock_Entidades_en_curso)
 574  8A27              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 575  8A27              ;! _ IMPREDECIBLE !!!!
 576  8A27 C6 64        	add 100
 577  8A29 32 D5 89     	ld (Clock_Entidades_en_curso),a
 578  8A2C
 579  8A2C              ; -------------------------------------------------------------------------------------------------------------
 580  8A2C
 581  8A2C              ; Habilita disparos.
 582  8A2C
 583  8A2C              13
 584  8A2C
 585  8A2C              ;	ld hl,Disparo_Amadeus
 586  8A2C              ;	ld de,CLOCK_repone_disparo_Amadeus
 587  8A2C              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 588  8A2C
 589  8A2C              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 590  8A2C              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 591  8A2C              ;	call Habilita_disparos
 592  8A2C
 593  8A2C              ; COLISIONES.
 594  8A2C
 595  8A2C              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 596  8A2C
 597  8A2C              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 598  8A2C              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 599  8A2C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 600  8A2C
 601  8A2C              ;	xor a
 602  8A2C              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 603  8A2C
 604  8A2C              ;	call Inicia_punteros_de_cajas
 605  8A2C              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 606  8A2C              ; 														; _ en DRAW.
 607  8A2C
 608  8A2C              ;	ld a,(Filas)
 609  8A2C              ;	and a
 610  8A2C              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 611  8A2C              ;	call Incrementa_punteros_de_cajas
 612  8A2C              ;	jr 12B
 613  8A2C
 614  8A2C              ; ---------------------------------------------------------------------------------------
 615  8A2C
 616  8A2C 3A AA 89     10 ld a,(Numero_parcial_de_entidades)
 617  8A2F 47               ld b,a
 618  8A30 A7           	and a
 619  8A31 20 00        	jr nz,11F
 620  8A33
 621  8A33              ;	ld hl,Ctrl_1;
 622  8A33              ;	bit 4,(hl)
 623  8A33              ;	jp nz,16F
 624  8A33
 625  8A33              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 626  8A33
 627  8A33              ;	ld hl,Ctrl_1
 628  8A33              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 629  8A33
 630  8A33              ;	ld a,(Contador_de_frames)
 631  8A33              ;	inc a
 632  8A33              ;	ld (Activa_recarga_cajas),a
 633  8A33
 634  8A33              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 635  8A33
 636  8A33 3A AB 89     11 ld a,(Entidades_en_curso)
 637  8A36 A7           	and a
 638  8A37 28 14        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 639  8A39 47           	ld b,a												; No hay entidades que gestionar.
 640  8A3A
 641  8A3A              ; ( Código que ejecutamos con cada entidad: ).
 642  8A3A
 643  8A3A              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 644  8A3A
 645  8A3A C5           15 push bc 												; Nº de entidades en curso.
 646  8A3B
 647  8A3B CD EA 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 648  8A3E
 649  8A3E              ; Existe "Entidad_guía" ???.
 650  8A3E              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 651  8A3E
 652  8A3E              ;	ld a,(Ctrl_3)
 653  8A3E              ;	bit 1,a
 654  8A3E              ;	jr nz,22F
 655  8A3E
 656  8A3E              ; Almacén de "Movimientos_masticados" lleno ???
 657  8A3E              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 658  8A3E              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 659  8A3E
 660  8A3E              ;;	ld a,(Ctrl_3)
 661  8A3E              ;;	bit 3,a
 662  8A3E              ;;	jr nz,22F
 663  8A3E
 664  8A3E              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 665  8A3E
 666  8A3E              ;	ld hl,Ctrl_2
 667  8A3E              ;	set 5,(hl)
 668  8A3E              ;	ld hl,Ctrl_3
 669  8A3E              ;	set 1,(hl)
 670  8A3E
 671  8A3E              ; Impacto ???
 672  8A3E
 673  8A3E              ;22 ld a,(Impacto)
 674  8A3E              ;	and a
 675  8A3E              ;	jr z,8F
 676  8A3E
 677  8A3E              ; Hay Impacto en esta entidad.
 678  8A3E
 679  8A3E              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 680  8A3E              ;	dec (hl)
 681  8A3E              ;	jp nz,17F
 682  8A3E
 683  8A3E              ;! Velocidad de la animación de la explosión.
 684  8A3E
 685  8A3E              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 686  8A3E              ;														; _,(velocidad de la explosión).
 687  8A3E              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 688  8A3E
 689  8A3E              ;	call Repone_datos_de_borrado
 690  8A3E              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 691  8A3E
 692  8A3E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 693  8A3E
 694  8A3E              ;	ld a,(Ctrl_2)
 695  8A3E              ;	bit 1,a
 696  8A3E              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 697  8A3E
 698  8A3E              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 699  8A3E
 700  8A3E              ;	ld a,(CTRL_DESPLZ)
 701  8A3E              ;	and a
 702  8A3E              ;	jr nz,18F
 703  8A3E
 704  8A3E              ;	ld hl,Indice_Explosion_2x2-2
 705  8A3E              ;	ld (Puntero_DESPLZ_der),hl
 706  8A3E              ;	jr 19F
 707  8A3E
 708  8A3E              ;18 ld hl,Indice_Explosion_2x3-2
 709  8A3E              ;	ld (Puntero_DESPLZ_der),hl
 710  8A3E
 711  8A3E              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 712  8A3E              ;	set 1,(hl)
 713  8A3E              ;	jr 7F
 714  8A3E
 715  8A3E              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 716  8A3E              ; _con las coordenadas de la entidad almacenada en DRAW.
 717  8A3E
 718  8A3E              ;8 ld a,(Ctrl_1)
 719  8A3E              ;	bit 2,a
 720  8A3E              ;	jr z,7F
 721  8A3E
 722  8A3E              ;	ld hl,(Coordenadas_disparo_certero)
 723  8A3E              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 724  8A3E              ;														; E contiene la coordenada_X del disparo.
 725  8A3E              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 726  8A3E              ;														; H FILA, (Coordenada_y de la entidad).
 727  8A3E              ;	and a
 728  8A3E              ;	sbc hl,de
 729  8A3E
 730  8A3E              ;	call Determina_resultado_comparativa
 731  8A3E
 732  8A3E              ;	ld a,b
 733  8A3E              ;	and a
 734  8A3E              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 735  8A3E
 736  8A3E              ; ----- ----- -----
 737  8A3E
 738  8A3E              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 739  8A3E              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 740  8A3E
 741  8A3E              ;	ld hl,Ctrl_1
 742  8A3E              ;	res 2,(hl)
 743  8A3E
 744  8A3E CD 5A 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 745  8A41
 746  8A41              ;	ld a,(Ctrl_0)
 747  8A41              ;	bit 4,a
 748  8A41              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 749  8A41
 750  8A41              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 751  8A41              ; [[[
 752  8A41              ;	call Detecta_disparo_entidad
 753  8A41              ; ]]]
 754  8A41
 755  8A41 CD 43 88     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 756  8A44
 757  8A44              ;	ld hl,Ctrl_0
 758  8A44              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 759  8A44
 760  8A44 CD 33 88     17 call Store_Restore_cajas
 761  8A47
 762  8A47 C1           	pop bc
 763  8A48
 764  8A48 10 F0        	djnz 15B
 765  8A4A
 766  8A4A CD 17 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 767  8A4D
 768  8A4D              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 769  8A4D              ; Hemos gestionado todas las unidades.
 770  8A4D              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 771  8A4D
 772  8A4D              ;	ld hl,Ctrl_1
 773  8A4D              ;	res 2,(hl)
 774  8A4D
 775  8A4D 21 BF 89     16 ld hl,Ctrl_3
 776  8A50 CB C6        	set 0,(hl)											; Frame completo.
 777  8A52
 778  8A52 AF           	xor a
 779  8A53 D3 FE        	out ($fe),a
 780  8A55
 781  8A55 76           	halt
 782  8A56
 783  8A56              ; ----------------------------------------
 784  8A56
 785  8A56              ;	ld a,(Ctrl_1) 										; Existe Loop?
 786  8A56              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 787  8A56 CA 0A 8A     	jp z,Main
 788  8A59
 789  8A59              ; RECARGA DE NUEVA OLEADA.
 790  8A59
 791  8A59              ;	ld a,(Contador_de_frames)
 792  8A59              ;	ld b,a
 793  8A59              ;	ld a,(Activa_recarga_cajas)
 794  8A59              ;	cp b
 795  8A59              ;	jr z,20F
 796  8A59
 797  8A59              ;	ld hl,Ctrl_1
 798  8A59              ;	set 4,(hl)
 799  8A59              ;	jp Main
 800  8A59
 801  8A59              ;20 ld hl,Ctrl_1
 802  8A59              ;	res 4,(hl)
 803  8A59
 804  8A59              ;	ld a,(Contador_de_frames)
 805  8A59
 806  8A59              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 807  8A59              ;! _ IMPREDECIBLE !!!!
 808  8A59
 809  8A59              ;	add 10
 810  8A59              ;	ld (Clock_Entidades_en_curso),a
 811  8A59
 812  8A59              ;	jp 4B
 813  8A59
 814  8A59 C9           	ret
 815  8A5A
 816  8A5A              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 817  8A5A              ;
 818  8A5A              ;	16/11/23
 819  8A5A
 820  8A5A              ;;Gestiona_Amadeus
 821  8A5A
 822  8A5A              ;! Activa/desactiva impacto con Amadeus.
 823  8A5A
 824  8A5A              ;	ld a,(Impacto)
 825  8A5A              ;	and a
 826  8A5A              ;	jr nz,2F
 827  8A5A
 828  8A5A              ;;	call Mov_Amadeus
 829  8A5A
 830  8A5A              ;;2 ld a,(Ctrl_0)
 831  8A5A              ;;	bit 4,a
 832  8A5A              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 833  8A5A
 834  8A5A              ;;	call Guarda_foto_entidad_a_pintar
 835  8A5A              ;;	call Guarda_datos_de_borrado_Amadeus
 836  8A5A
 837  8A5A              ;;1 ld hl,Ctrl_0
 838  8A5A              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 839  8A5A
 840  8A5A              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 841  8A5A
 842  8A5A              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 843  8A5A
 844  8A5A              ;	call Calcula_numero_de_disparotes
 845  8A5A
 846  8A5A              ;;	ret
 847  8A5A
 848  8A5A              ; --------------------------------------------------------------------------------------------------------------
 849  8A5A              ;
 850  8A5A              ;	15/12/23
 851  8A5A
 852  8A5A              Mov_obj
 853  8A5A
 854  8A5A              ;	ld a,(Ctrl_2)
 855  8A5A              ;	bit 1,a
 856  8A5A              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 857  8A5A
 858  8A5A              ; Explosión:
 859  8A5A
 860  8A5A              ;	ld a,(Frames_explosion)
 861  8A5A              ;	and a
 862  8A5A              ;	jr nz,4F
 863  8A5A
 864  8A5A              ;!  Una alimaña menos!!!!!!!!!1
 865  8A5A
 866  8A5A              ; Se trataba de una Entidad_guía ???
 867  8A5A
 868  8A5A              ;	ld a,(Ctrl_2)
 869  8A5A              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 870  8A5A              ;	jr z,5F
 871  8A5A
 872  8A5A              ;	ld hl,Ctrl_3
 873  8A5A              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 874  8A5A
 875  8A5A              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 876  8A5A              ;!! _generado puede ser distinto, (aletoriedad).
 877  8A5A
 878  8A5A              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 879  8A5A              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 880  8A5A              ;	dec (hl)
 881  8A5A              ;	ld hl,Entidades_en_curso
 882  8A5A              ;	dec (hl)
 883  8A5A              ;	ld hl,Numero_de_entidades
 884  8A5A              ;	dec (hl)
 885  8A5A              ;	jr 3F
 886  8A5A
 887  8A5A              ; -----
 888  8A5A
 889  8A5A              ;	`Movemos´ la explosión.
 890  8A5A
 891  8A5A              ;4 ld hl,(Puntero_DESPLZ_der)
 892  8A5A              ;	inc hl
 893  8A5A              ;	inc hl
 894  8A5A              ;	call Extrae_address
 895  8A5A              ;;	ld (Puntero_objeto),hl
 896  8A5A
 897  8A5A              ;;	ld hl,Frames_explosion
 898  8A5A              ;;	dec (hl)
 899  8A5A
 900  8A5A              ;;	ld hl,Ctrl_0
 901  8A5A              ;;	set 4,(hl);;
 902  8A5A
 903  8A5A              ;;	jr 3F
 904  8A5A
 905  8A5A              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 906  8A5A
 907  8A5A              ;2 xor a
 908  8A5A              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 909  8A5A
 910  8A5A              ; Movemos Entidades malignas.
 911  8A5A              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 912  8A5A
 913  8A5A              ;	ld a,(Ctrl_2)
 914  8A5A              ;	bit 5,a
 915  8A5A              ;	jr nz,8F
 916  8A5A
 917  8A5A              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 918  8A5A              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 919  8A5A              ;	jr 7F
 920  8A5A
 921  8A5A              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 922  8A5A
 923  8A5A              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 924  8A5A              ;	bit 4,a
 925  8A5A              ;	ret z
 926  8A5A
 927  8A5A              ; Ha habido desplazamiento de la entidad maligna.
 928  8A5A              ; Ha llegado a zona de AMADEUS ???
 929  8A5A
 930  8A5A              ;7 ld a,(Coordenada_y)
 931  8A5A              ;	cp $14
 932  8A5A              ;	jr c,1F
 933  8A5A
 934  8A5A              ; ---------
 935  8A5A
 936  8A5A              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 937  8A5A              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 938  8A5A
 939  8A5A              ;	di
 940  8A5A              ;	call Genera_coordenadas_X
 941  8A5A              ;	call Compara_coordenadas_X
 942  8A5A              ;	ei
 943  8A5A
 944  8A5A              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 945  8A5A
 946  8A5A              ; ---------
 947  8A5A
 948  8A5A              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 949  8A5A CD C8 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 950  8A5D CD 55 8B     	call Limpia_Variables_de_borrado
 951  8A60
 952  8A60 C9           3 ret
 953  8A61
 954  8A61              ; --------------------------------------------------------------------------------------------------------------
 955  8A61              ;
 956  8A61              ;	29/1/23
 957  8A61
 958  8A61              Mov_Amadeus
 959  8A61
 960  8A61              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 961  8A61
 962  8A61 CD A7 98     	call Mov_right
 963  8A64
 964  8A64 3A 81 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 965  8A67 CB 67        	bit 4,a
 966  8A69 C8           	ret z
 967  8A6A
 968  8A6A              ; ---------
 969  8A6A
 970  8A6A              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 971  8A6A CD B8 8C     	call Repone_datos_de_borrado_Amadeus
 972  8A6D CD 55 8B     	call Limpia_Variables_de_borrado
 973  8A70
 974  8A70 C9           	ret
 975  8A71
 976  8A71              ; -----------------------------------------------------------------------------------
 977  8A71              ;
 978  8A71              ;	20/01/24
 979  8A71              ;
 980  8A71              ;
 981  8A71
 982  8A71              Construye_movimientos_masticados_entidad
 983  8A71
 984  8A71 2A 7D 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 985  8A74 E5           	push hl
 986  8A75 CD B9 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 987  8A78              ;															; _ el (Contador_de_mov_masticados).
 988  8A78 CD B5 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 989  8A7B              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 990  8A7B CD 03 98     	call Recompone_posicion_inicio
 991  8A7E
 992  8A7E CD D9 91     1 call Draw
 993  8A81 CD 9D 8A     	call Guarda_movimiento_masticado
 994  8A84
 995  8A84 CD 6C 9D     	call Movimiento
 996  8A87
 997  8A87 3A BF 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 998  8A8A CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
 999  8A8C 28 F0        	jr z,1B
1000  8A8E
1001  8A8E              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1002  8A8E              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1003  8A8E
1004  8A8E E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1005  8A8F 22 7D 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1006  8A92
1007  8A92              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1008  8A92
1009  8A92 CD D0 9E     	call Situa_en_contador_general_de_mov_masticados
1010  8A95
1011  8A95              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1012  8A95              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1013  8A95
1014  8A95 ED 4B 7F 89  	ld bc,(Contador_de_mov_masticados)
1015  8A99 71           	ld (hl),c
1016  8A9A 23           	inc hl
1017  8A9B 70           	ld (hl),b
1018  8A9C
1019  8A9C C9           	ret
1020  8A9D
1021  8A9D              ; -----------------------------------------------------------------------------------
1022  8A9D              ;
1023  8A9D              ;	28/12/23
1024  8A9D              ;
1025  8A9D              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1026  8A9D              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1027  8A9D
1028  8A9D              Guarda_movimiento_masticado
1029  8A9D
1030  8A9D ED 73 B1 89  	ld (Stack),sp
1031  8AA1 ED 7B 7D 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1032  8AA5
1033  8AA5 E5           	push hl
1034  8AA6 DD E5            push ix
1035  8AA8 FD E5            push iy
1036  8AAA
1037  8AAA ED 7B B1 89      ld sp,(Stack)
1038  8AAE
1039  8AAE              ;    push hl
1040  8AAE
1041  8AAE 2A 7F 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1042  8AB1 23           	inc hl
1043  8AB2 22 7F 89     	ld (Contador_de_mov_masticados),hl
1044  8AB5
1045  8AB5              ;	pop hl
1046  8AB5
1047  8AB5 CD B9 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1048  8AB8              ;															; _ el (Contador_de_mov_masticados).
1049  8AB8 C9               ret
1050  8AB9
1051  8AB9              ; --------------------------------------------------------------------------------------------------------------
1052  8AB9              ;
1053  8AB9              ;	12/1/24
1054  8AB9              ;
1055  8AB9              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1056  8AB9
1057  8AB9              Actualiza_Puntero_de_almacen_de_mov_masticados
1058  8AB9
1059  8AB9              ;	push hl
1060  8AB9              ;	push bc
1061  8AB9
1062  8AB9 2A 7D 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1063  8ABC 01 06 00     	ld bc,6
1064  8ABF A7           	and a
1065  8AC0 ED 4A        	adc hl,bc
1066  8AC2 22 7D 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1067  8AC5
1068  8AC5              ;	pop bc
1069  8AC5              ;	pop hl
1070  8AC5
1071  8AC5 C9           	ret
1072  8AC6
1073  8AC6              ; --------------------------------------------------------------------------------------------------------------
1074  8AC6              ;
1075  8AC6              ;	15/01/24
1076  8AC6              ;
1077  8AC6              ;	Cargamos los registros_
1078  8AC6              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1079  8AC6              ;
1080  8AC6              ;	HL contiene la dirección de la rutina de impresión.
1081  8AC6              ;	IX contiene el puntero de impresión.
1082  8AC6              ;	IY contiene (Puntero_objeto).
1083  8AC6
1084  8AC6
1085  8AC6 ED 73 B1 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1086  8ACA ED 7B 7D 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1087  8ACE
1088  8ACE FD E1        	pop iy
1089  8AD0 DD E1        	pop ix
1090  8AD2 E1           	pop hl
1091  8AD3
1092  8AD3 ED 73 7D 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1093  8AD7
1094  8AD7 ED 7B B1 89  	ld sp,(Stack)
1095  8ADB
1096  8ADB C9           	ret
1097  8ADC
1098  8ADC              ; --------------------------------------------------------------------------------------------------------------
1099  8ADC              ;
1100  8ADC              ;	28/12/23
1101  8ADC              ;
1102  8ADC              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1103  8ADC              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1104  8ADC
1105  8ADC              Guarda_foto_entidad_a_pintar
1106  8ADC
1107  8ADC 3A 81 89     	ld a,(Ctrl_0)
1108  8ADF CB 77        	bit 6,a
1109  8AE1 28 04        	jr z,5F
1110  8AE3
1111  8AE3              ;	Guarda la foto de Amadeus.
1112  8AE3
1113  8AE3              ;	call Draw
1114  8AE3              ;	call Guarda_movimiento_masticado	;! Provisional
1115  8AE3 CD BF 80     	call Guarda_foto_registros
1116  8AE6 C9           	ret
1117  8AE7
1118  8AE7              ; ENTIDADES!
1119  8AE7              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1120  8AE7
1121  8AE7 3A BF 89     5 ld a,(Ctrl_3)
1122  8AEA CB 5F        	bit 3,a
1123  8AEC 28 01        	jr z,1F
1124  8AEE
1125  8AEE              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1126  8AEE
1127  8AEE              4
1128  8AEE              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1129  8AEE C9           	ret
1130  8AEF
1131  8AEF              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1132  8AEF
1133  8AEF 3A BF 89     1 ld a,(Ctrl_3)
1134  8AF2 CB 57        	bit 2,a
1135  8AF4 20 10        	jr nz,6F
1136  8AF6
1137  8AF6              ; Entidad guía o fantasma ???
1138  8AF6
1139  8AF6 3A 86 89     	ld a,(Ctrl_2)
1140  8AF9 CB 6F        	bit 5,a
1141  8AFB 20 10        	jr nz,3F
1142  8AFD
1143  8AFD              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1144  8AFD
1145  8AFD 18 EF        	jr 4B
1146  8AFF
1147  8AFF              ; ENTIDAD_GUÍA:
1148  8AFF              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1149  8AFF              ; _guardando "movimientos_masticados".
1150  8AFF
1151  8AFF 3A BF 89     2 ld a,(Ctrl_3)
1152  8B02 CB 57        	bit 2,a
1153  8B04 28 07        	jr z,3F
1154  8B06
1155  8B06              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1156  8B06              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1157  8B06
1158  8B06 CB 97        6 res 2,a
1159  8B08 CB DF        	set 3,a
1160  8B0A 32 BF 89     	ld (Ctrl_3),a
1161  8B0D
1162  8B0D
1163  8B0D              ;	Esto sólo lo ejecuta una entidad guía.
1164  8B0D
1165  8B0D CD D9 91     3 	call Draw
1166  8B10 CD 9D 8A     	call Guarda_movimiento_masticado
1167  8B13 CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1168  8B16
1169  8B16              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1170  8B16              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1171  8B16
1172  8B16              ;	call Convierte_guia_en_fantasma
1173  8B16 C9           	ret
1174  8B17
1175  8B17              ; --------------------------------------------------------------------------------------------------------------
1176  8B17              ;
1177  8B17              ;	19/9/23
1178  8B17
1179  8B17              ;Prepara_var_pintado
1180  8B17
1181  8B17              ;	ld hl,Filas
1182  8B17              ;	ld de,Variables_de_pintado
1183  8B17              ;	ld bc,8
1184  8B17              ;	ldir
1185  8B17              ;	ret
1186  8B17
1187  8B17              ; --------------------------------------------------------------------------------------------------------------
1188  8B17
1189  8B17              ;Repone_pintar
1190  8B17
1191  8B17              ;	ld hl,Variables_de_pintado
1192  8B17              ;	ld de,Filas
1193  8B17              ;	ld bc,8
1194  8B17              ;	ldir
1195  8B17              ;	ret
1196  8B17
1197  8B17              ; *************************************************************************************************************************************************************
1198  8B17              ;
1199  8B17              ; 8/1/23
1200  8B17              ;
1201  8B17              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1202  8B17              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1203  8B17              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1204  8B17
1205  8B17              ; Destruye HL y DE !!!!!
1206  8B17
1207  8B17              Inicia_punteros_de_cajas
1208  8B17
1209  8B17 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1210  8B1A CD AF 8B         call Extrae_address
1211  8B1D 22 A3 89         ld (Puntero_store_caja),hl
1212  8B20 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1213  8B23 22 A7 89     	ld (Indice_restore_caja),hl
1214  8B26 CD AF 8B     	call Extrae_address
1215  8B29 22 A5 89     	ld (Puntero_restore_caja),hl
1216  8B2C C9               ret
1217  8B2D
1218  8B2D              ; *************************************************************************************************************************************************************
1219  8B2D              ;
1220  8B2D              ; 8/1/23
1221  8B2D              ;
1222  8B2D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1223  8B2D
1224  8B2D 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1225  8B30 22 C2 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1226  8B33 C9           	ret
1227  8B34 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1228  8B37 22 C4 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1229  8B3A C9           	ret
1230  8B3B
1231  8B3B              ; -------------------------------------------------------------------------------------------------------------
1232  8B3B              ;
1233  8B3B              ; 21/9/23
1234  8B3B              ;
1235  8B3B
1236  8B3B              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1237  8B3B
1238  8B3B              Limpia_album_Amadeus
1239  8B3B
1240  8B3B 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1241  8B3E 7E           	ld a,(hl)
1242  8B3F A7           	and a
1243  8B40 C8           	ret z
1244  8B41
1245  8B41 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1246  8B44 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1247  8B47 01 0B 00     	ld bc,11
1248  8B4A AF           	xor a
1249  8B4B 77           	ld (hl),a
1250  8B4C ED B0        	ldir
1251  8B4E
1252  8B4E 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1253  8B51 22 BD 89     	ld (End_Snapshot_Amadeus),hl
1254  8B54
1255  8B54 C9           	ret
1256  8B55
1257  8B55 21 75 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1258  8B58 11 76 89     	ld de,Variables_de_borrado+1
1259  8B5B 01 05 00     	ld bc,5
1260  8B5E AF           	xor a
1261  8B5F 77           	ld (hl),a
1262  8B60 ED B0        	ldir
1263  8B62 C9           	ret
1264  8B63
1265  8B63              ; -------------------------------------------------------------------------------------------------------------
1266  8B63              ;
1267  8B63              ; 8/9/23
1268  8B63              ;
1269  8B63
1270  8B63              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1271  8B63              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1272  8B63
1273  8B63              Calcula_numero_de_malotes
1274  8B63
1275  8B63 21 00 80     	ld hl,Album_de_fotos
1276  8B66 EB           	ex de,hl
1277  8B67 2A B7 89     	ld hl,(Stack_snapshot)
1278  8B6A
1279  8B6A 06 00        	ld b,0
1280  8B6C 7D           	ld a,l
1281  8B6D 93           	sub e
1282  8B6E 28 07        	jr z,1F
1283  8B70
1284  8B70              ; Nº de malotes no es "0".
1285  8B70
1286  8B70 D6 06        2 sub 6
1287  8B72 04           	inc b
1288  8B73 A7           	and a
1289  8B74 20 FA        	jr nz,2B
1290  8B76 78           	ld a,b
1291  8B77
1292  8B77 32 AC 89     1 ld (Numero_de_malotes),a
1293  8B7A C9           	ret
1294  8B7B
1295  8B7B              ; -------------------------------------------------------------------------------------------------------------
1296  8B7B              ;
1297  8B7B              ; 8/9/23
1298  8B7B              ;
1299  8B7B
1300  8B7B              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1301  8B7B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1302  8B7B
1303  8B7B              Calcula_malotes_Amadeus
1304  8B7B
1305  8B7B 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1306  8B7E EB           	ex de,hl
1307  8B7F 2A BD 89     	ld hl,(End_Snapshot_Amadeus)
1308  8B82
1309  8B82 7C           	ld a,h
1310  8B83 A7           	and a
1311  8B84 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1312  8B86
1313  8B86 06 00        	ld b,0
1314  8B88 7D           	ld a,l
1315  8B89 93           	sub e
1316  8B8A 28 07        	jr z,1F
1317  8B8C
1318  8B8C              ; Nº de malotes no es "0".
1319  8B8C
1320  8B8C D6 06        2 sub 6
1321  8B8E 04           	inc b
1322  8B8F A7           	and a
1323  8B90 20 FA        	jr nz,2B
1324  8B92 78           	ld a,b
1325  8B93
1326  8B93 32 AC 89     1 ld (Numero_de_malotes),a
1327  8B96 C9           	ret
1328  8B97
1329  8B97              ; -------------------------------------------------------------------------------------------------------------
1330  8B97              ;
1331  8B97              ; 28/2/23
1332  8B97              ;
1333  8B97
1334  8B97              Calcula_numero_de_disparotes
1335  8B97
1336  8B97 21 56 80     	ld hl,Album_de_fotos_disparos
1337  8B9A EB           	ex de,hl
1338  8B9B 2A BB 89     	ld hl,(End_Snapshot_disparos)
1339  8B9E
1340  8B9E 06 00        	ld b,0
1341  8BA0 7D           	ld a,l
1342  8BA1 93           	sub e
1343  8BA2 28 07        	jr z,1F
1344  8BA4
1345  8BA4              ; Nº de malotes no es "0".
1346  8BA4
1347  8BA4 D6 06        2 sub 6
1348  8BA6 04           	inc b
1349  8BA7 A7           	and a
1350  8BA8 20 FA        	jr nz,2B
1351  8BAA 78           	ld a,b
1352  8BAB
1353  8BAB 32 C1 89     1 ld (Numero_de_disparotes),a
1354  8BAE C9           	ret
1355  8BAF
1356  8BAF              ; *************************************************************************************************************************************************************
1357  8BAF              ;
1358  8BAF              ; 20/10/22
1359  8BAF              ;
1360  8BAF              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1361  8BAF              ;
1362  8BAF              ; Destruye el puntero y DE !!!!!
1363  8BAF
1364  8BAF 5E           Extrae_address ld e,(hl)
1365  8BB0 23           	inc hl
1366  8BB1 56           	ld d,(hl)
1367  8BB2 2B           	dec hl
1368  8BB3 EB           	ex de,hl
1369  8BB4 C9           	ret
1370  8BB5
1371  8BB5              ; *************************************************************************************************************************************************************
1372  8BB5              ;
1373  8BB5              ;	20/1/24
1374  8BB5              ;
1375  8BB5              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1376  8BB5              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1377  8BB5              ;
1378  8BB5              ;   Destruye HL y BC !!!!!,
1379  8BB5              ;
1380  8BB5              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1381  8BB5              ;					"0" ..... Izquierda.
1382  8BB5
1383  8BB5              Inicia_Puntero_objeto
1384  8BB5
1385  8BB5 3A 73 89     	ld a,(Cuad_objeto)
1386  8BB8 E6 01        	and 1
1387  8BBA F5           	push af
1388  8BBB CC D7 8B     	call z,Inicia_puntero_objeto_izq
1389  8BBE F1           	pop af
1390  8BBF C8           	ret z
1391  8BC0 CD C4 8B     	call Inicia_puntero_objeto_der
1392  8BC3 C9           	ret
1393  8BC4
1394  8BC4              ; Arrancamos desde la parte izquierda de la pantalla.
1395  8BC4              ; Iniciamos (Indice_Sprite_der).
1396  8BC4
1397  8BC4 2A 69 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1398  8BC7 22 6D 89     	ld (Puntero_DESPLZ_der),hl
1399  8BCA CD AF 8B     	call Extrae_address
1400  8BCD 22 63 89     	ld (Puntero_objeto),hl
1401  8BD0
1402  8BD0 2A 6B 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1403  8BD3 22 6F 89     	ld (Puntero_DESPLZ_izq),hl
1404  8BD6 C9           	ret
1405  8BD7
1406  8BD7              ; Arrancamos desde la parte derecha de la pantalla.
1407  8BD7              ; Iniciamos (Indice_Sprite_izq).
1408  8BD7
1409  8BD7 2A 6B 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1410  8BDA 22 6F 89     	ld (Puntero_DESPLZ_izq),hl
1411  8BDD CD AF 8B     	call Extrae_address
1412  8BE0 22 63 89     	ld (Puntero_objeto),hl
1413  8BE3
1414  8BE3 2A 69 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1415  8BE6 22 6D 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1416  8BE9 C9           	ret
1417  8BEA
1418  8BEA              ; **************************************************************************************************
1419  8BEA              ;
1420  8BEA              ;	31/01/24
1421  8BEA              ;
1422  8BEA              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1423  8BEA
1424  8BEA              Restore_entidad
1425  8BEA
1426  8BEA 2A A3 89     	ld hl,(Puntero_store_caja)
1427  8BED 11 5E 89     	ld de,Bandeja_DRAW
1428  8BF0 7E           	ld a,(hl)
1429  8BF1 12           	ld (de),a
1430  8BF2 23           	inc hl 											; (Tipo).
1431  8BF3
1432  8BF3 11 65 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1433  8BF6 01 02 00     	ld bc,2
1434  8BF9 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1435  8BFB
1436  8BFB 13           	inc de
1437  8BFC 7E           	ld a,(hl)
1438  8BFD 12           	ld (de),a 										; Transferimos (Attr).
1439  8BFE 23           	inc hl
1440  8BFF
1441  8BFF 11 74 89     	ld de,Impacto
1442  8C02
1443  8C02 7E           	ld a,(hl)
1444  8C03 12           	ld (de),a 										; Transferimos (Impacto).
1445  8C04 23           	inc hl
1446  8C05
1447  8C05 13           	inc de
1448  8C06
1449  8C06 01 06 00     	ld bc,6
1450  8C09 ED B0        	ldir
1451  8C0B
1452  8C0B 01 07 00     	ld bc,7
1453  8C0E ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1454  8C10              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1455  8C10 11 86 89     	ld de,Ctrl_2
1456  8C13
1457  8C13 7E           	ld a,(hl)
1458  8C14 12           	ld (de),a 										; Transferimos (Ctrl_2).
1459  8C15
1460  8C15 C9           	ret
1461  8C16
1462  8C16              ; **************************************************************************************************
1463  8C16              ;
1464  8C16              ;	08/05/23
1465  8C16              ;
1466  8C16              ;	Incrementamos los dos punteros de entidades. (+1).
1467  8C16
1468  8C16              Incrementa_punteros_de_cajas
1469  8C16
1470  8C16 2A A5 89     	ld hl,(Puntero_restore_caja)
1471  8C19 22 A3 89     	ld (Puntero_store_caja),hl
1472  8C1C 2A A7 89     	ld hl,(Indice_restore_caja)
1473  8C1F 23           	inc hl
1474  8C20 23           	inc hl
1475  8C21 22 A7 89     	ld (Indice_restore_caja),hl
1476  8C24 CD AF 8B         call Extrae_address
1477  8C27 22 A5 89         ld (Puntero_restore_caja),hl
1478  8C2A C9               ret
1479  8C2B
1480  8C2B              ; **************************************************************************************************
1481  8C2B              ;
1482  8C2B              ;	21/12/23
1483  8C2B              ;
1484  8C2B              ;	Restore_Amadeus
1485  8C2B              ;
1486  8C2B              ;	Cargamos en DRAW los parámetros de Amadeus.
1487  8C2B              ;
1488  8C2B
1489  8C2B E5           Restore_Amadeus	push hl
1490  8C2C D5           	push de
1491  8C2D C5            	push bc
1492  8C2E 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1493  8C31 11 5E 89     	ld de,Bandeja_DRAW
1494  8C34 01 2A 00     	ld bc,42
1495  8C37 ED B0        	ldir
1496  8C39 C1           	pop bc
1497  8C3A D1           	pop de
1498  8C3B E1           	pop hl
1499  8C3C C9           	ret
1500  8C3D
1501  8C3D              ; *************************************************************************************************************************************************************
1502  8C3D              ;
1503  8C3D              ;	21/12/23
1504  8C3D              ;
1505  8C3D              ;	Store_Amadeus
1506  8C3D              ;
1507  8C3D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1508  8C3D              ;
1509  8C3D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1510  8C3D              ;
1511  8C3D              ;	DESTRUYE: HL y BC y DE.
1512  8C3D
1513  8C3D 21 5E 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1514  8C40 01 2A 00     	ld bc,42
1515  8C43 ED B0        	ldir
1516  8C45 C9           	ret
1517  8C46
1518  8C46              ; -----------------------------------------------------------
1519  8C46              ;
1520  8C46              ;	21/12/23
1521  8C46              ;
1522  8C46              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1523  8C46              ;
1524  8C46              ;	Destruye: HL,BC,DE,A
1525  8C46
1526  8C46 21 5E 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1527  8C49 01 29 00     	ld bc,41
1528  8C4C AF           	xor a
1529  8C4D 77           	ld (hl),a
1530  8C4E 11 5F 89     	ld de,Bandeja_DRAW+1
1531  8C51 ED B0        	ldir
1532  8C53 C9           	ret
1533  8C54
1534  8C54              ; -----------------------------------------------------------
1535  8C54
1536  8C54              ; Teclado.
1537  8C54
1538  8C54 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1539  8C56 DB FE        	in a,($fe)
1540  8C58 E6 01        	and $01
1541  8C5A 28 02        	jr z,1f
1542  8C5C 18 F6        	jr Pulsa_ENTER
1543  8C5E C9           1 ret
1544  8C5F
1545  8C5F              ; **************************************************************************************************
1546  8C5F              ;
1547  8C5F              ; Temporización.
1548  8C5F
1549  8C5F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1550  8C5F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1551  8C5F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1552  8C5F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1553  8C5F
1554  8C5F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1555  8C5F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1556  8C5F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1557  8C5F
1558  8C5F              ; A partir de $4f61 no hace falta DELAY.
1559  8C5F
1560  8C5F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1561  8C5F
1562  8C5F 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1563  8C62 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1564  8C63 78           	LD A,B
1565  8C64 A7           	AND A
1566  8C65 20 FB        	JR NZ,wait
1567  8C67 C9           	RET
1568  8C68
1569  8C68              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1570  8C68              ;
1571  8C68              ;	5/3/23
1572  8C68              ;
1573  8C68              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1574  8C68
1575  8C68              Movimiento_Amadeus
1576  8C68
1577  8C68              ; Disparo.
1578  8C68
1579  8C68 3A D7 89     	ld a,(Disparo_Amadeus)
1580  8C6B A7           	and a
1581  8C6C 20 02        	jr nz,1F
1582  8C6E 18 15        	jr 2F
1583  8C70
1584  8C70 3E F7        1 ld a,$f7													; "5" para disparar.
1585  8C72 DB FE        	in a,($fe)
1586  8C74 E6 10        	and $10
1587  8C76
1588  8C76 F5           	push af
1589  8C77 CC 05 8D     	call z,Genera_disparo
1590  8C7A F1           	pop af
1591  8C7B 20 08        	jr nz,2F
1592  8C7D
1593  8C7D 3A D7 89     	ld a,(Disparo_Amadeus)
1594  8C80 EE 01        	xor 1
1595  8C82 32 D7 89     	ld (Disparo_Amadeus),a
1596  8C85 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1597  8C87 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1598  8C89 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1599  8C8B CC CA 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1600  8C8E
1601  8C8E 3E F7        	ld a,$f7
1602  8C90 DB FE        	in a,($fe)
1603  8C92 E6 01        	and $01
1604  8C94 C8           	ret z
1605  8C95
1606  8C95 3E F7        	ld a,$f7
1607  8C97 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1608  8C99 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1609  8C9B CC A7 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1610  8C9E C9           	ret
1611  8C9F
1612  8C9F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1613  8C9F              ;
1614  8C9F              ;	Rutina provisional para que los malotes cagen balas.
1615  8C9F
1616  8C9F              Detecta_disparo_entidad
1617  8C9F
1618  8C9F 3A DA 89     	ld a,(Disparo_entidad)
1619  8CA2 A7           	and a
1620  8CA3 C8           	ret z
1621  8CA4
1622  8CA4              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1623  8CA4
1624  8CA4              ;	ld a,$7f				; Detecta SPACE.
1625  8CA4              ;	in a,($fe)
1626  8CA4              ;	and 1
1627  8CA4              ;	ret nz
1628  8CA4
1629  8CA4 CD 05 8D     	call Genera_disparo
1630  8CA7 C9           	ret
1631  8CA8
1632  8CA8              ; ----------------------------------------------------------------------
1633  8CA8              ;
1634  8CA8              ;	8/9/23
1635  8CA8
1636  8CA8 2A BD 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1637  8CAB 2B            	dec hl
1638  8CAC 7E           	ld a,(hl)
1639  8CAD A7           	and a
1640  8CAE C8           	ret z										; Salimos si es álbum está vacío.
1641  8CAF
1642  8CAF 11 7A 89     	ld de,Variables_de_borrado+5
1643  8CB2 01 06 00     	ld bc,6
1644  8CB5 ED B8        	lddr
1645  8CB7 C9           	ret
1646  8CB8
1647  8CB8              ; ----------------------------------------------------------------------
1648  8CB8              ;
1649  8CB8              ;	9/9/23
1650  8CB8
1651  8CB8              Repone_datos_de_borrado_Amadeus
1652  8CB8
1653  8CB8 21 75 89     	ld hl,Variables_de_borrado
1654  8CBB 11 AC 80     	ld de,Album_de_fotos_Amadeus
1655  8CBE 01 06 00     	ld bc,6
1656  8CC1 ED B0        	ldir
1657  8CC3
1658  8CC3 EB           	ex de,hl
1659  8CC4 22 BD 89     	ld (End_Snapshot_Amadeus),hl
1660  8CC7
1661  8CC7 C9           	ret
1662  8CC8
1663  8CC8              ; ----------------------------------------------------------------------
1664  8CC8              ;
1665  8CC8              ;	27/10/23
1666  8CC8              ;
1667  8CC8
1668  8CC8              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1669  8CC8              ;	_ Album_de_fotos correspondiente.
1670  8CC8
1671  8CC8              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1672  8CC8              ;	_ durante el proceso de escritura.
1673  8CC8
1674  8CC8              Repone_datos_de_borrado
1675  8CC8
1676  8CC8 ED 5B B7 89  	ld de,(Stack_snapshot)
1677  8CCC 21 75 89     	ld hl,Variables_de_borrado
1678  8CCF 01 06 00     	ld bc,6
1679  8CD2 ED B0        	ldir
1680  8CD4
1681  8CD4 EB           	ex de,hl
1682  8CD5 22 B7 89     	ld (Stack_snapshot),hl
1683  8CD8
1684  8CD8 C9           	ret
1685  8CD9
1686  8CD9              ; --------------------------------------------------------------------------------------
1687  8CD9
1688  8CD9              Pinta_Amadeus
1689  8CD9
1690  8CD9 CD 7B 8B        	call Calcula_malotes_Amadeus
1691  8CDC CD 72 95     	call Extrae_foto_Amadeus
1692  8CDF CD 3B 8B     	call Limpia_album_Amadeus
1693  8CE2
1694  8CE2 C9           	ret
1695  8CE3
1696  8CE3              Pinta_entidades
1697  8CE3
1698  8CE3              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1699  8CE3
1700  8CE3 3A BF 89     	ld a,(Ctrl_3)
1701  8CE6 CB 47        	bit 0,a
1702  8CE8 C8           	ret z
1703  8CE9
1704  8CE9 CD 63 8B     	call Calcula_numero_de_malotes
1705  8CEC CD F0 94     	call Extrae_foto_entidades
1706  8CEF CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1707  8CF2
1708  8CF2 C9           	ret
1709  8CF3
1710  8CF3              ; -----------------------------------------------------------------------------------
1711  8CF3              ;
1712  8CF3              ;	10/12/23
1713  8CF3              ;
1714  8CF3              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1715  8CF3
1716  8CF3              Actualiza_relojes
1717  8CF3
1718  8CF3 3A BF 89     	ld a,(Ctrl_3)
1719  8CF6 CB 47        	bit 0,a
1720  8CF8 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1721  8CF9
1722  8CF9 21 D2 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1723  8CFC 34           	inc (hl)
1724  8CFD
1725  8CFD 34           	inc (hl)
1726  8CFE 35           	dec (hl)
1727  8CFF C0           	ret nz
1728  8D00
1729  8D00 21 D3 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1730  8D03 34           	inc (hl)
1731  8D04 C9           	ret
1732  8D05
1733  8D05              ; ---------------------------------------------------------------
1734  8D05              ;
1735  8D05              ;	21/12/23
1736  8D05
1737  8D05              ;Guarda_parametros_DRAW
1738  8D05
1739  8D05              ;	ld hl,Bandeja_DRAW
1740  8D05              ;	ld de,Almacen_de_parametros_DRAW
1741  8D05              ;	ld bc,42
1742  8D05              ;	ldir
1743  8D05              ;	ret
1744  8D05
1745  8D05              ;Recupera_parametros_DRAW
1746  8D05
1747  8D05              ;	ld hl,Almacen_de_parametros_DRAW
1748  8D05              ;	ld de,Bandeja_DRAW
1749  8D05              ;	ld bc,42
1750  8D05              ;	ldir
1751  8D05              ;	ret
1752  8D05
1753  8D05              ; ---------------------------------------------------------------
1754  8D05
1755  8D05              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D05              ; ******************************************************************************************************************************************************************************************
   2+ 8D05              ;
   3+ 8D05              ;   21/07/23
   4+ 8D05              ;
   5+ 8D05              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D05              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D05              ;
   8+ 8D05              ;
   9+ 8D05              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D05              ;
  11+ 8D05              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D05              ;               _ hacen las entidades hacia abajo.
  13+ 8D05              ;
  14+ 8D05              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D05              ;
  16+ 8D05              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D05              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D05              ;
  19+ 8D05              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D05              ;           _ la bala.
  21+ 8D05              ;
  22+ 8D05              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D05              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D05              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D05              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D05              ;           _ en el momento de generarse la bala)).
  27+ 8D05
  28+ 8D05              Genera_disparo
  29+ 8D05
  30+ 8D05              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D05              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D05              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D05              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D05              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D05              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D05              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D05
  38+ 8D05              ; Exclusiones:
  39+ 8D05
  40+ 8D05 3A 8B 89         ld a,(Vel_down)
  41+ 8D08 47               ld b,a
  42+ 8D09 3A D1 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D0C B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D0D D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D0E 3A 82 89         ld a,(Columnas)
  46+ 8D11 47               ld b,a
  47+ 8D12 3A 60 89         ld a,(Columns)
  48+ 8D15 B8               cp b
  49+ 8D16 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D17
  51+ 8D17              ; ----- ----- -----
  52+ 8D17
  53+ 8D17 3A 81 89         ld a,(Ctrl_0)
  54+ 8D1A CB 77            bit 6,a
  55+ 8D1C 20 06            jr nz,14F
  56+ 8D1E
  57+ 8D1E 3A 66 89         ld a,(Coordenada_y)
  58+ 8D21 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D23 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D24
  61+ 8D24 21 31 81     14 ld hl,Indice_disparo
  62+ 8D27 3A 67 89         ld a,(CTRL_DESPLZ)
  63+ 8D2A 4F               ld c,a
  64+ 8D2B 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D2D              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D2D              ;                                            ""        ""       "f9", B="1"
  67+ 8D2D              ;                                            ""        ""       "fb", B="2"
  68+ 8D2D              ;                                            ""        ""       "fb", B="3"
  69+ 8D2D A7               and a
  70+ 8D2E 28 10            jr z,1F
  71+ 8D30 E6 01            and 1
  72+ 8D32 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D33
  74+ 8D33 79               ld a,c
  75+ 8D34 16 F9            ld d,$f9
  76+ 8D36 23           2 inc hl
  77+ 8D37 23               inc hl
  78+ 8D38 04               inc b
  79+ 8D39 BA               cp d
  80+ 8D3A 28 04            jr z,1F
  81+ 8D3C 14               inc d
  82+ 8D3D 14               inc d
  83+ 8D3E 18 F6            jr 2B
  84+ 8D40
  85+ 8D40 CD AF 8B     1 call Extrae_address
  86+ 8D43 E5               push hl
  87+ 8D44 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D46 DD 21 B8 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D4A
  90+ 8D4A              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D4A              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D4A
  93+ 8D4A 3A 81 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D4D CB 77            bit 6,a
  95+ 8D4F 20 04            jr nz,19F
  96+ 8D51
  97+ 8D51 AF               xor a
  98+ 8D52 32 DA 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D55
 100+ 8D55 3A 73 89     19 ld a,(Cuad_objeto)
 101+ 8D58 FE 02            cp 2
 102+ 8D5A 38 66            jr c,3F
 103+ 8D5C 28 64            jr z,3F
 104+ 8D5E
 105+ 8D5E              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D5E
 107+ 8D5E E6 01            and 1
 108+ 8D60 28 30            jr z,4F
 109+ 8D62
 110+ 8D62              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D62              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D62              ;
 113+ 8D62              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D62              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D62              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D62
 117+ 8D62 2A 61 89     	ld hl,(Posicion_actual)
 118+ 8D65
 119+ 8D65              ;   Amadeus o entidad ???.
 120+ 8D65
 121+ 8D65 3A 81 89         ld a,(Ctrl_0)
 122+ 8D68 CB 77            bit 6,a
 123+ 8D6A 28 0A            jr z,8F
 124+ 8D6C
 125+ 8D6C              ; 	Dispara Amadeus.
 126+ 8D6C
 127+ 8D6C 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D6E CD E1 94         call PreviousScan
 129+ 8D71 CD E1 94         call PreviousScan
 130+ 8D74
 131+ 8D74              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D74              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D74              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D74              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D74
 136+ 8D74 18 11            jr 10F
 137+ 8D76
 138+ 8D76              ; 	Dispara Entidad.
 139+ 8D76
 140+ 8D76 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D79              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D79
 143+ 8D79              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D79              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D79
 146+ 8D79 C5               push bc
 147+ 8D7A 06 10            ld b,16
 148+ 8D7C CD D2 94     9 call NextScan
 149+ 8D7F 10 FB            djnz 9B
 150+ 8D81 C1               pop bc
 151+ 8D82 CD EC 8D         call Ajusta_disparo_parte_izquierda
 152+ 8D85 18 06            jr 17F
 153+ 8D87
 154+ 8D87              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8D87              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8D87              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8D87              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8D87
 159+ 8D87 CD EC 8D     10 call Ajusta_disparo_parte_izquierda
 160+ 8D8A CD 61 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8D8D              ;                                                      ; _al generar el disparo.
 162+ 8D8D
 163+ 8D8D              ; 	LLegados a este punto tendremos:
 164+ 8D8D              ;
 165+ 8D8D              ;       Puntero_objeto_disparo en IY.
 166+ 8D8D              ;       Rutinas_de_impresion en IX.
 167+ 8D8D              ;       Puntero_de_impresion en HL.
 168+ 8D8D              ;       Impacto/Dirección en BC.
 169+ 8D8D
 170+ 8D8D CD F4 8D     17 call Almacena_disparo
 171+ 8D90 18 52            jr 6F                                             ; RET.
 172+ 8D92
 173+ 8D92              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8D92              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8D92              ;
 176+ 8D92              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8D92              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8D92              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8D92
 180+ 8D92 2A 61 89     4 ld hl,(Posicion_actual)
 181+ 8D95
 182+ 8D95              ;   Amadeus o entidad ???.
 183+ 8D95
 184+ 8D95 3A 81 89         ld a,(Ctrl_0)
 185+ 8D98 CB 77            bit 6,a
 186+ 8D9A 28 0A            jr z,11F
 187+ 8D9C
 188+ 8D9C              ; 	Dispara Amadeus.
 189+ 8D9C
 190+ 8D9C 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8D9E CD E1 94         call PreviousScan
 192+ 8DA1 CD E1 94         call PreviousScan
 193+ 8DA4
 194+ 8DA4              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DA4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DA4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DA4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DA4
 199+ 8DA4 18 11            jr 13F
 200+ 8DA6
 201+ 8DA6              ; 	Dispara Entidad.
 202+ 8DA6
 203+ 8DA6 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DA9              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DA9
 206+ 8DA9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DA9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DA9
 209+ 8DA9 C5               push bc
 210+ 8DAA 06 10            ld b,16
 211+ 8DAC CD D2 94     12 call NextScan
 212+ 8DAF 10 FB            djnz 12B
 213+ 8DB1 C1               pop bc
 214+ 8DB2
 215+ 8DB2 CD E5 8D         call Ajusta_disparo_parte_derecha
 216+ 8DB5 18 06            jr 18F
 217+ 8DB7
 218+ 8DB7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8DB7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8DB7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8DB7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8DB7
 223+ 8DB7 CD E5 8D     13 call Ajusta_disparo_parte_derecha
 224+ 8DBA CD 61 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8DBD              ;                                                       ; _al generar el disparo.
 226+ 8DBD
 227+ 8DBD              ; LLegados a este punto tendremos:
 228+ 8DBD              ;
 229+ 8DBD              ;       Puntero_objeto_disparo en IY.
 230+ 8DBD              ;       Rutinas_de_impresion en IX.
 231+ 8DBD              ;       Puntero_de_impresion en HL.
 232+ 8DBD              ;       Impacto/Dirección en BC.
 233+ 8DBD
 234+ 8DBD CD F4 8D     18 call Almacena_disparo
 235+ 8DC0 18 22            jr 6F                                               ; RET.
 236+ 8DC2
 237+ 8DC2              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DC2
 239+ 8DC2 28 11        3 jr z,5F
 240+ 8DC4
 241+ 8DC4              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DC4              ;
 243+ 8DC4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DC4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DC4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DC4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DC4
 248+ 8DC4              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DC4              ;	   ""        ""       "f9", B="1"
 250+ 8DC4              ;	   ""        ""       "fb", B="2"
 251+ 8DC4              ; 	   ""        ""       "fb", B="3"
 252+ 8DC4
 253+ 8DC4 2A 61 89     	ld hl,(Posicion_actual)
 254+ 8DC7 CD D2 94     	call NextScan
 255+ 8DCA
 256+ 8DCA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DCA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DCA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DCA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DCA
 261+ 8DCA CD EC 8D         call Ajusta_disparo_parte_izquierda
 262+ 8DCD
 263+ 8DCD              ; 	No se produce impacto. B="$80"
 264+ 8DCD              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DCD
 266+ 8DCD 01 80 80         ld bc,$8080
 267+ 8DD0
 268+ 8DD0              ; 	LLegados a este punto tendremos:
 269+ 8DD0              ;
 270+ 8DD0              ;       Puntero_objeto_disparo en IY.
 271+ 8DD0              ;       Rutinas_de_impresion en IX.
 272+ 8DD0              ;       Puntero_de_impresion en HL.
 273+ 8DD0              ;       Impacto/Dirección en BC.
 274+ 8DD0
 275+ 8DD0 CD F4 8D         call Almacena_disparo
 276+ 8DD3 18 0F            jr 6F                                           ; RET.
 277+ 8DD5
 278+ 8DD5              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8DD5              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8DD5              ;
 281+ 8DD5              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8DD5              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8DD5              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8DD5              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8DD5
 286+ 8DD5 2A 61 89     5 ld hl,(Posicion_actual)
 287+ 8DD8 CD D2 94     	call NextScan
 288+ 8DDB
 289+ 8DDB              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8DDB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8DDB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8DDB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8DDB
 294+ 8DDB CD E5 8D         call Ajusta_disparo_parte_derecha
 295+ 8DDE
 296+ 8DDE              ; 	No se produce impacto. B="$80"
 297+ 8DDE              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8DDE
 299+ 8DDE 01 80 80     15 ld bc,$8080
 300+ 8DE1
 301+ 8DE1              ; 	LLegados a este punto tendremos:
 302+ 8DE1              ;
 303+ 8DE1              ;       Puntero_objeto_disparo en IY.
 304+ 8DE1              ;       Rutinas_de_impresion en IX.
 305+ 8DE1              ;       Puntero_de_impresion en HL.
 306+ 8DE1              ;       Impacto/Dirección en BC.
 307+ 8DE1
 308+ 8DE1 CD F4 8D         call Almacena_disparo
 309+ 8DE4
 310+ 8DE4 C9           6 ret
 311+ 8DE5
 312+ 8DE5              ; ----------------------------------------------------------------
 313+ 8DE5              ;
 314+ 8DE5              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8DE5              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8DE5              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8DE5
 318+ 8DE5 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8DE6 FE 02            cp 2
 320+ 8DE8 38 01            jr c,1F
 321+ 8DEA 23               inc hl
 322+ 8DEB C9           1 ret
 323+ 8DEC
 324+ 8DEC 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8DED FE 01        	cp 1
 326+ 8DEF 20 01        	jr nz,1F
 327+ 8DF1 2B           	dec hl
 328+ 8DF2 2B           1 dec hl
 329+ 8DF3 C9               ret
 330+ 8DF4
 331+ 8DF4              ; ----------------------------------------------------------------
 332+ 8DF4              ;
 333+ 8DF4              ;   25/02/23
 334+ 8DF4              ;
 335+ 8DF4              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8DF4              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8DF4              ;
 338+ 8DF4              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8DF4              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8DF4
 341+ 8DF4              Almacena_disparo
 342+ 8DF4
 343+ 8DF4 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8DF5 F1               pop af
 345+ 8DF6 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8DF7
 347+ 8DF7 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8DF8 E6 01            and 1
 349+ 8DFA 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8DFC              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8DFC              ; 	Dispara AMADEUS.
 352+ 8DFC
 353+ 8DFC              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8DFC              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8DFC              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8DFC              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8DFC
 358+ 8DFC C5               push bc
 359+ 8DFD 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E00 2A C4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E03 A7               and a
 362+ 8E04 ED 42            sbc hl,bc
 363+ 8E06 CC 34 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E09 C1               pop bc
 365+ 8E0A 28 54            jr z,4F
 366+ 8E0C
 367+ 8E0C 2A C4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E0F 23               inc hl
 369+ 8E10 23               inc hl
 370+ 8E11 22 C4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E14              ;                                                   ; _ Disparo_(+1).
 372+ 8E14 18 18            jr 2F
 373+ 8E16
 374+ 8E16              ; Dispara una entidad.
 375+ 8E16
 376+ 8E16 C5           1 push bc
 377+ 8E17 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E1A 2A C2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E1D A7               and a
 380+ 8E1E ED 42            sbc hl,bc
 381+ 8E20 CC 2D 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E23 C1               pop bc
 383+ 8E24 28 3A            jr z,4F
 384+ 8E26
 385+ 8E26 2A C2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E29 23               inc hl
 387+ 8E2A 23               inc hl
 388+ 8E2B 22 C2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E2E              ;                                                   ; _ Disparo_(+1).
 390+ 8E2E CD AF 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E31              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E31              ;
 393+ 8E31              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E31              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E31              ;                                                     Puntero_de_impresion en HL.
 396+ 8E31              ;                                                     Impacto/Dirección en BC.
 397+ 8E31
 398+ 8E31 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E32 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E33 23               inc hl                                          ; _ al siguiente.
 401+ 8E34 A7               and a
 402+ 8E35 20 C0            jr nz,3B
 403+ 8E37
 404+ 8E37 08               ex af,af
 405+ 8E38 ED 73 B1 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E3C F9               ld sp,hl
 407+ 8E3D
 408+ 8E3D DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E3F F5               push af                                         ; Puntero de impresión.
 410+ 8E40 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E42 C5               push bc                                         ; Control.
 412+ 8E43
 413+ 8E43 ED 7B B1 89      ld sp,(Stack)
 414+ 8E47
 415+ 8E47              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E47
 417+ 8E47 21 A0 89     	ld hl,Ctrl_1
 418+ 8E4A CB C6        	set 0,(hl)
 419+ 8E4C
 420+ 8E4C DD E5        	push ix
 421+ 8E4E E1               pop hl
 422+ 8E4F F5               push af
 423+ 8E50 DD E1            pop ix
 424+ 8E52
 425+ 8E52 CD BF 80     	call Guarda_foto_registros
 426+ 8E55
 427+ 8E55 21 A0 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E58 CB 86        	res 0,(hl)
 429+ 8E5A
 430+ 8E5A              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E5A              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E5A
 433+ 8E5A CD 34 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E5D CD 2D 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8E60
 436+ 8E60 C9           4 ret
 437+ 8E61
 438+ 8E61              ; ----------------------------------------------------------------
 439+ 8E61              ;
 440+ 8E61              ;   4/3/23
 441+ 8E61              ;
 442+ 8E61              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E61              ;   _ al generarse el disparo.
 444+ 8E61              ;
 445+ 8E61              ;       "$80" ..... No se produce colisión.
 446+ 8E61              ;       "$81" ..... Se produce colisión.
 447+ 8E61              ;
 448+ 8E61              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E61              ;         _ que forman el disparo.
 450+ 8E61
 451+ 8E61
 452+ 8E61              Comprueba_Colision
 453+ 8E61
 454+ 8E61              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E61
 456+ 8E61 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E63 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E64
 459+ 8E64 CD 9A 8E         call Modifica_H_Velocidad_disparo
 460+ 8E67
 461+ 8E67 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E68 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E6A 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E6C
 465+ 8E6C 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E6E CD 8A 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E71
 468+ 8E71 7B               ld a,e
 469+ 8E72 E6 01            and 1
 470+ 8E74 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E76              ;                                                  ; _ para activar IMPACTO.
 472+ 8E76 E1               pop hl
 473+ 8E77 E5               push hl
 474+ 8E78 CD D2 94         call NextScan
 475+ 8E7B
 476+ 8E7B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E7C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E7E 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E80              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E80 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8E82 CD 8A 8E         call Bucle_2
 482+ 8E85
 483+ 8E85 43           1 ld b,e
 484+ 8E86 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8E87 FD E1            pop iy
 486+ 8E89 C9               ret
 487+ 8E8A
 488+ 8E8A              ; ---------- ----------
 489+ 8E8A
 490+ 8E8A 06 02        Bucle_2 ld b,2
 491+ 8E8C FD 7E 00     2 ld a,(iy)
 492+ 8E8F A6               and (hl)
 493+ 8E90 28 02            jr z,1F
 494+ 8E92 1E 81            ld e,$81
 495+ 8E94 23           1 inc hl
 496+ 8E95 FD 23            inc iy
 497+ 8E97 10 F3            djnz 2B
 498+ 8E99 C9               ret
 499+ 8E9A
 500+ 8E9A              ; ---------- ----------
 501+ 8E9A              ;
 502+ 8E9A              ;   21/7/23
 503+ 8E9A
 504+ 8E9A              Modifica_H_Velocidad_disparo
 505+ 8E9A
 506+ 8E9A 3A D1 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8E9D FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8E9F D0               ret nc                                         ; _ incrementamos H.
 509+ 8EA0 24               inc h
 510+ 8EA1
 511+ 8EA1 C9               ret
 512+ 8EA2
 513+ 8EA2              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EA2              ;
 515+ 8EA2              ;   04/12/23
 516+ 8EA2              ;
 517+ 8EA2              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EA2              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EA2              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EA2              ;
 521+ 8EA2              ;   MODIFICA: HL,DE,B y A.
 522+ 8EA2
 523+ 8EA2              Genera_coordenadas_X
 524+ 8EA2
 525+ 8EA2              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EA2              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EA2
 528+ 8EA2              ;   Limpiamos almacenes.
 529+ 8EA2
 530+ 8EA2 CD D3 8E         call Limpia_Coordenadas_X
 531+ 8EA5
 532+ 8EA5              ;   Almacenamos coordenadas X.
 533+ 8EA5
 534+ 8EA5              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8EA5
 536+ 8EA5 2A 7B 89         ld hl,(Puntero_de_impresion)
 537+ 8EA8 11 CE 89         ld de,Coordenadas_X_Entidad
 538+ 8EAB 06 02            ld b,2
 539+ 8EAD
 540+ 8EAD 3A 67 89         ld a,(CTRL_DESPLZ)
 541+ 8EB0 A7               and a
 542+ 8EB1 28 01            jr z,1F
 543+ 8EB3 04               inc b
 544+ 8EB4
 545+ 8EB4 CD CA 8E     1 call Guarda_coordenadas_X
 546+ 8EB7
 547+ 8EB7              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8EB7
 549+ 8EB7 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 8EBA 11 CB 89         ld de,Coordenadas_X_Amadeus
 551+ 8EBD 06 02            ld b,2
 552+ 8EBF
 553+ 8EBF 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 8EC2 A7               and a
 555+ 8EC3 28 01            jr z,2F
 556+ 8EC5 04               inc b
 557+ 8EC6
 558+ 8EC6 CD CA 8E     2 call Guarda_coordenadas_X
 559+ 8EC9
 560+ 8EC9              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8EC9
 562+ 8EC9 C9               ret
 563+ 8ECA
 564+ 8ECA              ; ----- ----- ----- ----- -----
 565+ 8ECA
 566+ 8ECA 7D           Guarda_coordenadas_X  ld a,l
 567+ 8ECB E6 1F            and $1f
 568+ 8ECD 12           1 ld (de),a
 569+ 8ECE 3C               inc a
 570+ 8ECF 13               inc de
 571+ 8ED0 10 FB            djnz 1B
 572+ 8ED2 C9               ret
 573+ 8ED3
 574+ 8ED3 AF           Limpia_Coordenadas_X xor a
 575+ 8ED4 06 06            ld b,6
 576+ 8ED6 21 CB 89         ld hl,Coordenadas_X_Amadeus
 577+ 8ED9 77           1 ld (hl),a
 578+ 8EDA 23               inc hl
 579+ 8EDB 10 FC            djnz 1B
 580+ 8EDD C9               ret
 581+ 8EDE
 582+ 8EDE              ; ----- ----- ----- ----- -----
 583+ 8EDE
 584+ 8EDE              Compara_coordenadas_X
 585+ 8EDE
 586+ 8EDE 06 03            ld b,3
 587+ 8EE0 11 D0 89         ld de,Coordenadas_X_Entidad+2
 588+ 8EE3
 589+ 8EE3 1A               ld a,(de)
 590+ 8EE4 A7               and a
 591+ 8EE5 20 01            jr nz,2F
 592+ 8EE7 05               dec b
 593+ 8EE8
 594+ 8EE8 1B           2 dec de
 595+ 8EE9 1B               dec de
 596+ 8EEA 21 CB 89         ld hl,Coordenadas_X_Amadeus
 597+ 8EED
 598+ 8EED D5           1 push de
 599+ 8EEE E5               push hl
 600+ 8EEF C5               push bc
 601+ 8EF0
 602+ 8EF0 CD FA 8E         call Comparando
 603+ 8EF3
 604+ 8EF3 C1               pop bc
 605+ 8EF4 E1               pop hl
 606+ 8EF5 D1               pop de
 607+ 8EF6
 608+ 8EF6 13               inc de
 609+ 8EF7 10 F4            djnz 1B
 610+ 8EF9
 611+ 8EF9 C9               ret
 612+ 8EFA
 613+ 8EFA              ; ----- ----- ----- ----- -----
 614+ 8EFA              ;
 615+ 8EFA              ;   4/12/23
 616+ 8EFA              ;
 617+ 8EFA              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8EFA
 619+ 8EFA 06 03        Comparando ld b,3
 620+ 8EFC 1A               ld a,(de)
 621+ 8EFD 4E           2 ld c,(hl)
 622+ 8EFE B9               cp c
 623+ 8EFF 28 04            jr z,1F
 624+ 8F01 23               inc hl
 625+ 8F02 10 F9            djnz 2B
 626+ 8F04 C9               ret
 627+ 8F05
 628+ 8F05 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F07 32 74 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F0A 21 C6 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F0D CB D6            set 2,(hl)
 632+ 8F0F C9               ret
 633+ 8F10
 634+ 8F10              ; -----------------------------------------------------------------------
 635+ 8F10              ;
 636+ 8F10              ;   7/12/23
 637+ 8F10              ;
 638+ 8F10
 639+ 8F10              Detecta_colision_nave_entidad
 640+ 8F10
 641+ 8F10              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F10
 643+ 8F10 FD 2A 63 89      ld iy,(Puntero_objeto)
 644+ 8F14 2A 7B 89         ld hl,(Puntero_de_impresion)
 645+ 8F17
 646+ 8F17 E5               push hl
 647+ 8F18
 648+ 8F18              ; ----- ----- -----
 649+ 8F18 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F1A 06 0A            ld b,10
 651+ 8F1C CD 4C 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F1F 7B               ld a,e
 653+ 8F20 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F22 38 0E            jr c,3F
 655+ 8F24
 656+ 8F24              ; LLegados a este punto:
 657+ 8F24              ;
 658+ 8F24              ;   HAY COLISIÓN !!!!!.
 659+ 8F24              ;
 660+ 8F24              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F24              ;   SET el bit3 de (Impacto2).
 662+ 8F24              ;
 663+ 8F24              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F24
 665+ 8F24 21 74 89         ld hl,Impacto
 666+ 8F27 36 01            ld (hl),1
 667+ 8F29 21 C6 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F2C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F2E CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F30
 671+ 8F30 18 18            jr 1F
 672+ 8F32
 673+ 8F32              ; -----
 674+ 8F32
 675+ 8F32 E1           3 pop hl
 676+ 8F33 CD D2 94         call NextScan
 677+ 8F36 E5               push hl
 678+ 8F37 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F38 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F3A 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F3C 30 0C            jr nc,1F
 682+ 8F3E              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F3E 10 DC            djnz 2B
 684+ 8F40
 685+ 8F40              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F40
 687+ 8F40              ; LLegados a este punto:
 688+ 8F40              ;
 689+ 8F40              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F40              ;
 691+ 8F40              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F40              ;   RES el bit2 de (Impacto2).
 693+ 8F40              ;
 694+ 8F40              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F40              ;   Lo colocamos a "0".
 696+ 8F40
 697+ 8F40 21 C6 89         ld hl,Impacto2
 698+ 8F43 CB 96            res 2,(hl)
 699+ 8F45 2A C7 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F48 36 00            ld (hl),0
 701+ 8F4A
 702+ 8F4A E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F4B C9               ret
 704+ 8F4C
 705+ 8F4C               ; ---------- ----------
 706+ 8F4C
 707+ 8F4C C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F4D 3A 60 89         ld a,(Columns)
 709+ 8F50 47               ld b,a
 710+ 8F51 FD 7E 00     2 ld a,(iy)
 711+ 8F54 BE               cp (hl)
 712+ 8F55 28 01            jr z,1F
 713+ 8F57
 714+ 8F57 1C               inc e
 715+ 8F58
 716+ 8F58 23           1 inc hl
 717+ 8F59 FD 23            inc iy
 718+ 8F5B 10 F4            djnz 2B
 719+ 8F5D C1               pop bc
 720+ 8F5E C9               ret
 721+ 8F5F
 722+ 8F5F              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F5F              ;
 724+ 8F5F              ;   13/03/23
 725+ 8F5F              ;
 726+ 8F5F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F5F              ;
 728+ 8F5F              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F5F
 730+ 8F5F 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F62 7E               ld a,(hl)
 732+ 8F63 A7               and a
 733+ 8F64 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F65
 735+ 8F65 44               ld b,h
 736+ 8F66 4D               ld c,l
 737+ 8F67 2A B9 89         ld hl,(Stack_snapshot_disparos)
 738+ 8F6A E5               push hl
 739+ 8F6B A7               and a
 740+ 8F6C ED 42            sbc hl,bc
 741+ 8F6E E5               push hl
 742+ 8F6F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F70
 744+ 8F70 E1               pop hl
 745+ 8F71 54               ld d,h
 746+ 8F72 5D               ld e,l
 747+ 8F73 1B               dec de
 748+ 8F74 ED B8            lddr                                                ; Limpiamos.
 749+ 8F76
 750+ 8F76 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 8F79 22 B9 89         ld (Stack_snapshot_disparos),hl
 752+ 8F7C
 753+ 8F7C C9               ret
 754+ 8F7D
 755+ 8F7D              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F7D              ;
 757+ 8F7D              ;   18/07/23
 758+ 8F7D              ;
 759+ 8F7D
 760+ 8F7D              Motor_de_disparos
 761+ 8F7D
 762+ 8F7D              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F7D
 764+ 8F7D 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F80 2A C4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8F83
 767+ 8F83 CD AF 8B     2 call Extrae_address
 768+ 8F86 7E               ld a,(hl)
 769+ 8F87 A7               and a
 770+ 8F88 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8F8A
 772+ 8F8A              ; ----- ----- ----- ----- ----- -----
 773+ 8F8A
 774+ 8F8A C5               push bc
 775+ 8F8B CD 4F 90         call foto_disparo_a_borrar
 776+ 8F8E
 777+ 8F8E              ; Existe colisión con este disparo???
 778+ 8F8E
 779+ 8F8E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8F8F 7E               ld a,(hl)
 781+ 8F90 2B               dec hl
 782+ 8F91 E6 01            and 1
 783+ 8F93 28 1D            jr z,9F
 784+ 8F95
 785+ 8F95              ;   En este punto:
 786+ 8F95              ;
 787+ 8F95              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8F95              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8F95              ;   _con la entidad).
 790+ 8F95              ;
 791+ 8F95              ;   Disparo_2A defw 0                                ; Control.
 792+ 8F95              ;    defw 0                                          ; Puntero objeto.
 793+ 8F95              ;    defw 0                                          ; Puntero de impresión.
 794+ 8F95              ;    defw 0                                          ; Rutina de impresión.
 795+ 8F95
 796+ 8F95 E5               push hl
 797+ 8F96
 798+ 8F96 06 04            ld b,4
 799+ 8F98 23           19 inc hl
 800+ 8F99 10 FD            djnz 19B
 801+ 8F9B
 802+ 8F9B CD AF 8B         call Extrae_address
 803+ 8F9E CD A9 9B         call Genera_coordenadas_disparo
 804+ 8FA1
 805+ 8FA1              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FA1
 807+ 8FA1 21 C9 89         ld hl,Coordenadas_disparo_certero
 808+ 8FA4 72               ld (hl),d
 809+ 8FA5 23               inc hl
 810+ 8FA6 73               ld (hl),e
 811+ 8FA7
 812+ 8FA7              ; Elimino el disparo de la base de datos.
 813+ 8FA7
 814+ 8FA7 E1               pop hl
 815+ 8FA8 CD CE 90         call Elimina_disparo_de_base_de_datos
 816+ 8FAB 21 C6 89         ld hl,Impacto2
 817+ 8FAE CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FB0
 819+ 8FB0 18 06            jr 11F
 820+ 8FB2
 821+ 8FB2 CD 78 90     9 call Mueve_disparo
 822+ 8FB5 CD 4F 90         call foto_disparo_a_borrar
 823+ 8FB8
 824+ 8FB8 C1           11 pop bc
 825+ 8FB9 18 04            jr 7F
 826+ 8FBB
 827+ 8FBB              ; ----- ----- ----- ----- ----- -----
 828+ 8FBB
 829+ 8FBB ED 42        1 sbc hl,bc
 830+ 8FBD 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8FBF
 832+ 8FBF 2A C4 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FC2 23               inc hl
 834+ 8FC3 23               inc hl
 835+ 8FC4 22 C4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FC7 18 BA            jr 2B
 837+ 8FC9
 838+ 8FC9 CD 34 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FCC              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FCC
 841+ 8FCC              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FCC
 843+ 8FCC 01 9F 86         ld bc,Disparo_11
 844+ 8FCF 2A C2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FD2
 846+ 8FD2 CD AF 8B     5 call Extrae_address
 847+ 8FD5 7E               ld a,(hl)
 848+ 8FD6 A7               and a
 849+ 8FD7 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8FD9
 851+ 8FD9              ; ----- ----- ----- ----- ----- -----
 852+ 8FD9
 853+ 8FD9 C5               push bc
 854+ 8FDA CD 4F 90         call foto_disparo_a_borrar
 855+ 8FDD
 856+ 8FDD              ; Existe colisión con este disparo???
 857+ 8FDD
 858+ 8FDD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8FDE 7E               ld a,(hl)
 860+ 8FDF 2B               dec hl
 861+ 8FE0 E6 01            and 1
 862+ 8FE2 28 4D            jr z,10F
 863+ 8FE4
 864+ 8FE4              ;! La colisión se produce con Amadeus???
 865+ 8FE4              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8FE4
 867+ 8FE4 E5               push hl
 868+ 8FE5
 869+ 8FE5 06 04            ld b,4
 870+ 8FE7 23           16 inc hl
 871+ 8FE8 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8FEA
 873+ 8FEA CD AF 8B         call Extrae_address
 874+ 8FED CD A9 9B         call Genera_coordenadas_disparo
 875+ 8FF0
 876+ 8FF0 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8FF1 FE 16            cp $16
 878+ 8FF3 38 2A            jr c,15F
 879+ 8FF5
 880+ 8FF5
 881+ 8FF5              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8FF5
 883+ 8FF5 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8FF6
 885+ 8FF6              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8FF6
 887+ 8FF6 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 8FF9
 889+ 8FF9              ; Coordenada X de Amadeus en D.
 890+ 8FF9
 891+ 8FF9 7D               ld a,l
 892+ 8FFA E6 1F            and $1F
 893+ 8FFC 57               ld d,a
 894+ 8FFD
 895+ 8FFD 21 BB 86         ld hl,Amadeus_db+8
 896+ 9000 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9001
 898+ 9001 21 CB 89         ld hl,Coordenadas_X_Amadeus
 899+ 9004 CD CA 8E         call Guarda_coordenadas_X
 900+ 9007
 901+ 9007 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9008
 903+ 9008              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9008
 905+ 9008 06 02            ld b,2
 906+ 900A C5           20 push bc
 907+ 900B
 908+ 900B 06 03            ld b,3
 909+ 900D 21 CB 89         ld hl,Coordenadas_X_Amadeus
 910+ 9010 7E           18 ld a,(hl)
 911+ 9011 BA               cp d
 912+ 9012 20 04            jr nz,17F
 913+ 9014
 914+ 9014              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9014
 916+ 9014 C1               pop bc
 917+ 9015 E1               pop hl
 918+ 9016 18 0D            jr 14F
 919+ 9018
 920+ 9018 23           17 inc hl
 921+ 9019 10 F5            djnz 18B
 922+ 901B
 923+ 901B 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 901C
 925+ 901C C1               pop bc
 926+ 901D 10 EB            djnz 20B
 927+ 901F
 928+ 901F
 929+ 901F              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 901F              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 901F
 932+ 901F E1           15 pop hl
 933+ 9020 23               inc hl
 934+ 9021 35               dec (hl)
 935+ 9022 2B               dec hl
 936+ 9023 18 0C            jr 10F
 937+ 9025
 938+ 9025              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9025              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9025
 941+ 9025 E5           14 push hl
 942+ 9026 CD CE 90         call Elimina_disparo_de_base_de_datos
 943+ 9029 21 C6 89         ld hl,Impacto2
 944+ 902C CB CE            set 1,(hl)
 945+ 902E E1               pop hl
 946+ 902F 18 06            jr 12F
 947+ 9031
 948+ 9031              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9031
 950+ 9031 CD 78 90     10 call Mueve_disparo
 951+ 9034 CD 4F 90         call foto_disparo_a_borrar
 952+ 9037 C1           12 pop bc
 953+ 9038
 954+ 9038 18 04            jr 8F
 955+ 903A
 956+ 903A              ; ----- ----- ----- ----- ----- -----
 957+ 903A
 958+ 903A ED 42        4 sbc hl,bc
 959+ 903C 28 0A            jr z,6F
 960+ 903E
 961+ 903E 2A C2 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9041 23               inc hl
 963+ 9042 23               inc hl
 964+ 9043 22 C2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9046 18 8A            jr 5B
 966+ 9048
 967+ 9048 CD 2D 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 904B CD D3 8E         call Limpia_Coordenadas_X
 969+ 904E C9               ret
 970+ 904F
 971+ 904F              ; ------------------------------------------------------------------
 972+ 904F
 973+ 904F              foto_disparo_a_borrar
 974+ 904F
 975+ 904F 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9050 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9051 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9052
 979+ 9052 E5               push hl
 980+ 9053 23               inc hl
 981+ 9054 23               inc hl
 982+ 9055 ED 73 B1 89      ld (Stack),sp
 983+ 9059 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 905A FD E1            pop iy
 985+ 905C DD E1            pop ix
 986+ 905E E1               pop hl
 987+ 905F ED 7B B1 89      ld sp,(Stack)
 988+ 9063 3A A0 89         ld a,(Ctrl_1)
 989+ 9066 CB C7            set 0,a
 990+ 9068 32 A0 89         ld (Ctrl_1),a
 991+ 906B CD BF 80         call Guarda_foto_registros
 992+ 906E 3A A0 89         ld a,(Ctrl_1)
 993+ 9071 CB 87            res 0,a
 994+ 9073 32 A0 89         ld (Ctrl_1),a
 995+ 9076 E1               pop hl
 996+ 9077 C9               ret
 997+ 9078
 998+ 9078              ;---------------------------------------------------
 999+ 9078              ;
1000+ 9078              ;   18/07/23
1001+ 9078              ;
1002+ 9078
1003+ 9078              Mueve_disparo
1004+ 9078
1005+ 9078              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9078              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9078              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9078
1009+ 9078 E5               push hl
1010+ 9079
1011+ 9079 7E               ld a,(hl)
1012+ 907A
1013+ 907A 06 04            ld b,4
1014+ 907C 23           1 inc hl
1015+ 907D 10 FD            djnz 1B
1016+ 907F
1017+ 907F              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 907F
1019+ 907F CD AF 8B         call Extrae_address
1020+ 9082
1021+ 9082 E6 01            and 1
1022+ 9084 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9086
1024+ 9086              ; Disparo hacia arriba, (Amadeus).
1025+ 9086
1026+ 9086              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9086              ; _ de la dificultad.
1028+ 9086
1029+ 9086 CD E1 94         call PreviousScan
1030+ 9089 CD E1 94         call PreviousScan
1031+ 908C CD E1 94         call PreviousScan
1032+ 908F CD E1 94         call PreviousScan
1033+ 9092
1034+ 9092              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9092
1036+ 9092 7C               ld a,h
1037+ 9093 FE 40            cp $40
1038+ 9095 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9097
1040+ 9097              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9097
1042+ 9097 EB               ex de,hl
1043+ 9098 06 04            ld b,4
1044+ 909A 2B           6 dec hl
1045+ 909B 10 FD            djnz 6B
1046+ 909D
1047+ 909D CD CE 90         call Elimina_disparo_de_base_de_datos
1048+ 90A0 E1               pop hl
1049+ 90A1 18 10            jr 7F
1050+ 90A3
1051+ 90A3              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90A3              ; HL contiene el puntero de impresión del disparo.
1053+ 90A3              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90A3
1055+ 90A3 D5           3 push de
1056+ 90A4 C5               push bc
1057+ 90A5
1058+ 90A5 CD 61 8E         call Comprueba_Colision
1059+ 90A8
1060+ 90A8              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90A8
1062+ 90A8 78               ld a,b
1063+ 90A9
1064+ 90A9 C1               pop bc
1065+ 90AA D1               pop de
1066+ 90AB
1067+ 90AB EB               ex de,hl
1068+ 90AC
1069+ 90AC 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90AD 23               inc hl                                      ; _ movimiento.
1071+ 90AE 72               ld (hl),d
1072+ 90AF
1073+ 90AF E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90B0
1075+ 90B0 23               inc hl                                      ; _ en curso.
1076+ 90B1 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 90B2 2B               dec hl
1078+ 90B3
1079+ 90B3 C9           7 ret
1080+ 90B4
1081+ 90B4              ; Disparo hacia abajo, (Entidad).
1082+ 90B4
1083+ 90B4 3A D1 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 90B7 47               ld b,a
1085+ 90B8
1086+ 90B8 CD D2 94     4 call NextScan
1087+ 90BB 10 FB            djnz 4B
1088+ 90BD
1089+ 90BD              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 90BD
1091+ 90BD 7C               ld a,h
1092+ 90BE FE 58            cp $58
1093+ 90C0 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90C2
1095+ 90C2 EB               ex de,hl
1096+ 90C3 06 04            ld b,4
1097+ 90C5 2B           5 dec hl
1098+ 90C6 10 FD            djnz 5B
1099+ 90C8
1100+ 90C8 CD CE 90         call Elimina_disparo_de_base_de_datos
1101+ 90CB E1               pop hl
1102+ 90CC 18 E5            jr 7B
1103+ 90CE
1104+ 90CE              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 90CE
1106+ 90CE 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90D1 AF               xor a
1108+ 90D2 77               ld (hl),a
1109+ 90D3 54               ld d,h
1110+ 90D4 5D               ld e,l
1111+ 90D5 13               inc de
1112+ 90D6 ED B0            ldir
1113+ 90D8 C9               ret
1114+ 90D9
1115+ 90D9              ; -----------------------------------------------------------------
1116+ 90D9              ;
1117+ 90D9              ;   7/12/23
1118+ 90D9              ;
1119+ 90D9
1120+ 90D9 3A C6 89     Selector_de_impactos ld a,(Impacto2)
1121+ 90DC A7               and a
1122+ 90DD C8               ret z
1123+ 90DE
1124+ 90DE              ; Analizamos si hay impacto por disparos.
1125+ 90DE
1126+ 90DE              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 90DE
1128+ 90DE CB 4F            bit 1,a
1129+ 90E0 28 07            jr z,1F
1130+ 90E2
1131+ 90E2 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 90E5 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 90E7 18 08            jr 2F
1134+ 90E9
1135+ 90E9 CB 47        1 bit 0,a
1136+ 90EB C8               ret z
1137+ 90EC
1138+ 90EC              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 90EC
1140+ 90EC 21 A0 89         ld hl,Ctrl_1
1141+ 90EF CB D6            set 2,(hl)
1142+ 90F1
1143+ 90F1 C9           2 ret
1144+ 90F2
1145+ 90F2              ; -----------------------------------------------------------------
1146+ 90F2              ;
1147+ 90F2              ;   25/04/23
1148+ 90F2              ;
1149+ 90F2
1150+ 90F2              Determina_resultado_comparativa
1151+ 90F2
1152+ 90F2              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 90F2              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 90F2              ;
1155+ 90F2              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 90F2              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 90F2              ;
1158+ 90F2              ;   SBC HL,DE
1159+ 90F2
1160+ 90F2              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 90F2              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 90F2
1163+ 90F2              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 90F2              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 90F2
1166+ 90F2
1167+ 90F2 3A 73 89         ld a,(Cuad_objeto)
1168+ 90F5 FE 02            cp 2
1169+ 90F7 28 26            jr z,2F
1170+ 90F9 38 24            jr c,2F
1171+ 90FB
1172+ 90FB              ; Cuadrantes 3º y 4º
1173+ 90FB
1174+ 90FB E6 01            and 1
1175+ 90FD 28 10            jr z,4F
1176+ 90FF
1177+ 90FF              ; Cuadrante 3º
1178+ 90FF
1179+ 90FF 7C               ld a,h
1180+ 9100 06 00            ld b,0
1181+ 9102
1182+ 9102 CD 8D 91         call Compara_cositas_H3
1183+ 9105
1184+ 9105 04               inc b
1185+ 9106 05               dec b
1186+ 9107 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9108
1188+ 9108 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9109 06 00            ld b,0
1190+ 910B
1191+ 910B CD 9F 91         call Compara_cositas_L3
1192+ 910E C9               ret
1193+ 910F
1194+ 910F              ; Cuadrante 4º
1195+ 910F
1196+ 910F 7C           4 ld a,h
1197+ 9110 06 00            ld b,0
1198+ 9112
1199+ 9112 CD B1 91         call Compara_cositas_H4
1200+ 9115
1201+ 9115 04               inc b
1202+ 9116 05               dec b
1203+ 9117 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9118
1205+ 9118 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9119 06 00            ld b,0
1207+ 911B
1208+ 911B CD C7 91         call Compara_cositas_L4
1209+ 911E C9               ret
1210+ 911F
1211+ 911F              ; Cuadrantes 1º y 2º.
1212+ 911F
1213+ 911F 28 10        2 jr z,3F
1214+ 9121
1215+ 9121              ; 1er Cuadrante
1216+ 9121
1217+ 9121 7C               ld a,h
1218+ 9122 06 00            ld b,0
1219+ 9124
1220+ 9124 CD 65 91         call Compara_cositas_H1
1221+ 9127
1222+ 9127 04               inc b
1223+ 9128 05               dec b
1224+ 9129 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 912A
1226+ 912A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 912B 06 00            ld b,0
1228+ 912D
1229+ 912D CD 7B 91         call Compara_cositas_L1
1230+ 9130 C9               ret
1231+ 9131
1232+ 9131
1233+ 9131              ; 2º Cuadrante
1234+ 9131
1235+ 9131 7C           3 ld a,h
1236+ 9132 06 00            ld b,0
1237+ 9134
1238+ 9134 CD 41 91         call Compara_cositas_H2
1239+ 9137
1240+ 9137 04               inc b
1241+ 9138 05               dec b
1242+ 9139 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 913A
1244+ 913A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 913B 06 00            ld b,0
1246+ 913D
1247+ 913D CD 53 91         call Compara_cositas_L2
1248+ 9140 C9               ret
1249+ 9141
1250+ 9141 A7           Compara_cositas_H2 and a
1251+ 9142 28 0D            jr z,1F
1252+ 9144              ;    cp $fd
1253+ 9144              ;    jr z,1F
1254+ 9144              ;    cp $fe
1255+ 9144              ;    jr z,1F
1256+ 9144 FE FF            cp $ff
1257+ 9146 28 09            jr z,1F
1258+ 9148 FE 01            cp $01
1259+ 914A 28 05            jr z,1F
1260+ 914C FE 02            cp $02
1261+ 914E 28 01            jr z,1F
1262+ 9150 C0               ret nz
1263+ 9151 04           1 inc b
1264+ 9152 C9               ret
1265+ 9153
1266+ 9153 A7           Compara_cositas_L2 and a
1267+ 9154 28 0D            jr z,1F
1268+ 9156              ;    cp $fd
1269+ 9156              ;    jr z,1F
1270+ 9156 FE FE            cp $fe
1271+ 9158 28 09            jr z,1F
1272+ 915A FE FF            cp $ff
1273+ 915C 28 05            jr z,1F
1274+ 915E FE 01            cp $01
1275+ 9160 28 01            jr z,1F
1276+ 9162              ;    cp $02
1277+ 9162              ;    jr z,1F
1278+ 9162 C0               ret nz
1279+ 9163 04           1 inc b
1280+ 9164 C9               ret
1281+ 9165
1282+ 9165 A7           Compara_cositas_H1 and a
1283+ 9166 28 11            jr z,1F
1284+ 9168              ;    cp $fd
1285+ 9168              ;    jr z,1F
1286+ 9168              ;    cp $fe
1287+ 9168              ;    jr z,1F
1288+ 9168 FE FF            cp $ff
1289+ 916A 28 0D            jr z,1F
1290+ 916C FE 01            cp $01
1291+ 916E 28 09            jr z,1F
1292+ 9170 FE 02            cp $02
1293+ 9172 28 05            jr z,1F
1294+ 9174 FE 03            cp $03
1295+ 9176 28 01            jr z,1F
1296+ 9178 C0               ret nz
1297+ 9179 04           1 inc b
1298+ 917A C9               ret
1299+ 917B
1300+ 917B A7           Compara_cositas_L1 and a
1301+ 917C 28 0D            jr z,1F
1302+ 917E              ;    cp $fd
1303+ 917E              ;    jr z,1F
1304+ 917E              ;    cp $fe
1305+ 917E              ;    jr z,1F
1306+ 917E              ;    cp $ff
1307+ 917E              ;    jr z,1F
1308+ 917E FE 01            cp $01
1309+ 9180 28 09            jr z,1F
1310+ 9182 FE 02            cp $02
1311+ 9184 28 05            jr z,1F
1312+ 9186 FE 03            cp $03
1313+ 9188 28 01            jr z,1F
1314+ 918A C0               ret nz
1315+ 918B 04           1 inc b
1316+ 918C C9               ret
1317+ 918D
1318+ 918D A7           Compara_cositas_H3 and a
1319+ 918E 28 0D            jr z,1F
1320+ 9190              ;    cp $fd
1321+ 9190              ;    jr z,1F
1322+ 9190 FE FE            cp $fe
1323+ 9192 28 09            jr z,1F
1324+ 9194 FE FF            cp $ff
1325+ 9196 28 05            jr z,1F
1326+ 9198 FE 01            cp $01
1327+ 919A 28 01            jr z,1F
1328+ 919C              ;    cp $02
1329+ 919C              ;    jr z,1F
1330+ 919C              ;    cp $03
1331+ 919C              ;    jr z,1F
1332+ 919C C0               ret nz
1333+ 919D 04           1 inc b
1334+ 919E C9               ret
1335+ 919F
1336+ 919F A7           Compara_cositas_L3 and a
1337+ 91A0 28 0D            jr z,1F
1338+ 91A2              ;    cp $fd
1339+ 91A2              ;    jr z,1F
1340+ 91A2              ;    cp $fe
1341+ 91A2              ;    jr z,1F
1342+ 91A2              ;    cp $ff
1343+ 91A2              ;    jr z,1F
1344+ 91A2 FE 01            cp $01
1345+ 91A4 28 09            jr z,1F
1346+ 91A6 FE 02            cp $02
1347+ 91A8 28 05            jr z,1F
1348+ 91AA FE 03            cp $03
1349+ 91AC 28 01            jr z,1F
1350+ 91AE C0               ret nz
1351+ 91AF 04           1 inc b
1352+ 91B0 C9               ret
1353+ 91B1
1354+ 91B1 A7           Compara_cositas_H4 and a
1355+ 91B2 28 11            jr z,1F
1356+ 91B4 FE FD            cp $fd
1357+ 91B6 28 0D            jr z,1F
1358+ 91B8 FE FE            cp $fe
1359+ 91BA 28 09            jr z,1F
1360+ 91BC FE FF            cp $ff
1361+ 91BE 28 05            jr z,1F
1362+ 91C0 FE 01            cp $01
1363+ 91C2 28 01            jr z,1F
1364+ 91C4              ;    cp $02
1365+ 91C4              ;    jr z,1F
1366+ 91C4              ;    cp $03
1367+ 91C4              ;    jr z,1F
1368+ 91C4 C0               ret nz
1369+ 91C5 04           1 inc b
1370+ 91C6 C9               ret
1371+ 91C7
1372+ 91C7 A7           Compara_cositas_L4 and a
1373+ 91C8 28 0D            jr z,1F
1374+ 91CA              ;    cp $fd
1375+ 91CA              ;    jr z,1F
1376+ 91CA FE FE            cp $fe
1377+ 91CC 28 09            jr z,1F
1378+ 91CE FE FF            cp $ff
1379+ 91D0 28 05            jr z,1F
1380+ 91D2 FE 01            cp $01
1381+ 91D4 28 01            jr z,1F
1382+ 91D6              ;    cp $02
1383+ 91D6              ;    jr z,1F
1384+ 91D6              ;    cp $03
1385+ 91D6              ;    jr z,1F
1386+ 91D6 C0               ret nz
1387+ 91D7 04           1 inc b
1388+ 91D8 C9               ret
# file closed: Disparo.asm
1756  91D9              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91D9              ; ******************************************************************************************************************************************************************************************
   2+ 91D9              ;
   3+ 91D9              ; 26/06/23
   4+ 91D9              ;
   5+ 91D9              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91D9
   7+ 91D9              Draw
   8+ 91D9
   9+ 91D9 CD C6 94     	call Prepara_draw
  10+ 91DC 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 91DD A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 91DE 28 05        	jr z,2F
  13+ 91E0
  14+ 91E0 3A 73 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 91E3 18 0C        	jr 1F
  16+ 91E5
  17+ 91E5 2A 71 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 91E8 22 61 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 91EB CD 7A 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 91EE              ;													; _la esquina superior izquierda de la pantalla.
  21+ 91EE
  22+ 91EE CD 34 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 91F1
  24+ 91F1 3A 81 89     1 ld a,(Ctrl_0)
  25+ 91F4 CB 6F        	bit 5,a
  26+ 91F6 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 91F8
  28+ 91F8 CD 10 92     	call Comprueba_limite_horizontal
  29+ 91FB CD A0 92     	call Comprueba_limite_vertical
  30+ 91FE
  31+ 91FE              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 91FE              ; -----------------------
  33+ 91FE              ; -----------------------
  34+ 91FE              ; -----------------------
  35+ 91FE
  36+ 91FE CD F6 93     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9201 CD 2D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9204 CD 8C 94     	call Define_rutina_de_impresion
  39+ 9207
  40+ 9207 3A 81 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 920A CB AF        	res 5,a											; _a ser de utilidad.
  42+ 920C 32 81 89     	ld (Ctrl_0),a
  43+ 920F
  44+ 920F C9           	ret
  45+ 9210
  46+ 9210              ; *******************************************************************************************************************************************************************************************
  47+ 9210              ;	21/01/23
  48+ 9210              ;
  49+ 9210              ; 	Comprueba_limite_horizontal.
  50+ 9210              ;
  51+ 9210              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 9210              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 9210              ;
  54+ 9210              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 9210              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 9210              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 9210              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 9210
  59+ 9210
  60+ 9210
  61+ 9210 3A 81 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9213 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9215 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9217 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 9219 32 81 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 921C 18 09            jr 6F
  67+ 921E CB 5F        1 bit 3,a
  68+ 9220 28 0A            jr z,2F
  69+ 9222 E6 F7            and $f7
  70+ 9224 32 81 89         ld (Ctrl_0),a
  71+ 9227 CD 7A 93     6 call Inicializacion
  72+ 922A 18 5B            jr 5F
  73+ 922C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 922D
  75+ 922D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 922D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 922D
  78+ 922D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 922E 2A 83 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9231 CD E5 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9234 67           	ld h,a
  82+ 9235 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9236 CD E5 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9239 67           	ld h,a
  85+ 923A A7           	and a
  86+ 923B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 923D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 923E 3A 73 89     	ld a,(Cuad_objeto)
  89+ 9241 FE 02        	cp 2
  90+ 9243 38 1E        	jr c,3F
  91+ 9245 28 1C        	jr z,3F
  92+ 9247 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9248 28 23            jr z,7F
  94+ 924A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 924C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 924E E1           	pop hl
  97+ 924F
  98+ 924F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 924F              ; _para indicar con E="2" en caso necesario.
 100+ 924F
 101+ 924F E5               push hl
 102+ 9250 C5               push bc
 103+ 9251 CD E5 97     	call calcula_tercio
 104+ 9254 FE 01        	cp 1
 105+ 9256 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9258 CD 88 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 925B 28 26            jr z,9F
 108+ 925D 38 24            jr c,9F
 109+ 925F 1E 00        11 ld e,0
 110+ 9261 18 22            jr 8F
 111+ 9263 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9264 28 07        	jr z, 7F
 113+ 9266 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9268 1E 00         	ld e,0
 115+ 926A E1           	pop hl
 116+ 926B 18 04        	jr 4F
 117+ 926D 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 926F 18 15            jr 10F
 119+ 9271
 120+ 9271              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9271              ; _para indicar con E="2" en caso necesario.
 122+ 9271
 123+ 9271 E5           4 push hl
 124+ 9272 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9273 CD E5 97     	call calcula_tercio
 126+ 9276 FE 01        	cp 1
 127+ 9278 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 927A CD 88 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 927D 28 04            jr z,9F
 130+ 927F 30 02            jr nc,9F
 131+ 9281 18 02        	jr 8F
 132+ 9283 1E 02        9 ld e,2
 133+ 9285 C1           8 pop bc
 134+ 9286 E1           10 pop hl
 135+ 9287 C9           5 ret
 136+ 9288
 137+ 9288              ; --------------------
 138+ 9288              ;
 139+ 9288              ; 25/08/22
 140+ 9288
 141+ 9288 CD E5 97     Comprueba_centro call calcula_tercio
 142+ 928B 67               ld h,a
 143+ 928C 08           	ex af,af
 144+ 928D FE 02        	cp 2
 145+ 928F 38 07        	jr c,1F
 146+ 9291 28 05        	jr z,1F
 147+ 9293 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9296 18 03        	jr 2F
 149+ 9298 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 929B 08           2 ex af,af
 151+ 929C A7               and a
 152+ 929D ED 42            sbc hl,bc
 153+ 929F C9               ret
 154+ 92A0
 155+ 92A0              ; *********************************************************************************************************************************************************************************************
 156+ 92A0              ;
 157+ 92A0              ;   16/8/22
 158+ 92A0              ;
 159+ 92A0              ;	Comprueba_limite_vertical
 160+ 92A0              ;
 161+ 92A0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 92A0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 92A0              ;
 164+ 92A0
 165+ 92A0 2A 61 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 92A3 7D           	ld a,l
 167+ 92A4 E6 1F        	and $1F
 168+ 92A6 57           	ld d,a
 169+ 92A7 3A 85 89     	ld a,(Limite_vertical)
 170+ 92AA BA           	cp d 											; Límite - Posición.
 171+ 92AB 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 92AC 3A 73 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 92AF CB 47        	bit 0,a
 174+ 92B1 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 92B3
 176+ 92B3              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 92B3
 178+ 92B3 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 92B4 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 92B6
 181+ 92B6              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 92B6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 92B6
 184+ 92B6 3A 65 89         ld a,(Coordenada_X)
 185+ 92B9 16 0F            ld d,Centro_izquierda
 186+ 92BB A7               and a
 187+ 92BC 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 92BD 28 1E            jr z,3F
 189+ 92BF 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 92C1              ;                                                    ; _salimos sin modificar nada.
 191+ 92C1 18 0E            jr 2F
 192+ 92C3 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 92C4 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 92C6
 195+ 92C6              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 92C6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 92C6
 198+ 92C6 3A 65 89         ld a,(Coordenada_X)
 199+ 92C9 16 10            ld d,Centro_derecha
 200+ 92CB A7               and a
 201+ 92CC 92               sub d
 202+ 92CD 28 0E            jr z,3F
 203+ 92CF 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 92D1              ;                                                    ; _salimos sin modificar nada.
 205+ 92D1 CB 43        2 bit 0,e
 206+ 92D3 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 92D5 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 92D6 CD 6A 93         call Modificaccionne
 209+ 92D9 C1           	pop bc
 210+ 92DA CD 7A 93         call Inicializacion
 211+ 92DD C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 92DE
 213+ 92DE              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 92DE
 215+ 92DE C5           4 push bc
 216+ 92DF 01 60 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 92E2 0A           	ld a,(bc)
 218+ 92E3 3D           	dec a
 219+ 92E4 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 92E5 7D           	ld a,l
 221+ 92E6 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 92E7 CB 47        	bit 0,a
 223+ 92E9 28 03        	jr z,5F
 224+ 92EB 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 92EC 18 2E        	jr 7F
 226+ 92EE
 227+ 92EE              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 92EE
 229+ 92EE 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 92EF F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 92F0 3A 81 89     	ld a,(Ctrl_0)
 232+ 92F3 CB 4F        	bit 1,a
 233+ 92F5 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 92F7 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 92F8
 236+ 92F8              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 92F8
 238+ 92F8 1C               inc e
 239+ 92F9 1D               dec e
 240+ 92FA 20 07            jr nz,12F
 241+ 92FC 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 92FD 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 92FE 22 61 89     	ld (Posicion_actual),hl
 244+ 9301 18 44        13 jr 9F
 245+ 9303 CB 43        12 bit 0,e
 246+ 9305 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9307              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9307 C1           	pop bc
 249+ 9308 18 D3        	jr 3B
 250+ 930A 80           14 add b
 251+ 930B 6F               ld l,a
 252+ 930C 22 61 89     	ld (Posicion_actual),hl
 253+ 930F CD 6A 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9312 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9314 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9316 32 81 89         ld (Ctrl_0),a
 257+ 9319 F1           	pop af
 258+ 931A 18 2B        	jr 9F
 259+ 931C
 260+ 931C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 931C
 262+ 931C F5           7 push af
 263+ 931D 3A 81 89     	ld a,(Ctrl_0)
 264+ 9320 CB 47        	bit 0,a
 265+ 9322 20 1D        	jr nz,8F
 266+ 9324 F1           	pop af
 267+ 9325
 268+ 9325              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9325
 270+ 9325 1C           	inc e
 271+ 9326 1D               dec e
 272+ 9327 20 07            jr nz,10F
 273+ 9329 90           	sub b
 274+ 932A 6F               ld l,a
 275+ 932B 22 61 89     	ld (Posicion_actual),hl
 276+ 932E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9330              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9330 CB 43        10 bit 0,e
 279+ 9332 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9334              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9334 C1           	pop bc
 282+ 9335 18 A6        	jr 3B
 283+ 9337 90           16 sub b
 284+ 9338 6F               ld l,a
 285+ 9339 22 61 89     	ld (Posicion_actual),hl
 286+ 933C CD 6A 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 933F 18 06            jr 9F
 288+ 9341 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9343 32 81 89         ld (Ctrl_0),a
 290+ 9346 F1           	pop af
 291+ 9347 C1           9 pop bc
 292+ 9348 1E 00        	ld e,0
 293+ 934A CD 7A 93         call Inicializacion
 294+ 934D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 934E 08           	ex af,af
 296+ 934F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9350 18 8B            jr 3B
 298+ 9352
 299+ 9352              ; --------------------
 300+ 9352
 301+ 9352 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9354 CD E1 94     1 call PreviousScan
 303+ 9357 10 FB            djnz 1B
 304+ 9359 22 61 89     	ld (Posicion_actual),hl
 305+ 935C AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 935D C9           	ret
 307+ 935E
 308+ 935E              ; --------------------
 309+ 935E
 310+ 935E 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9360 CD D2 94     1 call NextScan
 312+ 9363 10 FB            djnz 1B
 313+ 9365 22 61 89     	ld (Posicion_actual),hl
 314+ 9368 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9369 C9           	ret
 316+ 936A
 317+ 936A              ; --------------------
 318+ 936A              ;
 319+ 936A              ;	22/01/23
 320+ 936A              ;
 321+ 936A              ;	E="1". Hemos cambiado de cuadrante.
 322+ 936A              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 936A              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 936A
 325+ 936A
 326+ 936A              Modificaccionne
 327+ 936A
 328+ 936A 3A 73 89     	ld a,(Cuad_objeto)
 329+ 936D FE 02        	cp 2
 330+ 936F CC 52 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9372 DC 52 93         call c,Modifica_Pos_actual
 332+ 9375 C8           	ret z
 333+ 9376 CD 5E 93         call Modifica_Pos_actual2
 334+ 9379 C9               ret
 335+ 937A
 336+ 937A              ; *************************************************************************************************************************************************************************************************
 337+ 937A              ;
 338+ 937A              ;	13/8/22
 339+ 937A              ;
 340+ 937A              ;	Inicializacion
 341+ 937A              ;
 342+ 937A              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 937A              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 937A              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 937A              ;
 346+ 937A              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 937A              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 937A              ;	_ desaparece/aparece.
 349+ 937A
 350+ 937A              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 937A              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 937A              ;
 353+ 937A              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 937A              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 937A              ; 		   [E] ="0"
 356+ 937A
 357+ 937A              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 937A
 359+ 937A CD E5 97     Inicializacion call calcula_tercio
 360+ 937D 28 36        	jr z,primit
 361+ 937F E6 02        	and 2
 362+ 9381 20 07        	jr nz,segmit
 363+ 9383 7D           	ld a,l
 364+ 9384 FE 7F        	cp $7f
 365+ 9386 38 2D        	jr c,primit
 366+ 9388 28 2B        	jr z,primit
 367+ 938A CD F0 93     segmit call column
 368+ 938D 38 13        	jr c,tercuad
 369+ 938F 3E 04        cuarcuad ld a,4
 370+ 9391 32 73 89     	ld (Cuad_objeto),a
 371+ 9394 21 20 48     	ld hl,$4820
 372+ 9397 22 83 89     	ld (Limite_horizontal),hl
 373+ 939A 21 85 89     	ld hl,Limite_vertical
 374+ 939D 36 0D        	ld (hl),$0d
 375+ 939F 08           	ex af,af
 376+ 93A0 18 3C        	jr 1F
 377+ 93A2              tercuad
 378+ 93A2 3E 03        	ld a,3
 379+ 93A4 32 73 89     	ld (Cuad_objeto),a
 380+ 93A7 21 20 48     	ld hl,$4820
 381+ 93AA 22 83 89     	ld (Limite_horizontal),hl
 382+ 93AD 21 85 89     	ld hl,Limite_vertical
 383+ 93B0 36 12        	ld (hl),$12
 384+ 93B2 08           	ex af,af
 385+ 93B3 18 29        	jr 1F
 386+ 93B5 CD F0 93     primit call column
 387+ 93B8 38 13        	jr c, primcuad
 388+ 93BA              segcuad
 389+ 93BA 3E 02        	ld a,2
 390+ 93BC 32 73 89     	ld (Cuad_objeto),a
 391+ 93BF 21 C0 4F     	ld hl,$4fc0
 392+ 93C2 22 83 89     	ld (Limite_horizontal),hl
 393+ 93C5 21 85 89     	ld hl,Limite_vertical
 394+ 93C8 36 0D        	ld (hl),$0d
 395+ 93CA 08           	ex af,af
 396+ 93CB 18 11        	jr 1F
 397+ 93CD              primcuad
 398+ 93CD 3E 01        	ld a,1
 399+ 93CF 32 73 89     	ld (Cuad_objeto),a
 400+ 93D2 21 C0 4F     	ld hl,$4fc0
 401+ 93D5 22 83 89     	ld (Limite_horizontal),hl
 402+ 93D8 21 85 89     	ld hl,Limite_vertical
 403+ 93DB 36 12        	ld (hl),$12
 404+ 93DD 08           	ex af,af
 405+ 93DE
 406+ 93DE C5           1 push bc
 407+ 93DF E5           	push hl
 408+ 93E0 D5           	push de
 409+ 93E1
 410+ 93E1 2A 61 89     	ld hl,(Posicion_actual)
 411+ 93E4 CD 7D 9B     	call Genera_coordenadas
 412+ 93E7
 413+ 93E7 D1           	pop de
 414+ 93E8 E1           	pop hl
 415+ 93E9 C1           	pop bc
 416+ 93EA
 417+ 93EA 21 81 89     	ld hl,Ctrl_0
 418+ 93ED CB EE        	set 5,(hl)
 419+ 93EF C9           	ret
 420+ 93F0
 421+ 93F0              ; ------------------------------------------------------------------------------------------------------------------
 422+ 93F0
 423+ 93F0              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 93F0              ;
 425+ 93F0              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 93F0
 427+ 93F0 7D           column ld a,l
 428+ 93F1 E6 1F        	and $1f
 429+ 93F3 FE 10         	cp $10
 430+ 93F5 C9            	ret
 431+ 93F6
 432+ 93F6              ; --------------------------------------------------------------------------------------------------------------------
 433+ 93F6              ;
 434+ 93F6              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 93F6              ;
 436+ 93F6              ; 14/12/22
 437+ 93F6              ;
 438+ 93F6              ;	Modifica: A y BC.
 439+ 93F6
 440+ 93F6 3A 73 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 93F9 E6 01        	and 1
 442+ 93FB 28 17        	jr z,1F
 443+ 93FD
 444+ 93FD              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 93FD
 446+ 93FD 3A 65 89     	ld a,(Coordenada_X)
 447+ 9400 47           	ld b,a
 448+ 9401 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9402 79           	ld a,c
 450+ 9403 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9404 38 08        	jr c,2F
 452+ 9406 47           	ld b,a
 453+ 9407 79           	ld a,c
 454+ 9408 90           	sub b
 455+ 9409 32 82 89     	ld (Columnas),a
 456+ 940C 18 1B        	jr 4F
 457+ 940E 79           2 ld a,c
 458+ 940F 32 82 89     	ld (Columnas),a
 459+ 9412 18 15        	jr 4F
 460+ 9414
 461+ 9414              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9414
 463+ 9414 3A 65 89     1 ld a,(Coordenada_X)
 464+ 9417 81           	add c
 465+ 9418 3D           	dec a
 466+ 9419 D6 1F        	sub $1f
 467+ 941B 38 08        	jr c,3F
 468+ 941D 47           	ld b,a
 469+ 941E 79           	ld a,c
 470+ 941F 90           	sub b
 471+ 9420 32 82 89     	ld (Columnas),a
 472+ 9423 18 04        	jr 4F
 473+ 9425 79           3 ld a,c
 474+ 9426 32 82 89     	ld (Columnas),a
 475+ 9429 D9           4 exx
 476+ 942A 4F           	ld c,a
 477+ 942B D9           	exx
 478+ 942C C9            ret
 479+ 942D
 480+ 942D              ; --------------------------------------------------------------------------------------------------------------------
 481+ 942D              ;
 482+ 942D              ;   19/7/23
 483+ 942D              ;
 484+ 942D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 942D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 942D              ;
 487+ 942D              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 942D              ;			HL e IY Contienen (Puntero_objeto).
 489+ 942D              ;
 490+ 942D              ;	DESTRUYE: HL,B Y A.
 491+ 942D
 492+ 942D 3A 73 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9430 FE 02        	cp 2
 494+ 9432 38 18        	jr c,1F
 495+ 9434 28 16        	jr z,1F
 496+ 9436 E6 01        	and 1
 497+ 9438 28 0D        	jr z,3F
 498+ 943A
 499+ 943A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 943A
 501+ 943A CD 80 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 943D
 503+ 943D 7D           9 ld a,l
 504+ 943E E6 1F        	and $1f
 505+ 9440 28 2A        	jr z,7F
 506+ 9442 2B           	dec hl
 507+ 9443 10 F8        	djnz 9B
 508+ 9445 18 25        	jr 7F
 509+ 9447
 510+ 9447              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9447
 512+ 9447 2A 61 89     3 ld hl,(Posicion_actual)
 513+ 944A 18 20        	jr 7F
 514+ 944C
 515+ 944C 28 14        1 jr z,2F
 516+ 944E
 517+ 944E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 944E
 519+ 944E CD 80 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9451
 521+ 9451 7D           4 ld a,l
 522+ 9452 E6 1F        	and $1f
 523+ 9454 28 03        	jr z,6F
 524+ 9456 2B           	dec hl
 525+ 9457 10 F8        	djnz 4B
 526+ 9459 06 0F        6 ld b,15
 527+ 945B CD E1 94     5 call PreviousScan
 528+ 945E 10 FB        	djnz 5B
 529+ 9460 18 0A        	jr 7F
 530+ 9462
 531+ 9462              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9462
 533+ 9462 CD 80 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9465 06 0F        	ld b,15
 535+ 9467 CD E1 94     8 call PreviousScan
 536+ 946A 10 FB        	djnz 8B
 537+ 946C
 538+ 946C E5           7 push hl
 539+ 946D DD E1        	pop ix
 540+ 946F
 541+ 946F 2A 63 89     	ld hl,(Puntero_objeto)
 542+ 9472 E5           	push hl
 543+ 9473 FD E1        	pop iy
 544+ 9475
 545+ 9475              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9475
 547+ 9475 3A 81 89     	ld a,(Ctrl_0)
 548+ 9478 CB 77        	bit 6,a
 549+ 947A C8           	ret z
 550+ 947B
 551+ 947B              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 947B              ; _ entidad / Amadeus´.
 553+ 947B
 554+ 947B DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 947F
 556+ 947F C9           	ret
 557+ 9480
 558+ 9480              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9480              ;
 560+ 9480              ;	2/1/23
 561+ 9480              ;
 562+ 9480              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9480              ;
 564+ 9480              ;	Tras esta rutina tenemos:
 565+ 9480              ;
 566+ 9480              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9480              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9480              ;
 569+ 9480              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9480
 571+ 9480 2A 61 89     Operandos ld hl,(Posicion_actual)
 572+ 9483 3A 82 89     	ld a,(Columnas)
 573+ 9486 3D           	dec a
 574+ 9487 20 01        	jr nz,1F
 575+ 9489 3C           	inc a
 576+ 948A 47           1 ld b,a
 577+ 948B C9           	ret
 578+ 948C
 579+ 948C              ; --------------------------------------------------------------------------------------------------------------------
 580+ 948C              ;
 581+ 948C              ;	3/1/23
 582+ 948C              ;
 583+ 948C              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 948C              ;
 585+ 948C              ;	Destruye: A,B,HL y DE.
 586+ 948C
 587+ 948C              Define_rutina_de_impresion
 588+ 948C
 589+ 948C 3A 60 89     	ld a,(Columns)
 590+ 948F 47           	ld b,a
 591+ 9490 3A 82 89     	ld a,(Columnas)
 592+ 9493 B8           	cp b
 593+ 9494 20 0D        	jr nz,2f
 594+ 9496
 595+ 9496              ;	La entidad se imprime entera.
 596+ 9496
 597+ 9496 21 B5 95     	ld hl, Indice_entidades_completas
 598+ 9499 E6 01        	and 1
 599+ 949B 28 02        	jr z,1F
 600+ 949D
 601+ 949D 23           	inc hl
 602+ 949E 23           	inc hl
 603+ 949F
 604+ 949F CD AF 8B     1 call Extrae_address
 605+ 94A2 C9           	ret		;	ret
 606+ 94A3
 607+ 94A3              ;	La entidad no se imprime entera en pantalla.
 608+ 94A3
 609+ 94A3 3A 73 89     2 ld a,(Cuad_objeto)
 610+ 94A6 E6 01        	and 1
 611+ 94A8 28 17        	jr z,3F
 612+ 94AA
 613+ 94AA              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 94AA
 615+ 94AA 21 B9 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 94AD 3A 60 89     4 ld a,(Columns)
 617+ 94B0 E6 01        	and 1
 618+ 94B2 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 94B4
 620+ 94B4 23           	inc hl
 621+ 94B5 23           	inc hl
 622+ 94B6
 623+ 94B6 3A 82 89     	ld a,(Columnas)
 624+ 94B9 E6 01        	and 1
 625+ 94BB 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 94BD
 627+ 94BD 23           	inc hl
 628+ 94BE 23           	inc hl
 629+ 94BF
 630+ 94BF 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 94C1
 632+ 94C1 21 BF 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 94C4 18 E7        	jr 4B
 634+ 94C6
 635+ 94C6              ; --------------------------------------------------------------------------------------------------------------------
 636+ 94C6              ;
 637+ 94C6              ;	Prepara_draw
 638+ 94C6              ;
 639+ 94C6              ;	Es una rutina de carga.
 640+ 94C6              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 94C6              ;
 642+ 94C6              ;	FUNCIONAMIENTO:
 643+ 94C6              ;
 644+ 94C6              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 94C6              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 94C6              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 94C6              ;
 648+ 94C6              ;	DESTRUYE:
 649+ 94C6              ;
 650+ 94C6              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 94C6
 652+ 94C6 21 5F 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 94C9 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 94CA 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 94CB 4E           	ld c,(hl)
 656+ 94CC 2A 61 89     	ld hl,(Posicion_actual)
 657+ 94CF 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 94D1 C9           	ret
 659+ 94D2
 660+ 94D2              ;----------------------------------------------------------------------------------------------------------------
 661+ 94D2              ;
 662+ 94D2              ;	5/08/22
 663+ 94D2              ;
 664+ 94D2              ;   NextScan.
 665+ 94D2              ;
 666+ 94D2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 94D2              ;
 668+ 94D2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 94D2              ;
 670+ 94D2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 94D2              ;
 672+ 94D2              ;       DESTRUIDOS: AF y HL !!!
 673+ 94D2              ;
 674+ 94D2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 94D2              ;
 676+ 94D2
 677+ 94D2 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 94D3 7C               ld a,h
 679+ 94D4 E6 07            and 7
 680+ 94D6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 94D7
 682+ 94D7 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 94D8 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 94DA 6F               ld l,a
 685+ 94DB D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 94DC
 687+ 94DC 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 94DD D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 94DF 67               ld h,a
 690+ 94E0 C9               ret
 691+ 94E1
 692+ 94E1              ;----------------------------------------------------------------------------------------------------------------
 693+ 94E1              ;
 694+ 94E1              ;	5/08/22
 695+ 94E1              ;
 696+ 94E1              ;   PreviousScan.
 697+ 94E1              ;
 698+ 94E1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 94E1              ;
 700+ 94E1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 94E1              ;
 702+ 94E1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 94E1              ;
 704+ 94E1              ;       DESTRUIDOS: AF y HL !!!
 705+ 94E1              ;
 706+ 94E1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 94E1              ;
 708+ 94E1
 709+ 94E1 7C           PreviousScan ld a,h
 710+ 94E2 25               dec h               ; Dec H.
 711+ 94E3 E6 07            and 7
 712+ 94E5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 94E6
 714+ 94E6 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 94E7 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 94E9 6F               ld l,a
 717+ 94EA D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 94EB
 719+ 94EB 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 94EC C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 94EE 67               ld h,a
 722+ 94EF C9               ret
 723+ 94F0
 724+ 94F0              ; -----------------------------------------------------------------------------------
 725+ 94F0              ;
 726+ 94F0              ;	31/7/23
 727+ 94F0              ;
 728+ 94F0              ;	Rutina principal de pintado de entidades.
 729+ 94F0              ;	Extrae la foto del frame, (entidades).
 730+ 94F0
 731+ 94F0              Extrae_foto_entidades
 732+ 94F0
 733+ 94F0 21 01 80     	ld hl,Album_de_fotos+1
 734+ 94F3 7E           	ld a,(hl)
 735+ 94F4 A7           	and a
 736+ 94F5 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 94F6
 738+ 94F6              ;	No hay datos, (entidades para pintar en este frame).
 739+ 94F6
 740+ 94F6 3A AC 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 94F9 A7           	and a
 742+ 94FA C8           	ret z
 743+ 94FB
 744+ 94FB              ; -----------------------------------
 745+ 94FB
 746+ 94FB ED 73 B1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 94FF 31 00 80     	ld sp,Album_de_fotos
 748+ 9502
 749+ 9502 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9504 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9505 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9506
 753+ 9506 ED 73 B3 89  	ld (Stack_2),sp
 754+ 950A ED 7B B1 89  	ld sp,(Stack)
 755+ 950E
 756+ 950E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 950E
 758+ 950E 3E CD        	ld a,$cd
 759+ 9510 32 18 95     	ld (Imprime),a
 760+ 9513 EB           	ex de,hl
 761+ 9514 22 19 95     	ld (Imprime+1),hl
 762+ 9517 EB           	ex de,hl
 763+ 9518
 764+ 9518              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9518
 766+ 9518 00 00 00     Imprime db 0,0,0
 767+ 951B
 768+ 951B ED 73 B1 89  	ld (Stack),sp
 769+ 951F
 770+ 951F 3A AC 89     	ld a,(Numero_de_malotes)
 771+ 9522 3D           	dec a
 772+ 9523 28 09        	jr z,1F
 773+ 9525 32 AC 89      	ld (Numero_de_malotes),a
 774+ 9528
 775+ 9528 ED 7B B3 89  	ld sp,(Stack_2)
 776+ 952C 18 D4        	jr 2B
 777+ 952E
 778+ 952E AF           1 xor a
 779+ 952F 32 B3 89     	ld (Stack_2),a
 780+ 9532
 781+ 9532 C9           	ret
 782+ 9533
 783+ 9533              ; -----------------------------------------------------------------------------------
 784+ 9533              ;
 785+ 9533              ;	28/2/23
 786+ 9533              ;
 787+ 9533              ;	Pinta los disparos generados.
 788+ 9533
 789+ 9533              Extrae_foto_disparos
 790+ 9533
 791+ 9533 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9536 7E               ld a,(hl)
 793+ 9537 A7               and a
 794+ 9538 C8               ret z
 795+ 9539
 796+ 9539 3A C1 89     	ld a,(Numero_de_disparotes)
 797+ 953C A7           	and a
 798+ 953D C8           	ret z
 799+ 953E ED 73 B1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9542 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9545
 802+ 9545 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9547 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9548 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9549
 806+ 9549 ED 73 B3 89  	ld (Stack_2),sp
 807+ 954D ED 7B B1 89  	ld sp,(Stack)
 808+ 9551
 809+ 9551              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9551
 811+ 9551 3E CD        	ld a,$cd
 812+ 9553 32 5B 95     	ld (Imprime2),a
 813+ 9556 EB           	ex de,hl
 814+ 9557 22 5C 95     	ld (Imprime2+1),hl
 815+ 955A EB           	ex de,hl
 816+ 955B
 817+ 955B              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 955B
 819+ 955B 00 00 00     Imprime2 db 0,0,0
 820+ 955E
 821+ 955E 3A C1 89     	ld a,(Numero_de_disparotes)
 822+ 9561 3D           	dec a
 823+ 9562 28 09        	jr z,1F
 824+ 9564 32 C1 89      	ld (Numero_de_disparotes),a
 825+ 9567
 826+ 9567 ED 7B B3 89  	ld sp,(Stack_2)
 827+ 956B 18 D8        	jr 2B
 828+ 956D
 829+ 956D AF           1 xor a
 830+ 956E 32 B3 89     	ld (Stack_2),a
 831+ 9571 C9           	ret
 832+ 9572
 833+ 9572              ; -----------------------------------------------------------------------------------
 834+ 9572              ;
 835+ 9572              ;	4/9/23
 836+ 9572              ;
 837+ 9572              ;	Rutina principal de pintado de Amadeus.
 838+ 9572              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9572
 840+ 9572 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9575 7E           	ld a,(hl)
 842+ 9576 A7           	and a
 843+ 9577 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9578
 845+ 9578 3A AC 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 957B A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 957C C8           	ret z
 848+ 957D
 849+ 957D              ; -----------------------------------
 850+ 957D
 851+ 957D ED 73 B1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9581 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 9584
 854+ 9584 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9586 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9587 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9588
 858+ 9588 ED 73 B3 89  	ld (Stack_2),sp
 859+ 958C ED 7B B1 89  	ld sp,(Stack)
 860+ 9590
 861+ 9590              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9590
 863+ 9590 3E CD        	ld a,$cd
 864+ 9592 32 9A 95     	ld (Imprime_Amadeus),a
 865+ 9595 EB           	ex de,hl
 866+ 9596 22 9B 95     	ld (Imprime_Amadeus+1),hl
 867+ 9599 EB           	ex de,hl
 868+ 959A
 869+ 959A              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 959A
 871+ 959A 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 959D
 873+ 959D ED 73 B1 89  	ld (Stack),sp
 874+ 95A1
 875+ 95A1 3A AC 89     	ld a,(Numero_de_malotes)
 876+ 95A4 3D           	dec a
 877+ 95A5 28 09        	jr z,1F
 878+ 95A7 32 AC 89      	ld (Numero_de_malotes),a
 879+ 95AA
 880+ 95AA ED 7B B3 89  	ld sp,(Stack_2)
 881+ 95AE 18 D4        	jr 2B
 882+ 95B0
 883+ 95B0 AF           1 xor a
 884+ 95B1 32 B3 89     	ld (Stack_2),a
 885+ 95B4
 886+ 95B4 C9           	ret
# file closed: Draw_XOR.asm
1757  95B5              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95B5              ;   índices de Rutinas de impresión.
   2+ 95B5
   3+ 95B5 C5 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95B7 F2 95            defw Pinta_Amadeus_3x2
   5+ 95B9
   6+ 95B9 48 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95BB E8 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95BD 9C 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95BF
  10+ 95BF 72 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95C1 76 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95C3 2A 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95C5
  14+ 95C5
  15+ 95C5              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95C5              ;
  17+ 95C5              ;   12/12/22
  18+ 95C5              ;
  19+ 95C5              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95C5              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95C5              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95C5              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95C5              ;
  24+ 95C5              ;   Modifica: DE y HL.
  25+ 95C5
  26+ 95C5 ED 73 B1 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95C9 FD F9        	ld sp,iy
  28+ 95CB 06 10            ld b,16
  29+ 95CD D1           1 pop de
  30+ 95CE 7B               ld a,e
  31+ 95CF AE               xor (hl)
  32+ 95D0 77           	ld (hl),a
  33+ 95D1 23           	inc hl
  34+ 95D2 7A               ld a,d
  35+ 95D3 AE               xor (hl)
  36+ 95D4 77           	ld (hl),a
  37+ 95D5 2B           	dec hl
  38+ 95D6 24           	inc h
  39+ 95D7 7C               ld a,h
  40+ 95D8 E6 07            and 7
  41+ 95DA 20 0A            jr nz,2F
  42+ 95DC 7D               ld a,l
  43+ 95DD C6 20            add a,$20
  44+ 95DF 6F               ld l,a
  45+ 95E0 38 04            jr c,2F
  46+ 95E2 7C               ld a,h
  47+ 95E3 D6 08            sub 8
  48+ 95E5 67               ld h,a
  49+ 95E6 7C           2 ld a,h
  50+ 95E7 FE 58            cp $58
  51+ 95E9 28 02            jr z,3F
  52+ 95EB 10 E0            djnz 1B
  53+ 95ED ED 7B B1 89  3 ld sp,(Stack)
  54+ 95F1 C9           	ret
  55+ 95F2
  56+ 95F2 ED 73 B1 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95F6 FD F9        	ld sp,iy
  58+ 95F8 06 08            ld b,8
  59+ 95FA D1           1 pop de
  60+ 95FB 7B               ld a,e
  61+ 95FC AE               xor (hl)
  62+ 95FD 77           	ld (hl),a
  63+ 95FE 23           	inc hl
  64+ 95FF 7A               ld a,d
  65+ 9600 AE               xor (hl)
  66+ 9601 77           	ld (hl),a
  67+ 9602 23           	inc hl
  68+ 9603 D1           	pop de
  69+ 9604 7B               ld a,e
  70+ 9605 AE               xor (hl)
  71+ 9606 77           	ld (hl),a
  72+ 9607 2B           	dec hl
  73+ 9608 2B           	dec hl
  74+ 9609 24           	inc h
  75+ 960A 7C               ld a,h
  76+ 960B E6 07            and 7
  77+ 960D 20 0A            jr nz,2F
  78+ 960F 7D               ld a,l
  79+ 9610 C6 20            add a,$20
  80+ 9612 6F               ld l,a
  81+ 9613 38 04            jr c,2F
  82+ 9615 7C               ld a,h
  83+ 9616 D6 08            sub 8
  84+ 9618 67               ld h,a
  85+ 9619 7C           2 ld a,h
  86+ 961A FE 58            cp $58
  87+ 961C 28 25            jr z,4F
  88+ 961E 7A               ld a,d
  89+ 961F AE               xor (hl)
  90+ 9620 77               ld (hl),a
  91+ 9621 D1           	pop de
  92+ 9622 23           	inc hl
  93+ 9623 7B               ld a,e
  94+ 9624 AE               xor (hl)
  95+ 9625 77           	ld (hl),a
  96+ 9626 23           	inc hl
  97+ 9627 7A               ld a,d
  98+ 9628 AE               xor (hl)
  99+ 9629 77           	ld (hl),a
 100+ 962A 2B           	dec hl
 101+ 962B 2B           	dec hl
 102+ 962C 24           	inc h
 103+ 962D 7C               ld a,h
 104+ 962E E6 07            and 7
 105+ 9630 20 0A            jr nz,3F
 106+ 9632 7D               ld a,l
 107+ 9633 C6 20            add a,$20
 108+ 9635 6F               ld l,a
 109+ 9636 38 04            jr c,3F
 110+ 9638 7C               ld a,h
 111+ 9639 D6 08            sub 8
 112+ 963B 67               ld h,a
 113+ 963C 7C           3 ld a,h
 114+ 963D FE 58            cp $58
 115+ 963F 28 02            jr z,4F
 116+ 9641 10 B7            djnz 1B
 117+ 9643 ED 7B B1 89  4 ld sp,(Stack)
 118+ 9647 C9           	ret
 119+ 9648
 120+ 9648              ; ---------------------------------------------------
 121+ 9648
 122+ 9648 ED 73 B1 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 964C FD F9        	ld sp,iy
 124+ 964E
 125+ 964E              ; >>>
 126+ 964E
 127+ 964E 06 10            ld b,16
 128+ 9650 D1           1 pop de
 129+ 9651 7A           	ld a,d
 130+ 9652 AE           	xor (hl)
 131+ 9653 77           	ld (hl),a
 132+ 9654 24           	inc h
 133+ 9655 7C               ld a,h
 134+ 9656 E6 07            and 7
 135+ 9658 20 0C            jr nz,2F
 136+ 965A 7D               ld a,l
 137+ 965B C6 20            add a,$20
 138+ 965D 6F               ld l,a
 139+ 965E 38 06            jr c,2F
 140+ 9660 7C               ld a,h
 141+ 9661 D6 08            sub 8
 142+ 9663 67               ld h,a
 143+ 9664 18 00            jr 2F
 144+ 9666 7C           2 ld a,h
 145+ 9667 FE 58            cp $58
 146+ 9669 28 02            jr z,3F
 147+ 966B 10 E3            djnz 1B
 148+ 966D ED 7B B1 89  3 ld sp,(Stack)
 149+ 9671 C9           	ret
 150+ 9672
 151+ 9672 ED 73 B1 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9676 FD F9        	ld sp,iy
 153+ 9678
 154+ 9678              ; >>>
 155+ 9678
 156+ 9678 06 10            ld b,16
 157+ 967A D1           1 pop de
 158+ 967B 7B           	ld a,e
 159+ 967C AE           	xor (hl)
 160+ 967D 77           	ld (hl),a
 161+ 967E 24           	inc h
 162+ 967F 7C               ld a,h
 163+ 9680 E6 07            and 7
 164+ 9682 20 0C            jr nz,2F
 165+ 9684 7D               ld a,l
 166+ 9685 C6 20            add a,$20
 167+ 9687 6F               ld l,a
 168+ 9688 38 06            jr c,2F
 169+ 968A 7C               ld a,h
 170+ 968B D6 08            sub 8
 171+ 968D 67               ld h,a
 172+ 968E 18 00            jr 2F
 173+ 9690 7C           2 ld a,h
 174+ 9691 FE 58            cp $58
 175+ 9693 28 02            jr z,3F
 176+ 9695 10 E3            djnz 1B
 177+ 9697 ED 7B B1 89  3 ld sp,(Stack)
 178+ 969B C9           	ret
 179+ 969C
 180+ 969C              ; ---------------------------------------------------
 181+ 969C
 182+ 969C ED 73 B1 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96A0 FD F9        	ld sp,iy
 184+ 96A2 06 08            ld b,8
 185+ 96A4 D1           1 pop de
 186+ 96A5 7A           	ld a,d
 187+ 96A6 AE           	xor (hl)
 188+ 96A7 77           	ld (hl),a
 189+ 96A8 23           	inc hl
 190+ 96A9 D1           	pop de
 191+ 96AA 7B           	ld a,e
 192+ 96AB AE           	xor (hl)
 193+ 96AC 77           	ld (hl),a
 194+ 96AD 2B           	dec hl
 195+ 96AE 24            	inc h
 196+ 96AF 7C               ld a,h
 197+ 96B0 E6 07            and 7
 198+ 96B2 20 0A            jr nz,2F
 199+ 96B4 7D               ld a,l
 200+ 96B5 C6 20            add a,$20
 201+ 96B7 6F               ld l,a
 202+ 96B8 38 04            jr c,2F
 203+ 96BA 7C               ld a,h
 204+ 96BB D6 08            sub 8
 205+ 96BD 67               ld h,a
 206+ 96BE 7C           2 ld a,h
 207+ 96BF FE 58            cp $58
 208+ 96C1 28 20            jr z,4F
 209+ 96C3 D1               pop de
 210+ 96C4 7B           	ld a,e
 211+ 96C5 AE           	xor (hl)
 212+ 96C6 77           	ld (hl),a
 213+ 96C7 23           	inc hl
 214+ 96C8 7A           	ld a,d
 215+ 96C9 AE           	xor (hl)
 216+ 96CA 77           	ld (hl),a
 217+ 96CB 2B           	dec hl
 218+ 96CC 24           	inc h
 219+ 96CD 7C               ld a,h
 220+ 96CE E6 07            and 7
 221+ 96D0 20 0A            jr nz,3F
 222+ 96D2 7D               ld a,l
 223+ 96D3 C6 20            add a,$20
 224+ 96D5 6F               ld l,a
 225+ 96D6 38 04            jr c,3F
 226+ 96D8 7C               ld a,h
 227+ 96D9 D6 08            sub 8
 228+ 96DB 67               ld h,a
 229+ 96DC 7C           3 ld a,h
 230+ 96DD FE 58            cp $58
 231+ 96DF 28 02            jr z,4F
 232+ 96E1 10 C1            djnz 1B
 233+ 96E3 ED 7B B1 89  4 ld sp,(Stack)
 234+ 96E7 C9           	ret
 235+ 96E8
 236+ 96E8 ED 73 B1 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96EC FD F9        	ld sp,iy
 238+ 96EE 06 08            ld b,8
 239+ 96F0 D1           1 pop de
 240+ 96F1 D1           	pop de
 241+ 96F2 7B           	ld a,e
 242+ 96F3 AE           	xor (hl)
 243+ 96F4 77           	ld (hl),a
 244+ 96F5 24            	inc h
 245+ 96F6 7C               ld a,h
 246+ 96F7 E6 07            and 7
 247+ 96F9 20 0A            jr nz,2F
 248+ 96FB 7D               ld a,l
 249+ 96FC C6 20            add a,$20
 250+ 96FE 6F               ld l,a
 251+ 96FF 38 04            jr c,2F
 252+ 9701 7C               ld a,h
 253+ 9702 D6 08            sub 8
 254+ 9704 67               ld h,a
 255+ 9705 7C           2 ld a,h
 256+ 9706 FE 58            cp $58
 257+ 9708 28 1B            jr z,4F
 258+ 970A D1               pop de
 259+ 970B 7A           	ld a,d
 260+ 970C AE           	xor (hl)
 261+ 970D 77           	ld (hl),a
 262+ 970E 24           	inc h
 263+ 970F 7C               ld a,h
 264+ 9710 E6 07            and 7
 265+ 9712 20 0A            jr nz,3F
 266+ 9714 7D               ld a,l
 267+ 9715 C6 20            add a,$20
 268+ 9717 6F               ld l,a
 269+ 9718 38 04            jr c,3F
 270+ 971A 7C               ld a,h
 271+ 971B D6 08            sub 8
 272+ 971D 67               ld h,a
 273+ 971E 7C           3 ld a,h
 274+ 971F FE 58            cp $58
 275+ 9721 28 02            jr z,4F
 276+ 9723 10 CB            djnz 1B
 277+ 9725 ED 7B B1 89  4 ld sp,(Stack)
 278+ 9729 C9           	ret
 279+ 972A
 280+ 972A ED 73 B1 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 972E FD F9        	ld sp,iy
 282+ 9730 06 08            ld b,8
 283+ 9732 D1           1 pop de
 284+ 9733 7B           	ld a,e
 285+ 9734 AE           	xor (hl)
 286+ 9735 77           	ld (hl),a
 287+ 9736 23           	inc hl
 288+ 9737 7A           	ld a,d
 289+ 9738 AE           	xor (hl)
 290+ 9739 77           	ld (hl),a
 291+ 973A 2B           	dec hl
 292+ 973B 24             	inc h
 293+ 973C 7C               ld a,h
 294+ 973D E6 07            and 7
 295+ 973F 20 0A            jr nz,2F
 296+ 9741 7D               ld a,l
 297+ 9742 C6 20            add a,$20
 298+ 9744 6F               ld l,a
 299+ 9745 38 04            jr c,2F
 300+ 9747 7C               ld a,h
 301+ 9748 D6 08            sub 8
 302+ 974A 67               ld h,a
 303+ 974B 7C           2 ld a,h
 304+ 974C FE 58            cp $58
 305+ 974E 28 21            jr z,4F
 306+ 9750 D1               pop de
 307+ 9751 7A           	ld a,d
 308+ 9752 AE           	xor (hl)
 309+ 9753 77           	ld (hl),a
 310+ 9754 23           	inc hl
 311+ 9755 D1               pop de
 312+ 9756 7B           	ld a,e
 313+ 9757 AE           	xor (hl)
 314+ 9758 77           	ld (hl),a
 315+ 9759 2B           	dec hl
 316+ 975A 24           	inc h
 317+ 975B 7C               ld a,h
 318+ 975C E6 07            and 7
 319+ 975E 20 0A            jr nz,3F
 320+ 9760 7D               ld a,l
 321+ 9761 C6 20            add a,$20
 322+ 9763 6F               ld l,a
 323+ 9764 38 04            jr c,3F
 324+ 9766 7C               ld a,h
 325+ 9767 D6 08            sub 8
 326+ 9769 67               ld h,a
 327+ 976A 7C           3 ld a,h
 328+ 976B FE 58            cp $58
 329+ 976D 28 02            jr z,4F
 330+ 976F 10 C1            djnz 1B
 331+ 9771 ED 7B B1 89  4 ld sp,(Stack)
 332+ 9775 C9           	ret
 333+ 9776
 334+ 9776 ED 73 B1 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 977A FD F9        	ld sp,iy
 336+ 977C 06 08            ld b,8
 337+ 977E D1           1 pop de
 338+ 977F 7B           	ld a,e
 339+ 9780 AE           	xor (hl)
 340+ 9781 77           	ld (hl),a
 341+ 9782 24            	inc h
 342+ 9783 7C               ld a,h
 343+ 9784 E6 07            and 7
 344+ 9786 20 0A            jr nz,2F
 345+ 9788 7D               ld a,l
 346+ 9789 C6 20            add a,$20
 347+ 978B 6F               ld l,a
 348+ 978C 38 04            jr c,2F
 349+ 978E 7C               ld a,h
 350+ 978F D6 08            sub 8
 351+ 9791 67               ld h,a
 352+ 9792 7C           2 ld a,h
 353+ 9793 FE 58            cp $58
 354+ 9795 28 1C            jr z,4F
 355+ 9797 D1               pop de
 356+ 9798 7A           	ld a,d
 357+ 9799 AE           	xor (hl)
 358+ 979A 77           	ld (hl),a
 359+ 979B 24           	inc h
 360+ 979C 7C               ld a,h
 361+ 979D E6 07            and 7
 362+ 979F 20 0A            jr nz,3F
 363+ 97A1 7D               ld a,l
 364+ 97A2 C6 20            add a,$20
 365+ 97A4 6F               ld l,a
 366+ 97A5 38 04            jr c,3F
 367+ 97A7 7C               ld a,h
 368+ 97A8 D6 08            sub 8
 369+ 97AA 67               ld h,a
 370+ 97AB 7C           3 ld a,h
 371+ 97AC FE 58            cp $58
 372+ 97AE 28 03            jr z,4F
 373+ 97B0 D1               pop de
 374+ 97B1 10 CB            djnz 1B
 375+ 97B3 ED 7B B1 89  4 ld sp,(Stack)
 376+ 97B7 C9           	ret
 377+ 97B8
 378+ 97B8              ; ---------------------------------------------------
 379+ 97B8              ;
 380+ 97B8              ;   27/02/23
 381+ 97B8              ;
 382+ 97B8              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97B8              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97B8              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97B8
 386+ 97B8 ED 73 B1 89  Pinta_Disparo ld (Stack),sp
 387+ 97BC FD F9            ld sp,iy
 388+ 97BE 06 03            ld b,3
 389+ 97C0 D1           1 pop de
 390+ 97C1 7B               ld a,e
 391+ 97C2 AE               xor (hl)
 392+ 97C3 77               ld (hl),a
 393+ 97C4 23               inc hl
 394+ 97C5 7A               ld a,d
 395+ 97C6 AE               xor (hl)
 396+ 97C7 77               ld (hl),a
 397+ 97C8 2B               dec hl
 398+ 97C9
 399+ 97C9 24               inc h
 400+ 97CA 7C               ld a,h
 401+ 97CB E6 07            and 7
 402+ 97CD 20 0A            jr nz,2F
 403+ 97CF 7D               ld a,l
 404+ 97D0 C6 20            add a,$20
 405+ 97D2 6F               ld l,a
 406+ 97D3 38 04            jr c,2F
 407+ 97D5 7C               ld a,h
 408+ 97D6 D6 08            sub 8
 409+ 97D8 67               ld h,a
 410+ 97D9 7C           2 ld a,h
 411+ 97DA FE 58            cp $58
 412+ 97DC 28 02            jr z,3F
 413+ 97DE
 414+ 97DE 10 E0            djnz 1B
 415+ 97E0 ED 7B B1 89  3 ld sp,(Stack)
 416+ 97E4 C9               ret
 417+ 97E5
# file closed: Rutinas_de_impresion_sprites.asm
1758  97E5              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97E5              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97E5              ;
   3+ 97E5              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97E5              ;
   5+ 97E5              ; *****************************************************************************************************************************************************************************************
   6+ 97E5              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97E5
   8+ 97E5 7C           calcula_tercio ld a,h
   9+ 97E6 E6 18        	and $18
  10+ 97E8 CB 2F        	sra a
  11+ 97EA CB 2F        	sra a
  12+ 97EC CB 2F        	sra a
  13+ 97EE C9           	ret
  14+ 97EF
# file closed: calcula_tercio.asm
1759  97EF              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97EF              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97EF              ;
   3+ 97EF              ;
   4+ 97EF              ;	CLS.
   5+ 97EF              ;
   6+ 97EF              ;	Limpia la pantalla y define sus atributos.
   7+ 97EF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97EF              ;
   9+ 97EF              ;	COLORES: 0 ..... NEGRO
  10+ 97EF              ;    		 1 ..... AZUL
  11+ 97EF              ; 			 2 ..... ROJO
  12+ 97EF              ;			 3 ..... MAGENTA
  13+ 97EF              ; 			 4 ..... VERDE
  14+ 97EF              ; 			 5 ..... CIAN
  15+ 97EF              ;			 6 ..... AMARILLO
  16+ 97EF              ; 			 7 ..... BLANCO
  17+ 97EF              ;
  18+ 97EF              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97EF              ;
  20+ 97EF              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97EF
  22+ 97EF
  23+ 97EF 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97F2 11 01 40     	LD DE,$4001
  25+ 97F5 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97F8 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 97FA ED B0        	LDIR
  28+ 97FC 01 FF 02     	LD BC,767
  29+ 97FF 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9800 ED B0        	LDIR
  31+ 9802 C9           	ret
  32+ 9803
# file closed: Cls.asm
1760  9803              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9803
   2+ 9803              ; ******************************************************************************************************************************************************************************************
   3+ 9803              ;
   4+ 9803              ;   20/05/23
   5+ 9803              ;
   6+ 9803              ;	Recompone_posicion_inicio
   7+ 9803              ;
   8+ 9803              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9803              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9803              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9803              ;	_ a una u otra rutina.
  12+ 9803
  13+ 9803              Recompone_posicion_inicio
  14+ 9803
  15+ 9803 2A 71 89     	ld hl,(Posicion_inicio)
  16+ 9806 7D           	ld a,l
  17+ 9807 E6 1F        	and $1f
  18+ 9809 28 16        	jr z,1F
  19+ 980B
  20+ 980B FE 1F        	cp $1f
  21+ 980D 28 0D        	jr z,3F
  22+ 980F
  23+ 980F 21 86 89     	ld hl,Ctrl_2
  24+ 9812 CB C6        	set 0,(hl)
  25+ 9814 2A 63 89     	ld hl,(Puntero_objeto)
  26+ 9817 22 A1 89     	ld (Repone_puntero_objeto),hl
  27+ 981A 18 08        	jr 2F
  28+ 981C
  29+ 981C CD CA 99     3 call Mov_left
  30+ 981F 18 03        	jr 2F
  31+ 9821
  32+ 9821 CD A7 98     1 call Mov_right
  33+ 9824 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9827 22 63 89     	ld (Puntero_objeto),hl
  35+ 982A C9           	ret
  36+ 982B
  37+ 982B              ; ******************************************************************************************************************************************************************************************
  38+ 982B              ;
  39+ 982B              ;   27/05/23
  40+ 982B              ;
  41+ 982B              ;	Mov_down
  42+ 982B              ;
  43+ 982B              ; 	Mueve el Sprite X px hacia abajo.
  44+ 982B              ;
  45+ 982B              ;
  46+ 982B              Mov_down
  47+ 982B
  48+ 982B CD 95 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 982E              ;																	; _ repone (Puntero_objeto).
  50+ 982E 21 81 89     	ld hl,Ctrl_0
  51+ 9831 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9833              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9833              ; 																	; _ en el caso de que no lo haya.
  54+ 9833 3A 8B 89     	ld a,(Vel_down)
  55+ 9836 47           	ld b,a
  56+ 9837 2A 61 89         ld hl,(Posicion_actual)
  57+ 983A CD E5 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 983D E6 02        	and 2
  59+ 983F 28 17        	jr z,1F
  60+ 9841
  61+ 9841              ; Nos encontramos en el último tercio de pantalla.
  62+ 9841              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9841
  64+ 9841 7C           	ld a,h
  65+ 9842 FE 57        	cp $57
  66+ 9844 20 12        	jr nz,1F
  67+ 9846
  68+ 9846 7D           	ld a,l
  69+ 9847 C6 20        	add $20
  70+ 9849 30 0D        	jr nc,1F
  71+ 984B
  72+ 984B              ; ------------------------------
  73+ 984B              ;
  74+ 984B              ;	12/01/24
  75+ 984B
  76+ 984B              ;	call Reaparece_arriba
  77+ 984B CD 57 9B     	call Reinicio
  78+ 984E
  79+ 984E              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 984E
  81+ 984E 3A BF 89     	ld a,(Ctrl_3)
  82+ 9851 CB CF        	set 1,a
  83+ 9853 32 BF 89     	ld (Ctrl_3),a
  84+ 9856
  85+ 9856 18 08        	jr 3F
  86+ 9858              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9858              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9858              ; ------------------------------
  89+ 9858
  90+ 9858 CD D2 94     1 call NextScan
  91+ 985B 22 61 89     	ld (Posicion_actual),hl
  92+ 985E 10 DA            djnz 2B
  93+ 9860 CD 7D 9B     3 call Genera_coordenadas
  94+ 9863 C9           	ret
  95+ 9864
  96+ 9864              ; ******************************************************************************************************************************************************************************************
  97+ 9864              ;
  98+ 9864              ;   27/05/23
  99+ 9864              ;
 100+ 9864              ;	Mov_up
 101+ 9864              ;
 102+ 9864              ; 	Mueve el Sprite hacia arriba.
 103+ 9864              ;
 104+ 9864              ;
 105+ 9864              Mov_up
 106+ 9864
 107+ 9864 CD 95 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9867              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9867 21 81 89     	ld hl,Ctrl_0
 110+ 986A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 986C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 986C              ; 																		; _ en el caso de que no lo haya.
 113+ 986C 3A 8A 89     	ld a,(Vel_up)
 114+ 986F 47           	ld b,a
 115+ 9870 2A 61 89     	ld hl,(Posicion_actual)
 116+ 9873 CD E5 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9876 A7           	and a
 118+ 9877 20 10        	jr nz,1F
 119+ 9879
 120+ 9879              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9879              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9879
 123+ 9879 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 987A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 987C 20 0B            jr nz,1F
 126+ 987E 7D               ld a,l
 127+ 987F D6 20            sub $20
 128+ 9881 30 06            jr nc,1F
 129+ 9883 25               dec h
 130+ 9884
 131+ 9884              ; -----------------------------
 132+ 9884 CD 38 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9887              ;	call Reinicio
 134+ 9887              ; -----------------------------
 135+ 9887
 136+ 9887 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9889 CD E1 94     1 call PreviousScan
 138+ 988C 22 61 89     	ld (Posicion_actual),hl
 139+ 988F 10 E2            djnz 3B
 140+ 9891 CD 7D 9B     2 call Genera_coordenadas
 141+ 9894 C9           	ret
 142+ 9895
 143+ 9895              ; -----------------------------
 144+ 9895              ;
 145+ 9895              ;	27/5/23
 146+ 9895              ;
 147+ 9895              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9895              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9895              ;
 150+ 9895              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9895              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9895              ;
 153+ 9895              ;	Modifica: A y (Puntero_objeto).
 154+ 9895
 155+ 9895 3A 86 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9898 CB 47        	bit 0,a
 157+ 989A C8           	ret z
 158+ 989B CB 87        	res 0,a
 159+ 989D 32 86 89     	ld (Ctrl_2),a
 160+ 98A0 2A A1 89     	ld hl,(Repone_puntero_objeto)
 161+ 98A3 22 63 89     	ld (Puntero_objeto),hl
 162+ 98A6 C9           	ret
 163+ 98A7
 164+ 98A7              ; ******************************************************************************************************************************************************************************************
 165+ 98A7              ;
 166+ 98A7              ;	19/10/22
 167+ 98A7              ;
 168+ 98A7              ;	Mov_right.
 169+ 98A7              ;
 170+ 98A7              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 98A7              ;
 172+ 98A7
 173+ 98A7 3A 81 89     Mov_right ld a,(Ctrl_0)
 174+ 98AA CB 77        	bit 6,a
 175+ 98AC 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 98AE
 177+ 98AE CD E6 9A     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 98B1 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 98B2
 180+ 98B2 21 81 89     	ld hl,Ctrl_0
 181+ 98B5 CB E6        	set 4,(hl)
 182+ 98B7 18 52        	jr 8F
 183+ 98B9
 184+ 98B9 21 81 89     10 ld hl,Ctrl_0
 185+ 98BC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 98BE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 98BE              ; 																	; _ en el caso de que no lo haya.
 188+ 98BE 3A 65 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 98C1 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 98C3 20 46        	jr nz,8F
 191+ 98C5
 192+ 98C5 3A 67 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 98C8 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 98C9 28 40        	jr z,8F
 195+ 98CB
 196+ 98CB              ; ---------- ---------- ----------
 197+ 98CB              ;
 198+ 98CB              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 98CB
 200+ 98CB 3A 89 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 98CE FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 98D0 28 11        	jr z,1F
 203+ 98D2 38 06        	jr c,6F
 204+ 98D4 FE 04        	cp 4
 205+ 98D6 28 14        	jr z,7F
 206+ 98D8 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 98DA
 208+ 98DA              ; ---------- ---------- ----------
 209+ 98DA              ;
 210+ 98DA              ; Perfiles de velocidad
 211+ 98DA              ;
 212+ 98DA
 213+ 98DA 3A 67 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 98DD FE FE        	cp $fe
 215+ 98DF 20 2A        	jr nz,8F
 216+ 98E1 18 10        	jr 3F
 217+ 98E3 3A 67 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 98E6 FE FD        	cp $fd
 219+ 98E8 20 21        	jr nz,8F
 220+ 98EA 18 07        	jr 3F
 221+ 98EC 3A 67 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 98EF FE FB        	cp $fb
 223+ 98F1 20 18        	jr nz,8F
 224+ 98F3
 225+ 98F3              ; ---------- ---------- ----------
 226+ 98F3
 227+ 98F3              3
 228+ 98F3 CD 26 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 98F6              ;	call Reinicio
 230+ 98F6
 231+ 98F6              ; ---------- ---------- ----------
 232+ 98F6              ;
 233+ 98F6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 98F6
 235+ 98F6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 98F8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 98F9 CD 12 99     	call DESPLZ_DER
 238+ 98FC C1           	pop bc
 239+ 98FD 10 F9        	djnz 5B
 240+ 98FF 2A 61 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9902 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9903 22 61 89     	ld (Posicion_actual),hl
 243+ 9906 CD 7D 9B     	call Genera_coordenadas
 244+ 9909 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 990B
 246+ 990B              ; ---------- ---------- ----------
 247+ 990B
 248+ 990B 2A 61 89     8 ld hl,(Posicion_actual)
 249+ 990E CD 12 99     	call DESPLZ_DER
 250+ 9911 C9           2 ret
 251+ 9912
 252+ 9912              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9912              ;
 254+ 9912              ;	22/9/22
 255+ 9912              ;
 256+ 9912
 257+ 9912 CD 21 99     DESPLZ_DER call Desplaza_derecha
 258+ 9915 CD 6D 99         call modifica_parametros_1er_DESPLZ_2
 259+ 9918 CD 96 99         call Ciclo_completo
 260+ 991B 21 81 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 991E CB FE        	set 7,(hl)
 262+ 9920 C9           	ret
 263+ 9921
 264+ 9921              ; ******************************************************************************************************************************************************************************************
 265+ 9921              ;	15/02/23
 266+ 9921              ;
 267+ 9921
 268+ 9921 3A 89 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9924 47           	ld b,a
 270+ 9925 2A 6D 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9928 23           1 inc hl
 272+ 9929 23           	inc hl
 273+ 992A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 992C 22 6D 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 992F CD AF 8B     	call Extrae_address
 276+ 9932 22 63 89     	ld (Puntero_objeto),hl
 277+ 9935
 278+ 9935              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9935
 280+ 9935              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9935              ; Cuántos movimientos hemos hecho ??
 282+ 9935              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9935
 284+ 9935 2A 69 89     7 ld hl,(Indice_Sprite_der)
 285+ 9938 EB           	ex de,hl
 286+ 9939 A7           	and a
 287+ 993A ED 52        	sbc hl,de
 288+ 993C CB 3D        	srl l
 289+ 993E 3E 08        6 ld a,8
 290+ 9940 95           	sub l
 291+ 9941 30 1E        	jr nc,3F
 292+ 9943
 293+ 9943              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9943              ; B="0".
 295+ 9943
 296+ 9943 04           4 inc b
 297+ 9944 3C           	inc a
 298+ 9945 20 FC        	jr nz,4B
 299+ 9947 78           	ld a,b
 300+ 9948 08           	ex af,af
 301+ 9949 2A 69 89     	ld hl,(Indice_Sprite_der)
 302+ 994C 23           5 inc hl
 303+ 994D 23           	inc hl
 304+ 994E 10 FC        	djnz 5B
 305+ 9950 22 6D 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9953 CD AF 8B     	call Extrae_address
 307+ 9956 22 63 89     	ld (Puntero_objeto),hl
 308+ 9959
 309+ 9959              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9959              ; _(Posicion_actual).
 311+ 9959
 312+ 9959 21 61 89     	ld hl,Posicion_actual
 313+ 995C 34           	inc (hl)
 314+ 995D 08               ex af,af
 315+ 995E 6F           	ld l,a
 316+ 995F 18 DD        	jr 6B
 317+ 9961
 318+ 9961              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9961
 320+ 9961 47           3 ld b,a
 321+ 9962 2A 6B 89     	ld hl,(Indice_Sprite_izq)
 322+ 9965 23           2 inc hl
 323+ 9966 23           	inc hl
 324+ 9967 10 FC        	djnz 2B
 325+ 9969 22 6F 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 996C C9           8 ret
 327+ 996D
 328+ 996D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 996D              ;
 330+ 996D              ;	24/7/22
 331+ 996D              ;
 332+ 996D              ;	modifica_parametros_1er_DESPLZ_2
 333+ 996D              ;
 334+ 996D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 996D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 996D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 996D
 338+ 996D 3A 67 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9970 A7           	and a
 340+ 9971 20 1F        	jr nz,1F
 341+ 9973 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9975 32 67 89         ld (CTRL_DESPLZ),a
 343+ 9978
 344+ 9978 21 60 89     	ld hl,Columns
 345+ 997B 34           	inc (hl)
 346+ 997C 3A 73 89     	ld a,(Cuad_objeto)
 347+ 997F E6 01        	and 1
 348+ 9981 28 0F        	jr z,1F
 349+ 9983 2A 61 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9986 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9987 22 61 89     	ld (Posicion_actual),hl
 352+ 998A CD 7D 9B     	call Genera_coordenadas
 353+ 998D CD F2 9A     	call Inc_CTRL_DESPLZ
 354+ 9990 18 03        	jr 2F
 355+ 9992 CD F2 9A     1 call Inc_CTRL_DESPLZ
 356+ 9995 C9           2 ret
 357+ 9996
 358+ 9996              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9996              ;
 360+ 9996              ;	24/7/22
 361+ 9996              ;
 362+ 9996              ;	Ciclo_completo.
 363+ 9996              ;
 364+ 9996              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9996              ;
 366+ 9996              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9996              ; 	Decrementamos (Columns).
 368+ 9996              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9996              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9996
 371+ 9996
 372+ 9996 3A 67 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9999 FE FF        	cp $ff
 374+ 999B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 999D E6 F0        	and $f0
 376+ 999F 20 28        	jr nz,3F
 377+ 99A1
 378+ 99A1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 99A1
 380+ 99A1 3A 67 89     	ld a,(CTRL_DESPLZ)
 381+ 99A4 47           	ld b,a
 382+ 99A5 3E F8        	ld a,$f8
 383+ 99A7 80           	add b
 384+ 99A8 32 67 89     	ld (CTRL_DESPLZ),a
 385+ 99AB 18 1C        	jr 3F
 386+ 99AD 21 60 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 99B0 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 99B1 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 99B2 32 67 89     	ld (CTRL_DESPLZ),a
 390+ 99B5 3A 73 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 99B8 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 99BA 20 0A        	jr nz,2F
 393+ 99BC 2A 61 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 99BF 23           	inc hl
 395+ 99C0 22 61 89     	ld (Posicion_actual),hl
 396+ 99C3 CD 7D 9B     	call Genera_coordenadas
 397+ 99C6
 398+ 99C6              ; Inicia el puntero de Sprite.
 399+ 99C6
 400+ 99C6 CD C4 8B     2 call Inicia_puntero_objeto_der
 401+ 99C9 C9           3 ret
 402+ 99CA
 403+ 99CA              ; ******************************************************************************************************************************************************************************************
 404+ 99CA              ;
 405+ 99CA              ;	15/02/23
 406+ 99CA              ;
 407+ 99CA              ;	Mov_left.
 408+ 99CA              ;
 409+ 99CA              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 99CA              ;
 411+ 99CA              Mov_left
 412+ 99CA
 413+ 99CA 21 81 89     	ld hl,Ctrl_0
 414+ 99CD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 99CF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 99CF              ; 																	; _ en el caso de que no lo haya.
 417+ 99CF 3A 81 89     	ld a,(Ctrl_0)
 418+ 99D2 CB 77        	bit 6,a
 419+ 99D4 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 99D6
 421+ 99D6 CD EC 9A     	call Stop_Amadeus_left
 422+ 99D9 C8           	ret z
 423+ 99DA 20 4A        	jr nz,8F
 424+ 99DC
 425+ 99DC 3A 65 89     11 ld a,(Coordenada_X)
 426+ 99DF A7           	and a
 427+ 99E0 20 44        	jr nz,8F
 428+ 99E2
 429+ 99E2 3A 67 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 99E5 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 99E6 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 99E8
 433+ 99E8              ; ---------- ---------- ----------
 434+ 99E8
 435+ 99E8 3A 88 89     	ld a,(Vel_left)
 436+ 99EB FE 02        	cp 2
 437+ 99ED 28 0F        	jr z,1F
 438+ 99EF 38 04        	jr c,6F
 439+ 99F1 FE 04        	cp 4
 440+ 99F3 28 12        	jr z,7F
 441+ 99F5
 442+ 99F5              ; ---------- ---------- ----------
 443+ 99F5
 444+ 99F5 3A 67 89     6 ld a,(CTRL_DESPLZ)
 445+ 99F8 FE F8        	cp $f8
 446+ 99FA 20 2A        	jr nz,8F
 447+ 99FC 18 10        	jr 4F
 448+ 99FE 3A 67 89     1 ld a,(CTRL_DESPLZ)
 449+ 9A01 FE F9        	cp $f9
 450+ 9A03 20 21        	jr nz,8F
 451+ 9A05 18 07        	jr 4F
 452+ 9A07 3A 67 89     7 ld a,(CTRL_DESPLZ)
 453+ 9A0A FE FB        	cp $fb
 454+ 9A0C 20 18        	jr nz,8F
 455+ 9A0E
 456+ 9A0E              ; ---------- ---------- ----------
 457+ 9A0E
 458+ 9A0E              4
 459+ 9A0E CD 14 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9A11              ;	call Reinicio
 461+ 9A11
 462+ 9A11              ; ---------- ---------- ----------
 463+ 9A11
 464+ 9A11 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9A13 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9A14
 467+ 9A14              ;	ld hl,(Indice_Sprite_izq)
 468+ 9A14              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9A14
 470+ 9A14 CD 2D 9A     	call DESPLZ_IZQ
 471+ 9A17 C1           	pop bc
 472+ 9A18 10 F9        	djnz 5B
 473+ 9A1A 2A 61 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9A1D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9A1E 22 61 89     	ld (Posicion_actual),hl
 476+ 9A21 CD 7D 9B     	call Genera_coordenadas
 477+ 9A24 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9A26
 479+ 9A26              ; ---------- ---------- ----------
 480+ 9A26
 481+ 9A26              ; Movemos, no hay recolocación.
 482+ 9A26
 483+ 9A26 2A 61 89     8 ld hl,(Posicion_actual)
 484+ 9A29 CD 2D 9A     	call DESPLZ_IZQ
 485+ 9A2C C9           2 ret
 486+ 9A2D
 487+ 9A2D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9A2D              ;
 489+ 9A2D              ;	22/9/22
 490+ 9A2D
 491+ 9A2D              DESPLZ_IZQ
 492+ 9A2D
 493+ 9A2D CD 3C 9A     	call Desplaza_izquierda
 494+ 9A30 CD 88 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A33 CD B0 9A     	call Ciclo_completo_2
 496+ 9A36 21 81 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A39 CB BE        	res 7,(hl)
 498+ 9A3B C9           	ret
 499+ 9A3C
 500+ 9A3C              Desplaza_izquierda
 501+ 9A3C
 502+ 9A3C 3A 88 89     	ld a,(Vel_left)
 503+ 9A3F 47           	ld b,a
 504+ 9A40 2A 6F 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A43 23           1 inc hl
 506+ 9A44 23           	inc hl
 507+ 9A45 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A47 22 6F 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A4A CD AF 8B     	call Extrae_address
 510+ 9A4D 22 63 89     	ld (Puntero_objeto),hl
 511+ 9A50
 512+ 9A50              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A50
 514+ 9A50              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A50              ; Cuántos movimientos hemos hecho ??
 516+ 9A50              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A50
 518+ 9A50 2A 6B 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9A53 EB           	ex de,hl
 520+ 9A54 A7           	and a
 521+ 9A55 ED 52        	sbc hl,de
 522+ 9A57 CB 3D        	srl l
 523+ 9A59 3E 08        6 ld a,8
 524+ 9A5B 95           	sub l
 525+ 9A5C 30 1E        	jr nc,3F
 526+ 9A5E
 527+ 9A5E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A5E              ; B="0".
 529+ 9A5E
 530+ 9A5E 04           4 inc b
 531+ 9A5F 3C           	inc a
 532+ 9A60 20 FC        	jr nz,4B
 533+ 9A62 78           	ld a,b
 534+ 9A63 08           	ex af,af
 535+ 9A64 2A 6B 89     	ld hl,(Indice_Sprite_izq)
 536+ 9A67 23           5 inc hl
 537+ 9A68 23           	inc hl
 538+ 9A69 10 FC        	djnz 5B
 539+ 9A6B 22 6F 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A6E CD AF 8B     	call Extrae_address
 541+ 9A71 22 63 89     	ld (Puntero_objeto),hl
 542+ 9A74
 543+ 9A74              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9A74              ; _(Posicion_actual).
 545+ 9A74
 546+ 9A74 21 61 89     	ld hl,Posicion_actual
 547+ 9A77 35           	dec (hl)
 548+ 9A78 08           	ex af,af
 549+ 9A79 6F           	ld l,a
 550+ 9A7A 18 DD        	jr 6B
 551+ 9A7C
 552+ 9A7C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A7C
 554+ 9A7C 47           3 ld b,a
 555+ 9A7D 2A 69 89     	ld hl,(Indice_Sprite_der)
 556+ 9A80 23           2 inc hl
 557+ 9A81 23           	inc hl
 558+ 9A82 10 FC        	djnz 2B
 559+ 9A84 22 6D 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9A87 C9           8 ret
 561+ 9A88
 562+ 9A88              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9A88              ;
 564+ 9A88              ;	modifica_parametros_1er_DESPLZ
 565+ 9A88              ;
 566+ 9A88              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9A88              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9A88              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9A88
 570+ 9A88 3A 67 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9A8B A7           	and a
 572+ 9A8C 20 1E        	jr nz,1F
 573+ 9A8E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9A8F 32 67 89         ld (CTRL_DESPLZ),a
 575+ 9A92 21 60 89     	ld hl,Columns
 576+ 9A95 34           	inc (hl)
 577+ 9A96 3A 73 89     	ld a,(Cuad_objeto)
 578+ 9A99 E6 01        	and 1
 579+ 9A9B 20 0F        	jr nz,1F
 580+ 9A9D 2A 61 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9AA0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9AA1 22 61 89     	ld (Posicion_actual),hl
 583+ 9AA4 CD 7D 9B     	call Genera_coordenadas
 584+ 9AA7 CD 03 9B     	call Dec_CTRL_DESPLZ
 585+ 9AAA 18 03        	jr 2F
 586+ 9AAC CD 03 9B     1 call Dec_CTRL_DESPLZ
 587+ 9AAF C9           2 ret
 588+ 9AB0
 589+ 9AB0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9AB0
 591+ 9AB0 3A 67 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9AB3 FE F7        	cp $f7
 593+ 9AB5 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9AB7 30 2C        	jr nc,3F
 595+ 9AB9
 596+ 9AB9              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9AB9
 598+ 9AB9 06 00        	ld b,0
 599+ 9ABB 04           4 inc b
 600+ 9ABC 3C           	inc a
 601+ 9ABD FE F7        	cp $f7
 602+ 9ABF 20 FA        	jr nz,4B
 603+ 9AC1 3E FF        	ld a,$ff
 604+ 9AC3 90           	sub b
 605+ 9AC4 32 67 89     	ld (CTRL_DESPLZ),a
 606+ 9AC7 18 1C        	jr 3F
 607+ 9AC9
 608+ 9AC9              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9AC9
 610+ 9AC9 21 60 89     1 ld hl,Columns
 611+ 9ACC 35           	dec (hl)
 612+ 9ACD AF           	xor a
 613+ 9ACE 32 67 89     	ld (CTRL_DESPLZ),a
 614+ 9AD1 3A 73 89     	ld a,(Cuad_objeto)
 615+ 9AD4 E6 01        	and 1
 616+ 9AD6 28 0A        	jr z,2F
 617+ 9AD8 2A 61 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9ADB 2B           	dec hl
 619+ 9ADC 22 61 89     	ld (Posicion_actual),hl
 620+ 9ADF CD 7D 9B     	call Genera_coordenadas
 621+ 9AE2
 622+ 9AE2              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9AE2
 624+ 9AE2 CD D7 8B     2 call Inicia_puntero_objeto_izq
 625+ 9AE5 C9           3 ret
 626+ 9AE6
 627+ 9AE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9AE6              ;
 629+ 9AE6              ;	19/10/22
 630+ 9AE6              ;
 631+ 9AE6              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9AE6              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9AE6
 634+ 9AE6 3A 65 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9AE9 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9AEB C9           	ret
 637+ 9AEC
 638+ 9AEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9AEC              ;
 640+ 9AEC              ;	19/10/22
 641+ 9AEC              ;
 642+ 9AEC              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9AEC              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9AEC
 645+ 9AEC 3A 65 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9AEF FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9AF1 C9           	ret
 648+ 9AF2
 649+ 9AF2              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9AF2              ;
 651+ 9AF2              ;	24/7/22
 652+ 9AF2              ;
 653+ 9AF2              ;	Inc_CTRL_DESPLZ
 654+ 9AF2              ;
 655+ 9AF2              ;
 656+ 9AF2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9AF2
 658+ 9AF2 21 67 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9AF5 3A 89 89     	ld a,(Vel_right)
 660+ 9AF8 A7           	and a
 661+ 9AF9 28 06        	jr z,1F
 662+ 9AFB 47           	ld b,a
 663+ 9AFC 34           3 inc (hl)
 664+ 9AFD 10 FD        	djnz 3B
 665+ 9AFF 18 01        	jr 2F
 666+ 9B01 34           1 inc (hl)
 667+ 9B02 C9           2 ret
 668+ 9B03
 669+ 9B03              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9B03              ;
 671+ 9B03              ;	5/2/23
 672+ 9B03              ;
 673+ 9B03              ;	Dec_CTRL_DESPLZ
 674+ 9B03              ;
 675+ 9B03              ;
 676+ 9B03              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9B03
 678+ 9B03 21 67 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9B06 3A 88 89     	ld a,(Vel_left)
 680+ 9B09 A7           	and a
 681+ 9B0A 28 06        	jr z,1F
 682+ 9B0C 47           	ld b,a
 683+ 9B0D 35           3 dec (hl)
 684+ 9B0E 10 FD        	djnz 3B
 685+ 9B10 18 01        	jr 2F
 686+ 9B12 35           1 dec (hl)
 687+ 9B13 C9           2 ret
 688+ 9B14
 689+ 9B14              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9B14
 691+ 9B14 2A 61 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9B17 01 1F 00     	ld bc,31
 693+ 9B1A A7           	and a
 694+ 9B1B ED 4A        	adc hl,bc
 695+ 9B1D 22 61 89     	ld (Posicion_actual),hl
 696+ 9B20 21 81 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9B23 CB C6        	set 0,(hl)
 698+ 9B25 C9           	ret
 699+ 9B26
 700+ 9B26              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9B26
 702+ 9B26 2A 61 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9B29 01 1F 00     	ld bc,31
 704+ 9B2C A7           	and a
 705+ 9B2D ED 42        	sbc hl,bc
 706+ 9B2F 22 61 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B32 21 81 89     	ld hl,Ctrl_0
 708+ 9B35 CB CE        	set 1,(hl)
 709+ 9B37 C9           	ret
 710+ 9B38
 711+ 9B38              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B38
 713+ 9B38 24           Reaparece_abajo inc h
 714+ 9B39 01 E0 17     	ld bc,$17e0
 715+ 9B3C A7           	and a
 716+ 9B3D ED 4A        	adc hl,bc
 717+ 9B3F 22 61 89     	ld (Posicion_actual),hl
 718+ 9B42 21 81 89     	ld hl,Ctrl_0
 719+ 9B45 CB D6        	set 2,(hl)
 720+ 9B47 C9           	ret
 721+ 9B48
 722+ 9B48              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B48
 724+ 9B48 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B4B A7           	and a
 726+ 9B4C ED 42        	sbc hl,bc
 727+ 9B4E 22 61 89     	ld (Posicion_actual),hl
 728+ 9B51 21 81 89     	ld hl,Ctrl_0
 729+ 9B54 CB DE        	set 3,(hl)
 730+ 9B56 C9           	ret
 731+ 9B57
 732+ 9B57              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B57              ;
 734+ 9B57              ;	15/07/23
 735+ 9B57
 736+ 9B57              Reinicio
 737+ 9B57
 738+ 9B57              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B57
 740+ 9B57 AF           	xor a
 741+ 9B58 21 98 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9B5B CD 79 9B     	call Limpia_contenido_hl
 743+ 9B5E
 744+ 9B5E 21 61 89     	ld hl,Posicion_actual
 745+ 9B61 CD 79 9B     	call Limpia_contenido_hl
 746+ 9B64
 747+ 9B64 CD CC 87     	call Inicializa_Puntero_indice_mov
 748+ 9B67 CD 34 9E     	call Inicia_Puntero_mov
 749+ 9B6A
 750+ 9B6A 21 9A 89     	ld hl,Incrementa_puntero
 751+ 9B6D 06 05        	ld b,5
 752+ 9B6F 77           1 ld (hl),a
 753+ 9B70 23           	inc hl
 754+ 9B71 10 FC        	djnz 1B
 755+ 9B73
 756+ 9B73 21 86 89     	ld hl,Ctrl_2
 757+ 9B76 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B78
 759+ 9B78 C9           	ret
 760+ 9B79
 761+ 9B79 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B7A 23           	inc hl
 763+ 9B7B 77           	ld (hl),a
 764+ 9B7C C9           	ret
 765+ 9B7D
 766+ 9B7D
# file closed: Direcciones.asm
1761  9B7D              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B7D              ; ------------------------------------------------------------------------
   2+ 9B7D              ;
   3+ 9B7D              ;	30/1/24
   4+ 9B7D              ;
   5+ 9B7D              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B7D              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B7D              ;
   8+ 9B7D              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B7D              ;
  10+ 9B7D              ;	Modifica: A,BC y DE.
  11+ 9B7D
  12+ 9B7D 7D           Genera_coordenadas ld a,l
  13+ 9B7E E6 1F        	and $1f
  14+ 9B80 32 65 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9B83
  16+ 9B83 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9B84 FE 40        	cp $40
  18+ 9B86 38 1C        	jr c,4F
  19+ 9B88
  20+ 9B88 CD E5 97     	call calcula_tercio
  21+ 9B8B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9B8C
  23+ 9B8C 1E 00        	ld e,0
  24+ 9B8E 7D           	ld a,l
  25+ 9B8F E6 E0        	and $e0
  26+ 9B91 28 01        	jr z,1F
  27+ 9B93 04           	inc b
  28+ 9B94
  29+ 9B94 04           1 inc b
  30+ 9B95 05           	dec b
  31+ 9B96 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9B98              ;														; _ , salimos.
  33+ 9B98 1C           3 inc e
  34+ 9B99 D6 20        	sub 32
  35+ 9B9B 20 FB        	jr nz,3B
  36+ 9B9D 10 F5        	djnz 1B
  37+ 9B9F
  38+ 9B9F 7B           2 ld a,e
  39+ 9BA0 32 66 89     	ld (Coordenada_y),a
  40+ 9BA3 C9           	ret
  41+ 9BA4
  42+ 9BA4 AF           4 xor a
  43+ 9BA5 32 66 89     	ld (Coordenada_y),a
  44+ 9BA8 C9           	ret
  45+ 9BA9
  46+ 9BA9              ; ------------------------------------------------------------------------
  47+ 9BA9              ;	28/05/23
  48+ 9BA9              ;
  49+ 9BA9              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9BA9              ;	Fila superior "0", Columna izquierda "0".
  51+ 9BA9              ;
  52+ 9BA9              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9BA9              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9BA9              ;
  55+ 9BA9              ;		DE="$120d"
  56+ 9BA9              ;
  57+ 9BA9              ;		D, (Coordenada_X), Columnas, $12
  58+ 9BA9              ;		E, (Coordenada_y), Filas, $0d
  59+ 9BA9              ;
  60+ 9BA9              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9BA9
  62+ 9BA9              ;	Modifica: A,BC y DE.
  63+ 9BA9
  64+ 9BA9
  65+ 9BA9              Genera_coordenadas_disparo
  66+ 9BA9
  67+ 9BA9              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9BA9
  69+ 9BA9 7D           	ld a,l
  70+ 9BAA E6 1F        	and $1f
  71+ 9BAC 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9BAD CD E5 97     	call calcula_tercio
  73+ 9BB0 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9BB1 1E 00        	ld e,0
  75+ 9BB3 7D           	ld a,l
  76+ 9BB4 E6 E0        	and $e0
  77+ 9BB6 28 01        	jr z,1F
  78+ 9BB8 04           	inc b
  79+ 9BB9 1C           1 inc e
  80+ 9BBA D6 20        	sub 32
  81+ 9BBC 20 FB        	jr nz,1B
  82+ 9BBE 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9BC0 C9           	ret
  84+ 9BC1
# file closed: Genera_coordenadas.asm
1762  9BC1              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9BC1              ; Relojes y temporizaciones.
   2+ 9BC1
   3+ 9BC1              ; ------------------------------------------------------
   4+ 9BC1              ;
   5+ 9BC1              ;	16/7/23
   6+ 9BC1              ;
   7+ 9BC1              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9BC1              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9BC1              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9BC1              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9BC1              ;
  12+ 9BC1              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9BC1              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9BC1
  15+ 9BC1              ; Disparo_entidad db 1
  16+ 9BC1              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9BC1              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9BC1
  19+ 9BC1              Habilita_disparos
  20+ 9BC1
  21+ 9BC1 7E           	ld a,(hl)
  22+ 9BC2 A7           	and a
  23+ 9BC3 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9BC4
  25+ 9BC4 EB           	ex de,hl
  26+ 9BC5
  27+ 9BC5 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9BC6 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9BC7
  30+ 9BC7              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9BC7
  32+ 9BC7 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9BC8 7E           	ld a,(hl)
  34+ 9BC9 23           	inc hl
  35+ 9BCA 77           	ld (hl),a
  36+ 9BCB
  37+ 9BCB EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BCC 3E 01        	ld a,1
  39+ 9BCE 77           	ld (hl),a
  40+ 9BCF C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1763  9BD0              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BD0
   2+ 9BD0
   3+ 9BD0              ;   07/07/23
   4+ 9BD0              ;
   5+ 9BD0              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BD0              ;
   7+ 9BD0              ;   Codificación:
   8+ 9BD0              ;
   9+ 9BD0              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9BD0              ;
  11+ 9BD0              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9BD0              ;
  13+ 9BD0              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9BD0              ;
  15+ 9BD0              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9BD0              ;
  17+ 9BD0              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9BD0              ;                               ..... %01000010 Vel_up 4
  19+ 9BD0              ;                                               Vel_down 2
  20+ 9BD0              ;                               ..... $42
  21+ 9BD0              ;
  22+ 9BD0              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9BD0              ;
  24+ 9BD0              ;                               ..... %01000010 Vel_left 4
  25+ 9BD0              ;                                               Vel_right 2
  26+ 9BD0              ;                               ..... $42
  27+ 9BD0              ;
  28+ 9BD0              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9BD0              ;
  30+ 9BD0              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9BD0              ;
  32+ 9BD0              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9BD0              ;
  34+ 9BD0              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9BD0              ;                                     $53
  36+ 9BD0              ;
  37+ 9BD0              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9BD0              ;
  39+ 9BD0              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9BD0              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9BD0              ;
  42+ 9BD0              ;                       Arriba ..... $81
  43+ 9BD0              ;                       Arriba - izquierda ..... $a1
  44+ 9BD0              ;                       Arriba - derecha ..... $91
  45+ 9BD0              ;
  46+ 9BD0              ;                       Abajo ..... $41
  47+ 9BD0              ;                       Abajo - izquierda ..... $61
  48+ 9BD0              ;                       Abajo - derecha ..... $51
  49+ 9BD0              ;
  50+ 9BD0              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9BD0              ;
  52+ 9BD0              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9BD0              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9BD0              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9BD0              ;
  56+ 9BD0              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9BD0              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9BD0              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9BD0              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9BD0              ;
  61+ 9BD0              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9BD0              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9BD0              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9BD0              ;
  65+ 9BD0              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9BD0              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9BD0              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9BD0              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9BD0
  70+ 9BD0              ; ----- ----- ----- ----- -----
  71+ 9BD0
  72+ 9BD0 FC 9B        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9BD2 04 9C            defw F_1
  74+ 9BD4 0E 9C            defw F_2
  75+ 9BD6 18 9C            defw Codo_abajo_derecha
  76+ 9BD8 4C 9C            defw Derecha_y_subiendo
  77+ 9BDA 56 9C            defw Derecha_y_subiendo_1
  78+ 9BDC 60 9C            defw F_3
  79+ 9BDE 6A 9C            defw F_4
  80+ 9BE0 74 9C            defw Derecha_y_bajando
  81+ 9BE2 7E 9C            defw Derecha_y_bajando_1
  82+ 9BE4 88 9C            defw Derecha_y_bajando_2
  83+ 9BE6 92 9C            defw Codo_derecha_abajo
  84+ 9BE8 C2 9C            defw Codo_abajo_izq.
  85+ 9BEA F6 9C            defw Izquierda_y_subiendo
  86+ 9BEC 00 9D            defw Izquierda_y_subiendo_1
  87+ 9BEE 0A 9D            defw F_5
  88+ 9BF0 14 9D            defw F_6
  89+ 9BF2 1E 9D            defw Izquierda_y_bajando
  90+ 9BF4 28 9D            defw Izquierda_y_bajando_1
  91+ 9BF6 32 9D            defw Izquierda_y_bajando_2
  92+ 9BF8 3C 9D            defw Codo_izquierda_abajo
  93+ 9BFA 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9BFC
  95+ 9BFC 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 9C00 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C04
  98+ 9C04 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C08 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C0C 08 00
 100+ 9C0E
 101+ 9C0E 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 9C12 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 9C16 0F FE
 103+ 9C18
 104+ 9C18 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 9C1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 9C20 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 9C24 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 9C28 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 9C2C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 9C30 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 9C34 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 9C38 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 9C3C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 9C40 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 9C44 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 9C48 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 9C4C
 118+ 9C4C 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 9C50 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 9C54 06 00
 120+ 9C56
 121+ 9C56 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 9C5A 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 9C5E 02 00
 123+ 9C60
 124+ 9C60 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 9C64 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 9C68 04 00
 126+ 9C6A
 127+ 9C6A 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 9C6E 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 9C72 08 00
 129+ 9C74
 130+ 9C74 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 9C78 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 9C7C 02 00
 132+ 9C7E
 133+ 9C7E 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 9C82 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 9C86 06 00
 135+ 9C88
 136+ 9C88 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 9C8C 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 9C90 06 00
 138+ 9C92
 139+ 9C92              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 9C92
 141+ 9C92 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 9C96 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9C9A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 9C9E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 9CA2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CA6 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 9CAA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CAE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 9CB2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 9CB6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 9CBA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 9CBE 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 9CC2
 154+ 9CC2 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 9CC6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 9CCA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9CCE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 9CD2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9CD6 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 9CDA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 9CDE 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 9CE2 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 9CE6 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9CEA 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 9CEE 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 9CF2 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 9CF6
 168+ 9CF6 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 9CFA 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 9CFE 06 00
 170+ 9D00
 171+ 9D00
 172+ 9D00
 173+ 9D00              ;! """"""""""""""""""""""""""""""""""""""""""""""""""
 174+ 9D00
 175+ 9D00 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 176+ 9D04 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 176+ 9D08 02 00
 177+ 9D0A
 178+ 9D0A 11 11 21 01  F_5 db $11,$11,$21,1
 179+ 9D0E 11 11 01 FD      db $11,$11,$01,253,4,0
 179+ 9D12 04 00
 180+ 9D14
 181+ 9D14 11 11 21 01  F_6 db $11,$11,$21,1
 182+ 9D18 11 11 02 FD      db $11,$11,$02,253,8,0
 182+ 9D1C 08 00
 183+ 9D1E
 184+ 9D1E 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 185+ 9D22 11 11 61 FD      db $11,$11,$61,253,2,0
 185+ 9D26 02 00
 186+ 9D28
 187+ 9D28 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 188+ 9D2C 11 11 61 FD      db $11,$11,$61,253,6,0
 188+ 9D30 06 00
 189+ 9D32
 190+ 9D32 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 191+ 9D36 11 11 61 FD      db $11,$11,$61,253,6,0
 191+ 9D3A 06 00
 192+ 9D3C
 193+ 9D3C 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 194+ 9D40 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 195+ 9D44 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 196+ 9D48 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 197+ 9D4C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 9D50 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 199+ 9D54 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 200+ 9D58 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 201+ 9D5C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 202+ 9D60 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 203+ 9D64 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 204+ 9D68 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 205+ 9D6C
 206+ 9D6C              ; ----- ----- ----- ----- -----
 207+ 9D6C              ;
 208+ 9D6C              ;   28/12/23
 209+ 9D6C
 210+ 9D6C              Movimiento
 211+ 9D6C
 212+ 9D6C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 213+ 9D6C
 214+ 9D6C 3A 86 89         ld a,(Ctrl_2)
 215+ 9D6F CB 57            bit 2,a
 216+ 9D71 20 1B            jr nz, Desplazamiento_iniciado
 217+ 9D73
 218+ 9D73 2A 96 89         ld hl,(Puntero_mov)
 219+ 9D76 7E               ld a,(hl)
 220+ 9D77
 221+ 9D77              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 222+ 9D77
 223+ 9D77              Inicia_desplazamiento.
 224+ 9D77
 225+ 9D77              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 226+ 9D77
 227+ 9D77 CD 6A 9E         call Ajusta_velocidad_desplazamiento
 228+ 9D7A
 229+ 9D7A              ; Iniciamos (Repetimos_mov).
 230+ 9D7A
 231+ 9D7A 7E               ld a,(hl)
 232+ 9D7B E6 0F            and $0f
 233+ 9D7D 32 9C 89         ld (Repetimos_desplazamiento),a
 234+ 9D80 32 9D 89         ld (Repetimos_desplazamiento_backup),a
 235+ 9D83
 236+ 9D83              ; Iniciamos (Cola_de_desplazamiento).
 237+ 9D83
 238+ 9D83 23               inc hl
 239+ 9D84 7E               ld a,(hl)
 240+ 9D85 32 9F 89         ld (Cola_de_desplazamiento),a
 241+ 9D88 2B               dec hl
 242+ 9D89
 243+ 9D89 21 86 89         ld hl,Ctrl_2
 244+ 9D8C CB D6            set 2,(hl)
 245+ 9D8E
 246+ 9D8E              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 247+ 9D8E              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 248+ 9D8E
 249+ 9D8E              Desplazamiento_iniciado
 250+ 9D8E
 251+ 9D8E CD 3E 9E         call Aplica_desplazamiento
 252+ 9D91
 253+ 9D91              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 254+ 9D91
 255+ 9D91 3A BF 89         ld a,(Ctrl_3)
 256+ 9D94 CB 4F            bit 1,a
 257+ 9D96 C0               ret nz
 258+ 9D97
 259+ 9D97              ;    ld a,(Ctrl_2)
 260+ 9D97              ;    bit 4,a
 261+ 9D97              ;    ret nz                                                      ; Salimos si se ha producido reinicio.
 262+ 9D97
 263+ 9D97 21 9C 89     3 ld hl,Repetimos_desplazamiento
 264+ 9D9A 35               dec (hl)
 265+ 9D9B C0               ret nz
 266+ 9D9C
 267+ 9D9C              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 268+ 9D9C              ; Hay que volver a ejecutar este desplazamiento ???.
 269+ 9D9C              ; Analiza (Cola_de_desplazamiento).
 270+ 9D9C
 271+ 9D9C 3A 9F 89     Cola ld a,(Cola_de_desplazamiento)
 272+ 9D9F A7               and a
 273+ 9DA0 CC 93 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 274+ 9DA3 28 30            jr z,Reinicia_el_movimiento
 275+ 9DA5
 276+ 9DA5 FE FF            cp $ff
 277+ 9DA7 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 278+ 9DA9
 279+ 9DA9 FE FE            cp $fe
 280+ 9DAB CC 18 9E         call z,Fijamos_bucle
 281+ 9DAE 28 25            jr z,Reinicia_el_movimiento
 282+ 9DB0
 283+ 9DB0 FE FD            cp $fd
 284+ 9DB2 20 11            jr nz,1F
 285+ 9DB4
 286+ 9DB4              ; ---
 287+ 9DB4              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 288+ 9DB4
 289+ 9DB4 3A 86 89         ld a,(Ctrl_2)
 290+ 9DB7 CB 5F            bit 3,a
 291+ 9DB9 20 1A            jr nz,Reinicia_el_movimiento
 292+ 9DBB
 293+ 9DBB              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 294+ 9DBB
 295+ 9DBB 21 86 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 296+ 9DBE CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 297+ 9DC0
 298+ 9DC0 CD 29 9E         call Inicia_Repetimos_movimiento
 299+ 9DC3 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 300+ 9DC5              ; ---
 301+ 9DC5
 302+ 9DC5 FE 01        1 cp 1
 303+ 9DC7 CA 02 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 304+ 9DCA
 305+ 9DCA 3D               dec a
 306+ 9DCB 32 9F 89         ld (Cola_de_desplazamiento),a
 307+ 9DCE
 308+ 9DCE 3A 9D 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 309+ 9DD1 32 9C 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 310+ 9DD4              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 311+ 9DD4 C9               ret
 312+ 9DD5
 313+ 9DD5              Reinicia_el_movimiento
 314+ 9DD5
 315+ 9DD5 3A 86 89         ld a,(Ctrl_2)
 316+ 9DD8 CB 5F            bit 3,a
 317+ 9DDA 28 1B            jr z,2F
 318+ 9DDC
 319+ 9DDC              ; (Cola_de_desplazamiento)="254".
 320+ 9DDC
 321+ 9DDC 21 9E 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 322+ 9DDF 35               dec (hl)
 323+ 9DE0 20 15            jr nz,2F
 324+ 9DE2
 325+ 9DE2              ; Fin de las repeticiones del último movimiento.
 326+ 9DE2
 327+ 9DE2 21 86 89         ld hl,Ctrl_2
 328+ 9DE5 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 329+ 9DE7
 330+ 9DE7 2A 96 89         ld hl,(Puntero_mov)
 331+ 9DEA 23               inc hl
 332+ 9DEB 23               inc hl
 333+ 9DEC 23               inc hl
 334+ 9DED 22 96 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 335+ 9DF0              ;                                                               ; _ para ejecutar su mandato. :)
 336+ 9DF0 7E               ld a,(hl)
 337+ 9DF1 32 9F 89         ld (Cola_de_desplazamiento),a
 338+ 9DF4
 339+ 9DF4 C3 9C 9D         jp Cola
 340+ 9DF7
 341+ 9DF7 CD 34 9E     2 call Inicia_Puntero_mov
 342+ 9DFA
 343+ 9DFA 21 86 89         ld hl,Ctrl_2
 344+ 9DFD CB 96            res 2,(hl)
 345+ 9DFF
 346+ 9DFF C3 6C 9D         jp Movimiento
 347+ 9E02
 348+ 9E02              Siguiente_desplazamiento
 349+ 9E02
 350+ 9E02              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 351+ 9E02              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 352+ 9E02
 353+ 9E02 21 86 89         ld hl,Ctrl_2
 354+ 9E05 CB 96            res 2,(hl)
 355+ 9E07
 356+ 9E07 2A 96 89         ld hl,(Puntero_mov)
 357+ 9E0A 23               inc hl
 358+ 9E0B 23               inc hl
 359+ 9E0C 22 96 89         ld (Puntero_mov),hl
 360+ 9E0F
 361+ 9E0F 7E               ld a,(hl)
 362+ 9E10 A7               and a
 363+ 9E11 CC 93 9E         call z,Incrementa_Puntero_indice_mov
 364+ 9E14 CA D5 9D         jp z,Reinicia_el_movimiento
 365+ 9E17
 366+ 9E17 C9               ret
 367+ 9E18
 368+ 9E18              ; Subrutinas -----------------------------------------
 369+ 9E18              ; ---------- --------- --------- ---------- ----------
 370+ 9E18              ;
 371+ 9E18              ;   24/07/23
 372+ 9E18              ;
 373+ 9E18              ;   Fijamos_bucle
 374+ 9E18              ;
 375+ 9E18              ;
 376+ 9E18
 377+ 9E18              Fijamos_bucle
 378+ 9E18
 379+ 9E18 3A 9A 89         ld a,(Incrementa_puntero)
 380+ 9E1B 3C               inc a
 381+ 9E1C 32 9B 89         ld (Incrementa_puntero_backup),a
 382+ 9E1F
 383+ 9E1F CD 93 9E         call Incrementa_Puntero_indice_mov
 384+ 9E22 2A 94 89         ld hl,(Puntero_indice_mov)
 385+ 9E25 22 98 89         ld (Puntero_indice_mov_bucle),hl
 386+ 9E28 C9               ret
 387+ 9E29
 388+ 9E29              ; ---------- --------- --------- ---------- ----------
 389+ 9E29              ;
 390+ 9E29              ;   07/7/23
 391+ 9E29              ;
 392+ 9E29              ;   Inicia_Repetimos_movimiento
 393+ 9E29              ;
 394+ 9E29              ;
 395+ 9E29
 396+ 9E29              Inicia_Repetimos_movimiento
 397+ 9E29
 398+ 9E29              ; Iniciamos (Repetimos_movimiento).
 399+ 9E29
 400+ 9E29 DD 2A 96 89      ld ix,(Puntero_mov)
 401+ 9E2D DD 7E 02         ld a,(ix+2)
 402+ 9E30 32 9E 89         ld (Repetimos_movimiento),a
 403+ 9E33
 404+ 9E33 C9               ret
 405+ 9E34
 406+ 9E34              ; ---------- --------- --------- ---------- ----------
 407+ 9E34              ;
 408+ 9E34              ;   26/6/23
 409+ 9E34              ;
 410+ 9E34              ;   Inicia_Puntero_mov
 411+ 9E34              ;
 412+ 9E34              ;
 413+ 9E34
 414+ 9E34 2A 94 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 415+ 9E37 CD AF 8B         call Extrae_address
 416+ 9E3A 22 96 89         ld (Puntero_mov),hl
 417+ 9E3D C9               ret
 418+ 9E3E
 419+ 9E3E              ; ---------- --------- --------- ---------- ----------
 420+ 9E3E              ;
 421+ 9E3E              ;   27/06/23
 422+ 9E3E              ;
 423+ 9E3E              ;   Aplica_movimiento.
 424+ 9E3E
 425+ 9E3E              Aplica_desplazamiento
 426+ 9E3E
 427+ 9E3E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 428+ 9E3E
 429+ 9E3E 2A 96 89         ld hl, (Puntero_mov)
 430+ 9E41
 431+ 9E41 7E               ld a,(hl)
 432+ 9E42 E6 F0            and $f0
 433+ 9E44 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 434+ 9E45
 435+ 9E45 CB 7E            bit 7,(hl)
 436+ 9E47 28 03            jr z,1F
 437+ 9E49 CD 64 98         call Mov_up
 438+ 9E4C 2A 96 89     1 ld hl, (Puntero_mov)
 439+ 9E4F CB 76            bit 6,(hl)
 440+ 9E51 28 03            jr z,2F
 441+ 9E53 CD 2B 98         call Mov_down
 442+ 9E56
 443+ 9E56              ; Se ha aplicado reinicio ???
 444+ 9E56              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 445+ 9E56
 446+ 9E56              ;    ld a,(Ctrl_3)
 447+ 9E56              ;    bit 1,a
 448+ 9E56              ;    ret nz
 449+ 9E56
 450+ 9E56 2A 96 89     2 ld hl, (Puntero_mov)
 451+ 9E59 CB 6E            bit 5,(hl)
 452+ 9E5B 28 03            jr z,3F
 453+ 9E5D CD CA 99         call Mov_left
 454+ 9E60 2A 96 89     3 ld hl, (Puntero_mov)
 455+ 9E63 CB 66            bit 4,(hl)
 456+ 9E65 C8               ret z
 457+ 9E66 CD A7 98         call Mov_right
 458+ 9E69 C9               ret
 459+ 9E6A
 460+ 9E6A              ; ---------- --------- --------- ---------- ----------
 461+ 9E6A              ;
 462+ 9E6A              ;   26/06/23
 463+ 9E6A              ;
 464+ 9E6A              ;   Ajusta_velocidad_desplazamiento.
 465+ 9E6A
 466+ 9E6A              Ajusta_velocidad_desplazamiento
 467+ 9E6A
 468+ 9E6A              ; 1er byte de la cadena de movimiento.
 469+ 9E6A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 470+ 9E6A
 471+ 9E6A CD 88 9E         call Extrae_nibble_alto
 472+ 9E6D
 473+ 9E6D 32 8A 89         ld (Vel_up),a
 474+ 9E70 79               ld a,c
 475+ 9E71 E6 0F            and $0f
 476+ 9E73 32 8B 89         ld (Vel_down),a
 477+ 9E76
 478+ 9E76              ; Saltamos al 2º byte de la cadena de movimiento.
 479+ 9E76              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 480+ 9E76
 481+ 9E76 23               inc hl
 482+ 9E77 CD 88 9E         call Extrae_nibble_alto
 483+ 9E7A
 484+ 9E7A 32 88 89         ld (Vel_left),a
 485+ 9E7D 79               ld a,c
 486+ 9E7E E6 0F            and $0f
 487+ 9E80 32 89 89         ld (Vel_right),a
 488+ 9E83
 489+ 9E83              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 490+ 9E83
 491+ 9E83 23               inc hl
 492+ 9E84 22 96 89         ld (Puntero_mov),hl
 493+ 9E87 C9               ret
 494+ 9E88
 495+ 9E88 06 04        Extrae_nibble_alto ld b,4
 496+ 9E8A 7E               ld a,(hl)
 497+ 9E8B 4F               ld c,a
 498+ 9E8C E6 F0            and $f0
 499+ 9E8E CB 3F        1 srl a
 500+ 9E90 10 FC            djnz 1B
 501+ 9E92 C9               ret
 502+ 9E93
 503+ 9E93              ; ---------- --------- --------- ---------- ----------
 504+ 9E93              ;
 505+ 9E93              ;   5/7/23
 506+ 9E93              ;
 507+ 9E93              ;   Incrementa_Puntero_indice_mov
 508+ 9E93
 509+ 9E93              Incrementa_Puntero_indice_mov
 510+ 9E93
 511+ 9E93 21 9A 89         ld hl,Incrementa_puntero
 512+ 9E96 34               inc (hl)
 513+ 9E97
 514+ 9E97 2A 94 89         ld hl,(Puntero_indice_mov)
 515+ 9E9A 01 02 00         ld bc,2
 516+ 9E9D A7               and a
 517+ 9E9E 09               add hl,bc
 518+ 9E9F 22 94 89         ld (Puntero_indice_mov),hl
 519+ 9EA2
 520+ 9EA2 7E               ld a,(hl)
 521+ 9EA3 A7               and a
 522+ 9EA4
 523+ 9EA4              ;! STOP. Fin del patrón de movimiento de la entidad.
 524+ 9EA4
 525+ 9EA4              ;    jr z,$
 526+ 9EA4
 527+ 9EA4              ;! Reinicia el Patrón de movimiento.
 528+ 9EA4
 529+ 9EA4 CC A9 9E         call z,Inicializa_Puntero_indice_mov_2
 530+ 9EA7
 531+ 9EA7 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 532+ 9EA8
 533+ 9EA8 C9               ret
 534+ 9EA9
 535+ 9EA9              ; ---------- --------- --------- ---------- ----------
 536+ 9EA9              ;
 537+ 9EA9              ;   15/01/24
 538+ 9EA9              ;
 539+ 9EA9              ;   Inicializa_Puntero_indice_mov
 540+ 9EA9
 541+ 9EA9              Inicializa_Puntero_indice_mov_2
 542+ 9EA9
 543+ 9EA9              ; Existe etiqueta de bucle principal???
 544+ 9EA9
 545+ 9EA9 2A 98 89         ld hl,(Puntero_indice_mov_bucle)
 546+ 9EAC 24               inc h
 547+ 9EAD 25               dec h
 548+ 9EAE 28 05            jr z,2F
 549+ 9EB0
 550+ 9EB0 22 94 89         ld (Puntero_indice_mov),hl
 551+ 9EB3 18 14            jr 3F
 552+ 9EB5
 553+ 9EB5              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 554+ 9EB5
 555+ 9EB5 3A 9A 89     2 ld a,(Incrementa_puntero)
 556+ 9EB8 47               ld b,a
 557+ 9EB9
 558+ 9EB9 2A 94 89         ld hl,(Puntero_indice_mov)
 559+ 9EBC 2B           1 dec hl
 560+ 9EBD 2B               dec hl
 561+ 9EBE 10 FC            djnz 1B
 562+ 9EC0 22 94 89         ld (Puntero_indice_mov),hl
 563+ 9EC3
 564+ 9EC3 AF               xor a
 565+ 9EC4 32 9A 89         ld (Incrementa_puntero),a
 566+ 9EC7 18 06            jr 4F
 567+ 9EC9
 568+ 9EC9 3A 9B 89     3 ld a,(Incrementa_puntero_backup)
 569+ 9ECC 32 9A 89         ld (Incrementa_puntero),a
 570+ 9ECF C9           4 ret
 571+ 9ED0
 572+ 9ED0              ; ----------------------------------------------------------------------
 573+ 9ED0              ;
 574+ 9ED0              ;   30/01/24
 575+ 9ED0              ;
 576+ 9ED0              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 577+ 9ED0
 578+ 9ED0 3A 5E 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 579+ 9ED3 CD DA 88         call Calcula_salto_en_BC
 580+ 9ED6 21 8C 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 581+ 9ED9 A7               and a
 582+ 9EDA ED 4A            adc hl,bc
 583+ 9EDC C9               ret
 584+ 9EDD
 585+ 9EDD              ; ----------------------------------------------------------------------
 586+ 9EDD              ;
 587+ 9EDD              ;   30/01/24
 588+ 9EDD              ;
 589+ 9EDD              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 590+ 9EDD              ;
 591+ 9EDD              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 592+ 9EDD
 593+ 9EDD 4E           Transfiere_datos_de_contadores ld c,(hl)
 594+ 9EDE 23               inc hl
 595+ 9EDF 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 596+ 9EE0 69               ld l,c
 597+ 9EE1 60               ld h,b
 598+ 9EE2 22 7F 89         ld (Contador_de_mov_masticados),hl
 599+ 9EE5 C9               ret
 600+ 9EE6
 601+ 9EE6
# file closed: Patrones_de_mov.asm
1764  9EE6              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9EE6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9EE6              ;
   3+ 9EE6              ;	12/12/23
   4+ 9EE6              ;
   5+ 9EE6              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9EE6
   7+ 9EE6              ;	ADC HL,SP	LD (addr),SP
   8+ 9EE6              ;	ADD HL,SP	LD SP,(addr)
   9+ 9EE6              ;	ADD IX,SP	LD SP,nn
  10+ 9EE6              ; 	ADD IY,SP	LD SP,HL
  11+ 9EE6              ;				LD SP,IX
  12+ 9EE6              ;	DEC SP		LD SP,IY
  13+ 9EE6
  14+ 9EE6              ;	EX (SP),HL
  15+ 9EE6              ;	EX (SP),IX
  16+ 9EE6              ;	EX (SP),IY
  17+ 9EE6
  18+ 9EE6              ;	INC SP
  19+ 9EE6
  20+ 9EE6                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 B1 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 7B 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 7D 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A A0 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A B9 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 81 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A BD 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A B7 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A A0 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 B9 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 81 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 BD 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B B1 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 B7 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B B1 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A B7 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 B7 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1765  8131
1766  8131              	SAVESNA "Pruebas.sna", START
1767  8131
1768  8131
1769  8131
1770  8131
# file closed: Banco_de_pruebas.asm
