# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 65 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 74 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 45 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8F 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 91 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8D 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8D 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 90 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD A1 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 36 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C3 89        	defw Caja_1
 154+ 89A9 CF 89        	defw Caja_2
 155+ 89AB DB 89        	defw Caja_3
 156+ 89AD E7 89        	defw Caja_4
 157+ 89AF F3 89        	defw Caja_5
 158+ 89B1 FF 89        	defw Caja_6
 159+ 89B3              ;	defw Caja_7
 160+ 89B3
 161+ 89B3 00 00        	defw 0
 162+ 89B5 00 00        	defw 0
 163+ 89B7
 164+ 89B7              ; -------------------------
 165+ 89B7
 166+ 89B7              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B7
 168+ 89B7              ;	db 0
 169+ 89B7
 170+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B7              ;
 172+ 89B7              ;	28/05/24
 173+ 89B7              ;
 174+ 89B7              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B7              ;
 176+ 89B7              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B7
 178+ 89B7 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89B8 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BA 00           	db 0												; (Contador_de_vueltas).
 181+ 89BB 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BC 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89BE 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C0 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C2 00           	db 0												; (Velocidad).
 186+ 89C3
 187+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C3              ;
 189+ 89C3              ;	22/01/24
 190+ 89C3              ;
 191+ 89C3              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C3
 193+ 89C3 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C6 00           	db 0												; (Contador_de_vueltas).
 195+ 89C7 00           	db 0												; (Impacto).
 196+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89CE 00           	db 0												; (Velocidad).
 200+ 89CF
 201+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 202+ 89CF
 203+ 89CF 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D3 00           	db 0												; (Impacto).
 206+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DA 00           	db 0												; (Velocidad).
 210+ 89DB
 211+ 89DB              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DB
 213+ 89DB 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89DE 00           	db 0 												; (Contador_de_vueltas).
 215+ 89DF 00           	db 0												; (Impacto).
 216+ 89E0 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E6 00           	db 0												; (Velocidad).
 220+ 89E7
 221+ 89E7              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E7
 223+ 89E7 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EA 00           	db 0 												; (Contador_de_vueltas).
 225+ 89EB 00           	db 0												; (Impacto).
 226+ 89EC 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F2 00           	db 0												; (Velocidad).
 230+ 89F3
 231+ 89F3              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F3
 233+ 89F3 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F6 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F7 00           	db 0												; (Impacto).
 236+ 89F8 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 89FE 00           	db 0												; (Velocidad).
 240+ 89FF
 241+ 89FF              ; ---------- ---------- ---------- ---------- ----------
 242+ 89FF
 243+ 89FF 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A02 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A03 00           	db 0												; (Impacto).
 246+ 8A04 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A06 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A08 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0A 00           	db 0												; (Velocidad).
 250+ 8A0B
 251+ 8A0B              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0B
 253+ 8A0B              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A0B              ;	db 0 												; (Contador_de_vueltas).
 255+ 8A0B              ;	db 0												; (Impacto).
 256+ 8A0B              ;	defw 0												; (Puntero_de_impresion).
 257+ 8A0B              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A0B              ;	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A0B              ;	db 0												; (Velocidad).
 260+ 8A0B
 261+ 8A0B              ; -------------------------------------------------------------------------------------
 262+ 8A0B              ;
 263+ 8A0B              ;	10/11/24
 264+ 8A0B              ;
 265+ 8A0B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A0B              ;
 267+ 8A0B              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A0B              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A0B              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A0B              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A0B
 272+ 8A0B              Indice_de_definiciones_de_entidades
 273+ 8A0B
 274+ 8A0B 0F 8A        	defw Entidad_1
 275+ 8A0D 1C 8A        	defw Entidad_2
 276+ 8A0F
 277+ 8A0F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A0F
 279+ 8A0F              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A0F
 281+ 8A0F 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A12 01           	db 1												; (Contador_de_vueltas).
 283+ 8A13 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A15 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A17
 286+ 8A17              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A17              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A17
 289+ 8A17 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A19 00           	db 0												; (Cuad_objeto).
 291+ 8A1A
 292+ 8A1A C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A1C
 294+ 8A1C              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A1C
 296+ 8A1C 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A1F 01           	db 1												; (Contador_de_vueltas).
 298+ 8A20 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A22 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A24 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A26 01           	db 1												; (Cuad_objeto).
 302+ 8A27 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A29
 304+ 8A29              ; -------------------------------------------------------------------------------------
 305+ 8A29              ;
 306+ 8A29              ;	28/05/24
 307+ 8A29              ;
 308+ 8A29              ;	Definición de Amadeus.
 309+ 8A29              ;
 310+ 8A29              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A29              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A29
 313+ 8A29 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A2C 00           	db 0												; (Contador_de_vueltas).
 315+ 8A2D C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A2F D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A31 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A33 03           	db 3												; (Cuad_objeto).
 319+ 8A34 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A36              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A36
   2+ 8A36
   3+ 8A36              ;   07/07/23
   4+ 8A36              ;
   5+ 8A36              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A36              ;
   7+ 8A36              ;   Codificación:
   8+ 8A36              ;
   9+ 8A36              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A36              ;
  11+ 8A36              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A36              ;
  13+ 8A36              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A36              ;
  15+ 8A36              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A36              ;
  17+ 8A36              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A36              ;                               ..... %01000010 Vel_up 4
  19+ 8A36              ;                                               Vel_down 2
  20+ 8A36              ;                               ..... $42
  21+ 8A36              ;
  22+ 8A36              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A36              ;
  24+ 8A36              ;                               ..... %01000010 Vel_left 4
  25+ 8A36              ;                                               Vel_right 2
  26+ 8A36              ;                               ..... $42
  27+ 8A36              ;
  28+ 8A36              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A36              ;
  30+ 8A36              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A36              ;
  32+ 8A36              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A36              ;
  34+ 8A36              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A36              ;                                     $53
  36+ 8A36              ;
  37+ 8A36              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A36              ;
  39+ 8A36              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A36              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A36              ;
  42+ 8A36              ;                       Arriba ..... $81
  43+ 8A36              ;                       Arriba - izquierda ..... $a1
  44+ 8A36              ;                       Arriba - derecha ..... $91
  45+ 8A36              ;
  46+ 8A36              ;                       Abajo ..... $41
  47+ 8A36              ;                       Abajo - izquierda ..... $61
  48+ 8A36              ;                       Abajo - derecha ..... $51
  49+ 8A36              ;
  50+ 8A36              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A36              ;
  52+ 8A36              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A36              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A36              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A36              ;
  56+ 8A36              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A36              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A36              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A36              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A36              ;
  61+ 8A36              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A36              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A36              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A36              ;
  65+ 8A36              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A36              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A36              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A36              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A36
  70+ 8A36              ; ----- ----- ----- ----- -----
  71+ 8A36
  72+ 8A36 62 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A38 6A 8A            defw F_1
  74+ 8A3A 74 8A            defw F_2
  75+ 8A3C 7E 8A            defw Codo_abajo_derecha
  76+ 8A3E B2 8A            defw Derecha_y_subiendo
  77+ 8A40 BC 8A            defw Derecha_y_subiendo_1
  78+ 8A42 C6 8A            defw F_3
  79+ 8A44 D0 8A            defw F_4
  80+ 8A46 DA 8A            defw Derecha_y_bajando
  81+ 8A48 E4 8A            defw Derecha_y_bajando_1
  82+ 8A4A EE 8A            defw Derecha_y_bajando_2
  83+ 8A4C F8 8A            defw Codo_derecha_abajo
  84+ 8A4E 28 8B            defw Codo_abajo_izq.
  85+ 8A50 5C 8B            defw Izquierda_y_subiendo
  86+ 8A52 66 8B            defw Izquierda_y_subiendo_1
  87+ 8A54 70 8B            defw F_5
  88+ 8A56 7A 8B            defw F_6
  89+ 8A58 84 8B            defw Izquierda_y_bajando
  90+ 8A5A 8E 8B            defw Izquierda_y_bajando_1
  91+ 8A5C 98 8B            defw Izquierda_y_bajando_2
  92+ 8A5E A2 8B            defw Codo_izquierda_abajo
  93+ 8A60 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A62
  95+ 8A62 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A66 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6A
  98+ 8A6A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A72 08 00
 100+ 8A74
 101+ 8A74 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A78 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7C 0F FE
 103+ 8A7E
 104+ 8A7E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A92 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB2
 118+ 8AB2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABA 06 00
 120+ 8ABC
 121+ 8ABC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC0 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC4 02 00
 123+ 8AC6
 124+ 8AC6 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACA 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACE 04 00
 126+ 8AD0
 127+ 8AD0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD8 08 00
 129+ 8ADA
 130+ 8ADA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE2 02 00
 132+ 8AE4
 133+ 8AE4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AEC 06 00
 135+ 8AEE
 136+ 8AEE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF6 06 00
 138+ 8AF8
 139+ 8AF8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF8
 141+ 8AF8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B04 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B24 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B28
 154+ 8B28 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B30 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B34 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B38 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B40 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B44 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B48 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B50 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B54 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B58 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5C
 168+ 8B5C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B60 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B64 06 00
 170+ 8B66
 171+ 8B66 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6E 02 00
 173+ 8B70
 174+ 8B70 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B74 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B78 04 00
 176+ 8B7A
 177+ 8B7A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B82 08 00
 179+ 8B84
 180+ 8B84 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B88 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8C 02 00
 182+ 8B8E
 183+ 8B8E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B92 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B96 06 00
 185+ 8B98
 186+ 8B98 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA0 06 00
 188+ 8BA2
 189+ 8BA2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC6 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCE 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD2
 202+ 8BD2
 203+ 8BD2
 204+ 8BD2
 205+ 8BD2
 206+ 8BD2
 207+ 8BD2
 208+ 8BD2
 209+ 8BD2
 210+ 8BD2
# file closed: Patrones_de_mov.asm
 149  8BD2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD2              ; 19/1/24
   2+ 8BD2
   3+ 8BD2              Indice_de_niveles
   4+ 8BD2
   5+ 8BD2 DA 8B        	defw Nivel_1
   6+ 8BD4 E1 8B        	defw Nivel_2
   7+ 8BD6
   8+ 8BD6              ;	...
   9+ 8BD6              ;	...
  10+ 8BD6              ;	+ Niveles ...
  11+ 8BD6
  12+ 8BD6 00 00        	defw 0
  13+ 8BD8 00 00        	defw 0
  14+ 8BDA
  15+ 8BDA 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDB 01 01 01 01  	db 1,1,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BDF 01 01
  17+ 8BE1
  18+ 8BE1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE6 01 02
  20+ 8BE8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BEC 01 02
  21+ 8BEE
# file closed: Niveles.asm
 150  8BEE
 151  8BEE              ; --------------------------------------------------------------------------------
 152  8BEE              ;
 153  8BEE              ; 12/05/24
 154  8BEE              ;
 155  8BEE              ; Parámetros DRAW.
 156  8BEE              ;
 157  8BEE
 158  8BEE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEE
 160  8BEE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEF              ;															- Patrón de movimiento.
 162  8BEF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF1
 165  8BF1 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF2
 168  8BF2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF2              ; Ejemplos.
 171  8BF2
 172  8BF2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF2
 178  8BF2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF3
 182  8BF3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF5
 185  8BF5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF7
 187  8BF7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF7
 189  8BF7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF9              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF9
 192  8BF9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF9
 194  8BF9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFA
 200  8BFA 00           Ctrl_2 db 0
 201  8BFB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFB              ;
 209  8BFB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFB              ;														BIT 4, ???
 215  8BFB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFB
 217  8BFB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFC              ;
 223  8BFC              ; 														DESCRIPCIÖN:
 224  8BFC              ;
 225  8BFC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFC              ;
 239  8BFC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFC
 243  8BFC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFC
 245  8BFC 00           Filas db 0												; Filas. [DRAW]
 246  8BFD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C00 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C02
 250  8C02              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C02
 252  8C02 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C03              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C03              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C03
 256  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C03
 258  8C03              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C03              ;
 260  8C03              ;	COLORES: 0 ..... NEGRO
 261  8C03              ;    		 1 ..... AZUL
 262  8C03              ; 			 2 ..... ROJO
 263  8C03              ;			 3 ..... MAGENTA
 264  8C03              ; 			 4 ..... VERDE
 265  8C03              ; 			 5 ..... CIAN
 266  8C03              ;			 6 ..... AMARILLO
 267  8C03              ; 			 7 ..... BLANCO
 268  8C03
 269  8C03 00 00        Indice_Sprite_der defw 0
 270  8C05 00 00        Indice_Sprite_izq defw 0
 271  8C07 00 00        Puntero_DESPLZ_der defw 0
 272  8C09 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0B
 274  8C0B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0E 00           Columnas db 0
 277  8C0F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C11              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C11 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C12
 281  8C12              ; variables de control general.
 282  8C12
 283  8C12 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C13
 285  8C13              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C13
 287  8C13              Perfiles_de_velocidad
 288  8C13
 289  8C13 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C14 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C15 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C16 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C17
 294  8C17              ; Contadores de 16 bits.
 295  8C17
 296  8C17 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C19 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1F
 301  8C1F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1F
 303  8C1F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C21 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C23 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C25              ;
 307  8C25              ;
 308  8C25 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C26              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C26              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C26 00           Incrementa_puntero_backup db 0
 312  8C27 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C28              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C28 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C29 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2B              ;
 318  8C2B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2B              ;
 322  8C2B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2B              ;
 327  8C2B              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2B
 331  8C2B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2C
 333  8C2C              ;														DESCRIPCIÓN:
 334  8C2C              ;
 335  8C2C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2C
 342  8C2C              ;														BIT 3, Recarga de nueva oleada.
 343  8C2C              ;														BIT 4, Recarga de nueva oleada.
 344  8C2C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2C              ;														BIT 6, **** Frame completo.
 346  8C2C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2C
 348  8C2C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2E
 353  8C2E              ; Gestión de ENTIDADES y CAJAS.
 354  8C2E
 355  8C2E 00 00        Puntero_store_caja defw 0
 356  8C30 00 00        Puntero_restore_caja defw 0
 357  8C32 00 00        Indice_restore_caja defw 0
 358  8C34 00 00        Puntero_indice_master defw 0
 359  8C36
 360  8C36 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C37 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C38 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C39
 364  8C39 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3D              ;														; _ puntero (Indice_entidades).
 367  8C3D
 368  8C3D              ;---------------------------------------------------------------------------------------------------------------
 369  8C3D              ;
 370  8C3D              ;	13/10/24
 371  8C3D              ;
 372  8C3D              ;	Álbumes.
 373  8C3D
 374  8C3D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3F              ;														; _variable para almacenar lo posición del puntero_
 376  8C3F              ; 														; _de pila, SP.
 377  8C3F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C41              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C41
 380  8C41              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C41
 382  8C41 00 00        Album_de_pintado defw 0
 383  8C43 00 00        Album_de_borrado defw 0
 384  8C45 00 00        Album_de_pintado_Amadeus defw 0
 385  8C47 00 00        Album_de_borrado_Amadeus defw 0
 386  8C49
 387  8C49 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4D
 390  8C4D 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4F 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C51
 393  8C51
 394  8C51 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C53
 396  8C53 00           Num_de_bytes_album_de_disparos db 0
 397  8C54 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C55
 399  8C55 07           Numero_de_disparos_de_entidades db 7
 400  8C56
 401  8C56 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C57 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C58
 404  8C58 00 00        Techo_Scanlines_album defw 0
 405  8C5A 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5C 00           Switch db 0
 407  8C5D 00 00        Techo defw 0
 408  8C5F 00 00        Scanlines_album_SP defw 0
 409  8C61 00 89        India_SP defw Tabla_de_pintado
 410  8C63 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C65
 412  8C65 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C66              ;
 414  8C66              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C66              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C66              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C66              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C66              ;																Habilita el borrado/pintado de sprites.
 419  8C66              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C66              ;																_ a la baja.
 421  8C66              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C66              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C66              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C66              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C66              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C66              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C66
 428  8C66 00           Ctrl_4 db 0
 429  8C67 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C68              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C68              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C68
 433  8C68              ; Gestión de Disparos.
 434  8C68
 435  8C68 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6C 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6D
 439  8C6D              ;
 440  8C6D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6D
 445  8C6D
 446  8C6D
 447  8C6D
 448  8C6D
 449  8C6D
 450  8C6D
 451  8C6D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6F
 455  8C6F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C71              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C71 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C74              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C74 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C77              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C77
 462  8C77              ;---------------------------------------------------------------------------------------------------------------
 463  8C77
 464  8C77              ; Relojes y temporizaciones.
 465  8C77
 466  8C77 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C78 05           Clock_explosion_Amadeus db 5
 468  8C79 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7A
 470  8C7A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7E 00           Numero_rnd_disparos db 0
 473  8C7F
 474  8C7F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C81 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C82              ;																		; Repite la oleada de entidades.
 477  8C82 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C83 A0           CLOCK_disparos_de_entidades db $a0
 479  8C84
 480  8C84              ;---------------------------------------------------------------------------------------------------------------
 481  8C84
 482  8C84              ; Gestión de NIVELES.
 483  8C84
 484  8C84 00           Nivel db 0												; Nivel actual del juego.
 485  8C85 00 00        Puntero_indice_NIVELES defw 0
 486  8C87 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C89              ; 														; _ que definen el NIVEL.
 488  8C89
 489  8C89              ; ---------------------------------------------------------------------------------------------------------------
 490  8C89
 491  8C89              ; Temporizaciones Shield.
 492  8C89
 493  8C89 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C90 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C91 00           Shield_3 db 0
 498  8C92
 499  8C92 03           Lives db 3
 500  8C93
 501  8C93              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C93              ;
 503  8C93              ;	13/11/24
 504  8C93
 505  8C93              START
 506  8C93
 507  8C93 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C96 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C98 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9C F3           	DI
 512  8C9D
 513  8C9D              ; Limpiamos pantalla.
 514  8C9D
 515  8C9D 3E 07        	ld a,%00000111
 516  8C9F CD F6 94     	call Cls
 517  8CA2 CD 86 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA5
 519  8CA5              INICIALIZACION
 520  8CA5
 521  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA7 CD EF 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAA CD 01 8F     	call Extrae_numero_aleatorio_y_avanza
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 7F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3              ;	Inicia los álbumes de líneas.
 529  8CB3
 530  8CB3 CD D4 90     	call Inicia_albumes_de_lineas
 531  8CB6 CD E4 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CB9 CD F1 90     	call Inicia_albumes_de_disparos
 533  8CBC
 534  8CBC              ;	Inicia 1er Nivel.
 535  8CBC
 536  8CBC CD 51 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CBF CD 1F 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CC2              ;														   _reponiendo entidades eliminadas.
 539  8CC2 CD 85 93     	call Prepara_Cajas_de_Entidades
 540  8CC5
 541  8CC5              4
 542  8CC5
 543  8CC5              ;	call Inicia_Entidades
 544  8CC5 CD D6 93     	call Inicia_Amadeus
 545  8CC8
 546  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC8
 550  8CC8 11 B7 89     	ld de,Amadeus_BOX
 551  8CCB CD C5 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCE CD 19 94     	call Limpiamos_bandeja_DRAW
 553  8CD1
 554  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD1
 556  8CD1 06 3C        	ld b,60
 557  8CD3 CD 97 9D     2 call Amadeus_a_izquierda
 558  8CD6 10 FB        	djnz 2B
 559  8CD8
 560  8CD8 CD B2 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDB
 562  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDB
 564  8CDB CD 0D 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDE
 566  8CDE CD 91 91     	call Inicia_Shield
 567  8CE1
 568  8CE1 2A 5F 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE4 22 58 8C     	ld (Techo_Scanlines_album),hl
 570  8CE7
 571  8CE7 2A 43 8C     	ld hl,(Album_de_borrado)
 572  8CEA 22 5F 8C     	ld (Scanlines_album_SP),hl
 573  8CED
 574  8CED 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF0 22 61 8C     	ld (India_SP),hl
 576  8CF3
 577  8CF3 21 65 8C     	ld hl,Ctrl_3
 578  8CF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF8 CB D6        	set 2,(hl)
 580  8CFA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFC
 582  8CFC FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFD
 584  8CFD 76           	halt
 585  8CFE
 586  8CFE              ; ------------------------------------
 587  8CFE
 588  8CFE              Main
 589  8CFE              ;
 590  8CFE              ; 07/11/24.
 591  8CFE
 592  8CFE
 593  8CFE F3           	di
 594  8CFF 21 66 8C     	ld hl,Ctrl_4
 595  8D02 CB 46        	bit 0,(hl)
 596  8D04 20 FE        	jr nz,$
 597  8D06 FB           	ei
 598  8D07
 599  8D07              ; Gestión de disparos.
 600  8D07
 601  8D07 CD D6 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 602  8D0A CD 8B 9F     	call Motor_de_disparos_entidades
 603  8D0D CD 20 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 604  8D10
 605  8D10              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 606  8D10              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 607  8D10              ; Este hecho lo indica el bit2 de (Impacto2).
 608  8D10
 609  8D10 CD C1 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 610  8D13
 611  8D13              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 612  8D13
 613  8D13 21 83 8C     	ld hl,CLOCK_disparos_de_entidades
 614  8D16 35           	dec (hl)
 615  8D17 CC 17 8E     	call z,Autoriza_disparo_de_entidades
 616  8D1A
 617  8D1A 2A 7F 8C     	ld hl,(Clock_next_entity)
 618  8D1D ED 4B 78 5C  	ld bc,(FRAMES)
 619  8D21 A7           	and a
 620  8D22 ED 42        	sbc hl,bc
 621  8D24 20 16        	jr nz,1F
 622  8D26
 623  8D26              ; GESTIÓN DE ENTIDADES.
 624  8D26
 625  8D26              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 626  8D26              ; _ (Clock_next_entity) para la siguiente entidad.
 627  8D26
 628  8D26              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 629  8D26              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 630  8D26              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 631  8D26
 632  8D26 21 37 8C     	ld hl,Numero_parcial_de_entidades
 633  8D29 46           	ld b,(hl)
 634  8D2A 3A 38 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 635  8D2D B8           	cp b
 636  8D2E 28 0C        	jr z,1F
 637  8D30 30 0A        	jr nc,1F
 638  8D32
 639  8D32              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 640  8D32
 641  8D32 3C           	inc a
 642  8D33 32 38 8C     	ld (Entidades_en_curso),a
 643  8D36
 644  8D36              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 645  8D36
 646  8D36 CD 01 8F     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 647  8D39 CD 1D 8F     	call Define_Clock_next_entity
 648  8D3C
 649  8D3C 3A 38 8C     1 ld a,(Entidades_en_curso)
 650  8D3F A7           	and a
 651  8D40 CA C2 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 652  8D43 47           	ld b,a												; No hay entidades que gestionar.
 653  8D44
 654  8D44              ; ( Código que ejecutamos con cada entidad: ).
 655  8D44
 656  8D44              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 657  8D44              ;
 658  8D44              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 659  8D44
 660  8D44 21 00 89     	ld hl,Tabla_de_pintado
 661  8D47 22 61 8C     	ld (India_SP),hl
 662  8D4A
 663  8D4A 21 65 8C     	ld hl,Ctrl_3
 664  8D4D CB D6        	set 2,(hl)
 665  8D4F CD AB 8E     	call Change
 666  8D52
 667  8D52 C5           2 push bc 												; Nº de entidades en curso.
 668  8D53
 669  8D53 DD 2A 2E 8C  	ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 670  8D57
 671  8D57              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 672  8D57              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 673  8D57
 674  8D57 3A 6C 8C     	ld a,(Impacto2)
 675  8D5A CB 5F        	bit 3,a
 676  8D5C C4 B7 A1     	call nz,Compara_con_coordenadas_de_disparo
 677  8D5F
 678  8D5F              ; Existe colisión entre esta entidad y Amadeus ???
 679  8D5F
 680  8D5F DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 681  8D62 CB 4F        	bit 1,a
 682  8D64 C4 6E 92     	call nz,Genera_explosion
 683  8D67 20 3C        	jr nz,Gestiona_siguiente_entidad
 684  8D69
 685  8D69 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 686  8D6C A7           	and a
 687  8D6D 28 0C        	jr z,3F
 688  8D6F
 689  8D6F              ; IMPACTO en entidad por colisión con Amadeus.
 690  8D6F
 691  8D6F              ; 5/7/24
 692  8D6F              ; Nota importante:
 693  8D6F              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 694  8D6F              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 695  8D6F              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 696  8D6F
 697  8D6F 3A BB 89     	ld a,(Impacto_Amadeus)
 698  8D72 A7           	and a
 699  8D73 C4 6E 92     	call nz,Genera_explosion
 700  8D76 20 2D        	jr nz,Gestiona_siguiente_entidad
 701  8D78
 702  8D78              ; Falsa colisión !!!
 703  8D78
 704  8D78 32 F2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 705  8D7B
 706  8D7B              ; -------------------------------------------
 707  8D7B
 708  8D7B CD 61 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 709  8D7E CD 83 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 710  8D81 CD 51 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 711  8D84
 712  8D84 DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 713  8D86 DD 2A F3 8B  	ld ix,(Puntero_de_impresion)
 714  8D8A CD 36 95     	call Genera_datos_de_impresion
 715  8D8D DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 716  8D8F
 717  8D8F CD 3C 94     	call Decrementa_Contador_de_mov_masticados
 718  8D92
 719  8D92              ; -------------------------------------------
 720  8D92
 721  8D92              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 722  8D92
 723  8D92 2A F3 8B     	ld hl,(Puntero_de_impresion)
 724  8D95 CD 0A 95     	call Genera_coordenadas
 725  8D98
 726  8D98 ED 4B EF 8B  	ld bc,(Coordenada_X)
 727  8D9C
 728  8D9C DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 729  8D9F DD 70 02     	ld (ix+2),b
 730  8DA2
 731  8DA2              ; TODO: Generamos disparo ???
 732  8DA2
 733  8DA2              ;	ld a,(Permiso_de_disparo_Entidades)
 734  8DA2              ;	and a
 735  8DA2              ;	call nz,Entidad_genera_disparo_si_procede
 736  8DA2
 737  8DA2 CD 3B A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 738  8DA5
 739  8DA5              Gestiona_siguiente_entidad
 740  8DA5
 741  8DA5 CD 71 91     	call Incrementa_punteros_de_cajas
 742  8DA8
 743  8DA8 C1           	pop bc
 744  8DA9 10 A7        	djnz 2B
 745  8DAB
 746  8DAB              ; Hemos gestionado todas las entidades.
 747  8DAB              ; ----- ----- -----
 748  8DAB
 749  8DAB CD 75 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 750  8DAE CD 8C 8F     	call Ordena_tabla_de_impresion
 751  8DB1 CD 0D 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 752  8DB4
 753  8DB4 CD 32 8F     	call Borra_diferencia
 754  8DB7
 755  8DB7 3A 65 8C     	ld a,(Ctrl_3)
 756  8DBA CB 5F        	bit 3,a
 757  8DBC 20 04        	jr nz,Gestion_de_Amadeus
 758  8DBE
 759  8DBE EB           	ex de,hl
 760  8DBF 71           	ld (hl),c
 761  8DC0 2C           	inc l
 762  8DC1 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 763  8DC2
 764  8DC2              ;! GESTIONA AMADEUS !!!!!!!!!!
 765  8DC2
 766  8DC2              Gestion_de_Amadeus
 767  8DC2
 768  8DC2 21 65 8C     	ld hl,Ctrl_3
 769  8DC5 CB 76        	bit 6,(hl)
 770  8DC7 28 13        	jr z,Amadeus_vivo
 771  8DC9
 772  8DC9              ; Amadeus ha sido destruido.
 773  8DC9              ; Decrementa (Temp_new_live).
 774  8DC9
 775  8DC9 21 79 8C     	ld hl,Temp_new_live
 776  8DCC 35           	dec (hl)
 777  8DCD 20 26        	jr nz,End_frame
 778  8DCF
 779  8DCF              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 780  8DCF
 781  8DCF 21 92 8C     	ld hl,Lives
 782  8DD2 35           	dec (hl)
 783  8DD3
 784  8DD3              ;! Fin del juego
 785  8DD3
 786  8DD3 F3           	di
 787  8DD4 28 FE        	jr z,$
 788  8DD6 FB           	ei
 789  8DD7
 790  8DD7              ; Nueva nave.
 791  8DD7
 792  8DD7 CD 49 8E     	call Reinicia_Amadeus
 793  8DDA 18 19        	jr End_frame
 794  8DDC
 795  8DDC              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 796  8DDC
 797  8DDC              Amadeus_vivo
 798  8DDC
 799  8DDC 3A BB 89     	ld a,(Impacto_Amadeus)
 800  8DDF A7           	and a
 801  8DE0 C4 BA 92     	call nz, Genera_explosion_Amadeus
 802  8DE3 20 10        	jr nz, End_frame
 803  8DE5
 804  8DE5 CD 4B 92     	call Teclado
 805  8DE8 21 65 8C     	ld hl,Ctrl_3
 806  8DEB
 807  8DEB CB 6E        	bit 5,(hl)
 808  8DED 28 06        	jr z,End_frame
 809  8DEF
 810  8DEF              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 811  8DEF
 812  8DEF CD C6 8E     	call Change_Amadeus
 813  8DF2 CD B2 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 814  8DF5
 815  8DF5              End_frame
 816  8DF5
 817  8DF5              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 818  8DF5              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 819  8DF5
 820  8DF5 CD E2 A0     	call Genera_datos_de_impresion_disparos_Entidades
 821  8DF8 CD A6 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 822  8DFB CD FC A1     	call Calcula_bytes_pintado_disparos
 823  8DFE CD 09 A2     	call Limpia_album_de_pintado_disparos_entidades
 824  8E01
 825  8E01              ; ------------ ------------- --------------
 826  8E01
 827  8E01 2A 43 8C     	ld hl,(Album_de_borrado)
 828  8E04 22 5F 8C     	ld (Scanlines_album_SP),hl
 829  8E07
 830  8E07 21 65 8C     	ld hl,Ctrl_3
 831  8E0A CB C6        	set 0,(hl) 											; Indica Frame completo.
 832  8E0C CB 9E        	res 3,(hl)
 833  8E0E CB A6        	res 4,(hl)
 834  8E10
 835  8E10 AF           	xor a
 836  8E11 D3 FE        	out ($fe),a
 837  8E13
 838  8E13 76           	halt
 839  8E14
 840  8E14              ; ----------------------------------------
 841  8E14
 842  8E14              ;	ld a,(Ctrl_1) 										; Existe Loop?
 843  8E14              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 844  8E14 CA FE 8C     	jp z,Main
 845  8E17
 846  8E17              ;------------------------------------------
 847  8E17              ;
 848  8E17              ;	07/11/24
 849  8E17
 850  8E17              Autoriza_disparo_de_entidades
 851  8E17
 852  8E17 3E 01        	ld a,1
 853  8E19 32 57 8C     	ld (Permiso_de_disparo_Entidades),a
 854  8E1C
 855  8E1C 3A 82 8C     	ld a,(Repone_CLOCK_disparos)
 856  8E1F FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 857  8E21 38 02        	jr c,1F
 858  8E23
 859  8E23              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 860  8E23              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 861  8E23              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 862  8E23
 863  8E23 D6 03        	sub 3
 864  8E25
 865  8E25 32 82 8C     1 ld (Repone_CLOCK_disparos),a
 866  8E28 32 83 8C     	ld (CLOCK_disparos_de_entidades),a
 867  8E2B
 868  8E2B C9           	ret
 869  8E2C
 870  8E2C              ;------------------------------------------
 871  8E2C              ;
 872  8E2C              ;	14/09/24
 873  8E2C              ;
 874  8E2C              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 875  8E2C
 876  8E2C              Entidad_genera_disparo_si_procede
 877  8E2C
 878  8E2C 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 879  8E2F CB 06        	rlc (hl)
 880  8E31
 881  8E31 DC 32 A1     	call c,Genera_disparo_de_entidad_maldosa
 882  8E34
 883  8E34 C9           	ret
 884  8E35
 885  8E35              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 886  8E35              ;
 887  8E35              ;	30/09/24
 888  8E35
 889  8E35              Actuaiza_sp_de_disparos_de_entidades
 890  8E35
 891  8E35 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 892  8E38 23           	inc hl
 893  8E39 22 7C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 894  8E3C
 895  8E3C 11 FD 88     	ld de,Numeros_aleatorios+7
 896  8E3F 7B           	ld a,e
 897  8E40 95           	sub l
 898  8E41 C0           	ret nz
 899  8E42
 900  8E42 21 F6 88     1 ld hl,Numeros_aleatorios
 901  8E45 22 7C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 902  8E48 C9           	ret
 903  8E49
 904  8E49              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 905  8E49              ;
 906  8E49              ;	24/07/24
 907  8E49
 908  8E49              Reinicia_Amadeus
 909  8E49
 910  8E49              ;	Reinicia posición y estado.
 911  8E49
 912  8E49 21 CF 50     	ld hl,$50cf
 913  8E4C 22 BC 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 914  8E4F 21 CC DC     	ld hl,$dccc
 915  8E52 22 BE 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 916  8E55 21 3D 00     	ld hl,$003d
 917  8E58 22 C0 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 918  8E5B
 919  8E5B              ;	limpiamos el álbum de borrado.
 920  8E5B
 921  8E5B 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
 922  8E5E
 923  8E5E AF           	xor a
 924  8E5F 77           	ld (hl),a
 925  8E60
 926  8E60 E5           	push hl
 927  8E61 D1           	pop de
 928  8E62 13           	inc de
 929  8E63
 930  8E63 01 23 00     	ld bc,35
 931  8E66 ED B0        	ldir
 932  8E68
 933  8E68 CD B2 90     	call Genera_datos_de_impresion_Amadeus
 934  8E6B
 935  8E6B              ;	Reinicia temporizaciones.
 936  8E6B
 937  8E6B CD 91 91     	call Inicia_Shield
 938  8E6E
 939  8E6E 3E 5A        	ld a,90
 940  8E70 32 8F 8C     	ld (Shield),a
 941  8E73
 942  8E73 3E 64        	ld a,100
 943  8E75 32 79 8C     	ld (Temp_new_live),a
 944  8E78
 945  8E78              ; 	Restauramos el FLAG: Amadeus vivo.
 946  8E78
 947  8E78 21 65 8C     	ld hl,Ctrl_3
 948  8E7B CB B6        	res 6,(hl)
 949  8E7D
 950  8E7D              ;	Fuerza la impresión de la nave en el siguiente frame.
 951  8E7D
 952  8E7D 21 65 8C      	ld hl,Ctrl_3
 953  8E80 CB EE        	set 5,(hl)
 954  8E82
 955  8E82 C9           	ret
 956  8E83
 957  8E83              ; --------------------------------------------------------------------------------------------------------------
 958  8E83              ;
 959  8E83              ;	23/11/24
 960  8E83
 961  8E83              Ajusta_velocidad_entidad
 962  8E83
 963  8E83 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 964  8E86 A7           	and a
 965  8E87 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 966  8E88              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 967  8E88              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 968  8E88
 969  8E88
 970  8E88              ; Incrementa (Contador_de_vueltas)x2.
 971  8E88              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 972  8E88
 973  8E88              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 974  8E88              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 975  8E88              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 976  8E88              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 977  8E88              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 978  8E88
 979  8E88
 980  8E88 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
 981  8E8A DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
 982  8E8D E6 10        	and $10
 983  8E8F C8           	ret z
 984  8E90
 985  8E90              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 986  8E90
 987  8E90 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
 988  8E93 CB 2F        	sra a
 989  8E95 CB 2F        	sra a
 990  8E97 DD 77 0B     	ld (ix+11),a
 991  8E9A
 992  8E9A DD 6E 07     	ld l,(ix+7)
 993  8E9D DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
 994  8EA0
 995  8EA0              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
 996  8EA0 23           	inc hl
 997  8EA1 23           	inc hl
 998  8EA2 23           	inc hl
 999  8EA3 23           	inc hl
1000  8EA4              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1001  8EA4
1002  8EA4 DD 75 07     	ld (ix+7),l
1003  8EA7 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1004  8EAA
1005  8EAA C9           	ret
1006  8EAB
1007  8EAB              ; --------------------------------------------------------------------------------------------------------------
1008  8EAB              ;
1009  8EAB              ;	25/08/24
1010  8EAB
1011  8EAB              Change
1012  8EAB
1013  8EAB 3A 5C 8C     	ld a,(Switch)
1014  8EAE EE 01        	xor 1
1015  8EB0 32 5C 8C     	ld (Switch),a
1016  8EB3 2A 41 8C     	ld hl,(Album_de_pintado)
1017  8EB6 ED 5B 43 8C  	ld de,(Album_de_borrado)
1018  8EBA EB           	ex de,hl
1019  8EBB 22 41 8C     	ld (Album_de_pintado),hl
1020  8EBE 22 5F 8C     	ld (Scanlines_album_SP),hl
1021  8EC1 ED 53 43 8C  	ld (Album_de_borrado),de
1022  8EC5 C9           	ret
1023  8EC6
1024  8EC6              Change_Amadeus
1025  8EC6
1026  8EC6 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1027  8EC9 ED 5B 47 8C  	ld de,(Album_de_borrado_Amadeus)
1028  8ECD EB           	ex de,hl
1029  8ECE 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1030  8ED1 ED 53 47 8C  	ld (Album_de_borrado_Amadeus),de
1031  8ED5 C9           	ret
1032  8ED6
1033  8ED6              Change_Disparos
1034  8ED6
1035  8ED6              ; Álbumes de Amadeus.
1036  8ED6
1037  8ED6 2A 49 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1038  8ED9 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1039  8EDD EB           	ex de,hl
1040  8EDE 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1041  8EE1 ED 53 4B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1042  8EE5 CD F1 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1043  8EE8
1044  8EE8              ; Álbumes de entidades.
1045  8EE8
1046  8EE8 2A 4D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1047  8EEB ED 5B 4F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1048  8EEF EB           	ex de,hl
1049  8EF0 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1050  8EF3 ED 53 4F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1051  8EF7 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1052  8EFA
1053  8EFA 3A 53 8C     	ld a,(Num_de_bytes_album_de_disparos)
1054  8EFD 32 54 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1055  8F00
1056  8F00 C9           	ret
1057  8F01
1058  8F01              ; ------------------------------------
1059  8F01              ;
1060  8F01              ; 1/05/24
1061  8F01
1062  8F01              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1063  8F01              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1064  8F01
1065  8F01              ;	DESTRUYE: HL,DE,A
1066  8F01              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1067  8F01
1068  8F01              ;	Variables implicadas: (RND_SP).
1069  8F01
1070  8F01              Extrae_numero_aleatorio_y_avanza
1071  8F01
1072  8F01 21 00 89     	ld hl,Tabla_de_pintado
1073  8F04 EB           	ex de,hl
1074  8F05 2A 7A 8C     	ld hl,(RND_SP)
1075  8F08 EB           	ex de,hl
1076  8F09 A7           	and a
1077  8F0A ED 52        	sbc hl,de
1078  8F0C
1079  8F0C 2A 7A 8C     	ld hl,(RND_SP)
1080  8F0F 20 06        	jr nz,1F
1081  8F11
1082  8F11              ; Sitúa HL al principio de la tabla de nº aleatorios.
1083  8F11
1084  8F11 21 F6 88     	ld hl,Numeros_aleatorios
1085  8F14 22 7A 8C     	ld (RND_SP),HL
1086  8F17
1087  8F17              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1088  8F17
1089  8F17 7E           1 ld a,(hl)
1090  8F18 23           	inc hl
1091  8F19 22 7A 8C     	ld (RND_SP),hl
1092  8F1C C9           	ret
1093  8F1D
1094  8F1D              ; ------------------------------------
1095  8F1D              ;
1096  8F1D              ; 1/05/24
1097  8F1D
1098  8F1D              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1099  8F1D              ; (1 a 4 segundos).
1100  8F1D              ; Actualizamos (Clock_next_entity) con A.
1101  8F1D
1102  8F1D              ;	DESTRUYE: A y B.
1103  8F1D              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1104  8F1D              ;			 Actualiza (Clock_next_entity) con A.
1105  8F1D
1106  8F1D              ;	Variables implicadas: (Clock_next_entity).
1107  8F1D
1108  8F1D              ; Notas:
1109  8F1D
1110  8F1D              ; 	$32 1 seg.
1111  8F1D              ; 	$64 2 seg.
1112  8F1D              ; 	$96 3 seg.
1113  8F1D              ; 	$c8 4 seg.
1114  8F1D              ; 	$fa 5 seg.
1115  8F1D
1116  8F1D              ; $ffff 1310,7 seg, 22 minutos.
1117  8F1D
1118  8F1D              ;	$0100  5 seg. aproximadamente.
1119  8F1D              ;	$0200 10 seg. aproximadamente.
1120  8F1D              ;	$0300 15 seg. aproximadamente.
1121  8F1D              ;	$0400 20 seg. aproximadamente.
1122  8F1D              ;	$0500 25 seg. aproximadamente.
1123  8F1D              ;	$0600 30 seg. aproximadamente.
1124  8F1D
1125  8F1D              Define_Clock_next_entity
1126  8F1D
1127  8F1D FE 34        	cp $34
1128  8F1F 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1129  8F21
1130  8F21              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1131  8F21
1132  8F21 4F           3 ld c,a
1133  8F22 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1134  8F24 2A 78 5C     	ld hl,(FRAMES)
1135  8F27 A7           	and a
1136  8F28 ED 4A        	adc hl,bc
1137  8F2A 22 7F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1138  8F2D C9           	ret
1139  8F2E
1140  8F2E 3E 34        1 ld a,$34
1141  8F30 18 EF        	jr 3B
1142  8F32
1143  8F32              ; ------------------------------------
1144  8F32              ;
1145  8F32              ; 18/03/24
1146  8F32
1147  8F32              Borra_diferencia
1148  8F32
1149  8F32 ED 4B 5F 8C  	ld bc,(Scanlines_album_SP)
1150  8F36
1151  8F36 3A 5C 8C     	ld a,(Switch)
1152  8F39 A7           	and a
1153  8F3A 28 08        	jr z,2F
1154  8F3C
1155  8F3C 2A 5A 8C     	ld hl,(Techo_Scanlines_album_2)
1156  8F3F 11 5A 8C     	ld de,Techo_Scanlines_album_2
1157  8F42 18 06        	jr 3F
1158  8F44
1159  8F44 2A 58 8C     2 ld hl,(Techo_Scanlines_album)
1160  8F47 11 58 8C     	ld de,Techo_Scanlines_album
1161  8F4A
1162  8F4A              ; Diferencia.
1163  8F4A
1164  8F4A ED 42        3 sbc hl,bc
1165  8F4C
1166  8F4C C8           	ret z
1167  8F4D D8           	ret c
1168  8F4E
1169  8F4E              ; Nuevo techo, (más bajo que el anterior).
1170  8F4E              ; Fijamos nuevo techo y borramos bytes sobrantes.
1171  8F4E
1172  8F4E EB           	ex de,hl
1173  8F4F
1174  8F4F 71           	ld (hl),c
1175  8F50 2C           	inc l
1176  8F51 70           	ld (hl),b
1177  8F52
1178  8F52 AF           	xor a
1179  8F53 43           	ld b,e
1180  8F54
1181  8F54 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1182  8F57
1183  8F57 77           1 ld (hl),a
1184  8F58 23           	inc hl
1185  8F59 10 FC        	djnz 1B
1186  8F5B
1187  8F5B              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1188  8F5B
1189  8F5B 21 65 8C     	ld hl,Ctrl_3
1190  8F5E CB DE        	set 3,(hl)
1191  8F60
1192  8F60 C9           	ret
1193  8F61
1194  8F61              ; --------------------------------------------------------------------------------------------------------------
1195  8F61              ;
1196  8F61              ;	23/11/24
1197  8F61              ;
1198  8F61              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1199  8F61
1200  8F61              Entidad_a_Tabla_de_pintado
1201  8F61
1202  8F61              ; Almacena la Coordenada Y de la entidad en curso.
1203  8F61
1204  8F61              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1205  8F61
1206  8F61 DD 7E 02     	ld a,(ix+2)
1207  8F64 2A 61 8C     	ld hl,(India_SP)
1208  8F67 77           	ld (hl),a
1209  8F68 2C           	inc l
1210  8F69
1211  8F69              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1212  8F69
1213  8F69 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
1214  8F6D
1215  8F6D 73           	ld (hl),e
1216  8F6E 2C           	inc l
1217  8F6F 72           	ld (hl),d
1218  8F70 2C           	inc l
1219  8F71
1220  8F71 22 61 8C     	ld (India_SP),hl
1221  8F74
1222  8F74 C9           	ret
1223  8F75
1224  8F75              ; --------------------------------------------------------------------------------------------------------------
1225  8F75              ;
1226  8F75              ;	27/03/24
1227  8F75              ;
1228  8F75
1229  8F75              Inicializa_India_y_limpia_Tabla_de_impresion
1230  8F75
1231  8F75 2A 61 8C     	ld hl,(India_SP)
1232  8F78 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1233  8F7B
1234  8F7B 79           	ld a,c
1235  8F7C 95           	sub l
1236  8F7D 28 06        	jr z,2F
1237  8F7F 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1238  8F80              ;														; _ y pasamos a inicializar (India_SP).
1239  8F80 AF           	xor a
1240  8F81
1241  8F81 77           1 ld (hl),a
1242  8F82 2C           	inc l
1243  8F83 10 FC        	djnz 1B												; Limpia Tabla.
1244  8F85
1245  8F85 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1246  8F88 22 61 8C     	ld (India_SP),hl
1247  8F8B
1248  8F8B C9           	ret
1249  8F8C
1250  8F8C              ; --------------------------------------------------------------------------------------------------------------
1251  8F8C              ;
1252  8F8C              ;	31/3/24
1253  8F8C
1254  8F8C              Ordena_tabla_de_impresion
1255  8F8C
1256  8F8C              ; 5794 T/states.
1257  8F8C              ; 6278 T/states.
1258  8F8C              ; 5310 T/states.
1259  8F8C
1260  8F8C              ; Inicializamos punteros (India_SP) e (India_2_SP).
1261  8F8C              ; Inicializamos contador de comparaciones, [C].
1262  8F8C              ; Cargamos los registros A y B para efectuar comparación.
1263  8F8C
1264  8F8C FD 2E 00     	ld iyl,0
1265  8F8F
1266  8F8F 3A 38 8C     	ld a,(Entidades_en_curso)
1267  8F92 FE 04        	cp 4 	;	4
1268  8F94 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1269  8F95
1270  8F95 3D           	dec a
1271  8F96 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1272  8F97 51           	ld d,c 										; Copia de respaldo.
1273  8F98
1274  8F98 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1275  8F99
1276  8F99 21 03 89     	ld hl,Tabla_de_pintado+3
1277  8F9C 46           	ld b,(hl)
1278  8F9D 22 63 8C     	ld (India_2_SP),hl
1279  8FA0
1280  8FA0 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1281  8FA1 DC C9 8F     	call c, Avanza_India_2_SP
1282  8FA4 CC C9 8F     	call z, Avanza_India_2_SP
1283  8FA7
1284  8FA7 FD 2D        	dec iyl
1285  8FA9 28 18        	jr z,2F
1286  8FAB
1287  8FAB
1288  8FAB              ; --------------------------------------------------------------------------------------------------------------
1289  8FAB              ;
1290  8FAB              ;	7/4/24
1291  8FAB
1292  8FAB              Trueque
1293  8FAB
1294  8FAB              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1295  8FAB              ;  			A contiene en nº de fila de (India_SP).
1296  8FAB              ;			HL contiene (India_2_SP).
1297  8FAB
1298  8FAB D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1299  8FAC E5           	push hl										; Preservo (India_2_SP).
1300  8FAD
1301  8FAD ED 5B 61 8C  	ld de,(India_SP)
1302  8FB1 EB           	ex de,hl
1303  8FB2 70           	ld (hl),b
1304  8FB3 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1305  8FB4
1306  8FB4 CD F5 8F     	call Intercambia_1_byte
1307  8FB7 CD F5 8F     	call Intercambia_1_byte
1308  8FBA
1309  8FBA
1310  8FBA              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1311  8FBA              ; Recuperamos (India_2_SP) en HL.
1312  8FBA
1313  8FBA 2A 61 8C     	ld hl,(India_SP)
1314  8FBD 7E           	ld a,(hl)
1315  8FBE
1316  8FBE E1           	pop hl
1317  8FBF D1           	pop de
1318  8FC0
1319  8FC0              ; --------------------------------------------------------------------------------------------------------------
1320  8FC0
1321  8FC0 CD C9 8F     	call Avanza_India_2_SP
1322  8FC3
1323  8FC3 14           2 inc d
1324  8FC4 15           	dec d
1325  8FC5 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1326  8FC6 18 D8        	jr 1B
1327  8FC8
1328  8FC8 C9           	ret
1329  8FC9
1330  8FC9              ; ----- ----- ----- ----- -----
1331  8FC9
1332  8FC9              Avanza_India_2_SP
1333  8FC9
1334  8FC9 0D           	dec c
1335  8FCA 28 0A        	jr z,Avanza_punteros_indios
1336  8FCC
1337  8FCC FD 2C        	inc iyl
1338  8FCE
1339  8FCE 2C           	inc l
1340  8FCF 2C           	inc l
1341  8FD0 2C           	inc l
1342  8FD1
1343  8FD1 46           	ld b,(hl)
1344  8FD2 22 63 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1345  8FD5
1346  8FD5 C9           	ret
1347  8FD6
1348  8FD6              ; ----- ----- ----- ----- -----
1349  8FD6
1350  8FD6              Avanza_punteros_indios
1351  8FD6
1352  8FD6 15           	dec d
1353  8FD7 28 15        	jr z,Prepara_salida
1354  8FD9
1355  8FD9 4A           	ld c,d
1356  8FDA
1357  8FDA 2A 61 8C     	ld hl,(India_SP)
1358  8FDD 2C           	inc l
1359  8FDE 2C           	inc l
1360  8FDF 2C           	inc l
1361  8FE0 7E           	ld a,(hl)
1362  8FE1 22 61 8C     	ld (India_SP),hl
1363  8FE4
1364  8FE4 2C           	inc l
1365  8FE5 2C           	inc l
1366  8FE6 2C           	inc l
1367  8FE7 46           	ld b,(hl)
1368  8FE8 22 63 8C     	ld (India_2_SP),hl
1369  8FEB
1370  8FEB FD 2C        	inc iyl
1371  8FED
1372  8FED C9           	ret
1373  8FEE
1374  8FEE              Prepara_salida
1375  8FEE
1376  8FEE 21 00 89     	ld hl,Tabla_de_pintado
1377  8FF1 22 61 8C     	ld (India_SP),hl
1378  8FF4 C9           	ret
1379  8FF5
1380  8FF5
1381  8FF5 2C           Intercambia_1_byte inc l
1382  8FF6 1C           	inc e
1383  8FF7 46           	ld b,(hl)
1384  8FF8 1A           	ld a,(de)
1385  8FF9 EB           	ex de,hl
1386  8FFA 70           	ld (hl),b
1387  8FFB 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1388  8FFC C9           	ret
1389  8FFD
1390  8FFD              ; -----------------------------------------------------------------------------------
1391  8FFD              ;
1392  8FFD              ;	20/01/24
1393  8FFD              ;
1394  8FFD              ;
1395  8FFD
1396  8FFD              Construye_movimientos_masticados_entidad
1397  8FFD
1398  8FFD 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1399  9000 E5           	push hl
1400  9001 CD 44 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1401  9004              ;															; _ el (Contador_de_mov_masticados).
1402  9004 CD 29 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1403  9007              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1404  9007 CD 1D 9A     	call Recompone_posicion_inicio
1405  900A
1406  900A CD 4D 97     1 call Draw
1407  900D CD 29 90     	call Guarda_movimiento_masticado
1408  9010
1409  9010 CD CA 9D     	call Movimiento
1410  9013
1411  9013 3A 65 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1412  9016 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1413  9018 28 F0        	jr z,1B
1414  901A
1415  901A              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1416  901A              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1417  901A
1418  901A E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1419  901B 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1420  901E
1421  901E              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1422  901E
1423  901E CD 2E 9F     	call Situa_en_contador_general_de_mov_masticados
1424  9021
1425  9021              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1426  9021              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1427  9021
1428  9021 ED 4B F7 8B  	ld bc,(Contador_de_mov_masticados)
1429  9025
1430  9025 71           	ld (hl),c
1431  9026 23           	inc hl
1432  9027 70           	ld (hl),b
1433  9028
1434  9028 C9           	ret
1435  9029
1436  9029              ; -----------------------------------------------------------------------------------
1437  9029              ;
1438  9029              ;	28/12/23
1439  9029              ;
1440  9029              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1441  9029              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1442  9029
1443  9029              Guarda_movimiento_masticado
1444  9029
1445  9029 ED 73 3D 8C  	ld (Stack),sp
1446  902D ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1447  9031
1448  9031 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1449  9033 FD E5            push iy 												; Pushea Puntero_objeto.
1450  9035
1451  9035 ED 7B 3D 8C      ld sp,(Stack)
1452  9039
1453  9039 2A F7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1454  903C 23           	inc hl
1455  903D 22 F7 8B     	ld (Contador_de_mov_masticados),hl
1456  9040
1457  9040 CD 44 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1458  9043              ;															; _ el (Contador_de_mov_masticados).
1459  9043 C9               ret
1460  9044
1461  9044              ; --------------------------------------------------------------------------------------------------------------
1462  9044              ;
1463  9044              ;	12/1/24
1464  9044              ;
1465  9044              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1466  9044
1467  9044              Actualiza_Puntero_de_almacen_de_mov_masticados
1468  9044
1469  9044 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1470  9047 01 04 00     	ld bc,4
1471  904A A7           	and a
1472  904B ED 4A        	adc hl,bc
1473  904D 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1474  9050 C9           	ret
1475  9051
1476  9051              ; ------------------------------------------
1477  9051              ;
1478  9051              ;	23/11/24
1479  9051              ;
1480  9051              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1481  9051
1482  9051
1483  9051              Obtenemos_puntero_de_impresion
1484  9051
1485  9051 DD 6E 07     	ld l,(ix+7)
1486  9054 DD 66 08     	ld h,(ix+8)
1487  9057
1488  9057              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1489  9057
1490  9057 ED 73 3D 8C  	ld (Stack),sp
1491  905B F9           	ld sp,hl
1492  905C
1493  905C AF           	xor a
1494  905D 67           	ld h,a
1495  905E 6C           	ld l,h															; ld hl,"0"
1496  905F
1497  905F D1           	pop de															; (Puntero_objeto) en DE.
1498  9060 C1           	pop bc
1499  9061
1500  9061              ; 	Almacena (Puntero_de_impresion) en caja.
1501  9061
1502  9061 DD 71 05     	ld (ix+5),c
1503  9064 DD 70 06     	ld (ix+6),b
1504  9067
1505  9067 ED 43 F3 8B  	ld (Puntero_de_impresion),bc
1506  906B
1507  906B              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1508  906B
1509  906B 39           	add hl,sp
1510  906C DD 75 07     	ld (ix+7),l
1511  906F DD 74 08     	ld (ix+8),h
1512  9072
1513  9072 C1           	pop bc
1514  9073
1515  9073 79           	ld a,c
1516  9074 80           	add b															; Comprueba si ya no hay datos en el almacén.
1517  9075
1518  9075 ED 7B 3D 8C  	ld sp,(Stack)
1519  9079
1520  9079 CC 4A 94     	call z,Reinicia_entidad_maliciosa
1521  907C
1522  907C C9           	ret
1523  907D
1524  907D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1525  907D              ;
1526  907D              ;	25/11/24
1527  907D
1528  907D              Cargamos_registros_con_explosion
1529  907D
1530  907D DD 6E 07     	ld l,(ix+7)
1531  9080 DD 66 08     	ld h,(ix+8)
1532  9083 CD 23 91     	call Extrae_address
1533  9086 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1534  9087
1535  9087 DD 6E 05     	ld l,(ix+5)
1536  908A DD 66 06     	ld h,(ix+6)
1537  908D
1538  908D E5           	push hl
1539  908E DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1540  9090
1541  9090 C9           	ret
1542  9091
1543  9091
1544  9091              Cargamos_registros_con_explosion_Amadeus
1545  9091
1546  9091 2A BE 89     	ld hl,(Pamm_Amadeus)
1547  9094 CD 23 91     	call Extrae_address
1548  9097
1549  9097 5D           	ld e,l
1550  9098 54           	ld d,h
1551  9099
1552  9099 DD 2A BC 89  	ld ix,(p.imp.amadeus)
1553  909D
1554  909D C9           	ret
1555  909E
1556  909E              ; --------------------------------------------------------------------------------------------------------------
1557  909E              ;
1558  909E              ;	17/06/24
1559  909E              ;
1560  909E              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1561  909E              ;
1562  909E              ;	IX contiene el puntero de impresión.
1563  909E              ;	DE contiene (Puntero_objeto).
1564  909E
1565  909E
1566  909E              Cargamos_registros_con_mov_masticado_Amadeus
1567  909E
1568  909E ED 73 3D 8C  	ld (Stack),sp
1569  90A2 ED 7B BE 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1570  90A6 D1           	pop de 															; DE contiene Puntero_objeto
1571  90A7 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1572  90A9 DD 22 BC 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1573  90AD ED 7B 3D 8C  	ld sp,(Stack)
1574  90B1 C9           	ret
1575  90B2
1576  90B2              ; ---------------------------------------------------------------------------------------------------------------------
1577  90B2              ;
1578  90B2              ;	18/6/24
1579  90B2              ;
1580  90B2              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1581  90B2
1582  90B2              Genera_datos_de_impresion_Amadeus
1583  90B2
1584  90B2 3A BB 89     	ld a,(Impacto_Amadeus)
1585  90B5 A7           	and a
1586  90B6 20 03        	jr nz,1F
1587  90B8
1588  90B8              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1589  90B8              ; _apuntando a la correspondiente explosión.
1590  90B8
1591  90B8 CD 9E 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1592  90BB
1593  90BB DD 7D        1 ld a,ixl
1594  90BD E6 1F        	and $1f
1595  90BF 32 B8 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1596  90C2
1597  90C2 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1598  90C5 E5           	push hl
1599  90C6
1600  90C6 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1601  90C9 22 5F 8C     	ld (Scanlines_album_SP),hl
1602  90CC
1603  90CC CD 36 95     	call Genera_datos_de_impresion
1604  90CF
1605  90CF E1           	pop hl
1606  90D0 22 5F 8C     	ld (Scanlines_album_SP),hl
1607  90D3
1608  90D3 C9           	ret
1609  90D4
1610  90D4              ; ---------------------------------------------------------------------------------------------------------------------
1611  90D4              ;
1612  90D4              ;	13/03/24
1613  90D4              ;
1614  90D4              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1615  90D4
1616  90D4              Inicia_albumes_de_lineas
1617  90D4
1618  90D4 21 00 80     	ld hl,Scanlines_album
1619  90D7 22 41 8C     	ld (Album_de_pintado),hl
1620  90DA 22 5F 8C     	ld (Scanlines_album_SP),hl
1621  90DD
1622  90DD 21 1A 81     	ld hl,Scanlines_album_2
1623  90E0 22 43 8C     	ld (Album_de_borrado),hl
1624  90E3
1625  90E3 C9           	ret
1626  90E4
1627  90E4              Inicia_albumes_de_lineas_Amadeus
1628  90E4
1629  90E4 21 34 82     	ld hl,Amadeus_scanlines_album
1630  90E7 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1631  90EA 21 58 82     	ld hl,Amadeus_scanlines_album_2
1632  90ED 22 47 8C     	ld (Album_de_borrado_Amadeus),hl
1633  90F0
1634  90F0 C9           	ret
1635  90F1
1636  90F1              Inicia_albumes_de_disparos
1637  90F1
1638  90F1 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1639  90F4 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1640  90F7 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1641  90FA 22 4B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1642  90FD
1643  90FD 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1644  9100 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1645  9103 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1646  9106
1647  9106 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1648  9109 22 4F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1649  910C
1650  910C C9           	ret
1651  910D
1652  910D              ; ---------------------------------------------------------------------------------------------------------------------
1653  910D              ;
1654  910D              ; 8/1/23
1655  910D              ;
1656  910D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1657  910D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1658  910D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1659  910D
1660  910D              ; Destruye HL y DE !!!!!
1661  910D
1662  910D              Inicia_punteros_de_cajas
1663  910D
1664  910D 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1665  9110 CD 23 91         call Extrae_address
1666  9113 22 2E 8C         ld (Puntero_store_caja),hl
1667  9116 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1668  9119 22 32 8C     	ld (Indice_restore_caja),hl
1669  911C CD 23 91     	call Extrae_address
1670  911F 22 30 8C     	ld (Puntero_restore_caja),hl
1671  9122 C9               ret
1672  9123
1673  9123              ; *************************************************************************************************************************************************************
1674  9123
1675  9123              ;
1676  9123              ; 20/10/22
1677  9123              ;
1678  9123              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1679  9123              ;
1680  9123              ; Destruye el puntero y DE !!!!!
1681  9123
1682  9123 5E           Extrae_address ld e,(hl)
1683  9124 23           	inc hl
1684  9125 56           	ld d,(hl)
1685  9126 2B           	dec hl
1686  9127 EB           	ex de,hl
1687  9128 C9           	ret
1688  9129
1689  9129              ; *************************************************************************************************************************************************************
1690  9129              ;
1691  9129              ;	20/1/24
1692  9129              ;
1693  9129              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1694  9129              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1695  9129              ;
1696  9129              ;   Destruye HL y BC !!!!!,
1697  9129              ;
1698  9129              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1699  9129              ;					"0" ..... Izquierda.
1700  9129
1701  9129              Inicia_Puntero_objeto
1702  9129
1703  9129 3A 0D 8C     	ld a,(Cuad_objeto)
1704  912C E6 01        	and 1
1705  912E F5           	push af
1706  912F CC 4B 91     	call z,Inicia_puntero_objeto_izq
1707  9132 F1           	pop af
1708  9133 C8           	ret z
1709  9134 CD 38 91     	call Inicia_puntero_objeto_der
1710  9137 C9           	ret
1711  9138
1712  9138              ; Arrancamos desde la parte izquierda de la pantalla.
1713  9138              ; Iniciamos (Indice_Sprite_der).
1714  9138
1715  9138 2A 03 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1716  913B 22 07 8C     	ld (Puntero_DESPLZ_der),hl
1717  913E CD 23 91     	call Extrae_address
1718  9141 22 00 8C     	ld (Puntero_objeto),hl
1719  9144
1720  9144 2A 05 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1721  9147 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1722  914A C9           	ret
1723  914B
1724  914B              ; Arrancamos desde la parte derecha de la pantalla.
1725  914B              ; Iniciamos (Indice_Sprite_izq).
1726  914B
1727  914B 2A 05 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1728  914E 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1729  9151 CD 23 91     	call Extrae_address
1730  9154 22 00 8C     	ld (Puntero_objeto),hl
1731  9157
1732  9157 2A 03 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1733  915A 22 07 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1734  915D C9           	ret
1735  915E
1736  915E              ; **************************************************************************************************
1737  915E              ;
1738  915E              ;	06/07/24
1739  915E              ;
1740  915E              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1741  915E
1742  915E              Restore_entidad
1743  915E
1744  915E 2A 2E 8C     	ld hl,(Puntero_store_caja)
1745  9161 7E           	ld a,(hl)
1746  9162 A7           	and a
1747  9163 CC 71 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1748  9166 28 F6        	jr z,Restore_entidad
1749  9168
1750  9168 11 EE 8B     	ld de,Bandeja_DRAW
1751  916B 01 0C 00     	ld bc,12
1752  916E ED B0        	ldir
1753  9170 C9           	ret
1754  9171
1755  9171              ; **************************************************************************************************
1756  9171              ;
1757  9171              ;	08/05/23
1758  9171              ;
1759  9171              ;	Incrementamos los dos punteros de entidades. (+1).
1760  9171
1761  9171              Incrementa_punteros_de_cajas
1762  9171
1763  9171 2A 30 8C     	ld hl,(Puntero_restore_caja)
1764  9174 22 2E 8C     	ld (Puntero_store_caja),hl
1765  9177 2A 32 8C     	ld hl,(Indice_restore_caja)
1766  917A 23           	inc hl
1767  917B 23           	inc hl
1768  917C 22 32 8C     	ld (Indice_restore_caja),hl
1769  917F CD 23 91         call Extrae_address
1770  9182 22 30 8C         ld (Puntero_restore_caja),hl
1771  9185 C9               ret
1772  9186
1773  9186              ; -----------------------------------------------------------
1774  9186
1775  9186              ; Teclado.
1776  9186
1777  9186 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1778  9188 DB FE        	in a,($fe)
1779  918A E6 01        	and $01
1780  918C 28 02        	jr z,1f
1781  918E 18 F6        	jr Pulsa_ENTER
1782  9190 C9           1 ret
1783  9191
1784  9191              ; **************************************************************************************************
1785  9191              ;
1786  9191              ; Temporización.
1787  9191
1788  9191              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1789  9191              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1790  9191              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1791  9191              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1792  9191
1793  9191              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1794  9191              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1795  9191              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1796  9191
1797  9191              ; A partir de $4f61 no hace falta DELAY.
1798  9191
1799  9191              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1800  9191
1801  9191              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1802  9191              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1803  9191              ;	LD A,B
1804  9191              ;	AND A
1805  9191              ;	JR NZ,wait
1806  9191              ;	RET
1807  9191
1808  9191              ; ---------------------------------------------------------------------------------------------------------------
1809  9191              ;
1810  9191              ;	13/07/24
1811  9191              ;
1812  9191
1813  9191              Inicia_Shield
1814  9191
1815  9191 21 89 8C     	ld hl,Datos_Shield
1816  9194 22 8D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1817  9197
1818  9197 7E           	ld a,(hl)
1819  9198 32 90 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1820  919B
1821  919B 3E 01        	ld a,1
1822  919D 32 91 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1823  91A0
1824  91A0 C9           	ret
1825  91A1
1826  91A1              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1827  91A1              ;
1828  91A1              ;	4/6/24
1829  91A1              ;
1830  91A1              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1831  91A1              ;
1832  91A1              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1833  91A1              ;
1834  91A1
1835  91A1              Actualiza_pantalla
1836  91A1
1837  91A1 3E 02        	ld a,2
1838  91A3 D3 FE        	out ($fe),a
1839  91A5
1840  91A5 3A 65 8C     	ld a,(Ctrl_3)
1841  91A8 CB 57        	bit 2,a
1842  91AA 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1843  91AC
1844  91AC              Borrando_entidades
1845  91AC
1846  91AC 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1847  91AF CD 23 91     	call Extrae_address
1848  91B2 24           	inc h
1849  91B3 25           	dec h
1850  91B4 28 05        	jr z,Pintando_entidades
1851  91B6 CD 2A 96     	call Pinta_Sprites
1852  91B9 18 F1        	jr Borrando_entidades
1853  91BB
1854  91BB              Pintando_entidades
1855  91BB
1856  91BB 2A 61 8C     	ld hl,(India_SP)
1857  91BE 2C           	inc l
1858  91BF CD 23 91     	call Extrae_address
1859  91C2 24           	inc h
1860  91C3 25           	dec h
1861  91C4 28 0E        	jr z,Ejecuta_escudo
1862  91C6 1C           	inc e
1863  91C7 1C           	inc e
1864  91C8 ED 53 61 8C  	ld (India_SP),de
1865  91CC CD 23 91     	call Extrae_address
1866  91CF CD 2A 96     	call Pinta_Sprites
1867  91D2 18 E7        	jr Pintando_entidades
1868  91D4
1869  91D4              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1870  91D4
1871  91D4              Ejecuta_escudo
1872  91D4
1873  91D4 3A 8F 8C     	ld a,(Shield)
1874  91D7 A7           	and a
1875  91D8 20 2F        	jr nz,Aplica_Shield
1876  91DA
1877  91DA              Borrando_Amadeus
1878  91DA
1879  91DA 21 65 8C     	ld hl,Ctrl_3
1880  91DD CB 6E        	bit 5,(hl)
1881  91DF 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1882  91E1
1883  91E1 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1884  91E4 CD 23 91     	call Extrae_address
1885  91E7 24           	inc h
1886  91E8 25           	dec h
1887  91E9 28 03        	jr z,Pintando_Amadeus
1888  91EB CD 2A 96     	call Pinta_Sprites
1889  91EE
1890  91EE              Pintando_Amadeus
1891  91EE
1892  91EE 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1893  91F1 CD 23 91     	call Extrae_address
1894  91F4 24           	inc h
1895  91F5 25           	dec h
1896  91F6 28 03        	jr z,1F
1897  91F8 CD 2A 96     	call Pinta_Sprites
1898  91FB
1899  91FB              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1900  91FB
1901  91FB 21 65 8C     1 ld hl,Ctrl_3
1902  91FE CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1903  9200 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1904  9202 CB AE        	res 5,(hl)
1905  9204
1906  9204 3E 01        	ld a,1												; Borde azul.
1907  9206 D3 FE        	out ($fe),a
1908  9208
1909  9208 C9           	ret
1910  9209
1911  9209              Aplica_Shield
1912  9209
1913  9209              ;	Bit 1 "1" (Shield_3) Sólo borra.
1914  9209              ;		  "0"     ""     Borra/Pinta.
1915  9209              ;	Bit 2    ""  RET.	 No borra, no pinta.
1916  9209
1917  9209 21 91 8C     	ld hl,Shield_3
1918  920C
1919  920C CB 5E        	bit 3,(hl)
1920  920E 20 DE        	jr nz,Pintando_Amadeus
1921  9210
1922  9210 CB 56        	bit 2,(hl)
1923  9212 20 E7        	jr nz,1B
1924  9214
1925  9214 CB 4E        	bit 1,(hl)
1926  9216 C4 1D 92     	call nz,Borra_Amadeus_shield
1927  9219
1928  9219 28 BF        	jr z,Borrando_Amadeus
1929  921B 18 DE        	jr 1B
1930  921D
1931  921D              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1932  921D
1933  921D              Borra_Amadeus_shield
1934  921D
1935  921D 3A 65 8C     	ld a,(Ctrl_3)
1936  9220 CB 6F        	bit 5,a
1937  9222 28 08        	jr z,1F
1938  9224
1939  9224 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1940  9227 CD 23 91     	call Extrae_address
1941  922A 18 06        	jr 2F
1942  922C
1943  922C 2A 45 8C     1 ld hl,(Album_de_pintado_Amadeus)
1944  922F CD 23 91     	call Extrae_address
1945  9232
1946  9232 CD 2A 96     2 call Pinta_Sprites
1947  9235
1948  9235 AF           	xor a
1949  9236 3C           	inc a											; Asegura NZ en la salida de la rutina.
1950  9237
1951  9237 C9           	ret
1952  9238
1953  9238              Pinta_Amadeus_shield
1954  9238
1955  9238 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1956  923B CD 23 91     	call Extrae_address
1957  923E CD 2A 96     	call Pinta_Sprites
1958  9241
1959  9241 AF           	xor a
1960  9242 3C           	inc a											; Asegura NZ en la salida de la rutina.
1961  9243
1962  9243 C9           	ret
1963  9244
1964  9244              Borra_Pinta_Amadeus_shield
1965  9244
1966  9244 CD 1D 92     	call Borra_Amadeus_shield
1967  9247 CD 38 92     	call Pinta_Amadeus_shield
1968  924A C9           	ret
1969  924B
1970  924B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1971  924B              ;
1972  924B              ;	19/6/24
1973  924B              ;
1974  924B
1975  924B              Teclado
1976  924B
1977  924B              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1978  924B
1979  924B 3E F7        	ld a,$f7												; "5" para disparar.
1980  924D DB FE        	in a,($fe)
1981  924F E6 10        	and $10
1982  9251
1983  9251 CC C5 A2     	call z,Genera_disparo_Amadeus
1984  9254
1985  9254 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1986  9256 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1987  9258 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1988  925A CC 97 9D         call z,Amadeus_a_izquierda
1989  925D
1990  925D 3E F7        	ld a,$f7
1991  925F DB FE        	in a,($fe)
1992  9261 E6 01        	and $01
1993  9263 C8           	ret z
1994  9264
1995  9264 3E F7        	ld a,$f7
1996  9266 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1997  9268 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1998  926A CC AF 9D     	call z,Amadeus_a_derecha
1999  926D
2000  926D C9           	ret
2001  926E
2002  926E              ; ------------------------------------------------------------------------------------------------------------------------
2003  926E              ;
2004  926E              ;	06/07/24
2005  926E              ;
2006  926E
2007  926E              Genera_explosion
2008  926E
2009  926E 21 77 8C     	ld hl,Clock_explosion
2010  9271 35           	dec (hl)
2011  9272 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2012  9274
2013  9274              Borra_entidad_colisionada
2014  9274
2015  9274 CD 61 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2016  9277
2017  9277 DD E5        	push ix
2018  9279 CD 7D 90     	call Cargamos_registros_con_explosion
2019  927C CD 36 95     	call Genera_datos_de_impresion
2020  927F DD E1        	pop ix
2021  9281
2022  9281 AF           	xor a
2023  9282 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2024  9283
2025  9283 C9           	ret
2026  9284
2027  9284              Siguiente_frame_explosion
2028  9284
2029  9284 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2030  9286
2031  9286              ; Avanza Frame de explosión.
2032  9286
2033  9286 DD 6E 07     	ld l,(ix+7)
2034  9289 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2035  928C
2036  928C 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2037  928F
2038  928F 79           	ld a,c
2039  9290 95           	sub l
2040  9291 20 1D        	jr nz,1F
2041  9293
2042  9293              ; Fín de la entidad !!!!!!!!!!!!!
2043  9293
2044  9293 21 37 8C     	ld hl,Numero_parcial_de_entidades
2045  9296 35           	dec (hl)
2046  9297 23           	inc hl
2047  9298 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2048  9299
2049  9299              ; !! Provisional. Limpia la caja de entidades.
2050  9299
2051  9299 DD E5        	push ix
2052  929B E1           	pop hl
2053  929C
2054  929C AF           	xor a
2055  929D 77           	ld (hl),a
2056  929E
2057  929E 5D           	ld e,l
2058  929F 54           	ld d,h
2059  92A0 1C           	inc e
2060  92A1
2061  92A1 01 0B 00     	ld bc,11
2062  92A4 ED B0        	ldir
2063  92A6
2064  92A6 21 66 8C     	ld hl,Ctrl_4
2065  92A9 CB C6        	set 0,(hl)
2066  92AB
2067  92AB CD 19 94     	call Limpiamos_bandeja_DRAW
2068  92AE 18 C4        	jr Borra_entidad_colisionada
2069  92B0
2070  92B0 23           1 inc hl
2071  92B1 23           	inc hl
2072  92B2
2073  92B2 DD 75 07     	ld (ix+7),l
2074  92B5 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2075  92B8
2076  92B8 18 BA        	jr Borra_entidad_colisionada
2077  92BA
2078  92BA              ; ----- ----- ----- ----- -----
2079  92BA
2080  92BA              Genera_explosion_Amadeus
2081  92BA
2082  92BA 21 78 8C     	ld hl,Clock_explosion_Amadeus
2083  92BD 35           	dec (hl)
2084  92BE 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2085  92C0
2086  92C0              Borra_Amadeus_impactado
2087  92C0
2088  92C0 CD C6 8E     	call Change_Amadeus
2089  92C3 CD 91 90     	call Cargamos_registros_con_explosion_Amadeus
2090  92C6 CD B2 90     	call Genera_datos_de_impresion_Amadeus
2091  92C9
2092  92C9 21 65 8C     	ld hl,Ctrl_3
2093  92CC CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2094  92CE
2095  92CE AF           	xor a
2096  92CF 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2097  92D0
2098  92D0 C9           	ret
2099  92D1
2100  92D1              Siguiente_frame_explosion_Amadeus
2101  92D1
2102  92D1 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2103  92D3
2104  92D3              ; Avanza Frame de explosión.
2105  92D3
2106  92D3 2A BE 89     	ld hl,(Pamm_Amadeus)
2107  92D6 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2108  92D9
2109  92D9 79           	ld a,c
2110  92DA 95           	sub l
2111  92DB 20 0B        	jr nz,1F
2112  92DD
2113  92DD              ; Fín de Amadeus !!!!!!!!!!!!!
2114  92DD              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2115  92DD
2116  92DD AF           	xor a
2117  92DE 32 BB 89     	ld (Impacto_Amadeus),a
2118  92E1 21 65 8C     	ld hl,Ctrl_3
2119  92E4 CB F6        	set 6,(hl)
2120  92E6
2121  92E6 18 D8        	jr Borra_Amadeus_impactado
2122  92E8
2123  92E8 23           1 inc hl
2124  92E9 23           	inc hl
2125  92EA 22 BE 89     	ld (Pamm_Amadeus),hl
2126  92ED 18 D1        	jr Borra_Amadeus_impactado
2127  92EF
2128  92EF              ; ---------------------------------------------------------------
2129  92EF
2130  92EF              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92EF              ; ******************************************************************************************************************************************************************************************
   2+ 92EF              ;
   3+ 92EF              ;   21/04/24
   4+ 92EF              ;
   5+ 92EF              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92EF              ;   (XOR) bit a bit.
   7+ 92EF              ;
   8+ 92EF              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92EF
  10+ 92EF              Derivando_RND
  11+ 92EF
  12+ 92EF 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92F2
  14+ 92F2 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92F4 C5               push bc
  16+ 92F5              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92F5 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92F8              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92F8
  20+ 92F8 A7           6 and a                                 ; Carry a "0".
  21+ 92F9 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92FB 30 02            jr nc,1F
  23+ 92FD
  24+ 92FD CB C1            set 0,c
  25+ 92FF
  26+ 92FF 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9300 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9302 5F               ld e,a
  29+ 9303
  30+ 9303 7A               ld a,d
  31+ 9304 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9306 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9308
  34+ 9308 CB 3F            srl a
  35+ 930A
  36+ 930A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 930B
  38+ 930B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 930C 28 04            jr z,4F
  40+ 930E
  41+ 930E CB FF            set 7,a
  42+ 9310 18 02            jr 5F
  43+ 9312
  44+ 9312 CB BF        4 res 7,a
  45+ 9314
  46+ 9314 CB 21        5 sla c
  47+ 9316 10 E0            djnz 6B
  48+ 9318
  49+ 9318 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9319
  51+ 9319 77               ld (hl),a
  52+ 931A 23               inc hl
  53+ 931B C1               pop bc
  54+ 931C 10 D4            djnz 3B
  55+ 931E
  56+ 931E C9               ret
  57+ 931F
  58+ 931F
  59+ 931F
# file closed: RND_Derivando.asm
2131  931F              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 931F              ;---------------------------------------------------------------------------------------------------------------
   2+ 931F              ;
   3+ 931F              ;   13/11/24
   4+ 931F
   5+ 931F              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 931F
   7+ 931F              Genera_movimientos_masticados_del_nivel
   8+ 931F
   9+ 931F              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 931F
  11+ 931F              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 931F              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 931F              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 931F
  15+ 931F 2D           	dec l
  16+ 9320 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9321 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9322 4E           	ld c,(hl)
  19+ 9323
  20+ 9323 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9324 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9325
  23+ 9325              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9325
  25+ 9325 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9326
  27+ 9326 CD 64 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9329
  29+ 9329              ;	Caja Master inicializada ???
  30+ 9329
  31+ 9329 7E           	ld a,(hl)
  32+ 932A A7           	and a
  33+ 932B 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 932D
  35+ 932D              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 932D
  37+ 932D C1           	pop bc
  38+ 932E 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 932F C5           	push bc
  40+ 9330
  41+ 9330 CD 04 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9333 CD 98 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9336
  44+ 9336 3A EE 8B     	ld a,(Tipo)
  45+ 9339 CD 74 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 933C
  47+ 933C              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 933C
  49+ 933C              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 933C              ;	ld a,(hl)
  51+ 933C              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 933C
  53+ 933C              ;	ld hl,Posicion_inicio
  54+ 933C              ;	ld (hl),a
  55+ 933C
  56+ 933C              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 933C              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 933C
  59+ 933C CD FD 8F     	call Construye_movimientos_masticados_entidad
  60+ 933F
  61+ 933F 2A 34 8C     	ld hl,(Puntero_indice_master)
  62+ 9342 CD 23 91     	call Extrae_address
  63+ 9345
  64+ 9345 5D           	ld e,l
  65+ 9346 54           	ld d,h
  66+ 9347
  67+ 9347 CD C5 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 934A
  69+ 934A              Movimientos_masticados_construidos
  70+ 934A
  71+ 934A C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 934B
  73+ 934B E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 934C 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 934D
  76+ 934D 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 934E 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9350
  79+ 9350 C9           	ret
  80+ 9351
  81+ 9351              ;---------------------------------------------------------------------------------------------------------------
  82+ 9351              ;
  83+ 9351              ;   9/11/24
  84+ 9351              ;
  85+ 9351              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9351              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9351              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9351              ;	_ de la 1ª entidad del Nivel.
  89+ 9351              ;
  90+ 9351              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9351
  92+ 9351              ;	MODIFICA: HL,DE y A.
  93+ 9351              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9351
  95+ 9351              Inicializa_1er_Nivel
  96+ 9351
  97+ 9351              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9351
  99+ 9351 21 D2 8B     	ld hl,Indice_de_niveles
 100+ 9354 CD 23 91     	call Extrae_address
 101+ 9357 ED 53 85 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 935B
 103+ 935B 7E           	ld a,(hl)
 104+ 935C 32 36 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 935F
 106+ 935F 2C           	inc l
 107+ 9360 22 87 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9363
 109+ 9363 C9           	ret
 110+ 9364
 111+ 9364              ; ----------------------
 112+ 9364              ;
 113+ 9364              ;	13/11/24
 114+ 9364              ;
 115+ 9364
 116+ 9364              Situa_en_Caja_Master
 117+ 9364
 118+ 9364 CD 83 94         call Calcula_salto_en_BC
 119+ 9367 21 61 89         ld hl,Indice_de_cajas_master
 120+ 936A A7               and a
 121+ 936B ED 4A            adc hl,bc
 122+ 936D 22 34 8C       	ld (Puntero_indice_master),hl
 123+ 9370 CD 23 91     	call Extrae_address
 124+ 9373 C9           	ret
 125+ 9374
 126+ 9374              ; ----------------------
 127+ 9374
 128+ 9374              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 9374              ; 	ld bc,4
 130+ 9374              ; 	ldir
 131+ 9374              ; 	ret
 132+ 9374
 133+ 9374 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9375 CD 83 94         call Calcula_salto_en_BC
 135+ 9378 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 937B A7               and a
 137+ 937C ED 4A            adc hl,bc
 138+ 937E CD 23 91         call Extrae_address
 139+ 9381 22 1F 8C         ld (Puntero_indice_mov),hl
 140+ 9384 C9               ret
 141+ 9385
 142+ 9385              ;---------------------------------------------------------------------------------------------------------------
 143+ 9385              ;
 144+ 9385              ;   13/11/24
 145+ 9385              ;
 146+ 9385              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 9385
 148+ 9385
 149+ 9385              Prepara_Cajas_de_Entidades
 150+ 9385
 151+ 9385              ; Preparamos los punteros de las cajas de entidades:
 152+ 9385
 153+ 9385 CD 0D 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 9388              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 9388 CD CE 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 938B
 157+ 938B 2A 87 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 938E
 159+ 938E              ; En este punto:
 160+ 938E              ;
 161+ 938E              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 938E              ; B contiene (Numero_parcial_de_entidades).
 163+ 938E
 164+ 938E C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 938F
 166+ 938F 7E           	ld a,(hl)
 167+ 9390
 168+ 9390 CD 64 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 9393
 170+ 9393 ED 5B 2E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9397
 172+ 9397 D5           	push de
 173+ 9398 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 939A
 175+ 939A 01 0C 00     	ld bc,12
 176+ 939D ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 939F              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 939F
 179+ 939F              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 939F              ;
 181+ 939F              ;
 182+ 939F              ; ------------------------------------------------------ IX
 183+ 939F              ; ------------------------------------------------------ IX
 184+ 939F              ; ------------------------------------------------------ IX
 185+ 939F              ; ------------------------------------------------------ IX
 186+ 939F
 187+ 939F DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 93A1
 189+ 93A1 CD 51 90     	call Obtenemos_puntero_de_impresion
 190+ 93A4
 191+ 93A4 DD 6E 05     	ld l,(ix+5)
 192+ 93A7 2C           	inc l
 193+ 93A8 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 93AB
 195+ 93AB D5           	push de														; Push (Puntero_objeto).
 196+ 93AC E5           	push hl														; Push (Puntero_de_impresion).
 197+ 93AD
 198+ 93AD CD 0A 95     	call Genera_coordenadas
 199+ 93B0
 200+ 93B0 ED 4B EF 8B  	ld bc,(Coordenada_X)
 201+ 93B4
 202+ 93B4 DD 71 01     	ld (ix+1),c
 203+ 93B7 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 93BA
 205+ 93BA CD 61 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 93BD
 207+ 93BD DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 93BF D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 93C0
 210+ 93C0 CD 36 95     	call Genera_datos_de_impresion
 211+ 93C3
 212+ 93C3 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 93C5
 214+ 93C5              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 93C5
 216+ 93C5 CD 3C 94     	call Decrementa_Contador_de_mov_masticados
 217+ 93C8 CD 19 94     	call Limpiamos_bandeja_DRAW									;! Cuando el juego funcione, probar a eliminar esta línea!!!!!!!!!!!
 218+ 93CB CD 71 91     	call Incrementa_punteros_de_cajas
 219+ 93CE
 220+ 93CE              ; Siguiente entidad del Nivel.
 221+ 93CE
 222+ 93CE 2A 87 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 93D1 23           	inc hl 														; _ entidad del Nivel.
 224+ 93D2
 225+ 93D2 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 93D3
 227+ 93D3 10 B9        	djnz 1B
 228+ 93D5
 229+ 93D5 C9           	ret
 230+ 93D6
 231+ 93D6              ; -------------------------------------------------------------------------------------------------------------------
 232+ 93D6              ;
 233+ 93D6              ;	27/5/24
 234+ 93D6              ;
 235+ 93D6              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 93D6              ;
 237+ 93D6
 238+ 93D6              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 93D6              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 93D6
 241+ 93D6 21 29 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 93D9 CD 98 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 93DC
 244+ 93DC
 245+ 93DC              Construye_movimientos_masticados_Amadeus
 246+ 93DC
 247+ 93DC 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 93DF CD 44 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 93E2              ;															; _ el (Contador_de_mov_masticados).
 250+ 93E2 CD 29 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 93E5              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 93E5
 253+ 93E5              ; Generamos movimientos masticados de Amadeus.
 254+ 93E5
 255+ 93E5 06 79        	ld b,121												; $0079, 121d.
 256+ 93E7
 257+ 93E7 C5           1 push bc
 258+ 93E8 CD 4D 97     	call Draw
 259+ 93EB CD 29 90     	call Guarda_movimiento_masticado
 260+ 93EE
 261+ 93EE CD C1 9A     	call Mov_right
 262+ 93F1 CD C1 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 93F4
 264+ 93F4 C1           	pop bc
 265+ 93F5 10 F0        	djnz 1B
 266+ 93F7
 267+ 93F7              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 93F7
 269+ 93F7              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 93F7              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 93F7
 272+ 93F7 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 93FA 01 08 00     	ld bc,8
 274+ 93FD A7           	and a
 275+ 93FE ED 42        	sbc hl,bc
 276+ 9400 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 9403
 278+ 9403 C9           	ret
 279+ 9404
 280+ 9404              ; ---------------------------------------------------------------------
 281+ 9404              ;
 282+ 9404              ;	10/02/24
 283+ 9404              ;
 284+ 9404              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 9404              ;
 286+ 9404              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 9404
 288+ 9404              Definicion_segun_tipo
 289+ 9404
 290+ 9404 CD 83 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 9407 21 0B 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 940A CD 8E 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 940D C9           	ret
 294+ 940E
 295+ 940E              ; ---------------------------------------------------------------------
 296+ 940E              ;
 297+ 940E              ;	6/7/24
 298+ 940E
 299+ 940E
 300+ 940E              Store_Restore_cajas
 301+ 940E
 302+ 940E ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 303+ 9412 CD C5 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 9415 CD 71 91     	call Incrementa_punteros_de_cajas
 305+ 9418 C9           	ret
 306+ 9419
 307+ 9419              ; ---------------------------------------------------------------------
 308+ 9419              ;
 309+ 9419              ;	23/6/24
 310+ 9419              ;
 311+ 9419              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 9419              ;
 313+ 9419              ;	MODIFY: HL
 314+ 9419
 315+ 9419              Limpiamos_bandeja_DRAW
 316+ 9419
 317+ 9419 ED 73 3D 8C  	ld (Stack),sp
 318+ 941D 31 13 8C     	ld sp,Vel_left
 319+ 9420
 320+ 9420 AF           	xor a
 321+ 9421 67           	ld h,a
 322+ 9422 6F           	ld l,a
 323+ 9423
 324+ 9423 E5           	push hl
 325+ 9424 E5           	push hl
 326+ 9425 E5           	push hl
 327+ 9426 E5           	push hl
 328+ 9427 E5           	push hl
 329+ 9428 E5           	push hl
 330+ 9429 E5           	push hl
 331+ 942A E5           	push hl
 332+ 942B E5           	push hl
 333+ 942C E5           	push hl
 334+ 942D E5           	push hl
 335+ 942E E5           	push hl
 336+ 942F E5           	push hl
 337+ 9430 E5           	push hl
 338+ 9431 E5           	push hl
 339+ 9432 E5           	push hl
 340+ 9433 E5           	push hl
 341+ 9434 E5           	push hl
 342+ 9435
 343+ 9435 33           	inc sp
 344+ 9436
 345+ 9436 E5           	push hl
 346+ 9437 ED 7B 3D 8C  	ld sp,(Stack)
 347+ 943B
 348+ 943B C9           	ret
 349+ 943C
 350+ 943C              ; ---------------------------------------------------------------------
 351+ 943C              ;
 352+ 943C              ;	23/11/24
 353+ 943C              ;
 354+ 943C              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 943C
 356+ 943C              Decrementa_Contador_de_mov_masticados
 357+ 943C
 358+ 943C DD 6E 09     	ld l,(ix+9)
 359+ 943F DD 66 0A     	ld h,(ix+10)
 360+ 9442
 361+ 9442 2B           	dec hl
 362+ 9443
 363+ 9443 DD 75 09     	ld (ix+9),l
 364+ 9446 DD 74 0A     	ld (ix+10),h
 365+ 9449
 366+ 9449 C9           	ret
 367+ 944A
 368+ 944A              ; ---------------------------------------------------------------------
 369+ 944A              ;
 370+ 944A              ;	24/11/24
 371+ 944A
 372+ 944A              Reinicia_entidad_maliciosa
 373+ 944A
 374+ 944A              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 944A
 376+ 944A CD 2E 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 944D CD 3B 9F     	call Transfiere_datos_de_contadores
 378+ 9450
 379+ 9450              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 9450
 381+ 9450 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 9453 CD 04 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 9456
 384+ 9456 7D           	ld a,l
 385+ 9457 C6 0B        	add 11
 386+ 9459 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 945A
 388+ 945A CD 23 91     	call Extrae_address
 389+ 945D
 390+ 945D DD 75 07     	ld (ix+7),l
 391+ 9460 DD 74 08     	ld (ix+8),h
 392+ 9463
 393+ 9463 CD 51 90     	call Obtenemos_puntero_de_impresion
 394+ 9466
 395+ 9466              ; Incrementa (Contador_de_vueltas)x2.
 396+ 9466              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 9466
 398+ 9466              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 9466              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 9466              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 9466              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 9466              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 9466
 404+ 9466 DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 946A
 406+ 946A DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 946D CB 2F        	sra a
 408+ 946F CB 2F        	sra a
 409+ 9471
 410+ 9471 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 9474
 412+ 9474 3E 40        	ld a,$40
 413+ 9476 DD BE 03     	cp (ix+3)
 414+ 9479 C0           	ret nz
 415+ 947A
 416+ 947A              ; Límitador.
 417+ 947A
 418+ 947A              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 947A
 420+ 947A DD CB 03 2E  	sra (ix+3)
 421+ 947E DD CB 0B 2E  	sra (ix+11)
 422+ 9482
 423+ 9482 C9           	ret
 424+ 9483
 425+ 9483              ;	------------------------------------------------------------------------------------
 426+ 9483              ;
 427+ 9483              ;	09/11/24
 428+ 9483              ;
 429+ 9483              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 9483              ;
 431+ 9483              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 9483              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 9483
 434+ 9483 A7           Calcula_salto_en_BC and a
 435+ 9484 28 04        	jr z,1F
 436+ 9486 CB 27        	sla a
 437+ 9488 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 948A 4F           1 ld c,a
 439+ 948B 06 00        	ld b,0
 440+ 948D C9           	ret
 441+ 948E
 442+ 948E              ; ------------------------------------------------------------------
 443+ 948E              ;
 444+ 948E              ;	19/1/24
 445+ 948E              ;
 446+ 948E              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 948E              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 948E
 449+ 948E A7           Situa_en_datos_de_definicion and a
 450+ 948F ED 4A        	adc hl,bc
 451+ 9491 CD 23 91     	call Extrae_address
 452+ 9494 22 3B 8C         ld (Datos_de_entidad),hl
 453+ 9497 C9           	ret
 454+ 9498
 455+ 9498              ; ------------------------------------------------------------------
 456+ 9498
 457+ 9498              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 458+ 9498              ; 	inc de
 459+ 9498              ; 	inc de
 460+ 9498              ; 	ex de,hl
 461+ 9498              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 462+ 9498              ; 	ret
 463+ 9498
 464+ 9498              ; ----------------------------------------------------------------------------------------------------------
 465+ 9498              ;
 466+ 9498              ;	24/6/24
 467+ 9498              ;
 468+ 9498              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 469+ 9498              ;	_ de entidad.
 470+ 9498              ;
 471+ 9498              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 472+ 9498              ;
 473+ 9498              ;
 474+ 9498              ;	MODIFICA: HL,DE y BC
 475+ 9498
 476+ 9498
 477+ 9498              Definicion_de_entidad_a_bandeja_DRAW
 478+ 9498
 479+ 9498 11 EE 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 480+ 949B 7E           	ld a,(hl) 									; Volcamos Tipo.
 481+ 949C 12           	ld (de),a
 482+ 949D 23           	inc hl
 483+ 949E              ;
 484+ 949E 11 FC 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 485+ 94A1 01 02 00     	ld bc,2
 486+ 94A4 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 487+ 94A6              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 488+ 94A6 11 F1 8B     	ld de,Contador_de_vueltas
 489+ 94A9 7E           	ld a,(hl)
 490+ 94AA 12           	ld (de),a
 491+ 94AB 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 492+ 94AC
 493+ 94AC 11 03 8C     	ld de,Indice_Sprite_der
 494+ 94AF 01 04 00     	ld bc,4
 495+ 94B2 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 496+ 94B4
 497+ 94B4 11 0B 8C     	ld de,Posicion_inicio
 498+ 94B7 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 499+ 94BA ED B0        	ldir 									; Vuelco (Frames_explosion).
 500+ 94BC
 501+ 94BC 11 F5 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 502+ 94BF 01 02 00     	ld bc,2
 503+ 94C2 ED B0        	ldir
 504+ 94C4
 505+ 94C4 C9           	ret
 506+ 94C5
 507+ 94C5              ; ----------------------------------------------------------------------------------------------------------
 508+ 94C5              ;
 509+ 94C5              ;	1/8/24
 510+ 94C5              ;
 511+ 94C5
 512+ 94C5              Parametros_de_bandeja_DRAW_a_caja
 513+ 94C5
 514+ 94C5 21 EE 8B     	ld hl,Bandeja_DRAW
 515+ 94C8 01 0C 00     	ld bc,12
 516+ 94CB ED B0        	ldir
 517+ 94CD C9           	ret
 518+ 94CE
 519+ 94CE              ;---------------------------------------------------------------------------------------------------------------
 520+ 94CE              ;
 521+ 94CE              ;	13/11/24
 522+ 94CE              ;
 523+ 94CE              ;	INICIALIZA (Numero_parcial_de_entidades).
 524+ 94CE              ;
 525+ 94CE              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 526+ 94CE              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 527+ 94CE
 528+ 94CE              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 529+ 94CE              ;			- Actualiza (Numero_de_entidades).
 530+ 94CE
 531+ 94CE              ;	MODIFICA: A y B.
 532+ 94CE
 533+ 94CE
 534+ 94CE              Inicializa_Numero_parcial_de_entidades
 535+ 94CE
 536+ 94CE 3A 36 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 537+ 94D1 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 538+ 94D3 38 0E        	jr c,1F
 539+ 94D5 28 0C        	jr z,1F
 540+ 94D7
 541+ 94D7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 542+ 94D7              ; Actualizamos variables.
 543+ 94D7
 544+ 94D7 D6 06        	sub 6
 545+ 94D9 32 36 8C     	ld (Numero_de_entidades),a
 546+ 94DC 3E 06        	ld a,6
 547+ 94DE 32 37 8C     	ld (Numero_parcial_de_entidades),a
 548+ 94E1 47           	ld b,a
 549+ 94E2 C9           	ret
 550+ 94E3
 551+ 94E3              ; El nº total de entidades no supera el nº de cajas de entidades.
 552+ 94E3              ; (Numero_de_entidades)="0".
 553+ 94E3
 554+ 94E3 32 37 8C     1 ld (Numero_parcial_de_entidades),a
 555+ 94E6 47           	ld b,a
 556+ 94E7 AF           	xor a
 557+ 94E8 32 36 8C     	ld (Numero_de_entidades),a
 558+ 94EB C9           	ret
 559+ 94EC
# file closed: Rutinas_de_inicio_y_niveles.asm
2132  94EC              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94EC              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94EC              ;
   3+ 94EC              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94EC              ;
   5+ 94EC              ; *****************************************************************************************************************************************************************************************
   6+ 94EC              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94EC
   8+ 94EC 7C           calcula_tercio ld a,h
   9+ 94ED E6 18        	and $18
  10+ 94EF CB 2F        	sra a
  11+ 94F1 CB 2F        	sra a
  12+ 94F3 CB 2F        	sra a
  13+ 94F5 C9           	ret
  14+ 94F6
# file closed: calcula_tercio.asm
2133  94F6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94F6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94F6              ;
   3+ 94F6              ;
   4+ 94F6              ;	CLS.
   5+ 94F6              ;
   6+ 94F6              ;	Limpia la pantalla y define sus atributos.
   7+ 94F6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94F6              ;
   9+ 94F6              ;	COLORES: 0 ..... NEGRO
  10+ 94F6              ;    		 1 ..... AZUL
  11+ 94F6              ; 			 2 ..... ROJO
  12+ 94F6              ;			 3 ..... MAGENTA
  13+ 94F6              ; 			 4 ..... VERDE
  14+ 94F6              ; 			 5 ..... CIAN
  15+ 94F6              ;			 6 ..... AMARILLO
  16+ 94F6              ; 			 7 ..... BLANCO
  17+ 94F6              ;
  18+ 94F6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94F6              ;
  20+ 94F6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94F6
  22+ 94F6
  23+ 94F6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94F9 11 01 40     	LD DE,$4001
  25+ 94FC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94FF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9501 ED B0        	LDIR
  28+ 9503 01 FF 02     	LD BC,767
  29+ 9506 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9507 ED B0        	LDIR
  31+ 9509 C9           	ret
  32+ 950A
# file closed: Cls.asm
2134  950A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 950A              ; ------------------------------------------------------------------------
   2+ 950A              ;
   3+ 950A              ;	30/1/24
   4+ 950A              ;
   5+ 950A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 950A              ;	Fila superior "0", Columna izquierda "0".
   7+ 950A              ;
   8+ 950A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 950A              ;
  10+ 950A              ;	Modifica: A,BC y DE.
  11+ 950A
  12+ 950A              Genera_coordenadas
  13+ 950A
  14+ 950A 7D           	ld a,l
  15+ 950B E6 1F        	and $1f
  16+ 950D
  17+ 950D 32 EF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9510
  19+ 9510 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9511 FE 40        	cp $40
  21+ 9513 38 1C        	jr c,4F
  22+ 9515
  23+ 9515 CD EC 94     	call calcula_tercio
  24+ 9518 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9519
  26+ 9519 1E 00        	ld e,0
  27+ 951B 7D           	ld a,l
  28+ 951C E6 E0        	and $e0
  29+ 951E 28 01        	jr z,1F
  30+ 9520 04           	inc b
  31+ 9521
  32+ 9521 04           1 inc b
  33+ 9522 05           	dec b
  34+ 9523 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9525              ;														; _ , salimos.
  36+ 9525 1C           3 inc e
  37+ 9526 D6 20        	sub 32
  38+ 9528 20 FB        	jr nz,3B
  39+ 952A 10 F5        	djnz 1B
  40+ 952C
  41+ 952C 7B           2 ld a,e
  42+ 952D 32 F0 8B     	ld (Coordenada_y),a
  43+ 9530 C9           	ret
  44+ 9531
  45+ 9531 AF           4 xor a
  46+ 9532 32 F0 8B     	ld (Coordenada_y),a
  47+ 9535 C9           	ret
  48+ 9536
# file closed: Genera_coordenadas.asm
2135  9536              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9536              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9536              ;
   3+ 9536              ;	20/09/24
   4+ 9536              ;
   5+ 9536              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9536              ;   DE contiene Puntero_objeto.
   7+ 9536              ;   IX contiene el Puntero de impresión.
   8+ 9536
   9+ 9536              Genera_datos_de_impresion
  10+ 9536
  11+ 9536 ED 73 3D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 953A
  13+ 953A 2A 5F 8C         ld hl,(Scanlines_album_SP)
  14+ 953D
  15+ 953D 3E 05            ld a,5
  16+ 953F 85               add l
  17+ 9540 6F               ld l,a
  18+ 9541
  19+ 9541 F9               ld sp,hl
  20+ 9542 22 5F 8C         ld (Scanlines_album_SP),hl
  21+ 9545
  22+ 9545 21 00 00         ld hl,0
  23+ 9548
  24+ 9548 DD E5            push ix
  25+ 954A 3B               dec sp
  26+ 954B ED 7A            adc hl,sp
  27+ 954D D5               push de
  28+ 954E
  29+ 954E              ; Recuperamos SP.
  30+ 954E
  31+ 954E ED 7B 3D 8C      ld sp,(Stack)
  32+ 9552
  33+ 9552 E5               push hl
  34+ 9553 F1               pop af
  35+ 9554 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 9555
  37+ 9555              ; Tenemos el encabezado listo.
  38+ 9555              ; Preparamos registros para generar los scanlines.
  39+ 9555
  40+ 9555 DD E5            push ix
  41+ 9557 E1               pop hl                                          ; 1er scanline en HL.
  42+ 9558
  43+ 9558 ED 5B 5F 8C      ld de,(Scanlines_album_SP)
  44+ 955C
  45+ 955C              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 955C              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 955C
  48+ 955C 7C               ld a,h
  49+ 955D FE 50            cp $50
  50+ 955F 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9561
  52+ 9561 20 05            jr nz,2F
  53+ 9563
  54+ 9563 7D               ld a,l
  55+ 9564 FE E0            cp $e0
  56+ 9566 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9568
  58+ 9568 7D           2 ld a,l
  59+ 9569 FE C0            cp $c0
  60+ 956B D2 01 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 956E
  62+ 956E              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 956E
  64+ 956E CD FF 99         call NextScan
  65+ 9571 EB               ex de,hl
  66+ 9572
  67+ 9572 73               ld (hl),e
  68+ 9573 23               inc hl
  69+ 9574 72               ld (hl),d
  70+ 9575 23               inc hl
  71+ 9576
  72+ 9576 EB               ex de,hl
  73+ 9577
  74+ 9577 CD FF 99         call NextScan
  75+ 957A EB               ex de,hl
  76+ 957B
  77+ 957B 73               ld (hl),e
  78+ 957C 23               inc hl
  79+ 957D 72               ld (hl),d
  80+ 957E 23               inc hl
  81+ 957F
  82+ 957F EB               ex de,hl
  83+ 9580
  84+ 9580 CD FF 99         call NextScan
  85+ 9583 EB               ex de,hl
  86+ 9584
  87+ 9584 73               ld (hl),e
  88+ 9585 23               inc hl
  89+ 9586 72               ld (hl),d
  90+ 9587 23               inc hl
  91+ 9588
  92+ 9588 EB               ex de,hl
  93+ 9589
  94+ 9589 CD FF 99         call NextScan
  95+ 958C EB               ex de,hl
  96+ 958D
  97+ 958D 73               ld (hl),e
  98+ 958E 23               inc hl
  99+ 958F 72               ld (hl),d
 100+ 9590 23               inc hl
 101+ 9591
 102+ 9591 EB               ex de,hl
 103+ 9592
 104+ 9592 CD FF 99         call NextScan
 105+ 9595 EB               ex de,hl
 106+ 9596
 107+ 9596 73               ld (hl),e
 108+ 9597 23               inc hl
 109+ 9598 72               ld (hl),d
 110+ 9599 23               inc hl
 111+ 959A
 112+ 959A EB               ex de,hl
 113+ 959B
 114+ 959B CD FF 99         call NextScan
 115+ 959E EB               ex de,hl
 116+ 959F
 117+ 959F 73               ld (hl),e
 118+ 95A0 23               inc hl
 119+ 95A1 72               ld (hl),d
 120+ 95A2 23               inc hl
 121+ 95A3
 122+ 95A3 EB               ex de,hl
 123+ 95A4
 124+ 95A4 CD FF 99         call NextScan
 125+ 95A7 EB               ex de,hl
 126+ 95A8
 127+ 95A8 73               ld (hl),e
 128+ 95A9 23               inc hl
 129+ 95AA 72               ld (hl),d
 130+ 95AB 23               inc hl
 131+ 95AC
 132+ 95AC EB               ex de,hl
 133+ 95AD
 134+ 95AD CD FF 99         call NextScan
 135+ 95B0 EB               ex de,hl
 136+ 95B1
 137+ 95B1 73               ld (hl),e
 138+ 95B2 23               inc hl
 139+ 95B3 72               ld (hl),d
 140+ 95B4 23               inc hl
 141+ 95B5
 142+ 95B5 EB               ex de,hl
 143+ 95B6
 144+ 95B6 CD FF 99         call NextScan
 145+ 95B9 EB               ex de,hl
 146+ 95BA
 147+ 95BA 73               ld (hl),e
 148+ 95BB 23               inc hl
 149+ 95BC 72               ld (hl),d
 150+ 95BD 23               inc hl
 151+ 95BE
 152+ 95BE EB               ex de,hl
 153+ 95BF
 154+ 95BF CD FF 99         call NextScan
 155+ 95C2 EB               ex de,hl
 156+ 95C3
 157+ 95C3 73               ld (hl),e
 158+ 95C4 23               inc hl
 159+ 95C5 72               ld (hl),d
 160+ 95C6 23               inc hl
 161+ 95C7
 162+ 95C7 EB               ex de,hl
 163+ 95C8
 164+ 95C8 CD FF 99         call NextScan
 165+ 95CB EB               ex de,hl
 166+ 95CC
 167+ 95CC 73               ld (hl),e
 168+ 95CD 23               inc hl
 169+ 95CE 72               ld (hl),d
 170+ 95CF 23               inc hl
 171+ 95D0
 172+ 95D0 EB               ex de,hl
 173+ 95D1
 174+ 95D1 CD FF 99         call NextScan
 175+ 95D4 EB               ex de,hl
 176+ 95D5
 177+ 95D5 73               ld (hl),e
 178+ 95D6 23               inc hl
 179+ 95D7 72               ld (hl),d
 180+ 95D8 23               inc hl
 181+ 95D9
 182+ 95D9 EB               ex de,hl
 183+ 95DA
 184+ 95DA CD FF 99         call NextScan
 185+ 95DD EB               ex de,hl
 186+ 95DE
 187+ 95DE 73               ld (hl),e
 188+ 95DF 23               inc hl
 189+ 95E0 72               ld (hl),d
 190+ 95E1 23               inc hl
 191+ 95E2
 192+ 95E2 EB               ex de,hl
 193+ 95E3
 194+ 95E3 CD FF 99         call NextScan
 195+ 95E6 EB               ex de,hl
 196+ 95E7
 197+ 95E7 73               ld (hl),e
 198+ 95E8 23               inc hl
 199+ 95E9 72               ld (hl),d
 200+ 95EA 23               inc hl
 201+ 95EB
 202+ 95EB EB               ex de,hl
 203+ 95EC
 204+ 95EC CD FF 99         call NextScan
 205+ 95EF EB               ex de,hl
 206+ 95F0
 207+ 95F0              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 95F0              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 95F0              ;   _ generar sus scanlines.
 210+ 95F0
 211+ 95F0              ;    ld (Puntero_de_impresion_disparo),de
 212+ 95F0
 213+ 95F0 73               ld (hl),e
 214+ 95F1 23               inc hl
 215+ 95F2 72               ld (hl),d
 216+ 95F3 23               inc hl
 217+ 95F4
 218+ 95F4              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 95F4
 220+ 95F4 22 5F 8C         ld (Scanlines_album_SP),hl
 221+ 95F7
 222+ 95F7 EB               ex de,hl
 223+ 95F8
 224+ 95F8              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 95F8
 226+ 95F8              ;    call NextScan
 227+ 95F8              ;    call NextScan
 228+ 95F8
 229+ 95F8 22 6A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 95FB
 231+ 95FB              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 95FB
 233+ 95FB 08               ex af,af
 234+ 95FC
 235+ 95FC F5               push af
 236+ 95FD E1               pop hl
 237+ 95FE
 238+ 95FE 36 10            ld (hl),16
 239+ 9600
 240+ 9600 C9               ret
 241+ 9601
 242+ 9601              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 9601
 244+ 9601              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 9601
 246+ 9601 3E 57            ld a,$57
 247+ 9603 94               sub h
 248+ 9604 47               ld b,a
 249+ 9605
 250+ 9605 3E DF            ld a,$df
 251+ 9607 BD               cp l
 252+ 9608 38 04            jr c,1F
 253+ 960A
 254+ 960A 3E 08            ld a,8
 255+ 960C 80               add b
 256+ 960D 47               ld b,a
 257+ 960E
 258+ 960E              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 960E              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 960E
 261+ 960E 48           1 ld c,b
 262+ 960F 0C               inc c
 263+ 9610
 264+ 9610 04               inc b
 265+ 9611 05               dec b
 266+ 9612 20 02            jr nz,3F
 267+ 9614
 268+ 9614 18 0B            jr 6F
 269+ 9616
 270+ 9616 CD FF 99     3 call NextScan
 271+ 9619 EB               ex de,hl
 272+ 961A
 273+ 961A 73               ld (hl),e
 274+ 961B 23               inc hl
 275+ 961C 72               ld (hl),d
 276+ 961D 23               inc hl
 277+ 961E
 278+ 961E EB               ex de,hl
 279+ 961F 10 F5            djnz 3B
 280+ 9621
 281+ 9621 ED 53 5F 8C  6 ld (Scanlines_album_SP),de
 282+ 9625
 283+ 9625 08           5 ex af,af
 284+ 9626 F5               push af
 285+ 9627 E1               pop hl
 286+ 9628
 287+ 9628 71               ld (hl),c
 288+ 9629
 289+ 9629 C9               ret
 290+ 962A
# file closed: Genera_datos_de_impresion.asm
2136  962A              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 962A              ; -----------------------------------------------------------------------------
   2+ 962A              ;
   3+ 962A              ;   11/03/24
   4+ 962A              ;
   5+ 962A
   6+ 962A              Pinta_Sprites
   7+ 962A
   8+ 962A              ;    ld hl,(Scanlines_album_SP)
   9+ 962A              ;    call Extrae_address
  10+ 962A
  11+ 962A              ;    inc h
  12+ 962A              ;    dec h
  13+ 962A              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 962A
  15+ 962A ED 73 3D 8C      ld (Stack),sp
  16+ 962E
  17+ 962E EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 962F              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 962F 2C               inc l
  20+ 9630 2C               inc l
  21+ 9631
  22+ 9631 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9632
  24+ 9632 2C               inc l
  25+ 9633 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9634
  27+ 9634              ;   Seleccionamos rutina de impresión:
  28+ 9634
  29+ 9634 3E 10            ld a,16
  30+ 9636 B8               cp b
  31+ 9637 C2 33 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 963A
  33+ 963A              ;   Rutinas:
  34+ 963A
  35+ 963A              Pinta_rapido    ;   1520 t/states.
  36+ 963A
  37+ 963A E1               pop hl
  38+ 963B
  39+ 963B 1A               ld a,(de)
  40+ 963C AE               xor (hl)
  41+ 963D 77               ld (hl),a
  42+ 963E 2C               inc l
  43+ 963F 1C               inc e
  44+ 9640 1A               ld a,(de)
  45+ 9641 AE               xor (hl)
  46+ 9642 77               ld (hl),a
  47+ 9643 2C               inc l
  48+ 9644 1C               inc e
  49+ 9645 1A               ld a,(de)
  50+ 9646 AE               xor (hl)
  51+ 9647 77               ld (hl),a
  52+ 9648 13               inc de
  53+ 9649
  54+ 9649 E1               pop hl
  55+ 964A
  56+ 964A 1A               ld a,(de)
  57+ 964B AE               xor (hl)
  58+ 964C 77               ld (hl),a
  59+ 964D 2C               inc l
  60+ 964E 1C               inc e
  61+ 964F 1A               ld a,(de)
  62+ 9650 AE               xor (hl)
  63+ 9651 77               ld (hl),a
  64+ 9652 2C               inc l
  65+ 9653 1C               inc e
  66+ 9654 1A               ld a,(de)
  67+ 9655 AE               xor (hl)
  68+ 9656 77               ld (hl),a
  69+ 9657 13               inc de
  70+ 9658
  71+ 9658 E1               pop hl
  72+ 9659
  73+ 9659 1A               ld a,(de)
  74+ 965A AE               xor (hl)
  75+ 965B 77               ld (hl),a
  76+ 965C 2C               inc l
  77+ 965D 1C               inc e
  78+ 965E 1A               ld a,(de)
  79+ 965F AE               xor (hl)
  80+ 9660 77               ld (hl),a
  81+ 9661 2C               inc l
  82+ 9662 1C               inc e
  83+ 9663 1A               ld a,(de)
  84+ 9664 AE               xor (hl)
  85+ 9665 77               ld (hl),a
  86+ 9666 13               inc de
  87+ 9667
  88+ 9667 E1               pop hl
  89+ 9668
  90+ 9668 1A               ld a,(de)
  91+ 9669 AE               xor (hl)
  92+ 966A 77               ld (hl),a
  93+ 966B 2C               inc l
  94+ 966C 1C               inc e
  95+ 966D 1A               ld a,(de)
  96+ 966E AE               xor (hl)
  97+ 966F 77               ld (hl),a
  98+ 9670 2C               inc l
  99+ 9671 1C               inc e
 100+ 9672 1A               ld a,(de)
 101+ 9673 AE               xor (hl)
 102+ 9674 77               ld (hl),a
 103+ 9675 13               inc de
 104+ 9676
 105+ 9676 E1               pop hl
 106+ 9677
 107+ 9677 1A               ld a,(de)
 108+ 9678 AE               xor (hl)
 109+ 9679 77               ld (hl),a
 110+ 967A 2C               inc l
 111+ 967B 1C               inc e
 112+ 967C 1A               ld a,(de)
 113+ 967D AE               xor (hl)
 114+ 967E 77               ld (hl),a
 115+ 967F 2C               inc l
 116+ 9680 1C               inc e
 117+ 9681 1A               ld a,(de)
 118+ 9682 AE               xor (hl)
 119+ 9683 77               ld (hl),a
 120+ 9684 13               inc de
 121+ 9685
 122+ 9685 E1               pop hl
 123+ 9686
 124+ 9686 1A               ld a,(de)
 125+ 9687 AE               xor (hl)
 126+ 9688 77               ld (hl),a
 127+ 9689 2C               inc l
 128+ 968A 1C               inc e
 129+ 968B 1A               ld a,(de)
 130+ 968C AE               xor (hl)
 131+ 968D 77               ld (hl),a
 132+ 968E 2C               inc l
 133+ 968F 1C               inc e
 134+ 9690 1A               ld a,(de)
 135+ 9691 AE               xor (hl)
 136+ 9692 77               ld (hl),a
 137+ 9693 13               inc de
 138+ 9694
 139+ 9694 E1               pop hl
 140+ 9695
 141+ 9695 1A               ld a,(de)
 142+ 9696 AE               xor (hl)
 143+ 9697 77               ld (hl),a
 144+ 9698 2C               inc l
 145+ 9699 1C               inc e
 146+ 969A 1A               ld a,(de)
 147+ 969B AE               xor (hl)
 148+ 969C 77               ld (hl),a
 149+ 969D 2C               inc l
 150+ 969E 1C               inc e
 151+ 969F 1A               ld a,(de)
 152+ 96A0 AE               xor (hl)
 153+ 96A1 77               ld (hl),a
 154+ 96A2 13               inc de
 155+ 96A3
 156+ 96A3 E1               pop hl
 157+ 96A4
 158+ 96A4 1A               ld a,(de)
 159+ 96A5 AE               xor (hl)
 160+ 96A6 77               ld (hl),a
 161+ 96A7 2C               inc l
 162+ 96A8 1C               inc e
 163+ 96A9 1A               ld a,(de)
 164+ 96AA AE               xor (hl)
 165+ 96AB 77               ld (hl),a
 166+ 96AC 2C               inc l
 167+ 96AD 1C               inc e
 168+ 96AE 1A               ld a,(de)
 169+ 96AF AE               xor (hl)
 170+ 96B0 77               ld (hl),a
 171+ 96B1 13               inc de
 172+ 96B2
 173+ 96B2 E1               pop hl
 174+ 96B3
 175+ 96B3 1A               ld a,(de)
 176+ 96B4 AE               xor (hl)
 177+ 96B5 77               ld (hl),a
 178+ 96B6 2C               inc l
 179+ 96B7 1C               inc e
 180+ 96B8 1A               ld a,(de)
 181+ 96B9 AE               xor (hl)
 182+ 96BA 77               ld (hl),a
 183+ 96BB 2C               inc l
 184+ 96BC 1C               inc e
 185+ 96BD 1A               ld a,(de)
 186+ 96BE AE               xor (hl)
 187+ 96BF 77               ld (hl),a
 188+ 96C0 13               inc de
 189+ 96C1
 190+ 96C1 E1               pop hl
 191+ 96C2
 192+ 96C2 1A               ld a,(de)
 193+ 96C3 AE               xor (hl)
 194+ 96C4 77               ld (hl),a
 195+ 96C5 2C               inc l
 196+ 96C6 1C               inc e
 197+ 96C7 1A               ld a,(de)
 198+ 96C8 AE               xor (hl)
 199+ 96C9 77               ld (hl),a
 200+ 96CA 2C               inc l
 201+ 96CB 1C               inc e
 202+ 96CC 1A               ld a,(de)
 203+ 96CD AE               xor (hl)
 204+ 96CE 77               ld (hl),a
 205+ 96CF 13               inc de
 206+ 96D0
 207+ 96D0 E1               pop hl
 208+ 96D1
 209+ 96D1 1A               ld a,(de)
 210+ 96D2 AE               xor (hl)
 211+ 96D3 77               ld (hl),a
 212+ 96D4 2C               inc l
 213+ 96D5 1C               inc e
 214+ 96D6 1A               ld a,(de)
 215+ 96D7 AE               xor (hl)
 216+ 96D8 77               ld (hl),a
 217+ 96D9 2C               inc l
 218+ 96DA 1C               inc e
 219+ 96DB 1A               ld a,(de)
 220+ 96DC AE               xor (hl)
 221+ 96DD 77               ld (hl),a
 222+ 96DE 13               inc de
 223+ 96DF
 224+ 96DF E1               pop hl
 225+ 96E0
 226+ 96E0 1A               ld a,(de)
 227+ 96E1 AE               xor (hl)
 228+ 96E2 77               ld (hl),a
 229+ 96E3 2C               inc l
 230+ 96E4 1C               inc e
 231+ 96E5 1A               ld a,(de)
 232+ 96E6 AE               xor (hl)
 233+ 96E7 77               ld (hl),a
 234+ 96E8 2C               inc l
 235+ 96E9 1C               inc e
 236+ 96EA 1A               ld a,(de)
 237+ 96EB AE               xor (hl)
 238+ 96EC 77               ld (hl),a
 239+ 96ED 13               inc de
 240+ 96EE
 241+ 96EE E1               pop hl
 242+ 96EF
 243+ 96EF 1A               ld a,(de)
 244+ 96F0 AE               xor (hl)
 245+ 96F1 77               ld (hl),a
 246+ 96F2 2C               inc l
 247+ 96F3 1C               inc e
 248+ 96F4 1A               ld a,(de)
 249+ 96F5 AE               xor (hl)
 250+ 96F6 77               ld (hl),a
 251+ 96F7 2C               inc l
 252+ 96F8 1C               inc e
 253+ 96F9 1A               ld a,(de)
 254+ 96FA AE               xor (hl)
 255+ 96FB 77               ld (hl),a
 256+ 96FC 13               inc de
 257+ 96FD
 258+ 96FD E1               pop hl
 259+ 96FE
 260+ 96FE 1A               ld a,(de)
 261+ 96FF AE               xor (hl)
 262+ 9700 77               ld (hl),a
 263+ 9701 2C               inc l
 264+ 9702 1C               inc e
 265+ 9703 1A               ld a,(de)
 266+ 9704 AE               xor (hl)
 267+ 9705 77               ld (hl),a
 268+ 9706 2C               inc l
 269+ 9707 1C               inc e
 270+ 9708 1A               ld a,(de)
 271+ 9709 AE               xor (hl)
 272+ 970A 77               ld (hl),a
 273+ 970B 13               inc de
 274+ 970C
 275+ 970C E1               pop hl
 276+ 970D
 277+ 970D 1A               ld a,(de)
 278+ 970E AE               xor (hl)
 279+ 970F 77               ld (hl),a
 280+ 9710 2C               inc l
 281+ 9711 1C               inc e
 282+ 9712 1A               ld a,(de)
 283+ 9713 AE               xor (hl)
 284+ 9714 77               ld (hl),a
 285+ 9715 2C               inc l
 286+ 9716 1C               inc e
 287+ 9717 1A               ld a,(de)
 288+ 9718 AE               xor (hl)
 289+ 9719 77               ld (hl),a
 290+ 971A 13               inc de
 291+ 971B
 292+ 971B E1               pop hl
 293+ 971C
 294+ 971C 1A               ld a,(de)
 295+ 971D AE               xor (hl)
 296+ 971E 77               ld (hl),a
 297+ 971F 2C               inc l
 298+ 9720 1C               inc e
 299+ 9721 1A               ld a,(de)
 300+ 9722 AE               xor (hl)
 301+ 9723 77               ld (hl),a
 302+ 9724 2C               inc l
 303+ 9725 1C               inc e
 304+ 9726 1A               ld a,(de)
 305+ 9727 AE               xor (hl)
 306+ 9728 77               ld (hl),a
 307+ 9729 13               inc de
 308+ 972A
 309+ 972A ED 73 5F 8C      ld (Scanlines_album_SP),sp
 310+ 972E ED 7B 3D 8C      ld sp,(Stack)
 311+ 9732 C9               ret
 312+ 9733
 313+ 9733              Pinta_lento
 314+ 9733
 315+ 9733 E1           1 pop hl
 316+ 9734
 317+ 9734 1A               ld a,(de)
 318+ 9735 AE               xor (hl)
 319+ 9736 77               ld (hl),a
 320+ 9737 2C               inc l
 321+ 9738 1C               inc e
 322+ 9739 1A               ld a,(de)
 323+ 973A AE               xor (hl)
 324+ 973B 77               ld (hl),a
 325+ 973C 2C               inc l
 326+ 973D 1C               inc e
 327+ 973E 1A               ld a,(de)
 328+ 973F AE               xor (hl)
 329+ 9740 77               ld (hl),a
 330+ 9741 13               inc de
 331+ 9742
 332+ 9742 10 EF            djnz 1B
 333+ 9744
 334+ 9744 ED 73 5F 8C      ld (Scanlines_album_SP),sp
 335+ 9748 ED 7B 3D 8C      ld sp,(Stack)
 336+ 974C C9               ret
# file closed: Pinta_Sprites.asm
2137  974D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 974D              ; ******************************************************************************************************************************************************************************************
   2+ 974D              ;
   3+ 974D              ; 26/06/23
   4+ 974D              ;
   5+ 974D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 974D
   7+ 974D              Draw
   8+ 974D
   9+ 974D CD F3 99     	call Prepara_draw
  10+ 9750 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9751 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9752 28 05        	jr z,2F
  13+ 9754
  14+ 9754 3A 0D 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9757 18 0C        	jr 1F
  16+ 9759
  17+ 9759 2A 0B 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 975C 22 FE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 975F CD EB 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9762              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9762
  22+ 9762 CD 92 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9765
  24+ 9765 3A FB 8B     1 ld a,(Ctrl_0)
  25+ 9768 CB 6F        	bit 5,a
  26+ 976A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 976C
  28+ 976C CD 81 97     	call Comprueba_limite_horizontal
  29+ 976F CD 11 98     	call Comprueba_limite_vertical
  30+ 9772
  31+ 9772              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9772              ; -----------------------
  33+ 9772              ; -----------------------
  34+ 9772              ; -----------------------
  35+ 9772
  36+ 9772 CD 67 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9775 CD 9E 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9778
  39+ 9778 3A FB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 977B CB AF        	res 5,a											; _a ser de utilidad.
  41+ 977D 32 FB 8B     	ld (Ctrl_0),a
  42+ 9780
  43+ 9780 C9           	ret
  44+ 9781
  45+ 9781              ; *******************************************************************************************************************************************************************************************
  46+ 9781              ;	21/01/23
  47+ 9781              ;
  48+ 9781              ; 	Comprueba_limite_horizontal.
  49+ 9781              ;
  50+ 9781              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9781              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9781              ;
  53+ 9781              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9781              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9781              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9781              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9781
  58+ 9781
  59+ 9781
  60+ 9781 3A FB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9784 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9786 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9788 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 978A 32 FB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 978D 18 09            jr 6F
  66+ 978F CB 5F        1 bit 3,a
  67+ 9791 28 0A            jr z,2F
  68+ 9793 E6 F7            and $f7
  69+ 9795 32 FB 8B         ld (Ctrl_0),a
  70+ 9798 CD EB 98     6 call Inicializacion
  71+ 979B 18 5B            jr 5F
  72+ 979D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 979E
  74+ 979E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 979E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 979E
  77+ 979E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 979F 2A 0F 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 97A2 CD EC 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 97A5 67           	ld h,a
  81+ 97A6 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 97A7 CD EC 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 97AA 67           	ld h,a
  84+ 97AB A7           	and a
  85+ 97AC ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 97AE 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 97AF 3A 0D 8C     	ld a,(Cuad_objeto)
  88+ 97B2 FE 02        	cp 2
  89+ 97B4 38 1E        	jr c,3F
  90+ 97B6 28 1C        	jr z,3F
  91+ 97B8 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 97B9 28 23            jr z,7F
  93+ 97BB 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 97BD 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 97BF E1           	pop hl
  96+ 97C0
  97+ 97C0              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 97C0              ; _para indicar con E="2" en caso necesario.
  99+ 97C0
 100+ 97C0 E5               push hl
 101+ 97C1 C5               push bc
 102+ 97C2 CD EC 94     	call calcula_tercio
 103+ 97C5 FE 01        	cp 1
 104+ 97C7 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97C9 CD F9 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97CC 28 26            jr z,9F
 107+ 97CE 38 24            jr c,9F
 108+ 97D0 1E 00        11 ld e,0
 109+ 97D2 18 22            jr 8F
 110+ 97D4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97D5 28 07        	jr z, 7F
 112+ 97D7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97D9 1E 00         	ld e,0
 114+ 97DB E1           	pop hl
 115+ 97DC 18 04        	jr 4F
 116+ 97DE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97E0 18 15            jr 10F
 118+ 97E2
 119+ 97E2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97E2              ; _para indicar con E="2" en caso necesario.
 121+ 97E2
 122+ 97E2 E5           4 push hl
 123+ 97E3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97E4 CD EC 94     	call calcula_tercio
 125+ 97E7 FE 01        	cp 1
 126+ 97E9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97EB CD F9 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97EE 28 04            jr z,9F
 129+ 97F0 30 02            jr nc,9F
 130+ 97F2 18 02        	jr 8F
 131+ 97F4 1E 02        9 ld e,2
 132+ 97F6 C1           8 pop bc
 133+ 97F7 E1           10 pop hl
 134+ 97F8 C9           5 ret
 135+ 97F9
 136+ 97F9              ; --------------------
 137+ 97F9              ;
 138+ 97F9              ; 25/08/22
 139+ 97F9
 140+ 97F9 CD EC 94     Comprueba_centro call calcula_tercio
 141+ 97FC 67               ld h,a
 142+ 97FD 08           	ex af,af
 143+ 97FE FE 02        	cp 2
 144+ 9800 38 07        	jr c,1F
 145+ 9802 28 05        	jr z,1F
 146+ 9804 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9807 18 03        	jr 2F
 148+ 9809 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 980C 08           2 ex af,af
 150+ 980D A7               and a
 151+ 980E ED 42            sbc hl,bc
 152+ 9810 C9               ret
 153+ 9811
 154+ 9811              ; *********************************************************************************************************************************************************************************************
 155+ 9811              ;
 156+ 9811              ;   16/8/22
 157+ 9811              ;
 158+ 9811              ;	Comprueba_limite_vertical
 159+ 9811              ;
 160+ 9811              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9811              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9811              ;
 163+ 9811
 164+ 9811 2A FE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9814 7D           	ld a,l
 166+ 9815 E6 1F        	and $1F
 167+ 9817 57           	ld d,a
 168+ 9818 3A 11 8C     	ld a,(Limite_vertical)
 169+ 981B BA           	cp d 											; Límite - Posición.
 170+ 981C 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 981D 3A 0D 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9820 CB 47        	bit 0,a
 173+ 9822 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9824
 175+ 9824              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9824
 177+ 9824 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9825 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9827
 180+ 9827              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9827              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9827
 183+ 9827 3A EF 8B         ld a,(Coordenada_X)
 184+ 982A 16 0F            ld d,Centro_izquierda
 185+ 982C A7               and a
 186+ 982D 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 982E 28 1E            jr z,3F
 188+ 9830 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9832              ;                                                    ; _salimos sin modificar nada.
 190+ 9832 18 0E            jr 2F
 191+ 9834 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9835 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9837
 194+ 9837              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9837              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9837
 197+ 9837 3A EF 8B         ld a,(Coordenada_X)
 198+ 983A 16 10            ld d,Centro_derecha
 199+ 983C A7               and a
 200+ 983D 92               sub d
 201+ 983E 28 0E            jr z,3F
 202+ 9840 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9842              ;                                                    ; _salimos sin modificar nada.
 204+ 9842 CB 43        2 bit 0,e
 205+ 9844 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9846 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9847 CD DB 98         call Modificaccionne
 208+ 984A C1           	pop bc
 209+ 984B CD EB 98         call Inicializacion
 210+ 984E C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 984F
 212+ 984F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 984F
 214+ 984F C5           4 push bc
 215+ 9850 01 FD 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9853 0A           	ld a,(bc)
 217+ 9854 3D           	dec a
 218+ 9855 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9856 7D           	ld a,l
 220+ 9857 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9858 CB 47        	bit 0,a
 222+ 985A 28 03        	jr z,5F
 223+ 985C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 985D 18 2E        	jr 7F
 225+ 985F
 226+ 985F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 985F
 228+ 985F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9860 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9861 3A FB 8B     	ld a,(Ctrl_0)
 231+ 9864 CB 4F        	bit 1,a
 232+ 9866 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9868 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9869
 235+ 9869              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9869
 237+ 9869 1C               inc e
 238+ 986A 1D               dec e
 239+ 986B 20 07            jr nz,12F
 240+ 986D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 986E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 986F 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9872 18 44        13 jr 9F
 244+ 9874 CB 43        12 bit 0,e
 245+ 9876 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9878              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9878 C1           	pop bc
 248+ 9879 18 D3        	jr 3B
 249+ 987B 80           14 add b
 250+ 987C 6F               ld l,a
 251+ 987D 22 FE 8B     	ld (Posicion_actual),hl
 252+ 9880 CD DB 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9883 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9885 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9887 32 FB 8B         ld (Ctrl_0),a
 256+ 988A F1           	pop af
 257+ 988B 18 2B        	jr 9F
 258+ 988D
 259+ 988D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 988D
 261+ 988D F5           7 push af
 262+ 988E 3A FB 8B     	ld a,(Ctrl_0)
 263+ 9891 CB 47        	bit 0,a
 264+ 9893 20 1D        	jr nz,8F
 265+ 9895 F1           	pop af
 266+ 9896
 267+ 9896              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9896
 269+ 9896 1C           	inc e
 270+ 9897 1D               dec e
 271+ 9898 20 07            jr nz,10F
 272+ 989A 90           	sub b
 273+ 989B 6F               ld l,a
 274+ 989C 22 FE 8B     	ld (Posicion_actual),hl
 275+ 989F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 98A1              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 98A1 CB 43        10 bit 0,e
 278+ 98A3 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 98A5              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 98A5 C1           	pop bc
 281+ 98A6 18 A6        	jr 3B
 282+ 98A8 90           16 sub b
 283+ 98A9 6F               ld l,a
 284+ 98AA 22 FE 8B     	ld (Posicion_actual),hl
 285+ 98AD CD DB 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 98B0 18 06            jr 9F
 287+ 98B2 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 98B4 32 FB 8B         ld (Ctrl_0),a
 289+ 98B7 F1           	pop af
 290+ 98B8 C1           9 pop bc
 291+ 98B9 1E 00        	ld e,0
 292+ 98BB CD EB 98         call Inicializacion
 293+ 98BE F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 98BF 08           	ex af,af
 295+ 98C0 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98C1 18 8B            jr 3B
 297+ 98C3
 298+ 98C3              ; --------------------
 299+ 98C3
 300+ 98C3 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98C5 CD 0E 9A     1 call PreviousScan
 302+ 98C8 10 FB            djnz 1B
 303+ 98CA 22 FE 8B     	ld (Posicion_actual),hl
 304+ 98CD AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98CE C9           	ret
 306+ 98CF
 307+ 98CF              ; --------------------
 308+ 98CF
 309+ 98CF 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98D1 CD FF 99     1 call NextScan
 311+ 98D4 10 FB            djnz 1B
 312+ 98D6 22 FE 8B     	ld (Posicion_actual),hl
 313+ 98D9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98DA C9           	ret
 315+ 98DB
 316+ 98DB              ; --------------------
 317+ 98DB              ;
 318+ 98DB              ;	22/01/23
 319+ 98DB              ;
 320+ 98DB              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98DB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98DB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98DB
 324+ 98DB
 325+ 98DB              Modificaccionne
 326+ 98DB
 327+ 98DB 3A 0D 8C     	ld a,(Cuad_objeto)
 328+ 98DE FE 02        	cp 2
 329+ 98E0 CC C3 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98E3 DC C3 98         call c,Modifica_Pos_actual
 331+ 98E6 C8           	ret z
 332+ 98E7 CD CF 98         call Modifica_Pos_actual2
 333+ 98EA C9               ret
 334+ 98EB
 335+ 98EB              ; *************************************************************************************************************************************************************************************************
 336+ 98EB              ;
 337+ 98EB              ;	13/8/22
 338+ 98EB              ;
 339+ 98EB              ;	Inicializacion
 340+ 98EB              ;
 341+ 98EB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98EB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98EB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98EB              ;
 345+ 98EB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98EB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98EB              ;	_ desaparece/aparece.
 348+ 98EB
 349+ 98EB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98EB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98EB              ;
 352+ 98EB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98EB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98EB              ; 		   [E] ="0"
 355+ 98EB
 356+ 98EB              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98EB
 358+ 98EB CD EC 94     Inicializacion call calcula_tercio
 359+ 98EE 28 36        	jr z,primit
 360+ 98F0 E6 02        	and 2
 361+ 98F2 20 07        	jr nz,segmit
 362+ 98F4 7D           	ld a,l
 363+ 98F5 FE 7F        	cp $7f
 364+ 98F7 38 2D        	jr c,primit
 365+ 98F9 28 2B        	jr z,primit
 366+ 98FB CD 61 99     segmit call column
 367+ 98FE 38 13        	jr c,tercuad
 368+ 9900 3E 04        cuarcuad ld a,4
 369+ 9902 32 0D 8C     	ld (Cuad_objeto),a
 370+ 9905 21 20 48     	ld hl,$4820
 371+ 9908 22 0F 8C     	ld (Limite_horizontal),hl
 372+ 990B 21 11 8C     	ld hl,Limite_vertical
 373+ 990E 36 0D        	ld (hl),$0d
 374+ 9910 08           	ex af,af
 375+ 9911 18 3C        	jr 1F
 376+ 9913              tercuad
 377+ 9913 3E 03        	ld a,3
 378+ 9915 32 0D 8C     	ld (Cuad_objeto),a
 379+ 9918 21 20 48     	ld hl,$4820
 380+ 991B 22 0F 8C     	ld (Limite_horizontal),hl
 381+ 991E 21 11 8C     	ld hl,Limite_vertical
 382+ 9921 36 12        	ld (hl),$12
 383+ 9923 08           	ex af,af
 384+ 9924 18 29        	jr 1F
 385+ 9926 CD 61 99     primit call column
 386+ 9929 38 13        	jr c, primcuad
 387+ 992B              segcuad
 388+ 992B 3E 02        	ld a,2
 389+ 992D 32 0D 8C     	ld (Cuad_objeto),a
 390+ 9930 21 C0 4F     	ld hl,$4fc0
 391+ 9933 22 0F 8C     	ld (Limite_horizontal),hl
 392+ 9936 21 11 8C     	ld hl,Limite_vertical
 393+ 9939 36 0D        	ld (hl),$0d
 394+ 993B 08           	ex af,af
 395+ 993C 18 11        	jr 1F
 396+ 993E              primcuad
 397+ 993E 3E 01        	ld a,1
 398+ 9940 32 0D 8C     	ld (Cuad_objeto),a
 399+ 9943 21 C0 4F     	ld hl,$4fc0
 400+ 9946 22 0F 8C     	ld (Limite_horizontal),hl
 401+ 9949 21 11 8C     	ld hl,Limite_vertical
 402+ 994C 36 12        	ld (hl),$12
 403+ 994E 08           	ex af,af
 404+ 994F
 405+ 994F C5           1 push bc
 406+ 9950 E5           	push hl
 407+ 9951 D5           	push de
 408+ 9952
 409+ 9952 2A FE 8B     	ld hl,(Posicion_actual)
 410+ 9955 CD 0A 95     	call Genera_coordenadas
 411+ 9958
 412+ 9958 D1           	pop de
 413+ 9959 E1           	pop hl
 414+ 995A C1           	pop bc
 415+ 995B
 416+ 995B 21 FB 8B     	ld hl,Ctrl_0
 417+ 995E CB EE        	set 5,(hl)
 418+ 9960 C9           	ret
 419+ 9961
 420+ 9961              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9961
 422+ 9961              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9961              ;
 424+ 9961              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9961
 426+ 9961 7D           column ld a,l
 427+ 9962 E6 1F        	and $1f
 428+ 9964 FE 10         	cp $10
 429+ 9966 C9            	ret
 430+ 9967
 431+ 9967              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9967              ;
 433+ 9967              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9967              ;
 435+ 9967              ; 14/12/22
 436+ 9967              ;
 437+ 9967              ;	Modifica: A y BC.
 438+ 9967
 439+ 9967 3A 0D 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 996A E6 01        	and 1
 441+ 996C 28 17        	jr z,1F
 442+ 996E
 443+ 996E              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 996E
 445+ 996E 3A EF 8B     	ld a,(Coordenada_X)
 446+ 9971 47           	ld b,a
 447+ 9972 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9973 79           	ld a,c
 449+ 9974 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9975 38 08        	jr c,2F
 451+ 9977 47           	ld b,a
 452+ 9978 79           	ld a,c
 453+ 9979 90           	sub b
 454+ 997A 32 0E 8C     	ld (Columnas),a
 455+ 997D 18 1B        	jr 4F
 456+ 997F 79           2 ld a,c
 457+ 9980 32 0E 8C     	ld (Columnas),a
 458+ 9983 18 15        	jr 4F
 459+ 9985
 460+ 9985              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9985
 462+ 9985 3A EF 8B     1 ld a,(Coordenada_X)
 463+ 9988 81           	add c
 464+ 9989 3D           	dec a
 465+ 998A D6 1F        	sub $1f
 466+ 998C 38 08        	jr c,3F
 467+ 998E 47           	ld b,a
 468+ 998F 79           	ld a,c
 469+ 9990 90           	sub b
 470+ 9991 32 0E 8C     	ld (Columnas),a
 471+ 9994 18 04        	jr 4F
 472+ 9996 79           3 ld a,c
 473+ 9997 32 0E 8C     	ld (Columnas),a
 474+ 999A D9           4 exx
 475+ 999B 4F           	ld c,a
 476+ 999C D9           	exx
 477+ 999D C9            ret
 478+ 999E
 479+ 999E              ; --------------------------------------------------------------------------------------------------------------------
 480+ 999E              ;
 481+ 999E              ;   19/7/23
 482+ 999E              ;
 483+ 999E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 999E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 999E              ;
 486+ 999E              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 999E              ;			HL e IY Contienen (Puntero_objeto).
 488+ 999E              ;
 489+ 999E              ;	DESTRUYE: HL,B Y A.
 490+ 999E
 491+ 999E 3A 0D 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 99A1 FE 02        	cp 2
 493+ 99A3 38 18        	jr c,1F
 494+ 99A5 28 16        	jr z,1F
 495+ 99A7 E6 01        	and 1
 496+ 99A9 28 0D        	jr z,3F
 497+ 99AB
 498+ 99AB              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 99AB
 500+ 99AB CD E7 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 99AE
 502+ 99AE 7D           9 ld a,l
 503+ 99AF E6 1F        	and $1f
 504+ 99B1 28 2A        	jr z,7F
 505+ 99B3 2B           	dec hl
 506+ 99B4 10 F8        	djnz 9B
 507+ 99B6 18 25        	jr 7F
 508+ 99B8
 509+ 99B8              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 99B8
 511+ 99B8 2A FE 8B     3 ld hl,(Posicion_actual)
 512+ 99BB 18 20        	jr 7F
 513+ 99BD
 514+ 99BD 28 14        1 jr z,2F
 515+ 99BF
 516+ 99BF              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 99BF
 518+ 99BF CD E7 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99C2
 520+ 99C2 7D           4 ld a,l
 521+ 99C3 E6 1F        	and $1f
 522+ 99C5 28 03        	jr z,6F
 523+ 99C7 2B           	dec hl
 524+ 99C8 10 F8        	djnz 4B
 525+ 99CA 06 0F        6 ld b,15
 526+ 99CC CD 0E 9A     5 call PreviousScan
 527+ 99CF 10 FB        	djnz 5B
 528+ 99D1 18 0A        	jr 7F
 529+ 99D3
 530+ 99D3              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99D3
 532+ 99D3 CD E7 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99D6 06 0F        	ld b,15
 534+ 99D8 CD 0E 9A     8 call PreviousScan
 535+ 99DB 10 FB        	djnz 8B
 536+ 99DD
 537+ 99DD E5           7 push hl
 538+ 99DE DD E1        	pop ix
 539+ 99E0
 540+ 99E0 2A 00 8C     	ld hl,(Puntero_objeto)
 541+ 99E3 E5           	push hl
 542+ 99E4 FD E1        	pop iy
 543+ 99E6
 544+ 99E6 C9           	ret
 545+ 99E7
 546+ 99E7              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99E7              ;
 548+ 99E7              ;	2/1/23
 549+ 99E7              ;
 550+ 99E7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99E7              ;
 552+ 99E7              ;	Tras esta rutina tenemos:
 553+ 99E7              ;
 554+ 99E7              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99E7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99E7              ;
 557+ 99E7              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99E7
 559+ 99E7 2A FE 8B     Operandos ld hl,(Posicion_actual)
 560+ 99EA 3A 0E 8C     	ld a,(Columnas)
 561+ 99ED 3D           	dec a
 562+ 99EE 20 01        	jr nz,1F
 563+ 99F0 3C           	inc a
 564+ 99F1 47           1 ld b,a
 565+ 99F2 C9           	ret
 566+ 99F3
 567+ 99F3              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99F3              ;
 569+ 99F3              ;	Prepara_draw
 570+ 99F3              ;
 571+ 99F3              ;	Es una rutina de carga.
 572+ 99F3              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99F3              ;
 574+ 99F3              ;	FUNCIONAMIENTO:
 575+ 99F3              ;
 576+ 99F3              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99F3              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99F3              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99F3              ;
 580+ 99F3              ;	DESTRUYE:
 581+ 99F3              ;
 582+ 99F3              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99F3
 584+ 99F3 21 FC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99F6 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99F7 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99F8 4E           	ld c,(hl)
 588+ 99F9 2A FE 8B     	ld hl,(Posicion_actual)
 589+ 99FC 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99FE C9           	ret
 591+ 99FF
 592+ 99FF              ;----------------------------------------------------------------------------------------------------------------
 593+ 99FF              ;
 594+ 99FF              ;	5/08/22
 595+ 99FF              ;
 596+ 99FF              ;   NextScan.
 597+ 99FF              ;
 598+ 99FF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99FF              ;
 600+ 99FF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99FF              ;
 602+ 99FF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99FF              ;
 604+ 99FF              ;       DESTRUIDOS: AF y HL !!!
 605+ 99FF              ;
 606+ 99FF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99FF              ;
 608+ 99FF
 609+ 99FF 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9A00 7C               ld a,h
 611+ 9A01 E6 07            and 7
 612+ 9A03 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9A04
 614+ 9A04 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9A05 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9A07 6F               ld l,a
 617+ 9A08 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9A09
 619+ 9A09 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9A0A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9A0C 67               ld h,a
 622+ 9A0D C9               ret
 623+ 9A0E
 624+ 9A0E              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A0E              ;
 626+ 9A0E              ;	5/08/22
 627+ 9A0E              ;
 628+ 9A0E              ;   PreviousScan.
 629+ 9A0E              ;
 630+ 9A0E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A0E              ;
 632+ 9A0E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A0E              ;
 634+ 9A0E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A0E              ;
 636+ 9A0E              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A0E              ;
 638+ 9A0E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A0E              ;
 640+ 9A0E
 641+ 9A0E 7C           PreviousScan ld a,h
 642+ 9A0F 25               dec h               ; Dec H.
 643+ 9A10 E6 07            and 7
 644+ 9A12 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A13
 646+ 9A13 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A14 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A16 6F               ld l,a
 649+ 9A17 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A18
 651+ 9A18 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A19 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A1B 67               ld h,a
 654+ 9A1C C9               ret
 655+ 9A1D
 656+ 9A1D
 657+ 9A1D
 658+ 9A1D
 659+ 9A1D
 660+ 9A1D
 661+ 9A1D
 662+ 9A1D
 663+ 9A1D
 664+ 9A1D
 665+ 9A1D
 666+ 9A1D
# file closed: Draw_XOR.asm
2138  9A1D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A1D
   2+ 9A1D              ; ******************************************************************************************************************************************************************************************
   3+ 9A1D              ;
   4+ 9A1D              ;   20/05/23
   5+ 9A1D              ;
   6+ 9A1D              ;	Recompone_posicion_inicio
   7+ 9A1D              ;
   8+ 9A1D              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A1D              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A1D              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A1D              ;	_ a una u otra rutina.
  12+ 9A1D
  13+ 9A1D              Recompone_posicion_inicio
  14+ 9A1D
  15+ 9A1D 2A 0B 8C     	ld hl,(Posicion_inicio)
  16+ 9A20 7D           	ld a,l
  17+ 9A21 E6 1F        	and $1f
  18+ 9A23 28 16        	jr z,1F
  19+ 9A25
  20+ 9A25 FE 1F        	cp $1f
  21+ 9A27 28 0D        	jr z,3F
  22+ 9A29
  23+ 9A29 21 FA 8B     	ld hl,Ctrl_2
  24+ 9A2C CB C6        	set 0,(hl)
  25+ 9A2E 2A 00 8C     	ld hl,(Puntero_objeto)
  26+ 9A31 22 2C 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A34 18 08        	jr 2F
  28+ 9A36
  29+ 9A36 CD E4 9B     3 call Mov_left
  30+ 9A39 18 03        	jr 2F
  31+ 9A3B
  32+ 9A3B CD C1 9A     1 call Mov_right
  33+ 9A3E 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A41 22 00 8C     	ld (Puntero_objeto),hl
  35+ 9A44 C9           	ret
  36+ 9A45
  37+ 9A45              ; ******************************************************************************************************************************************************************************************
  38+ 9A45              ;
  39+ 9A45              ;   27/05/23
  40+ 9A45              ;
  41+ 9A45              ;	Mov_down
  42+ 9A45              ;
  43+ 9A45              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A45              ;
  45+ 9A45              ;
  46+ 9A45              Mov_down
  47+ 9A45
  48+ 9A45 CD AF 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A48              ;																	; _ repone (Puntero_objeto).
  50+ 9A48 21 FB 8B     	ld hl,Ctrl_0
  51+ 9A4B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A4D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A4D              ; 																	; _ en el caso de que no lo haya.
  54+ 9A4D 3A 16 8C     	ld a,(Vel_down)
  55+ 9A50 47           	ld b,a
  56+ 9A51 2A FE 8B         ld hl,(Posicion_actual)
  57+ 9A54 CD EC 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A57 E6 02        	and 2
  59+ 9A59 28 17        	jr z,1F
  60+ 9A5B
  61+ 9A5B              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A5B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A5B
  64+ 9A5B 7C           	ld a,h
  65+ 9A5C FE 57        	cp $57
  66+ 9A5E 20 12        	jr nz,1F
  67+ 9A60
  68+ 9A60 7D           	ld a,l
  69+ 9A61 C6 20        	add $20
  70+ 9A63 30 0D        	jr nc,1F
  71+ 9A65
  72+ 9A65              ; ------------------------------
  73+ 9A65              ;
  74+ 9A65              ;	12/01/24
  75+ 9A65
  76+ 9A65              ;	call Reaparece_arriba
  77+ 9A65 CD 71 9D     	call Reinicio
  78+ 9A68
  79+ 9A68              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A68
  81+ 9A68 3A 65 8C     	ld a,(Ctrl_3)
  82+ 9A6B CB CF        	set 1,a
  83+ 9A6D 32 65 8C     	ld (Ctrl_3),a
  84+ 9A70
  85+ 9A70 18 08        	jr 3F
  86+ 9A72              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A72              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A72              ; ------------------------------
  89+ 9A72
  90+ 9A72 CD FF 99     1 call NextScan
  91+ 9A75 22 FE 8B     	ld (Posicion_actual),hl
  92+ 9A78 10 DA            djnz 2B
  93+ 9A7A CD 0A 95     3 call Genera_coordenadas
  94+ 9A7D C9           	ret
  95+ 9A7E
  96+ 9A7E              ; ******************************************************************************************************************************************************************************************
  97+ 9A7E              ;
  98+ 9A7E              ;   27/05/23
  99+ 9A7E              ;
 100+ 9A7E              ;	Mov_up
 101+ 9A7E              ;
 102+ 9A7E              ; 	Mueve el Sprite hacia arriba.
 103+ 9A7E              ;
 104+ 9A7E              ;
 105+ 9A7E              Mov_up
 106+ 9A7E
 107+ 9A7E CD AF 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A81              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A81 21 FB 8B     	ld hl,Ctrl_0
 110+ 9A84 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A86              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A86              ; 																		; _ en el caso de que no lo haya.
 113+ 9A86 3A 15 8C     	ld a,(Vel_up)
 114+ 9A89 47           	ld b,a
 115+ 9A8A 2A FE 8B     	ld hl,(Posicion_actual)
 116+ 9A8D CD EC 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A90 A7           	and a
 118+ 9A91 20 10        	jr nz,1F
 119+ 9A93
 120+ 9A93              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A93              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A93
 123+ 9A93 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A94 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A96 20 0B            jr nz,1F
 126+ 9A98 7D               ld a,l
 127+ 9A99 D6 20            sub $20
 128+ 9A9B 30 06            jr nc,1F
 129+ 9A9D 25               dec h
 130+ 9A9E
 131+ 9A9E              ; -----------------------------
 132+ 9A9E CD 52 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9AA1              ;	call Reinicio
 134+ 9AA1              ; -----------------------------
 135+ 9AA1
 136+ 9AA1 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9AA3 CD 0E 9A     1 call PreviousScan
 138+ 9AA6 22 FE 8B     	ld (Posicion_actual),hl
 139+ 9AA9 10 E2            djnz 3B
 140+ 9AAB CD 0A 95     2 call Genera_coordenadas
 141+ 9AAE C9           	ret
 142+ 9AAF
 143+ 9AAF              ; -----------------------------
 144+ 9AAF              ;
 145+ 9AAF              ;	27/5/23
 146+ 9AAF              ;
 147+ 9AAF              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9AAF              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9AAF              ;
 150+ 9AAF              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9AAF              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9AAF              ;
 153+ 9AAF              ;	Modifica: A y (Puntero_objeto).
 154+ 9AAF
 155+ 9AAF 3A FA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9AB2 CB 47        	bit 0,a
 157+ 9AB4 C8           	ret z
 158+ 9AB5 CB 87        	res 0,a
 159+ 9AB7 32 FA 8B     	ld (Ctrl_2),a
 160+ 9ABA 2A 2C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9ABD 22 00 8C     	ld (Puntero_objeto),hl
 162+ 9AC0 C9           	ret
 163+ 9AC1
 164+ 9AC1              ; ******************************************************************************************************************************************************************************************
 165+ 9AC1              ;
 166+ 9AC1              ;	19/10/22
 167+ 9AC1              ;
 168+ 9AC1              ;	Mov_right.
 169+ 9AC1              ;
 170+ 9AC1              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9AC1              ;
 172+ 9AC1
 173+ 9AC1 3A FB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9AC4 CB 77        	bit 6,a
 175+ 9AC6 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AC8
 177+ 9AC8 CD 00 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9ACB C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9ACC
 180+ 9ACC 21 FB 8B     	ld hl,Ctrl_0
 181+ 9ACF CB E6        	set 4,(hl)
 182+ 9AD1 18 52        	jr 8F
 183+ 9AD3
 184+ 9AD3 21 FB 8B     10 ld hl,Ctrl_0
 185+ 9AD6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AD8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AD8              ; 																	; _ en el caso de que no lo haya.
 188+ 9AD8 3A EF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9ADB FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9ADD 20 46        	jr nz,8F
 191+ 9ADF
 192+ 9ADF 3A 02 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AE2 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AE3 28 40        	jr z,8F
 195+ 9AE5
 196+ 9AE5              ; ---------- ---------- ----------
 197+ 9AE5              ;
 198+ 9AE5              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AE5
 200+ 9AE5 3A 14 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AE8 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AEA 28 11        	jr z,1F
 203+ 9AEC 38 06        	jr c,6F
 204+ 9AEE FE 04        	cp 4
 205+ 9AF0 28 14        	jr z,7F
 206+ 9AF2 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AF4
 208+ 9AF4              ; ---------- ---------- ----------
 209+ 9AF4              ;
 210+ 9AF4              ; Perfiles de velocidad
 211+ 9AF4              ;
 212+ 9AF4
 213+ 9AF4 3A 02 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AF7 FE FE        	cp $fe
 215+ 9AF9 20 2A        	jr nz,8F
 216+ 9AFB 18 10        	jr 3F
 217+ 9AFD 3A 02 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9B00 FE FD        	cp $fd
 219+ 9B02 20 21        	jr nz,8F
 220+ 9B04 18 07        	jr 3F
 221+ 9B06 3A 02 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9B09 FE FB        	cp $fb
 223+ 9B0B 20 18        	jr nz,8F
 224+ 9B0D
 225+ 9B0D              ; ---------- ---------- ----------
 226+ 9B0D
 227+ 9B0D              3
 228+ 9B0D CD 40 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B10              ;	call Reinicio
 230+ 9B10
 231+ 9B10              ; ---------- ---------- ----------
 232+ 9B10              ;
 233+ 9B10              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B10
 235+ 9B10 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B12 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B13 CD 2C 9B     	call DESPLZ_DER
 238+ 9B16 C1           	pop bc
 239+ 9B17 10 F9        	djnz 5B
 240+ 9B19 2A FE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B1C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B1D 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9B20 CD 0A 95     	call Genera_coordenadas
 244+ 9B23 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B25
 246+ 9B25              ; ---------- ---------- ----------
 247+ 9B25
 248+ 9B25 2A FE 8B     8 ld hl,(Posicion_actual)
 249+ 9B28 CD 2C 9B     	call DESPLZ_DER
 250+ 9B2B C9           2 ret
 251+ 9B2C
 252+ 9B2C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B2C              ;
 254+ 9B2C              ;	22/9/22
 255+ 9B2C              ;
 256+ 9B2C
 257+ 9B2C CD 3B 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B2F CD 87 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B32 CD B0 9B         call Ciclo_completo
 260+ 9B35 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B38 CB FE        	set 7,(hl)
 262+ 9B3A C9           	ret
 263+ 9B3B
 264+ 9B3B              ; ******************************************************************************************************************************************************************************************
 265+ 9B3B              ;	15/02/23
 266+ 9B3B              ;
 267+ 9B3B
 268+ 9B3B 3A 14 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B3E 47           	ld b,a
 270+ 9B3F 2A 07 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B42 23           1 inc hl
 272+ 9B43 23           	inc hl
 273+ 9B44 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B46 22 07 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B49 CD 23 91     	call Extrae_address
 276+ 9B4C 22 00 8C     	ld (Puntero_objeto),hl
 277+ 9B4F
 278+ 9B4F              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B4F
 280+ 9B4F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B4F              ; Cuántos movimientos hemos hecho ??
 282+ 9B4F              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B4F
 284+ 9B4F 2A 03 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B52 EB           	ex de,hl
 286+ 9B53 A7           	and a
 287+ 9B54 ED 52        	sbc hl,de
 288+ 9B56 CB 3D        	srl l
 289+ 9B58 3E 08        6 ld a,8
 290+ 9B5A 95           	sub l
 291+ 9B5B 30 1E        	jr nc,3F
 292+ 9B5D
 293+ 9B5D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B5D              ; B="0".
 295+ 9B5D
 296+ 9B5D 04           4 inc b
 297+ 9B5E 3C           	inc a
 298+ 9B5F 20 FC        	jr nz,4B
 299+ 9B61 78           	ld a,b
 300+ 9B62 08           	ex af,af
 301+ 9B63 2A 03 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B66 23           5 inc hl
 303+ 9B67 23           	inc hl
 304+ 9B68 10 FC        	djnz 5B
 305+ 9B6A 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B6D CD 23 91     	call Extrae_address
 307+ 9B70 22 00 8C     	ld (Puntero_objeto),hl
 308+ 9B73
 309+ 9B73              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B73              ; _(Posicion_actual).
 311+ 9B73
 312+ 9B73 21 FE 8B     	ld hl,Posicion_actual
 313+ 9B76 34           	inc (hl)
 314+ 9B77 08               ex af,af
 315+ 9B78 6F           	ld l,a
 316+ 9B79 18 DD        	jr 6B
 317+ 9B7B
 318+ 9B7B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B7B
 320+ 9B7B 47           3 ld b,a
 321+ 9B7C 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B7F 23           2 inc hl
 323+ 9B80 23           	inc hl
 324+ 9B81 10 FC        	djnz 2B
 325+ 9B83 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B86 C9           8 ret
 327+ 9B87
 328+ 9B87              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B87              ;
 330+ 9B87              ;	24/7/22
 331+ 9B87              ;
 332+ 9B87              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B87              ;
 334+ 9B87              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B87              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B87              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B87
 338+ 9B87 3A 02 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B8A A7           	and a
 340+ 9B8B 20 1F        	jr nz,1F
 341+ 9B8D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B8F 32 02 8C         ld (CTRL_DESPLZ),a
 343+ 9B92
 344+ 9B92 21 FD 8B     	ld hl,Columns
 345+ 9B95 34           	inc (hl)
 346+ 9B96 3A 0D 8C     	ld a,(Cuad_objeto)
 347+ 9B99 E6 01        	and 1
 348+ 9B9B 28 0F        	jr z,1F
 349+ 9B9D 2A FE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9BA0 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9BA1 22 FE 8B     	ld (Posicion_actual),hl
 352+ 9BA4 CD 0A 95     	call Genera_coordenadas
 353+ 9BA7 CD 0C 9D     	call Inc_CTRL_DESPLZ
 354+ 9BAA 18 03        	jr 2F
 355+ 9BAC CD 0C 9D     1 call Inc_CTRL_DESPLZ
 356+ 9BAF C9           2 ret
 357+ 9BB0
 358+ 9BB0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9BB0              ;
 360+ 9BB0              ;	24/7/22
 361+ 9BB0              ;
 362+ 9BB0              ;	Ciclo_completo.
 363+ 9BB0              ;
 364+ 9BB0              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9BB0              ;
 366+ 9BB0              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9BB0              ; 	Decrementamos (Columns).
 368+ 9BB0              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9BB0              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9BB0
 371+ 9BB0
 372+ 9BB0 3A 02 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9BB3 FE FF        	cp $ff
 374+ 9BB5 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9BB7 E6 F0        	and $f0
 376+ 9BB9 20 28        	jr nz,3F
 377+ 9BBB
 378+ 9BBB              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9BBB
 380+ 9BBB 3A 02 8C     	ld a,(CTRL_DESPLZ)
 381+ 9BBE 47           	ld b,a
 382+ 9BBF 3E F8        	ld a,$f8
 383+ 9BC1 80           	add b
 384+ 9BC2 32 02 8C     	ld (CTRL_DESPLZ),a
 385+ 9BC5 18 1C        	jr 3F
 386+ 9BC7 21 FD 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BCA 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BCB AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BCC 32 02 8C     	ld (CTRL_DESPLZ),a
 390+ 9BCF 3A 0D 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BD2 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BD4 20 0A        	jr nz,2F
 393+ 9BD6 2A FE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BD9 23           	inc hl
 395+ 9BDA 22 FE 8B     	ld (Posicion_actual),hl
 396+ 9BDD CD 0A 95     	call Genera_coordenadas
 397+ 9BE0
 398+ 9BE0              ; Inicia el puntero de Sprite.
 399+ 9BE0
 400+ 9BE0 CD 38 91     2 call Inicia_puntero_objeto_der
 401+ 9BE3 C9           3 ret
 402+ 9BE4
 403+ 9BE4              ; ******************************************************************************************************************************************************************************************
 404+ 9BE4              ;
 405+ 9BE4              ;	15/02/23
 406+ 9BE4              ;
 407+ 9BE4              ;	Mov_left.
 408+ 9BE4              ;
 409+ 9BE4              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BE4              ;
 411+ 9BE4              Mov_left
 412+ 9BE4
 413+ 9BE4 21 FB 8B     	ld hl,Ctrl_0
 414+ 9BE7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BE9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BE9              ; 																	; _ en el caso de que no lo haya.
 417+ 9BE9 3A FB 8B     	ld a,(Ctrl_0)
 418+ 9BEC CB 77        	bit 6,a
 419+ 9BEE 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BF0
 421+ 9BF0 CD 06 9D     	call Stop_Amadeus_left
 422+ 9BF3 C8           	ret z
 423+ 9BF4 20 4A        	jr nz,8F
 424+ 9BF6
 425+ 9BF6 3A EF 8B     11 ld a,(Coordenada_X)
 426+ 9BF9 A7           	and a
 427+ 9BFA 20 44        	jr nz,8F
 428+ 9BFC
 429+ 9BFC 3A 02 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BFF A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9C00 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9C02
 433+ 9C02              ; ---------- ---------- ----------
 434+ 9C02
 435+ 9C02 3A 13 8C     	ld a,(Vel_left)
 436+ 9C05 FE 02        	cp 2
 437+ 9C07 28 0F        	jr z,1F
 438+ 9C09 38 04        	jr c,6F
 439+ 9C0B FE 04        	cp 4
 440+ 9C0D 28 12        	jr z,7F
 441+ 9C0F
 442+ 9C0F              ; ---------- ---------- ----------
 443+ 9C0F
 444+ 9C0F 3A 02 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9C12 FE F8        	cp $f8
 446+ 9C14 20 2A        	jr nz,8F
 447+ 9C16 18 10        	jr 4F
 448+ 9C18 3A 02 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C1B FE F9        	cp $f9
 450+ 9C1D 20 21        	jr nz,8F
 451+ 9C1F 18 07        	jr 4F
 452+ 9C21 3A 02 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C24 FE FB        	cp $fb
 454+ 9C26 20 18        	jr nz,8F
 455+ 9C28
 456+ 9C28              ; ---------- ---------- ----------
 457+ 9C28
 458+ 9C28              4
 459+ 9C28 CD 2E 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C2B              ;	call Reinicio
 461+ 9C2B
 462+ 9C2B              ; ---------- ---------- ----------
 463+ 9C2B
 464+ 9C2B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C2D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C2E
 467+ 9C2E              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C2E              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C2E
 470+ 9C2E CD 47 9C     	call DESPLZ_IZQ
 471+ 9C31 C1           	pop bc
 472+ 9C32 10 F9        	djnz 5B
 473+ 9C34 2A FE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C37 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C38 22 FE 8B     	ld (Posicion_actual),hl
 476+ 9C3B CD 0A 95     	call Genera_coordenadas
 477+ 9C3E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C40
 479+ 9C40              ; ---------- ---------- ----------
 480+ 9C40
 481+ 9C40              ; Movemos, no hay recolocación.
 482+ 9C40
 483+ 9C40 2A FE 8B     8 ld hl,(Posicion_actual)
 484+ 9C43 CD 47 9C     	call DESPLZ_IZQ
 485+ 9C46 C9           2 ret
 486+ 9C47
 487+ 9C47              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C47              ;
 489+ 9C47              ;	22/9/22
 490+ 9C47
 491+ 9C47              DESPLZ_IZQ
 492+ 9C47
 493+ 9C47 CD 56 9C     	call Desplaza_izquierda
 494+ 9C4A CD A2 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C4D CD CA 9C     	call Ciclo_completo_2
 496+ 9C50 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C53 CB BE        	res 7,(hl)
 498+ 9C55 C9           	ret
 499+ 9C56
 500+ 9C56              Desplaza_izquierda
 501+ 9C56
 502+ 9C56 3A 13 8C     	ld a,(Vel_left)
 503+ 9C59 47           	ld b,a
 504+ 9C5A 2A 09 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C5D 23           1 inc hl
 506+ 9C5E 23           	inc hl
 507+ 9C5F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C61 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C64 CD 23 91     	call Extrae_address
 510+ 9C67 22 00 8C     	ld (Puntero_objeto),hl
 511+ 9C6A
 512+ 9C6A              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C6A
 514+ 9C6A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C6A              ; Cuántos movimientos hemos hecho ??
 516+ 9C6A              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C6A
 518+ 9C6A 2A 05 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C6D EB           	ex de,hl
 520+ 9C6E A7           	and a
 521+ 9C6F ED 52        	sbc hl,de
 522+ 9C71 CB 3D        	srl l
 523+ 9C73 3E 08        6 ld a,8
 524+ 9C75 95           	sub l
 525+ 9C76 30 1E        	jr nc,3F
 526+ 9C78
 527+ 9C78              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C78              ; B="0".
 529+ 9C78
 530+ 9C78 04           4 inc b
 531+ 9C79 3C           	inc a
 532+ 9C7A 20 FC        	jr nz,4B
 533+ 9C7C 78           	ld a,b
 534+ 9C7D 08           	ex af,af
 535+ 9C7E 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C81 23           5 inc hl
 537+ 9C82 23           	inc hl
 538+ 9C83 10 FC        	djnz 5B
 539+ 9C85 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C88 CD 23 91     	call Extrae_address
 541+ 9C8B 22 00 8C     	ld (Puntero_objeto),hl
 542+ 9C8E
 543+ 9C8E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C8E              ; _(Posicion_actual).
 545+ 9C8E
 546+ 9C8E 21 FE 8B     	ld hl,Posicion_actual
 547+ 9C91 35           	dec (hl)
 548+ 9C92 08           	ex af,af
 549+ 9C93 6F           	ld l,a
 550+ 9C94 18 DD        	jr 6B
 551+ 9C96
 552+ 9C96              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C96
 554+ 9C96 47           3 ld b,a
 555+ 9C97 2A 03 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C9A 23           2 inc hl
 557+ 9C9B 23           	inc hl
 558+ 9C9C 10 FC        	djnz 2B
 559+ 9C9E 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9CA1 C9           8 ret
 561+ 9CA2
 562+ 9CA2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9CA2              ;
 564+ 9CA2              ;	modifica_parametros_1er_DESPLZ
 565+ 9CA2              ;
 566+ 9CA2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9CA2              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9CA2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9CA2
 570+ 9CA2 3A 02 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9CA5 A7           	and a
 572+ 9CA6 20 1E        	jr nz,1F
 573+ 9CA8 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9CA9 32 02 8C         ld (CTRL_DESPLZ),a
 575+ 9CAC 21 FD 8B     	ld hl,Columns
 576+ 9CAF 34           	inc (hl)
 577+ 9CB0 3A 0D 8C     	ld a,(Cuad_objeto)
 578+ 9CB3 E6 01        	and 1
 579+ 9CB5 20 0F        	jr nz,1F
 580+ 9CB7 2A FE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9CBA 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9CBB 22 FE 8B     	ld (Posicion_actual),hl
 583+ 9CBE CD 0A 95     	call Genera_coordenadas
 584+ 9CC1 CD 1D 9D     	call Dec_CTRL_DESPLZ
 585+ 9CC4 18 03        	jr 2F
 586+ 9CC6 CD 1D 9D     1 call Dec_CTRL_DESPLZ
 587+ 9CC9 C9           2 ret
 588+ 9CCA
 589+ 9CCA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CCA
 591+ 9CCA 3A 02 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CCD FE F7        	cp $f7
 593+ 9CCF 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CD1 30 2C        	jr nc,3F
 595+ 9CD3
 596+ 9CD3              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CD3
 598+ 9CD3 06 00        	ld b,0
 599+ 9CD5 04           4 inc b
 600+ 9CD6 3C           	inc a
 601+ 9CD7 FE F7        	cp $f7
 602+ 9CD9 20 FA        	jr nz,4B
 603+ 9CDB 3E FF        	ld a,$ff
 604+ 9CDD 90           	sub b
 605+ 9CDE 32 02 8C     	ld (CTRL_DESPLZ),a
 606+ 9CE1 18 1C        	jr 3F
 607+ 9CE3
 608+ 9CE3              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CE3
 610+ 9CE3 21 FD 8B     1 ld hl,Columns
 611+ 9CE6 35           	dec (hl)
 612+ 9CE7 AF           	xor a
 613+ 9CE8 32 02 8C     	ld (CTRL_DESPLZ),a
 614+ 9CEB 3A 0D 8C     	ld a,(Cuad_objeto)
 615+ 9CEE E6 01        	and 1
 616+ 9CF0 28 0A        	jr z,2F
 617+ 9CF2 2A FE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CF5 2B           	dec hl
 619+ 9CF6 22 FE 8B     	ld (Posicion_actual),hl
 620+ 9CF9 CD 0A 95     	call Genera_coordenadas
 621+ 9CFC
 622+ 9CFC              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CFC
 624+ 9CFC CD 4B 91     2 call Inicia_puntero_objeto_izq
 625+ 9CFF C9           3 ret
 626+ 9D00
 627+ 9D00              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9D00              ;
 629+ 9D00              ;	19/10/22
 630+ 9D00              ;
 631+ 9D00              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9D00              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9D00
 634+ 9D00 3A EF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9D03 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9D05 C9           	ret
 637+ 9D06
 638+ 9D06              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9D06              ;
 640+ 9D06              ;	19/10/22
 641+ 9D06              ;
 642+ 9D06              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9D06              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9D06
 645+ 9D06 3A EF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9D09 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9D0B C9           	ret
 648+ 9D0C
 649+ 9D0C              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9D0C              ;
 651+ 9D0C              ;	24/7/22
 652+ 9D0C              ;
 653+ 9D0C              ;	Inc_CTRL_DESPLZ
 654+ 9D0C              ;
 655+ 9D0C              ;
 656+ 9D0C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9D0C
 658+ 9D0C 21 02 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D0F 3A 14 8C     	ld a,(Vel_right)
 660+ 9D12 A7           	and a
 661+ 9D13 28 06        	jr z,1F
 662+ 9D15 47           	ld b,a
 663+ 9D16 34           3 inc (hl)
 664+ 9D17 10 FD        	djnz 3B
 665+ 9D19 18 01        	jr 2F
 666+ 9D1B 34           1 inc (hl)
 667+ 9D1C C9           2 ret
 668+ 9D1D
 669+ 9D1D              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D1D              ;
 671+ 9D1D              ;	5/2/23
 672+ 9D1D              ;
 673+ 9D1D              ;	Dec_CTRL_DESPLZ
 674+ 9D1D              ;
 675+ 9D1D              ;
 676+ 9D1D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D1D
 678+ 9D1D 21 02 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D20 3A 13 8C     	ld a,(Vel_left)
 680+ 9D23 A7           	and a
 681+ 9D24 28 06        	jr z,1F
 682+ 9D26 47           	ld b,a
 683+ 9D27 35           3 dec (hl)
 684+ 9D28 10 FD        	djnz 3B
 685+ 9D2A 18 01        	jr 2F
 686+ 9D2C 35           1 dec (hl)
 687+ 9D2D C9           2 ret
 688+ 9D2E
 689+ 9D2E              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D2E
 691+ 9D2E 2A FE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D31 01 1F 00     	ld bc,31
 693+ 9D34 A7           	and a
 694+ 9D35 ED 4A        	adc hl,bc
 695+ 9D37 22 FE 8B     	ld (Posicion_actual),hl
 696+ 9D3A 21 FB 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D3D CB C6        	set 0,(hl)
 698+ 9D3F C9           	ret
 699+ 9D40
 700+ 9D40              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D40
 702+ 9D40 2A FE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D43 01 1F 00     	ld bc,31
 704+ 9D46 A7           	and a
 705+ 9D47 ED 42        	sbc hl,bc
 706+ 9D49 22 FE 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D4C 21 FB 8B     	ld hl,Ctrl_0
 708+ 9D4F CB CE        	set 1,(hl)
 709+ 9D51 C9           	ret
 710+ 9D52
 711+ 9D52              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D52
 713+ 9D52 24           Reaparece_abajo inc h
 714+ 9D53 01 E0 17     	ld bc,$17e0
 715+ 9D56 A7           	and a
 716+ 9D57 ED 4A        	adc hl,bc
 717+ 9D59 22 FE 8B     	ld (Posicion_actual),hl
 718+ 9D5C 21 FB 8B     	ld hl,Ctrl_0
 719+ 9D5F CB D6        	set 2,(hl)
 720+ 9D61 C9           	ret
 721+ 9D62
 722+ 9D62              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D62
 724+ 9D62 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D65 A7           	and a
 726+ 9D66 ED 42        	sbc hl,bc
 727+ 9D68 22 FE 8B     	ld (Posicion_actual),hl
 728+ 9D6B 21 FB 8B     	ld hl,Ctrl_0
 729+ 9D6E CB DE        	set 3,(hl)
 730+ 9D70 C9           	ret
 731+ 9D71
 732+ 9D71              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D71              ;
 734+ 9D71              ;	15/07/23
 735+ 9D71
 736+ 9D71              Reinicio
 737+ 9D71
 738+ 9D71              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D71
 740+ 9D71 AF           	xor a
 741+ 9D72 21 23 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D75 CD 93 9D     	call Limpia_contenido_hl
 743+ 9D78
 744+ 9D78 21 FE 8B     	ld hl,Posicion_actual
 745+ 9D7B CD 93 9D     	call Limpia_contenido_hl
 746+ 9D7E
 747+ 9D7E CD 74 93     	call Situa_Puntero_indice_mov
 748+ 9D81 CD 92 9E     	call Inicia_Puntero_mov
 749+ 9D84
 750+ 9D84 21 25 8C     	ld hl,Incrementa_puntero
 751+ 9D87 06 05        	ld b,5
 752+ 9D89 77           1 ld (hl),a
 753+ 9D8A 23           	inc hl
 754+ 9D8B 10 FC        	djnz 1B
 755+ 9D8D
 756+ 9D8D 21 FA 8B     	ld hl,Ctrl_2
 757+ 9D90 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D92
 759+ 9D92 C9           	ret
 760+ 9D93
 761+ 9D93 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D94 23           	inc hl
 763+ 9D95 77           	ld (hl),a
 764+ 9D96 C9           	ret
 765+ 9D97
 766+ 9D97              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D97              ;
 768+ 9D97              ;	18/6/24
 769+ 9D97              ;
 770+ 9D97
 771+ 9D97              Amadeus_a_izquierda
 772+ 9D97
 773+ 9D97              ;	Actualiza contador de movimientos.
 774+ 9D97
 775+ 9D97 21 C0 89     	ld hl,Comm_Amadeus
 776+ 9D9A 35           	dec (hl)
 777+ 9D9B 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D9D
 779+ 9D9D 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9DA0 2B           	dec hl
 781+ 9DA1 2B           	dec hl
 782+ 9DA2 2B           	dec hl
 783+ 9DA3 2B           	dec hl
 784+ 9DA4 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9DA7
 786+ 9DA7 21 65 8C     	ld hl,Ctrl_3
 787+ 9DAA CB EE        	set 5,(hl)
 788+ 9DAC
 789+ 9DAC C9           	ret
 790+ 9DAD
 791+ 9DAD 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9DAE C9           	ret
 793+ 9DAF
 794+ 9DAF
 795+ 9DAF              Amadeus_a_derecha
 796+ 9DAF
 797+ 9DAF              ;	Actualiza contador de movimientos.
 798+ 9DAF
 799+ 9DAF 21 C0 89     	ld hl,Comm_Amadeus
 800+ 9DB2 34           	inc (hl)
 801+ 9DB3 3E 7A        	ld a,$7a
 802+ 9DB5 BE           	cp (hl)
 803+ 9DB6 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9DB8
 805+ 9DB8 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9DBB 23           	inc hl
 807+ 9DBC 23           	inc hl
 808+ 9DBD 23           	inc hl
 809+ 9DBE 23           	inc hl
 810+ 9DBF 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DC2
 812+ 9DC2 21 65 8C     	ld hl,Ctrl_3
 813+ 9DC5 CB EE        	set 5,(hl)
 814+ 9DC7 C9           	ret
 815+ 9DC8
 816+ 9DC8 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DC9 C9           	ret
# file closed: Direcciones.asm
2139  9DCA              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DCA              ; ----- ----- ----- ----- -----
   2+ 9DCA              ;
   3+ 9DCA              ;   28/12/23
   4+ 9DCA
   5+ 9DCA              Movimiento
   6+ 9DCA
   7+ 9DCA              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DCA
   9+ 9DCA 3A FA 8B         ld a,(Ctrl_2)
  10+ 9DCD CB 57            bit 2,a
  11+ 9DCF 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DD1
  13+ 9DD1 2A 21 8C         ld hl,(Puntero_mov)
  14+ 9DD4 7E               ld a,(hl)
  15+ 9DD5
  16+ 9DD5              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DD5
  18+ 9DD5              Inicia_desplazamiento.
  19+ 9DD5
  20+ 9DD5              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DD5
  22+ 9DD5 CD C8 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DD8
  24+ 9DD8              ; Iniciamos (Repetimos_mov).
  25+ 9DD8
  26+ 9DD8 7E               ld a,(hl)
  27+ 9DD9 E6 0F            and $0f
  28+ 9DDB 32 27 8C         ld (Repetimos_desplazamiento),a
  29+ 9DDE 32 28 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DE1
  31+ 9DE1              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DE1
  33+ 9DE1 23               inc hl
  34+ 9DE2 7E               ld a,(hl)
  35+ 9DE3 32 2A 8C         ld (Cola_de_desplazamiento),a
  36+ 9DE6 2B               dec hl
  37+ 9DE7
  38+ 9DE7 21 FA 8B         ld hl,Ctrl_2
  39+ 9DEA CB D6            set 2,(hl)
  40+ 9DEC
  41+ 9DEC              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DEC              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DEC
  44+ 9DEC              Desplazamiento_iniciado
  45+ 9DEC
  46+ 9DEC CD 9C 9E         call Aplica_desplazamiento
  47+ 9DEF
  48+ 9DEF              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DEF
  50+ 9DEF 3A 65 8C         ld a,(Ctrl_3)
  51+ 9DF2 CB 4F            bit 1,a
  52+ 9DF4 C0               ret nz
  53+ 9DF5
  54+ 9DF5 21 27 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DF8 35               dec (hl)
  56+ 9DF9 C0               ret nz
  57+ 9DFA
  58+ 9DFA              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DFA              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DFA              ; Analiza (Cola_de_desplazamiento).
  61+ 9DFA
  62+ 9DFA 3A 2A 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DFD A7               and a
  64+ 9DFE CC F1 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9E01 28 30            jr z,Reinicia_el_movimiento
  66+ 9E03
  67+ 9E03 FE FF            cp $ff
  68+ 9E05 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9E07
  70+ 9E07 FE FE            cp $fe
  71+ 9E09 CC 76 9E         call z,Fijamos_bucle
  72+ 9E0C 28 25            jr z,Reinicia_el_movimiento
  73+ 9E0E
  74+ 9E0E FE FD            cp $fd
  75+ 9E10 20 11            jr nz,1F
  76+ 9E12
  77+ 9E12              ; ---
  78+ 9E12              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E12
  80+ 9E12 3A FA 8B         ld a,(Ctrl_2)
  81+ 9E15 CB 5F            bit 3,a
  82+ 9E17 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E19
  84+ 9E19              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E19
  86+ 9E19 21 FA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E1C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E1E
  89+ 9E1E CD 87 9E         call Inicia_Repetimos_movimiento
  90+ 9E21 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E23              ; ---
  92+ 9E23
  93+ 9E23 FE 01        1 cp 1
  94+ 9E25 CA 60 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E28
  96+ 9E28 3D               dec a
  97+ 9E29 32 2A 8C         ld (Cola_de_desplazamiento),a
  98+ 9E2C
  99+ 9E2C 3A 28 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E2F 32 27 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E32              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E32 C9               ret
 103+ 9E33
 104+ 9E33              Reinicia_el_movimiento
 105+ 9E33
 106+ 9E33 3A FA 8B         ld a,(Ctrl_2)
 107+ 9E36 CB 5F            bit 3,a
 108+ 9E38 28 1B            jr z,2F
 109+ 9E3A
 110+ 9E3A              ; (Cola_de_desplazamiento)="254".
 111+ 9E3A
 112+ 9E3A 21 29 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E3D 35               dec (hl)
 114+ 9E3E 20 15            jr nz,2F
 115+ 9E40
 116+ 9E40              ; Fin de las repeticiones del último movimiento.
 117+ 9E40
 118+ 9E40 21 FA 8B         ld hl,Ctrl_2
 119+ 9E43 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E45
 121+ 9E45 2A 21 8C         ld hl,(Puntero_mov)
 122+ 9E48 23               inc hl
 123+ 9E49 23               inc hl
 124+ 9E4A 23               inc hl
 125+ 9E4B 22 21 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E4E              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E4E 7E               ld a,(hl)
 128+ 9E4F 32 2A 8C         ld (Cola_de_desplazamiento),a
 129+ 9E52
 130+ 9E52 C3 FA 9D         jp Cola
 131+ 9E55
 132+ 9E55 CD 92 9E     2 call Inicia_Puntero_mov
 133+ 9E58
 134+ 9E58 21 FA 8B         ld hl,Ctrl_2
 135+ 9E5B CB 96            res 2,(hl)
 136+ 9E5D
 137+ 9E5D C3 CA 9D         jp Movimiento
 138+ 9E60
 139+ 9E60              Siguiente_desplazamiento
 140+ 9E60
 141+ 9E60              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E60              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E60
 144+ 9E60 21 FA 8B         ld hl,Ctrl_2
 145+ 9E63 CB 96            res 2,(hl)
 146+ 9E65
 147+ 9E65 2A 21 8C         ld hl,(Puntero_mov)
 148+ 9E68 23               inc hl
 149+ 9E69 23               inc hl
 150+ 9E6A 22 21 8C         ld (Puntero_mov),hl
 151+ 9E6D
 152+ 9E6D 7E               ld a,(hl)
 153+ 9E6E A7               and a
 154+ 9E6F CC F1 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E72 CA 33 9E         jp z,Reinicia_el_movimiento
 156+ 9E75
 157+ 9E75 C9               ret
 158+ 9E76
 159+ 9E76              ; Subrutinas -----------------------------------------
 160+ 9E76              ; ---------- --------- --------- ---------- ----------
 161+ 9E76              ;
 162+ 9E76              ;   24/07/23
 163+ 9E76              ;
 164+ 9E76              ;   Fijamos_bucle
 165+ 9E76              ;
 166+ 9E76              ;
 167+ 9E76
 168+ 9E76              Fijamos_bucle
 169+ 9E76
 170+ 9E76 3A 25 8C         ld a,(Incrementa_puntero)
 171+ 9E79 3C               inc a
 172+ 9E7A 32 26 8C         ld (Incrementa_puntero_backup),a
 173+ 9E7D
 174+ 9E7D CD F1 9E         call Incrementa_Puntero_indice_mov
 175+ 9E80 2A 1F 8C         ld hl,(Puntero_indice_mov)
 176+ 9E83 22 23 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E86 C9               ret
 178+ 9E87
 179+ 9E87              ; ---------- --------- --------- ---------- ----------
 180+ 9E87              ;
 181+ 9E87              ;   07/7/23
 182+ 9E87              ;
 183+ 9E87              ;   Inicia_Repetimos_movimiento
 184+ 9E87              ;
 185+ 9E87              ;
 186+ 9E87
 187+ 9E87              Inicia_Repetimos_movimiento
 188+ 9E87
 189+ 9E87              ; Iniciamos (Repetimos_movimiento).
 190+ 9E87
 191+ 9E87 DD 2A 21 8C      ld ix,(Puntero_mov)
 192+ 9E8B DD 7E 02         ld a,(ix+2)
 193+ 9E8E 32 29 8C         ld (Repetimos_movimiento),a
 194+ 9E91
 195+ 9E91 C9               ret
 196+ 9E92
 197+ 9E92              ; ---------- --------- --------- ---------- ----------
 198+ 9E92              ;
 199+ 9E92              ;   26/6/23
 200+ 9E92              ;
 201+ 9E92              ;   Inicia_Puntero_mov
 202+ 9E92              ;
 203+ 9E92              ;
 204+ 9E92
 205+ 9E92 2A 1F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E95 CD 23 91         call Extrae_address
 207+ 9E98 22 21 8C         ld (Puntero_mov),hl
 208+ 9E9B C9               ret
 209+ 9E9C
 210+ 9E9C              ; ---------- --------- --------- ---------- ----------
 211+ 9E9C              ;
 212+ 9E9C              ;   27/06/23
 213+ 9E9C              ;
 214+ 9E9C              ;   Aplica_movimiento.
 215+ 9E9C
 216+ 9E9C              Aplica_desplazamiento
 217+ 9E9C
 218+ 9E9C              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E9C
 220+ 9E9C 2A 21 8C         ld hl, (Puntero_mov)
 221+ 9E9F
 222+ 9E9F 7E               ld a,(hl)
 223+ 9EA0 E6 F0            and $f0
 224+ 9EA2 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9EA3
 226+ 9EA3 CB 7E            bit 7,(hl)
 227+ 9EA5 28 03            jr z,1F
 228+ 9EA7 CD 7E 9A         call Mov_up
 229+ 9EAA 2A 21 8C     1 ld hl, (Puntero_mov)
 230+ 9EAD CB 76            bit 6,(hl)
 231+ 9EAF 28 03            jr z,2F
 232+ 9EB1 CD 45 9A         call Mov_down
 233+ 9EB4
 234+ 9EB4              ; Se ha aplicado reinicio ???
 235+ 9EB4              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9EB4
 237+ 9EB4              ;    ld a,(Ctrl_3)
 238+ 9EB4              ;    bit 1,a
 239+ 9EB4              ;    ret nz
 240+ 9EB4
 241+ 9EB4 2A 21 8C     2 ld hl, (Puntero_mov)
 242+ 9EB7 CB 6E            bit 5,(hl)
 243+ 9EB9 28 03            jr z,3F
 244+ 9EBB CD E4 9B         call Mov_left
 245+ 9EBE 2A 21 8C     3 ld hl, (Puntero_mov)
 246+ 9EC1 CB 66            bit 4,(hl)
 247+ 9EC3 C8               ret z
 248+ 9EC4 CD C1 9A         call Mov_right
 249+ 9EC7 C9               ret
 250+ 9EC8
 251+ 9EC8              ; ---------- --------- --------- ---------- ----------
 252+ 9EC8              ;
 253+ 9EC8              ;   26/06/23
 254+ 9EC8              ;
 255+ 9EC8              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EC8
 257+ 9EC8              Ajusta_velocidad_desplazamiento
 258+ 9EC8
 259+ 9EC8              ; 1er byte de la cadena de movimiento.
 260+ 9EC8              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EC8
 262+ 9EC8 CD E6 9E         call Extrae_nibble_alto
 263+ 9ECB
 264+ 9ECB 32 15 8C         ld (Vel_up),a
 265+ 9ECE 79               ld a,c
 266+ 9ECF E6 0F            and $0f
 267+ 9ED1 32 16 8C         ld (Vel_down),a
 268+ 9ED4
 269+ 9ED4              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9ED4              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9ED4
 272+ 9ED4 23               inc hl
 273+ 9ED5 CD E6 9E         call Extrae_nibble_alto
 274+ 9ED8
 275+ 9ED8 32 13 8C         ld (Vel_left),a
 276+ 9EDB 79               ld a,c
 277+ 9EDC E6 0F            and $0f
 278+ 9EDE 32 14 8C         ld (Vel_right),a
 279+ 9EE1
 280+ 9EE1              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EE1
 282+ 9EE1 23               inc hl
 283+ 9EE2 22 21 8C         ld (Puntero_mov),hl
 284+ 9EE5 C9               ret
 285+ 9EE6
 286+ 9EE6 06 04        Extrae_nibble_alto ld b,4
 287+ 9EE8 7E               ld a,(hl)
 288+ 9EE9 4F               ld c,a
 289+ 9EEA E6 F0            and $f0
 290+ 9EEC CB 3F        1 srl a
 291+ 9EEE 10 FC            djnz 1B
 292+ 9EF0 C9               ret
 293+ 9EF1
 294+ 9EF1              ; ---------- --------- --------- ---------- ----------
 295+ 9EF1              ;
 296+ 9EF1              ;   5/7/23
 297+ 9EF1              ;
 298+ 9EF1              ;   Incrementa_Puntero_indice_mov
 299+ 9EF1
 300+ 9EF1              Incrementa_Puntero_indice_mov
 301+ 9EF1
 302+ 9EF1 21 25 8C         ld hl,Incrementa_puntero
 303+ 9EF4 34               inc (hl)
 304+ 9EF5
 305+ 9EF5 2A 1F 8C         ld hl,(Puntero_indice_mov)
 306+ 9EF8 01 02 00         ld bc,2
 307+ 9EFB A7               and a
 308+ 9EFC 09               add hl,bc
 309+ 9EFD 22 1F 8C         ld (Puntero_indice_mov),hl
 310+ 9F00
 311+ 9F00 7E               ld a,(hl)
 312+ 9F01 A7               and a
 313+ 9F02
 314+ 9F02              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9F02
 316+ 9F02              ;    jr z,$
 317+ 9F02
 318+ 9F02              ;! Reinicia el Patrón de movimiento.
 319+ 9F02
 320+ 9F02 CC 07 9F         call z,Inicializa_Puntero_indice_mov_2
 321+ 9F05
 322+ 9F05 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9F06
 324+ 9F06 C9               ret
 325+ 9F07
 326+ 9F07              ; ---------- --------- --------- ---------- ----------
 327+ 9F07              ;
 328+ 9F07              ;   15/01/24
 329+ 9F07              ;
 330+ 9F07              ;   Inicializa_Puntero_indice_mov
 331+ 9F07
 332+ 9F07              Inicializa_Puntero_indice_mov_2
 333+ 9F07
 334+ 9F07              ; Existe etiqueta de bucle principal???
 335+ 9F07
 336+ 9F07 2A 23 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9F0A 24               inc h
 338+ 9F0B 25               dec h
 339+ 9F0C 28 05            jr z,2F
 340+ 9F0E
 341+ 9F0E 22 1F 8C         ld (Puntero_indice_mov),hl
 342+ 9F11 18 14            jr 3F
 343+ 9F13
 344+ 9F13              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F13
 346+ 9F13 3A 25 8C     2 ld a,(Incrementa_puntero)
 347+ 9F16 47               ld b,a
 348+ 9F17
 349+ 9F17 2A 1F 8C         ld hl,(Puntero_indice_mov)
 350+ 9F1A 2B           1 dec hl
 351+ 9F1B 2B               dec hl
 352+ 9F1C 10 FC            djnz 1B
 353+ 9F1E 22 1F 8C         ld (Puntero_indice_mov),hl
 354+ 9F21
 355+ 9F21 AF               xor a
 356+ 9F22 32 25 8C         ld (Incrementa_puntero),a
 357+ 9F25 18 06            jr 4F
 358+ 9F27
 359+ 9F27 3A 26 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F2A 32 25 8C         ld (Incrementa_puntero),a
 361+ 9F2D C9           4 ret
 362+ 9F2E
 363+ 9F2E              ; ----------------------------------------------------------------------
 364+ 9F2E              ;
 365+ 9F2E              ;   24/11/24
 366+ 9F2E              ;
 367+ 9F2E              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F2E
 369+ 9F2E DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F31 CD 83 94         call Calcula_salto_en_BC
 371+ 9F34 21 17 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F37 A7               and a
 373+ 9F38 ED 4A            adc hl,bc
 374+ 9F3A C9               ret
 375+ 9F3B
 376+ 9F3B              ; ----------------------------------------------------------------------
 377+ 9F3B              ;
 378+ 9F3B              ;   24/11/24
 379+ 9F3B              ;
 380+ 9F3B              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F3B              ;
 382+ 9F3B              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F3B
 384+ 9F3B 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F3C 23               inc hl
 386+ 9F3D 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F3E DD 71 09         ld (ix+9),c
 388+ 9F41 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F44 C9               ret
 390+ 9F45
# file closed: Movimiento.asm
2140  9F45              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F45              ; --------------------------------------------------------------------------------------
   2+ 9F45              ;
   3+ 9F45              ;   25/10/24
   4+ 9F45              ;
   5+ 9F45
   6+ 9F45              Pinta_disparos_Entidades
   7+ 9F45
   8+ 9F45 ED 73 3D 8C      ld (Stack),sp
   9+ 9F49 ED 7B 4F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F4D
  11+ 9F4D 3E 02            ld a,2
  12+ 9F4F 08               ex af,af
  13+ 9F50
  14+ 9F50 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F52              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F52              ;                                     _ No encontraría "0".
  17+ 9F52 FD E1        4 pop iy
  18+ 9F54 D1               pop de                          ; 1er .db IYL
  19+ 9F55              ;                                   ; 2º  .db IYH
  20+ 9F55              ;                                   ; 3er .db E.
  21+ 9F55              ;   Album vacío ???
  22+ 9F55
  23+ 9F55 FD 7D            ld a,iyl
  24+ 9F57 FD 84            add iyh
  25+ 9F59 83               add e
  26+ 9F5A 28 1F            jr z,1F
  27+ 9F5C
  28+ 9F5C              ;   Imprime album, (contiene datos).
  29+ 9F5C
  30+ 9F5C 3B               dec sp
  31+ 9F5D
  32+ 9F5D E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F5E
  34+ 9F5E              ; Imprime el 1er scanline del disparo.
  35+ 9F5E
  36+ 9F5E FD 7D            ld a,iyl
  37+ 9F60 AE               xor (hl)
  38+ 9F61 77               ld (hl),a
  39+ 9F62
  40+ 9F62 2C               inc l
  41+ 9F63
  42+ 9F63 FD 7C            ld a,iyh
  43+ 9F65 AE               xor (hl)
  44+ 9F66 77               ld (hl),a
  45+ 9F67
  46+ 9F67 2C               inc l
  47+ 9F68
  48+ 9F68 7B               ld a,e
  49+ 9F69 AE               xor (hl)
  50+ 9F6A 77               ld (hl),a
  51+ 9F6B
  52+ 9F6B              ; Imprime el 2º scanline del disparo.
  53+ 9F6B
  54+ 9F6B E1               pop hl
  55+ 9F6C
  56+ 9F6C FD 7D            ld a,iyl
  57+ 9F6E AE               xor (hl)
  58+ 9F6F 77               ld (hl),a
  59+ 9F70
  60+ 9F70 2C               inc l
  61+ 9F71
  62+ 9F71 FD 7C            ld a,iyh
  63+ 9F73 AE               xor (hl)
  64+ 9F74 77               ld (hl),a
  65+ 9F75
  66+ 9F75 2C               inc l
  67+ 9F76
  68+ 9F76 7B               ld a,e
  69+ 9F77 AE               xor (hl)
  70+ 9F78 77               ld (hl),a
  71+ 9F79
  72+ 9F79 10 D7            djnz 4B
  73+ 9F7B
  74+ 9F7B 08           1 ex af,af
  75+ 9F7C 3D               dec a
  76+ 9F7D 20 05            jr nz,2F
  77+ 9F7F
  78+ 9F7F ED 7B 3D 8C      ld sp,(Stack)
  79+ 9F83 C9               ret
  80+ 9F84
  81+ 9F84 ED 7B 4D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F88 08               ex af,af
  83+ 9F89 18 C5            jr 3B
  84+ 9F8B
  85+ 9F8B              ; --------------------------------------------------------------------------------------
  86+ 9F8B              ;
  87+ 9F8B              ;   30/10/24
  88+ 9F8B              ;
  89+ 9F8B
  90+ 9F8B              Motor_de_disparos_entidades
  91+ 9F8B
  92+ 9F8B 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F8E FE 07            cp 7
  94+ 9F90 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F91
  96+ 9F91 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F93 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F96
  99+ 9F96 CD 23 91     1 call Extrae_address
 100+ 9F99 1C               inc e
 101+ 9F9A 1C               inc e
 102+ 9F9B ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F9F
 104+ 9F9F               ; Caja vacía ???
 105+ 9F9F
 106+ 9F9F 2D               dec l
 107+ 9FA0 7E               ld a,(hl)
 108+ 9FA1 A7               and a
 109+ 9FA2 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9FA4
 111+ 9FA4              ; --- Trabajamos con caja:
 112+ 9FA4
 113+ 9FA4 2C               inc l
 114+ 9FA5
 115+ 9FA5              ; --- Existe posibilidad de impacto ???
 116+ 9FA5
 117+ 9FA5 CB 46            bit 0,(hl)
 118+ 9FA7 C4 E7 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9FAA 20 37            jr nz,3F
 120+ 9FAC
 121+ 9FAC CD 6E A0         call Rota_disparo_si_procede
 122+ 9FAF
 123+ 9FAF              ; ------------------------------------------------------------
 124+ 9FAF
 125+ 9FAF 2D               dec l
 126+ 9FB0 2D               dec l
 127+ 9FB1
 128+ 9FB1 CD 23 91         call Extrae_address
 129+ 9FB4
 130+ 9FB4              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9FB4              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9FB4
 133+ 9FB4 3A 67 8C         ld a,(Ctrl_5)
 134+ 9FB7 CB 57            bit 2,a
 135+ 9FB9 28 09            jr z,4F
 136+ 9FBB
 137+ 9FBB CB 97            res 2,a
 138+ 9FBD 32 67 8C         ld (Ctrl_5),a
 139+ 9FC0 2C               inc l
 140+ 9FC1 2C               inc l
 141+ 9FC2 18 0C            jr 5F
 142+ 9FC4
 143+ 9FC4 CB 5F        4 bit 3,a
 144+ 9FC6 28 08            jr z,5F
 145+ 9FC8
 146+ 9FC8 CB 9F            res 3,a
 147+ 9FCA 32 67 8C         ld (Ctrl_5),a
 148+ 9FCD 2D               dec l
 149+ 9FCE 2D               dec l
 150+ 9FCF 2D               dec l
 151+ 9FD0
 152+ 9FD0              ; ---------------------------------------------------------------------
 153+ 9FD0
 154+ 9FD0              ;! Velocidad del disparo de entidades.
 155+ 9FD0
 156+ 9FD0 CD FF 99     5 call NextScan
 157+ 9FD3 CD FF 99         call NextScan
 158+ 9FD6
 159+ 9FD6              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FD6
 161+ 9FD6 CD 4B A0         call Fin_de_disparo_de_entidad
 162+ 9FD9
 163+ 9FD9 EB               ex de,hl
 164+ 9FDA
 165+ 9FDA 73               ld (hl),e
 166+ 9FDB 23               inc hl
 167+ 9FDC 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FDD
 169+ 9FDD 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FE0 18 02            jr 2F
 171+ 9FE2
 172+ 9FE2 C9               ret
 173+ 9FE3
 174+ 9FE3 EB           3 ex de,hl
 175+ 9FE4 10 B0        2 djnz 1B
 176+ 9FE6
 177+ 9FE6 C9               ret
 178+ 9FE7
 179+ 9FE7              ; ------------- ------------- ------------
 180+ 9FE7              ;
 181+ 9FE7              ;   1/11/24
 182+ 9FE7
 183+ 9FE7              Comprueba_impacto_con_Amadeus
 184+ 9FE7
 185+ 9FE7              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FE7              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FE7
 188+ 9FE7              ;   Modificamos registros, así que guardamos ...
 189+ 9FE7
 190+ 9FE7 C5               push bc
 191+ 9FE8 E5               push hl
 192+ 9FE9 D5               push de
 193+ 9FEA
 194+ 9FEA 2D               dec l
 195+ 9FEB 2D               dec l
 196+ 9FEC
 197+ 9FEC CD 23 91         call Extrae_address
 198+ 9FEF
 199+ 9FEF 3A B8 89         ld a,(CX_Amadeus)
 200+ 9FF2 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FF3
 202+ 9FF3 7D               ld a,l
 203+ 9FF4 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FF6
 205+ 9FF6 06 03            ld b,3
 206+ 9FF8
 207+ 9FF8 B9           1 cp c
 208+ 9FF9 28 15            jr z,Coincidencia
 209+ 9FFB 0C               inc c
 210+ 9FFC 10 FA            djnz 1B
 211+ 9FFE
 212+ 9FFE 0D               dec c
 213+ 9FFF 0D               dec c
 214+ A000 0D               dec c
 215+ A001
 216+ A001 3C               inc a
 217+ A002 B9               cp c
 218+ A003 28 0B            jr z,Coincidencia
 219+ A005
 220+ A005 3C               inc a
 221+ A006 B9               cp c
 222+ A007 28 07            jr z,Coincidencia
 223+ A009
 224+ A009 D1           2 pop de
 225+ A00A E1               pop hl
 226+ A00B C1               pop bc
 227+ A00C
 228+ A00C              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ A00C
 230+ A00C CB 86            res 0,(hl)
 231+ A00E AF               xor a                       ; Z before RET.
 232+ A00F C9               ret
 233+ A010
 234+ A010              Coincidencia
 235+ A010
 236+ A010              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ A010              ;   Existe posibilidad de impacto.
 238+ A010              ;   Vamos a averiguarlo ...
 239+ A010
 240+ A010 1D               dec e
 241+ A011 1D               dec e
 242+ A012 1D               dec e
 243+ A013
 244+ A013              ; DE en Puntero_objeto del disparo.
 245+ A013              ; HL en Puntero_de_impresión del disparo.
 246+ A013
 247+ A013              ; Comparador:
 248+ A013
 249+ A013 06 03            ld b,3
 250+ A015
 251+ A015 1A           3 ld a,(de)
 252+ A016 4F               ld c,a
 253+ A017 A6               and (hl)
 254+ A018 B9               cp c
 255+ A019 20 06            jr nz,Amadeus_impactado
 256+ A01B
 257+ A01B 2C               inc l
 258+ A01C 1C               inc e
 259+ A01D
 260+ A01D 10 F6            djnz 3B
 261+ A01F
 262+ A01F 18 E8            jr 2B
 263+ A021
 264+ A021              Amadeus_impactado
 265+ A021
 266+ A021              ; Borramos disparo.
 267+ A021
 268+ A021 D1               pop de
 269+ A022 E1               pop hl
 270+ A023
 271+ A023 E5               push hl
 272+ A024 D5               push de
 273+ A025
 274+ A025 CD D9 A0         call Borra_6_bytes
 275+ A028
 276+ A028 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A02B 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A02C
 279+ A02C              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A02C
 281+ A02C 21 BB 89         ld hl,Impacto_Amadeus
 282+ A02F 36 01            ld (hl),1
 283+ A031
 284+ A031              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A031              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A031
 287+ A031 3A BC 89         ld a,(p.imp.amadeus)
 288+ A034 FE DE            cp $de
 289+ A036 20 04            jr nz,1F
 290+ A038
 291+ A038 3D               dec a
 292+ A039 32 BC 89         ld (p.imp.amadeus),a
 293+ A03C
 294+ A03C              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A03C
 296+ A03C 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A03F 21 BE 89         ld hl,Pamm_Amadeus
 298+ A042
 299+ A042 73               ld (hl),e
 300+ A043 23               inc hl
 301+ A044 72               ld (hl),d
 302+ A045
 303+ A045 D1               pop de
 304+ A046 E1               pop hl
 305+ A047 C1               pop bc
 306+ A048
 307+ A048 AF               xor a
 308+ A049 3C               inc a               ; NZ before RET.
 309+ A04A C9               ret
 310+ A04B
 311+ A04B              ; ------------- ------------- ------------
 312+ A04B              ;
 313+ A04B              ;   31/10/24
 314+ A04B
 315+ A04B              Fin_de_disparo_de_entidad
 316+ A04B
 317+ A04B              ; Estamos en zona de Amadeus ??
 318+ A04B
 319+ A04B 7C               ld a,h
 320+ A04C FE 54            cp $54
 321+ A04E 38 0D            jr c,1F
 322+ A050
 323+ A050 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A051
 325+ A051 5D               ld e,l
 326+ A052 54               ld d,h
 327+ A053
 328+ A053 21 E0 57         ld hl,$57e0
 329+ A056 ED 52            sbc hl,de
 330+ A058
 331+ A058 38 6F            jr c,Elimina_disparo_entidad
 332+ A05A
 333+ A05A 6B               ld l,e
 334+ A05B 62               ld h,d
 335+ A05C
 336+ A05C D1               pop de
 337+ A05D
 338+ A05D 7C           1 ld a,h
 339+ A05E FE 50            cp $50
 340+ A060 D8               ret c
 341+ A061
 342+ A061 7D               ld a,l
 343+ A062 FE C0            cp $c0
 344+ A064 D8               ret c
 345+ A065
 346+ A065              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A065              ; Así podremos comprobar si hay colisión más adelante.
 348+ A065
 349+ A065 1C               inc e
 350+ A066 1C               inc e
 351+ A067
 352+ A067 EB               ex de,hl
 353+ A068 CB C6            set 0,(hl)
 354+ A06A EB               ex de,hl
 355+ A06B
 356+ A06B 1D               dec e
 357+ A06C 1D               dec e
 358+ A06D
 359+ A06D C9               ret
 360+ A06E
 361+ A06E              ; ----------------------------------------------------------
 362+ A06E              ;
 363+ A06E              ;   08/10/24
 364+ A06E
 365+ A06E              ;   Estructura de un disparo de entidades.
 366+ A06E
 367+ A06E              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A06E              ; 	defw 0											; Puntero de impresión.
 369+ A06E              ;	defw 0											; Control.
 370+ A06E
 371+ A06E              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A06E              ;   _de la entidad en el momento de disparar.
 373+ A06E
 374+ A06E              ;   El byte alto muestra la siguiente información:
 375+ A06E              ;
 376+ A06E              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A06E              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A06E              ;
 379+ A06E              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A06E              ;
 381+ A06E              ;                        10xx ..... Izquierda.
 382+ A06E              ;                        01xx ..... Derecha.
 383+ A06E              ;                        00xx ..... Recto.
 384+ A06E
 385+ A06E              Rota_disparo_si_procede
 386+ A06E
 387+ A06E              ;   Nos situamos en el byte alto de (Control).
 388+ A06E
 389+ A06E CB 76            bit 6,(hl)
 390+ A070 20 2D            jr nz,Rota_a_derecha
 391+ A072 CB 7E            bit 7,(hl)
 392+ A074 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A075
 394+ A075              Rota_a_izq
 395+ A075
 396+ A075 E5               push hl
 397+ A076
 398+ A076 7D               ld a,l
 399+ A077 D6 05            sub 5
 400+ A079 6F               ld l,a
 401+ A07A
 402+ A07A E5               push hl
 403+ A07B FD E1            pop iy
 404+ A07D
 405+ A07D A7               and a
 406+ A07E
 407+ A07E FD CB 02 16      rl (iy+02)
 408+ A082 FD CB 01 16      rl (iy+01)
 409+ A086 FD CB 00 16      rl (iy+00)
 410+ A08A
 411+ A08A 30 3B            jr nc,Exit
 412+ A08C
 413+ A08C              ; Desplazamiento completo hasta Carry.
 414+ A08C              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A08C
 416+ A08C FD 36 02 03      ld (iy+02),$03
 417+ A090 FD 36 01 00      ld (iy+01),$00
 418+ A094 FD 36 00 00      ld (iy+00),$00
 419+ A098
 420+ A098 21 67 8C         ld hl,Ctrl_5
 421+ A09B CB DE            set 3,(hl)
 422+ A09D
 423+ A09D 18 28            jr Exit
 424+ A09F
 425+ A09F              Rota_a_derecha
 426+ A09F
 427+ A09F E5               push hl
 428+ A0A0
 429+ A0A0 7D               ld a,l
 430+ A0A1 D6 05            sub 5
 431+ A0A3 6F               ld l,a
 432+ A0A4
 433+ A0A4 E5               push hl
 434+ A0A5 FD E1            pop iy
 435+ A0A7
 436+ A0A7 A7               and a
 437+ A0A8
 438+ A0A8 FD CB 00 1E      rr (iy+00)
 439+ A0AC FD CB 01 1E      rr (iy+01)
 440+ A0B0 FD CB 02 1E      rr (iy+02)
 441+ A0B4
 442+ A0B4 30 11            jr nc,Exit
 443+ A0B6
 444+ A0B6              ; Desplazamiento completo hasta Carry.
 445+ A0B6              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A0B6
 447+ A0B6 FD 36 00 01      ld (iy+00),$01
 448+ A0BA FD 36 01 80      ld (iy+01),$80
 449+ A0BE FD 36 02 00      ld (iy+02),$00
 450+ A0C2
 451+ A0C2 21 67 8C         ld hl,Ctrl_5
 452+ A0C5 CB D6            set 2,(hl)
 453+ A0C7
 454+ A0C7 E1           Exit pop hl
 455+ A0C8 C9               ret
 456+ A0C9
 457+ A0C9              ; ------------ ----------- ------------
 458+ A0C9              ;
 459+ A0C9              ;   25/9/24
 460+ A0C9
 461+ A0C9              Elimina_disparo_entidad
 462+ A0C9
 463+ A0C9 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0CC 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0CD
 466+ A0CD E1               pop hl
 467+ A0CE E5               push hl
 468+ A0CF
 469+ A0CF 2C               inc l
 470+ A0D0 2C               inc l
 471+ A0D1
 472+ A0D1 CD D9 A0         call Borra_6_bytes
 473+ A0D4
 474+ A0D4 D1               pop de
 475+ A0D5
 476+ A0D5 21 00 00         ld hl,0
 477+ A0D8
 478+ A0D8 C9               ret
 479+ A0D9
 480+ A0D9              ; ----- ----- ----- ----- -----
 481+ A0D9
 482+ A0D9              Borra_6_bytes
 483+ A0D9
 484+ A0D9 16 06            ld d,6                                                    ; Contador
 485+ A0DB AF               xor a                                                     ; Borrador
 486+ A0DC 77           1 ld (hl),a
 487+ A0DD 2D               dec l
 488+ A0DE 15               dec d
 489+ A0DF 20 FB            jr nz,1B
 490+ A0E1
 491+ A0E1 C9               ret
 492+ A0E2
 493+ A0E2              ; --------------------------------------------------------------------------------------
 494+ A0E2              ;
 495+ A0E2              ;   12/10/24
 496+ A0E2              ;
 497+ A0E2
 498+ A0E2              Genera_datos_de_impresion_disparos_Entidades
 499+ A0E2
 500+ A0E2 3E 07            ld a,7
 501+ A0E4 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0E5
 503+ A0E5              ; ---------------
 504+ A0E5
 505+ A0E5              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0E5
 507+ A0E5 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0E8
 509+ A0E8 CD 23 91     1 call Extrae_address
 510+ A0EB
 511+ A0EB 13               inc de
 512+ A0EC 13               inc de
 513+ A0ED
 514+ A0ED ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0F1
 516+ A0F1 2D               dec l
 517+ A0F2 7E               ld a,(hl)
 518+ A0F3 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0F4 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0F6
 521+ A0F6              ; ----- ----- ----- -----
 522+ A0F6
 523+ A0F6 2D               dec l
 524+ A0F7 CD 23 91         call Extrae_address
 525+ A0FA E5               push hl
 526+ A0FB
 527+ A0FB 1D               dec e
 528+ A0FC
 529+ A0FC EB               ex de,hl
 530+ A0FD
 531+ A0FD 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0FE 2D               dec l
 533+ A0FF 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A100 2D               dec l
 535+ A101 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A102
 537+ A102 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A103
 539+ A103              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A103
 541+ A103 FD 2A 51 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A107 FD 73 00         ld (iy+0),e
 543+ A10A FD 70 01         ld (iy+1),b
 544+ A10D FD 71 02         ld (iy+2),c
 545+ A110
 546+ A110 FD 75 03         ld (iy+3),l
 547+ A113 FD 74 04         ld (iy+4),h
 548+ A116
 549+ A116 CD FF 99         call NextScan
 550+ A119
 551+ A119 FD 75 05         ld (iy+5),l
 552+ A11C FD 74 06         ld (iy+6),h
 553+ A11F
 554+ A11F FD E5            push iy
 555+ A121 E1               pop hl
 556+ A122
 557+ A122 3E 07            ld a,7
 558+ A124 85               add l
 559+ A125 6F               ld l,a
 560+ A126
 561+ A126 22 51 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A129
 563+ A129              ; ----- ----- ----- -----
 564+ A129
 565+ A129              Situa_en_siguiente_caja
 566+ A129
 567+ A129 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A12A 3D               dec a
 569+ A12B C8               ret z
 570+ A12C
 571+ A12C 08               ex af,af
 572+ A12D 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A130 18 B6            jr 1B
 574+ A132
 575+ A132              ; --------------------------------------------------------------------------------------
 576+ A132              ;
 577+ A132              ;   12/10/24
 578+ A132              ;
 579+ A132
 580+ A132              Genera_disparo_de_entidad_maldosa
 581+ A132
 582+ A132              ;   Estructura de un disparo de entidades.
 583+ A132
 584+ A132              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A132              ; 	defw 0											; Puntero de impresión.
 586+ A132              ;	defw 0											; Control.
 587+ A132
 588+ A132              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A132              ;   _de la entidad en el momento de disparar.
 590+ A132
 591+ A132              ;   El byte de control muestra la siguiente información:
 592+ A132
 593+ A132              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A132              ;
 595+ A132              ;                        10xx ..... Izquierda.
 596+ A132              ;                        01xx ..... Derecha.
 597+ A132              ;                        00xx ..... Recto.
 598+ A132
 599+ A132              ;*  Exclusiones.
 600+ A132
 601+ A132              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A132              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A132
 604+ A132 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A135 A7               and a
 606+ A136 C8               ret z
 607+ A137
 608+ A137 3A F0 8B         ld a,(Coordenada_y)
 609+ A13A A7               and a
 610+ A13B C8               ret z
 611+ A13C
 612+ A13C 3D               dec a
 613+ A13D C8               ret z
 614+ A13E
 615+ A13E FE 10            cp 16
 616+ A140 D0               ret nc
 617+ A141
 618+ A141              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A141              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A141              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A141
 622+ A141 21 57 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A144 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A145
 625+ A145              ;   Decrementa el numero de disparos de entidades.
 626+ A145
 627+ A145 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A148 35               dec (hl)
 629+ A149
 630+ A149 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A14C
 632+ A14C CD 23 91     1 call Extrae_address
 633+ A14F
 634+ A14F 13               inc de
 635+ A150 13               inc de
 636+ A151
 637+ A151 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A155
 639+ A155              ;   Comprobamos si la caja está vacía.
 640+ A155
 641+ A155 2D               dec l
 642+ A156 7E               ld a,(hl)
 643+ A157 A7               and a
 644+ A158 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A15A 2C               inc l
 646+ A15B
 647+ A15B              ;   Caja vacía, vamos a generar un disparo.
 648+ A15B              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A15B
 650+ A15B CD 7C A1         call Genera_byte_inclinacion
 651+ A15E
 652+ A15E 7E               ld a,(hl)
 653+ A15F 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A160
 655+ A160 2D               dec l
 656+ A161
 657+ A161 CD 98 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A164
 659+ A164 70               ld (hl),b
 660+ A165 2D               dec l
 661+ A166 71               ld (hl),c
 662+ A167
 663+ A167 2D               dec l
 664+ A168
 665+ A168              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A168
 667+ A168 FD 7E 02         ld a,(iy+02)
 668+ A16B 77               ld (hl),a
 669+ A16C 2D               dec l
 670+ A16D
 671+ A16D FD 7E 01         ld a,(iy+01)
 672+ A170 77               ld (hl),a
 673+ A171 2D               dec l
 674+ A172
 675+ A172 FD 7E 00         ld a,(iy+00)
 676+ A175 77               ld (hl),a
 677+ A176
 678+ A176 C9               ret
 679+ A177
 680+ A177              ;   --- --- ---
 681+ A177
 682+ A177              Situa_en_siguiente_disparo
 683+ A177
 684+ A177 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A17A 18 D0            jr 1B
 686+ A17C
 687+ A17C              ; --------------------------------------------------------------------------------------
 688+ A17C              ;
 689+ A17C              ;   09/10/24
 690+ A17C              ;
 691+ A17C
 692+ A17C              Genera_byte_inclinacion
 693+ A17C
 694+ A17C              ; Determina tendencia del disparo.
 695+ A17C
 696+ A17C 3A B8 89         ld a,(CX_Amadeus)
 697+ A17F 47               ld b,a
 698+ A180 3A EF 8B         ld a,(Coordenada_X)
 699+ A183 90               sub b
 700+ A184 38 07            jr c,Disparo_a_derecha
 701+ A186
 702+ A186 FE 06        Disparo_a_izquierda cp 6
 703+ A188
 704+ A188 D8               ret c
 705+ A189 C8               ret z
 706+ A18A
 707+ A18A CB FE            set 7,(hl)
 708+ A18C C9               ret
 709+ A18D
 710+ A18D 47           Disparo_a_derecha ld b,a
 711+ A18E 3E FF            ld a,$ff
 712+ A190 90               sub b
 713+ A191
 714+ A191 FE 05            cp 5
 715+ A193
 716+ A193 D8               ret c
 717+ A194 C8               ret z
 718+ A195
 719+ A195 CB F6            set 6,(hl)
 720+ A197 C9               ret
 721+ A198
 722+ A198              ; --------------------------------------------------------------------------------------
 723+ A198              ;
 724+ A198              ;   09/10/24
 725+ A198              ;
 726+ A198
 727+ A198              Modifica_puntero_de_impresion
 728+ A198
 729+ A198              ;   Puntero de impresión del disparo en BC.
 730+ A198
 731+ A198 E5               push hl
 732+ A199
 733+ A199 2A 6A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A19C CD FF 99         call NextScan
 735+ A19F
 736+ A19F 4D               ld c,l
 737+ A1A0 44               ld b,h
 738+ A1A1
 739+ A1A1 E1               pop hl
 740+ A1A2
 741+ A1A2 08               ex af,af
 742+ A1A3 CB 77            bit 6,a
 743+ A1A5 28 06            jr z,1F
 744+ A1A7
 745+ A1A7 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A1AB 0C               inc c
 747+ A1AC C9               ret
 748+ A1AD
 749+ A1AD CB 7F        1 bit 7,a
 750+ A1AF 28 F6            jr z,2B
 751+ A1B1
 752+ A1B1 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A1B5 0D               dec c
 754+ A1B6
 755+ A1B6 C9               ret
 756+ A1B7
 757+ A1B7              ; --------------------------------------------------------------------------------------
 758+ A1B7              ;
 759+ A1B7              ;   31/08/24
 760+ A1B7              ;
 761+ A1B7
 762+ A1B7              Compara_con_coordenadas_de_disparo
 763+ A1B7
 764+ A1B7 3A F0 8B         ld a,(Coordenada_y)
 765+ A1BA 47               ld b,a
 766+ A1BB 3A 6F 8C         ld a,(Coordenadas_disparo_certero)
 767+ A1BE 90               sub b
 768+ A1BF
 769+ A1BF              ; A = "0" ok
 770+ A1BF              ; A = "1" ok
 771+ A1BF
 772+ A1BF 28 08            jr z,Comprueba_coordenada_X
 773+ A1C1 3D               dec a
 774+ A1C2 28 05            jr z,Comprueba_coordenada_X
 775+ A1C4
 776+ A1C4              ; A = "$ff" ok
 777+ A1C4
 778+ A1C4 FE FE            cp $fe
 779+ A1C6 28 01            jr z,Comprueba_coordenada_X
 780+ A1C8
 781+ A1C8 C9               ret
 782+ A1C9
 783+ A1C9              Comprueba_coordenada_X
 784+ A1C9
 785+ A1C9 3A EF 8B         ld a,(Coordenada_X)
 786+ A1CC 47               ld b,a
 787+ A1CD 21 70 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1D0 7E               ld a,(hl)
 789+ A1D1 90               sub b
 790+ A1D2
 791+ A1D2              ; A = "0" ok
 792+ A1D2              ; A = "1" ok
 793+ A1D2
 794+ A1D2 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1D4 3D               dec a
 796+ A1D5 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1D7
 798+ A1D7              ; A = "2" ok
 799+ A1D7
 800+ A1D7 3D               dec a
 801+ A1D8 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1DA
 803+ A1DA              ; A = "$ff"
 804+ A1DA
 805+ A1DA FE FD            cp $fd
 806+ A1DC C0               ret nz
 807+ A1DD
 808+ A1DD              Activa_Impacto_en_entidad
 809+ A1DD
 810+ A1DD              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1DD
 812+ A1DD 3E 02            ld a,2
 813+ A1DF 32 F2 8B         ld (Impacto),a
 814+ A1E2
 815+ A1E2              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1E2
 817+ A1E2 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1E5 21 F5 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1E8
 820+ A1E8 73               ld (hl),e
 821+ A1E9 23               inc hl
 822+ A1EA 72               ld (hl),d
 823+ A1EB
 824+ A1EB              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1EB
 826+ A1EB 21 6C 8C         ld hl,Impacto2
 827+ A1EE CB 9E            res 3,(hl)
 828+ A1F0
 829+ A1F0 C9               ret
 830+ A1F1
 831+ A1F1              ; --------------------------------------------------------------------------------------
 832+ A1F1              ;
 833+ A1F1              ;   13/10/24
 834+ A1F1              ;
 835+ A1F1
 836+ A1F1              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1F1
 838+ A1F1              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1F1
 840+ A1F1 2A 49 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1F4 06 06            ld b,6
 842+ A1F6 AF               xor a
 843+ A1F7 77           1 ld (hl),a
 844+ A1F8 2C               inc l
 845+ A1F9 10 FC            djnz 1B
 846+ A1FB
 847+ A1FB C9               ret
 848+ A1FC
 849+ A1FC              ; --------------------------------------------------------------------------------------
 850+ A1FC              ;
 851+ A1FC              ;   29/09/24
 852+ A1FC              ;
 853+ A1FC
 854+ A1FC              Calcula_bytes_pintado_disparos
 855+ A1FC
 856+ A1FC 2A 4D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1FF 45               ld b,l
 858+ A200 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A203 7D               ld a,l
 860+ A204
 861+ A204 90               sub b
 862+ A205 32 53 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A208
 864+ A208 C9               ret
 865+ A209
 866+ A209              ; --------------------------------------------------------------------------------------
 867+ A209              ;
 868+ A209              ;   26/10/24
 869+ A209              ;
 870+ A209              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A209              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A209              ;   _disparos que el álbum del FRAME actual).
 873+ A209
 874+ A209              Limpia_album_de_pintado_disparos_entidades
 875+ A209
 876+ A209 21 54 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A20C 7E               ld a,(hl)
 878+ A20D 2D               dec l
 879+ A20E 46               ld b,(hl)
 880+ A20F 90               sub b
 881+ A210
 882+ A210 D8               ret c
 883+ A211 C8               ret z
 884+ A212
 885+ A212 F5               push af
 886+ A213 80               add b
 887+ A214 77               ld (hl),a
 888+ A215 F1               pop af
 889+ A216
 890+ A216              ; Clean.
 891+ A216
 892+ A216 47           2 ld b,a
 893+ A217 AF               xor a
 894+ A218 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A21B 77           1 ld (hl),a
 896+ A21C 23               inc hl
 897+ A21D 10 FC            djnz 1B
 898+ A21F
 899+ A21F C9               ret
 900+ A220
 901+ A220              ; --------------------------------------------------------------------------------------
 902+ A220              ;
 903+ A220              ;   29/09/24
 904+ A220              ;
 905+ A220
 906+ A220              Motor_Disparos_Amadeus
 907+ A220
 908+ A220 21 26 89         ld hl,Disparo_Amad+1
 909+ A223
 910+ A223 34               inc (hl)
 911+ A224 35               dec (hl)
 912+ A225
 913+ A225 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A226
 915+ A226              ;   Esta caja contiene un disparo.
 916+ A226
 917+ A226 CD 2D A2         call Consulta_Impacto
 918+ A229 CC 46 A2         call z,Mueve_disparo_Amadeus
 919+ A22C
 920+ A22C C9               ret
 921+ A22D
 922+ A22D              ; ----------------------
 923+ A22D              ;
 924+ A22D              ;
 925+ A22D              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A22D              ;
 927+ A22D              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A22D
 929+ A22D
 930+ A22D              Consulta_Impacto
 931+ A22D
 932+ A22D              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A22D              ;   _sea lo más coherente posible.
 934+ A22D
 935+ A22D E5               push hl
 936+ A22E 2B               dec hl
 937+ A22F CD 22 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A232 E1               pop hl
 939+ A233 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A234
 941+ A234 C8               ret z
 942+ A235
 943+ A235 3A 6C 8C         ld a,(Impacto2)
 944+ A238 CB DF            set 3,a
 945+ A23A 32 6C 8C         ld (Impacto2),a
 946+ A23D
 947+ A23D E5               push hl
 948+ A23E CD 0F A3         call Genera_coordenadas_de_disparo_Amadeus
 949+ A241 E1               pop hl
 950+ A242 CD 5F A2         call Elimina_disparo_Amadeus
 951+ A245
 952+ A245 C9               ret
 953+ A246
 954+ A246              ; ----------------------
 955+ A246              ;
 956+ A246              ;
 957+ A246              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A246
 959+ A246              Mueve_disparo_Amadeus
 960+ A246
 961+ A246 CD 23 91         call Extrae_address
 962+ A249
 963+ A249 CD 0E 9A         call PreviousScan
 964+ A24C CD 0E 9A         call PreviousScan
 965+ A24F CD 0E 9A         call PreviousScan
 966+ A252 CD 0E 9A         call PreviousScan
 967+ A255
 968+ A255              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A255
 970+ A255 7C               ld a,h
 971+ A256 D6 40            sub $40
 972+ A258 EB               ex de,hl
 973+ A259 38 04            jr c,Elimina_disparo_Amadeus
 974+ A25B
 975+ A25B               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A25B
 977+ A25B 73               ld (hl),e
 978+ A25C 23               inc hl
 979+ A25D 72               ld (hl),d
 980+ A25E
 981+ A25E C9               ret
 982+ A25F
 983+ A25F              ; ----------------------
 984+ A25F              ;
 985+ A25F              ;   29/9/24
 986+ A25F
 987+ A25F              Elimina_disparo_Amadeus
 988+ A25F
 989+ A25F              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A25F              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A25F
 992+ A25F              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A25F              ;   	defw 0											; Puntero de impresión.
 994+ A25F
 995+ A25F 2B               dec hl
 996+ A260 2B               dec hl
 997+ A261
 998+ A261 AF               xor a
 999+ A262 77               ld (hl),a
1000+ A263 23               inc hl
1001+ A264 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A265
1003+ A265 23               inc hl
1004+ A266 77               ld (hl),a
1005+ A267 23               inc hl
1006+ A268 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A269
1008+ A269 3E 01            ld a,1
1009+ A26B 32 56 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A26E
1011+ A26E CD F1 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A271
1013+ A271 AF               xor a
1014+ A272 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A273
1016+ A273 C9               ret
1017+ A274
1018+ A274              ; --------------------------------------------------------------------------------------
1019+ A274              ;
1020+ A274              ;   13/10/24
1021+ A274              ;
1022+ A274
1023+ A274              Pinta_disparos_Amadeus
1024+ A274
1025+ A274 06 02            ld b,2
1026+ A276 ED 73 3D 8C      ld (Stack),sp
1027+ A27A ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A27E D1           3 pop de
1029+ A27F 14               inc d
1030+ A280 15               dec d
1031+ A281 28 1C            jr z,1F
1032+ A283 E1               pop hl
1033+ A284
1034+ A284              Imprime_scanlines_en_pantalla
1035+ A284
1036+ A284              ; 1er scanline
1037+ A284
1038+ A284 1A               ld a,(de)
1039+ A285 AE               xor (hl)
1040+ A286 77               ld (hl),a
1041+ A287
1042+ A287 1C               inc e
1043+ A288 2C               inc l
1044+ A289
1045+ A289 1A               ld a,(de)
1046+ A28A AE               xor (hl)
1047+ A28B 77               ld (hl),a
1048+ A28C
1049+ A28C 1D               dec e
1050+ A28D E1               pop hl
1051+ A28E
1052+ A28E              ; 2º scanline
1053+ A28E
1054+ A28E 1A               ld a,(de)
1055+ A28F AE               xor (hl)
1056+ A290 77               ld (hl),a
1057+ A291
1058+ A291 1C               inc e
1059+ A292 2C               inc l
1060+ A293
1061+ A293 1A               ld a,(de)
1062+ A294 AE               xor (hl)
1063+ A295 77               ld (hl),a
1064+ A296
1065+ A296 1D               dec e
1066+ A297
1067+ A297 18 06            jr 1F
1068+ A299
1069+ A299 ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A29D 18 DF            jr 3B
1071+ A29F 10 F8        1 djnz 2B
1072+ A2A1 ED 7B 3D 8C      ld sp,(Stack)
1073+ A2A5 C9               ret
1074+ A2A6
1075+ A2A6              ; --------------------------------------------------------------------------------------
1076+ A2A6              ;
1077+ A2A6              ;   13/10/24
1078+ A2A6              ;
1079+ A2A6              ;   Modifica: HL,BC y DE.
1080+ A2A6
1081+ A2A6
1082+ A2A6              Genera_datos_de_impresion_disparos_Amadeus
1083+ A2A6
1084+ A2A6 ED 73 3D 8C      ld (Stack),sp
1085+ A2AA 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A2AD D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A2AE
1088+ A2AE 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A2AF 15               dec d
1090+ A2B0
1091+ A2B0 28 0E            jr z,Salida
1092+ A2B2
1093+ A2B2              Genera_scanlines_de_disparo_Amadeus
1094+ A2B2
1095+ A2B2 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A2B3              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A2B3 ED 7B 49 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A2B7
1099+ A2B7 C1               pop bc
1100+ A2B8 C1               pop bc
1101+ A2B9 C1               pop bc
1102+ A2BA
1103+ A2BA E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A2BB CD 0E 9A         call PreviousScan
1105+ A2BE E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A2BF D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A2C0
1108+ A2C0              Salida
1109+ A2C0
1110+ A2C0 ED 7B 3D 8C      ld sp,(Stack)
1111+ A2C4
1112+ A2C4 C9               ret
1113+ A2C5
1114+ A2C5              ; --------------------------------------------------------------------------------------
1115+ A2C5              ;
1116+ A2C5              ;   12/09/24
1117+ A2C5              ;
1118+ A2C5
1119+ A2C5              Genera_disparo_Amadeus
1120+ A2C5
1121+ A2C5              ;*  Exclusiones.
1122+ A2C5
1123+ A2C5 3A 56 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A2C8 A7               and a
1125+ A2C9 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A2CA
1127+ A2CA 3D               dec a
1128+ A2CB 32 56 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2CE
1130+ A2CE              Define_puntero_objeto_disparo
1131+ A2CE
1132+ A2CE              ;   Inicializamos contador.
1133+ A2CE
1134+ A2CE 06 00            ld b,0
1135+ A2D0
1136+ A2D0 2A BC 89         ld hl,(p.imp.amadeus)
1137+ A2D3 2C               inc l
1138+ A2D4
1139+ A2D4 3E 80            ld a,$80
1140+ A2D6 BE               cp (hl)
1141+ A2D7 28 0D            jr z,1F
1142+ A2D9
1143+ A2D9 04               inc b
1144+ A2DA
1145+ A2DA 3E 60            ld a,$60
1146+ A2DC BE               cp (hl)
1147+ A2DD 28 07            jr z,1F
1148+ A2DF
1149+ A2DF
1150+ A2DF 04               inc b
1151+ A2E0
1152+ A2E0 3E 18            ld a,$18
1153+ A2E2 BE               cp (hl)
1154+ A2E3 28 01            jr z,1F
1155+ A2E5
1156+ A2E5 04               inc b
1157+ A2E6
1158+ A2E6              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2E6
1160+ A2E6              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2E6
1162+ A2E6 CD 0E 9A     1 call PreviousScan
1163+ A2E9
1164+ A2E9 78               ld a,b
1165+ A2EA CB 3F            srl a
1166+ A2EC 28 03            jr z,4F
1167+ A2EE
1168+ A2EE              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2EE E5               push hl
1170+ A2EF 18 02            jr 5F
1171+ A2F1 2D           4 dec l
1172+ A2F2 E5               push hl
1173+ A2F3              ; ---
1174+ A2F3
1175+ A2F3              ;   Calcula el Puntero_objeto del disparo.
1176+ A2F3
1177+ A2F3 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2F6 04               inc b
1179+ A2F7 05               dec b
1180+ A2F8 28 04            jr z,2F
1181+ A2FA
1182+ A2FA              ;   Nos desplazamos por el índice de disparos.
1183+ A2FA
1184+ A2FA 2C           3 inc l
1185+ A2FB 2C               inc l
1186+ A2FC 10 FC            djnz 3B
1187+ A2FE
1188+ A2FE              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2FE CD 23 91     2 call Extrae_address
1190+ A301 E5               push hl
1191+ A302              ; ---
1192+ A302
1193+ A302              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A302              ; HL en el 1er .db de la caja.
1195+ A302
1196+ A302 21 25 89         ld hl,Disparo_Amad
1197+ A305
1198+ A305 06 02            ld b,2
1199+ A307
1200+ A307 D1           6 pop de
1201+ A308 73               ld (hl),e
1202+ A309 23               inc hl
1203+ A30A 72               ld (hl),d
1204+ A30B 23               inc hl
1205+ A30C
1206+ A30C 10 F9            djnz 6B
1207+ A30E
1208+ A30E C9               ret
1209+ A30F
1210+ A30F              Genera_coordenadas_de_disparo_Amadeus
1211+ A30F
1212+ A30F              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A30F              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A30F              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A30F
1216+ A30F CD 23 91         call Extrae_address
1217+ A312 CD 0A 95         call Genera_coordenadas
1218+ A315
1219+ A315 3D               dec a
1220+ A316
1221+ A316 21 6F 8C         ld hl,Coordenadas_disparo_certero
1222+ A319 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A31A 23               inc hl
1224+ A31B 3A EF 8B         ld a,(Coordenada_X)
1225+ A31E 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A31F
1227+ A31F AF               xor a
1228+ A320 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A321
1230+ A321 C9               ret
1231+ A322
1232+ A322              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A322              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A322              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A322
1236+ A322              ; ----------------------------------------------
1237+ A322              ;
1238+ A322              ;   27/08/24
1239+ A322              ;
1240+ A322              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A322              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A322
1243+ A322              Detecta_impacto_en_disparo_de_Amadeus
1244+ A322
1245+ A322              Extraccion_de_datos
1246+ A322
1247+ A322 13               inc de
1248+ A323 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A324
1250+ A324 5E               ld e,(hl)
1251+ A325 23               inc hl
1252+ A326 56               ld d,(hl)
1253+ A327
1254+ A327 23               inc hl
1255+ A328
1256+ A328 4E               ld c,(hl)
1257+ A329 23               inc hl
1258+ A32A 46               ld b,(hl)
1259+ A32B
1260+ A32B C5               push bc
1261+ A32C E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A32D
1263+ A32D              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A32D
1265+ A32D CD 0E 9A         call PreviousScan
1266+ A330 CD 0E 9A         call PreviousScan
1267+ A333
1268+ A333              Detecta_impacto_
1269+ A333
1270+ A333 1A               ld a,(de)
1271+ A334 A6               and (hl)
1272+ A335 C0               ret nz
1273+ A336
1274+ A336 13               inc de
1275+ A337 23               inc hl
1276+ A338
1277+ A338 1A               ld a,(de)
1278+ A339 A6               and (hl)
1279+ A33A C9               ret
1280+ A33B
1281+ A33B              ; -------------------------------------------------------------------------------------------------------------
1282+ A33B              ;
1283+ A33B              ;   25/11//24
1284+ A33B              ;
1285+ A33B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A33B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A33B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A33B              ;
1289+ A33B              ;   MODIFICA: HL,DE,BC y A.
1290+ A33B              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A33B              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A33B
1293+ A33B              Colision_Entidad_Amadeus
1294+ A33B
1295+ A33B              ; Posible contacto de entidad con Amadeus. ?????
1296+ A33B
1297+ A33B              ; Exclusiones:
1298+ A33B
1299+ A33B 3A 8F 8C         ld a,(Shield)
1300+ A33E A7               and a
1301+ A33F C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A340
1303+ A340 21 65 8C         ld hl,Ctrl_3
1304+ A343 CB 76            bit 6,(hl)
1305+ A345 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A346
1307+ A346 21 6C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A349 CB 56            bit 2,(hl)
1309+ A34B C0               ret nz
1310+ A34C
1311+ A34C DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1312+ A34F FE 14        	cp $14
1313+ A351 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A352
1315+ A352 3A BB 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A355 A7               and a
1317+ A356 C0               ret nz
1318+ A357
1319+ A357              Genera_coordenadas_X
1320+ A357
1321+ A357              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A357              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A357
1324+ A357              ;   Limpiamos almacenes.
1325+ A357
1326+ A357              ;    call Limpia_Coordenadas_X
1327+ A357
1328+ A357              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A357
1330+ A357 21 71 8C         ld hl,Coordenadas_X_Entidad
1331+ A35A DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1332+ A35D CD 83 A3         call Guarda_coordenadas_X
1333+ A360
1334+ A360              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A360
1336+ A360 3A B8 89         ld a,(CX_Amadeus)
1337+ A363 CD 83 A3         call Guarda_coordenadas_X
1338+ A366
1339+ A366 DD E5            push ix
1340+ A368 CD 97 A3         call Compara_coordenadas_X
1341+ A36B DD E1            pop ix
1342+ A36D
1343+ A36D C0               ret nz
1344+ A36E
1345+ A36E 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1346+ A370 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1347+ A373
1348+ A373 DD 7D            ld a,ixl
1349+ A375 C6 04            add 4
1350+ A377 DD 6F            ld ixl,a
1351+ A379
1352+ A379 DD 22 6D 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1353+ A37D
1354+ A37D 21 6C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1355+ A380 CB D6            set 2,(hl)
1356+ A382
1357+ A382 C9               ret
1358+ A383
1359+ A383               ; ----- ----- ----- ----- -----
1360+ A383
1361+ A383 77           Guarda_coordenadas_X ld (hl),a
1362+ A384 3C               inc a
1363+ A385 2C               inc l
1364+ A386 77               ld (hl),a
1365+ A387 3C               inc a
1366+ A388 2C               inc l
1367+ A389 77               ld (hl),a
1368+ A38A 2C               inc l
1369+ A38B C9               ret
1370+ A38C
1371+ A38C AF           Limpia_Coordenadas_X xor a
1372+ A38D 06 06            ld b,6
1373+ A38F 21 74 8C         ld hl,Coordenadas_X_Amadeus
1374+ A392 77           1 ld (hl),a
1375+ A393 23               inc hl
1376+ A394 10 FC            djnz 1B
1377+ A396 C9               ret
1378+ A397
1379+ A397              ; ----- ----- ----- ----- -----
1380+ A397
1381+ A397              Compara_coordenadas_X
1382+ A397
1383+ A397 DD 21 71 8C      ld ix,Coordenadas_X_Entidad
1384+ A39B DD 7E 00         ld a,(ix+0)
1385+ A39E CD AC A3         call Comparando
1386+ A3A1 C8               ret z
1387+ A3A2
1388+ A3A2 3C               inc a
1389+ A3A3 CD BB A3         call Comparando_1
1390+ A3A6 C8               ret z
1391+ A3A7
1392+ A3A7 3C               inc a
1393+ A3A8 CD BB A3         call Comparando_1
1394+ A3AB C9               ret
1395+ A3AC
1396+ A3AC              ; ----- ----- ----- ----- -----
1397+ A3AC              ;
1398+ A3AC              ;   4/12/23
1399+ A3AC              ;
1400+ A3AC              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1401+ A3AC
1402+ A3AC              Comparando
1403+ A3AC
1404+ A3AC DD 2C            inc ixl
1405+ A3AE DD 2C            inc ixl
1406+ A3B0 DD 2C            inc ixl
1407+ A3B2
1408+ A3B2 DD 46 00         ld b,(ix+0)
1409+ A3B5 DD 4E 01         ld c,(ix+1)
1410+ A3B8 DD 56 02         ld d,(ix+2)
1411+ A3BB
1412+ A3BB B8           Comparando_1 cp b
1413+ A3BC C8               ret z
1414+ A3BD B9               cp c
1415+ A3BE C8               ret z
1416+ A3BF BA               cp d
1417+ A3C0 C9               ret
1418+ A3C1
1419+ A3C1              ; -----------------------------------------------------------------------
1420+ A3C1              ;
1421+ A3C1              ;   04/7/24
1422+ A3C1              ;
1423+ A3C1
1424+ A3C1              Detecta_colision_nave_entidad
1425+ A3C1
1426+ A3C1              ; Exclusiones:
1427+ A3C1
1428+ A3C1              ; Salimos de la rutina si no hay advertencia de posible colisión.
1429+ A3C1
1430+ A3C1 21 6C 8C     	ld hl,Impacto2
1431+ A3C4 CB 56        	bit 2,(hl)
1432+ A3C6 C8           	ret z
1433+ A3C7
1434+ A3C7              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1435+ A3C7
1436+ A3C7 2A BE 89         ld hl,(Pamm_Amadeus)
1437+ A3CA CD 23 91         call Extrae_address
1438+ A3CD 54               ld d,h
1439+ A3CE 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1440+ A3CF
1441+ A3CF 2A BC 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1442+ A3D2 06 10            ld b,16                                        ; Contador de scanlines en B.
1443+ A3D4 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1444+ A3D7
1445+ A3D7 C5           1 push bc
1446+ A3D8 06 03            ld b,3
1447+ A3DA E5               push hl
1448+ A3DB
1449+ A3DB              ; .db
1450+ A3DB
1451+ A3DB 1A           3 ld a,(de)
1452+ A3DC A7               and a
1453+ A3DD 20 03            jr nz,4F
1454+ A3DF
1455+ A3DF 2C               inc l
1456+ A3E0 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1457+ A3E2
1458+ A3E2 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1459+ A3E4 28 04            jr z,2F
1460+ A3E6
1461+ A3E6              ; Impacto.
1462+ A3E6 FD 2D            dec iyl
1463+ A3E8 28 22            jr z,5F
1464+ A3EA
1465+ A3EA 1C           2 inc e
1466+ A3EB 10 EE            djnz 3B
1467+ A3ED
1468+ A3ED E1               pop hl
1469+ A3EE
1470+ A3EE              ; Hay salto de línea en el puntero de impresión ???
1471+ A3EE
1472+ A3EE 7C               ld a,h
1473+ A3EF D6 57            sub $57
1474+ A3F1 20 0A            jr nz,6F
1475+ A3F3
1476+ A3F3              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1477+ A3F3
1478+ A3F3 2A BC 89         ld hl,(p.imp.amadeus)
1479+ A3F6 3E 20            ld a,$20
1480+ A3F8 A7               and a
1481+ A3F9 85               add l
1482+ A3FA 6F               ld l,a
1483+ A3FB 18 01            jr 7F
1484+ A3FD
1485+ A3FD 24           6 inc h
1486+ A3FE
1487+ A3FE C1           7 pop bc
1488+ A3FF 10 D6            djnz 1B
1489+ A401
1490+ A401              ;   Fin de la comparativa.
1491+ A401
1492+ A401              ;   NO HAY COLISIÓN !!!!!.
1493+ A401              ;
1494+ A401              ;   .db (Impacto) de Amadeus a "0".
1495+ A401              ;   RES el bit2 de (Impacto2).
1496+ A401              ;
1497+ A401              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1498+ A401              ;   Lo colocamos a "0".
1499+ A401
1500+ A401 21 6C 8C         ld hl,Impacto2
1501+ A404 CB 96            res 2,(hl)
1502+ A406 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)
1503+ A409 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1504+ A40B C9               ret
1505+ A40C
1506+ A40C              ;   COLISIÓN !!!!!.
1507+ A40C              ;
1508+ A40C              ;   .db (Impacto) de Amadeus a "1".
1509+ A40C              ;   SET el bit3 de (Impacto2).
1510+ A40C              ;
1511+ A40C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1512+ A40C
1513+ A40C E1           5 pop hl
1514+ A40D C1               pop bc
1515+ A40E
1516+ A40E 21 BB 89         ld hl,Impacto_Amadeus
1517+ A411 36 01            ld (hl),1
1518+ A413 21 6C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1519+ A416 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1520+ A418
1521+ A418 11 C0 87         ld de,Indice_Explosion_entidades
1522+ A41B 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1523+ A41E
1524+ A41E 23               inc hl
1525+ A41F 23               inc hl
1526+ A420 23               inc hl
1527+ A421
1528+ A421 73               ld (hl),e
1529+ A422 23               inc hl
1530+ A423 72               ld (hl),d
1531+ A424
1532+ A424              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1533+ A424
1534+ A424 11 60 88         ld de,Indice_Explosion_Amadeus
1535+ A427 21 BE 89         ld hl,Pamm_Amadeus
1536+ A42A
1537+ A42A 73               ld (hl),e
1538+ A42B 23               inc hl
1539+ A42C 72               ld (hl),d
1540+ A42D
1541+ A42D C9               ret
1542+ A42E
1543+ A42E
1544+ A42E
# file closed: Disparo.asm
2141  A42E
2142  A42E              	SAVESNA "Pruebas.sna", START
2143  A42E
2144  A42E
2145  A42E
2146  A42E
# file closed: Banco_de_pruebas.asm
