# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B6 8A     	call Frame
  15  A104
  16  A104 3A E1 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  23  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8574
  97+ 8574 CA 85        	defw Caja_1
  98+ 8576 08 86        	defw Caja_2
  99+ 8578 46 86        	defw Caja_3
 100+ 857A 84 86        	defw Caja_4
 101+ 857C C2 86        	defw Caja_5
 102+ 857E 00 87        	defw Caja_6
 103+ 8580 3E 87        	defw Caja_7
 104+ 8582 7C 87        	defw Caja_8
 105+ 8584 BA 87        	defw Caja_9
 106+ 8586 F8 87        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85BD
 145+ 85BD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85C1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85C4
 148+ 85C4 00           	db 0 											; (Columnas).
 149+ 85C5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85C7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85CA
 152+ 85CA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85CA
 154+ 85CA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85CC 00 00        	defw 0											; (Posicion_actual).
 156+ 85CE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85D0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85D3
 159+ 85D3 00           	db %00000000 									; (Attr).
 160+ 85D4
 161+ 85D4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85D6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85D8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85DA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85DC
 166+ 85DC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85DE 00           	db 0											; (Cuad_objeto).
 168+ 85DF
 169+ 85DF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85E3
 171+ 85E3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85E4
 173+ 85E4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85E6 00 00        	defw 0											;	" " " " " " "
 175+ 85E8 00 00        	defw 0											;	" " " " " " "
 176+ 85EA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85EE
 178+ 85EE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85F0 00 00        	defw 0											;	" " " " " " "
 180+ 85F2 00 00        	defw 0											;	" " " " " " "
 181+ 85F4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85F8
 183+ 85F8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 184+ 85FA 00           	db 0											; (Autoriza_movimiento).
 185+ 85FB
 186+ 85FB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 187+ 85FF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 188+ 8602
 189+ 8602 00           	db 0 											; (Columnas).
 190+ 8603 00 00        	defw 0											; (Limite_horizontal).
 191+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 192+ 8608
 193+ 8608              ; ---------- ---------- ---------- ---------- ----------
 194+ 8608
 195+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 196+ 860A 00 00        	defw 0											; (Posicion_actual).
 197+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 198+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 199+ 8611
 200+ 8611 00           	db %00000000 									; (Attr).
 201+ 8612
 202+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 203+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 204+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 205+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 206+ 861A
 207+ 861A 00 00        	defw 0											; (Posicion_inicio).
 208+ 861C 00           	db 0											; (Cuad_objeto).
 209+ 861D
 210+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 211+ 8621
 212+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 213+ 8622
 214+ 8622 00 00        	db 0,0										    ; Variables_de_borrado
 215+ 8624 00 00        	defw 0											;	" " " " " " "
 216+ 8626 00 00        	defw 0											;	" " " " " " "
 217+ 8628 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 862C
 219+ 862C 00 00        	db 0,0											; Variables_de_pintado
 220+ 862E 00 00        	defw 0											;	" " " " " " "
 221+ 8630 00 00        	defw 0											;	" " " " " " "
 222+ 8632 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8636
 224+ 8636 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 225+ 8638 00           	db 0											; (Autoriza_movimiento).
 226+ 8639
 227+ 8639 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 228+ 863D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 229+ 8640
 230+ 8640 00           	db 0 											; (Columnas).
 231+ 8641 00 00        	defw 0											; (Limite_horizontal).
 232+ 8643 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 233+ 8646
 234+ 8646              ; ---------- ---------- ---------- ---------- ----------
 235+ 8646
 236+ 8646 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 237+ 8648 00 00        	defw 0											; (Posicion_actual).
 238+ 864A 00 00        	defw 0 											; (Puntero_objeto).
 239+ 864C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 240+ 864F
 241+ 864F 00           	db %00000000 									; (Attr).
 242+ 8650
 243+ 8650 00 00        	defw 0											; (Indice_Sprite_der).
 244+ 8652 00 00        	defw 0											; (Indice_Sprite_izq).
 245+ 8654 00 00        	defw 0											; (Puntero_DESPLZ_der).
 246+ 8656 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 247+ 8658
 248+ 8658 00 00        	defw 0											; (Posicion_inicio).
 249+ 865A 00           	db 0											; (Cuad_objeto).
 250+ 865B
 251+ 865B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 252+ 865F
 253+ 865F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 254+ 8660
 255+ 8660 00 00        	db 0,0										    ; Variables_de_borrado
 256+ 8662 00 00        	defw 0											;	" " " " " " "
 257+ 8664 00 00        	defw 0											;	" " " " " " "
 258+ 8666 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 866A
 260+ 866A 00 00        	db 0,0											; Variables_de_pintado
 261+ 866C 00 00        	defw 0											;	" " " " " " "
 262+ 866E 00 00        	defw 0											;	" " " " " " "
 263+ 8670 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 264+ 8674
 265+ 8674 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 266+ 8676 00           	db 0											; (Autoriza_movimiento).
 267+ 8677
 268+ 8677 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 269+ 867B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 270+ 867E
 271+ 867E 00           	db 0 											; (Columnas).
 272+ 867F 00 00        	defw 0											; (Limite_horizontal).
 273+ 8681 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 274+ 8684
 275+ 8684              ; ---------- ---------- ---------- ---------- ----------
 276+ 8684
 277+ 8684 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 278+ 8686 00 00        	defw 0											; (Posicion_actual).
 279+ 8688 00 00        	defw 0 											; (Puntero_objeto).
 280+ 868A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 281+ 868D
 282+ 868D 00           	db %00000000 									; (Attr).
 283+ 868E
 284+ 868E 00 00        	defw 0											; (Indice_Sprite_der).
 285+ 8690 00 00        	defw 0											; (Indice_Sprite_izq).
 286+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_der).
 287+ 8694 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 288+ 8696
 289+ 8696 00 00        	defw 0											; (Posicion_inicio).
 290+ 8698 00           	db 0											; (Cuad_objeto).
 291+ 8699
 292+ 8699 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 293+ 869D
 294+ 869D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 295+ 869E
 296+ 869E 00 00        	db 0,0										    ; Variables_de_borrado
 297+ 86A0 00 00        	defw 0											;	" " " " " " "
 298+ 86A2 00 00        	defw 0											;	" " " " " " "
 299+ 86A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A8
 301+ 86A8 00 00        	db 0,0											; Variables_de_pintado
 302+ 86AA 00 00        	defw 0											;	" " " " " " "
 303+ 86AC 00 00        	defw 0											;	" " " " " " "
 304+ 86AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 305+ 86B2
 306+ 86B2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 307+ 86B4 00           	db 0											; (Autoriza_movimiento).
 308+ 86B5
 309+ 86B5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 310+ 86B9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 311+ 86BC
 312+ 86BC 00           	db 0 											; (Columnas).
 313+ 86BD 00 00        	defw 0											; (Limite_horizontal).
 314+ 86BF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 315+ 86C2
 316+ 86C2              ; ---------- ---------- ---------- ---------- ----------
 317+ 86C2
 318+ 86C2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 319+ 86C4 00 00        	defw 0											; (Posicion_actual).
 320+ 86C6 00 00        	defw 0 											; (Puntero_objeto).
 321+ 86C8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 322+ 86CB
 323+ 86CB 00           	db %00000000 									; (Attr).
 324+ 86CC
 325+ 86CC 00 00        	defw 0											; (Indice_Sprite_der).
 326+ 86CE 00 00        	defw 0											; (Indice_Sprite_izq).
 327+ 86D0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 328+ 86D2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 329+ 86D4
 330+ 86D4 00 00        	defw 0											; (Posicion_inicio).
 331+ 86D6 00           	db 0											; (Cuad_objeto).
 332+ 86D7
 333+ 86D7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 334+ 86DB
 335+ 86DB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 336+ 86DC
 337+ 86DC 00 00        	db 0,0										    ; Variables_de_borrado
 338+ 86DE 00 00        	defw 0											;	" " " " " " "
 339+ 86E0 00 00        	defw 0											;	" " " " " " "
 340+ 86E2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E6
 342+ 86E6 00 00        	db 0,0											; Variables_de_pintado
 343+ 86E8 00 00        	defw 0											;	" " " " " " "
 344+ 86EA 00 00        	defw 0											;	" " " " " " "
 345+ 86EC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 346+ 86F0
 347+ 86F0 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 348+ 86F2 00           	db 0											; (Autoriza_movimiento).
 349+ 86F3
 350+ 86F3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 351+ 86F7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 352+ 86FA
 353+ 86FA 00           	db 0 											; (Columnas).
 354+ 86FB 00 00        	defw 0											; (Limite_horizontal).
 355+ 86FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 356+ 8700
 357+ 8700              ; ---------- ---------- ---------- ---------- ----------
 358+ 8700
 359+ 8700 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 360+ 8702 00 00        	defw 0											; (Posicion_actual).
 361+ 8704 00 00        	defw 0 											; (Puntero_objeto).
 362+ 8706 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 363+ 8709
 364+ 8709 00           	db %00000000 									; (Attr).
 365+ 870A
 366+ 870A 00 00        	defw 0											; (Indice_Sprite_der).
 367+ 870C 00 00        	defw 0											; (Indice_Sprite_izq).
 368+ 870E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 369+ 8710 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 370+ 8712
 371+ 8712 00 00        	defw 0											; (Posicion_inicio).
 372+ 8714 00           	db 0											; (Cuad_objeto).
 373+ 8715
 374+ 8715 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 375+ 8719
 376+ 8719 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 377+ 871A
 378+ 871A 00 00        	db 0,0										    ; Variables_de_borrado
 379+ 871C 00 00        	defw 0											;	" " " " " " "
 380+ 871E 00 00        	defw 0											;	" " " " " " "
 381+ 8720 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8724
 383+ 8724 00 00        	db 0,0											; Variables_de_pintado
 384+ 8726 00 00        	defw 0											;	" " " " " " "
 385+ 8728 00 00        	defw 0											;	" " " " " " "
 386+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 387+ 872E
 388+ 872E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 389+ 8730 00           	db 0											; (Autoriza_movimiento).
 390+ 8731
 391+ 8731 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 392+ 8735 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 393+ 8738
 394+ 8738 00           	db 0 											; (Columnas).
 395+ 8739 00 00        	defw 0											; (Limite_horizontal).
 396+ 873B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 397+ 873E
 398+ 873E              ; ---------- ---------- ---------- ---------- ----------
 399+ 873E
 400+ 873E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 401+ 8740 00 00        	defw 0											; (Posicion_actual).
 402+ 8742 00 00        	defw 0 											; (Puntero_objeto).
 403+ 8744 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 404+ 8747
 405+ 8747 00           	db %00000000 									; (Attr).
 406+ 8748
 407+ 8748 00 00        	defw 0											; (Indice_Sprite_der).
 408+ 874A 00 00        	defw 0											; (Indice_Sprite_izq).
 409+ 874C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 410+ 874E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 411+ 8750
 412+ 8750 00 00        	defw 0											; (Posicion_inicio).
 413+ 8752 00           	db 0											; (Cuad_objeto).
 414+ 8753
 415+ 8753 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 416+ 8757
 417+ 8757 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 418+ 8758
 419+ 8758 00 00        	db 0,0										    ; Variables_de_borrado
 420+ 875A 00 00        	defw 0											;	" " " " " " "
 421+ 875C 00 00        	defw 0											;	" " " " " " "
 422+ 875E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8762
 424+ 8762 00 00        	db 0,0											; Variables_de_pintado
 425+ 8764 00 00        	defw 0											;	" " " " " " "
 426+ 8766 00 00        	defw 0											;	" " " " " " "
 427+ 8768 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 428+ 876C
 429+ 876C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 430+ 876E 00           	db 0											; (Autoriza_movimiento).
 431+ 876F
 432+ 876F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 433+ 8773 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 434+ 8776
 435+ 8776 00           	db 0 											; (Columnas).
 436+ 8777 00 00        	defw 0											; (Limite_horizontal).
 437+ 8779 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 438+ 877C
 439+ 877C              ; ---------- ---------- ---------- ---------- ----------
 440+ 877C
 441+ 877C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 442+ 877E 00 00        	defw 0											; (Posicion_actual).
 443+ 8780 00 00        	defw 0 											; (Puntero_objeto).
 444+ 8782 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 445+ 8785
 446+ 8785 00           	db %00000000 									; (Attr).
 447+ 8786
 448+ 8786 00 00        	defw 0											; (Indice_Sprite_der).
 449+ 8788 00 00        	defw 0											; (Indice_Sprite_izq).
 450+ 878A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 451+ 878C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 452+ 878E
 453+ 878E 00 00        	defw 0											; (Posicion_inicio).
 454+ 8790 00           	db 0											; (Cuad_objeto).
 455+ 8791
 456+ 8791 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 457+ 8795
 458+ 8795 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 459+ 8796
 460+ 8796 00 00        	db 0,0										    ; Variables_de_borrado
 461+ 8798 00 00        	defw 0											;	" " " " " " "
 462+ 879A 00 00        	defw 0											;	" " " " " " "
 463+ 879C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 464+ 87A0
 465+ 87A0 00 00        	db 0,0											; Variables_de_pintado
 466+ 87A2 00 00        	defw 0											;	" " " " " " "
 467+ 87A4 00 00        	defw 0											;	" " " " " " "
 468+ 87A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 469+ 87AA
 470+ 87AA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 471+ 87AC 00           	db 0											; (Autoriza_movimiento).
 472+ 87AD
 473+ 87AD 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 474+ 87B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 475+ 87B4
 476+ 87B4 00           	db 0 											; (Columnas).
 477+ 87B5 00 00        	defw 0											; (Limite_horizontal).
 478+ 87B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 479+ 87BA
 480+ 87BA              ; ---------- ---------- ---------- ---------- ----------
 481+ 87BA
 482+ 87BA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 483+ 87BC 00 00        	defw 0											; (Posicion_actual).
 484+ 87BE 00 00        	defw 0 											; (Puntero_objeto).
 485+ 87C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 486+ 87C3
 487+ 87C3 00           	db %00000000 									; (Attr).
 488+ 87C4
 489+ 87C4 00 00        	defw 0											; (Indice_Sprite_der).
 490+ 87C6 00 00        	defw 0											; (Indice_Sprite_izq).
 491+ 87C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 492+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 493+ 87CC
 494+ 87CC 00 00        	defw 0											; (Posicion_inicio).
 495+ 87CE 00           	db 0											; (Cuad_objeto).
 496+ 87CF
 497+ 87CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 498+ 87D3
 499+ 87D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 500+ 87D4
 501+ 87D4 00 00        	db 0,0										    ; Variables_de_borrado
 502+ 87D6 00 00        	defw 0											;	" " " " " " "
 503+ 87D8 00 00        	defw 0											;	" " " " " " "
 504+ 87DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 505+ 87DE
 506+ 87DE 00 00        	db 0,0											; Variables_de_pintado
 507+ 87E0 00 00        	defw 0											;	" " " " " " "
 508+ 87E2 00 00        	defw 0											;	" " " " " " "
 509+ 87E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 510+ 87E8
 511+ 87E8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 512+ 87EA 00           	db 0											; (Autoriza_movimiento).
 513+ 87EB
 514+ 87EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 515+ 87EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 516+ 87F2
 517+ 87F2 00           	db 0 											; (Columnas).
 518+ 87F3 00 00        	defw 0											; (Limite_horizontal).
 519+ 87F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 520+ 87F8
 521+ 87F8              ; ---------- ---------- ---------- ---------- ----------
 522+ 87F8
 523+ 87F8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 524+ 87FA 00 00        	defw 0											; (Posicion_actual).
 525+ 87FC 00 00        	defw 0 											; (Puntero_objeto).
 526+ 87FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 527+ 8801
 528+ 8801 00           	db %00000000 									; (Attr).
 529+ 8802
 530+ 8802 00 00        	defw 0											; (Indice_Sprite_der).
 531+ 8804 00 00        	defw 0											; (Indice_Sprite_izq).
 532+ 8806 00 00        	defw 0											; (Puntero_DESPLZ_der).
 533+ 8808 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 534+ 880A
 535+ 880A 00 00        	defw 0											; (Posicion_inicio).
 536+ 880C 00           	db 0											; (Cuad_objeto).
 537+ 880D
 538+ 880D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 539+ 8811
 540+ 8811 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 541+ 8812
 542+ 8812 00 00        	db 0,0										    ; Variables_de_borrado
 543+ 8814 00 00        	defw 0											;	" " " " " " "
 544+ 8816 00 00        	defw 0											;	" " " " " " "
 545+ 8818 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 546+ 881C
 547+ 881C 00 00        	db 0,0											; Variables_de_pintado
 548+ 881E 00 00        	defw 0											;	" " " " " " "
 549+ 8820 00 00        	defw 0											;	" " " " " " "
 550+ 8822 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 551+ 8826
 552+ 8826 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 553+ 8828 00           	db 0											; (Autoriza_movimiento).
 554+ 8829
 555+ 8829 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 556+ 882D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 557+ 8830
 558+ 8830 00           	db 0 											; (Columnas).
 559+ 8831 00 00        	defw 0											; (Limite_horizontal).
 560+ 8833 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 561+ 8836
 562+ 8836              ; -------------------------------------------------------------------------------------
 563+ 8836              ;
 564+ 8836              ;	20/05/23
 565+ 8836              ;
 566+ 8836              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 567+ 8836              ;
 568+ 8836              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 569+ 8836              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 570+ 8836              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 571+ 8836              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 572+ 8836
 573+ 8836              Indice_de_entidades
 574+ 8836
 575+ 8836 40 88        	defw Entidad_1
 576+ 8838 50 88        	defw Entidad_2
 577+ 883A 60 88        	defw Entidad_3
 578+ 883C 70 88        	defw Entidad_4
 579+ 883E 80 88        	defw Entidad_5
 580+ 8840
 581+ 8840              ;	BADSAT, (Satélite malvado).
 582+ 8840
 583+ 8840 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 584+ 8842 04           	db %00000100									; (Attr).
 585+ 8843 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 586+ 8845 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 587+ 8847 3F 50        	defw $503f	                             	    ; (Posicion_inicio).
 588+ 8849 01           	db 1											; (Cuad_objeto).
 589+ 884A 02 02 01 02  	db 2,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 590+ 884E ED 9C        	defw Indice_mov_Escaloncitos_izquierda_arriba   ; (Puntero_indice_mov)
 591+ 8850
 592+ 8850 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 593+ 8852 02           	db %00000010									; (Attr).
 594+ 8853 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 595+ 8855 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 596+ 8857 40 50        	defw $5040                                      ; (Posicion_inicio).
 597+ 8859 01           	db 1											; (Cuad_objeto).
 598+ 885A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 599+ 885E F1 9C        	defw Indice_mov_Onda_senoidal				    ; (Puntero_indice_mov)
 600+ 8860
 601+ 8860 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 602+ 8862 04           	db %00000100									; (Attr).
 603+ 8863 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 604+ 8865 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 605+ 8867 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 606+ 8869 01           	db 1											; (Cuad_objeto).
 607+ 886A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 608+ 886E F1 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 609+ 8870
 610+ 8870 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 611+ 8872 01           	db %00000001									; (Attr).
 612+ 8873 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 613+ 8875 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 614+ 8877 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 615+ 8879 01           	db 1											; (Cuad_objeto).
 616+ 887A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 617+ 887E EF 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 618+ 8880
 619+ 8880 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 620+ 8882 01           	db %00000001									; (Attr).
 621+ 8883 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 622+ 8885 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 623+ 8887 07 40        	defw $4007                                      ; (Posicion_inicio).
 624+ 8889 01           	db 1											; (Cuad_objeto).
 625+ 888A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 626+ 888E EB 9C        	defw Indice_mov_Escaloncitos_derecha_abajo							; (Puntero_indice_mov)
 627+ 8890
# file closed: Cajas_y_disparos.asm
  24  8890              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8890              ; 13/05/23
   2+ 8890
   3+ 8890              Indice_de_niveles
   4+ 8890
   5+ 8890 9E 88        	defw Nivel_1
   6+ 8892 A9 88        	defw Nivel_2
   7+ 8894 B6 88        	defw Nivel_3
   8+ 8896 C6 88        	defw Nivel_4
   9+ 8898 D8 88        	defw Nivel_5
  10+ 889A
  11+ 889A              ;	...
  12+ 889A              ;	...
  13+ 889A              ;	+ Niveles ...
  14+ 889A
  15+ 889A 00 00        	defw 0
  16+ 889C 00 00        	defw 0
  17+ 889E
  18+ 889E 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 889F 05 04 03 02  	db 5,4,3,2,1
  19+ 88A3 01
  20+ 88A4 01 02 03 04  	db 1,2,3,4,5
  20+ 88A8 05
  21+ 88A9 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 88AA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 88AE 01 02
  23+ 88B0 02 01 01 01  	db 2,1,1,1,1,2
  23+ 88B4 01 02
  24+ 88B6 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 88B7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 88BB 01
  26+ 88BC 03 01 01 01  	db 3,1,1,1,1
  26+ 88C0 01
  27+ 88C1 03 01 01 01  	db 3,1,1,1,1
  27+ 88C5 01
  28+ 88C6 11           Nivel_4 db 17									; Nº de entidades.
  29+ 88C7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 88CB 01
  30+ 88CC 04 01 01 01  	db 4,1,1,1,1
  30+ 88D0 01
  31+ 88D1 04 01 01 01  	db 4,1,1,1,1
  31+ 88D5 01
  32+ 88D6 02 03        	db 2,3
  33+ 88D8 14           Nivel_5 db 20									; Nº de entidades.
  34+ 88D9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88DD 01
  35+ 88DE 05 01 01 01  	db 5,1,1,1,1
  35+ 88E2 01
  36+ 88E3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 88E7 01
  37+ 88E8 05 01 01 01  	db 5,1,1,1,1
  37+ 88EC 01
  38+ 88ED
  39+ 88ED              ;---------------------------------------------------------------------------------------------------------------
  40+ 88ED              ;
  41+ 88ED              ;   21/5/23
  42+ 88ED              ;
  43+ 88ED              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 88ED              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 88ED              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 88ED              ;	_en la caja DRAW correspondiente.
  47+ 88ED              ;
  48+ 88ED              ;	MODIFICA: HL,DE y A.
  49+ 88ED              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 88ED
  51+ 88ED              Inicializa_Punteros_de_nivel
  52+ 88ED
  53+ 88ED 21 90 88     	ld hl,Indice_de_niveles
  54+ 88F0 22 15 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 88F3 CD 09 8D     	call Extrae_address
  56+ 88F6 7E           	ld a,(hl)
  57+ 88F7 32 EA 89     	ld (Numero_de_entidades),a
  58+ 88FA 23           	inc hl
  59+ 88FB 22 17 8A     	ld (Datos_de_nivel),hl
  60+ 88FE C9           	ret
  61+ 88FF
  62+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  63+ 88FF              ;
  64+ 88FF              ;   13/5/23
  65+ 88FF              ;
  66+ 88FF              ;	Destruye A,BC,HL,DE
  67+ 88FF
  68+ 88FF              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 88FF              ;	_del juego.
  70+ 88FF
  71+ 88FF              Prepara_cajas
  72+ 88FF
  73+ 88FF              ; Preparamos los punteros de las cajas.
  74+ 88FF
  75+ 88FF 21 74 85     	ld hl,Indice_de_cajas
  76+ 8902 CD 09 8D     	call Extrae_address
  77+ 8905 CD 42 89     	call Avanza_caja
  78+ 8908
  79+ 8908 CD 86 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 890B
  81+ 890B 2A 17 8A     	ld hl,(Datos_de_nivel)
  82+ 890E
  83+ 890E              ; HL está en los datos del nivel correspondiente.
  84+ 890E              ; B actuará como contador de cajas.
  85+ 890E
  86+ 890E C5           1 push bc
  87+ 890F
  88+ 890F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 8910 CD 33 89     	call PreparaBC
  90+ 8913
  91+ 8913 21 36 88     	ld hl,Indice_de_entidades
  92+ 8916 CD 3B 89     	call SBC_HL_con_BC_y_Extrae
  93+ 8919 22 F0 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 891C
  95+ 891C CD 4C 89     	call Datos_de_entidad_a_caja
  96+ 891F
  97+ 891F 2A E8 89     	ld hl,(Indice_restore_caja)
  98+ 8922 CD 09 8D     	call Extrae_address
  99+ 8925 CD 42 89     	call Avanza_caja
 100+ 8928
 101+ 8928 2A 17 8A     	ld hl,(Datos_de_nivel)
 102+ 892B 23           	inc hl
 103+ 892C 22 17 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 892F
 105+ 892F C1           	pop bc
 106+ 8930 10 DC        	djnz 1B
 107+ 8932 C9           	ret
 108+ 8933
 109+ 8933 CB 27        PreparaBC sla a
 110+ 8935 D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 8937 4F           	ld c,a
 112+ 8938 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 893A C9           	ret
 114+ 893B
 115+ 893B A7           SBC_HL_con_BC_y_Extrae and a
 116+ 893C ED 4A        	adc hl,bc
 117+ 893E CD 09 8D     	call Extrae_address
 118+ 8941 C9           	ret
 119+ 8942
 120+ 8942 22 E4 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 8945 13           	inc de
 122+ 8946 13           	inc de
 123+ 8947 EB           	ex de,hl
 124+ 8948 22 E8 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 894B C9           	ret
 126+ 894C
 127+ 894C              Datos_de_entidad_a_caja
 128+ 894C
 129+ 894C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 894C
 131+ 894C
 132+ 894C ED 5B E4 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 133+ 8950
 134+ 8950 01 02 00     	ld bc,2
 135+ 8953 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 136+ 8955
 137+ 8955 01 07 00     	ld bc,7
 138+ 8958 CD 80 89     	call Situa_DE
 139+ 895B
 140+ 895B 01 05 00     	ld bc,5
 141+ 895E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 142+ 8960
 143+ 8960 01 04 00     	ld bc,4
 144+ 8963 CD 80 89     	call Situa_DE
 145+ 8966
 146+ 8966 01 07 00     	ld bc,7
 147+ 8969 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 148+ 896B
 149+ 896B 01 18 00     	ld bc,24
 150+ 896E CD 80 89     	call Situa_DE
 151+ 8971
 152+ 8971 01 02 00     	ld bc,2
 153+ 8974 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 154+ 8976
 155+ 8976 01 0A 00     	ld bc,10
 156+ 8979 CD 80 89     	call Situa_DE
 157+ 897C
 158+ 897C 3E 03        	ld a,3
 159+ 897E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 160+ 897F
 161+ 897F C9           	ret
 162+ 8980
 163+ 8980 EB           Situa_DE ex de,hl
 164+ 8981 A7           	and a
 165+ 8982 ED 4A        	adc hl,bc
 166+ 8984 EB           	ex de,hl
 167+ 8985 C9           	ret
 168+ 8986
 169+ 8986              ;---------------------------------------------------------------------------------------------------------------
 170+ 8986              ;
 171+ 8986              ;	21/5/23
 172+ 8986              ;
 173+ 8986              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 174+ 8986              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 175+ 8986              ;
 176+ 8986              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 177+ 8986              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 178+ 8986              ;	_ total de entidades que contiene (Numero_de_entidades).
 179+ 8986              ;
 180+ 8986              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 181+ 8986              ;	MODIFICA: A y B.
 182+ 8986              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 183+ 8986
 184+ 8986              Admin_num_entidades
 185+ 8986
 186+ 8986              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 187+ 8986
 188+ 8986 3A EA 89     	ld a,(Numero_de_entidades)
 189+ 8989 A7           	and a
 190+ 898A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 191+ 898A              ;	jr z,$
 192+ 898A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 898A
 194+ 898A 20 03        	jr nz,3F
 195+ 898C
 196+ 898C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 197+ 898C
 198+ 898C CD ED 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 199+ 898F
 200+ 898F
 201+ 898F 3A EA 89     3 ld a,(Numero_de_entidades)
 202+ 8992 FE 0A        	cp 10
 203+ 8994 38 08        	jr c,1F
 204+ 8996
 205+ 8996              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 8996              ; Actualizamos variables.
 207+ 8996
 208+ 8996 3E 0A        	ld a,10
 209+ 8998 32 EB 89     	ld (Numero_parcial_de_entidades),a
 210+ 899B 47           	ld b,a
 211+ 899C 18 04        	jr 2F
 212+ 899E
 213+ 899E              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 899E              ; (Numero_de_entidades)="0".
 215+ 899E
 216+ 899E 32 EB 89     1 ld (Numero_parcial_de_entidades),a
 217+ 89A1 47           	ld b,a
 218+ 89A2 C9           2 ret
# file closed: Niveles.asm
  25  89A3
  26  89A3              ; ******************************************************************************************************************************************************************************************
  27  89A3              ; Constantes.
  28  89A3              ; ******************************************************************************************************************************************************************************************
  29  89A3              ;
  30  89A3              ; 25/05/23
  31  89A3              ;
  32  89A3              ; Constantes generales.
  33  89A3              ;
  34  89A3
  35  89A3              Sprite_vacio equ $f000
  36  89A3              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  89A3              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  89A3              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  89A3              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  89A3
  41  89A3              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  89A3              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  89A3              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  89A3              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  89A3              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  89A3              ;                               				        ; De momento situamos este almacén en $7060.
  47  89A3
  48  89A3              ; ******************************************************************************************************************************************************************************************
  49  89A3              ; Variables.
  50  89A3              ; ******************************************************************************************************************************************************************************************
  51  89A3              ;
  52  89A3              ; 30/05/23
  53  89A3              ;
  54  89A3              ; Variables de DRAW. (Motor principal).
  55  89A3              ;
  56  89A3              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  89A3
  58  89A3 00           Filas db 0												; Filas. [DRAW]
  59  89A4 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  89A5 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  89A7 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  89A9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  89AA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  89AB
  65  89AB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  89AB
  67  89AB 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  89AC              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  89AC              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  89AC 00           Attr db 0												; Atributos de la entidad:
  71  89AD
  72  89AD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  89AD              ;
  74  89AD              ;	COLORES: 0 ..... NEGRO
  75  89AD              ;    		 1 ..... AZUL
  76  89AD              ; 			 2 ..... ROJO
  77  89AD              ;			 3 ..... MAGENTA
  78  89AD              ; 			 4 ..... VERDE
  79  89AD              ; 			 5 ..... CIAN
  80  89AD              ;			 6 ..... AMARILLO
  81  89AD              ; 			 7 ..... BLANCO
  82  89AD
  83  89AD 00 00        Indice_Sprite_der defw 0
  84  89AF 00 00        Indice_Sprite_izq defw 0
  85  89B1 00 00        Puntero_DESPLZ_der defw 0
  86  89B3 00 00        Puntero_DESPLZ_izq defw 0
  87  89B5
  88  89B5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89B7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89B8
  91  89B8              ; Variables de objeto. (Características).
  92  89B8
  93  89B8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89B9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89BA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89BB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89BC
  98  89BC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89BD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89BD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89BD
 102  89BD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89BF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89C1 00 00        	defw 0
 105  89C3 00 00 00 00  	db 0,0,0,0
 106  89C7
 107  89C7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89C9 00 00        	defw 0
 109  89CB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89CD 00 00 00 00  	db 0,0,0,0
 111  89D1
 112  89D1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89D1
 114  89D1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89D2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89D2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89D2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89D2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89D2              ;
 120  89D2              ; 														DESCRIPCIÖN:
 121  89D2              ;
 122  89D2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89D2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89D2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89D2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89D2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89D2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89D2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89D2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89D2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89D2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89D2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89D2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89D2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89D2              ;
 136  89D2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89D2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89D2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89D2
 140  89D2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89D3
 142  89D3              ; Movimiento.
 143  89D3
 144  89D3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89D4 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89D6 00 00        Puntero_mov defw 0
 147  89D8 00           Contador_db_mov db 0
 148  89D9 00           Incrementa_puntero db 0
 149  89DA 00           Repetimos_db db 0
 150  89DB
 151  89DB              ; Variables de funcionamiento. [DRAW].
 152  89DB
 153  89DB 00           Columnas db 0
 154  89DC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89DE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89DE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89DF
 158  89DF              ; variables de control general.
 159  89DF
 160  89DF 00           Ctrl_2 db 0
 161  89E0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89E0              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89E0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89E0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89E0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89E0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89E0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89E0              ;
 169  89E0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89E0
 171  89E0 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89E1
 173  89E1              ; 62 Bytes por entidad.
 174  89E1              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89E1              ;					         		---------;      ;---------
 176  89E1
 177  89E1
 178  89E1              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89E1
 180  89E1 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89E2
 182  89E2              ;														DESCRIPCIÓN:
 183  89E2              ;
 184  89E2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89E2              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89E2              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89E2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89E2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89E2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89E2              ;														BIT 3, Recarga de nueva oleada.
 191  89E2              ;														BIT 4, Recarga de nueva oleada.
 192  89E2
 193  89E2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89E4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89E4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89E4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89E4
 198  89E4
 199  89E4
 200  89E4              ; Gestión de ENTIDADES y CAJAS.
 201  89E4
 202  89E4 00 00        Puntero_store_caja defw 0
 203  89E6 00 00        Puntero_restore_caja defw 0
 204  89E8 00 00        Indice_restore_caja defw 0
 205  89EA 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 206  89EB 00           Numero_parcial_de_entidades db 0
 207  89EC 00           Entidades_en_curso db 0									; ..... ..... .....
 208  89ED 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 209  89EE              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 210  89EE              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 211  89EE              ;														; _ (Numero_de_malotes)="0".
 212  89EE 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 213  89F0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 214  89F2              ;														; _ puntero (Indice_entidades).
 215  89F2
 216  89F2
 217  89F2              ;---------------------------------------------------------------------------------------------------------------
 218  89F2              ;
 219  89F2              ; Sirven para PINTAR.
 220  89F2
 221  89F2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 222  89F4              ;														; _variable para almacenar lo posición del puntero_
 223  89F4              ; 														; _de pila, SP.
 224  89F4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 225  89F6              ;														; La utiliza la rutina [Extrae_foto_registros].
 226  89F6 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 227  89F8              ;														; _el snapshot de los registros de la siguiente entidad.
 228  89F8              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 229  89F8 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 230  89FA              ;														; _el snapshot de los registros del siguiente disparo.
 231  89FA              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 232  89FA
 233  89FA              ;---------------------------------------------------------------------------------------------------------------
 234  89FA
 235  89FA              ; Gestión de Disparos.
 236  89FA
 237  89FA 00           Numero_de_disparotes db 0
 238  89FB 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 239  89FD 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 240  89FF 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 241  8A00              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 242  8A00              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 243  8A00 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 244  8A02              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 245  8A02              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 246  8A02              ;														; _produzca colisión.
 247  8A02 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 248  8A04              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 249  8A04 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 250  8A07              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 251  8A07 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 252  8A0A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 253  8A0A              ;---------------------------------------------------------------------------------------------------------------
 254  8A0A
 255  8A0A              ; Relojes y temporizaciones.
 256  8A0A
 257  8A0A 00           Contador_de_frames db 0
 258  8A0B 03           Clock_explosion db 3
 259  8A0C 1E           Clock_Entidades_en_curso db 30
 260  8A0D 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 261  8A0E              ;														; Repite la oleada de entidades.
 262  8A0E 01           Habilita_disparo_Amadeus db 1
 263  8A0F 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 264  8A10 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 265  8A11
 266  8A11 01           Habilita_disparo_entidad db 1
 267  8A12 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 268  8A13 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 269  8A14
 270  8A14              ;---------------------------------------------------------------------------------------------------------------
 271  8A14
 272  8A14              ; Gestión de NIVELES.
 273  8A14
 274  8A14 00           Nivel db 0												 ; Nivel actual del juego.
 275  8A15 00 00        Puntero_indice_NIVELES defw 0
 276  8A17 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 277  8A19              ; 														 ; _ que definen el NIVEL.
 278  8A19
 279  8A19
 280  8A19              ; Y todo comienza aquí .....
 281  8A19              ;
 282  8A19              ; Rutina principal *************************************************************************************************************************************************************************
 283  8A19              ;
 284  8A19              ;	14/11/22
 285  8A19
 286  8A19              START
 287  8A19
 288  8A19 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 289  8A1C 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 290  8A1E ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 291  8A20 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 292  8A22 F3           	DI
 293  8A23
 294  8A23 3E 07        	ld a,%00000111
 295  8A25 CD C5 98     	call Cls
 296  8A28
 297  8A28              ;	call Pinta_marco
 298  8A28
 299  8A28 CD ED 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 300  8A2B
 301  8A2B              ;!! Aqui llamaremos a la rutina que hace copia de seguridad de las variables generales.
 302  8A2B
 303  8A2B CD E2 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 304  8A2E
 305  8A2E CD FF 88     4 call Prepara_cajas
 306  8A31
 307  8A31 CD B5 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 308  8A34              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 309  8A34 CD 92 8D     	call Restore_entidad
 310  8A37
 311  8A37 21 EB 89     	ld hl,Numero_parcial_de_entidades
 312  8A3A 46           	ld b,(hl)
 313  8A3B 04           	inc b
 314  8A3C 05           	dec b
 315  8A3D 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 316  8A3F
 317  8A3F              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 318  8A3F              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 319  8A3F              ;	Pintamos el resto de entidades:
 320  8A3F
 321  8A3F              ;	INICIA ENTIDADES !!!!!
 322  8A3F
 323  8A3F C5           1 push bc  												; Guardo el contador de entidades.
 324  8A40 CD 0F 8D     	call Inicia_Puntero_objeto
 325  8A43 CD D9 98     	call Recompone_posicion_inicio
 326  8A46 CD 15 93     	call Draw
 327  8A49 CD A0 7F     	call Guarda_foto_registros
 328  8A4C CD 57 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 329  8A4F C1           	pop bc
 330  8A50 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 331  8A52
 332  8A52              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 333  8A52              ; (Esto se dá cuando se inicia una nueva oleada).
 334  8A52
 335  8A52 3A E1 89     	ld a,(Ctrl_1)
 336  8A55 CB 5F        	bit 3,a
 337  8A57 20 18        	jr nz,5F											; Loop
 338  8A59
 339  8A59              ; 	INICIA AMADEUS !!!!!
 340  8A59
 341  8A59 CD B9 8D     3 call Restore_Amadeus
 342  8A5C CD 0F 8D     	call Inicia_Puntero_objeto
 343  8A5F CD 15 93     	call Draw
 344  8A62 CD A0 7F     	call Guarda_foto_registros
 345  8A65 11 8C 85     	ld de,Amadeus_db
 346  8A68 CD CB 8D     	call Store_Amadeus
 347  8A6B
 348  8A6B              ; 	INICIA DISPAROS !!!!!
 349  8A6B
 350  8A6B CD CB 8C     	call Inicia_Puntero_Disparo_Entidades
 351  8A6E CD D2 8C     	call Inicia_Puntero_Disparo_Amadeus
 352  8A71
 353  8A71              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 354  8A71
 355  8A71 CD B5 8C     5 call Inicia_punteros_de_cajas
 356  8A74 CD 92 8D     	call Restore_entidad
 357  8A77
 358  8A77 3A E1 89     	ld a,(Ctrl_1)
 359  8A7A CB 5F        	bit 3,a
 360  8A7C 28 0A        	jr z,6F
 361  8A7E
 362  8A7E              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 363  8A7E
 364  8A7E 21 E1 89     	ld hl,Ctrl_1
 365  8A81 CB 9E        	res 3,(hl)
 366  8A83 CD D9 8C     	call Calcula_numero_de_malotes
 367  8A86 18 07        	jr 7F
 368  8A88
 369  8A88              ; ----------
 370  8A88
 371  8A88 3A EB 89     6 ld a,(Numero_parcial_de_entidades)
 372  8A8B 3C           	inc a
 373  8A8C 32 ED 89     	ld (Numero_de_malotes),a
 374  8A8F
 375  8A8F AF           7 xor a
 376  8A90 FB           2 ei
 377  8A91 28 FD        	jr z,2B
 378  8A93
 379  8A93 3A 0A 8A     	ld a,(Contador_de_frames)
 380  8A96 47           	ld b,a
 381  8A97 3A 0D 8A     	ld a,(Activa_recarga_cajas)
 382  8A9A B8           	cp b
 383  8A9B 28 08        	jr z,8F
 384  8A9D
 385  8A9D 21 E1 89     	ld hl,Ctrl_1
 386  8AA0 CB E6        	set 4,(hl)
 387  8AA2 AF           	xor a
 388  8AA3 18 EB        	jr 2B
 389  8AA5
 390  8AA5 21 E1 89     8 ld hl,Ctrl_1
 391  8AA8 CB A6        	res 4,(hl)
 392  8AAA F3           	di
 393  8AAB
 394  8AAB 3A 0A 8A     	ld a,(Contador_de_frames)
 395  8AAE
 396  8AAE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 397  8AAE              ;! _ IMPREDECIBLE !!!!
 398  8AAE
 399  8AAE C6 0A        	add 10
 400  8AB0 32 0C 8A     	ld (Clock_Entidades_en_curso),a
 401  8AB3
 402  8AB3 C3 2E 8A     	jp 4B
 403  8AB6
 404  8AB6              ; -----------------------------------------------------------------------------------
 405  8AB6
 406  8AB6              Frame
 407  8AB6
 408  8AB6              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 409  8AB6              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 410  8AB6
 411  8AB6              ; PINTAMOS.
 412  8AB6
 413  8AB6 3E 02            ld a,2
 414  8AB8 D3 FE            out ($fe),a
 415  8ABA CD 19 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 416  8ABD CD 52 96     	call Extrae_foto_disparos
 417  8AC0 3E 01            ld a,1
 418  8AC2 D3 FE            out ($fe),a
 419  8AC4
 420  8AC4              ; ----------------------------------------------------------------------
 421  8AC4
 422  8AC4              ; RELOJES.
 423  8AC4
 424  8AC4 21 0A 8A     	ld hl,Contador_de_frames
 425  8AC7 34           	inc (hl)											; 0 - 255
 426  8AC8
 427  8AC8 3A 0C 8A     	ld a,(Clock_Entidades_en_curso)
 428  8ACB 47           	ld b,a
 429  8ACC 3A 0A 8A     	ld a,(Contador_de_frames)
 430  8ACF B8           	cp b
 431  8AD0 20 18        	jr nz,13F
 432  8AD2
 433  8AD2 3A EB 89     	ld a,(Numero_parcial_de_entidades)
 434  8AD5 47           	ld b,a
 435  8AD6 3A EC 89     	ld a,(Entidades_en_curso)
 436  8AD9 B8           	cp b
 437  8ADA 28 0E        	jr z,13F
 438  8ADC 30 0C        	jr nc,13F
 439  8ADE
 440  8ADE 3C           	inc a
 441  8ADF 32 EC 89     	ld (Entidades_en_curso),a
 442  8AE2
 443  8AE2 3A 0C 8A     	ld a,(Clock_Entidades_en_curso)
 444  8AE5
 445  8AE5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 446  8AE5              ;! _ IMPREDECIBLE !!!!
 447  8AE5
 448  8AE5 C6 64        	add 100
 449  8AE7 32 0C 8A     	ld (Clock_Entidades_en_curso),a
 450  8AEA
 451  8AEA 21 0E 8A     13 ld hl,Habilita_disparo_Amadeus
 452  8AED 11 10 8A     	ld de,Temporiza_disparo_Amadeus
 453  8AF0 CD 92 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 454  8AF3
 455  8AF3 21 11 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 456  8AF6 11 13 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 457  8AF9 CD 92 9D     	call Habilita_disparos
 458  8AFC
 459  8AFC              ; COLISIONES.
 460  8AFC
 461  8AFC CD F7 91     	call Selector_de_impactos
 462  8AFF
 463  8AFF              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 464  8AFF              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 465  8AFF              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 466  8AFF
 467  8AFF AF           	xor a
 468  8B00 32 FF 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 469  8B03
 470  8B03 CD B5 8C     	call Inicia_punteros_de_cajas
 471  8B06 CD 92 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 472  8B09              ; 														; _ en DRAW.
 473  8B09 3A A3 89     	ld a,(Filas)
 474  8B0C A7           	and a
 475  8B0D 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 476  8B0F CD A4 8D     	call Incrementa_punteros_de_cajas
 477  8B12 18 F2        	jr 12B
 478  8B14
 479  8B14              ; ---------------------------------------------------------------------------------------
 480  8B14
 481  8B14 CD 72 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 482  8B17 21 00 70     	ld hl,Album_de_fotos
 483  8B1A 22 F6 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 484  8B1D              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 485  8B1D 3A EB 89     	ld a,(Numero_parcial_de_entidades)
 486  8B20 47               ld b,a
 487  8B21 A7           	and a
 488  8B22 20 14        	jr nz,2F
 489  8B24
 490  8B24 21 E1 89     	ld hl,Ctrl_1
 491  8B27 CB 66        	bit 4,(hl)
 492  8B29 C2 B5 8B     	jp nz,4F
 493  8B2C
 494  8B2C 21 E1 89     	ld hl,Ctrl_1
 495  8B2F CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 496  8B31
 497  8B31 3A 0A 8A     	ld a,(Contador_de_frames)
 498  8B34 3C           	inc a
 499  8B35 32 0D 8A     	ld (Activa_recarga_cajas),a
 500  8B38
 501  8B38              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 502  8B38
 503  8B38 3A EC 89     2 ld a,(Entidades_en_curso)
 504  8B3B A7           	and a
 505  8B3C CA B5 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 506  8B3F 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 507  8B40
 508  8B40              ;	ex af,af
 509  8B40
 510  8B40              ; Código que ejecutamos con cada entidad:
 511  8B40              ; Impacto ???
 512  8B40
 513  8B40 C5           15 push bc 												; Nº de entidades en curso.
 514  8B41
 515  8B41              ;	call Autorizacion
 516  8B41
 517  8B41 3A BC 89     	ld a,(Impacto)
 518  8B44 A7           	and a
 519  8B45 28 2D        	jr z,8F
 520  8B47
 521  8B47              ; Hay Impacto en esta entidad.
 522  8B47
 523  8B47 21 0B 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 524  8B4A 35           	dec (hl)
 525  8B4B 20 62        	jr nz,6F
 526  8B4D
 527  8B4D              ;! Velocidad de la animación de la explosión.
 528  8B4D
 529  8B4D 36 03        	ld (hl),3 											; Reiniciamos el temporizador de la explosión,_
 530  8B4F              ;														; _,(velocidad de la explosión).
 531  8B4F CD 6C 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 532  8B52
 533  8B52              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 534  8B52
 535  8B52 3A DF 89     	ld a,(Ctrl_2)
 536  8B55 CB 4F        	bit 1,a
 537  8B57 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 538  8B59
 539  8B59              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 540  8B59
 541  8B59 3A AB 89     	ld a,(CTRL_DESPLZ)
 542  8B5C A7           	and a
 543  8B5D 20 08        	jr nz,21F
 544  8B5F
 545  8B5F 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 546  8B62 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 547  8B65 18 06        	jr 22F
 548  8B67
 549  8B67 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 550  8B6A 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 551  8B6D
 552  8B6D 21 DF 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 553  8B70 CB CE        	set 1,(hl)
 554  8B72 18 22        	jr 7F
 555  8B74
 556  8B74              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 557  8B74              ; _con las coordenadas de la entidad almacenada en DRAW.
 558  8B74
 559  8B74 3A E1 89     8 ld a,(Ctrl_1)
 560  8B77 CB 57        	bit 2,a
 561  8B79 28 1B        	jr z,7F
 562  8B7B
 563  8B7B 2A 02 8A     	ld hl,(Coordenadas_disparo_certero)
 564  8B7E EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 565  8B7F              ;														; E contiene la coordenada_X del disparo.
 566  8B7F 2A A9 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 567  8B82              ;														; H FILA, (Coordenada_y de la entidad).
 568  8B82 A7           	and a
 569  8B83 ED 52        	sbc hl,de
 570  8B85
 571  8B85 CD 2E 92     	call Determina_resultado_comparativa
 572  8B88
 573  8B88              ;! Debug colisiones
 574  8B88 78           	ld a,b
 575  8B89 A7           	and a
 576  8B8A              ;	ld a,(Cuad_objeto)
 577  8B8A              ;	inc b
 578  8B8A              ;	dec b
 579  8B8A 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 580  8B8C              ;	jr z,$
 581  8B8C
 582  8B8C              ;! Debug colisiones
 583  8B8C
 584  8B8C              ; ----- ----- -----
 585  8B8C
 586  8B8C 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 587  8B8E 32 BC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 588  8B91
 589  8B91 21 E1 89     	ld hl,Ctrl_1
 590  8B94 CB 96        	res 2,(hl)
 591  8B96
 592  8B96 CD E8 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 593  8B99
 594  8B99 3A D1 89     	ld a,(Ctrl_0)
 595  8B9C CB 67        	bit 4,a
 596  8B9E 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 597  8BA0
 598  8BA0              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 599  8BA0              ; [[[
 600  8BA0 CD 2D 8E     	call Detecta_disparo_entidad
 601  8BA3              ; ]]]
 602  8BA3 CD 7C 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 603  8BA6
 604  8BA6 21 D1 89     	ld hl,Ctrl_0
 605  8BA9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 606  8BAB AF           	xor a
 607  8BAC 32 D2 89     	ld (Obj_dibujado),a
 608  8BAF
 609  8BAF CD 57 8D     6 call Store_Restore_cajas
 610  8BB2
 611  8BB2 C1           	pop bc
 612  8BB3 10 8B        	djnz 15B
 613  8BB5
 614  8BB5              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 615  8BB5
 616  8BB5              ;	ld a,2
 617  8BB5              ;	ld (Limitador_de_entidades_x_frame),a
 618  8BB5
 619  8BB5              ; ------------------------------------
 620  8BB5              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 621  8BB5              ; Hemos gestionado todas las unidades.
 622  8BB5              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 623  8BB5
 624  8BB5              ;	ld hl,Ctrl_1
 625  8BB5              ;	res 2,(hl)
 626  8BB5
 627  8BB5              ; ------------------------------------
 628  8BB5
 629  8BB5              ; Tras la gestión de las entidades, ... AMADEUS.
 630  8BB5
 631  8BB5 CD B9 8D     4 call Restore_Amadeus
 632  8BB8
 633  8BB8 3A BC 89     	ld a,(Impacto)
 634  8BBB A7           	and a
 635  8BBC 20 FE        	jr nz,$
 636  8BBE
 637  8BBE CD 4D 8C     	call Mov_Amadeus
 638  8BC1
 639  8BC1 3A D1 89     	ld a,(Ctrl_0)
 640  8BC4 CB 67        	bit 4,a
 641  8BC6 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 642  8BC8
 643  8BC8 CD 7C 8C     	call Guarda_foto_entidad_a_pintar
 644  8BCB
 645  8BCB 21 D1 89     3 ld hl,Ctrl_0
 646  8BCE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 647  8BD0 AF           	xor a
 648  8BD1 32 D2 89     	ld (Obj_dibujado),a
 649  8BD4
 650  8BD4 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 651  8BD7 CD CB 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 652  8BDA
 653  8BDA CD 90 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 654  8BDD
 655  8BDD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 656  8BDD
 657  8BDD CD F1 8C     	call Calcula_numero_de_disparotes
 658  8BE0 CD D9 8C     9 call Calcula_numero_de_malotes
 659  8BE3
 660  8BE3 3E 04        	ld a,4
 661  8BE5 D3 FE        	out ($fe),a
 662  8BE7
 663  8BE7 C9           	ret
 664  8BE8
 665  8BE8              ; --------------------------------------------------------------------------------------------------------------
 666  8BE8              ;
 667  8BE8              ;	27/05/23
 668  8BE8
 669  8BE8              Mov_obj
 670  8BE8
 671  8BE8              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 672  8BE8
 673  8BE8 3A DF 89     	ld a,(Ctrl_2)
 674  8BEB CB 4F        	bit 1,a
 675  8BED 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 676  8BEF
 677  8BEF              ; Explosión:
 678  8BEF
 679  8BEF 3A E0 89     	ld a,(Frames_explosion)
 680  8BF2 A7           	and a
 681  8BF3 20 11        	jr nz,4F
 682  8BF5
 683  8BF5              ; Una alimaña menos!!!!!!!!!1
 684  8BF5
 685  8BF5 CD D4 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 686  8BF8 21 EB 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 687  8BFB 35           	dec (hl)
 688  8BFC 21 EC 89     	ld hl,Entidades_en_curso
 689  8BFF 35           	dec (hl)
 690  8C00 21 EA 89     	ld hl,Numero_de_entidades
 691  8C03 35           	dec (hl)
 692  8C04 18 46        	jr 3F
 693  8C06
 694  8C06              ; -----
 695  8C06
 696  8C06              ;	`Movemos´ la explosión.
 697  8C06
 698  8C06 2A B1 89     4 ld hl,(Puntero_DESPLZ_der)
 699  8C09 23           	inc hl
 700  8C0A 23           	inc hl
 701  8C0B 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 702  8C0E CD 09 8D     	call Extrae_address
 703  8C11 22 A7 89     	ld (Puntero_objeto),hl
 704  8C14
 705  8C14 21 E0 89     	ld hl,Frames_explosion
 706  8C17 35           	dec (hl)
 707  8C18
 708  8C18 CD 6C 8C     	call Guarda_foto_entidad_a_borrar
 709  8C1B 18 2F        	jr 3F
 710  8C1D
 711  8C1D AF           2 xor a
 712  8C1E 32 D2 89     	ld (Obj_dibujado),a
 713  8C21 32 D1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 714  8C24              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 715  8C24              ; 														; _de la entidad.
 716  8C24 CD 86 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 717  8C27              ;														; Obj_dibujado="0".
 718  8C27              ; Movemos Entidades malignas.
 719  8C27
 720  8C27              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 721  8C27              ;	and a 												; _a movernos. (Limitador_de_entidades).
 722  8C27              ;	ret z
 723  8C27
 724  8C27 21 D4 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 725  8C2A 34           	inc (hl)
 726  8C2B 35           	dec (hl)                                            ; Salimos de la rutina.
 727  8C2C C8           	ret z
 728  8C2D
 729  8C2D CD F3 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 730  8C30
 731  8C30 3A D1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 732  8C33 CB 67        	bit 4,a
 733  8C35 C8           	ret z
 734  8C36
 735  8C36              ; Ha habido desplazamiento de la entidad maligna.
 736  8C36              ; Ha llegado a zona de AMADEUS ???
 737  8C36
 738  8C36 3A AA 89     	ld a,(Coordenada_y)
 739  8C39 FE 14        	cp $14
 740  8C3B D4 C1 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 741  8C3E              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 742  8C3E              ; ---------
 743  8C3E
 744  8C3E 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 745  8C40 32 D2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 746  8C43 CD 86 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 747  8C46 CD 9D 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 748  8C49 CD 6C 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 749  8C4C C9           3 ret													; _de la misma.
 750  8C4D
 751  8C4D              ; --------------------------------------------------------------------------------------------------------------
 752  8C4D              ;
 753  8C4D              ;	29/1/23
 754  8C4D
 755  8C4D              Mov_Amadeus
 756  8C4D
 757  8C4D AF           	xor a
 758  8C4E 32 D2 89     	ld (Obj_dibujado),a
 759  8C51 CD 86 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 760  8C54              ;														; Obj_dibujado="0".
 761  8C54              ; Movemos Amadeus.
 762  8C54
 763  8C54 CD F6 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 764  8C57 3A D1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 765  8C5A CB 67        	bit 4,a
 766  8C5C C8           	ret z
 767  8C5D
 768  8C5D              ; ---------
 769  8C5D
 770  8C5D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 771  8C5F 32 D2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 772  8C62 CD 86 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 773  8C65 CD 9D 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 774  8C68 CD 6C 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 775  8C6B C9           	ret													; _de la nave.
 776  8C6C
 777  8C6C              ; --------------------------------------------------------------------------------------------------------------
 778  8C6C              ;
 779  8C6C              ;	31/01/23
 780  8C6C              ;
 781  8C6C              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 782  8C6C
 783  8C6C              Guarda_foto_entidad_a_borrar
 784  8C6C
 785  8C6C CD EF 95     	call Prepara_draw
 786  8C6F CD 29 95     	call calcula_CColumnass
 787  8C72 CD 60 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 788  8C75 CD B5 95     	call Define_rutina_de_impresion
 789  8C78 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 790  8C7B C9           	ret
 791  8C7C
 792  8C7C              ; --------------------------------------------------------------------------------------------------------------
 793  8C7C              ;
 794  8C7C              ;	31/01/23
 795  8C7C              ;
 796  8C7C              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 797  8C7C              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 798  8C7C
 799  8C7C              Guarda_foto_entidad_a_pintar
 800  8C7C
 801  8C7C CD A9 8C     	call Repone_pintar
 802  8C7F CD 15 93     	call Draw
 803  8C82 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 804  8C85 C9           	ret
 805  8C86
 806  8C86              ; --------------------------------------------------------------------------------------------------------------
 807  8C86              ;
 808  8C86              ;
 809  8C86
 810  8C86 21 A3 89     Prepara_var_pintado_borrado	ld hl,Filas
 811  8C89 3A D2 89     	ld a,(Obj_dibujado)
 812  8C8C A7           	and a
 813  8C8D 28 05        	jr z,1F
 814  8C8F 11 C7 89     	ld de,Variables_de_pintado
 815  8C92 18 03        	jr 2F
 816  8C94 11 BD 89     1 ld de,Variables_de_borrado
 817  8C97 01 08 00     2 ld bc,8
 818  8C9A ED B0        	ldir
 819  8C9C C9           	ret
 820  8C9D
 821  8C9D              ; --------------------------------------------------------------------------------------------------------------
 822  8C9D
 823  8C9D 21 BD 89     Repone_borrar ld hl,Variables_de_borrado
 824  8CA0 11 A3 89     	ld de,Filas
 825  8CA3 01 08 00     	ld bc,8
 826  8CA6 ED B0        	ldir
 827  8CA8 C9           	ret
 828  8CA9
 829  8CA9 21 C7 89     Repone_pintar ld hl,Variables_de_pintado
 830  8CAC 11 A3 89     	ld de,Filas
 831  8CAF 01 08 00     	ld bc,8
 832  8CB2 ED B0        	ldir
 833  8CB4 C9           	ret
 834  8CB5
 835  8CB5              ; *************************************************************************************************************************************************************
 836  8CB5              ;
 837  8CB5              ; 8/1/23
 838  8CB5              ;
 839  8CB5              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 840  8CB5              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 841  8CB5              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 842  8CB5
 843  8CB5              ; Destruye HL y DE !!!!!
 844  8CB5
 845  8CB5              Inicia_punteros_de_cajas
 846  8CB5
 847  8CB5 21 74 85     	ld hl,Indice_de_cajas
 848  8CB8 CD 09 8D         call Extrae_address
 849  8CBB 22 E4 89         ld (Puntero_store_caja),hl
 850  8CBE 21 76 85     	ld hl,Indice_de_cajas+2
 851  8CC1 22 E8 89     	ld (Indice_restore_caja),hl
 852  8CC4 CD 09 8D     	call Extrae_address
 853  8CC7 22 E6 89     	ld (Puntero_restore_caja),hl
 854  8CCA C9               ret
 855  8CCB
 856  8CCB              ; *************************************************************************************************************************************************************
 857  8CCB              ;
 858  8CCB              ; 8/1/23
 859  8CCB              ;
 860  8CCB              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 861  8CCB
 862  8CCB 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 863  8CCE 22 FB 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 864  8CD1 C9           	ret
 865  8CD2 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 866  8CD5 22 FD 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 867  8CD8 C9           	ret
 868  8CD9
 869  8CD9              ; -------------------------------------------------------------------------------------------------------------
 870  8CD9              ;
 871  8CD9              ; 28/2/23
 872  8CD9              ;
 873  8CD9
 874  8CD9              Calcula_numero_de_malotes
 875  8CD9
 876  8CD9 21 00 70     	ld hl,Album_de_fotos
 877  8CDC EB           	ex de,hl
 878  8CDD 2A F6 89     	ld hl,(Stack_snapshot)
 879  8CE0
 880  8CE0 06 00        	ld b,0
 881  8CE2 7D           	ld a,l
 882  8CE3 93           	sub e
 883  8CE4 28 07        	jr z,1F
 884  8CE6
 885  8CE6              ; Nº de malotes no es "0".
 886  8CE6
 887  8CE6 D6 06        2 sub 6
 888  8CE8 04           	inc b
 889  8CE9 A7           	and a
 890  8CEA 20 FA        	jr nz,2B
 891  8CEC 78           	ld a,b
 892  8CED
 893  8CED 32 ED 89     1 ld (Numero_de_malotes),a
 894  8CF0 C9           	ret
 895  8CF1
 896  8CF1              ; -------------------------------------------------------------------------------------------------------------
 897  8CF1              ;
 898  8CF1              ; 28/2/23
 899  8CF1              ;
 900  8CF1
 901  8CF1              Calcula_numero_de_disparotes
 902  8CF1
 903  8CF1 21 85 70     	ld hl,Album_de_fotos_disparos
 904  8CF4 EB           	ex de,hl
 905  8CF5 2A F8 89     	ld hl,(Stack_snapshot_disparos)
 906  8CF8
 907  8CF8 06 00        	ld b,0
 908  8CFA 7D           	ld a,l
 909  8CFB 93           	sub e
 910  8CFC 28 07        	jr z,1F
 911  8CFE
 912  8CFE              ; Nº de malotes no es "0".
 913  8CFE
 914  8CFE D6 06        2 sub 6
 915  8D00 04           	inc b
 916  8D01 A7           	and a
 917  8D02 20 FA        	jr nz,2B
 918  8D04 78           	ld a,b
 919  8D05
 920  8D05 32 FA 89     1 ld (Numero_de_disparotes),a
 921  8D08 C9           	ret
 922  8D09              ; *************************************************************************************************************************************************************
 923  8D09              ;
 924  8D09              ; 20/10/22
 925  8D09              ;
 926  8D09              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 927  8D09              ;
 928  8D09              ; Destruye el puntero y DE !!!!!
 929  8D09
 930  8D09 5E           Extrae_address ld e,(hl)
 931  8D0A 23           	inc hl
 932  8D0B 56           	ld d,(hl)
 933  8D0C 2B           	dec hl
 934  8D0D EB           	ex de,hl
 935  8D0E C9           	ret
 936  8D0F
 937  8D0F              ; *************************************************************************************************************************************************************
 938  8D0F              ;
 939  8D0F              ;	7/2/23
 940  8D0F              ;
 941  8D0F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 942  8D0F              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 943  8D0F              ;
 944  8D0F              ;   Destruye HL y BC !!!!!,
 945  8D0F              ;
 946  8D0F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 947  8D0F              ;					"0" ..... Izquierda.
 948  8D0F
 949  8D0F              Inicia_Puntero_objeto
 950  8D0F
 951  8D0F 3A B7 89     	ld a,(Cuad_objeto)
 952  8D12 E6 01        	and 1
 953  8D14 F5           	push af
 954  8D15 CC 33 8D     	call z,Inicia_puntero_objeto_izq
 955  8D18 F1           	pop af
 956  8D19 28 2B        	jr z,1F
 957  8D1B CD 20 8D     	call Inicia_puntero_objeto_der
 958  8D1E 18 26        	jr 1F
 959  8D20
 960  8D20              ; Arrancamos desde la parte izquierda de la pantalla.
 961  8D20              ; Iniciamos (Indice_Sprite_der).
 962  8D20
 963  8D20 2A AD 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 964  8D23 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 965  8D26 CD 09 8D     	call Extrae_address
 966  8D29 22 A7 89     	ld (Puntero_objeto),hl
 967  8D2C
 968  8D2C 2A AF 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 969  8D2F 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 970  8D32 C9           	ret
 971  8D33
 972  8D33              ; Arrancamos desde la parte derecha de la pantalla.
 973  8D33              ; Iniciamos (Indice_Sprite_izq).
 974  8D33
 975  8D33 2A AF 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 976  8D36 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 977  8D39 CD 09 8D     	call Extrae_address
 978  8D3C 22 A7 89     	ld (Puntero_objeto),hl
 979  8D3F
 980  8D3F 2A AD 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 981  8D42 22 B1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 982  8D45 C9           	ret
 983  8D46
 984  8D46              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 985  8D46
 986  8D46 21 48 83     1 ld hl,Amadeus
 987  8D49 ED 4B A7 89  	ld bc,(Puntero_objeto)
 988  8D4D B7 ED 42     	sub hl,bc
 989  8D50 C0           	ret nz
 990  8D51 21 D1 89     	ld hl,Ctrl_0
 991  8D54 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 992  8D56 C9           	ret 												; _de nuestra nave en los extremos.
 993  8D57
 994  8D57              ; *************************************************************************************************************************************************************
 995  8D57              ;
 996  8D57              ;	14/5/23
 997  8D57              ;
 998  8D57              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 999  8D57              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1000  8D57
1001  8D57              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1002  8D57              ;	_de la 2ª y 3ª entidad respectivamente.
1003  8D57
1004  8D57              Store_Restore_cajas
1005  8D57
1006  8D57 E5           	push hl
1007  8D58 D5           	push de
1008  8D59 C5            	push bc
1009  8D5A
1010  8D5A              ;	STORE !!!!!
1011  8D5A              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1012  8D5A
1013  8D5A 21 A3 89     	ld hl,Filas
1014  8D5D ED 5B E4 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1015  8D61 01 3E 00     	ld bc,62
1016  8D64 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1017  8D66
1018  8D66              ; 	Entidad_sospechosa. 20/4/23
1019  8D66
1020  8D66 3A BC 89     	ld a,(Impacto)
1021  8D69 A7           	and a
1022  8D6A 28 0C        	jr z,1F
1023  8D6C
1024  8D6C 2A E4 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1025  8D6F 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1026  8D72 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1027  8D73 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1028  8D75 22 00 8A     	ld (Entidad_sospechosa_de_colision),hl
1029  8D78
1030  8D78              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1031  8D78
1032  8D78 2A E6 89     1 ld hl,(Puntero_restore_caja)
1033  8D7B 7E           	ld a,(hl)
1034  8D7C A7           	and a
1035  8D7D F5           	push af
1036  8D7E 28 08        	jr z,2F
1037  8D80
1038  8D80 11 A3 89     	ld de,Filas
1039  8D83 01 3E 00     	ld bc,62
1040  8D86 ED B0        	ldir
1041  8D88
1042  8D88 CD A4 8D     2 call Incrementa_punteros_de_cajas
1043  8D8B F1           	pop af
1044  8D8C 28 EA        	jr z,1B
1045  8D8E
1046  8D8E C1           	pop bc
1047  8D8F D1           	pop de
1048  8D90 E1           	pop hl
1049  8D91
1050  8D91 C9           	ret
1051  8D92
1052  8D92              ; **************************************************************************************************
1053  8D92              ;
1054  8D92              ;	12/05/23
1055  8D92              ;
1056  8D92              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1057  8D92
1058  8D92 E5           Restore_entidad push hl
1059  8D93 D5           	push de
1060  8D94 C5            	push bc
1061  8D95
1062  8D95 2A E4 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1063  8D98 11 A3 89     	ld de,Filas
1064  8D9B 01 3E 00     	ld bc,62
1065  8D9E ED B0        	ldir
1066  8DA0
1067  8DA0 C1           	pop bc
1068  8DA1 D1           	pop de
1069  8DA2 E1           	pop hl
1070  8DA3 C9           	ret
1071  8DA4
1072  8DA4
1073  8DA4              ; **************************************************************************************************
1074  8DA4              ;
1075  8DA4              ;	08/05/23
1076  8DA4              ;
1077  8DA4              ;	Incrementamos los dos punteros de entidades. (+1).
1078  8DA4
1079  8DA4 2A E6 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1080  8DA7 22 E4 89     	ld (Puntero_store_caja),hl
1081  8DAA 2A E8 89     	ld hl,(Indice_restore_caja)
1082  8DAD 23           	inc hl
1083  8DAE 23           	inc hl
1084  8DAF 22 E8 89     	ld (Indice_restore_caja),hl
1085  8DB2 CD 09 8D         call Extrae_address
1086  8DB5 22 E6 89         ld (Puntero_restore_caja),hl
1087  8DB8 C9               ret
1088  8DB9
1089  8DB9              ; **************************************************************************************************
1090  8DB9              ;
1091  8DB9              ;	25/01/23
1092  8DB9              ;
1093  8DB9              ;	Restore_Amadeus
1094  8DB9              ;
1095  8DB9              ;	Cargamos en DRAW los parámetros de Amadeus.
1096  8DB9              ;
1097  8DB9
1098  8DB9 E5           Restore_Amadeus	push hl
1099  8DBA D5           	push de
1100  8DBB C5            	push bc
1101  8DBC 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1102  8DBF 11 A3 89     	ld de,Filas
1103  8DC2 01 3E 00     	ld bc,62
1104  8DC5 ED B0        	ldir
1105  8DC7 C1           	pop bc
1106  8DC8 D1           	pop de
1107  8DC9 E1           	pop hl
1108  8DCA C9           	ret
1109  8DCB
1110  8DCB              ; *************************************************************************************************************************************************************
1111  8DCB              ;
1112  8DCB              ;	29/04/23
1113  8DCB              ;
1114  8DCB              ;	Store_Amadeus
1115  8DCB              ;
1116  8DCB              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1117  8DCB              ;
1118  8DCB              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1119  8DCB              ;
1120  8DCB              ;	DESTRUYE: HL y BC y DE.
1121  8DCB
1122  8DCB 21 A3 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1123  8DCE 01 3E 00     	ld bc,62
1124  8DD1 ED B0        	ldir
1125  8DD3 C9           	ret
1126  8DD4
1127  8DD4              ; -----------------------------------------------------------
1128  8DD4              ;
1129  8DD4              ;	27/04/23
1130  8DD4              ;
1131  8DD4              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1132  8DD4              ;
1133  8DD4              ;	Destruye: HL,BC,DE,A
1134  8DD4
1135  8DD4 21 A3 89     Borra_datos_entidad ld hl,Filas
1136  8DD7 01 3D 00     	ld bc,61
1137  8DDA AF           	xor a
1138  8DDB 77           	ld (hl),a
1139  8DDC 11 A4 89     	ld de,Filas+1
1140  8DDF ED B0        	ldir
1141  8DE1 C9           	ret
1142  8DE2
1143  8DE2              ; -----------------------------------------------------------
1144  8DE2
1145  8DE2              ; Teclado.
1146  8DE2
1147  8DE2 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1148  8DE4 DB FE        	in a,($fe)
1149  8DE6 E6 01        	and $01
1150  8DE8 28 02        	jr z,1f
1151  8DEA 18 F6        	jr Pulsa_ENTER
1152  8DEC C9           1 ret
1153  8DED
1154  8DED              ; **************************************************************************************************
1155  8DED              ;
1156  8DED              ; Temporización.
1157  8DED
1158  8DED              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1159  8DED              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1160  8DED              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1161  8DED              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1162  8DED
1163  8DED              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1164  8DED              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1165  8DED              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1166  8DED
1167  8DED              ; A partir de $4f61 no hace falta DELAY.
1168  8DED
1169  8DED              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1170  8DED
1171  8DED 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1172  8DF0 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1173  8DF1 78           	LD A,B
1174  8DF2 A7           	AND A
1175  8DF3 20 FB        	JR NZ,wait
1176  8DF5 C9           	RET
1177  8DF6
1178  8DF6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1179  8DF6              ;
1180  8DF6              ;	5/3/23
1181  8DF6              ;
1182  8DF6              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1183  8DF6
1184  8DF6              Movimiento_Amadeus
1185  8DF6
1186  8DF6              ; Disparo.
1187  8DF6
1188  8DF6 3A 0E 8A     	ld a,(Habilita_disparo_Amadeus)
1189  8DF9 A7           	and a
1190  8DFA 20 02        	jr nz,1F
1191  8DFC 18 15        	jr 2F
1192  8DFE
1193  8DFE 3E F7        1 ld a,$f7													; "5" para disparar.
1194  8E00 DB FE        	in a,($fe)
1195  8E02 E6 10        	and $10
1196  8E04
1197  8E04 F5           	push af
1198  8E05 CC 3D 8E     	call z,Genera_disparo
1199  8E08 F1           	pop af
1200  8E09 20 08        	jr nz,2F
1201  8E0B
1202  8E0B 3A 0E 8A     	ld a,(Habilita_disparo_Amadeus)
1203  8E0E EE 01        	xor 1
1204  8E10 32 0E 8A     	ld (Habilita_disparo_Amadeus),a
1205  8E13
1206  8E13 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1207  8E15 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1208  8E17 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1209  8E19 CC 93 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1210  8E1C 3E F7        	ld a,$f7
1211  8E1E DB FE        	in a,($fe)
1212  8E20 E6 01        	and $01
1213  8E22 C8           	ret z
1214  8E23
1215  8E23 3E F7        	ld a,$f7
1216  8E25 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1217  8E27 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1218  8E29 CC 75 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1219  8E2C C9           	ret
1220  8E2D
1221  8E2D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1222  8E2D              ;
1223  8E2D              ;	Rutina provisional para que los malotes cagen balas.
1224  8E2D
1225  8E2D              Detecta_disparo_entidad
1226  8E2D
1227  8E2D 3A 11 8A     	ld a,(Habilita_disparo_entidad)
1228  8E30 A7           	and a
1229  8E31 C8           	ret z
1230  8E32 3E 7F        	ld a,$7f
1231  8E34 DB FE        	in a,($fe)
1232  8E36 E6 01        	and 1
1233  8E38 C0           	ret nz
1234  8E39 CD 3D 8E     	call Genera_disparo
1235  8E3C C9           	ret
1236  8E3D
1237  8E3D              ; ---------------------------------------------------------------
1238  8E3D
1239  8E3D              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E3D              ; ******************************************************************************************************************************************************************************************
   2+ 8E3D              ;
   3+ 8E3D              ;   17/04/23
   4+ 8E3D              ;
   5+ 8E3D              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E3D              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E3D              ;
   8+ 8E3D              ;
   9+ 8E3D              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E3D              ;
  11+ 8E3D              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E3D              ;               _ hacen las entidades hacia abajo.
  13+ 8E3D              ;
  14+ 8E3D              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E3D              ;
  16+ 8E3D              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E3D              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E3D              ;
  19+ 8E3D              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E3D              ;           _ la bala.
  21+ 8E3D              ;
  22+ 8E3D              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E3D              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E3D              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E3D              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E3D              ;           _ en el momento de generarse la bala)).
  27+ 8E3D
  28+ 8E3D              Genera_disparo
  29+ 8E3D
  30+ 8E3D              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E3D              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E3D              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E3D              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E3D              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E3D              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E3D              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E3D
  38+ 8E3D              ; Exclusiones:
  39+ 8E3D
  40+ 8E3D 3A DB 89         ld a,(Columnas)
  41+ 8E40 47               ld b,a
  42+ 8E41 3A A4 89         ld a,(Columns)
  43+ 8E44 B8               cp b
  44+ 8E45 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E46
  46+ 8E46              ; ----- ----- -----
  47+ 8E46
  48+ 8E46 3A D1 89         ld a,(Ctrl_0)
  49+ 8E49 CB 77            bit 6,a
  50+ 8E4B 20 06            jr nz,14F
  51+ 8E4D
  52+ 8E4D 3A AA 89         ld a,(Coordenada_y)
  53+ 8E50 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E52 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E53
  56+ 8E53 21 00 80     14 ld hl,Indice_disparo
  57+ 8E56 3A AB 89         ld a,(CTRL_DESPLZ)
  58+ 8E59 4F               ld c,a
  59+ 8E5A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E5C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E5C              ;                                            ""        ""       "f9", B="1"
  62+ 8E5C              ;                                            ""        ""       "fb", B="2"
  63+ 8E5C              ;                                            ""        ""       "fb", B="3"
  64+ 8E5C A7               and a
  65+ 8E5D 28 10            jr z,1F
  66+ 8E5F E6 01            and 1
  67+ 8E61 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E62
  69+ 8E62 79               ld a,c
  70+ 8E63 16 F9            ld d,$f9
  71+ 8E65 23           2 inc hl
  72+ 8E66 23               inc hl
  73+ 8E67 04               inc b
  74+ 8E68 BA               cp d
  75+ 8E69 28 04            jr z,1F
  76+ 8E6B 14               inc d
  77+ 8E6C 14               inc d
  78+ 8E6D 18 F6            jr 2B
  79+ 8E6F
  80+ 8E6F CD 09 8D     1 call Extrae_address
  81+ 8E72 E5               push hl
  82+ 8E73 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E75 DD 21 8E 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E79
  85+ 8E79              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E79              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E79
  88+ 8E79 3A D1 89         ld a,(Ctrl_0)
  89+ 8E7C CB 77            bit 6,a
  90+ 8E7E 20 04            jr nz,19F
  91+ 8E80
  92+ 8E80 AF               xor a
  93+ 8E81 32 11 8A         ld (Habilita_disparo_entidad),a
  94+ 8E84
  95+ 8E84 3A B7 89     19 ld a,(Cuad_objeto)
  96+ 8E87 FE 02            cp 2
  97+ 8E89 38 66            jr c,3F
  98+ 8E8B 28 64            jr z,3F
  99+ 8E8D
 100+ 8E8D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E8D
 102+ 8E8D E6 01            and 1
 103+ 8E8F 28 30            jr z,4F
 104+ 8E91
 105+ 8E91              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E91              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E91              ;
 108+ 8E91              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E91              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E91              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E91
 112+ 8E91 2A A5 89     	ld hl,(Posicion_actual)
 113+ 8E94
 114+ 8E94              ;   Amadeus o entidad ???.
 115+ 8E94
 116+ 8E94 3A D1 89         ld a,(Ctrl_0)
 117+ 8E97 CB 77            bit 6,a
 118+ 8E99 28 0A            jr z,8F
 119+ 8E9B
 120+ 8E9B              ; 	Dispara Amadeus.
 121+ 8E9B
 122+ 8E9B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E9D CD 0A 96         call PreviousScan
 124+ 8EA0 CD 0A 96         call PreviousScan
 125+ 8EA3
 126+ 8EA3              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8EA3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8EA3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8EA3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8EA3
 131+ 8EA3 18 11            jr 10F
 132+ 8EA5
 133+ 8EA5              ; 	Dispara Entidad.
 134+ 8EA5
 135+ 8EA5 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8EA8              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8EA8
 138+ 8EA8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8EA8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8EA8
 141+ 8EA8 C5               push bc
 142+ 8EA9 06 10            ld b,16
 143+ 8EAB CD FB 95     9 call NextScan
 144+ 8EAE 10 FB            djnz 9B
 145+ 8EB0 C1               pop bc
 146+ 8EB1 CD 1B 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EB4 18 06            jr 17F
 148+ 8EB6
 149+ 8EB6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EB6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EB6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EB6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EB6
 154+ 8EB6 CD 1B 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EB9 CD 90 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EBC              ;                                                      ; _al generar el disparo.
 157+ 8EBC
 158+ 8EBC              ; 	LLegados a este punto tendremos:
 159+ 8EBC              ;
 160+ 8EBC              ;       Puntero_objeto_disparo en IY.
 161+ 8EBC              ;       Rutinas_de_impresion en IX.
 162+ 8EBC              ;       Puntero_de_impresion en HL.
 163+ 8EBC              ;       Impacto/Dirección en BC.
 164+ 8EBC
 165+ 8EBC CD 23 8F     17 call Almacena_disparo
 166+ 8EBF 18 52            jr 6F                                             ; RET.
 167+ 8EC1
 168+ 8EC1              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EC1              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EC1              ;
 171+ 8EC1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EC1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EC1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EC1
 175+ 8EC1 2A A5 89     4 ld hl,(Posicion_actual)
 176+ 8EC4
 177+ 8EC4              ;   Amadeus o entidad ???.
 178+ 8EC4
 179+ 8EC4 3A D1 89         ld a,(Ctrl_0)
 180+ 8EC7 CB 77            bit 6,a
 181+ 8EC9 28 0A            jr z,11F
 182+ 8ECB
 183+ 8ECB              ; 	Dispara Amadeus.
 184+ 8ECB
 185+ 8ECB 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8ECD CD 0A 96         call PreviousScan
 187+ 8ED0 CD 0A 96         call PreviousScan
 188+ 8ED3
 189+ 8ED3              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8ED3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8ED3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8ED3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8ED3
 194+ 8ED3 18 11            jr 13F
 195+ 8ED5
 196+ 8ED5              ; 	Dispara Entidad.
 197+ 8ED5
 198+ 8ED5 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8ED8              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8ED8
 201+ 8ED8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8ED8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8ED8
 204+ 8ED8 C5               push bc
 205+ 8ED9 06 10            ld b,16
 206+ 8EDB CD FB 95     12 call NextScan
 207+ 8EDE 10 FB            djnz 12B
 208+ 8EE0 C1               pop bc
 209+ 8EE1
 210+ 8EE1 CD 14 8F         call Ajusta_disparo_parte_derecha
 211+ 8EE4 18 06            jr 18F
 212+ 8EE6
 213+ 8EE6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8EE6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8EE6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8EE6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8EE6
 218+ 8EE6 CD 14 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8EE9 CD 90 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EEC              ;                                                       ; _al generar el disparo.
 221+ 8EEC
 222+ 8EEC              ; LLegados a este punto tendremos:
 223+ 8EEC              ;
 224+ 8EEC              ;       Puntero_objeto_disparo en IY.
 225+ 8EEC              ;       Rutinas_de_impresion en IX.
 226+ 8EEC              ;       Puntero_de_impresion en HL.
 227+ 8EEC              ;       Impacto/Dirección en BC.
 228+ 8EEC
 229+ 8EEC CD 23 8F     18 call Almacena_disparo
 230+ 8EEF 18 22            jr 6F                                               ; RET.
 231+ 8EF1
 232+ 8EF1              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EF1
 234+ 8EF1 28 11        3 jr z,5F
 235+ 8EF3
 236+ 8EF3              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EF3              ;
 238+ 8EF3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EF3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EF3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EF3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EF3
 243+ 8EF3              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EF3              ;	   ""        ""       "f9", B="1"
 245+ 8EF3              ;	   ""        ""       "fb", B="2"
 246+ 8EF3              ; 	   ""        ""       "fb", B="3"
 247+ 8EF3
 248+ 8EF3 2A A5 89     	ld hl,(Posicion_actual)
 249+ 8EF6 CD FB 95     	call NextScan
 250+ 8EF9
 251+ 8EF9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EF9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EF9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EF9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EF9
 256+ 8EF9 CD 1B 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EFC
 258+ 8EFC              ; 	No se produce impacto. B="$80"
 259+ 8EFC              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EFC
 261+ 8EFC 01 80 80         ld bc,$8080
 262+ 8EFF
 263+ 8EFF              ; 	LLegados a este punto tendremos:
 264+ 8EFF              ;
 265+ 8EFF              ;       Puntero_objeto_disparo en IY.
 266+ 8EFF              ;       Rutinas_de_impresion en IX.
 267+ 8EFF              ;       Puntero_de_impresion en HL.
 268+ 8EFF              ;       Impacto/Dirección en BC.
 269+ 8EFF
 270+ 8EFF CD 23 8F         call Almacena_disparo
 271+ 8F02 18 0F            jr 6F                                           ; RET.
 272+ 8F04
 273+ 8F04              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F04              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F04              ;
 276+ 8F04              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F04              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F04              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F04              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F04
 281+ 8F04 2A A5 89     5 ld hl,(Posicion_actual)
 282+ 8F07 CD FB 95     	call NextScan
 283+ 8F0A
 284+ 8F0A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F0A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F0A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F0A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F0A
 289+ 8F0A CD 14 8F         call Ajusta_disparo_parte_derecha
 290+ 8F0D
 291+ 8F0D              ; 	No se produce impacto. B="$80"
 292+ 8F0D              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F0D
 294+ 8F0D 01 80 80     15 ld bc,$8080
 295+ 8F10
 296+ 8F10              ; 	LLegados a este punto tendremos:
 297+ 8F10              ;
 298+ 8F10              ;       Puntero_objeto_disparo en IY.
 299+ 8F10              ;       Rutinas_de_impresion en IX.
 300+ 8F10              ;       Puntero_de_impresion en HL.
 301+ 8F10              ;       Impacto/Dirección en BC.
 302+ 8F10
 303+ 8F10 CD 23 8F         call Almacena_disparo
 304+ 8F13
 305+ 8F13 C9           6 ret
 306+ 8F14
 307+ 8F14              ; ----------------------------------------------------------------
 308+ 8F14              ;
 309+ 8F14              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F14              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F14              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F14
 313+ 8F14 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F15 FE 02            cp 2
 315+ 8F17 38 01            jr c,1F
 316+ 8F19 23               inc hl
 317+ 8F1A C9           1 ret
 318+ 8F1B
 319+ 8F1B 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F1C FE 01        	cp 1
 321+ 8F1E 20 01        	jr nz,1F
 322+ 8F20 2B           	dec hl
 323+ 8F21 2B           1 dec hl
 324+ 8F22 C9               ret
 325+ 8F23
 326+ 8F23              ; ----------------------------------------------------------------
 327+ 8F23              ;
 328+ 8F23              ;   25/02/23
 329+ 8F23              ;
 330+ 8F23              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F23              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F23              ;
 333+ 8F23              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F23              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F23
 336+ 8F23              Almacena_disparo
 337+ 8F23
 338+ 8F23 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F24 F1               pop af
 340+ 8F25 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F26
 342+ 8F26 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F27 E6 01            and 1
 344+ 8F29 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F2B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F2B              ; 	Dispara AMADEUS.
 347+ 8F2B
 348+ 8F2B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F2B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F2B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F2B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F2B
 353+ 8F2B C5               push bc
 354+ 8F2C 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F2F 2A FD 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F32 A7               and a
 357+ 8F33 ED 42            sbc hl,bc
 358+ 8F35 CC D2 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F38 C1               pop bc
 360+ 8F39 28 54            jr z,4F
 361+ 8F3B
 362+ 8F3B 2A FD 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F3E 23               inc hl
 364+ 8F3F 23               inc hl
 365+ 8F40 22 FD 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F43              ;                                                   ; _ Disparo_(+1).
 367+ 8F43 18 18            jr 2F
 368+ 8F45
 369+ 8F45              ; Dispara una entidad.
 370+ 8F45
 371+ 8F45 C5           1 push bc
 372+ 8F46 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F49 2A FB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F4C A7               and a
 375+ 8F4D ED 42            sbc hl,bc
 376+ 8F4F CC CB 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F52 C1               pop bc
 378+ 8F53 28 3A            jr z,4F
 379+ 8F55
 380+ 8F55 2A FB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F58 23               inc hl
 382+ 8F59 23               inc hl
 383+ 8F5A 22 FB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F5D              ;                                                   ; _ Disparo_(+1).
 385+ 8F5D CD 09 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F60              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F60              ;
 388+ 8F60              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F60              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F60              ;                                                     Puntero_de_impresion en HL.
 391+ 8F60              ;                                                     Impacto/Dirección en BC.
 392+ 8F60
 393+ 8F60 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F61 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F62 23               inc hl                                          ; _ al siguiente.
 396+ 8F63 A7               and a
 397+ 8F64 20 C0            jr nz,3B
 398+ 8F66
 399+ 8F66 08               ex af,af
 400+ 8F67 ED 73 F2 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F6B F9               ld sp,hl
 402+ 8F6C
 403+ 8F6C DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F6E F5               push af                                         ; Puntero de impresión.
 405+ 8F6F FD E5            push iy                                         ; Puntero objeto.
 406+ 8F71 C5               push bc                                         ; Control.
 407+ 8F72
 408+ 8F72 ED 7B F2 89      ld sp,(Stack)
 409+ 8F76
 410+ 8F76              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F76
 412+ 8F76 21 E1 89     	ld hl,Ctrl_1
 413+ 8F79 CB C6        	set 0,(hl)
 414+ 8F7B
 415+ 8F7B DD E5        	push ix
 416+ 8F7D E1               pop hl
 417+ 8F7E F5               push af
 418+ 8F7F DD E1            pop ix
 419+ 8F81
 420+ 8F81 CD A0 7F     	call Guarda_foto_registros
 421+ 8F84
 422+ 8F84 21 E1 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F87 CB 86        	res 0,(hl)
 424+ 8F89
 425+ 8F89              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F89              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F89
 428+ 8F89 CD D2 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F8C CD CB 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F8F
 431+ 8F8F C9           4 ret
 432+ 8F90
 433+ 8F90              ; ----------------------------------------------------------------
 434+ 8F90              ;
 435+ 8F90              ;   4/3/23
 436+ 8F90              ;
 437+ 8F90              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F90              ;   _ al generarse el disparo.
 439+ 8F90              ;
 440+ 8F90              ;       "$80" ..... No se produce colisión.
 441+ 8F90              ;       "$81" ..... Se produce colisión.
 442+ 8F90
 443+ 8F90              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F90              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F90
 446+ 8F90
 447+ 8F90 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F92 E5               push hl                                        ; Puntero de impresión.
 449+ 8F93
 450+ 8F93 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F95 CD B1 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F98
 453+ 8F98 7B               ld a,e
 454+ 8F99 E6 01            and 1
 455+ 8F9B 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F9D
 457+ 8F9D E1               pop hl
 458+ 8F9E E5               push hl
 459+ 8F9F CD FB 95         call NextScan
 460+ 8FA2
 461+ 8FA2 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8FA3 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FA5 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FA7              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FA7 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FA9 CD B1 8F         call Bucle_2
 467+ 8FAC
 468+ 8FAC 43           2 ld b,e
 469+ 8FAD E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FAE FD E1            pop iy
 471+ 8FB0 C9               ret
 472+ 8FB1
 473+ 8FB1               ; ---------- ----------
 474+ 8FB1
 475+ 8FB1 06 02        Bucle_2 ld b,2
 476+ 8FB3 FD 7E 00     2 ld a,(iy)
 477+ 8FB6 A6               and (hl)
 478+ 8FB7 28 02            jr z,1F
 479+ 8FB9 1E 81            ld e,$81
 480+ 8FBB 23           1 inc hl
 481+ 8FBC FD 23            inc iy
 482+ 8FBE 10 F3            djnz 2B
 483+ 8FC0 C9               ret
 484+ 8FC1
 485+ 8FC1              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FC1              ;
 487+ 8FC1              ;   11/04/23
 488+ 8FC1              ;
 489+ 8FC1              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FC1              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FC1              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FC1              ;
 493+ 8FC1              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FC1
 495+ 8FC1              Compara_coordenadas_X
 496+ 8FC1
 497+ 8FC1              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FC1              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FC1
 500+ 8FC1              ; Preparamos registros:
 501+ 8FC1
 502+ 8FC1 21 A9 89         ld hl,Filas+6
 503+ 8FC4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FC5 23               inc hl
 505+ 8FC6 23               inc hl
 506+ 8FC7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FC8 43               ld b,e
 508+ 8FC9 21 B7 89         ld hl,Filas+20
 509+ 8FCC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FCD 21 07 8A         ld hl,Coordenadas_X_Entidad
 511+ 8FD0 CD E4 91         call Guarda_coordenadas_X
 512+ 8FD3
 513+ 8FD3              ; Preparamos registros:
 514+ 8FD3
 515+ 8FD3 21 92 85         ld hl,Amadeus_db+6
 516+ 8FD6 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FD7 23               inc hl
 518+ 8FD8 23               inc hl
 519+ 8FD9 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FDA 7B               ld a,e
 521+ 8FDB 08               ex af,af'
 522+ 8FDC 21 A0 85         ld hl,Amadeus_db+20
 523+ 8FDF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FE0 21 04 8A         ld hl,Coordenadas_X_Amadeus
 525+ 8FE3 CD E4 91         call Guarda_coordenadas_X
 526+ 8FE6
 527+ 8FE6              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FE6              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FE6
 530+ 8FE6 04               inc b
 531+ 8FE7 05               dec b
 532+ 8FE8 28 04            jr z,1F
 533+ 8FEA 06 03            ld b,3
 534+ 8FEC 18 02            jr 2F
 535+ 8FEE 06 02        1 ld b,2
 536+ 8FF0 08           2 ex af,af'
 537+ 8FF1 3C               inc a
 538+ 8FF2 3D               dec a
 539+ 8FF3 28 04            jr z,5F
 540+ 8FF5 0E 03            ld c,3
 541+ 8FF7 18 02            jr 6F
 542+ 8FF9 0E 02        5 ld c,2
 543+ 8FFB 79           6 ld a,c
 544+ 8FFC 08               ex af,af'
 545+ 8FFD 11 07 8A         ld de,Coordenadas_X_Entidad
 546+ 9000 1A           4 ld a,(de)
 547+ 9001 21 04 8A         ld hl,Coordenadas_X_Amadeus
 548+ 9004 BE           3 cp (hl)
 549+ 9005 28 0E            jr z,7F
 550+ 9007 23               inc hl
 551+ 9008 0D               dec c
 552+ 9009 20 F9            jr nz,3B
 553+ 900B 13               inc de
 554+ 900C 08               ex af,af'
 555+ 900D 4F               ld c,a
 556+ 900E 08               ex af,af'
 557+ 900F 10 EF            djnz 4B
 558+ 9011
 559+ 9011              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 9011
 561+ 9011 CD 23 92     8 call Limpia_Coordenadas_X
 562+ 9014 C9               ret
 563+ 9015
 564+ 9015              7
 565+ 9015 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9017 32 BC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 901A 21 FF 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 901D CB D6            set 2,(hl)
 569+ 901F 18 F0            jr 8B
 570+ 9021
 571+ 9021              ; -----------------------------------------------------------------------
 572+ 9021              ;
 573+ 9021              ;   17/04/23
 574+ 9021              ;
 575+ 9021
 576+ 9021              Detecta_colision_nave_entidad
 577+ 9021
 578+ 9021              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 9021
 580+ 9021 2A A5 89         ld hl,(Posicion_actual)
 581+ 9024 CD 60 95         call Calcula_puntero_de_impresion
 582+ 9027
 583+ 9027              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9027              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9027
 586+ 9027 DD E5            push ix
 587+ 9029 E1               pop hl
 588+ 902A E5               push hl
 589+ 902B
 590+ 902B              ; ----- ----- -----
 591+ 902B 1E 00            ld e,0                                         ; Indica impacto.
 592+ 902D 06 0A            ld b,10
 593+ 902F CD 5F 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9032 7B               ld a,e
 595+ 9033 FE 05            cp 5
 596+ 9035 38 0E            jr c,3F
 597+ 9037
 598+ 9037              ; LLegados a este punto:
 599+ 9037              ;
 600+ 9037              ;   HAY COLISIÓN !!!!!.
 601+ 9037              ;
 602+ 9037              ;   .db (Impacto) de Amadeus a "1".
 603+ 9037              ;   SET el bit3 de (Impacto2).
 604+ 9037              ;
 605+ 9037              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9037
 607+ 9037 21 A5 85         ld hl,Amadeus_db+25
 608+ 903A 36 01            ld (hl),1
 609+ 903C 21 FF 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 903F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 9041 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9043 18 18            jr 1F
 613+ 9045
 614+ 9045              ; -----
 615+ 9045
 616+ 9045 E1           3 pop hl
 617+ 9046 CD FB 95         call NextScan
 618+ 9049 E5               push hl
 619+ 904A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 904B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 904D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 904F 30 0C            jr nc,1F
 623+ 9051              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9051 10 DC            djnz 2B
 625+ 9053
 626+ 9053              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9053
 628+ 9053              ; LLegados a este punto:
 629+ 9053              ;
 630+ 9053              ;   NO HAY COLISIÓN !!!!!.
 631+ 9053              ;
 632+ 9053              ;   .db (Impacto) de Amadeus a "0".
 633+ 9053              ;   RES el bit2 de (Impacto2).
 634+ 9053              ;
 635+ 9053              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9053              ;   Lo colocamos a "0".
 637+ 9053
 638+ 9053 21 FF 89         ld hl,Impacto2
 639+ 9056 CB 96            res 2,(hl)
 640+ 9058 2A 00 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 905B 36 00            ld (hl),0
 642+ 905D
 643+ 905D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 905E C9               ret
 645+ 905F
 646+ 905F               ; ---------- ----------
 647+ 905F
 648+ 905F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 9060 3A A4 89         ld a,(Columns)
 650+ 9063 47               ld b,a
 651+ 9064 FD 7E 00     2 ld a,(iy)
 652+ 9067 BE               cp (hl)
 653+ 9068 28 01            jr z,1F
 654+ 906A
 655+ 906A 1C               inc e
 656+ 906B
 657+ 906B 23           1 inc hl
 658+ 906C FD 23            inc iy
 659+ 906E 10 F4            djnz 2B
 660+ 9070 C1               pop bc
 661+ 9071 C9               ret
 662+ 9072
 663+ 9072              ; -------------------------------------------------------------------------------------------------------------
 664+ 9072              ;
 665+ 9072              ;   13/03/23
 666+ 9072              ;
 667+ 9072              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9072              ;
 669+ 9072              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9072
 671+ 9072 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9075 7E               ld a,(hl)
 673+ 9076 A7               and a
 674+ 9077 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9078
 676+ 9078 44               ld b,h
 677+ 9079 4D               ld c,l
 678+ 907A 2A F8 89         ld hl,(Stack_snapshot_disparos)
 679+ 907D E5               push hl
 680+ 907E A7               and a
 681+ 907F ED 42            sbc hl,bc
 682+ 9081 E5               push hl
 683+ 9082 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 9083
 685+ 9083 E1               pop hl
 686+ 9084 54               ld d,h
 687+ 9085 5D               ld e,l
 688+ 9086 1B               dec de
 689+ 9087 ED B8            lddr                                                ; Limpiamos.
 690+ 9089
 691+ 9089 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 908C 22 F8 89         ld (Stack_snapshot_disparos),hl
 693+ 908F
 694+ 908F C9               ret
 695+ 9090
 696+ 9090              ; -------------------------------------------------------------------------------------------------------------
 697+ 9090              ;
 698+ 9090              ;   28/03/23
 699+ 9090              ;
 700+ 9090
 701+ 9090 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 9093 2A FD 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9096
 704+ 9096 CD 09 8D     2 call Extrae_address
 705+ 9099 7E               ld a,(hl)
 706+ 909A A7               and a
 707+ 909B 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 909D
 709+ 909D              ; ----- ----- ----- ----- ----- -----
 710+ 909D
 711+ 909D C5               push bc
 712+ 909E CD 5A 91         call foto_disparo_a_borrar
 713+ 90A1
 714+ 90A1              ; Existe colisión con este disparo???
 715+ 90A1
 716+ 90A1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 90A2 7E               ld a,(hl)
 718+ 90A3 2B               dec hl
 719+ 90A4 E6 01            and 1
 720+ 90A6 28 1D            jr z,9F
 721+ 90A8
 722+ 90A8              ;   En este punto:
 723+ 90A8              ;
 724+ 90A8              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90A8              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90A8              ;   _con la entidad).
 727+ 90A8              ;
 728+ 90A8              ;   Disparo_2A defw 0                                ; Control.
 729+ 90A8              ;    defw 0                                          ; Puntero objeto.
 730+ 90A8              ;    defw 0                                          ; Puntero de impresión.
 731+ 90A8              ;    defw 0                                          ; Rutina de impresión.
 732+ 90A8
 733+ 90A8 E5               push hl
 734+ 90A9
 735+ 90A9 06 04            ld b,4
 736+ 90AB 23           19 inc hl
 737+ 90AC 10 FD            djnz 19B
 738+ 90AE
 739+ 90AE CD 09 8D         call Extrae_address
 740+ 90B1 CD 52 9C         call Genera_coordenadas_disparo
 741+ 90B4
 742+ 90B4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90B4
 744+ 90B4 21 02 8A         ld hl,Coordenadas_disparo_certero
 745+ 90B7 72               ld (hl),d
 746+ 90B8 23               inc hl
 747+ 90B9 73               ld (hl),e
 748+ 90BA
 749+ 90BA              ; Elimino el disparo de la base de datos.
 750+ 90BA
 751+ 90BA E1               pop hl
 752+ 90BB CD D9 91         call Elimina_disparo_de_base_de_datos
 753+ 90BE 21 FF 89         ld hl,Impacto2
 754+ 90C1 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90C3
 756+ 90C3 18 06            jr 11F
 757+ 90C5
 758+ 90C5 CD 83 91     9 call Mueve_disparo
 759+ 90C8 CD 5A 91         call foto_disparo_a_borrar
 760+ 90CB
 761+ 90CB C1           11 pop bc
 762+ 90CC 18 04            jr 7F
 763+ 90CE
 764+ 90CE              ; ----- ----- ----- ----- ----- -----
 765+ 90CE
 766+ 90CE ED 42        1 sbc hl,bc
 767+ 90D0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90D2 2A FD 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90D5 23               inc hl
 770+ 90D6 23               inc hl
 771+ 90D7 22 FD 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90DA 18 BA            jr 2B
 773+ 90DC CD D2 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90DF
 775+ 90DF 01 72 85         ld bc,Disparo_11
 776+ 90E2 2A FB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90E5
 778+ 90E5 CD 09 8D     5 call Extrae_address
 779+ 90E8 7E               ld a,(hl)
 780+ 90E9 A7               and a
 781+ 90EA 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90EC
 783+ 90EC              ; ----- ----- ----- ----- ----- -----
 784+ 90EC
 785+ 90EC C5               push bc
 786+ 90ED CD 5A 91         call foto_disparo_a_borrar
 787+ 90F0
 788+ 90F0              ; Existe colisión con este disparo???
 789+ 90F0
 790+ 90F0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90F1 7E               ld a,(hl)
 792+ 90F2 2B               dec hl
 793+ 90F3 E6 01            and 1
 794+ 90F5 28 48            jr z,10F
 795+ 90F7
 796+ 90F7              ; La colisión se produce con Amadeus???
 797+ 90F7              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90F7
 799+ 90F7 E5               push hl
 800+ 90F8
 801+ 90F8 06 04            ld b,4
 802+ 90FA 23           16 inc hl
 803+ 90FB 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90FD CD 09 8D         call Extrae_address
 805+ 9100 CD 52 9C         call Genera_coordenadas_disparo
 806+ 9103
 807+ 9103 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 9104 FE 16            cp $16
 809+ 9106 38 22            jr c,15F
 810+ 9108
 811+ 9108              ; (Colisiones en filas 16 y 17).
 812+ 9108
 813+ 9108 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 9109
 815+ 9109              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 9109
 817+ 9109 21 92 85         ld hl,Amadeus_db+6
 818+ 910C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 910D 23               inc hl
 820+ 910E 23               inc hl
 821+ 910F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 9110 21 A0 85         ld hl,Amadeus_db+20
 823+ 9113 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9114 21 04 8A         ld hl,Coordenadas_X_Amadeus
 825+ 9117 CD E4 91         call Guarda_coordenadas_X
 826+ 911A
 827+ 911A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 911B
 829+ 911B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 911B
 831+ 911B 06 03            ld b,3
 832+ 911D 21 04 8A         ld hl,Coordenadas_X_Amadeus
 833+ 9120 7E           18 ld a,(hl)
 834+ 9121 BA               cp d
 835+ 9122 20 03            jr nz,17F
 836+ 9124
 837+ 9124              ; Colisión Amadeus !!!!!!!!!!
 838+ 9124
 839+ 9124 E1               pop hl
 840+ 9125 18 09            jr 14F
 841+ 9127
 842+ 9127 23           17 inc hl
 843+ 9128 10 F6            djnz 18B
 844+ 912A
 845+ 912A              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 912A              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 912A
 848+ 912A E1           15 pop hl
 849+ 912B 23               inc hl
 850+ 912C 35               dec (hl)
 851+ 912D 2B               dec hl
 852+ 912E 18 0F            jr 10F
 853+ 9130
 854+ 9130              ; -----------------------debug
 855+ 9130
 856+ 9130              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9130              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9130
 859+ 9130 E5           14 push hl
 860+ 9131 CD D9 91         call Elimina_disparo_de_base_de_datos
 861+ 9134 21 FF 89         ld hl,Impacto2
 862+ 9137 CB CE            set 1,(hl)
 863+ 9139 CD 23 92         call Limpia_Coordenadas_X
 864+ 913C
 865+ 913C E1               pop hl
 866+ 913D 18 06            jr 12F
 867+ 913F
 868+ 913F CD 83 91     10 call Mueve_disparo
 869+ 9142 CD 5A 91         call foto_disparo_a_borrar
 870+ 9145 C1           12 pop bc
 871+ 9146
 872+ 9146 18 04            jr 8F
 873+ 9148
 874+ 9148              ; ----- ----- ----- ----- ----- -----
 875+ 9148
 876+ 9148 ED 42        4 sbc hl,bc
 877+ 914A 28 0A            jr z,6F
 878+ 914C
 879+ 914C 2A FB 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 914F 23               inc hl
 881+ 9150 23               inc hl
 882+ 9151 22 FB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9154 18 8F            jr 5B
 884+ 9156
 885+ 9156 CD CB 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9159 C9               ret
 887+ 915A
 888+ 915A              ; ------------------------------------------------------------------
 889+ 915A
 890+ 915A              foto_disparo_a_borrar
 891+ 915A
 892+ 915A 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 915B A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 915C C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 915D
 896+ 915D E5               push hl
 897+ 915E 23               inc hl
 898+ 915F 23               inc hl
 899+ 9160 ED 73 F2 89      ld (Stack),sp
 900+ 9164 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9165 FD E1            pop iy
 902+ 9167 DD E1            pop ix
 903+ 9169 E1               pop hl
 904+ 916A ED 7B F2 89      ld sp,(Stack)
 905+ 916E 3A E1 89         ld a,(Ctrl_1)
 906+ 9171 CB C7            set 0,a
 907+ 9173 32 E1 89         ld (Ctrl_1),a
 908+ 9176 CD A0 7F         call Guarda_foto_registros
 909+ 9179 3A E1 89         ld a,(Ctrl_1)
 910+ 917C CB 87            res 0,a
 911+ 917E 32 E1 89         ld (Ctrl_1),a
 912+ 9181 E1               pop hl
 913+ 9182 C9               ret
 914+ 9183
 915+ 9183 E5           Mueve_disparo push hl
 916+ 9184 7E               ld a,(hl)
 917+ 9185 06 04            ld b,4
 918+ 9187 23           1 inc hl
 919+ 9188 10 FD            djnz 1B
 920+ 918A
 921+ 918A              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 918A
 923+ 918A CD 09 8D         call Extrae_address
 924+ 918D
 925+ 918D E6 01            and 1
 926+ 918F 28 2E            jr z,2F
 927+ 9191
 928+ 9191              ; Disparo hacia arriba, (Amadeus).
 929+ 9191
 930+ 9191              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 9191              ; _ de la dificultad.
 932+ 9191
 933+ 9191 CD 0A 96         call PreviousScan
 934+ 9194 CD 0A 96         call PreviousScan
 935+ 9197 CD 0A 96         call PreviousScan
 936+ 919A CD 0A 96         call PreviousScan
 937+ 919D
 938+ 919D              ; Detecta si el disparo de Amadeus sale de pantalla:
 939+ 919D
 940+ 919D 7C               ld a,h
 941+ 919E FE 40            cp $40
 942+ 91A0 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 943+ 91A2
 944+ 91A2              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 945+ 91A2
 946+ 91A2 EB               ex de,hl
 947+ 91A3 06 04            ld b,4
 948+ 91A5 2B           6 dec hl
 949+ 91A6 10 FD            djnz 6B
 950+ 91A8
 951+ 91A8 CD D9 91         call Elimina_disparo_de_base_de_datos
 952+ 91AB E1               pop hl
 953+ 91AC 18 10            jr 7F
 954+ 91AE
 955+ 91AE              ; Se ha desplazado la bala, compruebo colisión.
 956+ 91AE
 957+ 91AE D5           3 push de
 958+ 91AF C5               push bc
 959+ 91B0
 960+ 91B0 CD 90 8F         call Comprueba_Colision
 961+ 91B3
 962+ 91B3              ; B="$80", no hay colisión. B="$81", existe colisión.
 963+ 91B3
 964+ 91B3 78               ld a,b
 965+ 91B4
 966+ 91B4 C1               pop bc
 967+ 91B5 D1               pop de
 968+ 91B6
 969+ 91B6 EB               ex de,hl
 970+ 91B7
 971+ 91B7 73               ld (hl),e
 972+ 91B8 23               inc hl
 973+ 91B9 72               ld (hl),d
 974+ 91BA
 975+ 91BA E1           4 pop hl
 976+ 91BB 23               inc hl
 977+ 91BC 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 978+ 91BD 2B               dec hl
 979+ 91BE C9           7 ret
 980+ 91BF
 981+ 91BF              ; Disparo hacia abajo, (Entidad).
 982+ 91BF
 983+ 91BF              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 984+ 91BF              ;! _ de la dificultad.
 985+ 91BF
 986+ 91BF CD FB 95     2 call NextScan
 987+ 91C2 CD FB 95         call NextScan
 988+ 91C5 CD FB 95         call NextScan
 989+ 91C8              ;    call NextScan
 990+ 91C8
 991+ 91C8              ; Detecta si el disparo de la entidad sale de la pantalla.
 992+ 91C8
 993+ 91C8 7C               ld a,h
 994+ 91C9 FE 58            cp $58
 995+ 91CB 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 996+ 91CD
 997+ 91CD EB               ex de,hl
 998+ 91CE 06 04            ld b,4
 999+ 91D0 2B           5 dec hl
1000+ 91D1 10 FD            djnz 5B
1001+ 91D3
1002+ 91D3 CD D9 91         call Elimina_disparo_de_base_de_datos
1003+ 91D6 E1               pop hl
1004+ 91D7 18 E5            jr 7B
1005+ 91D9
1006+ 91D9              ; HL apunta al primer byte de la base de datos del disparo.
1007+ 91D9
1008+ 91D9 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1009+ 91DC AF               xor a
1010+ 91DD 77               ld (hl),a
1011+ 91DE 54               ld d,h
1012+ 91DF 5D               ld e,l
1013+ 91E0 13               inc de
1014+ 91E1 ED B0            ldir
1015+ 91E3 C9               ret
1016+ 91E4
1017+ 91E4              ; -----------------------------------------------------------------
1018+ 91E4              ;
1019+ 91E4              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1020+ 91E4              ;
1021+ 91E4              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1022+ 91E4              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1023+ 91E4              ;
1024+ 91E4              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1025+ 91E4              ;
1026+ 91E4              ;   INPUTS:
1027+ 91E4              ;
1028+ 91E4              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1029+ 91E4              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1030+ 91E4              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1031+ 91E4
1032+ 91E4              ;   MODIFICA: A, HL, DE y C
1033+ 91E4
1034+ 91E4 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1035+ 91E5 79               ld a,c
1036+ 91E6 E6 01            and 1
1037+ 91E8 20 03            jr nz,1F
1038+ 91EA 14               inc d
1039+ 91EB 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1040+ 91ED
1041+ 91ED              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1042+ 91ED              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1043+ 91ED
1044+ 91ED 15           1 dec d
1045+ 91EE 23           2 inc hl
1046+ 91EF 72               ld (hl),d
1047+ 91F0
1048+ 91F0 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1049+ 91F1 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1050+ 91F2 C8               ret z
1051+ 91F3
1052+ 91F3 AF               xor a
1053+ 91F4 5F               ld e,a
1054+ 91F5 18 ED            jr Guarda_coordenadas_X
1055+ 91F7
1056+ 91F7              ; -----------------------------------------------------------------
1057+ 91F7              ;
1058+ 91F7              ;   12/04/23
1059+ 91F7              ;
1060+ 91F7
1061+ 91F7 3A FF 89     Selector_de_impactos ld a,(Impacto2)
1062+ 91FA A7               and a
1063+ 91FB C8               ret z
1064+ 91FC
1065+ 91FC FE 04            cp 4
1066+ 91FE 20 09            jr nz,1F
1067+ 9200
1068+ 9200
1069+ 9200              ; La colisión se produce por contacto entre Amadeus y una entidad.
1070+ 9200
1071+ 9200 CD 21 90         call Detecta_colision_nave_entidad
1072+ 9203
1073+ 9203 21 FF 89         ld hl,Impacto2
1074+ 9206 CB 5E            bit 3,(hl)
1075+ 9208 C0               ret nz                                               ; Existe colisión, RET.
1076+ 9209
1077+ 9209              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1078+ 9209              ; Primero analizamos si algún disparo impacta en Amadeus.
1079+ 9209
1080+ 9209 21 FF 89     1 ld hl,Impacto2
1081+ 920C CB 4E            bit 1,(hl)
1082+ 920E 28 07            jr z,2F
1083+ 9210
1084+ 9210 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1085+ 9213 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1086+ 9215 18 0B            jr 3F
1087+ 9217
1088+ 9217 21 FF 89     2 ld hl,Impacto2
1089+ 921A CB 46            bit 0,(hl)
1090+ 921C C8               ret z
1091+ 921D
1092+ 921D              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1093+ 921D
1094+ 921D 21 E1 89         ld hl,Ctrl_1
1095+ 9220 CB D6            set 2,(hl)
1096+ 9222
1097+ 9222 C9           3 ret
1098+ 9223
1099+ 9223              ; -----------------------------------------------------------------
1100+ 9223              ;
1101+ 9223              ;   16/04/23
1102+ 9223              ;
1103+ 9223
1104+ 9223 AF           Limpia_Coordenadas_X xor a
1105+ 9224 06 06            ld b,6
1106+ 9226 21 04 8A         ld hl,Coordenadas_X_Amadeus
1107+ 9229 77           1 ld (hl),a
1108+ 922A 23               inc hl
1109+ 922B 10 FC            djnz 1B
1110+ 922D C9               ret
1111+ 922E
1112+ 922E              ; -----------------------------------------------------------------
1113+ 922E              ;
1114+ 922E              ;   25/04/23
1115+ 922E              ;
1116+ 922E
1117+ 922E              Determina_resultado_comparativa
1118+ 922E
1119+ 922E              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1120+ 922E              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1121+ 922E              ;
1122+ 922E              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1123+ 922E              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1124+ 922E              ;
1125+ 922E              ;   SBC HL,DE
1126+ 922E
1127+ 922E              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1128+ 922E              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1129+ 922E
1130+ 922E              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1131+ 922E              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1132+ 922E
1133+ 922E
1134+ 922E 3A B7 89         ld a,(Cuad_objeto)
1135+ 9231 FE 02            cp 2
1136+ 9233 28 26            jr z,2F
1137+ 9235 38 24            jr c,2F
1138+ 9237
1139+ 9237              ; Cuadrantes 3º y 4º
1140+ 9237
1141+ 9237 E6 01            and 1
1142+ 9239 28 10            jr z,4F
1143+ 923B
1144+ 923B              ; Cuadrante 3º
1145+ 923B
1146+ 923B 7C               ld a,h
1147+ 923C 06 00            ld b,0
1148+ 923E
1149+ 923E CD C9 92         call Compara_cositas_H3
1150+ 9241
1151+ 9241 04               inc b
1152+ 9242 05               dec b
1153+ 9243 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1154+ 9244
1155+ 9244 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1156+ 9245 06 00            ld b,0
1157+ 9247
1158+ 9247 CD DB 92         call Compara_cositas_L3
1159+ 924A C9               ret
1160+ 924B
1161+ 924B              ; Cuadrante 4º
1162+ 924B
1163+ 924B 7C           4 ld a,h
1164+ 924C 06 00            ld b,0
1165+ 924E
1166+ 924E CD ED 92         call Compara_cositas_H4
1167+ 9251
1168+ 9251 04               inc b
1169+ 9252 05               dec b
1170+ 9253 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1171+ 9254
1172+ 9254 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1173+ 9255 06 00            ld b,0
1174+ 9257
1175+ 9257 CD 03 93         call Compara_cositas_L4
1176+ 925A C9               ret
1177+ 925B
1178+ 925B              ; Cuadrantes 1º y 2º.
1179+ 925B
1180+ 925B 28 10        2 jr z,3F
1181+ 925D
1182+ 925D              ; 1er Cuadrante
1183+ 925D
1184+ 925D 7C               ld a,h
1185+ 925E 06 00            ld b,0
1186+ 9260
1187+ 9260 CD A1 92         call Compara_cositas_H1
1188+ 9263
1189+ 9263 04               inc b
1190+ 9264 05               dec b
1191+ 9265 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1192+ 9266
1193+ 9266 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1194+ 9267 06 00            ld b,0
1195+ 9269
1196+ 9269 CD B7 92         call Compara_cositas_L1
1197+ 926C C9               ret
1198+ 926D
1199+ 926D
1200+ 926D              ; 2º Cuadrante
1201+ 926D
1202+ 926D 7C           3 ld a,h
1203+ 926E 06 00            ld b,0
1204+ 9270
1205+ 9270 CD 7D 92         call Compara_cositas_H2
1206+ 9273
1207+ 9273 04               inc b
1208+ 9274 05               dec b
1209+ 9275 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1210+ 9276
1211+ 9276 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1212+ 9277 06 00            ld b,0
1213+ 9279
1214+ 9279 CD 8F 92         call Compara_cositas_L2
1215+ 927C C9               ret
1216+ 927D
1217+ 927D A7           Compara_cositas_H2 and a
1218+ 927E 28 0D            jr z,1F
1219+ 9280              ;    cp $fd
1220+ 9280              ;    jr z,1F
1221+ 9280              ;    cp $fe
1222+ 9280              ;    jr z,1F
1223+ 9280 FE FF            cp $ff
1224+ 9282 28 09            jr z,1F
1225+ 9284 FE 01            cp $01
1226+ 9286 28 05            jr z,1F
1227+ 9288 FE 02            cp $02
1228+ 928A 28 01            jr z,1F
1229+ 928C C0               ret nz
1230+ 928D 04           1 inc b
1231+ 928E C9               ret
1232+ 928F
1233+ 928F A7           Compara_cositas_L2 and a
1234+ 9290 28 0D            jr z,1F
1235+ 9292              ;    cp $fd
1236+ 9292              ;    jr z,1F
1237+ 9292 FE FE            cp $fe
1238+ 9294 28 09            jr z,1F
1239+ 9296 FE FF            cp $ff
1240+ 9298 28 05            jr z,1F
1241+ 929A FE 01            cp $01
1242+ 929C 28 01            jr z,1F
1243+ 929E              ;    cp $02
1244+ 929E              ;    jr z,1F
1245+ 929E C0               ret nz
1246+ 929F 04           1 inc b
1247+ 92A0 C9               ret
1248+ 92A1
1249+ 92A1 A7           Compara_cositas_H1 and a
1250+ 92A2 28 11            jr z,1F
1251+ 92A4              ;    cp $fd
1252+ 92A4              ;    jr z,1F
1253+ 92A4              ;    cp $fe
1254+ 92A4              ;    jr z,1F
1255+ 92A4 FE FF            cp $ff
1256+ 92A6 28 0D            jr z,1F
1257+ 92A8 FE 01            cp $01
1258+ 92AA 28 09            jr z,1F
1259+ 92AC FE 02            cp $02
1260+ 92AE 28 05            jr z,1F
1261+ 92B0 FE 03            cp $03
1262+ 92B2 28 01            jr z,1F
1263+ 92B4 C0               ret nz
1264+ 92B5 04           1 inc b
1265+ 92B6 C9               ret
1266+ 92B7
1267+ 92B7 A7           Compara_cositas_L1 and a
1268+ 92B8 28 0D            jr z,1F
1269+ 92BA              ;    cp $fd
1270+ 92BA              ;    jr z,1F
1271+ 92BA              ;    cp $fe
1272+ 92BA              ;    jr z,1F
1273+ 92BA              ;    cp $ff
1274+ 92BA              ;    jr z,1F
1275+ 92BA FE 01            cp $01
1276+ 92BC 28 09            jr z,1F
1277+ 92BE FE 02            cp $02
1278+ 92C0 28 05            jr z,1F
1279+ 92C2 FE 03            cp $03
1280+ 92C4 28 01            jr z,1F
1281+ 92C6 C0               ret nz
1282+ 92C7 04           1 inc b
1283+ 92C8 C9               ret
1284+ 92C9
1285+ 92C9 A7           Compara_cositas_H3 and a
1286+ 92CA 28 0D            jr z,1F
1287+ 92CC              ;    cp $fd
1288+ 92CC              ;    jr z,1F
1289+ 92CC FE FE            cp $fe
1290+ 92CE 28 09            jr z,1F
1291+ 92D0 FE FF            cp $ff
1292+ 92D2 28 05            jr z,1F
1293+ 92D4 FE 01            cp $01
1294+ 92D6 28 01            jr z,1F
1295+ 92D8              ;    cp $02
1296+ 92D8              ;    jr z,1F
1297+ 92D8              ;    cp $03
1298+ 92D8              ;    jr z,1F
1299+ 92D8 C0               ret nz
1300+ 92D9 04           1 inc b
1301+ 92DA C9               ret
1302+ 92DB
1303+ 92DB A7           Compara_cositas_L3 and a
1304+ 92DC 28 0D            jr z,1F
1305+ 92DE              ;    cp $fd
1306+ 92DE              ;    jr z,1F
1307+ 92DE              ;    cp $fe
1308+ 92DE              ;    jr z,1F
1309+ 92DE              ;    cp $ff
1310+ 92DE              ;    jr z,1F
1311+ 92DE FE 01            cp $01
1312+ 92E0 28 09            jr z,1F
1313+ 92E2 FE 02            cp $02
1314+ 92E4 28 05            jr z,1F
1315+ 92E6 FE 03            cp $03
1316+ 92E8 28 01            jr z,1F
1317+ 92EA C0               ret nz
1318+ 92EB 04           1 inc b
1319+ 92EC C9               ret
1320+ 92ED
1321+ 92ED A7           Compara_cositas_H4 and a
1322+ 92EE 28 11            jr z,1F
1323+ 92F0 FE FD            cp $fd
1324+ 92F2 28 0D            jr z,1F
1325+ 92F4 FE FE            cp $fe
1326+ 92F6 28 09            jr z,1F
1327+ 92F8 FE FF            cp $ff
1328+ 92FA 28 05            jr z,1F
1329+ 92FC FE 01            cp $01
1330+ 92FE 28 01            jr z,1F
1331+ 9300              ;    cp $02
1332+ 9300              ;    jr z,1F
1333+ 9300              ;    cp $03
1334+ 9300              ;    jr z,1F
1335+ 9300 C0               ret nz
1336+ 9301 04           1 inc b
1337+ 9302 C9               ret
1338+ 9303
1339+ 9303 A7           Compara_cositas_L4 and a
1340+ 9304 28 0D            jr z,1F
1341+ 9306              ;    cp $fd
1342+ 9306              ;    jr z,1F
1343+ 9306 FE FE            cp $fe
1344+ 9308 28 09            jr z,1F
1345+ 930A FE FF            cp $ff
1346+ 930C 28 05            jr z,1F
1347+ 930E FE 01            cp $01
1348+ 9310 28 01            jr z,1F
1349+ 9312              ;    cp $02
1350+ 9312              ;    jr z,1F
1351+ 9312              ;    cp $03
1352+ 9312              ;    jr z,1F
1353+ 9312 C0               ret nz
1354+ 9313 04           1 inc b
1355+ 9314 C9               ret
# file closed: Disparo.asm
1240  9315              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9315              ; ******************************************************************************************************************************************************************************************
   2+ 9315              ;
   3+ 9315              ; 01/23
   4+ 9315              ;
   5+ 9315              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9315
   7+ 9315 CD EF 95     Draw call Prepara_draw
   8+ 9318 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9319 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 931A 28 05        	jr z,2F
  11+ 931C
  12+ 931C 3A B7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 931F 18 0C        	jr 1F
  14+ 9321 2A B5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9324 22 A5 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9327 CD B6 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 932A              ;													; _la esquina superior izquierda de la pantalla.
  18+ 932A CD 75 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 932D 3A D1 89     1 ld a,(Ctrl_0)
  20+ 9330 CB 6F        	bit 5,a
  21+ 9332 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9334
  23+ 9334 CD 4C 93     	call Comprueba_limite_horizontal
  24+ 9337 CD DC 93     	call Comprueba_limite_vertical
  25+ 933A
  26+ 933A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 933A
  28+ 933A CD 29 95     3 call calcula_CColumnass
  29+ 933D CD 60 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9340 CD B5 95     	call Define_rutina_de_impresion
  31+ 9343
  32+ 9343 3A D1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9346 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9348 32 D1 89     	ld (Ctrl_0),a
  35+ 934B
  36+ 934B C9           	ret
  37+ 934C
  38+ 934C              ; *******************************************************************************************************************************************************************************************
  39+ 934C              ;	21/01/23
  40+ 934C              ;
  41+ 934C              ; 	Comprueba_limite_horizontal.
  42+ 934C              ;
  43+ 934C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 934C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 934C              ;
  46+ 934C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 934C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 934C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 934C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 934C
  51+ 934C
  52+ 934C
  53+ 934C 3A D1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 934F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9351 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9353 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9355 32 D1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9358 18 09            jr 6F
  59+ 935A CB 5F        1 bit 3,a
  60+ 935C 28 0A            jr z,2F
  61+ 935E E6 F7            and $f7
  62+ 9360 32 D1 89         ld (Ctrl_0),a
  63+ 9363 CD B6 94     6 call Inicializacion
  64+ 9366 18 5B            jr 5F
  65+ 9368 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9369
  67+ 9369              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9369              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9369
  70+ 9369 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 936A 2A DC 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 936D CD BB 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9370 67           	ld h,a
  74+ 9371 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9372 CD BB 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9375 67           	ld h,a
  77+ 9376 A7           	and a
  78+ 9377 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9379 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 937A 3A B7 89     	ld a,(Cuad_objeto)
  81+ 937D FE 02        	cp 2
  82+ 937F 38 1E        	jr c,3F
  83+ 9381 28 1C        	jr z,3F
  84+ 9383 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9384 28 23            jr z,7F
  86+ 9386 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9388 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 938A E1           	pop hl
  89+ 938B
  90+ 938B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 938B              ; _para indicar con E="2" en caso necesario.
  92+ 938B
  93+ 938B E5               push hl
  94+ 938C C5               push bc
  95+ 938D CD BB 98     	call calcula_tercio
  96+ 9390 FE 01        	cp 1
  97+ 9392 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9394 CD C4 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 9397 28 26            jr z,9F
 100+ 9399 38 24            jr c,9F
 101+ 939B 1E 00        11 ld e,0
 102+ 939D 18 22            jr 8F
 103+ 939F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93A0 28 07        	jr z, 7F
 105+ 93A2 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93A4 1E 00         	ld e,0
 107+ 93A6 E1           	pop hl
 108+ 93A7 18 04        	jr 4F
 109+ 93A9 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93AB 18 15            jr 10F
 111+ 93AD
 112+ 93AD              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93AD              ; _para indicar con E="2" en caso necesario.
 114+ 93AD
 115+ 93AD E5           4 push hl
 116+ 93AE C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93AF CD BB 98     	call calcula_tercio
 118+ 93B2 FE 01        	cp 1
 119+ 93B4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93B6 CD C4 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93B9 28 04            jr z,9F
 122+ 93BB 30 02            jr nc,9F
 123+ 93BD 18 02        	jr 8F
 124+ 93BF 1E 02        9 ld e,2
 125+ 93C1 C1           8 pop bc
 126+ 93C2 E1           10 pop hl
 127+ 93C3 C9           5 ret
 128+ 93C4
 129+ 93C4              ; --------------------
 130+ 93C4              ;
 131+ 93C4              ; 25/08/22
 132+ 93C4
 133+ 93C4 CD BB 98     Comprueba_centro call calcula_tercio
 134+ 93C7 67               ld h,a
 135+ 93C8 08           	ex af,af
 136+ 93C9 FE 02        	cp 2
 137+ 93CB 38 07        	jr c,1F
 138+ 93CD 28 05        	jr z,1F
 139+ 93CF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93D2 18 03        	jr 2F
 141+ 93D4 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93D7 08           2 ex af,af
 143+ 93D8 A7               and a
 144+ 93D9 ED 42            sbc hl,bc
 145+ 93DB C9               ret
 146+ 93DC
 147+ 93DC              ; *********************************************************************************************************************************************************************************************
 148+ 93DC              ;
 149+ 93DC              ;   16/8/22
 150+ 93DC              ;
 151+ 93DC              ;	Comprueba_limite_vertical
 152+ 93DC              ;
 153+ 93DC              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93DC              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93DC              ;
 156+ 93DC
 157+ 93DC 2A A5 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93DF 7D           	ld a,l
 159+ 93E0 E6 1F        	and $1F
 160+ 93E2 57           	ld d,a
 161+ 93E3 3A DE 89     	ld a,(Limite_vertical)
 162+ 93E6 BA           	cp d 											; Límite - Posición.
 163+ 93E7 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 93E8 3A B7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 93EB CB 47        	bit 0,a
 166+ 93ED 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 93EF
 168+ 93EF              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 93EF
 170+ 93EF 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 93F0 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 93F2
 173+ 93F2              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 93F2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 93F2
 176+ 93F2 3A A9 89         ld a,(Coordenada_X)
 177+ 93F5 16 0F            ld d,Centro_izquierda
 178+ 93F7 A7               and a
 179+ 93F8 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 93F9 28 1E            jr z,3F
 181+ 93FB 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 93FD              ;                                                    ; _salimos sin modificar nada.
 183+ 93FD 18 0E            jr 2F
 184+ 93FF 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9400 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9402
 187+ 9402              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9402              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9402
 190+ 9402 3A A9 89         ld a,(Coordenada_X)
 191+ 9405 16 10            ld d,Centro_derecha
 192+ 9407 A7               and a
 193+ 9408 92               sub d
 194+ 9409 28 0E            jr z,3F
 195+ 940B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 940D              ;                                                    ; _salimos sin modificar nada.
 197+ 940D CB 43        2 bit 0,e
 198+ 940F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9411 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9412 CD A6 94         call Modificaccionne
 201+ 9415 C1           	pop bc
 202+ 9416 CD B6 94         call Inicializacion
 203+ 9419 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 941A
 205+ 941A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 941A
 207+ 941A C5           4 push bc
 208+ 941B 01 A4 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 941E 0A           	ld a,(bc)
 210+ 941F 3D           	dec a
 211+ 9420 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9421 7D           	ld a,l
 213+ 9422 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9423 CB 47        	bit 0,a
 215+ 9425 28 03        	jr z,5F
 216+ 9427 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9428 18 2E        	jr 7F
 218+ 942A
 219+ 942A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 942A
 221+ 942A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 942B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 942C 3A D1 89     	ld a,(Ctrl_0)
 224+ 942F CB 4F        	bit 1,a
 225+ 9431 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9433 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9434
 228+ 9434              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9434
 230+ 9434 1C               inc e
 231+ 9435 1D               dec e
 232+ 9436 20 07            jr nz,12F
 233+ 9438 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9439 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 943A 22 A5 89     	ld (Posicion_actual),hl
 236+ 943D 18 44        13 jr 9F
 237+ 943F CB 43        12 bit 0,e
 238+ 9441 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9443              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9443 C1           	pop bc
 241+ 9444 18 D3        	jr 3B
 242+ 9446 80           14 add b
 243+ 9447 6F               ld l,a
 244+ 9448 22 A5 89     	ld (Posicion_actual),hl
 245+ 944B CD A6 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 944E 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9450 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9452 32 D1 89         ld (Ctrl_0),a
 249+ 9455 F1           	pop af
 250+ 9456 18 2B        	jr 9F
 251+ 9458
 252+ 9458              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9458
 254+ 9458 F5           7 push af
 255+ 9459 3A D1 89     	ld a,(Ctrl_0)
 256+ 945C CB 47        	bit 0,a
 257+ 945E 20 1D        	jr nz,8F
 258+ 9460 F1           	pop af
 259+ 9461
 260+ 9461              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9461
 262+ 9461 1C           	inc e
 263+ 9462 1D               dec e
 264+ 9463 20 07            jr nz,10F
 265+ 9465 90           	sub b
 266+ 9466 6F               ld l,a
 267+ 9467 22 A5 89     	ld (Posicion_actual),hl
 268+ 946A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 946C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 946C CB 43        10 bit 0,e
 271+ 946E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9470              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9470 C1           	pop bc
 274+ 9471 18 A6        	jr 3B
 275+ 9473 90           16 sub b
 276+ 9474 6F               ld l,a
 277+ 9475 22 A5 89     	ld (Posicion_actual),hl
 278+ 9478 CD A6 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 947B 18 06            jr 9F
 280+ 947D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 947F 32 D1 89         ld (Ctrl_0),a
 282+ 9482 F1           	pop af
 283+ 9483 C1           9 pop bc
 284+ 9484 1E 00        	ld e,0
 285+ 9486 CD B6 94         call Inicializacion
 286+ 9489 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 948A 08           	ex af,af
 288+ 948B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 948C 18 8B            jr 3B
 290+ 948E
 291+ 948E              ; --------------------
 292+ 948E
 293+ 948E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9490 CD 0A 96     1 call PreviousScan
 295+ 9493 10 FB            djnz 1B
 296+ 9495 22 A5 89     	ld (Posicion_actual),hl
 297+ 9498 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9499 C9           	ret
 299+ 949A
 300+ 949A              ; --------------------
 301+ 949A
 302+ 949A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 949C CD FB 95     1 call NextScan
 304+ 949F 10 FB            djnz 1B
 305+ 94A1 22 A5 89     	ld (Posicion_actual),hl
 306+ 94A4 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94A5 C9           	ret
 308+ 94A6
 309+ 94A6              ; --------------------
 310+ 94A6              ;
 311+ 94A6              ;	22/01/23
 312+ 94A6              ;
 313+ 94A6              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94A6              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94A6              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94A6
 317+ 94A6
 318+ 94A6              Modificaccionne
 319+ 94A6
 320+ 94A6 3A B7 89     	ld a,(Cuad_objeto)
 321+ 94A9 FE 02        	cp 2
 322+ 94AB CC 8E 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94AE DC 8E 94         call c,Modifica_Pos_actual
 324+ 94B1 C8           	ret z
 325+ 94B2 CD 9A 94         call Modifica_Pos_actual2
 326+ 94B5 C9               ret
 327+ 94B6
 328+ 94B6              ; *************************************************************************************************************************************************************************************************
 329+ 94B6              ;
 330+ 94B6              ;	13/8/22
 331+ 94B6              ;
 332+ 94B6              ;	Inicializacion
 333+ 94B6              ;
 334+ 94B6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94B6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94B6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94B6              ;
 338+ 94B6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94B6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94B6              ;	_ desaparece/aparece.
 341+ 94B6
 342+ 94B6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94B6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94B6              ;
 345+ 94B6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94B6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94B6              ; 		   [E] ="0"
 348+ 94B6
 349+ 94B6              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94B6
 351+ 94B6 CD BB 98     Inicializacion call calcula_tercio
 352+ 94B9 28 36        	jr z,primit
 353+ 94BB E6 02        	and 2
 354+ 94BD 20 07        	jr nz,segmit
 355+ 94BF 7D           	ld a,l
 356+ 94C0 FE 7F        	cp $7f
 357+ 94C2 38 2D        	jr c,primit
 358+ 94C4 28 2B        	jr z,primit
 359+ 94C6 CD 23 95     segmit call column
 360+ 94C9 38 13        	jr c,tercuad
 361+ 94CB 3E 04        cuarcuad ld a,4
 362+ 94CD 32 B7 89     	ld (Cuad_objeto),a
 363+ 94D0 21 20 48     	ld hl,$4820
 364+ 94D3 22 DC 89     	ld (Limite_horizontal),hl
 365+ 94D6 21 DE 89     	ld hl,Limite_vertical
 366+ 94D9 36 0D        	ld (hl),$0d
 367+ 94DB 08           	ex af,af
 368+ 94DC 18 3C        	jr 1F
 369+ 94DE              tercuad
 370+ 94DE 3E 03        	ld a,3
 371+ 94E0 32 B7 89     	ld (Cuad_objeto),a
 372+ 94E3 21 20 48     	ld hl,$4820
 373+ 94E6 22 DC 89     	ld (Limite_horizontal),hl
 374+ 94E9 21 DE 89     	ld hl,Limite_vertical
 375+ 94EC 36 12        	ld (hl),$12
 376+ 94EE 08           	ex af,af
 377+ 94EF 18 29        	jr 1F
 378+ 94F1 CD 23 95     primit call column
 379+ 94F4 38 13        	jr c, primcuad
 380+ 94F6              segcuad
 381+ 94F6 3E 02        	ld a,2
 382+ 94F8 32 B7 89     	ld (Cuad_objeto),a
 383+ 94FB 21 C0 4F     	ld hl,$4fc0
 384+ 94FE 22 DC 89     	ld (Limite_horizontal),hl
 385+ 9501 21 DE 89     	ld hl,Limite_vertical
 386+ 9504 36 0D        	ld (hl),$0d
 387+ 9506 08           	ex af,af
 388+ 9507 18 11        	jr 1F
 389+ 9509              primcuad
 390+ 9509 3E 01        	ld a,1
 391+ 950B 32 B7 89     	ld (Cuad_objeto),a
 392+ 950E 21 C0 4F     	ld hl,$4fc0
 393+ 9511 22 DC 89     	ld (Limite_horizontal),hl
 394+ 9514 21 DE 89     	ld hl,Limite_vertical
 395+ 9517 36 12        	ld (hl),$12
 396+ 9519 08           	ex af,af
 397+ 951A CD 27 9C     1 call Genera_coordenadas
 398+ 951D 21 D1 89     	ld hl,Ctrl_0
 399+ 9520 CB EE        	set 5,(hl)
 400+ 9522 C9           	ret
 401+ 9523
 402+ 9523              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9523
 404+ 9523              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9523              ;
 406+ 9523              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9523
 408+ 9523 7D           column ld a,l
 409+ 9524 E6 1F        	and $1f
 410+ 9526 FE 10         	cp $10
 411+ 9528 C9            	ret
 412+ 9529
 413+ 9529              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9529              ;
 415+ 9529              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9529              ;
 417+ 9529              ; 14/12/22
 418+ 9529              ;
 419+ 9529              ;	Modifica: A y BC.
 420+ 9529
 421+ 9529 3A B7 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 952C E6 01        	and 1
 423+ 952E 28 17        	jr z,1F
 424+ 9530
 425+ 9530              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9530
 427+ 9530 3A A9 89     	ld a,(Coordenada_X)
 428+ 9533 47           	ld b,a
 429+ 9534 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9535 79           	ld a,c
 431+ 9536 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9537 38 08        	jr c,2F
 433+ 9539 47           	ld b,a
 434+ 953A 79           	ld a,c
 435+ 953B 90           	sub b
 436+ 953C 32 DB 89     	ld (Columnas),a
 437+ 953F 18 1B        	jr 4F
 438+ 9541 79           2 ld a,c
 439+ 9542 32 DB 89     	ld (Columnas),a
 440+ 9545 18 15        	jr 4F
 441+ 9547
 442+ 9547              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9547
 444+ 9547 3A A9 89     1 ld a,(Coordenada_X)
 445+ 954A 81           	add c
 446+ 954B 3D           	dec a
 447+ 954C D6 1F        	sub $1f
 448+ 954E 38 08        	jr c,3F
 449+ 9550 47           	ld b,a
 450+ 9551 79           	ld a,c
 451+ 9552 90           	sub b
 452+ 9553 32 DB 89     	ld (Columnas),a
 453+ 9556 18 04        	jr 4F
 454+ 9558 79           3 ld a,c
 455+ 9559 32 DB 89     	ld (Columnas),a
 456+ 955C D9           4 exx
 457+ 955D 4F           	ld c,a
 458+ 955E D9           	exx
 459+ 955F C9            ret
 460+ 9560
 461+ 9560              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9560              ;
 463+ 9560              ; 7/1/23
 464+ 9560              ;
 465+ 9560              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9560              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9560              ;
 468+ 9560              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9560              ;	DESTRUYE: HL,B Y A.
 470+ 9560
 471+ 9560 3A B7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9563 FE 02        	cp 2
 473+ 9565 38 18        	jr c,1F
 474+ 9567 28 16        	jr z,1F
 475+ 9569 E6 01        	and 1
 476+ 956B 28 0D        	jr z,3F
 477+ 956D
 478+ 956D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 956D
 480+ 956D CD A9 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9570
 482+ 9570 7D           9 ld a,l
 483+ 9571 E6 1F        	and $1f
 484+ 9573 28 2A        	jr z,7F
 485+ 9575 2B           	dec hl
 486+ 9576 10 F8        	djnz 9B
 487+ 9578 18 25        	jr 7F
 488+ 957A
 489+ 957A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 957A
 491+ 957A 2A A5 89     3 ld hl,(Posicion_actual)
 492+ 957D 18 20        	jr 7F
 493+ 957F
 494+ 957F 28 14        1 jr z,2F
 495+ 9581
 496+ 9581              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9581
 498+ 9581 CD A9 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9584
 500+ 9584 7D           4 ld a,l
 501+ 9585 E6 1F        	and $1f
 502+ 9587 28 03        	jr z,6F
 503+ 9589 2B           	dec hl
 504+ 958A 10 F8        	djnz 4B
 505+ 958C 06 0F        6 ld b,15
 506+ 958E CD 0A 96     5 call PreviousScan
 507+ 9591 10 FB        	djnz 5B
 508+ 9593 18 0A        	jr 7F
 509+ 9595
 510+ 9595              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 9595
 512+ 9595 CD A9 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 9598 06 0F        	ld b,15
 514+ 959A CD 0A 96     8 call PreviousScan
 515+ 959D 10 FB        	djnz 8B
 516+ 959F
 517+ 959F E5           7 push hl
 518+ 95A0 DD E1        	pop ix
 519+ 95A2
 520+ 95A2 2A A7 89     	ld hl,(Puntero_objeto)
 521+ 95A5 E5           	push hl
 522+ 95A6 FD E1        	pop iy
 523+ 95A8
 524+ 95A8 C9           	ret
 525+ 95A9
 526+ 95A9              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95A9              ;
 528+ 95A9              ;	2/1/23
 529+ 95A9              ;
 530+ 95A9              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95A9              ;
 532+ 95A9              ;	Tras esta rutina tenemos:
 533+ 95A9              ;
 534+ 95A9              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95A9              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95A9              ;
 537+ 95A9              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95A9
 539+ 95A9 2A A5 89     Operandos ld hl,(Posicion_actual)
 540+ 95AC 3A DB 89     	ld a,(Columnas)
 541+ 95AF 3D           	dec a
 542+ 95B0 20 01        	jr nz,1F
 543+ 95B2 3C           	inc a
 544+ 95B3 47           1 ld b,a
 545+ 95B4 C9           	ret
 546+ 95B5
 547+ 95B5              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95B5              ;
 549+ 95B5              ;	3/1/23
 550+ 95B5              ;
 551+ 95B5              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95B5              ;
 553+ 95B5              ;	Destruye: A,B,HL y DE.
 554+ 95B5
 555+ 95B5              Define_rutina_de_impresion
 556+ 95B5
 557+ 95B5 3A A4 89     	ld a,(Columns)
 558+ 95B8 47           	ld b,a
 559+ 95B9 3A DB 89     	ld a,(Columnas)
 560+ 95BC B8           	cp b
 561+ 95BD 20 0D        	jr nz,2f
 562+ 95BF
 563+ 95BF              ;	La entidad se imprime entera.
 564+ 95BF
 565+ 95BF 21 8B 96     	ld hl, Indice_entidades_completas
 566+ 95C2 E6 01        	and 1
 567+ 95C4 28 02        	jr z,1F
 568+ 95C6
 569+ 95C6 23           	inc hl
 570+ 95C7 23           	inc hl
 571+ 95C8
 572+ 95C8 CD 09 8D     1 call Extrae_address
 573+ 95CB C9           	ret		;	ret
 574+ 95CC
 575+ 95CC              ;	La entidad no se imprime entera en pantalla.
 576+ 95CC
 577+ 95CC 3A B7 89     2 ld a,(Cuad_objeto)
 578+ 95CF E6 01        	and 1
 579+ 95D1 28 17        	jr z,3F
 580+ 95D3
 581+ 95D3              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95D3
 583+ 95D3 21 8F 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95D6 3A A4 89     4 ld a,(Columns)
 585+ 95D9 E6 01        	and 1
 586+ 95DB 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95DD
 588+ 95DD 23           	inc hl
 589+ 95DE 23           	inc hl
 590+ 95DF
 591+ 95DF 3A DB 89     	ld a,(Columnas)
 592+ 95E2 E6 01        	and 1
 593+ 95E4 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 95E6
 595+ 95E6 23           	inc hl
 596+ 95E7 23           	inc hl
 597+ 95E8
 598+ 95E8 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 95EA
 600+ 95EA 21 95 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 95ED 18 E7        	jr 4B
 602+ 95EF
 603+ 95EF              ; --------------------------------------------------------------------------------------------------------------------
 604+ 95EF              ;
 605+ 95EF              ;	Prepara_draw
 606+ 95EF              ;
 607+ 95EF              ;	Es una rutina de carga.
 608+ 95EF              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 95EF              ;
 610+ 95EF              ;	FUNCIONAMIENTO:
 611+ 95EF              ;
 612+ 95EF              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 95EF              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 95EF              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 95EF              ;
 616+ 95EF              ;	DESTRUYE:
 617+ 95EF              ;
 618+ 95EF              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 95EF
 620+ 95EF 21 A3 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 95F2 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 95F3 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 95F4 4E           	ld c,(hl)
 624+ 95F5 2A A5 89     	ld hl,(Posicion_actual)
 625+ 95F8 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 95FA C9           	ret
 627+ 95FB
 628+ 95FB              ;----------------------------------------------------------------------------------------------------------------
 629+ 95FB              ;
 630+ 95FB              ;	5/08/22
 631+ 95FB              ;
 632+ 95FB              ;   NextScan.
 633+ 95FB              ;
 634+ 95FB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 95FB              ;
 636+ 95FB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 95FB              ;
 638+ 95FB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 95FB              ;
 640+ 95FB              ;       DESTRUIDOS: AF y HL !!!
 641+ 95FB              ;
 642+ 95FB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 95FB              ;
 644+ 95FB
 645+ 95FB 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 95FC 7C               ld a,h
 647+ 95FD E6 07            and 7
 648+ 95FF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 9600
 650+ 9600 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 9601 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 9603 6F               ld l,a
 653+ 9604 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9605
 655+ 9605 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9606 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9608 67               ld h,a
 658+ 9609 C9               ret
 659+ 960A
 660+ 960A              ;----------------------------------------------------------------------------------------------------------------
 661+ 960A              ;
 662+ 960A              ;	5/08/22
 663+ 960A              ;
 664+ 960A              ;   PreviousScan.
 665+ 960A              ;
 666+ 960A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 960A              ;
 668+ 960A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 960A              ;
 670+ 960A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 960A              ;
 672+ 960A              ;       DESTRUIDOS: AF y HL !!!
 673+ 960A              ;
 674+ 960A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 960A              ;
 676+ 960A
 677+ 960A 7C           PreviousScan ld a,h
 678+ 960B 25               dec h               ; Dec H.
 679+ 960C E6 07            and 7
 680+ 960E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 960F
 682+ 960F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 9610 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 9612 6F               ld l,a
 685+ 9613 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 9614
 687+ 9614 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9615 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 9617 67               ld h,a
 690+ 9618 C9               ret
 691+ 9619
 692+ 9619              ; -----------------------------------------------------------------------------------
 693+ 9619              ;
 694+ 9619              ;	28/2/23
 695+ 9619              ;
 696+ 9619              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9619              ;	Extrae fotos de Album_de_fotos.
 698+ 9619
 699+ 9619 3A ED 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 961C A7           	and a
 701+ 961D C8           	ret z
 702+ 961E ED 73 F2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9622 31 00 70     	ld sp,Album_de_fotos
 704+ 9625
 705+ 9625 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9627 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9628 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9629
 709+ 9629 ED 73 F4 89  	ld (Stack_2),sp
 710+ 962D ED 7B F2 89  	ld sp,(Stack)
 711+ 9631
 712+ 9631              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9631
 714+ 9631 3E CD        	ld a,$cd
 715+ 9633 32 3B 96     	ld (Imprime),a
 716+ 9636 EB           	ex de,hl
 717+ 9637 22 3C 96     	ld (Imprime+1),hl
 718+ 963A EB           	ex de,hl
 719+ 963B
 720+ 963B              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 963B
 722+ 963B 00 00 00     Imprime db 0,0,0
 723+ 963E
 724+ 963E 3A ED 89     	ld a,(Numero_de_malotes)
 725+ 9641 3D           	dec a
 726+ 9642 28 09        	jr z,1F
 727+ 9644 32 ED 89      	ld (Numero_de_malotes),a
 728+ 9647
 729+ 9647 ED 7B F4 89   	ld sp,(Stack_2)
 730+ 964B 18 D8        	jr 2B
 731+ 964D
 732+ 964D AF           1 xor a
 733+ 964E 32 F4 89     	ld (Stack_2),a
 734+ 9651 C9           	ret
 735+ 9652
 736+ 9652              ; -----------------------------------------------------------------------------------
 737+ 9652              ;
 738+ 9652              ;	28/2/23
 739+ 9652              ;
 740+ 9652              ;	Pinta los disparos generados.
 741+ 9652
 742+ 9652              Extrae_foto_disparos
 743+ 9652
 744+ 9652 3A FA 89     	ld a,(Numero_de_disparotes)
 745+ 9655 A7           	and a
 746+ 9656 C8           	ret z
 747+ 9657 ED 73 F2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 965B 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 965E
 750+ 965E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9660 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9661 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9662
 754+ 9662 ED 73 F4 89  	ld (Stack_2),sp
 755+ 9666 ED 7B F2 89  	ld sp,(Stack)
 756+ 966A
 757+ 966A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 966A
 759+ 966A 3E CD        	ld a,$cd
 760+ 966C 32 74 96     	ld (Imprime2),a
 761+ 966F EB           	ex de,hl
 762+ 9670 22 75 96     	ld (Imprime2+1),hl
 763+ 9673 EB           	ex de,hl
 764+ 9674
 765+ 9674              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 9674
 767+ 9674 00 00 00     Imprime2 db 0,0,0
 768+ 9677
 769+ 9677 3A FA 89     	ld a,(Numero_de_disparotes)
 770+ 967A 3D           	dec a
 771+ 967B 28 09        	jr z,1F
 772+ 967D 32 FA 89      	ld (Numero_de_disparotes),a
 773+ 9680
 774+ 9680 ED 7B F4 89  	ld sp,(Stack_2)
 775+ 9684 18 D8        	jr 2B
 776+ 9686
 777+ 9686 AF           1 xor a
 778+ 9687 32 F4 89     	ld (Stack_2),a
 779+ 968A C9           	ret
 780+ 968B
# file closed: Draw_XOR.asm
1241  968B              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 968B              ;   índices de Rutinas de impresión.
   2+ 968B
   3+ 968B 9B 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 968D C8 96            defw Pinta_Amadeus_3x2
   5+ 968F
   6+ 968F 1E 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9691 BE 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9693 72 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9695
  10+ 9695 48 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9697 4C 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9699 00 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 969B
  14+ 969B
  15+ 969B              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 969B              ;
  17+ 969B              ;   12/12/22
  18+ 969B              ;
  19+ 969B              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 969B              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 969B              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 969B              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 969B              ;
  24+ 969B              ;   Modifica: DE y HL.
  25+ 969B
  26+ 969B ED 73 F2 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 969F FD F9        	ld sp,iy
  28+ 96A1 06 10            ld b,16
  29+ 96A3 D1           1 pop de
  30+ 96A4 7B               ld a,e
  31+ 96A5 AE               xor (hl)
  32+ 96A6 77           	ld (hl),a
  33+ 96A7 23           	inc hl
  34+ 96A8 7A               ld a,d
  35+ 96A9 AE               xor (hl)
  36+ 96AA 77           	ld (hl),a
  37+ 96AB 2B           	dec hl
  38+ 96AC 24           	inc h
  39+ 96AD 7C               ld a,h
  40+ 96AE E6 07            and 7
  41+ 96B0 20 0A            jr nz,2F
  42+ 96B2 7D               ld a,l
  43+ 96B3 C6 20            add a,$20
  44+ 96B5 6F               ld l,a
  45+ 96B6 38 04            jr c,2F
  46+ 96B8 7C               ld a,h
  47+ 96B9 D6 08            sub 8
  48+ 96BB 67               ld h,a
  49+ 96BC 7C           2 ld a,h
  50+ 96BD FE 58            cp $58
  51+ 96BF 28 02            jr z,3F
  52+ 96C1 10 E0            djnz 1B
  53+ 96C3 ED 7B F2 89  3 ld sp,(Stack)
  54+ 96C7 C9           	ret
  55+ 96C8
  56+ 96C8 ED 73 F2 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96CC FD F9        	ld sp,iy
  58+ 96CE 06 08            ld b,8
  59+ 96D0 D1           1 pop de
  60+ 96D1 7B               ld a,e
  61+ 96D2 AE               xor (hl)
  62+ 96D3 77           	ld (hl),a
  63+ 96D4 23           	inc hl
  64+ 96D5 7A               ld a,d
  65+ 96D6 AE               xor (hl)
  66+ 96D7 77           	ld (hl),a
  67+ 96D8 23           	inc hl
  68+ 96D9 D1           	pop de
  69+ 96DA 7B               ld a,e
  70+ 96DB AE               xor (hl)
  71+ 96DC 77           	ld (hl),a
  72+ 96DD 2B           	dec hl
  73+ 96DE 2B           	dec hl
  74+ 96DF 24           	inc h
  75+ 96E0 7C               ld a,h
  76+ 96E1 E6 07            and 7
  77+ 96E3 20 0A            jr nz,2F
  78+ 96E5 7D               ld a,l
  79+ 96E6 C6 20            add a,$20
  80+ 96E8 6F               ld l,a
  81+ 96E9 38 04            jr c,2F
  82+ 96EB 7C               ld a,h
  83+ 96EC D6 08            sub 8
  84+ 96EE 67               ld h,a
  85+ 96EF 7C           2 ld a,h
  86+ 96F0 FE 58            cp $58
  87+ 96F2 28 25            jr z,4F
  88+ 96F4 7A               ld a,d
  89+ 96F5 AE               xor (hl)
  90+ 96F6 77               ld (hl),a
  91+ 96F7 D1           	pop de
  92+ 96F8 23           	inc hl
  93+ 96F9 7B               ld a,e
  94+ 96FA AE               xor (hl)
  95+ 96FB 77           	ld (hl),a
  96+ 96FC 23           	inc hl
  97+ 96FD 7A               ld a,d
  98+ 96FE AE               xor (hl)
  99+ 96FF 77           	ld (hl),a
 100+ 9700 2B           	dec hl
 101+ 9701 2B           	dec hl
 102+ 9702 24           	inc h
 103+ 9703 7C               ld a,h
 104+ 9704 E6 07            and 7
 105+ 9706 20 0A            jr nz,3F
 106+ 9708 7D               ld a,l
 107+ 9709 C6 20            add a,$20
 108+ 970B 6F               ld l,a
 109+ 970C 38 04            jr c,3F
 110+ 970E 7C               ld a,h
 111+ 970F D6 08            sub 8
 112+ 9711 67               ld h,a
 113+ 9712 7C           3 ld a,h
 114+ 9713 FE 58            cp $58
 115+ 9715 28 02            jr z,4F
 116+ 9717 10 B7            djnz 1B
 117+ 9719 ED 7B F2 89  4 ld sp,(Stack)
 118+ 971D C9           	ret
 119+ 971E
 120+ 971E              ; ---------------------------------------------------
 121+ 971E
 122+ 971E ED 73 F2 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9722 FD F9        	ld sp,iy
 124+ 9724
 125+ 9724              ; >>>
 126+ 9724
 127+ 9724 06 10            ld b,16
 128+ 9726 D1           1 pop de
 129+ 9727 7A           	ld a,d
 130+ 9728 AE           	xor (hl)
 131+ 9729 77           	ld (hl),a
 132+ 972A 24           	inc h
 133+ 972B 7C               ld a,h
 134+ 972C E6 07            and 7
 135+ 972E 20 0C            jr nz,2F
 136+ 9730 7D               ld a,l
 137+ 9731 C6 20            add a,$20
 138+ 9733 6F               ld l,a
 139+ 9734 38 06            jr c,2F
 140+ 9736 7C               ld a,h
 141+ 9737 D6 08            sub 8
 142+ 9739 67               ld h,a
 143+ 973A 18 00            jr 2F
 144+ 973C 7C           2 ld a,h
 145+ 973D FE 58            cp $58
 146+ 973F 28 02            jr z,3F
 147+ 9741 10 E3            djnz 1B
 148+ 9743 ED 7B F2 89  3 ld sp,(Stack)
 149+ 9747 C9           	ret
 150+ 9748
 151+ 9748 ED 73 F2 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 974C FD F9        	ld sp,iy
 153+ 974E
 154+ 974E              ; >>>
 155+ 974E
 156+ 974E 06 10            ld b,16
 157+ 9750 D1           1 pop de
 158+ 9751 7B           	ld a,e
 159+ 9752 AE           	xor (hl)
 160+ 9753 77           	ld (hl),a
 161+ 9754 24           	inc h
 162+ 9755 7C               ld a,h
 163+ 9756 E6 07            and 7
 164+ 9758 20 0C            jr nz,2F
 165+ 975A 7D               ld a,l
 166+ 975B C6 20            add a,$20
 167+ 975D 6F               ld l,a
 168+ 975E 38 06            jr c,2F
 169+ 9760 7C               ld a,h
 170+ 9761 D6 08            sub 8
 171+ 9763 67               ld h,a
 172+ 9764 18 00            jr 2F
 173+ 9766 7C           2 ld a,h
 174+ 9767 FE 58            cp $58
 175+ 9769 28 02            jr z,3F
 176+ 976B 10 E3            djnz 1B
 177+ 976D ED 7B F2 89  3 ld sp,(Stack)
 178+ 9771 C9           	ret
 179+ 9772
 180+ 9772              ; ---------------------------------------------------
 181+ 9772
 182+ 9772 ED 73 F2 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9776 FD F9        	ld sp,iy
 184+ 9778 06 08            ld b,8
 185+ 977A D1           1 pop de
 186+ 977B 7A           	ld a,d
 187+ 977C AE           	xor (hl)
 188+ 977D 77           	ld (hl),a
 189+ 977E 23           	inc hl
 190+ 977F D1           	pop de
 191+ 9780 7B           	ld a,e
 192+ 9781 AE           	xor (hl)
 193+ 9782 77           	ld (hl),a
 194+ 9783 2B           	dec hl
 195+ 9784 24            	inc h
 196+ 9785 7C               ld a,h
 197+ 9786 E6 07            and 7
 198+ 9788 20 0A            jr nz,2F
 199+ 978A 7D               ld a,l
 200+ 978B C6 20            add a,$20
 201+ 978D 6F               ld l,a
 202+ 978E 38 04            jr c,2F
 203+ 9790 7C               ld a,h
 204+ 9791 D6 08            sub 8
 205+ 9793 67               ld h,a
 206+ 9794 7C           2 ld a,h
 207+ 9795 FE 58            cp $58
 208+ 9797 28 20            jr z,4F
 209+ 9799 D1               pop de
 210+ 979A 7B           	ld a,e
 211+ 979B AE           	xor (hl)
 212+ 979C 77           	ld (hl),a
 213+ 979D 23           	inc hl
 214+ 979E 7A           	ld a,d
 215+ 979F AE           	xor (hl)
 216+ 97A0 77           	ld (hl),a
 217+ 97A1 2B           	dec hl
 218+ 97A2 24           	inc h
 219+ 97A3 7C               ld a,h
 220+ 97A4 E6 07            and 7
 221+ 97A6 20 0A            jr nz,3F
 222+ 97A8 7D               ld a,l
 223+ 97A9 C6 20            add a,$20
 224+ 97AB 6F               ld l,a
 225+ 97AC 38 04            jr c,3F
 226+ 97AE 7C               ld a,h
 227+ 97AF D6 08            sub 8
 228+ 97B1 67               ld h,a
 229+ 97B2 7C           3 ld a,h
 230+ 97B3 FE 58            cp $58
 231+ 97B5 28 02            jr z,4F
 232+ 97B7 10 C1            djnz 1B
 233+ 97B9 ED 7B F2 89  4 ld sp,(Stack)
 234+ 97BD C9           	ret
 235+ 97BE
 236+ 97BE ED 73 F2 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97C2 FD F9        	ld sp,iy
 238+ 97C4 06 08            ld b,8
 239+ 97C6 D1           1 pop de
 240+ 97C7 D1           	pop de
 241+ 97C8 7B           	ld a,e
 242+ 97C9 AE           	xor (hl)
 243+ 97CA 77           	ld (hl),a
 244+ 97CB 24            	inc h
 245+ 97CC 7C               ld a,h
 246+ 97CD E6 07            and 7
 247+ 97CF 20 0A            jr nz,2F
 248+ 97D1 7D               ld a,l
 249+ 97D2 C6 20            add a,$20
 250+ 97D4 6F               ld l,a
 251+ 97D5 38 04            jr c,2F
 252+ 97D7 7C               ld a,h
 253+ 97D8 D6 08            sub 8
 254+ 97DA 67               ld h,a
 255+ 97DB 7C           2 ld a,h
 256+ 97DC FE 58            cp $58
 257+ 97DE 28 1B            jr z,4F
 258+ 97E0 D1               pop de
 259+ 97E1 7A           	ld a,d
 260+ 97E2 AE           	xor (hl)
 261+ 97E3 77           	ld (hl),a
 262+ 97E4 24           	inc h
 263+ 97E5 7C               ld a,h
 264+ 97E6 E6 07            and 7
 265+ 97E8 20 0A            jr nz,3F
 266+ 97EA 7D               ld a,l
 267+ 97EB C6 20            add a,$20
 268+ 97ED 6F               ld l,a
 269+ 97EE 38 04            jr c,3F
 270+ 97F0 7C               ld a,h
 271+ 97F1 D6 08            sub 8
 272+ 97F3 67               ld h,a
 273+ 97F4 7C           3 ld a,h
 274+ 97F5 FE 58            cp $58
 275+ 97F7 28 02            jr z,4F
 276+ 97F9 10 CB            djnz 1B
 277+ 97FB ED 7B F2 89  4 ld sp,(Stack)
 278+ 97FF C9           	ret
 279+ 9800
 280+ 9800 ED 73 F2 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9804 FD F9        	ld sp,iy
 282+ 9806 06 08            ld b,8
 283+ 9808 D1           1 pop de
 284+ 9809 7B           	ld a,e
 285+ 980A AE           	xor (hl)
 286+ 980B 77           	ld (hl),a
 287+ 980C 23           	inc hl
 288+ 980D 7A           	ld a,d
 289+ 980E AE           	xor (hl)
 290+ 980F 77           	ld (hl),a
 291+ 9810 2B           	dec hl
 292+ 9811 24             	inc h
 293+ 9812 7C               ld a,h
 294+ 9813 E6 07            and 7
 295+ 9815 20 0A            jr nz,2F
 296+ 9817 7D               ld a,l
 297+ 9818 C6 20            add a,$20
 298+ 981A 6F               ld l,a
 299+ 981B 38 04            jr c,2F
 300+ 981D 7C               ld a,h
 301+ 981E D6 08            sub 8
 302+ 9820 67               ld h,a
 303+ 9821 7C           2 ld a,h
 304+ 9822 FE 58            cp $58
 305+ 9824 28 21            jr z,4F
 306+ 9826 D1               pop de
 307+ 9827 7A           	ld a,d
 308+ 9828 AE           	xor (hl)
 309+ 9829 77           	ld (hl),a
 310+ 982A 23           	inc hl
 311+ 982B D1               pop de
 312+ 982C 7B           	ld a,e
 313+ 982D AE           	xor (hl)
 314+ 982E 77           	ld (hl),a
 315+ 982F 2B           	dec hl
 316+ 9830 24           	inc h
 317+ 9831 7C               ld a,h
 318+ 9832 E6 07            and 7
 319+ 9834 20 0A            jr nz,3F
 320+ 9836 7D               ld a,l
 321+ 9837 C6 20            add a,$20
 322+ 9839 6F               ld l,a
 323+ 983A 38 04            jr c,3F
 324+ 983C 7C               ld a,h
 325+ 983D D6 08            sub 8
 326+ 983F 67               ld h,a
 327+ 9840 7C           3 ld a,h
 328+ 9841 FE 58            cp $58
 329+ 9843 28 02            jr z,4F
 330+ 9845 10 C1            djnz 1B
 331+ 9847 ED 7B F2 89  4 ld sp,(Stack)
 332+ 984B C9           	ret
 333+ 984C
 334+ 984C ED 73 F2 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9850 FD F9        	ld sp,iy
 336+ 9852 06 08            ld b,8
 337+ 9854 D1           1 pop de
 338+ 9855 7B           	ld a,e
 339+ 9856 AE           	xor (hl)
 340+ 9857 77           	ld (hl),a
 341+ 9858 24            	inc h
 342+ 9859 7C               ld a,h
 343+ 985A E6 07            and 7
 344+ 985C 20 0A            jr nz,2F
 345+ 985E 7D               ld a,l
 346+ 985F C6 20            add a,$20
 347+ 9861 6F               ld l,a
 348+ 9862 38 04            jr c,2F
 349+ 9864 7C               ld a,h
 350+ 9865 D6 08            sub 8
 351+ 9867 67               ld h,a
 352+ 9868 7C           2 ld a,h
 353+ 9869 FE 58            cp $58
 354+ 986B 28 1C            jr z,4F
 355+ 986D D1               pop de
 356+ 986E 7A           	ld a,d
 357+ 986F AE           	xor (hl)
 358+ 9870 77           	ld (hl),a
 359+ 9871 24           	inc h
 360+ 9872 7C               ld a,h
 361+ 9873 E6 07            and 7
 362+ 9875 20 0A            jr nz,3F
 363+ 9877 7D               ld a,l
 364+ 9878 C6 20            add a,$20
 365+ 987A 6F               ld l,a
 366+ 987B 38 04            jr c,3F
 367+ 987D 7C               ld a,h
 368+ 987E D6 08            sub 8
 369+ 9880 67               ld h,a
 370+ 9881 7C           3 ld a,h
 371+ 9882 FE 58            cp $58
 372+ 9884 28 03            jr z,4F
 373+ 9886 D1               pop de
 374+ 9887 10 CB            djnz 1B
 375+ 9889 ED 7B F2 89  4 ld sp,(Stack)
 376+ 988D C9           	ret
 377+ 988E
 378+ 988E              ; ---------------------------------------------------
 379+ 988E              ;
 380+ 988E              ;   27/02/23
 381+ 988E              ;
 382+ 988E              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 988E              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 988E              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 988E
 386+ 988E ED 73 F2 89  Pinta_Disparo ld (Stack),sp
 387+ 9892 FD F9            ld sp,iy
 388+ 9894 06 04            ld b,4
 389+ 9896 D1           1 pop de
 390+ 9897 7B               ld a,e
 391+ 9898 AE               xor (hl)
 392+ 9899 77               ld (hl),a
 393+ 989A 23               inc hl
 394+ 989B 7A               ld a,d
 395+ 989C AE               xor (hl)
 396+ 989D 77               ld (hl),a
 397+ 989E 2B               dec hl
 398+ 989F
 399+ 989F 24               inc h
 400+ 98A0 7C               ld a,h
 401+ 98A1 E6 07            and 7
 402+ 98A3 20 0A            jr nz,2F
 403+ 98A5 7D               ld a,l
 404+ 98A6 C6 20            add a,$20
 405+ 98A8 6F               ld l,a
 406+ 98A9 38 04            jr c,2F
 407+ 98AB 7C               ld a,h
 408+ 98AC D6 08            sub 8
 409+ 98AE 67               ld h,a
 410+ 98AF 7C           2 ld a,h
 411+ 98B0 FE 58            cp $58
 412+ 98B2 28 02            jr z,3F
 413+ 98B4
 414+ 98B4 10 E0            djnz 1B
 415+ 98B6 ED 7B F2 89  3 ld sp,(Stack)
 416+ 98BA C9               ret
 417+ 98BB
# file closed: Rutinas_de_impresion_sprites.asm
1242  98BB              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98BB              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98BB              ;
   3+ 98BB              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98BB              ;
   5+ 98BB              ; *****************************************************************************************************************************************************************************************
   6+ 98BB              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98BB
   8+ 98BB 7C           calcula_tercio ld a,h
   9+ 98BC E6 18        	and $18
  10+ 98BE CB 2F        	sra a
  11+ 98C0 CB 2F        	sra a
  12+ 98C2 CB 2F        	sra a
  13+ 98C4 C9           	ret
  14+ 98C5
# file closed: calcula_tercio.asm
1243  98C5              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98C5              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98C5              ;
   3+ 98C5              ;
   4+ 98C5              ;	CLS.
   5+ 98C5              ;
   6+ 98C5              ;	Limpia la pantalla y define sus atributos.
   7+ 98C5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98C5              ;
   9+ 98C5              ;	COLORES: 0 ..... NEGRO
  10+ 98C5              ;    		 1 ..... AZUL
  11+ 98C5              ; 			 2 ..... ROJO
  12+ 98C5              ;			 3 ..... MAGENTA
  13+ 98C5              ; 			 4 ..... VERDE
  14+ 98C5              ; 			 5 ..... CIAN
  15+ 98C5              ;			 6 ..... AMARILLO
  16+ 98C5              ; 			 7 ..... BLANCO
  17+ 98C5              ;
  18+ 98C5              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98C5              ;
  20+ 98C5              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98C5
  22+ 98C5
  23+ 98C5 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98C8 11 01 40     	LD DE,$4001
  25+ 98CB 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98CE 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98D0 ED B0        	LDIR
  28+ 98D2 01 FF 02     	LD BC,767
  29+ 98D5 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98D6 ED B0        	LDIR
  31+ 98D8 C9           	ret
  32+ 98D9
# file closed: Cls.asm
1244  98D9              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98D9              ; ******************************************************************************************************************************************************************************************
   2+ 98D9              ;
   3+ 98D9              ;   20/05/23
   4+ 98D9              ;
   5+ 98D9              ;	Recompone_posicion_inicio
   6+ 98D9              ;
   7+ 98D9              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98D9              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98D9              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98D9              ;	_ a una u otra rutina.
  11+ 98D9
  12+ 98D9              Recompone_posicion_inicio
  13+ 98D9
  14+ 98D9 2A B5 89     	ld hl,(Posicion_inicio)
  15+ 98DC 7D           	ld a,l
  16+ 98DD E6 1F        	and $1f
  17+ 98DF 28 16        	jr z,1F
  18+ 98E1
  19+ 98E1 FE 1F        	cp $1f
  20+ 98E3 28 0D        	jr z,3F
  21+ 98E5
  22+ 98E5 21 DF 89     	ld hl,Ctrl_2
  23+ 98E8 CB C6        	set 0,(hl)
  24+ 98EA 2A A7 89     	ld hl,(Puntero_objeto)
  25+ 98ED 22 E2 89     	ld (Repone_puntero_objeto),hl
  26+ 98F0 18 08        	jr 2F
  27+ 98F2
  28+ 98F2 CD 93 9A     3 call Mov_left
  29+ 98F5 18 03        	jr 2F
  30+ 98F7
  31+ 98F7 CD 75 99     1 call Mov_right
  32+ 98FA 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98FD 22 A7 89     	ld (Puntero_objeto),hl
  34+ 9900 C9           	ret
  35+ 9901
  36+ 9901              ; ******************************************************************************************************************************************************************************************
  37+ 9901              ;
  38+ 9901              ;   27/05/23
  39+ 9901              ;
  40+ 9901              ;	Mov_down
  41+ 9901              ;
  42+ 9901              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9901              ;
  44+ 9901              ;
  45+ 9901              Mov_down
  46+ 9901
  47+ 9901 CD 63 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9904              ;																	; _ repone (Puntero_objeto).
  49+ 9904 21 D1 89     	ld hl,Ctrl_0
  50+ 9907 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9909              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9909              ; 																	; _ en el caso de que no lo haya.
  53+ 9909 3A BB 89     	ld a,(Vel_down)
  54+ 990C 47           	ld b,a
  55+ 990D 2A A5 89         ld hl,(Posicion_actual)
  56+ 9910 CD BB 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9913 E6 02        	and 2
  58+ 9915 28 0F        	jr z,1F
  59+ 9917
  60+ 9917              ; Nos encontramos en el último tercio de pantalla.
  61+ 9917              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9917
  63+ 9917 7C           	ld a,h
  64+ 9918 FE 57        	cp $57
  65+ 991A 20 0A        	jr nz,1F
  66+ 991C 7D           	ld a,l
  67+ 991D C6 20        	add $20
  68+ 991F 30 05        	jr nc,1F
  69+ 9921
  70+ 9921              ; ------------------------------
  71+ 9921 CD 11 9C     	call Reaparece_arriba
  72+ 9924              ;	call Reinicio
  73+ 9924              ; ------------------------------
  74+ 9924
  75+ 9924 18 08        	jr 3F
  76+ 9926 CD FB 95     1 call NextScan
  77+ 9929 22 A5 89     	ld (Posicion_actual),hl
  78+ 992C 10 E2            djnz 2B
  79+ 992E CD 27 9C     3 call Genera_coordenadas
  80+ 9931 C9           	ret
  81+ 9932
  82+ 9932              ; ******************************************************************************************************************************************************************************************
  83+ 9932              ;
  84+ 9932              ;   27/05/23
  85+ 9932              ;
  86+ 9932              ;	Mov_up
  87+ 9932              ;
  88+ 9932              ; 	Mueve el Sprite hacia arriba.
  89+ 9932              ;
  90+ 9932              ;
  91+ 9932              Mov_up
  92+ 9932
  93+ 9932 CD 63 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9935              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9935 21 D1 89     	ld hl,Ctrl_0
  96+ 9938 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 993A              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 993A              ; 																		; _ en el caso de que no lo haya.
  99+ 993A 3A BA 89     	ld a,(Vel_up)
 100+ 993D 47           	ld b,a
 101+ 993E 2A A5 89     	ld hl,(Posicion_actual)
 102+ 9941 CD BB 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9944 A7           	and a
 104+ 9945 20 10        	jr nz,1F
 105+ 9947
 106+ 9947              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9947              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9947
 109+ 9947 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9948 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 994A 20 0B            jr nz,1F
 112+ 994C 7D               ld a,l
 113+ 994D D6 20            sub $20
 114+ 994F 30 06            jr nc,1F
 115+ 9951 25               dec h
 116+ 9952
 117+ 9952              ; -----------------------------
 118+ 9952 CD 01 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9955              ;	call Reinicio
 120+ 9955              ; -----------------------------
 121+ 9955
 122+ 9955 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9957 CD 0A 96     1 call PreviousScan
 124+ 995A 22 A5 89     	ld (Posicion_actual),hl
 125+ 995D 10 E2            djnz 3B
 126+ 995F CD 27 9C     2 call Genera_coordenadas
 127+ 9962 C9           	ret
 128+ 9963
 129+ 9963              ; -----------------------------
 130+ 9963              ;
 131+ 9963              ;	27/5/23
 132+ 9963              ;
 133+ 9963              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9963              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9963              ;
 136+ 9963              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9963              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9963              ;
 139+ 9963              ;	Modifica: A y (Puntero_objeto).
 140+ 9963
 141+ 9963 3A DF 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9966 CB 47        	bit 0,a
 143+ 9968 C8           	ret z
 144+ 9969 CB 87        	res 0,a
 145+ 996B 32 DF 89     	ld (Ctrl_2),a
 146+ 996E 2A E2 89     	ld hl,(Repone_puntero_objeto)
 147+ 9971 22 A7 89     	ld (Puntero_objeto),hl
 148+ 9974 C9           	ret
 149+ 9975
 150+ 9975              ; ******************************************************************************************************************************************************************************************
 151+ 9975              ;
 152+ 9975              ;	19/10/22
 153+ 9975              ;
 154+ 9975              ;	Mov_right.
 155+ 9975              ;
 156+ 9975              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9975              ;
 158+ 9975
 159+ 9975 21 D1 89     Mov_right ld hl,Ctrl_0
 160+ 9978 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 997A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 997A              ; 																	; _ en el caso de que no lo haya.
 163+ 997A 3A D1 89     	ld a,(Ctrl_0)
 164+ 997D CB 77        	bit 6,a
 165+ 997F 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 9981
 167+ 9981 CD AF 9B     	call Stop_Amadeus_right
 168+ 9984 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 9985 18 4D        	jr 8F
 170+ 9987
 171+ 9987 3A A9 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 998A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 998C 20 46        	jr nz,8F
 174+ 998E
 175+ 998E 3A AB 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 9991 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 9992 28 40        	jr z,8F
 178+ 9994
 179+ 9994              ; ---------- ---------- ----------
 180+ 9994              ;
 181+ 9994              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 9994
 183+ 9994 3A B9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 9997 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 9999 28 11        	jr z,1F
 186+ 999B 38 06        	jr c,6F
 187+ 999D FE 04        	cp 4
 188+ 999F 28 14        	jr z,7F
 189+ 99A1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99A3
 191+ 99A3              ; ---------- ---------- ----------
 192+ 99A3              ;
 193+ 99A3              ; Perfiles de velocidad
 194+ 99A3              ;
 195+ 99A3
 196+ 99A3 3A AB 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99A6 FE FE        	cp $fe
 198+ 99A8 20 2A        	jr nz,8F
 199+ 99AA 18 10        	jr 3F
 200+ 99AC 3A AB 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99AF FE FD        	cp $fd
 202+ 99B1 20 21        	jr nz,8F
 203+ 99B3 18 07        	jr 3F
 204+ 99B5 3A AB 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99B8 FE FB        	cp $fb
 206+ 99BA 20 18        	jr nz,8F
 207+ 99BC
 208+ 99BC              ; ---------- ---------- ----------
 209+ 99BC
 210+ 99BC              3
 211+ 99BC CD EF 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99BF              ;	call Reinicio
 213+ 99BF
 214+ 99BF              ; ---------- ---------- ----------
 215+ 99BF              ;
 216+ 99BF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99BF
 218+ 99BF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99C1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99C2 CD DB 99     	call DESPLZ_DER
 221+ 99C5 C1           	pop bc
 222+ 99C6 10 F9        	djnz 5B
 223+ 99C8 2A A5 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99CB 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99CC 22 A5 89     	ld (Posicion_actual),hl
 226+ 99CF CD 27 9C     	call Genera_coordenadas
 227+ 99D2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99D4
 229+ 99D4              ; ---------- ---------- ----------
 230+ 99D4
 231+ 99D4 2A A5 89     8 ld hl,(Posicion_actual)
 232+ 99D7 CD DB 99     	call DESPLZ_DER
 233+ 99DA C9           2 ret
 234+ 99DB
 235+ 99DB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99DB              ;
 237+ 99DB              ;	22/9/22
 238+ 99DB              ;
 239+ 99DB
 240+ 99DB CD EA 99     DESPLZ_DER call Desplaza_derecha
 241+ 99DE CD 36 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99E1 CD 5F 9A         call Ciclo_completo
 243+ 99E4 21 D1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 99E7 CB FE        	set 7,(hl)
 245+ 99E9 C9           	ret
 246+ 99EA
 247+ 99EA              ; ******************************************************************************************************************************************************************************************
 248+ 99EA              ;	15/02/23
 249+ 99EA              ;
 250+ 99EA
 251+ 99EA 3A B9 89     Desplaza_derecha ld a,(Vel_right)
 252+ 99ED 47           	ld b,a
 253+ 99EE 2A B1 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 99F1 23           1 inc hl
 255+ 99F2 23           	inc hl
 256+ 99F3 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 99F5 22 B1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 99F8 CD 09 8D     	call Extrae_address
 259+ 99FB 22 A7 89     	ld (Puntero_objeto),hl
 260+ 99FE
 261+ 99FE              ; Modifica (Puntero_DESPLZ_izq).
 262+ 99FE
 263+ 99FE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 99FE              ; Cuántos movimientos hemos hecho ??
 265+ 99FE              ; DE contiene (Puntero_DESPLZ_der).
 266+ 99FE
 267+ 99FE 2A AD 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A01 EB           	ex de,hl
 269+ 9A02 A7           	and a
 270+ 9A03 ED 52        	sbc hl,de
 271+ 9A05 CB 3D        	srl l
 272+ 9A07 3E 08        6 ld a,8
 273+ 9A09 95           	sub l
 274+ 9A0A 30 1E        	jr nc,3F
 275+ 9A0C
 276+ 9A0C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A0C              ; B="0".
 278+ 9A0C
 279+ 9A0C 04           4 inc b
 280+ 9A0D 3C           	inc a
 281+ 9A0E 20 FC        	jr nz,4B
 282+ 9A10 78           	ld a,b
 283+ 9A11 08           	ex af,af
 284+ 9A12 2A AD 89     	ld hl,(Indice_Sprite_der)
 285+ 9A15 23           5 inc hl
 286+ 9A16 23           	inc hl
 287+ 9A17 10 FC        	djnz 5B
 288+ 9A19 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A1C CD 09 8D     	call Extrae_address
 290+ 9A1F 22 A7 89     	ld (Puntero_objeto),hl
 291+ 9A22
 292+ 9A22              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A22              ; _(Posicion_actual).
 294+ 9A22
 295+ 9A22 21 A5 89     	ld hl,Posicion_actual
 296+ 9A25 34           	inc (hl)
 297+ 9A26 08               ex af,af
 298+ 9A27 6F           	ld l,a
 299+ 9A28 18 DD        	jr 6B
 300+ 9A2A
 301+ 9A2A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A2A
 303+ 9A2A 47           3 ld b,a
 304+ 9A2B 2A AF 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A2E 23           2 inc hl
 306+ 9A2F 23           	inc hl
 307+ 9A30 10 FC        	djnz 2B
 308+ 9A32 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A35 C9           8 ret
 310+ 9A36
 311+ 9A36              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A36              ;
 313+ 9A36              ;	24/7/22
 314+ 9A36              ;
 315+ 9A36              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A36              ;
 317+ 9A36              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A36              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A36              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A36
 321+ 9A36 3A AB 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A39 A7           	and a
 323+ 9A3A 20 1F        	jr nz,1F
 324+ 9A3C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A3E 32 AB 89         ld (CTRL_DESPLZ),a
 326+ 9A41
 327+ 9A41 21 A4 89     	ld hl,Columns
 328+ 9A44 34           	inc (hl)
 329+ 9A45 3A B7 89     	ld a,(Cuad_objeto)
 330+ 9A48 E6 01        	and 1
 331+ 9A4A 28 0F        	jr z,1F
 332+ 9A4C 2A A5 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A4F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A50 22 A5 89     	ld (Posicion_actual),hl
 335+ 9A53 CD 27 9C     	call Genera_coordenadas
 336+ 9A56 CD BB 9B     	call Inc_CTRL_DESPLZ
 337+ 9A59 18 03        	jr 2F
 338+ 9A5B CD BB 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A5E C9           2 ret
 340+ 9A5F
 341+ 9A5F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A5F              ;
 343+ 9A5F              ;	24/7/22
 344+ 9A5F              ;
 345+ 9A5F              ;	Ciclo_completo.
 346+ 9A5F              ;
 347+ 9A5F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A5F              ;
 349+ 9A5F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A5F              ; 	Decrementamos (Columns).
 351+ 9A5F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A5F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A5F
 354+ 9A5F
 355+ 9A5F 3A AB 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A62 FE FF        	cp $ff
 357+ 9A64 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A66 E6 F0        	and $f0
 359+ 9A68 20 28        	jr nz,3F
 360+ 9A6A
 361+ 9A6A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A6A
 363+ 9A6A 3A AB 89     	ld a,(CTRL_DESPLZ)
 364+ 9A6D 47           	ld b,a
 365+ 9A6E 3E F8        	ld a,$f8
 366+ 9A70 80           	add b
 367+ 9A71 32 AB 89     	ld (CTRL_DESPLZ),a
 368+ 9A74 18 1C        	jr 3F
 369+ 9A76 21 A4 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A79 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A7A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A7B 32 AB 89     	ld (CTRL_DESPLZ),a
 373+ 9A7E 3A B7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A81 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A83 20 0A        	jr nz,2F
 376+ 9A85 2A A5 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9A88 23           	inc hl
 378+ 9A89 22 A5 89     	ld (Posicion_actual),hl
 379+ 9A8C CD 27 9C     	call Genera_coordenadas
 380+ 9A8F
 381+ 9A8F              ; Inicia el puntero de Sprite.
 382+ 9A8F
 383+ 9A8F CD 20 8D     2 call Inicia_puntero_objeto_der
 384+ 9A92 C9           3 ret
 385+ 9A93
 386+ 9A93              ; ******************************************************************************************************************************************************************************************
 387+ 9A93              ;
 388+ 9A93              ;	15/02/23
 389+ 9A93              ;
 390+ 9A93              ;	Mov_left.
 391+ 9A93              ;
 392+ 9A93              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9A93              ;
 394+ 9A93 21 D1 89     Mov_left ld hl,Ctrl_0
 395+ 9A96 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9A98              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9A98              ; 																	; _ en el caso de que no lo haya.
 398+ 9A98 3A D1 89     	ld a,(Ctrl_0)
 399+ 9A9B CB 77        	bit 6,a
 400+ 9A9D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9A9F
 402+ 9A9F CD B5 9B     	call Stop_Amadeus_left
 403+ 9AA2 C8           	ret z
 404+ 9AA3 20 4A        	jr nz,8F
 405+ 9AA5
 406+ 9AA5 3A A9 89     11 ld a,(Coordenada_X)
 407+ 9AA8 A7           	and a
 408+ 9AA9 20 44        	jr nz,8F
 409+ 9AAB
 410+ 9AAB 3A AB 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9AAE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9AAF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9AB1
 414+ 9AB1              ; ---------- ---------- ----------
 415+ 9AB1
 416+ 9AB1 3A B8 89     	ld a,(Vel_left)
 417+ 9AB4 FE 02        	cp 2
 418+ 9AB6 28 0F        	jr z,1F
 419+ 9AB8 38 04        	jr c,6F
 420+ 9ABA FE 04        	cp 4
 421+ 9ABC 28 12        	jr z,7F
 422+ 9ABE
 423+ 9ABE              ; ---------- ---------- ----------
 424+ 9ABE
 425+ 9ABE 3A AB 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AC1 FE F8        	cp $f8
 427+ 9AC3 20 2A        	jr nz,8F
 428+ 9AC5 18 10        	jr 4F
 429+ 9AC7 3A AB 89     1 ld a,(CTRL_DESPLZ)
 430+ 9ACA FE F9        	cp $f9
 431+ 9ACC 20 21        	jr nz,8F
 432+ 9ACE 18 07        	jr 4F
 433+ 9AD0 3A AB 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AD3 FE FB        	cp $fb
 435+ 9AD5 20 18        	jr nz,8F
 436+ 9AD7
 437+ 9AD7              ; ---------- ---------- ----------
 438+ 9AD7
 439+ 9AD7              4
 440+ 9AD7 CD DD 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9ADA              ;	call Reinicio
 442+ 9ADA
 443+ 9ADA              ; ---------- ---------- ----------
 444+ 9ADA
 445+ 9ADA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9ADC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9ADD
 448+ 9ADD              ;	ld hl,(Indice_Sprite_izq)
 449+ 9ADD              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9ADD
 451+ 9ADD CD F6 9A     	call DESPLZ_IZQ
 452+ 9AE0 C1           	pop bc
 453+ 9AE1 10 F9        	djnz 5B
 454+ 9AE3 2A A5 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9AE6 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9AE7 22 A5 89     	ld (Posicion_actual),hl
 457+ 9AEA CD 27 9C     	call Genera_coordenadas
 458+ 9AED 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9AEF
 460+ 9AEF              ; ---------- ---------- ----------
 461+ 9AEF
 462+ 9AEF              ; Movemos, no hay recolocación.
 463+ 9AEF
 464+ 9AEF 2A A5 89     8 ld hl,(Posicion_actual)
 465+ 9AF2 CD F6 9A     	call DESPLZ_IZQ
 466+ 9AF5 C9           2 ret
 467+ 9AF6
 468+ 9AF6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9AF6              ;
 470+ 9AF6              ;	22/9/22
 471+ 9AF6
 472+ 9AF6              DESPLZ_IZQ
 473+ 9AF6
 474+ 9AF6 CD 05 9B     	call Desplaza_izquierda
 475+ 9AF9 CD 51 9B         call modifica_parametros_1er_DESPLZ
 476+ 9AFC CD 79 9B     	call Ciclo_completo_2
 477+ 9AFF 21 D1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B02 CB BE        	res 7,(hl)
 479+ 9B04 C9           	ret
 480+ 9B05
 481+ 9B05              Desplaza_izquierda
 482+ 9B05
 483+ 9B05 3A B8 89     	ld a,(Vel_left)
 484+ 9B08 47           	ld b,a
 485+ 9B09 2A B3 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B0C 23           1 inc hl
 487+ 9B0D 23           	inc hl
 488+ 9B0E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B10 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B13 CD 09 8D     	call Extrae_address
 491+ 9B16 22 A7 89     	ld (Puntero_objeto),hl
 492+ 9B19
 493+ 9B19              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B19
 495+ 9B19              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B19              ; Cuántos movimientos hemos hecho ??
 497+ 9B19              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B19
 499+ 9B19 2A AF 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B1C EB           	ex de,hl
 501+ 9B1D A7           	and a
 502+ 9B1E ED 52        	sbc hl,de
 503+ 9B20 CB 3D        	srl l
 504+ 9B22 3E 08        6 ld a,8
 505+ 9B24 95           	sub l
 506+ 9B25 30 1E        	jr nc,3F
 507+ 9B27
 508+ 9B27              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B27              ; B="0".
 510+ 9B27
 511+ 9B27 04           4 inc b
 512+ 9B28 3C           	inc a
 513+ 9B29 20 FC        	jr nz,4B
 514+ 9B2B 78           	ld a,b
 515+ 9B2C 08           	ex af,af
 516+ 9B2D 2A AF 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B30 23           5 inc hl
 518+ 9B31 23           	inc hl
 519+ 9B32 10 FC        	djnz 5B
 520+ 9B34 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B37 CD 09 8D     	call Extrae_address
 522+ 9B3A 22 A7 89     	ld (Puntero_objeto),hl
 523+ 9B3D
 524+ 9B3D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B3D              ; _(Posicion_actual).
 526+ 9B3D
 527+ 9B3D 21 A5 89     	ld hl,Posicion_actual
 528+ 9B40 35           	dec (hl)
 529+ 9B41 08           	ex af,af
 530+ 9B42 6F           	ld l,a
 531+ 9B43 18 DD        	jr 6B
 532+ 9B45
 533+ 9B45              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B45
 535+ 9B45 47           3 ld b,a
 536+ 9B46 2A AD 89     	ld hl,(Indice_Sprite_der)
 537+ 9B49 23           2 inc hl
 538+ 9B4A 23           	inc hl
 539+ 9B4B 10 FC        	djnz 2B
 540+ 9B4D 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B50 C9           8 ret
 542+ 9B51
 543+ 9B51              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B51              ;
 545+ 9B51              ;	modifica_parametros_1er_DESPLZ
 546+ 9B51              ;
 547+ 9B51              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B51              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B51              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B51
 551+ 9B51 3A AB 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B54 A7           	and a
 553+ 9B55 20 1E        	jr nz,1F
 554+ 9B57 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B58 32 AB 89         ld (CTRL_DESPLZ),a
 556+ 9B5B 21 A4 89     	ld hl,Columns
 557+ 9B5E 34           	inc (hl)
 558+ 9B5F 3A B7 89     	ld a,(Cuad_objeto)
 559+ 9B62 E6 01        	and 1
 560+ 9B64 20 0F        	jr nz,1F
 561+ 9B66 2A A5 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B69 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B6A 22 A5 89     	ld (Posicion_actual),hl
 564+ 9B6D CD 27 9C     	call Genera_coordenadas
 565+ 9B70 CD CC 9B     	call Dec_CTRL_DESPLZ
 566+ 9B73 18 03        	jr 2F
 567+ 9B75 CD CC 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B78 C9           2 ret
 569+ 9B79
 570+ 9B79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B79
 572+ 9B79 3A AB 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B7C FE F7        	cp $f7
 574+ 9B7E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B80 30 2C        	jr nc,3F
 576+ 9B82
 577+ 9B82              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B82
 579+ 9B82 06 00        	ld b,0
 580+ 9B84 04           4 inc b
 581+ 9B85 3C           	inc a
 582+ 9B86 FE F7        	cp $f7
 583+ 9B88 20 FA        	jr nz,4B
 584+ 9B8A 3E FF        	ld a,$ff
 585+ 9B8C 90           	sub b
 586+ 9B8D 32 AB 89     	ld (CTRL_DESPLZ),a
 587+ 9B90 18 1C        	jr 3F
 588+ 9B92
 589+ 9B92              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9B92
 591+ 9B92 21 A4 89     1 ld hl,Columns
 592+ 9B95 35           	dec (hl)
 593+ 9B96 AF           	xor a
 594+ 9B97 32 AB 89     	ld (CTRL_DESPLZ),a
 595+ 9B9A 3A B7 89     	ld a,(Cuad_objeto)
 596+ 9B9D E6 01        	and 1
 597+ 9B9F 28 0A        	jr z,2F
 598+ 9BA1 2A A5 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BA4 2B           	dec hl
 600+ 9BA5 22 A5 89     	ld (Posicion_actual),hl
 601+ 9BA8 CD 27 9C     	call Genera_coordenadas
 602+ 9BAB
 603+ 9BAB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BAB
 605+ 9BAB CD 33 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BAE C9           3 ret
 607+ 9BAF
 608+ 9BAF              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BAF              ;
 610+ 9BAF              ;	19/10/22
 611+ 9BAF              ;
 612+ 9BAF              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BAF              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BAF
 615+ 9BAF 3A A9 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BB2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BB4 C9           	ret
 618+ 9BB5
 619+ 9BB5              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BB5              ;
 621+ 9BB5              ;	19/10/22
 622+ 9BB5              ;
 623+ 9BB5              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BB5              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BB5
 626+ 9BB5 3A A9 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BB8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BBA C9           	ret
 629+ 9BBB
 630+ 9BBB              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BBB              ;
 632+ 9BBB              ;	24/7/22
 633+ 9BBB              ;
 634+ 9BBB              ;	Inc_CTRL_DESPLZ
 635+ 9BBB              ;
 636+ 9BBB              ;
 637+ 9BBB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BBB
 639+ 9BBB 21 AB 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BBE 3A B9 89     	ld a,(Vel_right)
 641+ 9BC1 A7           	and a
 642+ 9BC2 28 06        	jr z,1F
 643+ 9BC4 47           	ld b,a
 644+ 9BC5 34           3 inc (hl)
 645+ 9BC6 10 FD        	djnz 3B
 646+ 9BC8 18 01        	jr 2F
 647+ 9BCA 34           1 inc (hl)
 648+ 9BCB C9           2 ret
 649+ 9BCC
 650+ 9BCC              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BCC              ;
 652+ 9BCC              ;	5/2/23
 653+ 9BCC              ;
 654+ 9BCC              ;	Dec_CTRL_DESPLZ
 655+ 9BCC              ;
 656+ 9BCC              ;
 657+ 9BCC              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BCC
 659+ 9BCC 21 AB 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BCF 3A B8 89     	ld a,(Vel_left)
 661+ 9BD2 A7           	and a
 662+ 9BD3 28 06        	jr z,1F
 663+ 9BD5 47           	ld b,a
 664+ 9BD6 35           3 dec (hl)
 665+ 9BD7 10 FD        	djnz 3B
 666+ 9BD9 18 01        	jr 2F
 667+ 9BDB 35           1 dec (hl)
 668+ 9BDC C9           2 ret
 669+ 9BDD
 670+ 9BDD              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BDD
 672+ 9BDD 2A A5 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BE0 01 1F 00     	ld bc,31
 674+ 9BE3 A7           	and a
 675+ 9BE4 ED 4A        	adc hl,bc
 676+ 9BE6 22 A5 89     	ld (Posicion_actual),hl
 677+ 9BE9 21 D1 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9BEC CB C6        	set 0,(hl)
 679+ 9BEE C9           	ret
 680+ 9BEF
 681+ 9BEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9BEF
 683+ 9BEF 2A A5 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9BF2 01 1F 00     	ld bc,31
 685+ 9BF5 A7           	and a
 686+ 9BF6 ED 42        	sbc hl,bc
 687+ 9BF8 22 A5 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9BFB 21 D1 89     	ld hl,Ctrl_0
 689+ 9BFE CB CE        	set 1,(hl)
 690+ 9C00 C9           	ret
 691+ 9C01
 692+ 9C01              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C01
 694+ 9C01 24           Reaparece_abajo inc h
 695+ 9C02 01 E0 17     	ld bc,$17e0
 696+ 9C05 A7           	and a
 697+ 9C06 ED 4A        	adc hl,bc
 698+ 9C08 22 A5 89     	ld (Posicion_actual),hl
 699+ 9C0B 21 D1 89     	ld hl,Ctrl_0
 700+ 9C0E CB D6        	set 2,(hl)
 701+ 9C10 C9           	ret
 702+ 9C11
 703+ 9C11              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C11
 705+ 9C11 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C14 A7           	and a
 707+ 9C15 ED 42        	sbc hl,bc
 708+ 9C17 22 A5 89     	ld (Posicion_actual),hl
 709+ 9C1A 21 D1 89     	ld hl,Ctrl_0
 710+ 9C1D CB DE        	set 3,(hl)
 711+ 9C1F C9           	ret
 712+ 9C20
 713+ 9C20              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C20
 715+ 9C20 2A B5 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C23 22 A5 89     	ld (Posicion_actual),hl
 717+ 9C26 C9           	ret
# file closed: Direcciones.asm
1245  9C27              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C27              ; ------------------------------------------------------------------------
   2+ 9C27              ;
   3+ 9C27              ;	02/04/23
   4+ 9C27              ;
   5+ 9C27              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C27              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C27              ;
   8+ 9C27              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C27              ;
  10+ 9C27              ;	Modifica: A,BC y DE.
  11+ 9C27
  12+ 9C27 C5           Genera_coordenadas push bc
  13+ 9C28 E5           	push hl
  14+ 9C29 D5           	push de
  15+ 9C2A
  16+ 9C2A 2A A5 89     	ld hl,(Posicion_actual)
  17+ 9C2D
  18+ 9C2D 7D           	ld a,l
  19+ 9C2E E6 1F        	and $1f
  20+ 9C30 32 A9 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C33
  22+ 9C33 CD BB 98     	call calcula_tercio
  23+ 9C36 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C37
  25+ 9C37 1E 00        	ld e,0
  26+ 9C39 7D           	ld a,l
  27+ 9C3A E6 E0        	and $e0
  28+ 9C3C 28 01        	jr z,1F
  29+ 9C3E 04           	inc b
  30+ 9C3F
  31+ 9C3F 04           1 inc b
  32+ 9C40 05           	dec b
  33+ 9C41 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C43              ;														; _ , salimos.
  35+ 9C43 1C           3 inc e
  36+ 9C44 D6 20        	sub 32
  37+ 9C46 20 FB        	jr nz,3B
  38+ 9C48 10 F5        	djnz 1B
  39+ 9C4A
  40+ 9C4A 7B           2 ld a,e
  41+ 9C4B 32 AA 89     	ld (Coordenada_y),a
  42+ 9C4E
  43+ 9C4E D1           	pop de
  44+ 9C4F E1           	pop hl
  45+ 9C50 C1           	pop bc
  46+ 9C51
  47+ 9C51 C9           	ret
  48+ 9C52
  49+ 9C52              ; ------------------------------------------------------------------------
  50+ 9C52              ;	28/05/23
  51+ 9C52              ;
  52+ 9C52              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C52              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C52              ;
  55+ 9C52              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C52              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C52              ;
  58+ 9C52              ;		DE="$120d"
  59+ 9C52              ;
  60+ 9C52              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C52              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C52              ;
  63+ 9C52              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C52
  65+ 9C52              ;	Modifica: A,BC y DE.
  66+ 9C52
  67+ 9C52
  68+ 9C52              Genera_coordenadas_disparo
  69+ 9C52
  70+ 9C52              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C52
  72+ 9C52 7D           	ld a,l
  73+ 9C53 E6 1F        	and $1f
  74+ 9C55 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C56 CD BB 98     	call calcula_tercio
  76+ 9C59 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C5A 1E 00        	ld e,0
  78+ 9C5C 7D           	ld a,l
  79+ 9C5D E6 E0        	and $e0
  80+ 9C5F 28 01        	jr z,1F
  81+ 9C61 04           	inc b
  82+ 9C62 1C           1 inc e
  83+ 9C63 D6 20        	sub 32
  84+ 9C65 20 FB        	jr nz,1B
  85+ 9C67 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C69 C9           	ret
  87+ 9C6A
# file closed: Genera_coordenadas.asm
1246  9C6A              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C6A
   2+ 9C6A
   3+ 9C6A              ;   11/8/22
   4+ 9C6A              ;
   5+ 9C6A              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C6A              ;
   7+ 9C6A              ;   Mov_obj.asm
   8+ 9C6A              ;
   9+ 9C6A              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C6A              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C6A              ;
  12+ 9C6A              ;   Codificación:
  13+ 9C6A              ;
  14+ 9C6A              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9C6A
  16+ 9C6A              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9C6A
  18+ 9C6A 02 40 00     Arriba db 2,%01000000,0
  19+ 9C6D 02 80 00     Abajo db 2,%10000000,0
  20+ 9C70 02 20 00     Derecha db 2,%00100000,0
  21+ 9C73 02 10 00     Izquierda db 2,%00010000,0
  22+ 9C76 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9C7A 60 42 60 40
  22+ 9C7E 63
  23+ 9C7F 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9C83 22 A3 80 A0
  24+ 9C87 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9C8B 84 A0 83 A0
  25+ 9C8F 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9C93 80 A3 22 A0
  26+ 9C97 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9C9B 40 60 42 60
  27+ 9C9F 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9CA3
  29+ 9CA3 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9CA7 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9CAB 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9CAF 84 00
  32+ 9CB1 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9CB5 84 00
  33+ 9CB7 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9CBB 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9CBF 1F 1F 1F 1F
  35+ 9CC3 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9CC7 1F 1F 1F 1F
  35+ 9CCB 1F
  36+ 9CCC 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9CD0 2F 2F 2F 2F
  36+ 9CD4 2F 2F
  37+ 9CD6 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9CDA 2F 2F 00
  38+ 9CDD
  39+ 9CDD              ; ----- ----- ----- ----- -----
  40+ 9CDD
  41+ 9CDD BB 9C        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9CDF B7 9C        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9CE1 73 9C        Indice_mov_Izquierda defw Izquierda
  44+ 9CE3 70 9C        Indice_mov_Derecha defw Derecha
  45+ 9CE5 6D 9C        Indice_mov_Abajo defw Abajo
  46+ 9CE7 6A 9C        Indice_mov_Arriba defw Arriba
  47+ 9CE9 A7 9C        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9CEB AB 9C        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9CED A3 9C        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9CEF B1 9C        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9CF1 76 9C        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9CF3              ; ----- ----- ----- ----- -----
  53+ 9CF3
  54+ 9CF3 3A D8 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9CF6 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9CF7 28 02            jr z,1F
  57+ 9CF9 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9CFB 3A D9 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9CFE C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9D00 32 D9 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9D03              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9D03 2A D6 89         ld hl,(Puntero_mov)
  63+ 9D06 7E               ld a,(hl)
  64+ 9D07 32 D8 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9D0A 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9D0B 22 D6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9D0E
  68+ 9D0E 3A DA 89     Decoder ld a,(Repetimos_db)
  69+ 9D11 A7               and a
  70+ 9D12 20 0C            jr nz,12F
  71+ 9D14 2A D6 89         ld hl,(Puntero_mov)
  72+ 9D17 7E               ld a,(hl)
  73+ 9D18 A7               and a
  74+ 9D19 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9D1B E6 0F            and $0f
  76+ 9D1D 32 DA 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9D20              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9D20 2A D6 89     12 ld hl,(Puntero_mov)
  79+ 9D23 CB 7E            bit 7,(hl)
  80+ 9D25 28 03            jr z,2F
  81+ 9D27 CD 01 99         call Mov_down
  82+ 9D2A 2A D6 89     2 ld hl, (Puntero_mov)
  83+ 9D2D CB 76            bit 6,(hl)
  84+ 9D2F 28 03            jr z,3F
  85+ 9D31 CD 32 99         call Mov_up
  86+ 9D34 2A D6 89     3 ld hl, (Puntero_mov)
  87+ 9D37 CB 6E            bit 5,(hl)
  88+ 9D39 28 03            jr z,4F
  89+ 9D3B CD 75 99         call Mov_right
  90+ 9D3E 2A D6 89     4 ld hl, (Puntero_mov)
  91+ 9D41 CB 66            bit 4,(hl)
  92+ 9D43 28 03            jr z,5F
  93+ 9D45 CD 93 9A         call Mov_left
  94+ 9D48
  95+ 9D48              ; ---------- --------- --------- ---------- ----------
  96+ 9D48
  97+ 9D48 3A DA 89     5 ld a,(Repetimos_db)
  98+ 9D4B A7               and a
  99+ 9D4C 28 07            jr z,6F
 100+ 9D4E 3D               dec a
 101+ 9D4F 32 DA 89         ld (Repetimos_db),a
 102+ 9D52 28 01            jr z,6f
 103+ 9D54 C9           11 ret
 104+ 9D55 21 D8 89     6 ld hl,Contador_db_mov
 105+ 9D58 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9D59 2A D6 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9D5C 23               inc hl
 108+ 9D5D 22 D6 89         ld (Puntero_mov),hl
 109+ 9D60 18 F2            jr 11B
 110+ 9D62 2A D4 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9D65 3A D9 89         ld a,(Incrementa_puntero)
 112+ 9D68 47               ld b,a
 113+ 9D69 23           8 inc hl
 114+ 9D6A 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9D6C 5E               ld e,(hl)
 116+ 9D6D 23               inc hl
 117+ 9D6E 56               ld d,(hl)
 118+ 9D6F EB               ex de,hl
 119+ 9D70 22 D6 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9D73 18 DF            jr 11B
 121+ 9D75
 122+ 9D75              ; ---------- --------- --------- ---------- ----------
 123+ 9D75              ;
 124+ 9D75              ;   11/8/22
 125+ 9D75              ;
 126+ 9D75              ;   Prepara_Puntero_mov
 127+ 9D75
 128+ 9D75 E5           Prepara_Puntero_mov push hl
 129+ 9D76 D5               push de
 130+ 9D77 2A D4 89         ld hl,(Puntero_indice_mov)
 131+ 9D7A 5E               ld e,(hl)
 132+ 9D7B 23               inc hl
 133+ 9D7C 56               ld d,(hl)
 134+ 9D7D EB               ex de,hl
 135+ 9D7E 22 D6 89         ld (Puntero_mov),hl
 136+ 9D81 D1               pop de
 137+ 9D82 E1               pop hl
 138+ 9D83 C9               ret
 139+ 9D84
 140+ 9D84              ; ---------- --------- --------- ---------- ----------
 141+ 9D84              ;
 142+ 9D84              ;   11/8/22
 143+ 9D84              ;
 144+ 9D84              ;   Reinicia_el_movimiento
 145+ 9D84
 146+ 9D84 CD 75 9D     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9D87 AF               xor a
 148+ 9D88 32 D8 89         ld (Contador_db_mov),a
 149+ 9D8B 32 D9 89         ld (Incrementa_puntero),a
 150+ 9D8E C3 F3 9C         jp Movimiento
 151+ 9D91 C9               ret
 152+ 9D92              ; ---------- --------- --------- ---------- ----------
 153+ 9D92
 154+ 9D92
 155+ 9D92
 156+ 9D92
 157+ 9D92
 158+ 9D92
 159+ 9D92
 160+ 9D92
 161+ 9D92
 162+ 9D92
 163+ 9D92
 164+ 9D92
 165+ 9D92
 166+ 9D92
 167+ 9D92
 168+ 9D92
 169+ 9D92
 170+ 9D92
# file closed: Patrones_de_mov.asm
1247  9D92              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D92              ; Relojes y temporizaciones.
   2+ 9D92
   3+ 9D92              ; ------------------------------------------------------
   4+ 9D92              ;
   5+ 9D92              ;	27/04/23
   6+ 9D92              ;
   7+ 9D92              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 9D92              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D92              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D92              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D92              ;
  12+ 9D92              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D92              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D92
  15+ 9D92              Habilita_disparos
  16+ 9D92
  17+ 9D92 7E           	ld a,(hl)
  18+ 9D93 A7           	and a
  19+ 9D94 C0           	ret nz
  20+ 9D95
  21+ 9D95 EB           	ex de,hl
  22+ 9D96
  23+ 9D96 35           	dec (hl)
  24+ 9D97 34           	inc (hl)
  25+ 9D98 35           	dec (hl)
  26+ 9D99 C0           	ret nz
  27+ 9D9A
  28+ 9D9A 2B           	dec hl
  29+ 9D9B 7E           	ld a,(hl)
  30+ 9D9C 23           	inc hl
  31+ 9D9D 77           	ld (hl),a
  32+ 9D9E
  33+ 9D9E EB           	ex de,hl
  34+ 9D9F 3E 01        	ld a,1
  35+ 9DA1 77           	ld (hl),a
  36+ 9DA2 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1248  9DA3              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9DA3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9DA3              ;
   3+ 9DA3              ;	3/1/23
   4+ 9DA3              ;
   5+ 9DA3              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9DA3
   7+ 9DA3              ;	ADC HL,SP	LD (addr),SP
   8+ 9DA3              ;	ADD HL,SP	LD SP,(addr)
   9+ 9DA3              ;	ADD IX,SP	LD SP,nn
  10+ 9DA3              ; 	ADD IY,SP	LD SP,HL
  11+ 9DA3              ;				LD SP,IX
  12+ 9DA3              ;	DEC SP		LD SP,IY
  13+ 9DA3
  14+ 9DA3              ;	EX (SP),HL
  15+ 9DA3              ;	EX (SP),IX
  16+ 9DA3              ;	EX (SP),IY
  17+ 9DA3
  18+ 9DA3              ;	INC SP
  19+ 9DA3
  20+ 9DA3
  21+ 9DA3                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 F2 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A E1 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A F8 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A F6 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 F8 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 F6 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B F2 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1249  7FD5
1250  7FD5              	SAVESNA "Pruebas.sna", START
1251  7FD5
1252  7FD5
1253  7FD5
1254  7FD5
# file closed: Banco_de_pruebas.asm
