# file opened: Banco_de_Pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1A 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD 5B 8E     	call Pinta_entidades
  44  AA1C CD 4D 8E     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD 7D 8E     	call Guarda_parametros_DRAW
  49  AA26 CD 9D 8D     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 2A 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD A0 90     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD E5 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD AF 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD 89 8E     	call Recupera_parametros_DRAW
  66  AA3F CD 6B 8E     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 24 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 1A 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	12/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 65 Bytes por entidad.
 101+ 856C
 102+ 856C C1 85        	defw Caja_1
 103+ 856E 04 86        	defw Caja_2
 104+ 8570 47 86        	defw Caja_3
 105+ 8572 8A 86        	defw Caja_4
 106+ 8574 CD 86        	defw Caja_5
 107+ 8576 10 87        	defw Caja_6
 108+ 8578 53 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 145+ 85AC
 146+ 85AC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 147+ 85AE
 148+ 85AE 00           	db 0											; (Autoriza_movimiento).
 149+ 85AF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 149+ 85B3 00 00
 150+ 85B5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 151+ 85B8
 152+ 85B8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 153+ 85BA 00           	db 0											; (Cola_de_desplazamiento).
 154+ 85BB
 155+ 85BB 00           	db 0 											; (Columnas).
 156+ 85BC 00 00        	defw 0											; (Limite_horizontal).
 157+ 85BE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 158+ 85C1
 159+ 85C1              ; ---------- ---------- ---------- ---------- ----------
 160+ 85C1
 161+ 85C1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 162+ 85C3 00 00        	defw 0											; (Posicion_actual).
 163+ 85C5 00 00        	defw 0 											; (Puntero_objeto).
 164+ 85C7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 165+ 85CA
 166+ 85CA 00           	db %00000000 									; (Attr).
 167+ 85CB
 168+ 85CB 00 00        	defw 0											; (Indice_Sprite_der).
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_izq).
 170+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 172+ 85D3
 173+ 85D3 00 00        	defw 0											; (Posicion_inicio).
 174+ 85D5 00           	db 0											; (Cuad_objeto).
 175+ 85D6
 176+ 85D6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 177+ 85DA
 178+ 85DA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 179+ 85DB
 180+ 85DB 00 00 00...  	ds 6											; Variables_de_borrado
 181+ 85E1
 182+ 85E1 00 00        	db 0,0											; Variables_de_pintado
 183+ 85E3 00 00        	defw 0											;	" " " " " " "
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85EB
 187+ 85EB 00 00        	defw 0 											; Puntero_de_impresion.
 188+ 85ED
 189+ 85ED D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 190+ 85EF
 191+ 85EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 192+ 85F1
 193+ 85F1 00           	db 0											; (Autoriza_movimiento).
 194+ 85F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 194+ 85F6 00 00
 195+ 85F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 196+ 85FB
 197+ 85FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 198+ 85FD 00           	db 0											; (Cola_de_desplazamiento).
 199+ 85FE
 200+ 85FE 00           	db 0 											; (Columnas).
 201+ 85FF 00 00        	defw 0											; (Limite_horizontal).
 202+ 8601 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 8604
 204+ 8604              ; ---------- ---------- ---------- ---------- ----------
 205+ 8604
 206+ 8604 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 207+ 8606 00 00        	defw 0											; (Posicion_actual).
 208+ 8608 00 00        	defw 0 											; (Puntero_objeto).
 209+ 860A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 860D
 211+ 860D 00           	db %00000000 									; (Attr).
 212+ 860E
 213+ 860E 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 8610 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 8612 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 8614 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8616
 218+ 8616 00 00        	defw 0											; (Posicion_inicio).
 219+ 8618 00           	db 0											; (Cuad_objeto).
 220+ 8619
 221+ 8619 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 861D
 223+ 861D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 861E
 225+ 861E 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 8624
 227+ 8624 00 00        	db 0,0											; Variables_de_pintado
 228+ 8626 00 00        	defw 0											;	" " " " " " "
 229+ 8628 00 00        	defw 0											;	" " " " " " "
 230+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 862E
 232+ 862E 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 8630
 234+ 8630 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 235+ 8632
 236+ 8632 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 237+ 8634
 238+ 8634 00           	db 0											; (Autoriza_movimiento).
 239+ 8635 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 239+ 8639 00 00
 240+ 863B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 241+ 863E
 242+ 863E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 243+ 8640 00           	db 0											; (Cola_de_desplazamiento).
 244+ 8641
 245+ 8641 00           	db 0 											; (Columnas).
 246+ 8642 00 00        	defw 0											; (Limite_horizontal).
 247+ 8644 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 248+ 8647
 249+ 8647              ; ---------- ---------- ---------- ---------- ----------
 250+ 8647
 251+ 8647 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 252+ 8649 00 00        	defw 0											; (Posicion_actual).
 253+ 864B 00 00        	defw 0 											; (Puntero_objeto).
 254+ 864D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 255+ 8650
 256+ 8650 00           	db %00000000 									; (Attr).
 257+ 8651
 258+ 8651 00 00        	defw 0											; (Indice_Sprite_der).
 259+ 8653 00 00        	defw 0											; (Indice_Sprite_izq).
 260+ 8655 00 00        	defw 0											; (Puntero_DESPLZ_der).
 261+ 8657 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 262+ 8659
 263+ 8659 00 00        	defw 0											; (Posicion_inicio).
 264+ 865B 00           	db 0											; (Cuad_objeto).
 265+ 865C
 266+ 865C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 267+ 8660
 268+ 8660 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 269+ 8661
 270+ 8661 00 00 00...  	ds 6											; Variables_de_borrado
 271+ 8667
 272+ 8667 00 00        	db 0,0											; Variables_de_pintado
 273+ 8669 00 00        	defw 0											;	" " " " " " "
 274+ 866B 00 00        	defw 0											;	" " " " " " "
 275+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 276+ 8671
 277+ 8671 00 00        	defw 0 											; Puntero_de_impresion.
 278+ 8673
 279+ 8673 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 280+ 8675
 281+ 8675 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 282+ 8677
 283+ 8677 00           	db 0											; (Autoriza_movimiento).
 284+ 8678 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 284+ 867C 00 00
 285+ 867E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 286+ 8681
 287+ 8681 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 288+ 8683 00           	db 0											; (Cola_de_desplazamiento).
 289+ 8684
 290+ 8684 00           	db 0 											; (Columnas).
 291+ 8685 00 00        	defw 0											; (Limite_horizontal).
 292+ 8687 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 293+ 868A
 294+ 868A              ; ---------- ---------- ---------- ---------- ----------
 295+ 868A
 296+ 868A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 297+ 868C 00 00        	defw 0											; (Posicion_actual).
 298+ 868E 00 00        	defw 0 											; (Puntero_objeto).
 299+ 8690 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 300+ 8693
 301+ 8693 00           	db %00000000 									; (Attr).
 302+ 8694
 303+ 8694 00 00        	defw 0											; (Indice_Sprite_der).
 304+ 8696 00 00        	defw 0											; (Indice_Sprite_izq).
 305+ 8698 00 00        	defw 0											; (Puntero_DESPLZ_der).
 306+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 307+ 869C
 308+ 869C 00 00        	defw 0											; (Posicion_inicio).
 309+ 869E 00           	db 0											; (Cuad_objeto).
 310+ 869F
 311+ 869F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 312+ 86A3
 313+ 86A3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 314+ 86A4
 315+ 86A4 00 00 00...  	ds 6											; Variables_de_borrado
 316+ 86AA
 317+ 86AA 00 00        	db 0,0											; Variables_de_pintado
 318+ 86AC 00 00        	defw 0											;	" " " " " " "
 319+ 86AE 00 00        	defw 0											;	" " " " " " "
 320+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 321+ 86B4
 322+ 86B4 00 00        	defw 0 											; Puntero_de_impresion.
 323+ 86B6
 324+ 86B6 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 325+ 86B8
 326+ 86B8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 327+ 86BA
 328+ 86BA 00           	db 0											; (Autoriza_movimiento).
 329+ 86BB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 329+ 86BF 00 00
 330+ 86C1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 331+ 86C4
 332+ 86C4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 333+ 86C6 00           	db 0											; (Cola_de_desplazamiento).
 334+ 86C7
 335+ 86C7 00           	db 0 											; (Columnas).
 336+ 86C8 00 00        	defw 0											; (Limite_horizontal).
 337+ 86CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 338+ 86CD
 339+ 86CD              ; ---------- ---------- ---------- ---------- ----------
 340+ 86CD
 341+ 86CD 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 342+ 86CF 00 00        	defw 0											; (Posicion_actual).
 343+ 86D1 00 00        	defw 0 											; (Puntero_objeto).
 344+ 86D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 345+ 86D6
 346+ 86D6 00           	db %00000000 									; (Attr).
 347+ 86D7
 348+ 86D7 00 00        	defw 0											; (Indice_Sprite_der).
 349+ 86D9 00 00        	defw 0											; (Indice_Sprite_izq).
 350+ 86DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 351+ 86DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 352+ 86DF
 353+ 86DF 00 00        	defw 0											; (Posicion_inicio).
 354+ 86E1 00           	db 0											; (Cuad_objeto).
 355+ 86E2
 356+ 86E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 357+ 86E6
 358+ 86E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 359+ 86E7
 360+ 86E7 00 00 00...  	ds 6											; Variables_de_borrado
 361+ 86ED
 362+ 86ED 00 00        	db 0,0											; Variables_de_pintado
 363+ 86EF 00 00        	defw 0											;	" " " " " " "
 364+ 86F1 00 00        	defw 0											;	" " " " " " "
 365+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 366+ 86F7
 367+ 86F7 00 00        	defw 0 											; Puntero_de_impresion.
 368+ 86F9
 369+ 86F9 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 370+ 86FB
 371+ 86FB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 372+ 86FD
 373+ 86FD 00           	db 0											; (Autoriza_movimiento).
 374+ 86FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 374+ 8702 00 00
 375+ 8704 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 378+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 379+ 870A
 380+ 870A 00           	db 0 											; (Columnas).
 381+ 870B 00 00        	defw 0											; (Limite_horizontal).
 382+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 383+ 8710
 384+ 8710              ; ---------- ---------- ---------- ---------- ----------
 385+ 8710
 386+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 387+ 8712 00 00        	defw 0											; (Posicion_actual).
 388+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 389+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 390+ 8719
 391+ 8719 00           	db %00000000 									; (Attr).
 392+ 871A
 393+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 394+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 395+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 396+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 397+ 8722
 398+ 8722 00 00        	defw 0											; (Posicion_inicio).
 399+ 8724 00           	db 0											; (Cuad_objeto).
 400+ 8725
 401+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 8729
 403+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 404+ 872A
 405+ 872A 00 00 00...  	ds 6											; Variables_de_borrado
 406+ 8730
 407+ 8730 00 00        	db 0,0											; Variables_de_pintado
 408+ 8732 00 00        	defw 0											;	" " " " " " "
 409+ 8734 00 00        	defw 0											;	" " " " " " "
 410+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 411+ 873A
 412+ 873A 00 00        	defw 0 											; Puntero_de_impresion.
 413+ 873C
 414+ 873C D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 415+ 873E
 416+ 873E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 417+ 8740
 418+ 8740 00           	db 0											; (Autoriza_movimiento).
 419+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 419+ 8745 00 00
 420+ 8747 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 421+ 874A
 422+ 874A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 423+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 424+ 874D
 425+ 874D 00           	db 0 											; (Columnas).
 426+ 874E 00 00        	defw 0											; (Limite_horizontal).
 427+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 428+ 8753
 429+ 8753              ; ---------- ---------- ---------- ---------- ----------
 430+ 8753
 431+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 432+ 8755 00 00        	defw 0											; (Posicion_actual).
 433+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 434+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 435+ 875C
 436+ 875C 00           	db %00000000 									; (Attr).
 437+ 875D
 438+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 439+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 440+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 441+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 442+ 8765
 443+ 8765 00 00        	defw 0											; (Posicion_inicio).
 444+ 8767 00           	db 0											; (Cuad_objeto).
 445+ 8768
 446+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 447+ 876C
 448+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 449+ 876D
 450+ 876D 00 00 00...  	ds 6											; Variables_de_borrado
 451+ 8773
 452+ 8773 00 00        	db 0,0											; Variables_de_pintado
 453+ 8775 00 00        	defw 0											;	" " " " " " "
 454+ 8777 00 00        	defw 0											;	" " " " " " "
 455+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 456+ 877D
 457+ 877D 00 00        	defw 0 											; Puntero_de_impresion.
 458+ 877F
 459+ 877F D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 460+ 8781
 461+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 462+ 8783
 463+ 8783 00           	db 0											; (Autoriza_movimiento).
 464+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 464+ 8788 00 00
 465+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 466+ 878D
 467+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 468+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 469+ 8790
 470+ 8790 00           	db 0 											; (Columnas).
 471+ 8791 00 00        	defw 0											; (Limite_horizontal).
 472+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 473+ 8796
 474+ 8796              ; -------------------------------------------------------------------------------------
 475+ 8796              ;
 476+ 8796              ;	20/05/23
 477+ 8796              ;
 478+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 479+ 8796              ;
 480+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 481+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 482+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 483+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 484+ 8796
 485+ 8796              Indice_de_entidades
 486+ 8796
 487+ 8796 9A 87        	defw Entidad_1
 488+ 8798 AA 87        	defw Entidad_2
 489+ 879A
 490+ 879A              ;	BADSAT, (Satélite malvado).
 491+ 879A
 492+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 493+ 879C 04           	db %00000100									; (Attr).
 494+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 495+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 496+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 497+ 87A3 01           	db 1											; (Cuad_objeto).
 498+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 499+ 87A8 6D 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 500+ 87AA
 501+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 502+ 87AC 02           	db %00000010									; (Attr).
 503+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 504+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 505+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 506+ 87B3 01           	db 1											; (Cuad_objeto).
 507+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 508+ 87B8 6D 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 509+ 87BA
# file closed: Cajas_y_disparos.asm
  97  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CA 87        	defw Nivel_2
   7+ 87BE D7 87        	defw Nivel_3
   8+ 87C0 E7 87        	defw Nivel_4
   9+ 87C2 F9 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87C9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87CF 01 02
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D5 01 02
  22+ 87D7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DC 01
  24+ 87DD 03 01 01 01  	db 3,1,1,1,1
  24+ 87E1 01
  25+ 87E2 03 01 01 01  	db 3,1,1,1,1
  25+ 87E6 01
  26+ 87E7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EC 01
  28+ 87ED 04 01 01 01  	db 4,1,1,1,1
  28+ 87F1 01
  29+ 87F2 04 01 01 01  	db 4,1,1,1,1
  29+ 87F6 01
  30+ 87F7 02 03        	db 2,3
  31+ 87F9 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FE 01
  33+ 87FF 05 01 01 01  	db 5,1,1,1,1
  33+ 8803 01
  34+ 8804 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8808 01
  35+ 8809 05 01 01 01  	db 5,1,1,1,1
  35+ 880D 01
  36+ 880E
  37+ 880E              ;---------------------------------------------------------------------------------------------------------------
  38+ 880E              ;
  39+ 880E              ;   3/9/23
  40+ 880E              ;
  41+ 880E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880E              ;	_en la caja DRAW correspondiente.
  45+ 880E              ;
  46+ 880E              ;	MODIFICA: HL,DE y A.
  47+ 880E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880E
  49+ 880E              Inicializa_Punteros_de_nivel
  50+ 880E
  51+ 880E 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8811 22 42 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8814 CD ED 8C     	call Extrae_address
  54+ 8817 7E           	ld a,(hl)
  55+ 8818 32 0E 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881B 23           	inc hl
  57+ 881C 22 44 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 881F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8820
  60+ 8820              ;---------------------------------------------------------------------------------------------------------------
  61+ 8820              ;
  62+ 8820              ;   13/5/23
  63+ 8820              ;
  64+ 8820              ;	Destruye A,BC,HL,DE
  65+ 8820
  66+ 8820              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8820              ;	_del juego.
  68+ 8820
  69+ 8820              Prepara_cajas
  70+ 8820
  71+ 8820              ; Preparamos los punteros de las cajas.
  72+ 8820
  73+ 8820 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8823 CD ED 8C     	call Extrae_address
  75+ 8826 CD 63 88     	call Avanza_caja
  76+ 8829
  77+ 8829 CD A7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882C
  79+ 882C 2A 44 89     	ld hl,(Datos_de_nivel)
  80+ 882F
  81+ 882F              ; HL está en los datos del nivel correspondiente.
  82+ 882F              ; B actuará como contador de cajas.
  83+ 882F
  84+ 882F C5           1 push bc
  85+ 8830
  86+ 8830 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8831 CD 54 88     	call PreparaBC
  88+ 8834
  89+ 8834 21 96 87     	ld hl,Indice_de_entidades
  90+ 8837 CD 5C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883A 22 14 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883D
  93+ 883D CD 6D 88     	call Datos_de_entidad_a_caja
  94+ 8840
  95+ 8840 2A 0C 89     	ld hl,(Indice_restore_caja)
  96+ 8843 CD ED 8C     	call Extrae_address
  97+ 8846 CD 63 88     	call Avanza_caja
  98+ 8849
  99+ 8849 2A 44 89     	ld hl,(Datos_de_nivel)
 100+ 884C 23           	inc hl
 101+ 884D 22 44 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8850
 103+ 8850 C1           	pop bc
 104+ 8851 10 DC        	djnz 1B
 105+ 8853 C9           	ret
 106+ 8854
 107+ 8854 CB 27        PreparaBC sla a
 108+ 8856 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8858 4F           	ld c,a
 110+ 8859 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885B C9           	ret
 112+ 885C
 113+ 885C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885D ED 4A        	adc hl,bc
 115+ 885F CD ED 8C     	call Extrae_address
 116+ 8862 C9           	ret
 117+ 8863
 118+ 8863 22 08 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8866 13           	inc de
 120+ 8867 13           	inc de
 121+ 8868 EB           	ex de,hl
 122+ 8869 22 0C 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886C C9           	ret
 124+ 886D
 125+ 886D              Datos_de_entidad_a_caja
 126+ 886D
 127+ 886D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886D
 129+ 886D
 130+ 886D ED 5B 08 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8871
 132+ 8871 01 02 00     	ld bc,2
 133+ 8874 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8876
 135+ 8876 01 07 00     	ld bc,7
 136+ 8879 CD A1 88     	call Situa_DE
 137+ 887C
 138+ 887C 01 05 00     	ld bc,5
 139+ 887F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8881
 141+ 8881 01 04 00     	ld bc,4
 142+ 8884 CD A1 88     	call Situa_DE
 143+ 8887
 144+ 8887 01 07 00     	ld bc,7
 145+ 888A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888C
 147+ 888C 01 16 00     	ld bc,22
 148+ 888F CD A1 88     	call Situa_DE
 149+ 8892
 150+ 8892 01 02 00     	ld bc,2
 151+ 8895 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8897
 153+ 8897              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8897              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8897
 156+ 8897 01 0F 00     	ld bc,15									; *****
 157+ 889A CD A1 88     	call Situa_DE
 158+ 889D
 159+ 889D 3E 03        	ld a,3
 160+ 889F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A0
 162+ 88A0 C9           	ret
 163+ 88A1
 164+ 88A1 EB           Situa_DE ex de,hl
 165+ 88A2 A7           	and a
 166+ 88A3 ED 4A        	adc hl,bc
 167+ 88A5 EB           	ex de,hl
 168+ 88A6 C9           	ret
 169+ 88A7
 170+ 88A7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A7              ;
 172+ 88A7              ;	21/5/23
 173+ 88A7              ;
 174+ 88A7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A7              ;
 177+ 88A7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A7              ;
 181+ 88A7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A7              ;	MODIFICA: A y B.
 183+ 88A7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A7
 185+ 88A7              Admin_num_entidades
 186+ 88A7
 187+ 88A7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A7
 189+ 88A7 3A 0E 89     	ld a,(Numero_de_entidades)
 190+ 88AA A7           	and a
 191+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AB              ;	jr z,$
 193+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AB
 195+ 88AB 20 03        	jr nz,3F
 196+ 88AD
 197+ 88AD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AD
 199+ 88AD CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B0
 201+ 88B0 3A 0E 89     3 ld a,(Numero_de_entidades)
 202+ 88B3 FE 07        	cp 7
 203+ 88B5 38 08        	jr c,1F
 204+ 88B7
 205+ 88B7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B7              ; Actualizamos variables.
 207+ 88B7
 208+ 88B7 3E 07        	ld a,7
 209+ 88B9 32 0F 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BC 47           	ld b,a
 211+ 88BD 18 04        	jr 2F
 212+ 88BF
 213+ 88BF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88BF              ; (Numero_de_entidades)="0".
 215+ 88BF
 216+ 88BF 32 0F 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C2 47           	ld b,a
 218+ 88C3 C9           2 ret
# file closed: Niveles.asm
  98  88C4
  99  88C4              ; ******************************************************************************************************************************************************************************************
 100  88C4              ; Constantes.
 101  88C4              ; ******************************************************************************************************************************************************************************************
 102  88C4              ;
 103  88C4              ; 10/11/23
 104  88C4
 105  88C4              ;
 106  88C4              ; Constantes generales.
 107  88C4              ;
 108  88C4
 109  88C4              Sprite_vacio equ $f000
 110  88C4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88C4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88C4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88C4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88C4
 115  88C4              Almacen_de_movimientos_masticados equ $5cd0				; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 116  88C4              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 117  88C4              ;														; 4799 bytes, 4,8Kb.
 118  88C4              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 119  88C4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 120  88C4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 121  88C4              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 122  88C4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 123  88C4
 124  88C4              ;														; 55 Bytes.
 125  88C4
 126  88C4              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 127  88C4              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 65 bytes.
 128  88C4
 129  88C4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 130  88C4
 131  88C4              ; ******************************************************************************************************************************************************************************************
 132  88C4              ; Variables.
 133  88C4              ; ******************************************************************************************************************************************************************************************
 134  88C4              ;
 135  88C4              ; 12/12//23
 136  88C4              ;
 137  88C4              ; Variables de DRAW. (Motor principal).
 138  88C4              ;
 139  88C4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 140  88C4
 141  88C4 00           Filas db 0												; Filas. [DRAW]
 142  88C5 00           Columns db 0  											; Nº de columnas. [DRAW]
 143  88C6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 144  88C8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 145  88CA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 146  88CB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 147  88CC
 148  88CC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 149  88CC
 150  88CC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 151  88CD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 152  88CD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 153  88CD 00           Attr db 0												; Atributos de la entidad:
 154  88CE
 155  88CE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 156  88CE              ;
 157  88CE              ;	COLORES: 0 ..... NEGRO
 158  88CE              ;    		 1 ..... AZUL
 159  88CE              ; 			 2 ..... ROJO
 160  88CE              ;			 3 ..... MAGENTA
 161  88CE              ; 			 4 ..... VERDE
 162  88CE              ; 			 5 ..... CIAN
 163  88CE              ;			 6 ..... AMARILLO
 164  88CE              ; 			 7 ..... BLANCO
 165  88CE
 166  88CE 00 00        Indice_Sprite_der defw 0
 167  88D0 00 00        Indice_Sprite_izq defw 0
 168  88D2 00 00        Puntero_DESPLZ_der defw 0
 169  88D4 00 00        Puntero_DESPLZ_izq defw 0
 170  88D6
 171  88D6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 172  88D8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 173  88D9
 174  88D9              ; Variables de objeto. (Características).
 175  88D9
 176  88D9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 177  88DA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 178  88DB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 179  88DC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 180  88DD
 181  88DD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 182  88DE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 183  88DE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 184  88DE 00 00 00...  Variables_de_borrado ds 6
 185  88E4
 186  88E4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 187  88E6 00 00        	defw 0
 188  88E8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 189  88EA 00 00 00 00  	db 0,0,0,0
 190  88EE
 191  88EE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 192  88F0              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 193  88F0
 194  88F0 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados
 195  88F2
 196  88F2              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 197  88F2              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 198  88F2
 199  88F2              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 200  88F2
 201  88F2 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 202  88F3              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 203  88F3              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 204  88F3              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 205  88F3              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 206  88F3              ;
 207  88F3              ; 														DESCRIPCIÖN:
 208  88F3              ;
 209  88F3              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 210  88F3              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 211  88F3              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 212  88F3              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 213  88F3              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 214  88F3              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 215  88F3              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 216  88F3              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 217  88F3              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 218  88F3              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 219  88F3              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 220  88F3              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 221  88F3              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 222  88F3              ;
 223  88F3              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 224  88F3              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 225  88F3              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 226  88F3
 227  88F3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 228  88F3
 229  88F3 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 230  88F5 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 231  88F7 00 00        Puntero_indice_mov_bucle defw 0							;
 232  88F9              ;
 233  88F9              ;
 234  88F9 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 235  88FA              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 236  88FA              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 237  88FA 00           Incrementa_puntero_backup db 0
 238  88FB 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 239  88FC              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 240  88FC 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 241  88FD 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 242  88FE 00           Cola_de_desplazamiento db 0								; Este byte indica:
 243  88FF              ;
 244  88FF              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 245  88FF              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 246  88FF              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 247  88FF              ;
 248  88FF              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 249  88FF              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 250  88FF              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 251  88FF              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 252  88FF              ;
 253  88FF              ;														;	"$ff" ..... Bucle infinito de repetición.
 254  88FF              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 255  88FF              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 256  88FF
 257  88FF
 258  88FF              ; Variables de funcionamiento. [DRAW].
 259  88FF
 260  88FF 00           Columnas db 0
 261  8900 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 262  8902              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 263  8902 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 264  8903
 265  8903              ; variables de control general.
 266  8903
 267  8903 00           Ctrl_2 db 0
 268  8904              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 269  8904              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 270  8904              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 271  8904              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 272  8904              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 273  8904              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 274  8904              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 275  8904              ;
 276  8904              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 277  8904              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 278  8904              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 279  8904              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 280  8904              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 281  8904              ;														BIT 4, ???
 282  8904              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 283  8904
 284  8904 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 285  8905
 286  8905              ;! 65 Bytes por entidad.
 287  8905
 288  8905              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 289  8905              ;					         		---------;      ;---------
 290  8905
 291  8905
 292  8905              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 293  8905
 294  8905 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 295  8906
 296  8906              ;														DESCRIPCIÓN:
 297  8906              ;
 298  8906              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 299  8906              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 300  8906              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 301  8906              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 302  8906              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 303  8906              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 304  8906
 305  8906              ;														BIT 3, Recarga de nueva oleada.
 306  8906              ;														BIT 4, Recarga de nueva oleada.
 307  8906              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 308  8906              ;														BIT 6, **** Frame completo.
 309  8906              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 310  8906
 311  8906 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 312  8908              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 313  8908              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 314  8908              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 315  8908
 316  8908              ; Gestión de ENTIDADES y CAJAS.
 317  8908
 318  8908 00 00        Puntero_store_caja defw 0
 319  890A 00 00        Puntero_restore_caja defw 0
 320  890C 00 00        Indice_restore_caja defw 0
 321  890E 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 322  890F 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 323  8910 00           Entidades_en_curso db 0									; ..... ..... .....
 324  8911 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 325  8912              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 326  8912              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 327  8912              ;														; _ (Numero_de_malotes)="0".
 328  8912 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 329  8914 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 330  8916              ;														; _ puntero (Indice_entidades).
 331  8916
 332  8916
 333  8916              ;---------------------------------------------------------------------------------------------------------------
 334  8916              ;
 335  8916              ;	18/11/23
 336  8916              ;
 337  8916              ;	Álbumes.
 338  8916
 339  8916 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 340  8918              ;														; _variable para almacenar lo posición del puntero_
 341  8918              ; 														; _de pila, SP.
 342  8918 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 343  891A              ;														; La utiliza la rutina [Extrae_foto_registros].
 344  891A 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 345  891C 00 70        Stack_snapshot defw Album_de_fotos
 346  891E 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 347  8920
 348  8920              ;End_Snapshot defw Album_de_fotos
 349  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 350  8920 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 351  8922              ;														; _el snapshot de los registros del siguiente disparo.
 352  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 353  8922 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 354  8924
 355  8924 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 356  8925              ;
 357  8925              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 358  8925              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 359  8925
 360  8925              ; Gestión de Disparos.
 361  8925
 362  8925 00           Numero_de_disparotes db 0
 363  8926 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 364  8928 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 365  892A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 366  892B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 367  892B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 368  892B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 369  892D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 370  892D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 371  892D              ;														; _produzca colisión.
 372  892D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 373  892F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 374  892F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 375  8932              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 376  8932 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 377  8935              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 378  8935 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 379  8936
 380  8936              ;---------------------------------------------------------------------------------------------------------------
 381  8936
 382  8936              ; Relojes y temporizaciones.
 383  8936
 384  8936 00           Contador_de_frames db 0
 385  8937 00           Contador_de_frames_2 db 0
 386  8938
 387  8938 04           Clock_explosion db 4
 388  8939 1E           Clock_Entidades_en_curso db 30
 389  893A 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 390  893B              ;														; Repite la oleada de entidades.
 391  893B 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 392  893C 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 393  893D 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 394  893E
 395  893E 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 396  893F 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 397  8940 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 398  8941
 399  8941              ;---------------------------------------------------------------------------------------------------------------
 400  8941
 401  8941              ; Gestión de NIVELES.
 402  8941
 403  8941 00           Nivel db 0												; Nivel actual del juego.
 404  8942 00 00        Puntero_indice_NIVELES defw 0
 405  8944 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 406  8946              ; 														; _ que definen el NIVEL.
 407  8946              ; Y todo comienza aquí .....
 408  8946              ;
 409  8946              ; Rutina principal *************************************************************************************************************************************************************************
 410  8946              ;
 411  8946              ;	16/11/22
 412  8946
 413  8946              START
 414  8946
 415  8946 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 416  8949 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 417  894B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 418  894D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 419  894F F3           	DI
 420  8950
 421  8950 3E 07        	ld a,%00000111
 422  8952 CD 76 99     	call Cls
 423  8955
 424  8955 CD C6 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 425  8958
 426  8958              ; INICIALIZACIÓN.
 427  8958
 428  8958 CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 429  895B CD 20 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 430  895E CD 55 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 431  8961              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 432  8961 CD 76 8D     	call Restore_entidad
 433  8964
 434  8964 21 0F 89     	ld hl,Numero_parcial_de_entidades
 435  8967 46           	ld b,(hl)
 436  8968 04           	inc b
 437  8969 05           	dec b
 438  896A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 439  896C
 440  896C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 441  896C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 442  896C              ;	Pintamos el resto de entidades:
 443  896C
 444  896C              ;	INICIA ENTIDADES !!!!!
 445  896C
 446  896C C5           1 push bc  												; Guardo el contador de entidades.
 447  896D CD 8B 8B     	call Inicia_entidad
 448  8970 C1           	pop bc
 449  8971 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 450  8973
 451  8973              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 452  8973              ; (Esto se dá cuando se inicia una nueva oleada).
 453  8973
 454  8973 3A 05 89     	ld a,(Ctrl_1)
 455  8976 CB 5F        	bit 3,a
 456  8978 20 1B        	jr nz,5F											; Loop
 457  897A
 458  897A              ; 	INICIA AMADEUS !!!!!
 459  897A
 460  897A CD 9D 8D     3 call Restore_Amadeus
 461  897D CD F3 8C     	call Inicia_Puntero_objeto
 462  8980 CD 69 93     	call Draw
 463  8983 CD A0 7F     	call Guarda_foto_registros
 464  8986 CD 1A 8E     	call Guarda_datos_de_borrado_Amadeus
 465  8989
 466  8989 11 7E 85     	ld de,Amadeus_db
 467  898C CD AF 8D     	call Store_Amadeus
 468  898F
 469  898F              ; 	INICIA DISPAROS !!!!!
 470  898F
 471  898F CD 6B 8C     	call Inicia_Puntero_Disparo_Entidades
 472  8992 CD 72 8C     	call Inicia_Puntero_Disparo_Amadeus
 473  8995
 474  8995              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 475  8995
 476  8995 CD 55 8C     5 call Inicia_punteros_de_cajas
 477  8998 CD 76 8D     	call Restore_entidad
 478  899B
 479  899B 3A 05 89     	ld a,(Ctrl_1)
 480  899E CB 5F        	bit 3,a
 481  89A0 28 07        	jr z,6F
 482  89A2
 483  89A2              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 484  89A2
 485  89A2 21 05 89     	ld hl,Ctrl_1
 486  89A5 CB 9E        	res 3,(hl)
 487  89A7 18 07        	jr Main
 488  89A9
 489  89A9              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 490  89A9
 491  89A9 21 24 89     6 ld hl,Ctrl_3
 492  89AC CB C6        	set 0,(hl)											; Frame completo.
 493  89AE FB           	ei
 494  89AF 76           	halt
 495  89B0
 496  89B0              ; ------------------------------------
 497  89B0
 498  89B0              Main
 499  89B0              ;
 500  89B0              ;	11/12/23
 501  89B0
 502  89B0              ; Aparece nueva entidad ???
 503  89B0
 504  89B0              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 505  89B0              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 506  89B0              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 507  89B0              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 508  89B0              ;														; _un 2º bloque.
 509  89B0
 510  89B0 3A 39 89     	ld a,(Clock_Entidades_en_curso)
 511  89B3 47           	ld b,a
 512  89B4 3A 36 89     	ld a,(Contador_de_frames)
 513  89B7 B8           	cp b
 514  89B8 20 18        	jr nz,13F
 515  89BA
 516  89BA              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 517  89BA              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 518  89BA              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 519  89BA              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 520  89BA
 521  89BA              ;	inc a
 522  89BA              ;	cp b
 523  89BA              ;	jr nz,13F
 524  89BA
 525  89BA
 526  89BA              ;23 ld (Contador_de_frames),a
 527  89BA
 528  89BA              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 529  89BA              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 530  89BA
 531  89BA 3A 0F 89     21 ld a,(Numero_parcial_de_entidades)
 532  89BD 47           	ld b,a
 533  89BE 3A 10 89     	ld a,(Entidades_en_curso)
 534  89C1 B8           	cp b
 535  89C2 28 0E        	jr z,13F
 536  89C4 30 0C        	jr nc,13F
 537  89C6
 538  89C6              ; --- --- --- --- ---
 539  89C6
 540  89C6 3C           	inc a
 541  89C7 32 10 89     	ld (Entidades_en_curso),a
 542  89CA
 543  89CA              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 544  89CA
 545  89CA 3A 39 89     	ld a,(Clock_Entidades_en_curso)
 546  89CD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 547  89CD              ;! _ IMPREDECIBLE !!!!
 548  89CD C6 32        	add 50
 549  89CF 32 39 89     	ld (Clock_Entidades_en_curso),a
 550  89D2
 551  89D2              ; -------------------------------------------------------------------------------------------------------------
 552  89D2
 553  89D2              ; Habilita disparos.
 554  89D2
 555  89D2 21 3B 89     13 ld hl,Disparo_Amadeus
 556  89D5 11 3D 89     	ld de,CLOCK_repone_disparo_Amadeus
 557  89D8 CD 5E 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 558  89DB
 559  89DB 21 3E 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 560  89DE 11 40 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 561  89E1 CD 5E 9D     	call Habilita_disparos
 562  89E4
 563  89E4              ; COLISIONES.
 564  89E4
 565  89E4 CD 69 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 566  89E7
 567  89E7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 568  89E7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 569  89E7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 570  89E7
 571  89E7 AF           	xor a
 572  89E8 32 2A 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 573  89EB
 574  89EB CD 55 8C     	call Inicia_punteros_de_cajas
 575  89EE CD 76 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 576  89F1              ; 														; _ en DRAW.
 577  89F1 3A C4 88     	ld a,(Filas)
 578  89F4 A7           	and a
 579  89F5 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 580  89F7 CD 88 8D     	call Incrementa_punteros_de_cajas
 581  89FA 18 F2        	jr 12B
 582  89FC
 583  89FC              ; ---------------------------------------------------------------------------------------
 584  89FC
 585  89FC 3A 0F 89     10 ld a,(Numero_parcial_de_entidades)
 586  89FF 47               ld b,a
 587  8A00 A7           	and a
 588  8A01 20 14        	jr nz,11F
 589  8A03
 590  8A03 21 05 89     	ld hl,Ctrl_1
 591  8A06 CB 66        	bit 4,(hl)
 592  8A08 C2 B0 8A     	jp nz,16F
 593  8A0B
 594  8A0B              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 595  8A0B
 596  8A0B 21 05 89     	ld hl,Ctrl_1
 597  8A0E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 598  8A10
 599  8A10 3A 36 89     	ld a,(Contador_de_frames)
 600  8A13 3C           	inc a
 601  8A14 32 3A 89     	ld (Activa_recarga_cajas),a
 602  8A17
 603  8A17              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 604  8A17
 605  8A17 3A 10 89     11 ld a,(Entidades_en_curso)
 606  8A1A A7           	and a
 607  8A1B CA B0 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 608  8A1E 47           	ld b,a												; No hay entidades que gestionar.
 609  8A1F
 610  8A1F              ; ( Código que ejecutamos con cada entidad: ).
 611  8A1F
 612  8A1F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 613  8A1F
 614  8A1F C5           15 push bc 												; Nº de entidades en curso.
 615  8A20
 616  8A20              ; Existe "Entidad_guía" ???.
 617  8A20              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 618  8A20
 619  8A20 3A 24 89     	ld a,(Ctrl_3)
 620  8A23 CB 4F        	bit 1,a
 621  8A25 20 11        	jr nz,22F
 622  8A27
 623  8A27              ; Almacén de "Movimientos_masticados" lleno ???
 624  8A27              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 625  8A27              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 626  8A27
 627  8A27 3A 24 89     	ld a,(Ctrl_3)
 628  8A2A CB 57        	bit 2,a
 629  8A2C 20 0A        	jr nz,22F
 630  8A2E
 631  8A2E              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 632  8A2E
 633  8A2E 21 03 89     	ld hl,Ctrl_2
 634  8A31 CB EE        	set 5,(hl)
 635  8A33 21 24 89     	ld hl,Ctrl_3
 636  8A36 CB CE        	set 1,(hl)
 637  8A38
 638  8A38              ; Impacto ???
 639  8A38
 640  8A38 3A DD 88     22 ld a,(Impacto)
 641  8A3B A7           	and a
 642  8A3C 28 31        	jr z,8F
 643  8A3E
 644  8A3E              ; Hay Impacto en esta entidad.
 645  8A3E
 646  8A3E 21 38 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 647  8A41 35           	dec (hl)
 648  8A42 C2 A3 8A     	jp nz,17F
 649  8A45
 650  8A45              ;! Velocidad de la animación de la explosión.
 651  8A45
 652  8A45 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 653  8A47              ;														; _,(velocidad de la explosión).
 654  8A47
 655  8A47              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 656  8A47
 657  8A47 CD 3A 8E     	call Repone_datos_de_borrado
 658  8A4A CD 93 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 659  8A4D
 660  8A4D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 661  8A4D
 662  8A4D 3A 03 89     	ld a,(Ctrl_2)
 663  8A50 CB 4F        	bit 1,a
 664  8A52 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 665  8A54
 666  8A54              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 667  8A54
 668  8A54 3A CC 88     	ld a,(CTRL_DESPLZ)
 669  8A57 A7           	and a
 670  8A58 20 08        	jr nz,18F
 671  8A5A
 672  8A5A 21 84 84     	ld hl,Indice_Explosion_2x2-2
 673  8A5D 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 674  8A60 18 06        	jr 19F
 675  8A62
 676  8A62 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 677  8A65 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 678  8A68
 679  8A68 21 03 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 680  8A6B CB CE        	set 1,(hl)
 681  8A6D 18 22        	jr 7F
 682  8A6F
 683  8A6F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 684  8A6F              ; _con las coordenadas de la entidad almacenada en DRAW.
 685  8A6F
 686  8A6F 3A 05 89     8 ld a,(Ctrl_1)
 687  8A72 CB 57        	bit 2,a
 688  8A74 28 1B        	jr z,7F
 689  8A76
 690  8A76 2A 2D 89     	ld hl,(Coordenadas_disparo_certero)
 691  8A79 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 692  8A7A              ;														; E contiene la coordenada_X del disparo.
 693  8A7A 2A CA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 694  8A7D              ;														; H FILA, (Coordenada_y de la entidad).
 695  8A7D A7           	and a
 696  8A7E ED 52        	sbc hl,de
 697  8A80
 698  8A80 CD 82 92     	call Determina_resultado_comparativa
 699  8A83
 700  8A83 78           	ld a,b
 701  8A84 A7           	and a
 702  8A85 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 703  8A87
 704  8A87              ; ----- ----- -----
 705  8A87
 706  8A87 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 707  8A89 32 DD 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 708  8A8C
 709  8A8C 21 05 89     	ld hl,Ctrl_1
 710  8A8F CB 96        	res 2,(hl)
 711  8A91
 712  8A91 CD 01 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 713  8A94
 714  8A94 3A F2 88     	ld a,(Ctrl_0)
 715  8A97 CB 67        	bit 4,a
 716  8A99 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 717  8A9B
 718  8A9B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 719  8A9B              ; [[[
 720  8A9B              ;	call Detecta_disparo_entidad
 721  8A9B              ; ]]]
 722  8A9B
 723  8A9B CD EB 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 724  8A9E
 725  8A9E 21 F2 88     	ld hl,Ctrl_0
 726  8AA1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 727  8AA3
 728  8AA3 CD 3B 8D     17 call Store_Restore_cajas
 729  8AA6
 730  8AA6 C1           	pop bc
 731  8AA7
 732  8AA7 05           	dec b
 733  8AA8 C2 1F 8A     	jp nz,15B
 734  8AAB
 735  8AAB              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 736  8AAB              ; Hemos gestionado todas las unidades.
 737  8AAB              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 738  8AAB
 739  8AAB 21 05 89     	ld hl,Ctrl_1
 740  8AAE CB 96        	res 2,(hl)
 741  8AB0
 742  8AB0 21 24 89     16 ld hl,Ctrl_3
 743  8AB3 CB C6        	set 0,(hl)											; Frame completo.
 744  8AB5 AF           	xor a
 745  8AB6 D3 FE        	out ($fe),a
 746  8AB8 FB           	ei
 747  8AB9 76           	halt
 748  8ABA
 749  8ABA              ; ----------------------------------------
 750  8ABA
 751  8ABA 3A 05 89     	ld a,(Ctrl_1) 										; Existe Loop?
 752  8ABD CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 753  8ABF CA B0 89     	jp z,Main
 754  8AC2
 755  8AC2              ; RECARGA DE NUEVA OLEADA.
 756  8AC2
 757  8AC2 3A 36 89     	ld a,(Contador_de_frames)
 758  8AC5 47           	ld b,a
 759  8AC6 3A 3A 89     	ld a,(Activa_recarga_cajas)
 760  8AC9 B8           	cp b
 761  8ACA 28 08        	jr z,20F
 762  8ACC
 763  8ACC 21 05 89     	ld hl,Ctrl_1
 764  8ACF CB E6        	set 4,(hl)
 765  8AD1 C3 B0 89     	jp Main
 766  8AD4
 767  8AD4 21 05 89     20 ld hl,Ctrl_1
 768  8AD7 CB A6        	res 4,(hl)
 769  8AD9
 770  8AD9 3A 36 89     	ld a,(Contador_de_frames)
 771  8ADC
 772  8ADC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 773  8ADC              ;! _ IMPREDECIBLE !!!!
 774  8ADC
 775  8ADC C6 0A        	add 10
 776  8ADE 32 39 89     	ld (Clock_Entidades_en_curso),a
 777  8AE1
 778  8AE1 C3 5B 89     	jp 4B
 779  8AE4
 780  8AE4 C9           	ret
 781  8AE5
 782  8AE5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 783  8AE5              ;
 784  8AE5              ;	16/11/23
 785  8AE5
 786  8AE5              Gestiona_Amadeus
 787  8AE5
 788  8AE5              ;! Activa/desactiva impacto con Amadeus.
 789  8AE5
 790  8AE5              ;	ld a,(Impacto)
 791  8AE5              ;	and a
 792  8AE5              ;	jr nz,2F
 793  8AE5
 794  8AE5 CD 78 8B     	call Mov_Amadeus
 795  8AE8
 796  8AE8 3A F2 88     2 ld a,(Ctrl_0)
 797  8AEB CB 67        	bit 4,a
 798  8AED 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 799  8AEF
 800  8AEF CD EB 8B     	call Guarda_foto_entidad_a_pintar
 801  8AF2 CD 1A 8E     	call Guarda_datos_de_borrado_Amadeus
 802  8AF5
 803  8AF5 21 F2 88     1 ld hl,Ctrl_0
 804  8AF8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 805  8AFA
 806  8AFA CD 0D 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 807  8AFD
 808  8AFD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 809  8AFD
 810  8AFD CD D5 8C     	call Calcula_numero_de_disparotes
 811  8B00
 812  8B00 C9           	ret
 813  8B01
 814  8B01              ; --------------------------------------------------------------------------------------------------------------
 815  8B01              ;
 816  8B01              ;	15/12/23
 817  8B01
 818  8B01              Mov_obj
 819  8B01
 820  8B01 3A 03 89     	ld a,(Ctrl_2)
 821  8B04 CB 4F        	bit 1,a
 822  8B06 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 823  8B08
 824  8B08              ; Explosión:
 825  8B08
 826  8B08 3A 04 89     	ld a,(Frames_explosion)
 827  8B0B A7           	and a
 828  8B0C 20 1D        	jr nz,4F
 829  8B0E
 830  8B0E              ; Una alimaña menos!!!!!!!!!1
 831  8B0E
 832  8B0E              ; Se trataba de una Entidad_guía ???
 833  8B0E
 834  8B0E 3A 03 89     	ld a,(Ctrl_2)
 835  8B11 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 836  8B13 28 05        	jr z,5F
 837  8B15
 838  8B15 21 24 89     	ld hl,Ctrl_3
 839  8B18 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 840  8B1A
 841  8B1A CD B8 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 842  8B1D 21 0F 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 843  8B20 35           	dec (hl)
 844  8B21 21 10 89     	ld hl,Entidades_en_curso
 845  8B24 35           	dec (hl)
 846  8B25 21 0E 89     	ld hl,Numero_de_entidades
 847  8B28 35           	dec (hl)
 848  8B29 18 4C        	jr 3F
 849  8B2B
 850  8B2B              ; -----
 851  8B2B
 852  8B2B              ;	`Movemos´ la explosión.
 853  8B2B
 854  8B2B 2A D2 88     4 ld hl,(Puntero_DESPLZ_der)
 855  8B2E 23           	inc hl
 856  8B2F 23           	inc hl
 857  8B30 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 858  8B33 CD ED 8C     	call Extrae_address
 859  8B36 22 C8 88     	ld (Puntero_objeto),hl
 860  8B39
 861  8B39 21 04 89     	ld hl,Frames_explosion
 862  8B3C 35           	dec (hl)
 863  8B3D
 864  8B3D 21 F2 88     	ld hl,Ctrl_0
 865  8B40 CB E6        	set 4,(hl)
 866  8B42
 867  8B42 18 33        	jr 3F
 868  8B44
 869  8B44              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 870  8B44
 871  8B44 AF           2 xor a
 872  8B45 32 F2 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 873  8B48
 874  8B48              ; Movemos Entidades malignas.
 875  8B48              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 876  8B48
 877  8B48 3A 03 89     	ld a,(Ctrl_2)
 878  8B4B CB 6F        	bit 5,a
 879  8B4D 20 07        	jr nz,8F
 880  8B4F
 881  8B4F 21 F2 88     	ld hl,Ctrl_0										; Movemos una entidad
 882  8B52 CB E6        	set 4,(hl)
 883  8B54 18 09        	jr 7F
 884  8B56
 885  8B56 CD 09 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 886  8B59
 887  8B59 3A F2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 888  8B5C CB 67        	bit 4,a
 889  8B5E C8           	ret z
 890  8B5F
 891  8B5F              ; Ha habido desplazamiento de la entidad maligna.
 892  8B5F              ; Ha llegado a zona de AMADEUS ???
 893  8B5F
 894  8B5F 3A CB 88     7 ld a,(Coordenada_y)
 895  8B62 FE 14        	cp $14
 896  8B64 38 08        	jr c,1F
 897  8B66
 898  8B66              ; ---------
 899  8B66
 900  8B66              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 901  8B66              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 902  8B66
 903  8B66 F3           	di
 904  8B67 CD 32 90     	call Genera_coordenadas_X
 905  8B6A CD 6E 90     	call Compara_coordenadas_X
 906  8B6D FB           	ei
 907  8B6E
 908  8B6E              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 909  8B6E
 910  8B6E              ; ---------
 911  8B6E
 912  8B6E CD 3D 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 913  8B71 CD 3A 8E     	call Repone_datos_de_borrado 							; BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 914  8B74 CD 93 8C     	call Limpia_Variables_de_borrado
 915  8B77
 916  8B77 C9           3 ret
 917  8B78
 918  8B78              ; --------------------------------------------------------------------------------------------------------------
 919  8B78              ;
 920  8B78              ;	29/1/23
 921  8B78
 922  8B78              Mov_Amadeus
 923  8B78
 924  8B78 CD DA 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 925  8B7B
 926  8B7B 3A F2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 927  8B7E CB 67        	bit 4,a
 928  8B80 C8           	ret z
 929  8B81
 930  8B81              ; ---------
 931  8B81
 932  8B81 CD 3D 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 933  8B84 CD 2A 8E     	call Repone_datos_de_borrado_Amadeus
 934  8B87 CD 93 8C     	call Limpia_Variables_de_borrado
 935  8B8A
 936  8B8A C9           	ret
 937  8B8B
 938  8B8B              ; -----------------------------------------------------------------------------------
 939  8B8B              ;
 940  8B8B              ;	12/12/23
 941  8B8B              ;
 942  8B8B              ;	Inicia Entidades y fija "Entidad_guía".
 943  8B8B
 944  8B8B              Inicia_entidad
 945  8B8B
 946  8B8B CD BD 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 947  8B8E CD F3 8C     	call Inicia_Puntero_objeto
 948  8B91 CD 8A 99     	call Recompone_posicion_inicio
 949  8B94 CD 69 93     	call Draw
 950  8B97 CD A2 8B     	call Guarda_movimiento_masticado
 951  8B9A CD A0 7F     	call Guarda_foto_registros
 952  8B9D F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 953  8B9E              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 954  8B9E              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 955  8B9E CD 3B 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 956  8BA1 C9           	ret
 957  8BA2
 958  8BA2
 959  8BA2              ; -----------------------------------------------------------------------------------
 960  8BA2              ;
 961  8BA2              ;	15/12/23
 962  8BA2              ;
 963  8BA2              ;	Inicia Entidades y fija "Entidad_guía".
 964  8BA2
 965  8BA2 3A 03 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 966  8BA5 CB 6F        	bit 5,a
 967  8BA7 C8           	ret z
 968  8BA8 ED 73 16 89  	ld (Stack),sp
 969  8BAC ED 7B F0 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
 970  8BB0 E5           	push hl
 971  8BB1 DD E5            push ix
 972  8BB3 FD E5            push iy
 973  8BB5 ED 7B 16 89      ld sp,(Stack)
 974  8BB9 CD D4 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados
 975  8BBC C9               ret
 976  8BBD
 977  8BBD              ; --------------------------------------------------------------------------------------------------------------
 978  8BBD              ;
 979  8BBD              ;	12/12/23
 980  8BBD              ;
 981  8BBD
 982  8BBD              Inicia_entidad_guia
 983  8BBD
 984  8BBD              ; Existe "Entidad_guía" ???
 985  8BBD
 986  8BBD 3A 24 89     	ld a,(Ctrl_3)
 987  8BC0 CB 4F        	bit 1,a
 988  8BC2 C0           	ret nz
 989  8BC3
 990  8BC3              ; Inicia Entidad_guía:
 991  8BC3
 992  8BC3 21 03 89     	ld hl,Ctrl_2
 993  8BC6 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
 994  8BC8 21 24 89     	ld hl,Ctrl_3
 995  8BCB CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
 996  8BCD
 997  8BCD 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados+6
 998  8BD0 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
 999  8BD3
1000  8BD3 C9           	ret
1001  8BD4
1002  8BD4              ; --------------------------------------------------------------------------------------------------------------
1003  8BD4              ;
1004  8BD4              ;	13/12/23
1005  8BD4              ;
1006  8BD4
1007  8BD4              Actualiza_Puntero_de_almacen_de_mov_masticados
1008  8BD4
1009  8BD4              ;	Entidad_guía ???
1010  8BD4
1011  8BD4 3A 03 89     	ld a,(Ctrl_2)
1012  8BD7 CB 6F        	bit 5,a
1013  8BD9 C8           	ret z
1014  8BDA
1015  8BDA E5           	push hl
1016  8BDB C5           	push bc
1017  8BDC
1018  8BDC 2A F0 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1019  8BDF 01 06 00     	ld bc,6
1020  8BE2 A7           	and a
1021  8BE3 ED 4A        	adc hl,bc
1022  8BE5 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1023  8BE8
1024  8BE8 C1           	pop bc
1025  8BE9 E1           	pop hl
1026  8BEA
1027  8BEA C9           	ret
1028  8BEB
1029  8BEB              ; --------------------------------------------------------------------------------------------------------------
1030  8BEB              ;
1031  8BEB              ;	31/08/23
1032  8BEB              ;
1033  8BEB              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1034  8BEB              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1035  8BEB
1036  8BEB              Guarda_foto_entidad_a_pintar
1037  8BEB
1038  8BEB              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
1039  8BEB
1040  8BEB 3A F2 88     	ld a,(Ctrl_0)
1041  8BEE CB 77        	bit 6,a
1042  8BF0 20 16        	jr nz,2F
1043  8BF2
1044  8BF2 3A 24 89     	ld a,(Ctrl_3)
1045  8BF5 CB 5F        	bit 3,a
1046  8BF7 28 04        	jr z,1F
1047  8BF9
1048  8BF9 CD 12 8C     	call Prepara_registros_con_mov_masticados
1049  8BFC C9           	ret
1050  8BFD
1051  8BFD CB 57        1 bit 2,a
1052  8BFF 28 07        	jr z,2F
1053  8C01
1054  8C01              ; Hemos completado todos los movimientos masticados.
1055  8C01
1056  8C01 CB 97        	res 2,a
1057  8C03 CB DF        	set 3,a
1058  8C05 32 24 89     	ld (Ctrl_3),a
1059  8C08
1060  8C08 CD 69 93     2 call Draw
1061  8C0B CD A2 8B     	call Guarda_movimiento_masticado
1062  8C0E CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1063  8C11
1064  8C11 C9           	ret
1065  8C12
1066  8C12              ; --------------------------------------------------------------------------------------------------------------
1067  8C12              ;
1068  8C12              ;	17/12/23
1069  8C12
1070  8C12 ED 73 16 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1071  8C16 ED 7B F0 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1072  8C1A FD E1        	pop iy
1073  8C1C DD E1        	pop ix
1074  8C1E E1           	pop hl
1075  8C1F ED 73 F0 88  	ld (Puntero_de_almacen_de_mov_masticados),sp
1076  8C23 ED 7B 16 89  	ld sp,(Stack)
1077  8C27
1078  8C27 CD A0 7F     	call Guarda_foto_registros
1079  8C2A
1080  8C2A E5           	push hl
1081  8C2B C5           	push bc
1082  8C2C
1083  8C2C 21 90 6F     	ld hl,$6f90
1084  8C2F ED 4B F0 88  	ld bc,(Puntero_de_almacen_de_mov_masticados)
1085  8C33 A7           	and a
1086  8C34 ED 42        	sbc hl,bc
1087  8C36
1088  8C36 F3           	di
1089  8C37 28 FE        	jr z,$
1090  8C39 FB           	ei
1091  8C3A
1092  8C3A              ;	ld hl,Almacen_de_movimientos_masticados
1093  8C3A              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1094  8C3A
1095  8C3A C1           	pop bc
1096  8C3B E1           	pop hl
1097  8C3C
1098  8C3C
1099  8C3C C9           	ret
1100  8C3D
1101  8C3D              ; --------------------------------------------------------------------------------------------------------------
1102  8C3D              ;
1103  8C3D              ;	19/9/23
1104  8C3D
1105  8C3D 21 C4 88     Prepara_var_pintado ld hl,Filas
1106  8C40 11 E4 88     	ld de,Variables_de_pintado
1107  8C43 01 08 00     	ld bc,8
1108  8C46 ED B0        	ldir
1109  8C48 C9           	ret
1110  8C49
1111  8C49              ; --------------------------------------------------------------------------------------------------------------
1112  8C49
1113  8C49 21 E4 88     Repone_pintar ld hl,Variables_de_pintado
1114  8C4C 11 C4 88     	ld de,Filas
1115  8C4F 01 08 00     	ld bc,8
1116  8C52 ED B0        	ldir
1117  8C54 C9           	ret
1118  8C55
1119  8C55              ; *************************************************************************************************************************************************************
1120  8C55              ;
1121  8C55              ; 8/1/23
1122  8C55              ;
1123  8C55              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1124  8C55              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1125  8C55              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1126  8C55
1127  8C55              ; Destruye HL y DE !!!!!
1128  8C55
1129  8C55              Inicia_punteros_de_cajas
1130  8C55
1131  8C55 21 6C 85     	ld hl,Indice_de_cajas
1132  8C58 CD ED 8C         call Extrae_address
1133  8C5B 22 08 89         ld (Puntero_store_caja),hl
1134  8C5E 21 6E 85     	ld hl,Indice_de_cajas+2
1135  8C61 22 0C 89     	ld (Indice_restore_caja),hl
1136  8C64 CD ED 8C     	call Extrae_address
1137  8C67 22 0A 89     	ld (Puntero_restore_caja),hl
1138  8C6A C9               ret
1139  8C6B
1140  8C6B              ; *************************************************************************************************************************************************************
1141  8C6B              ;
1142  8C6B              ; 8/1/23
1143  8C6B              ;
1144  8C6B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1145  8C6B
1146  8C6B 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1147  8C6E 22 26 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1148  8C71 C9           	ret
1149  8C72 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1150  8C75 22 28 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1151  8C78 C9           	ret
1152  8C79
1153  8C79              ; -------------------------------------------------------------------------------------------------------------
1154  8C79              ;
1155  8C79              ; 21/9/23
1156  8C79              ;
1157  8C79
1158  8C79              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1159  8C79
1160  8C79              Limpia_album_Amadeus
1161  8C79
1162  8C79 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1163  8C7C 7E           	ld a,(hl)
1164  8C7D A7           	and a
1165  8C7E C8           	ret z
1166  8C7F
1167  8C7F 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1168  8C82 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1169  8C85 01 0B 00     	ld bc,11
1170  8C88 AF           	xor a
1171  8C89 77           	ld (hl),a
1172  8C8A ED B0        	ldir
1173  8C8C
1174  8C8C 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1175  8C8F 22 22 89     	ld (End_Snapshot_Amadeus),hl
1176  8C92
1177  8C92 C9           	ret
1178  8C93
1179  8C93 21 DE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1180  8C96 11 DF 88     	ld de,Variables_de_borrado+1
1181  8C99 01 05 00     	ld bc,5
1182  8C9C AF           	xor a
1183  8C9D 77           	ld (hl),a
1184  8C9E ED B0        	ldir
1185  8CA0 C9           	ret
1186  8CA1
1187  8CA1              ; -------------------------------------------------------------------------------------------------------------
1188  8CA1              ;
1189  8CA1              ; 8/9/23
1190  8CA1              ;
1191  8CA1
1192  8CA1              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1193  8CA1              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1194  8CA1
1195  8CA1              Calcula_numero_de_malotes
1196  8CA1
1197  8CA1 21 00 70     	ld hl,Album_de_fotos
1198  8CA4 EB           	ex de,hl
1199  8CA5 2A 1C 89     	ld hl,(Stack_snapshot)
1200  8CA8
1201  8CA8 06 00        	ld b,0
1202  8CAA 7D           	ld a,l
1203  8CAB 93           	sub e
1204  8CAC 28 07        	jr z,1F
1205  8CAE
1206  8CAE              ; Nº de malotes no es "0".
1207  8CAE
1208  8CAE D6 06        2 sub 6
1209  8CB0 04           	inc b
1210  8CB1 A7           	and a
1211  8CB2 20 FA        	jr nz,2B
1212  8CB4 78           	ld a,b
1213  8CB5
1214  8CB5 32 11 89     1 ld (Numero_de_malotes),a
1215  8CB8 C9           	ret
1216  8CB9
1217  8CB9              ; -------------------------------------------------------------------------------------------------------------
1218  8CB9              ;
1219  8CB9              ; 8/9/23
1220  8CB9              ;
1221  8CB9
1222  8CB9              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1223  8CB9              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1224  8CB9
1225  8CB9              Calcula_malotes_Amadeus
1226  8CB9
1227  8CB9 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1228  8CBC EB           	ex de,hl
1229  8CBD 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1230  8CC0
1231  8CC0 7C           	ld a,h
1232  8CC1 A7           	and a
1233  8CC2 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1234  8CC4
1235  8CC4 06 00        	ld b,0
1236  8CC6 7D           	ld a,l
1237  8CC7 93           	sub e
1238  8CC8 28 07        	jr z,1F
1239  8CCA
1240  8CCA              ; Nº de malotes no es "0".
1241  8CCA
1242  8CCA D6 06        2 sub 6
1243  8CCC 04           	inc b
1244  8CCD A7           	and a
1245  8CCE 20 FA        	jr nz,2B
1246  8CD0 78           	ld a,b
1247  8CD1
1248  8CD1 32 11 89     1 ld (Numero_de_malotes),a
1249  8CD4 C9           	ret
1250  8CD5
1251  8CD5              ; -------------------------------------------------------------------------------------------------------------
1252  8CD5              ;
1253  8CD5              ; 28/2/23
1254  8CD5              ;
1255  8CD5
1256  8CD5              Calcula_numero_de_disparotes
1257  8CD5
1258  8CD5 21 56 70     	ld hl,Album_de_fotos_disparos
1259  8CD8 EB           	ex de,hl
1260  8CD9 2A 20 89     	ld hl,(End_Snapshot_disparos)
1261  8CDC
1262  8CDC 06 00        	ld b,0
1263  8CDE 7D           	ld a,l
1264  8CDF 93           	sub e
1265  8CE0 28 07        	jr z,1F
1266  8CE2
1267  8CE2              ; Nº de malotes no es "0".
1268  8CE2
1269  8CE2 D6 06        2 sub 6
1270  8CE4 04           	inc b
1271  8CE5 A7           	and a
1272  8CE6 20 FA        	jr nz,2B
1273  8CE8 78           	ld a,b
1274  8CE9
1275  8CE9 32 25 89     1 ld (Numero_de_disparotes),a
1276  8CEC C9           	ret
1277  8CED
1278  8CED              ; *************************************************************************************************************************************************************
1279  8CED              ;
1280  8CED              ; 20/10/22
1281  8CED              ;
1282  8CED              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1283  8CED              ;
1284  8CED              ; Destruye el puntero y DE !!!!!
1285  8CED
1286  8CED 5E           Extrae_address ld e,(hl)
1287  8CEE 23           	inc hl
1288  8CEF 56           	ld d,(hl)
1289  8CF0 2B           	dec hl
1290  8CF1 EB           	ex de,hl
1291  8CF2 C9           	ret
1292  8CF3
1293  8CF3              ; *************************************************************************************************************************************************************
1294  8CF3              ;
1295  8CF3              ;	7/2/23
1296  8CF3              ;
1297  8CF3              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1298  8CF3              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1299  8CF3              ;
1300  8CF3              ;   Destruye HL y BC !!!!!,
1301  8CF3              ;
1302  8CF3              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1303  8CF3              ;					"0" ..... Izquierda.
1304  8CF3
1305  8CF3              Inicia_Puntero_objeto
1306  8CF3
1307  8CF3 3A D8 88     	ld a,(Cuad_objeto)
1308  8CF6 E6 01        	and 1
1309  8CF8 F5           	push af
1310  8CF9 CC 17 8D     	call z,Inicia_puntero_objeto_izq
1311  8CFC F1           	pop af
1312  8CFD 28 2B        	jr z,1F
1313  8CFF CD 04 8D     	call Inicia_puntero_objeto_der
1314  8D02 18 26        	jr 1F
1315  8D04
1316  8D04              ; Arrancamos desde la parte izquierda de la pantalla.
1317  8D04              ; Iniciamos (Indice_Sprite_der).
1318  8D04
1319  8D04 2A CE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1320  8D07 22 D2 88     	ld (Puntero_DESPLZ_der),hl
1321  8D0A CD ED 8C     	call Extrae_address
1322  8D0D 22 C8 88     	ld (Puntero_objeto),hl
1323  8D10
1324  8D10 2A D0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1325  8D13 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1326  8D16 C9           	ret
1327  8D17
1328  8D17              ; Arrancamos desde la parte derecha de la pantalla.
1329  8D17              ; Iniciamos (Indice_Sprite_izq).
1330  8D17
1331  8D17 2A D0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1332  8D1A 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1333  8D1D CD ED 8C     	call Extrae_address
1334  8D20 22 C8 88     	ld (Puntero_objeto),hl
1335  8D23
1336  8D23 2A CE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1337  8D26 22 D2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1338  8D29 C9           	ret
1339  8D2A
1340  8D2A              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1341  8D2A
1342  8D2A 21 40 83     1 ld hl,Amadeus
1343  8D2D ED 4B C8 88  	ld bc,(Puntero_objeto)
1344  8D31 B7 ED 42     	sub hl,bc
1345  8D34 C0           	ret nz
1346  8D35 21 F2 88     	ld hl,Ctrl_0
1347  8D38 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1348  8D3A C9           	ret 												; _de nuestra nave en los extremos.
1349  8D3B
1350  8D3B              ; *************************************************************************************************************************************************************
1351  8D3B              ;
1352  8D3B              ;	14/5/23
1353  8D3B              ;
1354  8D3B              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1355  8D3B              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1356  8D3B
1357  8D3B              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1358  8D3B              ;	_de la 2ª y 3ª entidad respectivamente.
1359  8D3B
1360  8D3B              Store_Restore_cajas
1361  8D3B
1362  8D3B E5           	push hl
1363  8D3C D5           	push de
1364  8D3D C5            	push bc
1365  8D3E
1366  8D3E              ;	STORE !!!!!
1367  8D3E              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1368  8D3E
1369  8D3E 21 C4 88     	ld hl,Filas
1370  8D41 ED 5B 08 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1371  8D45 01 41 00     	ld bc,65
1372  8D48 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1373  8D4A
1374  8D4A              ; 	Entidad_sospechosa. 20/4/23
1375  8D4A
1376  8D4A 3A DD 88     	ld a,(Impacto)
1377  8D4D A7           	and a
1378  8D4E 28 0C        	jr z,1F
1379  8D50
1380  8D50 2A 08 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1381  8D53 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1382  8D56 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1383  8D57 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1384  8D59 22 2B 89     	ld (Entidad_sospechosa_de_colision),hl
1385  8D5C
1386  8D5C              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1387  8D5C
1388  8D5C 2A 0A 89     1 ld hl,(Puntero_restore_caja)
1389  8D5F 7E           	ld a,(hl)
1390  8D60 A7           	and a
1391  8D61 F5           	push af
1392  8D62 28 08        	jr z,2F
1393  8D64
1394  8D64 11 C4 88     	ld de,Filas
1395  8D67 01 41 00     	ld bc,65
1396  8D6A ED B0        	ldir
1397  8D6C
1398  8D6C CD 88 8D     2 call Incrementa_punteros_de_cajas
1399  8D6F
1400  8D6F F1           	pop af
1401  8D70 28 EA        	jr z,1B
1402  8D72
1403  8D72 C1           	pop bc
1404  8D73 D1           	pop de
1405  8D74 E1           	pop hl
1406  8D75
1407  8D75 C9           	ret
1408  8D76
1409  8D76              ; **************************************************************************************************
1410  8D76              ;
1411  8D76              ;	12/05/23
1412  8D76              ;
1413  8D76              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1414  8D76
1415  8D76 E5           Restore_entidad push hl
1416  8D77 D5           	push de
1417  8D78 C5            	push bc
1418  8D79
1419  8D79 2A 08 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1420  8D7C 11 C4 88     	ld de,Filas
1421  8D7F 01 41 00     	ld bc,65
1422  8D82 ED B0        	ldir
1423  8D84
1424  8D84 C1           	pop bc
1425  8D85 D1           	pop de
1426  8D86 E1           	pop hl
1427  8D87 C9           	ret
1428  8D88
1429  8D88              ; **************************************************************************************************
1430  8D88              ;
1431  8D88              ;	08/05/23
1432  8D88              ;
1433  8D88              ;	Incrementamos los dos punteros de entidades. (+1).
1434  8D88
1435  8D88              Incrementa_punteros_de_cajas
1436  8D88
1437  8D88 2A 0A 89     	ld hl,(Puntero_restore_caja)
1438  8D8B 22 08 89     	ld (Puntero_store_caja),hl
1439  8D8E 2A 0C 89     	ld hl,(Indice_restore_caja)
1440  8D91 23           	inc hl
1441  8D92 23           	inc hl
1442  8D93 22 0C 89     	ld (Indice_restore_caja),hl
1443  8D96 CD ED 8C         call Extrae_address
1444  8D99 22 0A 89         ld (Puntero_restore_caja),hl
1445  8D9C C9               ret
1446  8D9D
1447  8D9D              ; **************************************************************************************************
1448  8D9D              ;
1449  8D9D              ;	25/01/23
1450  8D9D              ;
1451  8D9D              ;	Restore_Amadeus
1452  8D9D              ;
1453  8D9D              ;	Cargamos en DRAW los parámetros de Amadeus.
1454  8D9D              ;
1455  8D9D
1456  8D9D E5           Restore_Amadeus	push hl
1457  8D9E D5           	push de
1458  8D9F C5            	push bc
1459  8DA0 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1460  8DA3 11 C4 88     	ld de,Filas
1461  8DA6 01 41 00     	ld bc,65
1462  8DA9 ED B0        	ldir
1463  8DAB C1           	pop bc
1464  8DAC D1           	pop de
1465  8DAD E1           	pop hl
1466  8DAE C9           	ret
1467  8DAF
1468  8DAF              ; *************************************************************************************************************************************************************
1469  8DAF              ;
1470  8DAF              ;	29/04/23
1471  8DAF              ;
1472  8DAF              ;	Store_Amadeus
1473  8DAF              ;
1474  8DAF              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1475  8DAF              ;
1476  8DAF              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1477  8DAF              ;
1478  8DAF              ;	DESTRUYE: HL y BC y DE.
1479  8DAF
1480  8DAF 21 C4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1481  8DB2 01 41 00     	ld bc,65
1482  8DB5 ED B0        	ldir
1483  8DB7 C9           	ret
1484  8DB8
1485  8DB8              ; -----------------------------------------------------------
1486  8DB8              ;
1487  8DB8              ;	27/04/23
1488  8DB8              ;
1489  8DB8              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1490  8DB8              ;
1491  8DB8              ;	Destruye: HL,BC,DE,A
1492  8DB8
1493  8DB8 21 C4 88     Borra_datos_entidad ld hl,Filas
1494  8DBB 01 40 00     	ld bc,64
1495  8DBE AF           	xor a
1496  8DBF 77           	ld (hl),a
1497  8DC0 11 C5 88     	ld de,Filas+1
1498  8DC3 ED B0        	ldir
1499  8DC5 C9           	ret
1500  8DC6
1501  8DC6              ; -----------------------------------------------------------
1502  8DC6
1503  8DC6              ; Teclado.
1504  8DC6
1505  8DC6 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1506  8DC8 DB FE        	in a,($fe)
1507  8DCA E6 01        	and $01
1508  8DCC 28 02        	jr z,1f
1509  8DCE 18 F6        	jr Pulsa_ENTER
1510  8DD0 C9           1 ret
1511  8DD1
1512  8DD1              ; **************************************************************************************************
1513  8DD1              ;
1514  8DD1              ; Temporización.
1515  8DD1
1516  8DD1              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1517  8DD1              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1518  8DD1              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1519  8DD1              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1520  8DD1
1521  8DD1              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1522  8DD1              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1523  8DD1              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1524  8DD1
1525  8DD1              ; A partir de $4f61 no hace falta DELAY.
1526  8DD1
1527  8DD1              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1528  8DD1
1529  8DD1 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1530  8DD4 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1531  8DD5 78           	LD A,B
1532  8DD6 A7           	AND A
1533  8DD7 20 FB        	JR NZ,wait
1534  8DD9 C9           	RET
1535  8DDA
1536  8DDA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1537  8DDA              ;
1538  8DDA              ;	5/3/23
1539  8DDA              ;
1540  8DDA              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1541  8DDA
1542  8DDA              Movimiento_Amadeus
1543  8DDA
1544  8DDA              ; Disparo.
1545  8DDA
1546  8DDA 3A 3B 89     	ld a,(Disparo_Amadeus)
1547  8DDD A7           	and a
1548  8DDE 20 02        	jr nz,1F
1549  8DE0 18 15        	jr 2F
1550  8DE2
1551  8DE2 3E F7        1 ld a,$f7													; "5" para disparar.
1552  8DE4 DB FE        	in a,($fe)
1553  8DE6 E6 10        	and $10
1554  8DE8
1555  8DE8 F5           	push af
1556  8DE9 CC 95 8E     	call z,Genera_disparo
1557  8DEC F1           	pop af
1558  8DED 20 08        	jr nz,2F
1559  8DEF
1560  8DEF 3A 3B 89     	ld a,(Disparo_Amadeus)
1561  8DF2 EE 01        	xor 1
1562  8DF4 32 3B 89     	ld (Disparo_Amadeus),a
1563  8DF7 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1564  8DF9 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1565  8DFB E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1566  8DFD CC 68 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1567  8E00
1568  8E00 3E F7        	ld a,$f7
1569  8E02 DB FE        	in a,($fe)
1570  8E04 E6 01        	and $01
1571  8E06 C8           	ret z
1572  8E07
1573  8E07 3E F7        	ld a,$f7
1574  8E09 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1575  8E0B E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1576  8E0D CC 4A 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1577  8E10 C9           	ret
1578  8E11
1579  8E11              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1580  8E11              ;
1581  8E11              ;	Rutina provisional para que los malotes cagen balas.
1582  8E11
1583  8E11              Detecta_disparo_entidad
1584  8E11
1585  8E11 3A 3E 89     	ld a,(Disparo_entidad)
1586  8E14 A7           	and a
1587  8E15 C8           	ret z
1588  8E16
1589  8E16              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1590  8E16
1591  8E16              ;	ld a,$7f				; Detecta SPACE.
1592  8E16              ;	in a,($fe)
1593  8E16              ;	and 1
1594  8E16              ;	ret nz
1595  8E16
1596  8E16 CD 95 8E     	call Genera_disparo
1597  8E19 C9           	ret
1598  8E1A
1599  8E1A              ; ----------------------------------------------------------------------
1600  8E1A              ;
1601  8E1A              ;	8/9/23
1602  8E1A
1603  8E1A 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1604  8E1D 2B            	dec hl
1605  8E1E 7E           	ld a,(hl)
1606  8E1F A7           	and a
1607  8E20 C8           	ret z										; Salimos si es álbum está vacío.
1608  8E21
1609  8E21 11 E3 88     	ld de,Variables_de_borrado+5
1610  8E24 01 06 00     	ld bc,6
1611  8E27 ED B8        	lddr
1612  8E29 C9           	ret
1613  8E2A
1614  8E2A              ; ----------------------------------------------------------------------
1615  8E2A              ;
1616  8E2A              ;	9/9/23
1617  8E2A
1618  8E2A              Repone_datos_de_borrado_Amadeus
1619  8E2A
1620  8E2A 21 DE 88     	ld hl,Variables_de_borrado
1621  8E2D 11 AC 70     	ld de,Album_de_fotos_Amadeus
1622  8E30 01 06 00     	ld bc,6
1623  8E33 ED B0        	ldir
1624  8E35
1625  8E35 EB           	ex de,hl
1626  8E36 22 22 89     	ld (End_Snapshot_Amadeus),hl
1627  8E39
1628  8E39 C9           	ret
1629  8E3A
1630  8E3A              ; ----------------------------------------------------------------------
1631  8E3A              ;
1632  8E3A              ;	27/10/23
1633  8E3A              ;
1634  8E3A
1635  8E3A              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1636  8E3A              ;	_ Album_de_fotos correspondiente.
1637  8E3A
1638  8E3A              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1639  8E3A              ;	_ durante el proceso de escritura.
1640  8E3A
1641  8E3A              Repone_datos_de_borrado
1642  8E3A
1643  8E3A F3           	di
1644  8E3B ED 5B 1C 89  	ld de,(Stack_snapshot)
1645  8E3F 21 DE 88     	ld hl,Variables_de_borrado
1646  8E42 01 06 00     	ld bc,6
1647  8E45 ED B0        	ldir
1648  8E47 FB           	ei
1649  8E48
1650  8E48 EB           	ex de,hl
1651  8E49 22 1C 89     	ld (Stack_snapshot),hl
1652  8E4C
1653  8E4C C9           	ret
1654  8E4D
1655  8E4D              ; --------------------------------------------------------------------------------------
1656  8E4D
1657  8E4D              Pinta_Amadeus
1658  8E4D
1659  8E4D 3E 06        	ld a,6
1660  8E4F D3 FE            out ($fe),a										; Amarillo
1661  8E51
1662  8E51 CD B9 8C        	call Calcula_malotes_Amadeus
1663  8E54 CD F9 96     	call Extrae_foto_Amadeus
1664  8E57 CD 79 8C     	call Limpia_album_Amadeus
1665  8E5A
1666  8E5A C9           	ret
1667  8E5B
1668  8E5B              Pinta_entidades
1669  8E5B
1670  8E5B              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1671  8E5B
1672  8E5B 3A 24 89     	ld a,(Ctrl_3)
1673  8E5E CB 47        	bit 0,a
1674  8E60 C8           	ret z
1675  8E61
1676  8E61 CD A1 8C     	call Calcula_numero_de_malotes
1677  8E64 CD 77 96     	call Extrae_foto_entidades
1678  8E67 CD 03 80     	call Limpia_y_reinicia_Stack_Snapshot
1679  8E6A
1680  8E6A C9           	ret
1681  8E6B
1682  8E6B              ; -----------------------------------------------------------------------------------
1683  8E6B              ;
1684  8E6B              ;	10/12/23
1685  8E6B              ;
1686  8E6B              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1687  8E6B
1688  8E6B              Actualiza_relojes
1689  8E6B
1690  8E6B 3A 24 89     	ld a,(Ctrl_3)
1691  8E6E CB 47        	bit 0,a
1692  8E70 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1693  8E71
1694  8E71 21 36 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1695  8E74 34           	inc (hl)
1696  8E75
1697  8E75 34           	inc (hl)
1698  8E76 35           	dec (hl)
1699  8E77 C0           	ret nz
1700  8E78
1701  8E78 21 37 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1702  8E7B 34           	inc (hl)
1703  8E7C C9           	ret
1704  8E7D
1705  8E7D              ; ---------------------------------------------------------------
1706  8E7D              ;
1707  8E7D              ;	27/9/23
1708  8E7D
1709  8E7D              Guarda_parametros_DRAW
1710  8E7D
1711  8E7D 21 C4 88     	ld hl,Filas
1712  8E80 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1713  8E83 01 41 00     	ld bc,65
1714  8E86 ED B0        	ldir
1715  8E88 C9           	ret
1716  8E89
1717  8E89              Recupera_parametros_DRAW
1718  8E89
1719  8E89 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1720  8E8C 11 C4 88     	ld de,Filas
1721  8E8F 01 41 00     	ld bc,65
1722  8E92 ED B0        	ldir
1723  8E94 C9           	ret
1724  8E95
1725  8E95              ; ---------------------------------------------------------------
1726  8E95
1727  8E95              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E95              ; ******************************************************************************************************************************************************************************************
   2+ 8E95              ;
   3+ 8E95              ;   21/07/23
   4+ 8E95              ;
   5+ 8E95              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E95              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E95              ;
   8+ 8E95              ;
   9+ 8E95              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E95              ;
  11+ 8E95              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E95              ;               _ hacen las entidades hacia abajo.
  13+ 8E95              ;
  14+ 8E95              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E95              ;
  16+ 8E95              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E95              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E95              ;
  19+ 8E95              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E95              ;           _ la bala.
  21+ 8E95              ;
  22+ 8E95              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E95              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E95              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E95              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E95              ;           _ en el momento de generarse la bala)).
  27+ 8E95
  28+ 8E95              Genera_disparo
  29+ 8E95
  30+ 8E95              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E95              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E95              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E95              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E95              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E95              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E95              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E95
  38+ 8E95              ; Exclusiones:
  39+ 8E95
  40+ 8E95 3A DC 88         ld a,(Vel_down)
  41+ 8E98 47               ld b,a
  42+ 8E99 3A 35 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E9C B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E9D D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E9E 3A FF 88         ld a,(Columnas)
  46+ 8EA1 47               ld b,a
  47+ 8EA2 3A C5 88         ld a,(Columns)
  48+ 8EA5 B8               cp b
  49+ 8EA6 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EA7
  51+ 8EA7              ; ----- ----- -----
  52+ 8EA7
  53+ 8EA7 3A F2 88         ld a,(Ctrl_0)
  54+ 8EAA CB 77            bit 6,a
  55+ 8EAC 20 06            jr nz,14F
  56+ 8EAE
  57+ 8EAE 3A CB 88         ld a,(Coordenada_y)
  58+ 8EB1 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EB3 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EB4
  61+ 8EB4 21 00 80     14 ld hl,Indice_disparo
  62+ 8EB7 3A CC 88         ld a,(CTRL_DESPLZ)
  63+ 8EBA 4F               ld c,a
  64+ 8EBB 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EBD              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EBD              ;                                            ""        ""       "f9", B="1"
  67+ 8EBD              ;                                            ""        ""       "fb", B="2"
  68+ 8EBD              ;                                            ""        ""       "fb", B="3"
  69+ 8EBD A7               and a
  70+ 8EBE 28 10            jr z,1F
  71+ 8EC0 E6 01            and 1
  72+ 8EC2 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EC3
  74+ 8EC3 79               ld a,c
  75+ 8EC4 16 F9            ld d,$f9
  76+ 8EC6 23           2 inc hl
  77+ 8EC7 23               inc hl
  78+ 8EC8 04               inc b
  79+ 8EC9 BA               cp d
  80+ 8ECA 28 04            jr z,1F
  81+ 8ECC 14               inc d
  82+ 8ECD 14               inc d
  83+ 8ECE 18 F6            jr 2B
  84+ 8ED0
  85+ 8ED0 CD ED 8C     1 call Extrae_address
  86+ 8ED3 E5               push hl
  87+ 8ED4 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8ED6 DD 21 3F 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EDA
  90+ 8EDA              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EDA              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EDA
  93+ 8EDA 3A F2 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EDD CB 77            bit 6,a
  95+ 8EDF 20 04            jr nz,19F
  96+ 8EE1
  97+ 8EE1 AF               xor a
  98+ 8EE2 32 3E 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EE5
 100+ 8EE5 3A D8 88     19 ld a,(Cuad_objeto)
 101+ 8EE8 FE 02            cp 2
 102+ 8EEA 38 66            jr c,3F
 103+ 8EEC 28 64            jr z,3F
 104+ 8EEE
 105+ 8EEE              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EEE
 107+ 8EEE E6 01            and 1
 108+ 8EF0 28 30            jr z,4F
 109+ 8EF2
 110+ 8EF2              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EF2              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EF2              ;
 113+ 8EF2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EF2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EF2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EF2
 117+ 8EF2 2A C6 88     	ld hl,(Posicion_actual)
 118+ 8EF5
 119+ 8EF5              ;   Amadeus o entidad ???.
 120+ 8EF5
 121+ 8EF5 3A F2 88         ld a,(Ctrl_0)
 122+ 8EF8 CB 77            bit 6,a
 123+ 8EFA 28 0A            jr z,8F
 124+ 8EFC
 125+ 8EFC              ; 	Dispara Amadeus.
 126+ 8EFC
 127+ 8EFC 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EFE CD 68 96         call PreviousScan
 129+ 8F01 CD 68 96         call PreviousScan
 130+ 8F04
 131+ 8F04              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F04              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F04              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F04              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F04
 136+ 8F04 18 11            jr 10F
 137+ 8F06
 138+ 8F06              ; 	Dispara Entidad.
 139+ 8F06
 140+ 8F06 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F09              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F09
 143+ 8F09              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F09              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F09
 146+ 8F09 C5               push bc
 147+ 8F0A 06 10            ld b,16
 148+ 8F0C CD 59 96     9 call NextScan
 149+ 8F0F 10 FB            djnz 9B
 150+ 8F11 C1               pop bc
 151+ 8F12 CD 7C 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F15 18 06            jr 17F
 153+ 8F17
 154+ 8F17              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F17              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F17              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F17              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F17
 159+ 8F17 CD 7C 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F1A CD F1 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F1D              ;                                                      ; _al generar el disparo.
 162+ 8F1D
 163+ 8F1D              ; 	LLegados a este punto tendremos:
 164+ 8F1D              ;
 165+ 8F1D              ;       Puntero_objeto_disparo en IY.
 166+ 8F1D              ;       Rutinas_de_impresion en IX.
 167+ 8F1D              ;       Puntero_de_impresion en HL.
 168+ 8F1D              ;       Impacto/Dirección en BC.
 169+ 8F1D
 170+ 8F1D CD 84 8F     17 call Almacena_disparo
 171+ 8F20 18 52            jr 6F                                             ; RET.
 172+ 8F22
 173+ 8F22              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F22              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F22              ;
 176+ 8F22              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F22              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F22              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F22
 180+ 8F22 2A C6 88     4 ld hl,(Posicion_actual)
 181+ 8F25
 182+ 8F25              ;   Amadeus o entidad ???.
 183+ 8F25
 184+ 8F25 3A F2 88         ld a,(Ctrl_0)
 185+ 8F28 CB 77            bit 6,a
 186+ 8F2A 28 0A            jr z,11F
 187+ 8F2C
 188+ 8F2C              ; 	Dispara Amadeus.
 189+ 8F2C
 190+ 8F2C 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F2E CD 68 96         call PreviousScan
 192+ 8F31 CD 68 96         call PreviousScan
 193+ 8F34
 194+ 8F34              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F34              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F34              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F34              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F34
 199+ 8F34 18 11            jr 13F
 200+ 8F36
 201+ 8F36              ; 	Dispara Entidad.
 202+ 8F36
 203+ 8F36 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F39              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F39
 206+ 8F39              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F39              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F39
 209+ 8F39 C5               push bc
 210+ 8F3A 06 10            ld b,16
 211+ 8F3C CD 59 96     12 call NextScan
 212+ 8F3F 10 FB            djnz 12B
 213+ 8F41 C1               pop bc
 214+ 8F42
 215+ 8F42 CD 75 8F         call Ajusta_disparo_parte_derecha
 216+ 8F45 18 06            jr 18F
 217+ 8F47
 218+ 8F47              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F47              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F47              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F47              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F47
 223+ 8F47 CD 75 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F4A CD F1 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F4D              ;                                                       ; _al generar el disparo.
 226+ 8F4D
 227+ 8F4D              ; LLegados a este punto tendremos:
 228+ 8F4D              ;
 229+ 8F4D              ;       Puntero_objeto_disparo en IY.
 230+ 8F4D              ;       Rutinas_de_impresion en IX.
 231+ 8F4D              ;       Puntero_de_impresion en HL.
 232+ 8F4D              ;       Impacto/Dirección en BC.
 233+ 8F4D
 234+ 8F4D CD 84 8F     18 call Almacena_disparo
 235+ 8F50 18 22            jr 6F                                               ; RET.
 236+ 8F52
 237+ 8F52              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F52
 239+ 8F52 28 11        3 jr z,5F
 240+ 8F54
 241+ 8F54              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F54              ;
 243+ 8F54              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F54              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F54              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F54              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F54
 248+ 8F54              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F54              ;	   ""        ""       "f9", B="1"
 250+ 8F54              ;	   ""        ""       "fb", B="2"
 251+ 8F54              ; 	   ""        ""       "fb", B="3"
 252+ 8F54
 253+ 8F54 2A C6 88     	ld hl,(Posicion_actual)
 254+ 8F57 CD 59 96     	call NextScan
 255+ 8F5A
 256+ 8F5A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F5A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F5A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F5A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F5A
 261+ 8F5A CD 7C 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F5D
 263+ 8F5D              ; 	No se produce impacto. B="$80"
 264+ 8F5D              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F5D
 266+ 8F5D 01 80 80         ld bc,$8080
 267+ 8F60
 268+ 8F60              ; 	LLegados a este punto tendremos:
 269+ 8F60              ;
 270+ 8F60              ;       Puntero_objeto_disparo en IY.
 271+ 8F60              ;       Rutinas_de_impresion en IX.
 272+ 8F60              ;       Puntero_de_impresion en HL.
 273+ 8F60              ;       Impacto/Dirección en BC.
 274+ 8F60
 275+ 8F60 CD 84 8F         call Almacena_disparo
 276+ 8F63 18 0F            jr 6F                                           ; RET.
 277+ 8F65
 278+ 8F65              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F65              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F65              ;
 281+ 8F65              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F65              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F65              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F65              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F65
 286+ 8F65 2A C6 88     5 ld hl,(Posicion_actual)
 287+ 8F68 CD 59 96     	call NextScan
 288+ 8F6B
 289+ 8F6B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F6B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F6B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F6B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F6B
 294+ 8F6B CD 75 8F         call Ajusta_disparo_parte_derecha
 295+ 8F6E
 296+ 8F6E              ; 	No se produce impacto. B="$80"
 297+ 8F6E              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F6E
 299+ 8F6E 01 80 80     15 ld bc,$8080
 300+ 8F71
 301+ 8F71              ; 	LLegados a este punto tendremos:
 302+ 8F71              ;
 303+ 8F71              ;       Puntero_objeto_disparo en IY.
 304+ 8F71              ;       Rutinas_de_impresion en IX.
 305+ 8F71              ;       Puntero_de_impresion en HL.
 306+ 8F71              ;       Impacto/Dirección en BC.
 307+ 8F71
 308+ 8F71 CD 84 8F         call Almacena_disparo
 309+ 8F74
 310+ 8F74 C9           6 ret
 311+ 8F75
 312+ 8F75              ; ----------------------------------------------------------------
 313+ 8F75              ;
 314+ 8F75              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F75              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F75              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F75
 318+ 8F75 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F76 FE 02            cp 2
 320+ 8F78 38 01            jr c,1F
 321+ 8F7A 23               inc hl
 322+ 8F7B C9           1 ret
 323+ 8F7C
 324+ 8F7C 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F7D FE 01        	cp 1
 326+ 8F7F 20 01        	jr nz,1F
 327+ 8F81 2B           	dec hl
 328+ 8F82 2B           1 dec hl
 329+ 8F83 C9               ret
 330+ 8F84
 331+ 8F84              ; ----------------------------------------------------------------
 332+ 8F84              ;
 333+ 8F84              ;   25/02/23
 334+ 8F84              ;
 335+ 8F84              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F84              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F84              ;
 338+ 8F84              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F84              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F84
 341+ 8F84              Almacena_disparo
 342+ 8F84
 343+ 8F84 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F85 F1               pop af
 345+ 8F86 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F87
 347+ 8F87 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F88 E6 01            and 1
 349+ 8F8A 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F8C              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F8C              ; 	Dispara AMADEUS.
 352+ 8F8C
 353+ 8F8C              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F8C              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F8C              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F8C              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F8C
 358+ 8F8C C5               push bc
 359+ 8F8D 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F90 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F93 A7               and a
 362+ 8F94 ED 42            sbc hl,bc
 363+ 8F96 CC 72 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F99 C1               pop bc
 365+ 8F9A 28 54            jr z,4F
 366+ 8F9C
 367+ 8F9C 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F9F 23               inc hl
 369+ 8FA0 23               inc hl
 370+ 8FA1 22 28 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FA4              ;                                                   ; _ Disparo_(+1).
 372+ 8FA4 18 18            jr 2F
 373+ 8FA6
 374+ 8FA6              ; Dispara una entidad.
 375+ 8FA6
 376+ 8FA6 C5           1 push bc
 377+ 8FA7 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FAA 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FAD A7               and a
 380+ 8FAE ED 42            sbc hl,bc
 381+ 8FB0 CC 6B 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FB3 C1               pop bc
 383+ 8FB4 28 3A            jr z,4F
 384+ 8FB6
 385+ 8FB6 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FB9 23               inc hl
 387+ 8FBA 23               inc hl
 388+ 8FBB 22 26 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FBE              ;                                                   ; _ Disparo_(+1).
 390+ 8FBE CD ED 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FC1              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FC1              ;
 393+ 8FC1              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FC1              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FC1              ;                                                     Puntero_de_impresion en HL.
 396+ 8FC1              ;                                                     Impacto/Dirección en BC.
 397+ 8FC1
 398+ 8FC1 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FC2 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FC3 23               inc hl                                          ; _ al siguiente.
 401+ 8FC4 A7               and a
 402+ 8FC5 20 C0            jr nz,3B
 403+ 8FC7
 404+ 8FC7 08               ex af,af
 405+ 8FC8 ED 73 16 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FCC F9               ld sp,hl
 407+ 8FCD
 408+ 8FCD DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FCF F5               push af                                         ; Puntero de impresión.
 410+ 8FD0 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FD2 C5               push bc                                         ; Control.
 412+ 8FD3
 413+ 8FD3 ED 7B 16 89      ld sp,(Stack)
 414+ 8FD7
 415+ 8FD7              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FD7
 417+ 8FD7 21 05 89     	ld hl,Ctrl_1
 418+ 8FDA CB C6        	set 0,(hl)
 419+ 8FDC
 420+ 8FDC DD E5        	push ix
 421+ 8FDE E1               pop hl
 422+ 8FDF F5               push af
 423+ 8FE0 DD E1            pop ix
 424+ 8FE2
 425+ 8FE2 CD A0 7F     	call Guarda_foto_registros
 426+ 8FE5
 427+ 8FE5 21 05 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FE8 CB 86        	res 0,(hl)
 429+ 8FEA
 430+ 8FEA              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FEA              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FEA
 433+ 8FEA CD 72 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FED CD 6B 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FF0
 436+ 8FF0 C9           4 ret
 437+ 8FF1
 438+ 8FF1              ; ----------------------------------------------------------------
 439+ 8FF1              ;
 440+ 8FF1              ;   4/3/23
 441+ 8FF1              ;
 442+ 8FF1              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FF1              ;   _ al generarse el disparo.
 444+ 8FF1              ;
 445+ 8FF1              ;       "$80" ..... No se produce colisión.
 446+ 8FF1              ;       "$81" ..... Se produce colisión.
 447+ 8FF1              ;
 448+ 8FF1              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FF1              ;         _ que forman el disparo.
 450+ 8FF1
 451+ 8FF1
 452+ 8FF1              Comprueba_Colision
 453+ 8FF1
 454+ 8FF1              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FF1
 456+ 8FF1 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FF3 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FF4
 459+ 8FF4 CD 2A 90         call Modifica_H_Velocidad_disparo
 460+ 8FF7
 461+ 8FF7 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FF8 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FFA 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FFC
 465+ 8FFC 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FFE CD 1A 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9001
 468+ 9001 7B               ld a,e
 469+ 9002 E6 01            and 1
 470+ 9004 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9006              ;                                                  ; _ para activar IMPACTO.
 472+ 9006 E1               pop hl
 473+ 9007 E5               push hl
 474+ 9008 CD 59 96         call NextScan
 475+ 900B
 476+ 900B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 900C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 900E 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9010              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9010 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9012 CD 1A 90         call Bucle_2
 482+ 9015
 483+ 9015 43           1 ld b,e
 484+ 9016 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9017 FD E1            pop iy
 486+ 9019 C9               ret
 487+ 901A
 488+ 901A              ; ---------- ----------
 489+ 901A
 490+ 901A 06 02        Bucle_2 ld b,2
 491+ 901C FD 7E 00     2 ld a,(iy)
 492+ 901F A6               and (hl)
 493+ 9020 28 02            jr z,1F
 494+ 9022 1E 81            ld e,$81
 495+ 9024 23           1 inc hl
 496+ 9025 FD 23            inc iy
 497+ 9027 10 F3            djnz 2B
 498+ 9029 C9               ret
 499+ 902A
 500+ 902A              ; ---------- ----------
 501+ 902A              ;
 502+ 902A              ;   21/7/23
 503+ 902A
 504+ 902A              Modifica_H_Velocidad_disparo
 505+ 902A
 506+ 902A 3A 35 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 902D FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 902F D0               ret nc                                         ; _ incrementamos H.
 509+ 9030 24               inc h
 510+ 9031
 511+ 9031 C9               ret
 512+ 9032
 513+ 9032              ; -------------------------------------------------------------------------------------------------------------
 514+ 9032              ;
 515+ 9032              ;   04/12/23
 516+ 9032              ;
 517+ 9032              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9032              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9032              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9032              ;
 521+ 9032              ;   MODIFICA: HL,DE,B y A.
 522+ 9032
 523+ 9032              Genera_coordenadas_X
 524+ 9032
 525+ 9032              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9032              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9032
 528+ 9032              ;   Limpiamos almacenes.
 529+ 9032
 530+ 9032 CD 63 90         call Limpia_Coordenadas_X
 531+ 9035
 532+ 9035              ;   Almacenamos coordenadas X.
 533+ 9035
 534+ 9035              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9035
 536+ 9035 2A EE 88         ld hl,(Puntero_de_impresion)
 537+ 9038 11 32 89         ld de,Coordenadas_X_Entidad
 538+ 903B 06 02            ld b,2
 539+ 903D
 540+ 903D 3A CC 88         ld a,(CTRL_DESPLZ)
 541+ 9040 A7               and a
 542+ 9041 28 01            jr z,1F
 543+ 9043 04               inc b
 544+ 9044
 545+ 9044 CD 5A 90     1 call Guarda_coordenadas_X
 546+ 9047
 547+ 9047              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9047
 549+ 9047 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 904A 11 2F 89         ld de,Coordenadas_X_Amadeus
 551+ 904D 06 02            ld b,2
 552+ 904F
 553+ 904F 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 9052 A7               and a
 555+ 9053 28 01            jr z,2F
 556+ 9055 04               inc b
 557+ 9056
 558+ 9056 CD 5A 90     2 call Guarda_coordenadas_X
 559+ 9059
 560+ 9059              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9059
 562+ 9059 C9               ret
 563+ 905A
 564+ 905A              ; ----- ----- ----- ----- -----
 565+ 905A
 566+ 905A 7D           Guarda_coordenadas_X  ld a,l
 567+ 905B E6 1F            and $1f
 568+ 905D 12           1 ld (de),a
 569+ 905E 3C               inc a
 570+ 905F 13               inc de
 571+ 9060 10 FB            djnz 1B
 572+ 9062 C9               ret
 573+ 9063
 574+ 9063 AF           Limpia_Coordenadas_X xor a
 575+ 9064 06 06            ld b,6
 576+ 9066 21 2F 89         ld hl,Coordenadas_X_Amadeus
 577+ 9069 77           1 ld (hl),a
 578+ 906A 23               inc hl
 579+ 906B 10 FC            djnz 1B
 580+ 906D C9               ret
 581+ 906E
 582+ 906E              ; ----- ----- ----- ----- -----
 583+ 906E
 584+ 906E              Compara_coordenadas_X
 585+ 906E
 586+ 906E 06 03            ld b,3
 587+ 9070 11 34 89         ld de,Coordenadas_X_Entidad+2
 588+ 9073
 589+ 9073 1A               ld a,(de)
 590+ 9074 A7               and a
 591+ 9075 20 01            jr nz,2F
 592+ 9077 05               dec b
 593+ 9078
 594+ 9078 1B           2 dec de
 595+ 9079 1B               dec de
 596+ 907A 21 2F 89         ld hl,Coordenadas_X_Amadeus
 597+ 907D
 598+ 907D D5           1 push de
 599+ 907E E5               push hl
 600+ 907F C5               push bc
 601+ 9080
 602+ 9080 CD 8A 90         call Comparando
 603+ 9083
 604+ 9083 C1               pop bc
 605+ 9084 E1               pop hl
 606+ 9085 D1               pop de
 607+ 9086
 608+ 9086 13               inc de
 609+ 9087 10 F4            djnz 1B
 610+ 9089
 611+ 9089 C9               ret
 612+ 908A
 613+ 908A              ; ----- ----- ----- ----- -----
 614+ 908A              ;
 615+ 908A              ;   4/12/23
 616+ 908A              ;
 617+ 908A              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 908A
 619+ 908A 06 03        Comparando ld b,3
 620+ 908C 1A               ld a,(de)
 621+ 908D 4E           2 ld c,(hl)
 622+ 908E B9               cp c
 623+ 908F 28 04            jr z,1F
 624+ 9091 23               inc hl
 625+ 9092 10 F9            djnz 2B
 626+ 9094 C9               ret
 627+ 9095
 628+ 9095 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9097 32 DD 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 909A 21 2A 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 909D CB D6            set 2,(hl)
 632+ 909F C9               ret
 633+ 90A0
 634+ 90A0              ; -----------------------------------------------------------------------
 635+ 90A0              ;
 636+ 90A0              ;   7/12/23
 637+ 90A0              ;
 638+ 90A0
 639+ 90A0              Detecta_colision_nave_entidad
 640+ 90A0
 641+ 90A0              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90A0
 643+ 90A0 FD 2A C8 88      ld iy,(Puntero_objeto)
 644+ 90A4 2A EE 88         ld hl,(Puntero_de_impresion)
 645+ 90A7
 646+ 90A7 E5               push hl
 647+ 90A8
 648+ 90A8              ; ----- ----- -----
 649+ 90A8 1E 00            ld e,0                                         ; Indica impacto.
 650+ 90AA 06 0A            ld b,10
 651+ 90AC CD DC 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 90AF 7B               ld a,e
 653+ 90B0 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 90B2 38 0E            jr c,3F
 655+ 90B4
 656+ 90B4              ; LLegados a este punto:
 657+ 90B4              ;
 658+ 90B4              ;   HAY COLISIÓN !!!!!.
 659+ 90B4              ;
 660+ 90B4              ;   .db (Impacto) de Amadeus a "1".
 661+ 90B4              ;   SET el bit3 de (Impacto2).
 662+ 90B4              ;
 663+ 90B4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90B4
 665+ 90B4 21 DD 88         ld hl,Impacto
 666+ 90B7 36 01            ld (hl),1
 667+ 90B9 21 2A 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 90BC CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 90BE CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 90C0
 671+ 90C0 18 18            jr 1F
 672+ 90C2
 673+ 90C2              ; -----
 674+ 90C2
 675+ 90C2 E1           3 pop hl
 676+ 90C3 CD 59 96         call NextScan
 677+ 90C6 E5               push hl
 678+ 90C7 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 90C8 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 90CA 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 90CC 30 0C            jr nc,1F
 682+ 90CE              ;                                                  ; _ 2º scanline si esto es así.
 683+ 90CE 10 DC            djnz 2B
 684+ 90D0
 685+ 90D0              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 90D0
 687+ 90D0              ; LLegados a este punto:
 688+ 90D0              ;
 689+ 90D0              ;   NO HAY COLISIÓN !!!!!.
 690+ 90D0              ;
 691+ 90D0              ;   .db (Impacto) de Amadeus a "0".
 692+ 90D0              ;   RES el bit2 de (Impacto2).
 693+ 90D0              ;
 694+ 90D0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 90D0              ;   Lo colocamos a "0".
 696+ 90D0
 697+ 90D0 21 2A 89         ld hl,Impacto2
 698+ 90D3 CB 96            res 2,(hl)
 699+ 90D5 2A 2B 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 90D8 36 00            ld (hl),0
 701+ 90DA
 702+ 90DA E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 90DB C9               ret
 704+ 90DC
 705+ 90DC               ; ---------- ----------
 706+ 90DC
 707+ 90DC C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 90DD 3A C5 88         ld a,(Columns)
 709+ 90E0 47               ld b,a
 710+ 90E1 FD 7E 00     2 ld a,(iy)
 711+ 90E4 BE               cp (hl)
 712+ 90E5 28 01            jr z,1F
 713+ 90E7
 714+ 90E7 1C               inc e
 715+ 90E8
 716+ 90E8 23           1 inc hl
 717+ 90E9 FD 23            inc iy
 718+ 90EB 10 F4            djnz 2B
 719+ 90ED C1               pop bc
 720+ 90EE C9               ret
 721+ 90EF
 722+ 90EF              ; -------------------------------------------------------------------------------------------------------------
 723+ 90EF              ;
 724+ 90EF              ;   13/03/23
 725+ 90EF              ;
 726+ 90EF              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 90EF              ;
 728+ 90EF              ;   DESTRUYE: HL,BC,DE y A.
 729+ 90EF
 730+ 90EF 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 90F2 7E               ld a,(hl)
 732+ 90F3 A7               and a
 733+ 90F4 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 90F5
 735+ 90F5 44               ld b,h
 736+ 90F6 4D               ld c,l
 737+ 90F7 2A 1E 89         ld hl,(Stack_snapshot_disparos)
 738+ 90FA E5               push hl
 739+ 90FB A7               and a
 740+ 90FC ED 42            sbc hl,bc
 741+ 90FE E5               push hl
 742+ 90FF C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9100
 744+ 9100 E1               pop hl
 745+ 9101 54               ld d,h
 746+ 9102 5D               ld e,l
 747+ 9103 1B               dec de
 748+ 9104 ED B8            lddr                                                ; Limpiamos.
 749+ 9106
 750+ 9106 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9109 22 1E 89         ld (Stack_snapshot_disparos),hl
 752+ 910C
 753+ 910C C9               ret
 754+ 910D
 755+ 910D              ; -------------------------------------------------------------------------------------------------------------
 756+ 910D              ;
 757+ 910D              ;   18/07/23
 758+ 910D              ;
 759+ 910D
 760+ 910D              Motor_de_disparos
 761+ 910D
 762+ 910D              ; Gestiona DISPAROS DE AMADEUS.
 763+ 910D
 764+ 910D 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9110 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9113
 767+ 9113 CD ED 8C     2 call Extrae_address
 768+ 9116 7E               ld a,(hl)
 769+ 9117 A7               and a
 770+ 9118 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 911A
 772+ 911A              ; ----- ----- ----- ----- ----- -----
 773+ 911A
 774+ 911A C5               push bc
 775+ 911B CD DF 91         call foto_disparo_a_borrar
 776+ 911E
 777+ 911E              ; Existe colisión con este disparo???
 778+ 911E
 779+ 911E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 911F 7E               ld a,(hl)
 781+ 9120 2B               dec hl
 782+ 9121 E6 01            and 1
 783+ 9123 28 1D            jr z,9F
 784+ 9125
 785+ 9125              ;   En este punto:
 786+ 9125              ;
 787+ 9125              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9125              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9125              ;   _con la entidad).
 790+ 9125              ;
 791+ 9125              ;   Disparo_2A defw 0                                ; Control.
 792+ 9125              ;    defw 0                                          ; Puntero objeto.
 793+ 9125              ;    defw 0                                          ; Puntero de impresión.
 794+ 9125              ;    defw 0                                          ; Rutina de impresión.
 795+ 9125
 796+ 9125 E5               push hl
 797+ 9126
 798+ 9126 06 04            ld b,4
 799+ 9128 23           19 inc hl
 800+ 9129 10 FD            djnz 19B
 801+ 912B
 802+ 912B CD ED 8C         call Extrae_address
 803+ 912E CD 46 9D         call Genera_coordenadas_disparo
 804+ 9131
 805+ 9131              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9131
 807+ 9131 21 2D 89         ld hl,Coordenadas_disparo_certero
 808+ 9134 72               ld (hl),d
 809+ 9135 23               inc hl
 810+ 9136 73               ld (hl),e
 811+ 9137
 812+ 9137              ; Elimino el disparo de la base de datos.
 813+ 9137
 814+ 9137 E1               pop hl
 815+ 9138 CD 5E 92         call Elimina_disparo_de_base_de_datos
 816+ 913B 21 2A 89         ld hl,Impacto2
 817+ 913E CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9140
 819+ 9140 18 06            jr 11F
 820+ 9142
 821+ 9142 CD 08 92     9 call Mueve_disparo
 822+ 9145 CD DF 91         call foto_disparo_a_borrar
 823+ 9148
 824+ 9148 C1           11 pop bc
 825+ 9149 18 04            jr 7F
 826+ 914B
 827+ 914B              ; ----- ----- ----- ----- ----- -----
 828+ 914B
 829+ 914B ED 42        1 sbc hl,bc
 830+ 914D 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 914F
 832+ 914F 2A 28 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9152 23               inc hl
 834+ 9153 23               inc hl
 835+ 9154 22 28 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9157 18 BA            jr 2B
 837+ 9159
 838+ 9159 CD 72 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 915C              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 915C
 841+ 915C              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 915C
 843+ 915C 01 6A 85         ld bc,Disparo_11
 844+ 915F 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9162
 846+ 9162 CD ED 8C     5 call Extrae_address
 847+ 9165 7E               ld a,(hl)
 848+ 9166 A7               and a
 849+ 9167 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9169
 851+ 9169              ; ----- ----- ----- ----- ----- -----
 852+ 9169
 853+ 9169 C5               push bc
 854+ 916A CD DF 91         call foto_disparo_a_borrar
 855+ 916D
 856+ 916D              ; Existe colisión con este disparo???
 857+ 916D
 858+ 916D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 916E 7E               ld a,(hl)
 860+ 916F 2B               dec hl
 861+ 9170 E6 01            and 1
 862+ 9172 28 4D            jr z,10F
 863+ 9174
 864+ 9174              ;! La colisión se produce con Amadeus???
 865+ 9174              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9174
 867+ 9174 E5               push hl
 868+ 9175
 869+ 9175 06 04            ld b,4
 870+ 9177 23           16 inc hl
 871+ 9178 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 917A
 873+ 917A CD ED 8C         call Extrae_address
 874+ 917D CD 46 9D         call Genera_coordenadas_disparo
 875+ 9180
 876+ 9180 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9181 FE 16            cp $16
 878+ 9183 38 2A            jr c,15F
 879+ 9185
 880+ 9185
 881+ 9185              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9185
 883+ 9185 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9186
 885+ 9186              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9186
 887+ 9186 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 9189
 889+ 9189              ; Coordenada X de Amadeus en D.
 890+ 9189
 891+ 9189 7D               ld a,l
 892+ 918A E6 1F            and $1F
 893+ 918C 57               ld d,a
 894+ 918D
 895+ 918D 21 86 85         ld hl,Amadeus_db+8
 896+ 9190 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9191
 898+ 9191 21 2F 89         ld hl,Coordenadas_X_Amadeus
 899+ 9194 CD 5A 90         call Guarda_coordenadas_X
 900+ 9197
 901+ 9197 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9198
 903+ 9198              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9198
 905+ 9198 06 02            ld b,2
 906+ 919A C5           20 push bc
 907+ 919B
 908+ 919B 06 03            ld b,3
 909+ 919D 21 2F 89         ld hl,Coordenadas_X_Amadeus
 910+ 91A0 7E           18 ld a,(hl)
 911+ 91A1 BA               cp d
 912+ 91A2 20 04            jr nz,17F
 913+ 91A4
 914+ 91A4              ;! Colisión Amadeus !!!!!!!!!!
 915+ 91A4
 916+ 91A4 C1               pop bc
 917+ 91A5 E1               pop hl
 918+ 91A6 18 0D            jr 14F
 919+ 91A8
 920+ 91A8 23           17 inc hl
 921+ 91A9 10 F5            djnz 18B
 922+ 91AB
 923+ 91AB 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 91AC
 925+ 91AC C1               pop bc
 926+ 91AD 10 EB            djnz 20B
 927+ 91AF
 928+ 91AF
 929+ 91AF              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 91AF              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 91AF
 932+ 91AF E1           15 pop hl
 933+ 91B0 23               inc hl
 934+ 91B1 35               dec (hl)
 935+ 91B2 2B               dec hl
 936+ 91B3 18 0C            jr 10F
 937+ 91B5
 938+ 91B5              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 91B5              ; _ almacén de coordenadas_X de Amadeus.
 940+ 91B5
 941+ 91B5 E5           14 push hl
 942+ 91B6 CD 5E 92         call Elimina_disparo_de_base_de_datos
 943+ 91B9 21 2A 89         ld hl,Impacto2
 944+ 91BC CB CE            set 1,(hl)
 945+ 91BE E1               pop hl
 946+ 91BF 18 06            jr 12F
 947+ 91C1
 948+ 91C1              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 91C1
 950+ 91C1 CD 08 92     10 call Mueve_disparo
 951+ 91C4 CD DF 91         call foto_disparo_a_borrar
 952+ 91C7 C1           12 pop bc
 953+ 91C8
 954+ 91C8 18 04            jr 8F
 955+ 91CA
 956+ 91CA              ; ----- ----- ----- ----- ----- -----
 957+ 91CA
 958+ 91CA ED 42        4 sbc hl,bc
 959+ 91CC 28 0A            jr z,6F
 960+ 91CE
 961+ 91CE 2A 26 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 91D1 23               inc hl
 963+ 91D2 23               inc hl
 964+ 91D3 22 26 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 91D6 18 8A            jr 5B
 966+ 91D8
 967+ 91D8 CD 6B 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 91DB CD 63 90         call Limpia_Coordenadas_X
 969+ 91DE C9               ret
 970+ 91DF
 971+ 91DF              ; ------------------------------------------------------------------
 972+ 91DF
 973+ 91DF              foto_disparo_a_borrar
 974+ 91DF
 975+ 91DF 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 91E0 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 91E1 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 91E2
 979+ 91E2 E5               push hl
 980+ 91E3 23               inc hl
 981+ 91E4 23               inc hl
 982+ 91E5 ED 73 16 89      ld (Stack),sp
 983+ 91E9 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 91EA FD E1            pop iy
 985+ 91EC DD E1            pop ix
 986+ 91EE E1               pop hl
 987+ 91EF ED 7B 16 89      ld sp,(Stack)
 988+ 91F3 3A 05 89         ld a,(Ctrl_1)
 989+ 91F6 CB C7            set 0,a
 990+ 91F8 32 05 89         ld (Ctrl_1),a
 991+ 91FB CD A0 7F         call Guarda_foto_registros
 992+ 91FE 3A 05 89         ld a,(Ctrl_1)
 993+ 9201 CB 87            res 0,a
 994+ 9203 32 05 89         ld (Ctrl_1),a
 995+ 9206 E1               pop hl
 996+ 9207 C9               ret
 997+ 9208
 998+ 9208              ;---------------------------------------------------
 999+ 9208              ;
1000+ 9208              ;   18/07/23
1001+ 9208              ;
1002+ 9208
1003+ 9208              Mueve_disparo
1004+ 9208
1005+ 9208              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9208              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9208              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9208
1009+ 9208 E5               push hl
1010+ 9209
1011+ 9209 7E               ld a,(hl)
1012+ 920A
1013+ 920A 06 04            ld b,4
1014+ 920C 23           1 inc hl
1015+ 920D 10 FD            djnz 1B
1016+ 920F
1017+ 920F              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 920F
1019+ 920F CD ED 8C         call Extrae_address
1020+ 9212
1021+ 9212 E6 01            and 1
1022+ 9214 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9216
1024+ 9216              ; Disparo hacia arriba, (Amadeus).
1025+ 9216
1026+ 9216              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9216              ; _ de la dificultad.
1028+ 9216
1029+ 9216 CD 68 96         call PreviousScan
1030+ 9219 CD 68 96         call PreviousScan
1031+ 921C CD 68 96         call PreviousScan
1032+ 921F CD 68 96         call PreviousScan
1033+ 9222
1034+ 9222              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9222
1036+ 9222 7C               ld a,h
1037+ 9223 FE 40            cp $40
1038+ 9225 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9227
1040+ 9227              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9227
1042+ 9227 EB               ex de,hl
1043+ 9228 06 04            ld b,4
1044+ 922A 2B           6 dec hl
1045+ 922B 10 FD            djnz 6B
1046+ 922D
1047+ 922D CD 5E 92         call Elimina_disparo_de_base_de_datos
1048+ 9230 E1               pop hl
1049+ 9231 18 10            jr 7F
1050+ 9233
1051+ 9233              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9233              ; HL contiene el puntero de impresión del disparo.
1053+ 9233              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9233
1055+ 9233 D5           3 push de
1056+ 9234 C5               push bc
1057+ 9235
1058+ 9235 CD F1 8F         call Comprueba_Colision
1059+ 9238
1060+ 9238              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9238
1062+ 9238 78               ld a,b
1063+ 9239
1064+ 9239 C1               pop bc
1065+ 923A D1               pop de
1066+ 923B
1067+ 923B EB               ex de,hl
1068+ 923C
1069+ 923C 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 923D 23               inc hl                                      ; _ movimiento.
1071+ 923E 72               ld (hl),d
1072+ 923F
1073+ 923F E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9240
1075+ 9240 23               inc hl                                      ; _ en curso.
1076+ 9241 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9242 2B               dec hl
1078+ 9243
1079+ 9243 C9           7 ret
1080+ 9244
1081+ 9244              ; Disparo hacia abajo, (Entidad).
1082+ 9244
1083+ 9244 3A 35 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9247 47               ld b,a
1085+ 9248
1086+ 9248 CD 59 96     4 call NextScan
1087+ 924B 10 FB            djnz 4B
1088+ 924D
1089+ 924D              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 924D
1091+ 924D 7C               ld a,h
1092+ 924E FE 58            cp $58
1093+ 9250 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9252
1095+ 9252 EB               ex de,hl
1096+ 9253 06 04            ld b,4
1097+ 9255 2B           5 dec hl
1098+ 9256 10 FD            djnz 5B
1099+ 9258
1100+ 9258 CD 5E 92         call Elimina_disparo_de_base_de_datos
1101+ 925B E1               pop hl
1102+ 925C 18 E5            jr 7B
1103+ 925E
1104+ 925E              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 925E
1106+ 925E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9261 AF               xor a
1108+ 9262 77               ld (hl),a
1109+ 9263 54               ld d,h
1110+ 9264 5D               ld e,l
1111+ 9265 13               inc de
1112+ 9266 ED B0            ldir
1113+ 9268 C9               ret
1114+ 9269
1115+ 9269              ; -----------------------------------------------------------------
1116+ 9269              ;
1117+ 9269              ;   7/12/23
1118+ 9269              ;
1119+ 9269
1120+ 9269 3A 2A 89     Selector_de_impactos ld a,(Impacto2)
1121+ 926C A7               and a
1122+ 926D C8               ret z
1123+ 926E
1124+ 926E              ; Analizamos si hay impacto por disparos.
1125+ 926E
1126+ 926E              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 926E
1128+ 926E CB 4F            bit 1,a
1129+ 9270 28 07            jr z,1F
1130+ 9272
1131+ 9272 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9275 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9277 18 08            jr 2F
1134+ 9279
1135+ 9279 CB 47        1 bit 0,a
1136+ 927B C8               ret z
1137+ 927C
1138+ 927C              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 927C
1140+ 927C 21 05 89         ld hl,Ctrl_1
1141+ 927F CB D6            set 2,(hl)
1142+ 9281
1143+ 9281 C9           2 ret
1144+ 9282
1145+ 9282              ; -----------------------------------------------------------------
1146+ 9282              ;
1147+ 9282              ;   25/04/23
1148+ 9282              ;
1149+ 9282
1150+ 9282              Determina_resultado_comparativa
1151+ 9282
1152+ 9282              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9282              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9282              ;
1155+ 9282              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9282              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9282              ;
1158+ 9282              ;   SBC HL,DE
1159+ 9282
1160+ 9282              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9282              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9282
1163+ 9282              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9282              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9282
1166+ 9282
1167+ 9282 3A D8 88         ld a,(Cuad_objeto)
1168+ 9285 FE 02            cp 2
1169+ 9287 28 26            jr z,2F
1170+ 9289 38 24            jr c,2F
1171+ 928B
1172+ 928B              ; Cuadrantes 3º y 4º
1173+ 928B
1174+ 928B E6 01            and 1
1175+ 928D 28 10            jr z,4F
1176+ 928F
1177+ 928F              ; Cuadrante 3º
1178+ 928F
1179+ 928F 7C               ld a,h
1180+ 9290 06 00            ld b,0
1181+ 9292
1182+ 9292 CD 1D 93         call Compara_cositas_H3
1183+ 9295
1184+ 9295 04               inc b
1185+ 9296 05               dec b
1186+ 9297 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9298
1188+ 9298 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9299 06 00            ld b,0
1190+ 929B
1191+ 929B CD 2F 93         call Compara_cositas_L3
1192+ 929E C9               ret
1193+ 929F
1194+ 929F              ; Cuadrante 4º
1195+ 929F
1196+ 929F 7C           4 ld a,h
1197+ 92A0 06 00            ld b,0
1198+ 92A2
1199+ 92A2 CD 41 93         call Compara_cositas_H4
1200+ 92A5
1201+ 92A5 04               inc b
1202+ 92A6 05               dec b
1203+ 92A7 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 92A8
1205+ 92A8 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 92A9 06 00            ld b,0
1207+ 92AB
1208+ 92AB CD 57 93         call Compara_cositas_L4
1209+ 92AE C9               ret
1210+ 92AF
1211+ 92AF              ; Cuadrantes 1º y 2º.
1212+ 92AF
1213+ 92AF 28 10        2 jr z,3F
1214+ 92B1
1215+ 92B1              ; 1er Cuadrante
1216+ 92B1
1217+ 92B1 7C               ld a,h
1218+ 92B2 06 00            ld b,0
1219+ 92B4
1220+ 92B4 CD F5 92         call Compara_cositas_H1
1221+ 92B7
1222+ 92B7 04               inc b
1223+ 92B8 05               dec b
1224+ 92B9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 92BA
1226+ 92BA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 92BB 06 00            ld b,0
1228+ 92BD
1229+ 92BD CD 0B 93         call Compara_cositas_L1
1230+ 92C0 C9               ret
1231+ 92C1
1232+ 92C1
1233+ 92C1              ; 2º Cuadrante
1234+ 92C1
1235+ 92C1 7C           3 ld a,h
1236+ 92C2 06 00            ld b,0
1237+ 92C4
1238+ 92C4 CD D1 92         call Compara_cositas_H2
1239+ 92C7
1240+ 92C7 04               inc b
1241+ 92C8 05               dec b
1242+ 92C9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 92CA
1244+ 92CA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 92CB 06 00            ld b,0
1246+ 92CD
1247+ 92CD CD E3 92         call Compara_cositas_L2
1248+ 92D0 C9               ret
1249+ 92D1
1250+ 92D1 A7           Compara_cositas_H2 and a
1251+ 92D2 28 0D            jr z,1F
1252+ 92D4              ;    cp $fd
1253+ 92D4              ;    jr z,1F
1254+ 92D4              ;    cp $fe
1255+ 92D4              ;    jr z,1F
1256+ 92D4 FE FF            cp $ff
1257+ 92D6 28 09            jr z,1F
1258+ 92D8 FE 01            cp $01
1259+ 92DA 28 05            jr z,1F
1260+ 92DC FE 02            cp $02
1261+ 92DE 28 01            jr z,1F
1262+ 92E0 C0               ret nz
1263+ 92E1 04           1 inc b
1264+ 92E2 C9               ret
1265+ 92E3
1266+ 92E3 A7           Compara_cositas_L2 and a
1267+ 92E4 28 0D            jr z,1F
1268+ 92E6              ;    cp $fd
1269+ 92E6              ;    jr z,1F
1270+ 92E6 FE FE            cp $fe
1271+ 92E8 28 09            jr z,1F
1272+ 92EA FE FF            cp $ff
1273+ 92EC 28 05            jr z,1F
1274+ 92EE FE 01            cp $01
1275+ 92F0 28 01            jr z,1F
1276+ 92F2              ;    cp $02
1277+ 92F2              ;    jr z,1F
1278+ 92F2 C0               ret nz
1279+ 92F3 04           1 inc b
1280+ 92F4 C9               ret
1281+ 92F5
1282+ 92F5 A7           Compara_cositas_H1 and a
1283+ 92F6 28 11            jr z,1F
1284+ 92F8              ;    cp $fd
1285+ 92F8              ;    jr z,1F
1286+ 92F8              ;    cp $fe
1287+ 92F8              ;    jr z,1F
1288+ 92F8 FE FF            cp $ff
1289+ 92FA 28 0D            jr z,1F
1290+ 92FC FE 01            cp $01
1291+ 92FE 28 09            jr z,1F
1292+ 9300 FE 02            cp $02
1293+ 9302 28 05            jr z,1F
1294+ 9304 FE 03            cp $03
1295+ 9306 28 01            jr z,1F
1296+ 9308 C0               ret nz
1297+ 9309 04           1 inc b
1298+ 930A C9               ret
1299+ 930B
1300+ 930B A7           Compara_cositas_L1 and a
1301+ 930C 28 0D            jr z,1F
1302+ 930E              ;    cp $fd
1303+ 930E              ;    jr z,1F
1304+ 930E              ;    cp $fe
1305+ 930E              ;    jr z,1F
1306+ 930E              ;    cp $ff
1307+ 930E              ;    jr z,1F
1308+ 930E FE 01            cp $01
1309+ 9310 28 09            jr z,1F
1310+ 9312 FE 02            cp $02
1311+ 9314 28 05            jr z,1F
1312+ 9316 FE 03            cp $03
1313+ 9318 28 01            jr z,1F
1314+ 931A C0               ret nz
1315+ 931B 04           1 inc b
1316+ 931C C9               ret
1317+ 931D
1318+ 931D A7           Compara_cositas_H3 and a
1319+ 931E 28 0D            jr z,1F
1320+ 9320              ;    cp $fd
1321+ 9320              ;    jr z,1F
1322+ 9320 FE FE            cp $fe
1323+ 9322 28 09            jr z,1F
1324+ 9324 FE FF            cp $ff
1325+ 9326 28 05            jr z,1F
1326+ 9328 FE 01            cp $01
1327+ 932A 28 01            jr z,1F
1328+ 932C              ;    cp $02
1329+ 932C              ;    jr z,1F
1330+ 932C              ;    cp $03
1331+ 932C              ;    jr z,1F
1332+ 932C C0               ret nz
1333+ 932D 04           1 inc b
1334+ 932E C9               ret
1335+ 932F
1336+ 932F A7           Compara_cositas_L3 and a
1337+ 9330 28 0D            jr z,1F
1338+ 9332              ;    cp $fd
1339+ 9332              ;    jr z,1F
1340+ 9332              ;    cp $fe
1341+ 9332              ;    jr z,1F
1342+ 9332              ;    cp $ff
1343+ 9332              ;    jr z,1F
1344+ 9332 FE 01            cp $01
1345+ 9334 28 09            jr z,1F
1346+ 9336 FE 02            cp $02
1347+ 9338 28 05            jr z,1F
1348+ 933A FE 03            cp $03
1349+ 933C 28 01            jr z,1F
1350+ 933E C0               ret nz
1351+ 933F 04           1 inc b
1352+ 9340 C9               ret
1353+ 9341
1354+ 9341 A7           Compara_cositas_H4 and a
1355+ 9342 28 11            jr z,1F
1356+ 9344 FE FD            cp $fd
1357+ 9346 28 0D            jr z,1F
1358+ 9348 FE FE            cp $fe
1359+ 934A 28 09            jr z,1F
1360+ 934C FE FF            cp $ff
1361+ 934E 28 05            jr z,1F
1362+ 9350 FE 01            cp $01
1363+ 9352 28 01            jr z,1F
1364+ 9354              ;    cp $02
1365+ 9354              ;    jr z,1F
1366+ 9354              ;    cp $03
1367+ 9354              ;    jr z,1F
1368+ 9354 C0               ret nz
1369+ 9355 04           1 inc b
1370+ 9356 C9               ret
1371+ 9357
1372+ 9357 A7           Compara_cositas_L4 and a
1373+ 9358 28 0D            jr z,1F
1374+ 935A              ;    cp $fd
1375+ 935A              ;    jr z,1F
1376+ 935A FE FE            cp $fe
1377+ 935C 28 09            jr z,1F
1378+ 935E FE FF            cp $ff
1379+ 9360 28 05            jr z,1F
1380+ 9362 FE 01            cp $01
1381+ 9364 28 01            jr z,1F
1382+ 9366              ;    cp $02
1383+ 9366              ;    jr z,1F
1384+ 9366              ;    cp $03
1385+ 9366              ;    jr z,1F
1386+ 9366 C0               ret nz
1387+ 9367 04           1 inc b
1388+ 9368 C9               ret
# file closed: Disparo.asm
1728  9369              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9369              ; ******************************************************************************************************************************************************************************************
   2+ 9369              ;
   3+ 9369              ; 26/06/23
   4+ 9369              ;
   5+ 9369              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9369
   7+ 9369 CD 4D 96     Draw call Prepara_draw
   8+ 936C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 936D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 936E 28 05        	jr z,2F
  11+ 9370
  12+ 9370 3A D8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9373 18 0C        	jr 1F
  14+ 9375
  15+ 9375 2A D6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9378 22 C6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 937B CD 0A 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 937E              ;													; _la esquina superior izquierda de la pantalla.
  19+ 937E CD D1 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9381
  21+ 9381 3A F2 88     1 ld a,(Ctrl_0)
  22+ 9384 CB 6F        	bit 5,a
  23+ 9386 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9388
  25+ 9388 CD A0 93     	call Comprueba_limite_horizontal
  26+ 938B CD 30 94     	call Comprueba_limite_vertical
  27+ 938E
  28+ 938E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 938E              ; -----------------------
  30+ 938E              ; -----------------------
  31+ 938E              ; -----------------------
  32+ 938E
  33+ 938E CD 7D 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9391 CD B4 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9394 CD 13 96     	call Define_rutina_de_impresion
  36+ 9397
  37+ 9397 3A F2 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 939A CB AF        	res 5,a											; _a ser de utilidad.
  39+ 939C 32 F2 88     	ld (Ctrl_0),a
  40+ 939F
  41+ 939F C9           	ret
  42+ 93A0
  43+ 93A0              ; *******************************************************************************************************************************************************************************************
  44+ 93A0              ;	21/01/23
  45+ 93A0              ;
  46+ 93A0              ; 	Comprueba_limite_horizontal.
  47+ 93A0              ;
  48+ 93A0              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93A0              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93A0              ;
  51+ 93A0              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93A0              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93A0              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93A0              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93A0
  56+ 93A0
  57+ 93A0
  58+ 93A0 3A F2 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93A3 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93A5 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93A7 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93A9 32 F2 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93AC 18 09            jr 6F
  64+ 93AE CB 5F        1 bit 3,a
  65+ 93B0 28 0A            jr z,2F
  66+ 93B2 E6 F7            and $f7
  67+ 93B4 32 F2 88         ld (Ctrl_0),a
  68+ 93B7 CD 0A 95     6 call Inicializacion
  69+ 93BA 18 5B            jr 5F
  70+ 93BC E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93BD
  72+ 93BD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93BD              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93BD
  75+ 93BD EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93BE 2A 00 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93C1 CD 6C 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93C4 67           	ld h,a
  79+ 93C5 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93C6 CD 6C 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93C9 67           	ld h,a
  82+ 93CA A7           	and a
  83+ 93CB ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93CD 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93CE 3A D8 88     	ld a,(Cuad_objeto)
  86+ 93D1 FE 02        	cp 2
  87+ 93D3 38 1E        	jr c,3F
  88+ 93D5 28 1C        	jr z,3F
  89+ 93D7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93D8 28 23            jr z,7F
  91+ 93DA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93DC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93DE E1           	pop hl
  94+ 93DF
  95+ 93DF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93DF              ; _para indicar con E="2" en caso necesario.
  97+ 93DF
  98+ 93DF E5               push hl
  99+ 93E0 C5               push bc
 100+ 93E1 CD 6C 99     	call calcula_tercio
 101+ 93E4 FE 01        	cp 1
 102+ 93E6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93E8 CD 18 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93EB 28 26            jr z,9F
 105+ 93ED 38 24            jr c,9F
 106+ 93EF 1E 00        11 ld e,0
 107+ 93F1 18 22            jr 8F
 108+ 93F3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93F4 28 07        	jr z, 7F
 110+ 93F6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93F8 1E 00         	ld e,0
 112+ 93FA E1           	pop hl
 113+ 93FB 18 04        	jr 4F
 114+ 93FD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93FF 18 15            jr 10F
 116+ 9401
 117+ 9401              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9401              ; _para indicar con E="2" en caso necesario.
 119+ 9401
 120+ 9401 E5           4 push hl
 121+ 9402 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9403 CD 6C 99     	call calcula_tercio
 123+ 9406 FE 01        	cp 1
 124+ 9408 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 940A CD 18 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 940D 28 04            jr z,9F
 127+ 940F 30 02            jr nc,9F
 128+ 9411 18 02        	jr 8F
 129+ 9413 1E 02        9 ld e,2
 130+ 9415 C1           8 pop bc
 131+ 9416 E1           10 pop hl
 132+ 9417 C9           5 ret
 133+ 9418
 134+ 9418              ; --------------------
 135+ 9418              ;
 136+ 9418              ; 25/08/22
 137+ 9418
 138+ 9418 CD 6C 99     Comprueba_centro call calcula_tercio
 139+ 941B 67               ld h,a
 140+ 941C 08           	ex af,af
 141+ 941D FE 02        	cp 2
 142+ 941F 38 07        	jr c,1F
 143+ 9421 28 05        	jr z,1F
 144+ 9423 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9426 18 03        	jr 2F
 146+ 9428 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 942B 08           2 ex af,af
 148+ 942C A7               and a
 149+ 942D ED 42            sbc hl,bc
 150+ 942F C9               ret
 151+ 9430
 152+ 9430              ; *********************************************************************************************************************************************************************************************
 153+ 9430              ;
 154+ 9430              ;   16/8/22
 155+ 9430              ;
 156+ 9430              ;	Comprueba_limite_vertical
 157+ 9430              ;
 158+ 9430              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9430              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9430              ;
 161+ 9430
 162+ 9430 2A C6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9433 7D           	ld a,l
 164+ 9434 E6 1F        	and $1F
 165+ 9436 57           	ld d,a
 166+ 9437 3A 02 89     	ld a,(Limite_vertical)
 167+ 943A BA           	cp d 											; Límite - Posición.
 168+ 943B 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 943C 3A D8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 943F CB 47        	bit 0,a
 171+ 9441 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9443
 173+ 9443              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9443
 175+ 9443 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9444 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9446
 178+ 9446              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9446              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9446
 181+ 9446 3A CA 88         ld a,(Coordenada_X)
 182+ 9449 16 0F            ld d,Centro_izquierda
 183+ 944B A7               and a
 184+ 944C 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 944D 28 1E            jr z,3F
 186+ 944F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9451              ;                                                    ; _salimos sin modificar nada.
 188+ 9451 18 0E            jr 2F
 189+ 9453 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9454 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9456
 192+ 9456              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9456              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9456
 195+ 9456 3A CA 88         ld a,(Coordenada_X)
 196+ 9459 16 10            ld d,Centro_derecha
 197+ 945B A7               and a
 198+ 945C 92               sub d
 199+ 945D 28 0E            jr z,3F
 200+ 945F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9461              ;                                                    ; _salimos sin modificar nada.
 202+ 9461 CB 43        2 bit 0,e
 203+ 9463 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9465 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9466 CD FA 94         call Modificaccionne
 206+ 9469 C1           	pop bc
 207+ 946A CD 0A 95         call Inicializacion
 208+ 946D C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 946E
 210+ 946E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 946E
 212+ 946E C5           4 push bc
 213+ 946F 01 C5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9472 0A           	ld a,(bc)
 215+ 9473 3D           	dec a
 216+ 9474 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9475 7D           	ld a,l
 218+ 9476 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9477 CB 47        	bit 0,a
 220+ 9479 28 03        	jr z,5F
 221+ 947B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 947C 18 2E        	jr 7F
 223+ 947E
 224+ 947E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 947E
 226+ 947E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 947F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9480 3A F2 88     	ld a,(Ctrl_0)
 229+ 9483 CB 4F        	bit 1,a
 230+ 9485 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9487 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9488
 233+ 9488              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9488
 235+ 9488 1C               inc e
 236+ 9489 1D               dec e
 237+ 948A 20 07            jr nz,12F
 238+ 948C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 948D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 948E 22 C6 88     	ld (Posicion_actual),hl
 241+ 9491 18 44        13 jr 9F
 242+ 9493 CB 43        12 bit 0,e
 243+ 9495 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9497              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9497 C1           	pop bc
 246+ 9498 18 D3        	jr 3B
 247+ 949A 80           14 add b
 248+ 949B 6F               ld l,a
 249+ 949C 22 C6 88     	ld (Posicion_actual),hl
 250+ 949F CD FA 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94A2 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94A4 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94A6 32 F2 88         ld (Ctrl_0),a
 254+ 94A9 F1           	pop af
 255+ 94AA 18 2B        	jr 9F
 256+ 94AC
 257+ 94AC              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94AC
 259+ 94AC F5           7 push af
 260+ 94AD 3A F2 88     	ld a,(Ctrl_0)
 261+ 94B0 CB 47        	bit 0,a
 262+ 94B2 20 1D        	jr nz,8F
 263+ 94B4 F1           	pop af
 264+ 94B5
 265+ 94B5              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94B5
 267+ 94B5 1C           	inc e
 268+ 94B6 1D               dec e
 269+ 94B7 20 07            jr nz,10F
 270+ 94B9 90           	sub b
 271+ 94BA 6F               ld l,a
 272+ 94BB 22 C6 88     	ld (Posicion_actual),hl
 273+ 94BE 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94C0              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94C0 CB 43        10 bit 0,e
 276+ 94C2 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94C4              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94C4 C1           	pop bc
 279+ 94C5 18 A6        	jr 3B
 280+ 94C7 90           16 sub b
 281+ 94C8 6F               ld l,a
 282+ 94C9 22 C6 88     	ld (Posicion_actual),hl
 283+ 94CC CD FA 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94CF 18 06            jr 9F
 285+ 94D1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94D3 32 F2 88         ld (Ctrl_0),a
 287+ 94D6 F1           	pop af
 288+ 94D7 C1           9 pop bc
 289+ 94D8 1E 00        	ld e,0
 290+ 94DA CD 0A 95         call Inicializacion
 291+ 94DD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94DE 08           	ex af,af
 293+ 94DF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94E0 18 8B            jr 3B
 295+ 94E2
 296+ 94E2              ; --------------------
 297+ 94E2
 298+ 94E2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94E4 CD 68 96     1 call PreviousScan
 300+ 94E7 10 FB            djnz 1B
 301+ 94E9 22 C6 88     	ld (Posicion_actual),hl
 302+ 94EC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94ED C9           	ret
 304+ 94EE
 305+ 94EE              ; --------------------
 306+ 94EE
 307+ 94EE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94F0 CD 59 96     1 call NextScan
 309+ 94F3 10 FB            djnz 1B
 310+ 94F5 22 C6 88     	ld (Posicion_actual),hl
 311+ 94F8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94F9 C9           	ret
 313+ 94FA
 314+ 94FA              ; --------------------
 315+ 94FA              ;
 316+ 94FA              ;	22/01/23
 317+ 94FA              ;
 318+ 94FA              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94FA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94FA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94FA
 322+ 94FA
 323+ 94FA              Modificaccionne
 324+ 94FA
 325+ 94FA 3A D8 88     	ld a,(Cuad_objeto)
 326+ 94FD FE 02        	cp 2
 327+ 94FF CC E2 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9502 DC E2 94         call c,Modifica_Pos_actual
 329+ 9505 C8           	ret z
 330+ 9506 CD EE 94         call Modifica_Pos_actual2
 331+ 9509 C9               ret
 332+ 950A
 333+ 950A              ; *************************************************************************************************************************************************************************************************
 334+ 950A              ;
 335+ 950A              ;	13/8/22
 336+ 950A              ;
 337+ 950A              ;	Inicializacion
 338+ 950A              ;
 339+ 950A              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 950A              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 950A              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 950A              ;
 343+ 950A              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 950A              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 950A              ;	_ desaparece/aparece.
 346+ 950A
 347+ 950A              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 950A              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 950A              ;
 350+ 950A              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 950A              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 950A              ; 		   [E] ="0"
 353+ 950A
 354+ 950A              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 950A
 356+ 950A CD 6C 99     Inicializacion call calcula_tercio
 357+ 950D 28 36        	jr z,primit
 358+ 950F E6 02        	and 2
 359+ 9511 20 07        	jr nz,segmit
 360+ 9513 7D           	ld a,l
 361+ 9514 FE 7F        	cp $7f
 362+ 9516 38 2D        	jr c,primit
 363+ 9518 28 2B        	jr z,primit
 364+ 951A CD 77 95     segmit call column
 365+ 951D 38 13        	jr c,tercuad
 366+ 951F 3E 04        cuarcuad ld a,4
 367+ 9521 32 D8 88     	ld (Cuad_objeto),a
 368+ 9524 21 20 48     	ld hl,$4820
 369+ 9527 22 00 89     	ld (Limite_horizontal),hl
 370+ 952A 21 02 89     	ld hl,Limite_vertical
 371+ 952D 36 0D        	ld (hl),$0d
 372+ 952F 08           	ex af,af
 373+ 9530 18 3C        	jr 1F
 374+ 9532              tercuad
 375+ 9532 3E 03        	ld a,3
 376+ 9534 32 D8 88     	ld (Cuad_objeto),a
 377+ 9537 21 20 48     	ld hl,$4820
 378+ 953A 22 00 89     	ld (Limite_horizontal),hl
 379+ 953D 21 02 89     	ld hl,Limite_vertical
 380+ 9540 36 12        	ld (hl),$12
 381+ 9542 08           	ex af,af
 382+ 9543 18 29        	jr 1F
 383+ 9545 CD 77 95     primit call column
 384+ 9548 38 13        	jr c, primcuad
 385+ 954A              segcuad
 386+ 954A 3E 02        	ld a,2
 387+ 954C 32 D8 88     	ld (Cuad_objeto),a
 388+ 954F 21 C0 4F     	ld hl,$4fc0
 389+ 9552 22 00 89     	ld (Limite_horizontal),hl
 390+ 9555 21 02 89     	ld hl,Limite_vertical
 391+ 9558 36 0D        	ld (hl),$0d
 392+ 955A 08           	ex af,af
 393+ 955B 18 11        	jr 1F
 394+ 955D              primcuad
 395+ 955D 3E 01        	ld a,1
 396+ 955F 32 D8 88     	ld (Cuad_objeto),a
 397+ 9562 21 C0 4F     	ld hl,$4fc0
 398+ 9565 22 00 89     	ld (Limite_horizontal),hl
 399+ 9568 21 02 89     	ld hl,Limite_vertical
 400+ 956B 36 12        	ld (hl),$12
 401+ 956D 08           	ex af,af
 402+ 956E CD 1B 9D     1 call Genera_coordenadas
 403+ 9571 21 F2 88     	ld hl,Ctrl_0
 404+ 9574 CB EE        	set 5,(hl)
 405+ 9576 C9           	ret
 406+ 9577
 407+ 9577              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9577
 409+ 9577              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9577              ;
 411+ 9577              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9577
 413+ 9577 7D           column ld a,l
 414+ 9578 E6 1F        	and $1f
 415+ 957A FE 10         	cp $10
 416+ 957C C9            	ret
 417+ 957D
 418+ 957D              ; --------------------------------------------------------------------------------------------------------------------
 419+ 957D              ;
 420+ 957D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 957D              ;
 422+ 957D              ; 14/12/22
 423+ 957D              ;
 424+ 957D              ;	Modifica: A y BC.
 425+ 957D
 426+ 957D 3A D8 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9580 E6 01        	and 1
 428+ 9582 28 17        	jr z,1F
 429+ 9584
 430+ 9584              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9584
 432+ 9584 3A CA 88     	ld a,(Coordenada_X)
 433+ 9587 47           	ld b,a
 434+ 9588 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9589 79           	ld a,c
 436+ 958A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 958B 38 08        	jr c,2F
 438+ 958D 47           	ld b,a
 439+ 958E 79           	ld a,c
 440+ 958F 90           	sub b
 441+ 9590 32 FF 88     	ld (Columnas),a
 442+ 9593 18 1B        	jr 4F
 443+ 9595 79           2 ld a,c
 444+ 9596 32 FF 88     	ld (Columnas),a
 445+ 9599 18 15        	jr 4F
 446+ 959B
 447+ 959B              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 959B
 449+ 959B 3A CA 88     1 ld a,(Coordenada_X)
 450+ 959E 81           	add c
 451+ 959F 3D           	dec a
 452+ 95A0 D6 1F        	sub $1f
 453+ 95A2 38 08        	jr c,3F
 454+ 95A4 47           	ld b,a
 455+ 95A5 79           	ld a,c
 456+ 95A6 90           	sub b
 457+ 95A7 32 FF 88     	ld (Columnas),a
 458+ 95AA 18 04        	jr 4F
 459+ 95AC 79           3 ld a,c
 460+ 95AD 32 FF 88     	ld (Columnas),a
 461+ 95B0 D9           4 exx
 462+ 95B1 4F           	ld c,a
 463+ 95B2 D9           	exx
 464+ 95B3 C9            ret
 465+ 95B4
 466+ 95B4              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95B4              ;
 468+ 95B4              ;   19/7/23
 469+ 95B4              ;
 470+ 95B4              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95B4              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95B4              ;
 473+ 95B4              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95B4              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95B4              ;
 476+ 95B4              ;	DESTRUYE: HL,B Y A.
 477+ 95B4
 478+ 95B4 3A D8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95B7 FE 02        	cp 2
 480+ 95B9 38 18        	jr c,1F
 481+ 95BB 28 16        	jr z,1F
 482+ 95BD E6 01        	and 1
 483+ 95BF 28 0D        	jr z,3F
 484+ 95C1
 485+ 95C1              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95C1
 487+ 95C1 CD 07 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95C4
 489+ 95C4 7D           9 ld a,l
 490+ 95C5 E6 1F        	and $1f
 491+ 95C7 28 2A        	jr z,7F
 492+ 95C9 2B           	dec hl
 493+ 95CA 10 F8        	djnz 9B
 494+ 95CC 18 25        	jr 7F
 495+ 95CE
 496+ 95CE              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95CE
 498+ 95CE 2A C6 88     3 ld hl,(Posicion_actual)
 499+ 95D1 18 20        	jr 7F
 500+ 95D3
 501+ 95D3 28 14        1 jr z,2F
 502+ 95D5
 503+ 95D5              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95D5
 505+ 95D5 CD 07 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95D8
 507+ 95D8 7D           4 ld a,l
 508+ 95D9 E6 1F        	and $1f
 509+ 95DB 28 03        	jr z,6F
 510+ 95DD 2B           	dec hl
 511+ 95DE 10 F8        	djnz 4B
 512+ 95E0 06 0F        6 ld b,15
 513+ 95E2 CD 68 96     5 call PreviousScan
 514+ 95E5 10 FB        	djnz 5B
 515+ 95E7 18 0A        	jr 7F
 516+ 95E9
 517+ 95E9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95E9
 519+ 95E9 CD 07 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95EC 06 0F        	ld b,15
 521+ 95EE CD 68 96     8 call PreviousScan
 522+ 95F1 10 FB        	djnz 8B
 523+ 95F3
 524+ 95F3 E5           7 push hl
 525+ 95F4 DD E1        	pop ix
 526+ 95F6
 527+ 95F6 2A C8 88     	ld hl,(Puntero_objeto)
 528+ 95F9 E5           	push hl
 529+ 95FA FD E1        	pop iy
 530+ 95FC
 531+ 95FC              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95FC
 533+ 95FC 3A F2 88     	ld a,(Ctrl_0)
 534+ 95FF CB 77        	bit 6,a
 535+ 9601 C8           	ret z
 536+ 9602
 537+ 9602              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9602              ; _ entidad / Amadeus´.
 539+ 9602
 540+ 9602 DD 22 A8 85  	ld (p.imp.amadeus),ix
 541+ 9606
 542+ 9606 C9           	ret
 543+ 9607
 544+ 9607              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9607              ;
 546+ 9607              ;	2/1/23
 547+ 9607              ;
 548+ 9607              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9607              ;
 550+ 9607              ;	Tras esta rutina tenemos:
 551+ 9607              ;
 552+ 9607              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9607              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9607              ;
 555+ 9607              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9607
 557+ 9607 2A C6 88     Operandos ld hl,(Posicion_actual)
 558+ 960A 3A FF 88     	ld a,(Columnas)
 559+ 960D 3D           	dec a
 560+ 960E 20 01        	jr nz,1F
 561+ 9610 3C           	inc a
 562+ 9611 47           1 ld b,a
 563+ 9612 C9           	ret
 564+ 9613
 565+ 9613              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9613              ;
 567+ 9613              ;	3/1/23
 568+ 9613              ;
 569+ 9613              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9613              ;
 571+ 9613              ;	Destruye: A,B,HL y DE.
 572+ 9613
 573+ 9613              Define_rutina_de_impresion
 574+ 9613
 575+ 9613 3A C5 88     	ld a,(Columns)
 576+ 9616 47           	ld b,a
 577+ 9617 3A FF 88     	ld a,(Columnas)
 578+ 961A B8           	cp b
 579+ 961B 20 0D        	jr nz,2f
 580+ 961D
 581+ 961D              ;	La entidad se imprime entera.
 582+ 961D
 583+ 961D 21 3C 97     	ld hl, Indice_entidades_completas
 584+ 9620 E6 01        	and 1
 585+ 9622 28 02        	jr z,1F
 586+ 9624
 587+ 9624 23           	inc hl
 588+ 9625 23           	inc hl
 589+ 9626
 590+ 9626 CD ED 8C     1 call Extrae_address
 591+ 9629 C9           	ret		;	ret
 592+ 962A
 593+ 962A              ;	La entidad no se imprime entera en pantalla.
 594+ 962A
 595+ 962A 3A D8 88     2 ld a,(Cuad_objeto)
 596+ 962D E6 01        	and 1
 597+ 962F 28 17        	jr z,3F
 598+ 9631
 599+ 9631              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9631
 601+ 9631 21 40 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9634 3A C5 88     4 ld a,(Columns)
 603+ 9637 E6 01        	and 1
 604+ 9639 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 963B
 606+ 963B 23           	inc hl
 607+ 963C 23           	inc hl
 608+ 963D
 609+ 963D 3A FF 88     	ld a,(Columnas)
 610+ 9640 E6 01        	and 1
 611+ 9642 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9644
 613+ 9644 23           	inc hl
 614+ 9645 23           	inc hl
 615+ 9646
 616+ 9646 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9648
 618+ 9648 21 46 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 964B 18 E7        	jr 4B
 620+ 964D
 621+ 964D              ; --------------------------------------------------------------------------------------------------------------------
 622+ 964D              ;
 623+ 964D              ;	Prepara_draw
 624+ 964D              ;
 625+ 964D              ;	Es una rutina de carga.
 626+ 964D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 964D              ;
 628+ 964D              ;	FUNCIONAMIENTO:
 629+ 964D              ;
 630+ 964D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 964D              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 964D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 964D              ;
 634+ 964D              ;	DESTRUYE:
 635+ 964D              ;
 636+ 964D              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 964D
 638+ 964D 21 C4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9650 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9651 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9652 4E           	ld c,(hl)
 642+ 9653 2A C6 88     	ld hl,(Posicion_actual)
 643+ 9656 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9658 C9           	ret
 645+ 9659
 646+ 9659              ;----------------------------------------------------------------------------------------------------------------
 647+ 9659              ;
 648+ 9659              ;	5/08/22
 649+ 9659              ;
 650+ 9659              ;   NextScan.
 651+ 9659              ;
 652+ 9659              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9659              ;
 654+ 9659              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9659              ;
 656+ 9659              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9659              ;
 658+ 9659              ;       DESTRUIDOS: AF y HL !!!
 659+ 9659              ;
 660+ 9659              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9659              ;
 662+ 9659
 663+ 9659 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 965A 7C               ld a,h
 665+ 965B E6 07            and 7
 666+ 965D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 965E
 668+ 965E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 965F C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9661 6F               ld l,a
 671+ 9662 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9663
 673+ 9663 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9664 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9666 67               ld h,a
 676+ 9667 C9               ret
 677+ 9668
 678+ 9668              ;----------------------------------------------------------------------------------------------------------------
 679+ 9668              ;
 680+ 9668              ;	5/08/22
 681+ 9668              ;
 682+ 9668              ;   PreviousScan.
 683+ 9668              ;
 684+ 9668              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9668              ;
 686+ 9668              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9668              ;
 688+ 9668              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9668              ;
 690+ 9668              ;       DESTRUIDOS: AF y HL !!!
 691+ 9668              ;
 692+ 9668              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9668              ;
 694+ 9668
 695+ 9668 7C           PreviousScan ld a,h
 696+ 9669 25               dec h               ; Dec H.
 697+ 966A E6 07            and 7
 698+ 966C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 966D
 700+ 966D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 966E D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9670 6F               ld l,a
 703+ 9671 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9672
 705+ 9672 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9673 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9675 67               ld h,a
 708+ 9676 C9               ret
 709+ 9677
 710+ 9677              ; -----------------------------------------------------------------------------------
 711+ 9677              ;
 712+ 9677              ;	31/7/23
 713+ 9677              ;
 714+ 9677              ;	Rutina principal de pintado de entidades.
 715+ 9677              ;	Extrae la foto del frame, (entidades).
 716+ 9677
 717+ 9677              Extrae_foto_entidades
 718+ 9677
 719+ 9677 21 01 70     	ld hl,Album_de_fotos+1
 720+ 967A 7E           	ld a,(hl)
 721+ 967B A7           	and a
 722+ 967C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 967D
 724+ 967D              ;	No hay datos, (entidades para pintar en este frame).
 725+ 967D
 726+ 967D 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9680 A7           	and a
 728+ 9681 C8           	ret z
 729+ 9682
 730+ 9682              ; -----------------------------------
 731+ 9682
 732+ 9682 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9686 31 00 70     	ld sp,Album_de_fotos
 734+ 9689
 735+ 9689 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 968B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 968C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 968D
 739+ 968D ED 73 18 89  	ld (Stack_2),sp
 740+ 9691 ED 7B 16 89  	ld sp,(Stack)
 741+ 9695
 742+ 9695              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9695
 744+ 9695 3E CD        	ld a,$cd
 745+ 9697 32 9F 96     	ld (Imprime),a
 746+ 969A EB           	ex de,hl
 747+ 969B 22 A0 96     	ld (Imprime+1),hl
 748+ 969E EB           	ex de,hl
 749+ 969F
 750+ 969F              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 969F
 752+ 969F 00 00 00     Imprime db 0,0,0
 753+ 96A2
 754+ 96A2 ED 73 16 89  	ld (Stack),sp
 755+ 96A6
 756+ 96A6 3A 11 89     	ld a,(Numero_de_malotes)
 757+ 96A9 3D           	dec a
 758+ 96AA 28 09        	jr z,1F
 759+ 96AC 32 11 89      	ld (Numero_de_malotes),a
 760+ 96AF
 761+ 96AF ED 7B 18 89  	ld sp,(Stack_2)
 762+ 96B3 18 D4        	jr 2B
 763+ 96B5
 764+ 96B5 AF           1 xor a
 765+ 96B6 32 18 89     	ld (Stack_2),a
 766+ 96B9
 767+ 96B9 C9           	ret
 768+ 96BA
 769+ 96BA              ; -----------------------------------------------------------------------------------
 770+ 96BA              ;
 771+ 96BA              ;	28/2/23
 772+ 96BA              ;
 773+ 96BA              ;	Pinta los disparos generados.
 774+ 96BA
 775+ 96BA              Extrae_foto_disparos
 776+ 96BA
 777+ 96BA 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 96BD 7E               ld a,(hl)
 779+ 96BE A7               and a
 780+ 96BF C8               ret z
 781+ 96C0
 782+ 96C0 3A 25 89     	ld a,(Numero_de_disparotes)
 783+ 96C3 A7           	and a
 784+ 96C4 C8           	ret z
 785+ 96C5 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 96C9 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 96CC
 788+ 96CC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 96CE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 96CF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 96D0
 792+ 96D0 ED 73 18 89  	ld (Stack_2),sp
 793+ 96D4 ED 7B 16 89  	ld sp,(Stack)
 794+ 96D8
 795+ 96D8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 96D8
 797+ 96D8 3E CD        	ld a,$cd
 798+ 96DA 32 E2 96     	ld (Imprime2),a
 799+ 96DD EB           	ex de,hl
 800+ 96DE 22 E3 96     	ld (Imprime2+1),hl
 801+ 96E1 EB           	ex de,hl
 802+ 96E2
 803+ 96E2              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96E2
 805+ 96E2 00 00 00     Imprime2 db 0,0,0
 806+ 96E5
 807+ 96E5 3A 25 89     	ld a,(Numero_de_disparotes)
 808+ 96E8 3D           	dec a
 809+ 96E9 28 09        	jr z,1F
 810+ 96EB 32 25 89      	ld (Numero_de_disparotes),a
 811+ 96EE
 812+ 96EE ED 7B 18 89  	ld sp,(Stack_2)
 813+ 96F2 18 D8        	jr 2B
 814+ 96F4
 815+ 96F4 AF           1 xor a
 816+ 96F5 32 18 89     	ld (Stack_2),a
 817+ 96F8 C9           	ret
 818+ 96F9
 819+ 96F9              ; -----------------------------------------------------------------------------------
 820+ 96F9              ;
 821+ 96F9              ;	4/9/23
 822+ 96F9              ;
 823+ 96F9              ;	Rutina principal de pintado de Amadeus.
 824+ 96F9              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96F9
 826+ 96F9 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96FC 7E           	ld a,(hl)
 828+ 96FD A7           	and a
 829+ 96FE C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96FF
 831+ 96FF 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 9702 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9703 C8           	ret z
 834+ 9704
 835+ 9704              ; -----------------------------------
 836+ 9704
 837+ 9704 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9708 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 970B
 840+ 970B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 970D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 970E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 970F
 844+ 970F ED 73 18 89  	ld (Stack_2),sp
 845+ 9713 ED 7B 16 89  	ld sp,(Stack)
 846+ 9717
 847+ 9717              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9717
 849+ 9717 3E CD        	ld a,$cd
 850+ 9719 32 21 97     	ld (Imprime_Amadeus),a
 851+ 971C EB           	ex de,hl
 852+ 971D 22 22 97     	ld (Imprime_Amadeus+1),hl
 853+ 9720 EB           	ex de,hl
 854+ 9721
 855+ 9721              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 9721
 857+ 9721 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9724
 859+ 9724 ED 73 16 89  	ld (Stack),sp
 860+ 9728
 861+ 9728 3A 11 89     	ld a,(Numero_de_malotes)
 862+ 972B 3D           	dec a
 863+ 972C 28 09        	jr z,1F
 864+ 972E 32 11 89      	ld (Numero_de_malotes),a
 865+ 9731
 866+ 9731 ED 7B 18 89  	ld sp,(Stack_2)
 867+ 9735 18 D4        	jr 2B
 868+ 9737
 869+ 9737 AF           1 xor a
 870+ 9738 32 18 89     	ld (Stack_2),a
 871+ 973B
 872+ 973B C9           	ret
# file closed: Draw_XOR.asm
1729  973C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 973C              ;   índices de Rutinas de impresión.
   2+ 973C
   3+ 973C 4C 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 973E 79 97            defw Pinta_Amadeus_3x2
   5+ 9740
   6+ 9740 CF 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9742 6F 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9744 23 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9746
  10+ 9746 F9 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9748 FD 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 974A B1 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 974C
  14+ 974C
  15+ 974C              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 974C              ;
  17+ 974C              ;   12/12/22
  18+ 974C              ;
  19+ 974C              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 974C              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 974C              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 974C              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 974C              ;
  24+ 974C              ;   Modifica: DE y HL.
  25+ 974C
  26+ 974C ED 73 16 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9750 FD F9        	ld sp,iy
  28+ 9752 06 10            ld b,16
  29+ 9754 D1           1 pop de
  30+ 9755 7B               ld a,e
  31+ 9756 AE               xor (hl)
  32+ 9757 77           	ld (hl),a
  33+ 9758 23           	inc hl
  34+ 9759 7A               ld a,d
  35+ 975A AE               xor (hl)
  36+ 975B 77           	ld (hl),a
  37+ 975C 2B           	dec hl
  38+ 975D 24           	inc h
  39+ 975E 7C               ld a,h
  40+ 975F E6 07            and 7
  41+ 9761 20 0A            jr nz,2F
  42+ 9763 7D               ld a,l
  43+ 9764 C6 20            add a,$20
  44+ 9766 6F               ld l,a
  45+ 9767 38 04            jr c,2F
  46+ 9769 7C               ld a,h
  47+ 976A D6 08            sub 8
  48+ 976C 67               ld h,a
  49+ 976D 7C           2 ld a,h
  50+ 976E FE 58            cp $58
  51+ 9770 28 02            jr z,3F
  52+ 9772 10 E0            djnz 1B
  53+ 9774 ED 7B 16 89  3 ld sp,(Stack)
  54+ 9778 C9           	ret
  55+ 9779
  56+ 9779 ED 73 16 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 977D FD F9        	ld sp,iy
  58+ 977F 06 08            ld b,8
  59+ 9781 D1           1 pop de
  60+ 9782 7B               ld a,e
  61+ 9783 AE               xor (hl)
  62+ 9784 77           	ld (hl),a
  63+ 9785 23           	inc hl
  64+ 9786 7A               ld a,d
  65+ 9787 AE               xor (hl)
  66+ 9788 77           	ld (hl),a
  67+ 9789 23           	inc hl
  68+ 978A D1           	pop de
  69+ 978B 7B               ld a,e
  70+ 978C AE               xor (hl)
  71+ 978D 77           	ld (hl),a
  72+ 978E 2B           	dec hl
  73+ 978F 2B           	dec hl
  74+ 9790 24           	inc h
  75+ 9791 7C               ld a,h
  76+ 9792 E6 07            and 7
  77+ 9794 20 0A            jr nz,2F
  78+ 9796 7D               ld a,l
  79+ 9797 C6 20            add a,$20
  80+ 9799 6F               ld l,a
  81+ 979A 38 04            jr c,2F
  82+ 979C 7C               ld a,h
  83+ 979D D6 08            sub 8
  84+ 979F 67               ld h,a
  85+ 97A0 7C           2 ld a,h
  86+ 97A1 FE 58            cp $58
  87+ 97A3 28 25            jr z,4F
  88+ 97A5 7A               ld a,d
  89+ 97A6 AE               xor (hl)
  90+ 97A7 77               ld (hl),a
  91+ 97A8 D1           	pop de
  92+ 97A9 23           	inc hl
  93+ 97AA 7B               ld a,e
  94+ 97AB AE               xor (hl)
  95+ 97AC 77           	ld (hl),a
  96+ 97AD 23           	inc hl
  97+ 97AE 7A               ld a,d
  98+ 97AF AE               xor (hl)
  99+ 97B0 77           	ld (hl),a
 100+ 97B1 2B           	dec hl
 101+ 97B2 2B           	dec hl
 102+ 97B3 24           	inc h
 103+ 97B4 7C               ld a,h
 104+ 97B5 E6 07            and 7
 105+ 97B7 20 0A            jr nz,3F
 106+ 97B9 7D               ld a,l
 107+ 97BA C6 20            add a,$20
 108+ 97BC 6F               ld l,a
 109+ 97BD 38 04            jr c,3F
 110+ 97BF 7C               ld a,h
 111+ 97C0 D6 08            sub 8
 112+ 97C2 67               ld h,a
 113+ 97C3 7C           3 ld a,h
 114+ 97C4 FE 58            cp $58
 115+ 97C6 28 02            jr z,4F
 116+ 97C8 10 B7            djnz 1B
 117+ 97CA ED 7B 16 89  4 ld sp,(Stack)
 118+ 97CE C9           	ret
 119+ 97CF
 120+ 97CF              ; ---------------------------------------------------
 121+ 97CF
 122+ 97CF ED 73 16 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97D3 FD F9        	ld sp,iy
 124+ 97D5
 125+ 97D5              ; >>>
 126+ 97D5
 127+ 97D5 06 10            ld b,16
 128+ 97D7 D1           1 pop de
 129+ 97D8 7A           	ld a,d
 130+ 97D9 AE           	xor (hl)
 131+ 97DA 77           	ld (hl),a
 132+ 97DB 24           	inc h
 133+ 97DC 7C               ld a,h
 134+ 97DD E6 07            and 7
 135+ 97DF 20 0C            jr nz,2F
 136+ 97E1 7D               ld a,l
 137+ 97E2 C6 20            add a,$20
 138+ 97E4 6F               ld l,a
 139+ 97E5 38 06            jr c,2F
 140+ 97E7 7C               ld a,h
 141+ 97E8 D6 08            sub 8
 142+ 97EA 67               ld h,a
 143+ 97EB 18 00            jr 2F
 144+ 97ED 7C           2 ld a,h
 145+ 97EE FE 58            cp $58
 146+ 97F0 28 02            jr z,3F
 147+ 97F2 10 E3            djnz 1B
 148+ 97F4 ED 7B 16 89  3 ld sp,(Stack)
 149+ 97F8 C9           	ret
 150+ 97F9
 151+ 97F9 ED 73 16 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97FD FD F9        	ld sp,iy
 153+ 97FF
 154+ 97FF              ; >>>
 155+ 97FF
 156+ 97FF 06 10            ld b,16
 157+ 9801 D1           1 pop de
 158+ 9802 7B           	ld a,e
 159+ 9803 AE           	xor (hl)
 160+ 9804 77           	ld (hl),a
 161+ 9805 24           	inc h
 162+ 9806 7C               ld a,h
 163+ 9807 E6 07            and 7
 164+ 9809 20 0C            jr nz,2F
 165+ 980B 7D               ld a,l
 166+ 980C C6 20            add a,$20
 167+ 980E 6F               ld l,a
 168+ 980F 38 06            jr c,2F
 169+ 9811 7C               ld a,h
 170+ 9812 D6 08            sub 8
 171+ 9814 67               ld h,a
 172+ 9815 18 00            jr 2F
 173+ 9817 7C           2 ld a,h
 174+ 9818 FE 58            cp $58
 175+ 981A 28 02            jr z,3F
 176+ 981C 10 E3            djnz 1B
 177+ 981E ED 7B 16 89  3 ld sp,(Stack)
 178+ 9822 C9           	ret
 179+ 9823
 180+ 9823              ; ---------------------------------------------------
 181+ 9823
 182+ 9823 ED 73 16 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9827 FD F9        	ld sp,iy
 184+ 9829 06 08            ld b,8
 185+ 982B D1           1 pop de
 186+ 982C 7A           	ld a,d
 187+ 982D AE           	xor (hl)
 188+ 982E 77           	ld (hl),a
 189+ 982F 23           	inc hl
 190+ 9830 D1           	pop de
 191+ 9831 7B           	ld a,e
 192+ 9832 AE           	xor (hl)
 193+ 9833 77           	ld (hl),a
 194+ 9834 2B           	dec hl
 195+ 9835 24            	inc h
 196+ 9836 7C               ld a,h
 197+ 9837 E6 07            and 7
 198+ 9839 20 0A            jr nz,2F
 199+ 983B 7D               ld a,l
 200+ 983C C6 20            add a,$20
 201+ 983E 6F               ld l,a
 202+ 983F 38 04            jr c,2F
 203+ 9841 7C               ld a,h
 204+ 9842 D6 08            sub 8
 205+ 9844 67               ld h,a
 206+ 9845 7C           2 ld a,h
 207+ 9846 FE 58            cp $58
 208+ 9848 28 20            jr z,4F
 209+ 984A D1               pop de
 210+ 984B 7B           	ld a,e
 211+ 984C AE           	xor (hl)
 212+ 984D 77           	ld (hl),a
 213+ 984E 23           	inc hl
 214+ 984F 7A           	ld a,d
 215+ 9850 AE           	xor (hl)
 216+ 9851 77           	ld (hl),a
 217+ 9852 2B           	dec hl
 218+ 9853 24           	inc h
 219+ 9854 7C               ld a,h
 220+ 9855 E6 07            and 7
 221+ 9857 20 0A            jr nz,3F
 222+ 9859 7D               ld a,l
 223+ 985A C6 20            add a,$20
 224+ 985C 6F               ld l,a
 225+ 985D 38 04            jr c,3F
 226+ 985F 7C               ld a,h
 227+ 9860 D6 08            sub 8
 228+ 9862 67               ld h,a
 229+ 9863 7C           3 ld a,h
 230+ 9864 FE 58            cp $58
 231+ 9866 28 02            jr z,4F
 232+ 9868 10 C1            djnz 1B
 233+ 986A ED 7B 16 89  4 ld sp,(Stack)
 234+ 986E C9           	ret
 235+ 986F
 236+ 986F ED 73 16 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9873 FD F9        	ld sp,iy
 238+ 9875 06 08            ld b,8
 239+ 9877 D1           1 pop de
 240+ 9878 D1           	pop de
 241+ 9879 7B           	ld a,e
 242+ 987A AE           	xor (hl)
 243+ 987B 77           	ld (hl),a
 244+ 987C 24            	inc h
 245+ 987D 7C               ld a,h
 246+ 987E E6 07            and 7
 247+ 9880 20 0A            jr nz,2F
 248+ 9882 7D               ld a,l
 249+ 9883 C6 20            add a,$20
 250+ 9885 6F               ld l,a
 251+ 9886 38 04            jr c,2F
 252+ 9888 7C               ld a,h
 253+ 9889 D6 08            sub 8
 254+ 988B 67               ld h,a
 255+ 988C 7C           2 ld a,h
 256+ 988D FE 58            cp $58
 257+ 988F 28 1B            jr z,4F
 258+ 9891 D1               pop de
 259+ 9892 7A           	ld a,d
 260+ 9893 AE           	xor (hl)
 261+ 9894 77           	ld (hl),a
 262+ 9895 24           	inc h
 263+ 9896 7C               ld a,h
 264+ 9897 E6 07            and 7
 265+ 9899 20 0A            jr nz,3F
 266+ 989B 7D               ld a,l
 267+ 989C C6 20            add a,$20
 268+ 989E 6F               ld l,a
 269+ 989F 38 04            jr c,3F
 270+ 98A1 7C               ld a,h
 271+ 98A2 D6 08            sub 8
 272+ 98A4 67               ld h,a
 273+ 98A5 7C           3 ld a,h
 274+ 98A6 FE 58            cp $58
 275+ 98A8 28 02            jr z,4F
 276+ 98AA 10 CB            djnz 1B
 277+ 98AC ED 7B 16 89  4 ld sp,(Stack)
 278+ 98B0 C9           	ret
 279+ 98B1
 280+ 98B1 ED 73 16 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98B5 FD F9        	ld sp,iy
 282+ 98B7 06 08            ld b,8
 283+ 98B9 D1           1 pop de
 284+ 98BA 7B           	ld a,e
 285+ 98BB AE           	xor (hl)
 286+ 98BC 77           	ld (hl),a
 287+ 98BD 23           	inc hl
 288+ 98BE 7A           	ld a,d
 289+ 98BF AE           	xor (hl)
 290+ 98C0 77           	ld (hl),a
 291+ 98C1 2B           	dec hl
 292+ 98C2 24             	inc h
 293+ 98C3 7C               ld a,h
 294+ 98C4 E6 07            and 7
 295+ 98C6 20 0A            jr nz,2F
 296+ 98C8 7D               ld a,l
 297+ 98C9 C6 20            add a,$20
 298+ 98CB 6F               ld l,a
 299+ 98CC 38 04            jr c,2F
 300+ 98CE 7C               ld a,h
 301+ 98CF D6 08            sub 8
 302+ 98D1 67               ld h,a
 303+ 98D2 7C           2 ld a,h
 304+ 98D3 FE 58            cp $58
 305+ 98D5 28 21            jr z,4F
 306+ 98D7 D1               pop de
 307+ 98D8 7A           	ld a,d
 308+ 98D9 AE           	xor (hl)
 309+ 98DA 77           	ld (hl),a
 310+ 98DB 23           	inc hl
 311+ 98DC D1               pop de
 312+ 98DD 7B           	ld a,e
 313+ 98DE AE           	xor (hl)
 314+ 98DF 77           	ld (hl),a
 315+ 98E0 2B           	dec hl
 316+ 98E1 24           	inc h
 317+ 98E2 7C               ld a,h
 318+ 98E3 E6 07            and 7
 319+ 98E5 20 0A            jr nz,3F
 320+ 98E7 7D               ld a,l
 321+ 98E8 C6 20            add a,$20
 322+ 98EA 6F               ld l,a
 323+ 98EB 38 04            jr c,3F
 324+ 98ED 7C               ld a,h
 325+ 98EE D6 08            sub 8
 326+ 98F0 67               ld h,a
 327+ 98F1 7C           3 ld a,h
 328+ 98F2 FE 58            cp $58
 329+ 98F4 28 02            jr z,4F
 330+ 98F6 10 C1            djnz 1B
 331+ 98F8 ED 7B 16 89  4 ld sp,(Stack)
 332+ 98FC C9           	ret
 333+ 98FD
 334+ 98FD ED 73 16 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9901 FD F9        	ld sp,iy
 336+ 9903 06 08            ld b,8
 337+ 9905 D1           1 pop de
 338+ 9906 7B           	ld a,e
 339+ 9907 AE           	xor (hl)
 340+ 9908 77           	ld (hl),a
 341+ 9909 24            	inc h
 342+ 990A 7C               ld a,h
 343+ 990B E6 07            and 7
 344+ 990D 20 0A            jr nz,2F
 345+ 990F 7D               ld a,l
 346+ 9910 C6 20            add a,$20
 347+ 9912 6F               ld l,a
 348+ 9913 38 04            jr c,2F
 349+ 9915 7C               ld a,h
 350+ 9916 D6 08            sub 8
 351+ 9918 67               ld h,a
 352+ 9919 7C           2 ld a,h
 353+ 991A FE 58            cp $58
 354+ 991C 28 1C            jr z,4F
 355+ 991E D1               pop de
 356+ 991F 7A           	ld a,d
 357+ 9920 AE           	xor (hl)
 358+ 9921 77           	ld (hl),a
 359+ 9922 24           	inc h
 360+ 9923 7C               ld a,h
 361+ 9924 E6 07            and 7
 362+ 9926 20 0A            jr nz,3F
 363+ 9928 7D               ld a,l
 364+ 9929 C6 20            add a,$20
 365+ 992B 6F               ld l,a
 366+ 992C 38 04            jr c,3F
 367+ 992E 7C               ld a,h
 368+ 992F D6 08            sub 8
 369+ 9931 67               ld h,a
 370+ 9932 7C           3 ld a,h
 371+ 9933 FE 58            cp $58
 372+ 9935 28 03            jr z,4F
 373+ 9937 D1               pop de
 374+ 9938 10 CB            djnz 1B
 375+ 993A ED 7B 16 89  4 ld sp,(Stack)
 376+ 993E C9           	ret
 377+ 993F
 378+ 993F              ; ---------------------------------------------------
 379+ 993F              ;
 380+ 993F              ;   27/02/23
 381+ 993F              ;
 382+ 993F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 993F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 993F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 993F
 386+ 993F ED 73 16 89  Pinta_Disparo ld (Stack),sp
 387+ 9943 FD F9            ld sp,iy
 388+ 9945 06 03            ld b,3
 389+ 9947 D1           1 pop de
 390+ 9948 7B               ld a,e
 391+ 9949 AE               xor (hl)
 392+ 994A 77               ld (hl),a
 393+ 994B 23               inc hl
 394+ 994C 7A               ld a,d
 395+ 994D AE               xor (hl)
 396+ 994E 77               ld (hl),a
 397+ 994F 2B               dec hl
 398+ 9950
 399+ 9950 24               inc h
 400+ 9951 7C               ld a,h
 401+ 9952 E6 07            and 7
 402+ 9954 20 0A            jr nz,2F
 403+ 9956 7D               ld a,l
 404+ 9957 C6 20            add a,$20
 405+ 9959 6F               ld l,a
 406+ 995A 38 04            jr c,2F
 407+ 995C 7C               ld a,h
 408+ 995D D6 08            sub 8
 409+ 995F 67               ld h,a
 410+ 9960 7C           2 ld a,h
 411+ 9961 FE 58            cp $58
 412+ 9963 28 02            jr z,3F
 413+ 9965
 414+ 9965 10 E0            djnz 1B
 415+ 9967 ED 7B 16 89  3 ld sp,(Stack)
 416+ 996B C9               ret
 417+ 996C
# file closed: Rutinas_de_impresion_sprites.asm
1730  996C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 996C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 996C              ;
   3+ 996C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 996C              ;
   5+ 996C              ; *****************************************************************************************************************************************************************************************
   6+ 996C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 996C
   8+ 996C 7C           calcula_tercio ld a,h
   9+ 996D E6 18        	and $18
  10+ 996F CB 2F        	sra a
  11+ 9971 CB 2F        	sra a
  12+ 9973 CB 2F        	sra a
  13+ 9975 C9           	ret
  14+ 9976
# file closed: calcula_tercio.asm
1731  9976              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9976              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9976              ;
   3+ 9976              ;
   4+ 9976              ;	CLS.
   5+ 9976              ;
   6+ 9976              ;	Limpia la pantalla y define sus atributos.
   7+ 9976              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9976              ;
   9+ 9976              ;	COLORES: 0 ..... NEGRO
  10+ 9976              ;    		 1 ..... AZUL
  11+ 9976              ; 			 2 ..... ROJO
  12+ 9976              ;			 3 ..... MAGENTA
  13+ 9976              ; 			 4 ..... VERDE
  14+ 9976              ; 			 5 ..... CIAN
  15+ 9976              ;			 6 ..... AMARILLO
  16+ 9976              ; 			 7 ..... BLANCO
  17+ 9976              ;
  18+ 9976              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9976              ;
  20+ 9976              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9976
  22+ 9976
  23+ 9976 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9979 11 01 40     	LD DE,$4001
  25+ 997C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 997F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9981 ED B0        	LDIR
  28+ 9983 01 FF 02     	LD BC,767
  29+ 9986 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9987 ED B0        	LDIR
  31+ 9989 C9           	ret
  32+ 998A
# file closed: Cls.asm
1732  998A              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 998A              ; ******************************************************************************************************************************************************************************************
   2+ 998A              ;
   3+ 998A              ;   20/05/23
   4+ 998A              ;
   5+ 998A              ;	Recompone_posicion_inicio
   6+ 998A              ;
   7+ 998A              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 998A              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 998A              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 998A              ;	_ a una u otra rutina.
  11+ 998A
  12+ 998A              Recompone_posicion_inicio
  13+ 998A
  14+ 998A 2A D6 88     	ld hl,(Posicion_inicio)
  15+ 998D 7D           	ld a,l
  16+ 998E E6 1F        	and $1f
  17+ 9990 28 16        	jr z,1F
  18+ 9992
  19+ 9992 FE 1F        	cp $1f
  20+ 9994 28 0D        	jr z,3F
  21+ 9996
  22+ 9996 21 03 89     	ld hl,Ctrl_2
  23+ 9999 CB C6        	set 0,(hl)
  24+ 999B 2A C8 88     	ld hl,(Puntero_objeto)
  25+ 999E 22 06 89     	ld (Repone_puntero_objeto),hl
  26+ 99A1 18 08        	jr 2F
  27+ 99A3
  28+ 99A3 CD 68 9B     3 call Mov_left
  29+ 99A6 18 03        	jr 2F
  30+ 99A8
  31+ 99A8 CD 4A 9A     1 call Mov_right
  32+ 99AB 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99AE 22 C8 88     	ld (Puntero_objeto),hl
  34+ 99B1 C9           	ret
  35+ 99B2
  36+ 99B2              ; ******************************************************************************************************************************************************************************************
  37+ 99B2              ;
  38+ 99B2              ;   27/05/23
  39+ 99B2              ;
  40+ 99B2              ;	Mov_down
  41+ 99B2              ;
  42+ 99B2              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99B2              ;
  44+ 99B2              ;
  45+ 99B2              Mov_down
  46+ 99B2
  47+ 99B2 CD 38 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99B5              ;																	; _ repone (Puntero_objeto).
  49+ 99B5 21 F2 88     	ld hl,Ctrl_0
  50+ 99B8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99BA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99BA              ; 																	; _ en el caso de que no lo haya.
  53+ 99BA 3A DC 88     	ld a,(Vel_down)
  54+ 99BD 47           	ld b,a
  55+ 99BE 2A C6 88         ld hl,(Posicion_actual)
  56+ 99C1 CD 6C 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99C4 E6 02        	and 2
  58+ 99C6 28 33        	jr z,1F
  59+ 99C8
  60+ 99C8              ; Nos encontramos en el último tercio de pantalla.
  61+ 99C8              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99C8
  63+ 99C8 7C           	ld a,h
  64+ 99C9 FE 57        	cp $57
  65+ 99CB 20 2E        	jr nz,1F
  66+ 99CD
  67+ 99CD 7D           	ld a,l
  68+ 99CE C6 20        	add $20
  69+ 99D0 30 29        	jr nc,1F
  70+ 99D2
  71+ 99D2              ; ------------------------------
  72+ 99D2              ;
  73+ 99D2              ;	17/12/15
  74+ 99D2
  75+ 99D2              ;	call Reaparece_arriba
  76+ 99D2 CD F5 9C     	call Reinicio
  77+ 99D5
  78+ 99D5              ;	Homos generado todos los movimientos posibles de esta entidad.
  79+ 99D5              ;	Si se trata de una Entidad_guía dejará de serlo.
  80+ 99D5
  81+ 99D5 3A 24 89     	ld a,(Ctrl_3)
  82+ 99D8 CB 5F        	bit 3,a
  83+ 99DA 20 27        	jr nz,3F
  84+ 99DC
  85+ 99DC CB 57        	bit 2,a
  86+ 99DE 20 23        	jr nz,3F
  87+ 99E0
  88+ 99E0 3A 03 89     	ld a,(Ctrl_2)
  89+ 99E3 CB 6F        	bit 5,a
  90+ 99E5 28 1C        	jr z,3F
  91+ 99E7
  92+ 99E7 CB AF        	res 5,a
  93+ 99E9 32 03 89     	ld (Ctrl_2),a
  94+ 99EC 21 24 89     	ld hl,Ctrl_3
  95+ 99EF CB 8E        	res 1,(hl)
  96+ 99F1 CB D6        	set 2,(hl)												; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  97+ 99F3              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  98+ 99F3              ;															; _a la siguiente entidad como "Entidad_guía".
  99+ 99F3              ;	Reinicializa (Puntero_de_almacen_de_mov_masticados).
 100+ 99F3
 101+ 99F3
 102+ 99F3 21 D0 5C     4 ld hl,Almacen_de_movimientos_masticados
 103+ 99F6 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl 			; Reinicializa (Puntero_de_almacen_de_mov_masticados). Sitúa el puntero_
 104+ 99F9
 105+ 99F9 18 08        	jr 3F
 106+ 99FB              ;															; _ al principio del almacén, (a partir de ahora ejecutaremos "movimientos masticados").
 107+ 99FB              ;															; Ya no somos "Entidad_guía".
 108+ 99FB              ; ------------------------------
 109+ 99FB
 110+ 99FB
 111+ 99FB CD 59 96     1 call NextScan
 112+ 99FE 22 C6 88     	ld (Posicion_actual),hl
 113+ 9A01 10 BE            djnz 2B
 114+ 9A03 CD 1B 9D     3 call Genera_coordenadas
 115+ 9A06 C9           	ret
 116+ 9A07
 117+ 9A07              ; ******************************************************************************************************************************************************************************************
 118+ 9A07              ;
 119+ 9A07              ;   27/05/23
 120+ 9A07              ;
 121+ 9A07              ;	Mov_up
 122+ 9A07              ;
 123+ 9A07              ; 	Mueve el Sprite hacia arriba.
 124+ 9A07              ;
 125+ 9A07              ;
 126+ 9A07              Mov_up
 127+ 9A07
 128+ 9A07 CD 38 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 129+ 9A0A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 130+ 9A0A 21 F2 88     	ld hl,Ctrl_0
 131+ 9A0D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 132+ 9A0F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 133+ 9A0F              ; 																		; _ en el caso de que no lo haya.
 134+ 9A0F 3A DB 88     	ld a,(Vel_up)
 135+ 9A12 47           	ld b,a
 136+ 9A13 2A C6 88     	ld hl,(Posicion_actual)
 137+ 9A16 CD 6C 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 138+ 9A19 A7           	and a
 139+ 9A1A 20 10        	jr nz,1F
 140+ 9A1C
 141+ 9A1C              ; Nos encontramos en el 1er tercio de pantalla.
 142+ 9A1C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 143+ 9A1C
 144+ 9A1C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 145+ 9A1D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 146+ 9A1F 20 0B            jr nz,1F
 147+ 9A21 7D               ld a,l
 148+ 9A22 D6 20            sub $20
 149+ 9A24 30 06            jr nc,1F
 150+ 9A26 25               dec h
 151+ 9A27
 152+ 9A27              ; -----------------------------
 153+ 9A27 CD D6 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 154+ 9A2A              ;	call Reinicio
 155+ 9A2A              ; -----------------------------
 156+ 9A2A
 157+ 9A2A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 158+ 9A2C CD 68 96     1 call PreviousScan
 159+ 9A2F 22 C6 88     	ld (Posicion_actual),hl
 160+ 9A32 10 E2            djnz 3B
 161+ 9A34 CD 1B 9D     2 call Genera_coordenadas
 162+ 9A37 C9           	ret
 163+ 9A38
 164+ 9A38              ; -----------------------------
 165+ 9A38              ;
 166+ 9A38              ;	27/5/23
 167+ 9A38              ;
 168+ 9A38              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 169+ 9A38              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 170+ 9A38              ;
 171+ 9A38              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 172+ 9A38              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 173+ 9A38              ;
 174+ 9A38              ;	Modifica: A y (Puntero_objeto).
 175+ 9A38
 176+ 9A38 3A 03 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 177+ 9A3B CB 47        	bit 0,a
 178+ 9A3D C8           	ret z
 179+ 9A3E CB 87        	res 0,a
 180+ 9A40 32 03 89     	ld (Ctrl_2),a
 181+ 9A43 2A 06 89     	ld hl,(Repone_puntero_objeto)
 182+ 9A46 22 C8 88     	ld (Puntero_objeto),hl
 183+ 9A49 C9           	ret
 184+ 9A4A
 185+ 9A4A              ; ******************************************************************************************************************************************************************************************
 186+ 9A4A              ;
 187+ 9A4A              ;	19/10/22
 188+ 9A4A              ;
 189+ 9A4A              ;	Mov_right.
 190+ 9A4A              ;
 191+ 9A4A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 192+ 9A4A              ;
 193+ 9A4A
 194+ 9A4A 21 F2 88     Mov_right ld hl,Ctrl_0
 195+ 9A4D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 196+ 9A4F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 197+ 9A4F              ; 																	; _ en el caso de que no lo haya.
 198+ 9A4F 3A F2 88     	ld a,(Ctrl_0)
 199+ 9A52 CB 77        	bit 6,a
 200+ 9A54 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 201+ 9A56
 202+ 9A56 CD 84 9C     	call Stop_Amadeus_right
 203+ 9A59 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 204+ 9A5A 18 4D        	jr 8F
 205+ 9A5C
 206+ 9A5C 3A CA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 207+ 9A5F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 208+ 9A61 20 46        	jr nz,8F
 209+ 9A63
 210+ 9A63 3A CC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 211+ 9A66 A7           	and a 															; _[3] para continuar con el DESPLZ.
 212+ 9A67 28 40        	jr z,8F
 213+ 9A69
 214+ 9A69              ; ---------- ---------- ----------
 215+ 9A69              ;
 216+ 9A69              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 217+ 9A69
 218+ 9A69 3A DA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 219+ 9A6C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 220+ 9A6E 28 11        	jr z,1F
 221+ 9A70 38 06        	jr c,6F
 222+ 9A72 FE 04        	cp 4
 223+ 9A74 28 14        	jr z,7F
 224+ 9A76 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 225+ 9A78
 226+ 9A78              ; ---------- ---------- ----------
 227+ 9A78              ;
 228+ 9A78              ; Perfiles de velocidad
 229+ 9A78              ;
 230+ 9A78
 231+ 9A78 3A CC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 232+ 9A7B FE FE        	cp $fe
 233+ 9A7D 20 2A        	jr nz,8F
 234+ 9A7F 18 10        	jr 3F
 235+ 9A81 3A CC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 236+ 9A84 FE FD        	cp $fd
 237+ 9A86 20 21        	jr nz,8F
 238+ 9A88 18 07        	jr 3F
 239+ 9A8A 3A CC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 240+ 9A8D FE FB        	cp $fb
 241+ 9A8F 20 18        	jr nz,8F
 242+ 9A91
 243+ 9A91              ; ---------- ---------- ----------
 244+ 9A91
 245+ 9A91              3
 246+ 9A91 CD C4 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 247+ 9A94              ;	call Reinicio
 248+ 9A94
 249+ 9A94              ; ---------- ---------- ----------
 250+ 9A94              ;
 251+ 9A94              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 252+ 9A94
 253+ 9A94 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 254+ 9A96 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 255+ 9A97 CD B0 9A     	call DESPLZ_DER
 256+ 9A9A C1           	pop bc
 257+ 9A9B 10 F9        	djnz 5B
 258+ 9A9D 2A C6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 259+ 9AA0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 260+ 9AA1 22 C6 88     	ld (Posicion_actual),hl
 261+ 9AA4 CD 1B 9D     	call Genera_coordenadas
 262+ 9AA7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 263+ 9AA9
 264+ 9AA9              ; ---------- ---------- ----------
 265+ 9AA9
 266+ 9AA9 2A C6 88     8 ld hl,(Posicion_actual)
 267+ 9AAC CD B0 9A     	call DESPLZ_DER
 268+ 9AAF C9           2 ret
 269+ 9AB0
 270+ 9AB0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 271+ 9AB0              ;
 272+ 9AB0              ;	22/9/22
 273+ 9AB0              ;
 274+ 9AB0
 275+ 9AB0 CD BF 9A     DESPLZ_DER call Desplaza_derecha
 276+ 9AB3 CD 0B 9B         call modifica_parametros_1er_DESPLZ_2
 277+ 9AB6 CD 34 9B         call Ciclo_completo
 278+ 9AB9 21 F2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 279+ 9ABC CB FE        	set 7,(hl)
 280+ 9ABE C9           	ret
 281+ 9ABF
 282+ 9ABF              ; ******************************************************************************************************************************************************************************************
 283+ 9ABF              ;	15/02/23
 284+ 9ABF              ;
 285+ 9ABF
 286+ 9ABF 3A DA 88     Desplaza_derecha ld a,(Vel_right)
 287+ 9AC2 47           	ld b,a
 288+ 9AC3 2A D2 88     	ld hl,(Puntero_DESPLZ_der)
 289+ 9AC6 23           1 inc hl
 290+ 9AC7 23           	inc hl
 291+ 9AC8 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 292+ 9ACA 22 D2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 293+ 9ACD CD ED 8C     	call Extrae_address
 294+ 9AD0 22 C8 88     	ld (Puntero_objeto),hl
 295+ 9AD3
 296+ 9AD3              ; Modifica (Puntero_DESPLZ_izq).
 297+ 9AD3
 298+ 9AD3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 299+ 9AD3              ; Cuántos movimientos hemos hecho ??
 300+ 9AD3              ; DE contiene (Puntero_DESPLZ_der).
 301+ 9AD3
 302+ 9AD3 2A CE 88     7 ld hl,(Indice_Sprite_der)
 303+ 9AD6 EB           	ex de,hl
 304+ 9AD7 A7           	and a
 305+ 9AD8 ED 52        	sbc hl,de
 306+ 9ADA CB 3D        	srl l
 307+ 9ADC 3E 08        6 ld a,8
 308+ 9ADE 95           	sub l
 309+ 9ADF 30 1E        	jr nc,3F
 310+ 9AE1
 311+ 9AE1              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 312+ 9AE1              ; B="0".
 313+ 9AE1
 314+ 9AE1 04           4 inc b
 315+ 9AE2 3C           	inc a
 316+ 9AE3 20 FC        	jr nz,4B
 317+ 9AE5 78           	ld a,b
 318+ 9AE6 08           	ex af,af
 319+ 9AE7 2A CE 88     	ld hl,(Indice_Sprite_der)
 320+ 9AEA 23           5 inc hl
 321+ 9AEB 23           	inc hl
 322+ 9AEC 10 FC        	djnz 5B
 323+ 9AEE 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 324+ 9AF1 CD ED 8C     	call Extrae_address
 325+ 9AF4 22 C8 88     	ld (Puntero_objeto),hl
 326+ 9AF7
 327+ 9AF7              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 328+ 9AF7              ; _(Posicion_actual).
 329+ 9AF7
 330+ 9AF7 21 C6 88     	ld hl,Posicion_actual
 331+ 9AFA 34           	inc (hl)
 332+ 9AFB 08               ex af,af
 333+ 9AFC 6F           	ld l,a
 334+ 9AFD 18 DD        	jr 6B
 335+ 9AFF
 336+ 9AFF              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 337+ 9AFF
 338+ 9AFF 47           3 ld b,a
 339+ 9B00 2A D0 88     	ld hl,(Indice_Sprite_izq)
 340+ 9B03 23           2 inc hl
 341+ 9B04 23           	inc hl
 342+ 9B05 10 FC        	djnz 2B
 343+ 9B07 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 344+ 9B0A C9           8 ret
 345+ 9B0B
 346+ 9B0B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 347+ 9B0B              ;
 348+ 9B0B              ;	24/7/22
 349+ 9B0B              ;
 350+ 9B0B              ;	modifica_parametros_1er_DESPLZ_2
 351+ 9B0B              ;
 352+ 9B0B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 353+ 9B0B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 354+ 9B0B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 355+ 9B0B
 356+ 9B0B 3A CC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 357+ 9B0E A7           	and a
 358+ 9B0F 20 1F        	jr nz,1F
 359+ 9B11 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 360+ 9B13 32 CC 88         ld (CTRL_DESPLZ),a
 361+ 9B16
 362+ 9B16 21 C5 88     	ld hl,Columns
 363+ 9B19 34           	inc (hl)
 364+ 9B1A 3A D8 88     	ld a,(Cuad_objeto)
 365+ 9B1D E6 01        	and 1
 366+ 9B1F 28 0F        	jr z,1F
 367+ 9B21 2A C6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 368+ 9B24 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 369+ 9B25 22 C6 88     	ld (Posicion_actual),hl
 370+ 9B28 CD 1B 9D     	call Genera_coordenadas
 371+ 9B2B CD 90 9C     	call Inc_CTRL_DESPLZ
 372+ 9B2E 18 03        	jr 2F
 373+ 9B30 CD 90 9C     1 call Inc_CTRL_DESPLZ
 374+ 9B33 C9           2 ret
 375+ 9B34
 376+ 9B34              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 377+ 9B34              ;
 378+ 9B34              ;	24/7/22
 379+ 9B34              ;
 380+ 9B34              ;	Ciclo_completo.
 381+ 9B34              ;
 382+ 9B34              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 383+ 9B34              ;
 384+ 9B34              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 385+ 9B34              ; 	Decrementamos (Columns).
 386+ 9B34              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 387+ 9B34              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 388+ 9B34
 389+ 9B34
 390+ 9B34 3A CC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 391+ 9B37 FE FF        	cp $ff
 392+ 9B39 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 393+ 9B3B E6 F0        	and $f0
 394+ 9B3D 20 28        	jr nz,3F
 395+ 9B3F
 396+ 9B3F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 397+ 9B3F
 398+ 9B3F 3A CC 88     	ld a,(CTRL_DESPLZ)
 399+ 9B42 47           	ld b,a
 400+ 9B43 3E F8        	ld a,$f8
 401+ 9B45 80           	add b
 402+ 9B46 32 CC 88     	ld (CTRL_DESPLZ),a
 403+ 9B49 18 1C        	jr 3F
 404+ 9B4B 21 C5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 405+ 9B4E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 406+ 9B4F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 407+ 9B50 32 CC 88     	ld (CTRL_DESPLZ),a
 408+ 9B53 3A D8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 409+ 9B56 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 410+ 9B58 20 0A        	jr nz,2F
 411+ 9B5A 2A C6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 412+ 9B5D 23           	inc hl
 413+ 9B5E 22 C6 88     	ld (Posicion_actual),hl
 414+ 9B61 CD 1B 9D     	call Genera_coordenadas
 415+ 9B64
 416+ 9B64              ; Inicia el puntero de Sprite.
 417+ 9B64
 418+ 9B64 CD 04 8D     2 call Inicia_puntero_objeto_der
 419+ 9B67 C9           3 ret
 420+ 9B68
 421+ 9B68              ; ******************************************************************************************************************************************************************************************
 422+ 9B68              ;
 423+ 9B68              ;	15/02/23
 424+ 9B68              ;
 425+ 9B68              ;	Mov_left.
 426+ 9B68              ;
 427+ 9B68              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 428+ 9B68              ;
 429+ 9B68              Mov_left
 430+ 9B68
 431+ 9B68 21 F2 88     	ld hl,Ctrl_0
 432+ 9B6B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 433+ 9B6D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 434+ 9B6D              ; 																	; _ en el caso de que no lo haya.
 435+ 9B6D 3A F2 88     	ld a,(Ctrl_0)
 436+ 9B70 CB 77        	bit 6,a
 437+ 9B72 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 438+ 9B74
 439+ 9B74 CD 8A 9C     	call Stop_Amadeus_left
 440+ 9B77 C8           	ret z
 441+ 9B78 20 4A        	jr nz,8F
 442+ 9B7A
 443+ 9B7A 3A CA 88     11 ld a,(Coordenada_X)
 444+ 9B7D A7           	and a
 445+ 9B7E 20 44        	jr nz,8F
 446+ 9B80
 447+ 9B80 3A CC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 448+ 9B83 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 449+ 9B84 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 450+ 9B86
 451+ 9B86              ; ---------- ---------- ----------
 452+ 9B86
 453+ 9B86 3A D9 88     	ld a,(Vel_left)
 454+ 9B89 FE 02        	cp 2
 455+ 9B8B 28 0F        	jr z,1F
 456+ 9B8D 38 04        	jr c,6F
 457+ 9B8F FE 04        	cp 4
 458+ 9B91 28 12        	jr z,7F
 459+ 9B93
 460+ 9B93              ; ---------- ---------- ----------
 461+ 9B93
 462+ 9B93 3A CC 88     6 ld a,(CTRL_DESPLZ)
 463+ 9B96 FE F8        	cp $f8
 464+ 9B98 20 2A        	jr nz,8F
 465+ 9B9A 18 10        	jr 4F
 466+ 9B9C 3A CC 88     1 ld a,(CTRL_DESPLZ)
 467+ 9B9F FE F9        	cp $f9
 468+ 9BA1 20 21        	jr nz,8F
 469+ 9BA3 18 07        	jr 4F
 470+ 9BA5 3A CC 88     7 ld a,(CTRL_DESPLZ)
 471+ 9BA8 FE FB        	cp $fb
 472+ 9BAA 20 18        	jr nz,8F
 473+ 9BAC
 474+ 9BAC              ; ---------- ---------- ----------
 475+ 9BAC
 476+ 9BAC              4
 477+ 9BAC CD B2 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 478+ 9BAF              ;	call Reinicio
 479+ 9BAF
 480+ 9BAF              ; ---------- ---------- ----------
 481+ 9BAF
 482+ 9BAF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 483+ 9BB1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 484+ 9BB2
 485+ 9BB2              ;	ld hl,(Indice_Sprite_izq)
 486+ 9BB2              ;	ld (Puntero_DESPLZ_izq),hl
 487+ 9BB2
 488+ 9BB2 CD CB 9B     	call DESPLZ_IZQ
 489+ 9BB5 C1           	pop bc
 490+ 9BB6 10 F9        	djnz 5B
 491+ 9BB8 2A C6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 492+ 9BBB 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 493+ 9BBC 22 C6 88     	ld (Posicion_actual),hl
 494+ 9BBF CD 1B 9D     	call Genera_coordenadas
 495+ 9BC2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 496+ 9BC4
 497+ 9BC4              ; ---------- ---------- ----------
 498+ 9BC4
 499+ 9BC4              ; Movemos, no hay recolocación.
 500+ 9BC4
 501+ 9BC4 2A C6 88     8 ld hl,(Posicion_actual)
 502+ 9BC7 CD CB 9B     	call DESPLZ_IZQ
 503+ 9BCA C9           2 ret
 504+ 9BCB
 505+ 9BCB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 506+ 9BCB              ;
 507+ 9BCB              ;	22/9/22
 508+ 9BCB
 509+ 9BCB              DESPLZ_IZQ
 510+ 9BCB
 511+ 9BCB CD DA 9B     	call Desplaza_izquierda
 512+ 9BCE CD 26 9C         call modifica_parametros_1er_DESPLZ
 513+ 9BD1 CD 4E 9C     	call Ciclo_completo_2
 514+ 9BD4 21 F2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 515+ 9BD7 CB BE        	res 7,(hl)
 516+ 9BD9 C9           	ret
 517+ 9BDA
 518+ 9BDA              Desplaza_izquierda
 519+ 9BDA
 520+ 9BDA 3A D9 88     	ld a,(Vel_left)
 521+ 9BDD 47           	ld b,a
 522+ 9BDE 2A D4 88     	ld hl,(Puntero_DESPLZ_izq)
 523+ 9BE1 23           1 inc hl
 524+ 9BE2 23           	inc hl
 525+ 9BE3 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 526+ 9BE5 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 527+ 9BE8 CD ED 8C     	call Extrae_address
 528+ 9BEB 22 C8 88     	ld (Puntero_objeto),hl
 529+ 9BEE
 530+ 9BEE              ; Modifica (Puntero_DESPLZ_der).
 531+ 9BEE
 532+ 9BEE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 533+ 9BEE              ; Cuántos movimientos hemos hecho ??
 534+ 9BEE              ; DE contiene (Puntero_DESPLZ_izq).
 535+ 9BEE
 536+ 9BEE 2A D0 88     7 ld hl,(Indice_Sprite_izq)
 537+ 9BF1 EB           	ex de,hl
 538+ 9BF2 A7           	and a
 539+ 9BF3 ED 52        	sbc hl,de
 540+ 9BF5 CB 3D        	srl l
 541+ 9BF7 3E 08        6 ld a,8
 542+ 9BF9 95           	sub l
 543+ 9BFA 30 1E        	jr nc,3F
 544+ 9BFC
 545+ 9BFC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 546+ 9BFC              ; B="0".
 547+ 9BFC
 548+ 9BFC 04           4 inc b
 549+ 9BFD 3C           	inc a
 550+ 9BFE 20 FC        	jr nz,4B
 551+ 9C00 78           	ld a,b
 552+ 9C01 08           	ex af,af
 553+ 9C02 2A D0 88     	ld hl,(Indice_Sprite_izq)
 554+ 9C05 23           5 inc hl
 555+ 9C06 23           	inc hl
 556+ 9C07 10 FC        	djnz 5B
 557+ 9C09 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 558+ 9C0C CD ED 8C     	call Extrae_address
 559+ 9C0F 22 C8 88     	ld (Puntero_objeto),hl
 560+ 9C12
 561+ 9C12              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 562+ 9C12              ; _(Posicion_actual).
 563+ 9C12
 564+ 9C12 21 C6 88     	ld hl,Posicion_actual
 565+ 9C15 35           	dec (hl)
 566+ 9C16 08           	ex af,af
 567+ 9C17 6F           	ld l,a
 568+ 9C18 18 DD        	jr 6B
 569+ 9C1A
 570+ 9C1A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 571+ 9C1A
 572+ 9C1A 47           3 ld b,a
 573+ 9C1B 2A CE 88     	ld hl,(Indice_Sprite_der)
 574+ 9C1E 23           2 inc hl
 575+ 9C1F 23           	inc hl
 576+ 9C20 10 FC        	djnz 2B
 577+ 9C22 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 578+ 9C25 C9           8 ret
 579+ 9C26
 580+ 9C26              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 581+ 9C26              ;
 582+ 9C26              ;	modifica_parametros_1er_DESPLZ
 583+ 9C26              ;
 584+ 9C26              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 585+ 9C26              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 586+ 9C26              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 587+ 9C26
 588+ 9C26 3A CC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 589+ 9C29 A7           	and a
 590+ 9C2A 20 1E        	jr nz,1F
 591+ 9C2C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 592+ 9C2D 32 CC 88         ld (CTRL_DESPLZ),a
 593+ 9C30 21 C5 88     	ld hl,Columns
 594+ 9C33 34           	inc (hl)
 595+ 9C34 3A D8 88     	ld a,(Cuad_objeto)
 596+ 9C37 E6 01        	and 1
 597+ 9C39 20 0F        	jr nz,1F
 598+ 9C3B 2A C6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 599+ 9C3E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 600+ 9C3F 22 C6 88     	ld (Posicion_actual),hl
 601+ 9C42 CD 1B 9D     	call Genera_coordenadas
 602+ 9C45 CD A1 9C     	call Dec_CTRL_DESPLZ
 603+ 9C48 18 03        	jr 2F
 604+ 9C4A CD A1 9C     1 call Dec_CTRL_DESPLZ
 605+ 9C4D C9           2 ret
 606+ 9C4E
 607+ 9C4E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 608+ 9C4E
 609+ 9C4E 3A CC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 610+ 9C51 FE F7        	cp $f7
 611+ 9C53 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 612+ 9C55 30 2C        	jr nc,3F
 613+ 9C57
 614+ 9C57              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 615+ 9C57
 616+ 9C57 06 00        	ld b,0
 617+ 9C59 04           4 inc b
 618+ 9C5A 3C           	inc a
 619+ 9C5B FE F7        	cp $f7
 620+ 9C5D 20 FA        	jr nz,4B
 621+ 9C5F 3E FF        	ld a,$ff
 622+ 9C61 90           	sub b
 623+ 9C62 32 CC 88     	ld (CTRL_DESPLZ),a
 624+ 9C65 18 1C        	jr 3F
 625+ 9C67
 626+ 9C67              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 627+ 9C67
 628+ 9C67 21 C5 88     1 ld hl,Columns
 629+ 9C6A 35           	dec (hl)
 630+ 9C6B AF           	xor a
 631+ 9C6C 32 CC 88     	ld (CTRL_DESPLZ),a
 632+ 9C6F 3A D8 88     	ld a,(Cuad_objeto)
 633+ 9C72 E6 01        	and 1
 634+ 9C74 28 0A        	jr z,2F
 635+ 9C76 2A C6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 636+ 9C79 2B           	dec hl
 637+ 9C7A 22 C6 88     	ld (Posicion_actual),hl
 638+ 9C7D CD 1B 9D     	call Genera_coordenadas
 639+ 9C80
 640+ 9C80              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 641+ 9C80
 642+ 9C80 CD 17 8D     2 call Inicia_puntero_objeto_izq
 643+ 9C83 C9           3 ret
 644+ 9C84
 645+ 9C84              ; ---------- ---------- ---------- ---------- ---------- ----------
 646+ 9C84              ;
 647+ 9C84              ;	19/10/22
 648+ 9C84              ;
 649+ 9C84              ;	(cp 29) para un Amadeus de 3 Columns.
 650+ 9C84              ;	(cp 30)   ""  ""    ""     2 Columns.
 651+ 9C84
 652+ 9C84 3A CA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 653+ 9C87 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 654+ 9C89 C9           	ret
 655+ 9C8A
 656+ 9C8A              ; ---------- ---------- ---------- ---------- ---------- ----------
 657+ 9C8A              ;
 658+ 9C8A              ;	19/10/22
 659+ 9C8A              ;
 660+ 9C8A              ;	(cp 2) para un Amadeus de 3 Columns.
 661+ 9C8A              ;	(cp 1)   ""  ""    ""     2 Columns.
 662+ 9C8A
 663+ 9C8A 3A CA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 664+ 9C8D FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 665+ 9C8F C9           	ret
 666+ 9C90
 667+ 9C90              ; ---------- ---------- ---------- ---------- ---------- ----------
 668+ 9C90              ;
 669+ 9C90              ;	24/7/22
 670+ 9C90              ;
 671+ 9C90              ;	Inc_CTRL_DESPLZ
 672+ 9C90              ;
 673+ 9C90              ;
 674+ 9C90              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 675+ 9C90
 676+ 9C90 21 CC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 677+ 9C93 3A DA 88     	ld a,(Vel_right)
 678+ 9C96 A7           	and a
 679+ 9C97 28 06        	jr z,1F
 680+ 9C99 47           	ld b,a
 681+ 9C9A 34           3 inc (hl)
 682+ 9C9B 10 FD        	djnz 3B
 683+ 9C9D 18 01        	jr 2F
 684+ 9C9F 34           1 inc (hl)
 685+ 9CA0 C9           2 ret
 686+ 9CA1
 687+ 9CA1              ; ---------- ---------- ---------- ---------- ---------- ----------
 688+ 9CA1              ;
 689+ 9CA1              ;	5/2/23
 690+ 9CA1              ;
 691+ 9CA1              ;	Dec_CTRL_DESPLZ
 692+ 9CA1              ;
 693+ 9CA1              ;
 694+ 9CA1              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 695+ 9CA1
 696+ 9CA1 21 CC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 697+ 9CA4 3A D9 88     	ld a,(Vel_left)
 698+ 9CA7 A7           	and a
 699+ 9CA8 28 06        	jr z,1F
 700+ 9CAA 47           	ld b,a
 701+ 9CAB 35           3 dec (hl)
 702+ 9CAC 10 FD        	djnz 3B
 703+ 9CAE 18 01        	jr 2F
 704+ 9CB0 35           1 dec (hl)
 705+ 9CB1 C9           2 ret
 706+ 9CB2
 707+ 9CB2              ; ---------- ---------- ---------- ---------- ---------- ----------
 708+ 9CB2
 709+ 9CB2 2A C6 88     Reaparece_derecha ld hl,(Posicion_actual)
 710+ 9CB5 01 1F 00     	ld bc,31
 711+ 9CB8 A7           	and a
 712+ 9CB9 ED 4A        	adc hl,bc
 713+ 9CBB 22 C6 88     	ld (Posicion_actual),hl
 714+ 9CBE 21 F2 88     	ld hl,Ctrl_0														; $xxx1
 715+ 9CC1 CB C6        	set 0,(hl)
 716+ 9CC3 C9           	ret
 717+ 9CC4
 718+ 9CC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 719+ 9CC4
 720+ 9CC4 2A C6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 721+ 9CC7 01 1F 00     	ld bc,31
 722+ 9CCA A7           	and a
 723+ 9CCB ED 42        	sbc hl,bc
 724+ 9CCD 22 C6 88     	ld (Posicion_actual),hl 											; $xx1x
 725+ 9CD0 21 F2 88     	ld hl,Ctrl_0
 726+ 9CD3 CB CE        	set 1,(hl)
 727+ 9CD5 C9           	ret
 728+ 9CD6
 729+ 9CD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 730+ 9CD6
 731+ 9CD6 24           Reaparece_abajo inc h
 732+ 9CD7 01 E0 17     	ld bc,$17e0
 733+ 9CDA A7           	and a
 734+ 9CDB ED 4A        	adc hl,bc
 735+ 9CDD 22 C6 88     	ld (Posicion_actual),hl
 736+ 9CE0 21 F2 88     	ld hl,Ctrl_0
 737+ 9CE3 CB D6        	set 2,(hl)
 738+ 9CE5 C9           	ret
 739+ 9CE6
 740+ 9CE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 741+ 9CE6
 742+ 9CE6 01 E0 17     Reaparece_arriba ld bc,$17e0
 743+ 9CE9 A7           	and a
 744+ 9CEA ED 42        	sbc hl,bc
 745+ 9CEC 22 C6 88     	ld (Posicion_actual),hl
 746+ 9CEF 21 F2 88     	ld hl,Ctrl_0
 747+ 9CF2 CB DE        	set 3,(hl)
 748+ 9CF4 C9           	ret
 749+ 9CF5
 750+ 9CF5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 751+ 9CF5              ;
 752+ 9CF5              ;	15/07/23
 753+ 9CF5
 754+ 9CF5              Reinicio
 755+ 9CF5
 756+ 9CF5              ; Vamos a reiniciar los punteros y variables de movimiento.
 757+ 9CF5
 758+ 9CF5 AF           	xor a
 759+ 9CF6 21 F7 88     	ld hl,Puntero_indice_mov_bucle
 760+ 9CF9 CD 17 9D     	call Limpia_contenido_hl
 761+ 9CFC
 762+ 9CFC 21 C6 88     	ld hl,Posicion_actual
 763+ 9CFF CD 17 9D     	call Limpia_contenido_hl
 764+ 9D02
 765+ 9D02 CD 47 A0     	call Inicializa_Puntero_indice_mov
 766+ 9D05 CD D1 9F     	call Inicia_Puntero_mov
 767+ 9D08
 768+ 9D08 21 F9 88     	ld hl,Incrementa_puntero
 769+ 9D0B 06 05        	ld b,5
 770+ 9D0D 77           1 ld (hl),a
 771+ 9D0E 23           	inc hl
 772+ 9D0F 10 FC        	djnz 1B
 773+ 9D11
 774+ 9D11 21 03 89     	ld hl,Ctrl_2
 775+ 9D14 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 776+ 9D16
 777+ 9D16 C9           	ret
 778+ 9D17
 779+ 9D17 77           Limpia_contenido_hl	ld (hl),a
 780+ 9D18 23           	inc hl
 781+ 9D19 77           	ld (hl),a
 782+ 9D1A C9           	ret
 783+ 9D1B
 784+ 9D1B
# file closed: Direcciones.asm
1733  9D1B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D1B              ; ------------------------------------------------------------------------
   2+ 9D1B              ;
   3+ 9D1B              ;	02/04/23
   4+ 9D1B              ;
   5+ 9D1B              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D1B              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D1B              ;
   8+ 9D1B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D1B              ;
  10+ 9D1B              ;	Modifica: A,BC y DE.
  11+ 9D1B
  12+ 9D1B C5           Genera_coordenadas push bc
  13+ 9D1C E5           	push hl
  14+ 9D1D D5           	push de
  15+ 9D1E
  16+ 9D1E 2A C6 88     	ld hl,(Posicion_actual)
  17+ 9D21
  18+ 9D21 7D           	ld a,l
  19+ 9D22 E6 1F        	and $1f
  20+ 9D24 32 CA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D27
  22+ 9D27 CD 6C 99     	call calcula_tercio
  23+ 9D2A 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D2B
  25+ 9D2B 1E 00        	ld e,0
  26+ 9D2D 7D           	ld a,l
  27+ 9D2E E6 E0        	and $e0
  28+ 9D30 28 01        	jr z,1F
  29+ 9D32 04           	inc b
  30+ 9D33
  31+ 9D33 04           1 inc b
  32+ 9D34 05           	dec b
  33+ 9D35 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D37              ;														; _ , salimos.
  35+ 9D37 1C           3 inc e
  36+ 9D38 D6 20        	sub 32
  37+ 9D3A 20 FB        	jr nz,3B
  38+ 9D3C 10 F5        	djnz 1B
  39+ 9D3E
  40+ 9D3E 7B           2 ld a,e
  41+ 9D3F 32 CB 88     	ld (Coordenada_y),a
  42+ 9D42
  43+ 9D42 D1           	pop de
  44+ 9D43 E1           	pop hl
  45+ 9D44 C1           	pop bc
  46+ 9D45
  47+ 9D45 C9           	ret
  48+ 9D46
  49+ 9D46              ; ------------------------------------------------------------------------
  50+ 9D46              ;	28/05/23
  51+ 9D46              ;
  52+ 9D46              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D46              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D46              ;
  55+ 9D46              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D46              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D46              ;
  58+ 9D46              ;		DE="$120d"
  59+ 9D46              ;
  60+ 9D46              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D46              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D46              ;
  63+ 9D46              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D46
  65+ 9D46              ;	Modifica: A,BC y DE.
  66+ 9D46
  67+ 9D46
  68+ 9D46              Genera_coordenadas_disparo
  69+ 9D46
  70+ 9D46              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D46
  72+ 9D46 7D           	ld a,l
  73+ 9D47 E6 1F        	and $1f
  74+ 9D49 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D4A CD 6C 99     	call calcula_tercio
  76+ 9D4D 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D4E 1E 00        	ld e,0
  78+ 9D50 7D           	ld a,l
  79+ 9D51 E6 E0        	and $e0
  80+ 9D53 28 01        	jr z,1F
  81+ 9D55 04           	inc b
  82+ 9D56 1C           1 inc e
  83+ 9D57 D6 20        	sub 32
  84+ 9D59 20 FB        	jr nz,1B
  85+ 9D5B 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D5D C9           	ret
  87+ 9D5E
# file closed: Genera_coordenadas.asm
1734  9D5E              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D5E              ; Relojes y temporizaciones.
   2+ 9D5E
   3+ 9D5E              ; ------------------------------------------------------
   4+ 9D5E              ;
   5+ 9D5E              ;	16/7/23
   6+ 9D5E              ;
   7+ 9D5E              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D5E              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D5E              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D5E              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D5E              ;
  12+ 9D5E              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D5E              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D5E
  15+ 9D5E              ; Disparo_entidad db 1
  16+ 9D5E              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D5E              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D5E
  19+ 9D5E              Habilita_disparos
  20+ 9D5E
  21+ 9D5E 7E           	ld a,(hl)
  22+ 9D5F A7           	and a
  23+ 9D60 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D61
  25+ 9D61 EB           	ex de,hl
  26+ 9D62
  27+ 9D62 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D63 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D64
  30+ 9D64              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D64
  32+ 9D64 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D65 7E           	ld a,(hl)
  34+ 9D66 23           	inc hl
  35+ 9D67 77           	ld (hl),a
  36+ 9D68
  37+ 9D68 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D69 3E 01        	ld a,1
  39+ 9D6B 77           	ld (hl),a
  40+ 9D6C C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1735  9D6D              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D6D
   2+ 9D6D
   3+ 9D6D              ;   07/07/23
   4+ 9D6D              ;
   5+ 9D6D              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D6D              ;
   7+ 9D6D              ;   Codificación:
   8+ 9D6D              ;
   9+ 9D6D              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D6D              ;
  11+ 9D6D              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D6D              ;
  13+ 9D6D              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D6D              ;
  15+ 9D6D              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D6D              ;
  17+ 9D6D              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D6D              ;                               ..... %01000010 Vel_up 4
  19+ 9D6D              ;                                               Vel_down 2
  20+ 9D6D              ;                               ..... $42
  21+ 9D6D              ;
  22+ 9D6D              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D6D              ;
  24+ 9D6D              ;                               ..... %01000010 Vel_left 4
  25+ 9D6D              ;                                               Vel_right 2
  26+ 9D6D              ;                               ..... $42
  27+ 9D6D              ;
  28+ 9D6D              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D6D              ;
  30+ 9D6D              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D6D              ;
  32+ 9D6D              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D6D              ;
  34+ 9D6D              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D6D              ;                                     $53
  36+ 9D6D              ;
  37+ 9D6D              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D6D              ;
  39+ 9D6D              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D6D              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D6D              ;
  42+ 9D6D              ;                       Arriba ..... $81
  43+ 9D6D              ;                       Arriba - izquierda ..... $a1
  44+ 9D6D              ;                       Arriba - derecha ..... $91
  45+ 9D6D              ;
  46+ 9D6D              ;                       Abajo ..... $41
  47+ 9D6D              ;                       Abajo - izquierda ..... $61
  48+ 9D6D              ;                       Abajo - derecha ..... $51
  49+ 9D6D              ;
  50+ 9D6D              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D6D              ;
  52+ 9D6D              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D6D              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D6D              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D6D              ;
  56+ 9D6D              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D6D              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D6D              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D6D              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D6D              ;
  61+ 9D6D              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D6D              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D6D              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D6D              ;
  65+ 9D6D              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D6D              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D6D              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D6D              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D6D
  70+ 9D6D              ; ----- ----- ----- ----- -----
  71+ 9D6D
  72+ 9D6D 99 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D6F A1 9D            defw F_1
  74+ 9D71 AB 9D            defw F_2
  75+ 9D73 B5 9D            defw Codo_abajo_derecha
  76+ 9D75 E9 9D            defw Derecha_y_subiendo
  77+ 9D77 F3 9D            defw Derecha_y_subiendo_1
  78+ 9D79 FD 9D            defw F_3
  79+ 9D7B 07 9E            defw F_4
  80+ 9D7D 11 9E            defw Derecha_y_bajando
  81+ 9D7F 1B 9E            defw Derecha_y_bajando_1
  82+ 9D81 25 9E            defw Derecha_y_bajando_2
  83+ 9D83 2F 9E            defw Codo_derecha_abajo
  84+ 9D85 5F 9E            defw Codo_abajo_izq.
  85+ 9D87 93 9E            defw Izquierda_y_subiendo
  86+ 9D89 9D 9E            defw Izquierda_y_subiendo_1
  87+ 9D8B A7 9E            defw F_5
  88+ 9D8D B1 9E            defw F_6
  89+ 9D8F BB 9E            defw Izquierda_y_bajando
  90+ 9D91 C5 9E            defw Izquierda_y_bajando_1
  91+ 9D93 CF 9E            defw Izquierda_y_bajando_2
  92+ 9D95 D9 9E            defw Codo_izquierda_abajo
  93+ 9D97 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D99
  95+ 9D99 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D9D 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DA1
  98+ 9DA1 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DA5 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DA9 08 00
 100+ 9DAB 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DAF 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DB3 0F FE
 102+ 9DB5
 103+ 9DB5 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DB9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DBD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DC1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DC5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DC9 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DCD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DD1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DD5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DD9 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DDD 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DE1 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DE5 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DE9
 117+ 9DE9 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DED 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DF1 06 00
 119+ 9DF3
 120+ 9DF3 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DF7 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DFB 02 00
 122+ 9DFD
 123+ 9DFD 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E01 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E05 04 00
 125+ 9E07 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E0B 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E0F 08 00
 127+ 9E11
 128+ 9E11 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E15 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E19 02 00
 130+ 9E1B
 131+ 9E1B 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E1F 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E23 06 00
 133+ 9E25
 134+ 9E25 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E29 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E2D 06 00
 136+ 9E2F
 137+ 9E2F              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E2F
 139+ 9E2F 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E33 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E37 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E3B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E3F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E43 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E47 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E4B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E53 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E57 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E5B 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E5F
 152+ 9E5F 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E63 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E67 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E6B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E6F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E73 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E77 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E7B 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E7F 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E83 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E87 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E8B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E8F 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E93
 166+ 9E93 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E97 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E9B 06 00
 168+ 9E9D
 169+ 9E9D 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EA1 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EA5 02 00
 171+ 9EA7
 172+ 9EA7 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EAB 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EAF 04 00
 174+ 9EB1 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EB5 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EB9 08 00
 176+ 9EBB
 177+ 9EBB 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EBF 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EC3 02 00
 179+ 9EC5
 180+ 9EC5 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EC9 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9ECD 06 00
 182+ 9ECF
 183+ 9ECF 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9ED3 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9ED7 06 00
 185+ 9ED9
 186+ 9ED9 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EDD 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EE1 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EE5 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EE9 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EED 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EF1 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EF5 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EF9 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EFD 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F01 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F05 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F09
 199+ 9F09              ; ----- ----- ----- ----- -----
 200+ 9F09              ;
 201+ 9F09              ;   27/06/23
 202+ 9F09
 203+ 9F09              Movimiento
 204+ 9F09
 205+ 9F09              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F09
 207+ 9F09              ;    ld hl,(Posicion_actual)
 208+ 9F09
 209+ 9F09 3A 03 89         ld a,(Ctrl_2)
 210+ 9F0C CB 57            bit 2,a
 211+ 9F0E 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F10
 213+ 9F10 2A F5 88         ld hl,(Puntero_mov)
 214+ 9F13 7E               ld a,(hl)
 215+ 9F14
 216+ 9F14              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F14
 218+ 9F14              Inicia_desplazamiento.
 219+ 9F14
 220+ 9F14              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F14
 222+ 9F14 CD 08 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F17
 224+ 9F17              ; Iniciamos (Repetimos_mov).
 225+ 9F17
 226+ 9F17 7E               ld a,(hl)
 227+ 9F18 E6 0F            and $0f
 228+ 9F1A 32 FB 88         ld (Repetimos_desplazamiento),a
 229+ 9F1D 32 FC 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9F20
 231+ 9F20              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F20
 233+ 9F20 23               inc hl
 234+ 9F21 7E               ld a,(hl)
 235+ 9F22 32 FE 88         ld (Cola_de_desplazamiento),a
 236+ 9F25 2B               dec hl
 237+ 9F26
 238+ 9F26 21 03 89         ld hl,Ctrl_2
 239+ 9F29 CB D6            set 2,(hl)
 240+ 9F2B
 241+ 9F2B              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F2B              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F2B
 244+ 9F2B              Desplazamiento_iniciado
 245+ 9F2B
 246+ 9F2B CD DC 9F         call Aplica_desplazamiento
 247+ 9F2E
 248+ 9F2E 3A 03 89         ld a,(Ctrl_2)
 249+ 9F31 CB 67            bit 4,a
 250+ 9F33 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F34
 252+ 9F34 21 FB 88     3 ld hl,Repetimos_desplazamiento
 253+ 9F37 35               dec (hl)
 254+ 9F38 C0               ret nz
 255+ 9F39
 256+ 9F39              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F39              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F39              ; Analiza (Cola_de_desplazamiento).
 259+ 9F39
 260+ 9F39 3A FE 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F3C A7               and a
 262+ 9F3D CC 31 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F40 28 30            jr z,Reinicia_el_movimiento
 264+ 9F42
 265+ 9F42 FE FF            cp $ff
 266+ 9F44 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F46
 268+ 9F46 FE FE            cp $fe
 269+ 9F48 CC B5 9F         call z,Fijamos_bucle
 270+ 9F4B 28 25            jr z,Reinicia_el_movimiento
 271+ 9F4D
 272+ 9F4D FE FD            cp $fd
 273+ 9F4F 20 11            jr nz,1F
 274+ 9F51
 275+ 9F51              ; ---
 276+ 9F51              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F51
 278+ 9F51 3A 03 89         ld a,(Ctrl_2)
 279+ 9F54 CB 5F            bit 3,a
 280+ 9F56 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F58
 282+ 9F58              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F58
 284+ 9F58 21 03 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F5B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F5D
 287+ 9F5D CD C6 9F         call Inicia_Repetimos_movimiento
 288+ 9F60 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F62              ; ---
 290+ 9F62
 291+ 9F62 FE 01        1 cp 1
 292+ 9F64 CA 9F 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F67
 294+ 9F67 3D               dec a
 295+ 9F68 32 FE 88         ld (Cola_de_desplazamiento),a
 296+ 9F6B
 297+ 9F6B 3A FC 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F6E 32 FB 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F71              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F71 C9               ret
 301+ 9F72
 302+ 9F72              Reinicia_el_movimiento
 303+ 9F72
 304+ 9F72 3A 03 89         ld a,(Ctrl_2)
 305+ 9F75 CB 5F            bit 3,a
 306+ 9F77 28 1B            jr z,2F
 307+ 9F79
 308+ 9F79              ; (Cola_de_desplazamiento)="254".
 309+ 9F79
 310+ 9F79 21 FD 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F7C 35               dec (hl)
 312+ 9F7D 20 15            jr nz,2F
 313+ 9F7F
 314+ 9F7F              ; Fin de las repeticiones del último movimiento.
 315+ 9F7F
 316+ 9F7F 21 03 89         ld hl,Ctrl_2
 317+ 9F82 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F84
 319+ 9F84 2A F5 88         ld hl,(Puntero_mov)
 320+ 9F87 23               inc hl
 321+ 9F88 23               inc hl
 322+ 9F89 23               inc hl
 323+ 9F8A 22 F5 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F8D              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F8D 7E               ld a,(hl)
 326+ 9F8E 32 FE 88         ld (Cola_de_desplazamiento),a
 327+ 9F91
 328+ 9F91 C3 39 9F         jp Cola
 329+ 9F94
 330+ 9F94 CD D1 9F     2 call Inicia_Puntero_mov
 331+ 9F97
 332+ 9F97 21 03 89         ld hl,Ctrl_2
 333+ 9F9A CB 96            res 2,(hl)
 334+ 9F9C
 335+ 9F9C C3 09 9F         jp Movimiento
 336+ 9F9F
 337+ 9F9F              Siguiente_desplazamiento
 338+ 9F9F
 339+ 9F9F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F9F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F9F
 342+ 9F9F 21 03 89         ld hl,Ctrl_2
 343+ 9FA2 CB 96            res 2,(hl)
 344+ 9FA4
 345+ 9FA4 2A F5 88         ld hl,(Puntero_mov)
 346+ 9FA7 23               inc hl
 347+ 9FA8 23               inc hl
 348+ 9FA9 22 F5 88         ld (Puntero_mov),hl
 349+ 9FAC
 350+ 9FAC 7E               ld a,(hl)
 351+ 9FAD A7               and a
 352+ 9FAE CC 31 A0         call z,Incrementa_Puntero_indice_mov
 353+ 9FB1 CA 72 9F         jp z,Reinicia_el_movimiento
 354+ 9FB4
 355+ 9FB4 C9               ret
 356+ 9FB5
 357+ 9FB5              ; Subrutinas -----------------------------------------
 358+ 9FB5              ; ---------- --------- --------- ---------- ----------
 359+ 9FB5              ;
 360+ 9FB5              ;   24/07/23
 361+ 9FB5              ;
 362+ 9FB5              ;   Fijamos_bucle
 363+ 9FB5              ;
 364+ 9FB5              ;
 365+ 9FB5
 366+ 9FB5              Fijamos_bucle
 367+ 9FB5
 368+ 9FB5 3A F9 88         ld a,(Incrementa_puntero)
 369+ 9FB8 3C               inc a
 370+ 9FB9 32 FA 88         ld (Incrementa_puntero_backup),a
 371+ 9FBC
 372+ 9FBC CD 31 A0         call Incrementa_Puntero_indice_mov
 373+ 9FBF 2A F3 88         ld hl,(Puntero_indice_mov)
 374+ 9FC2 22 F7 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9FC5 C9               ret
 376+ 9FC6
 377+ 9FC6              ; ---------- --------- --------- ---------- ----------
 378+ 9FC6              ;
 379+ 9FC6              ;   07/7/23
 380+ 9FC6              ;
 381+ 9FC6              ;   Inicia_Repetimos_movimiento
 382+ 9FC6              ;
 383+ 9FC6              ;
 384+ 9FC6
 385+ 9FC6              Inicia_Repetimos_movimiento
 386+ 9FC6
 387+ 9FC6              ; Iniciamos (Repetimos_movimiento).
 388+ 9FC6
 389+ 9FC6 DD 2A F5 88      ld ix,(Puntero_mov)
 390+ 9FCA DD 7E 02         ld a,(ix+2)
 391+ 9FCD 32 FD 88         ld (Repetimos_movimiento),a
 392+ 9FD0
 393+ 9FD0 C9               ret
 394+ 9FD1
 395+ 9FD1              ; ---------- --------- --------- ---------- ----------
 396+ 9FD1              ;
 397+ 9FD1              ;   26/6/23
 398+ 9FD1              ;
 399+ 9FD1              ;   Inicia_Puntero_mov
 400+ 9FD1              ;
 401+ 9FD1              ;
 402+ 9FD1
 403+ 9FD1 2A F3 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9FD4 5E               ld e,(hl)
 405+ 9FD5 23               inc hl
 406+ 9FD6 56               ld d,(hl)
 407+ 9FD7 EB               ex de,hl
 408+ 9FD8 22 F5 88         ld (Puntero_mov),hl
 409+ 9FDB C9               ret
 410+ 9FDC
 411+ 9FDC              ; ---------- --------- --------- ---------- ----------
 412+ 9FDC              ;
 413+ 9FDC              ;   27/06/23
 414+ 9FDC              ;
 415+ 9FDC              ;   Aplica_movimiento.
 416+ 9FDC
 417+ 9FDC              Aplica_desplazamiento
 418+ 9FDC
 419+ 9FDC              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9FDC
 421+ 9FDC 2A F5 88         ld hl, (Puntero_mov)
 422+ 9FDF
 423+ 9FDF 7E               ld a,(hl)
 424+ 9FE0 E6 F0            and $f0
 425+ 9FE2 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9FE3
 427+ 9FE3 CB 7E            bit 7,(hl)
 428+ 9FE5 28 03            jr z,1F
 429+ 9FE7 CD 07 9A         call Mov_up
 430+ 9FEA 2A F5 88     1 ld hl, (Puntero_mov)
 431+ 9FED CB 76            bit 6,(hl)
 432+ 9FEF 28 03            jr z,2F
 433+ 9FF1 CD B2 99         call Mov_down
 434+ 9FF4 2A F5 88     2 ld hl, (Puntero_mov)
 435+ 9FF7 CB 6E            bit 5,(hl)
 436+ 9FF9 28 03            jr z,3F
 437+ 9FFB CD 68 9B         call Mov_left
 438+ 9FFE 2A F5 88     3 ld hl, (Puntero_mov)
 439+ A001 CB 66            bit 4,(hl)
 440+ A003 C8               ret z
 441+ A004 CD 4A 9A         call Mov_right
 442+ A007 C9               ret
 443+ A008
 444+ A008              ; ---------- --------- --------- ---------- ----------
 445+ A008              ;
 446+ A008              ;   26/06/23
 447+ A008              ;
 448+ A008              ;   Ajusta_velocidad_desplazamiento.
 449+ A008
 450+ A008              Ajusta_velocidad_desplazamiento
 451+ A008
 452+ A008              ; 1er byte de la cadena de movimiento.
 453+ A008              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A008
 455+ A008 CD 26 A0         call Extrae_nibble_alto
 456+ A00B
 457+ A00B 32 DB 88         ld (Vel_up),a
 458+ A00E 79               ld a,c
 459+ A00F E6 0F            and $0f
 460+ A011 32 DC 88         ld (Vel_down),a
 461+ A014
 462+ A014              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A014              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A014
 465+ A014 23               inc hl
 466+ A015 CD 26 A0         call Extrae_nibble_alto
 467+ A018
 468+ A018 32 D9 88         ld (Vel_left),a
 469+ A01B 79               ld a,c
 470+ A01C E6 0F            and $0f
 471+ A01E 32 DA 88         ld (Vel_right),a
 472+ A021
 473+ A021              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A021
 475+ A021 23               inc hl
 476+ A022 22 F5 88         ld (Puntero_mov),hl
 477+ A025 C9               ret
 478+ A026
 479+ A026 06 04        Extrae_nibble_alto ld b,4
 480+ A028 7E               ld a,(hl)
 481+ A029 4F               ld c,a
 482+ A02A E6 F0            and $f0
 483+ A02C CB 3F        1 srl a
 484+ A02E 10 FC            djnz 1B
 485+ A030 C9               ret
 486+ A031
 487+ A031              ; ---------- --------- --------- ---------- ----------
 488+ A031              ;
 489+ A031              ;   5/7/23
 490+ A031              ;
 491+ A031              ;   Incrementa_Puntero_indice_mov
 492+ A031
 493+ A031              Incrementa_Puntero_indice_mov
 494+ A031
 495+ A031 21 F9 88         ld hl,Incrementa_puntero
 496+ A034 34               inc (hl)
 497+ A035
 498+ A035 2A F3 88         ld hl,(Puntero_indice_mov)
 499+ A038 01 02 00         ld bc,2
 500+ A03B A7               and a
 501+ A03C 09               add hl,bc
 502+ A03D 22 F3 88         ld (Puntero_indice_mov),hl
 503+ A040
 504+ A040 7E               ld a,(hl)
 505+ A041 A7               and a
 506+ A042
 507+ A042              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A042
 509+ A042              ;    jr z,$
 510+ A042
 511+ A042              ;! Reinicia el Patrón de movimiento.
 512+ A042
 513+ A042 CC 47 A0         call z,Inicializa_Puntero_indice_mov
 514+ A045
 515+ A045 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A046
 517+ A046 C9               ret
 518+ A047
 519+ A047
 520+ A047              ; ---------- --------- --------- ---------- ----------
 521+ A047              ;
 522+ A047              ;   24/07/23
 523+ A047              ;
 524+ A047              ;   Inicializa_Puntero_indice_mov
 525+ A047
 526+ A047              Inicializa_Puntero_indice_mov
 527+ A047
 528+ A047              ; Existe etiqueta de bucle principal???
 529+ A047
 530+ A047 2A F7 88         ld hl,(Puntero_indice_mov_bucle)
 531+ A04A 24               inc h
 532+ A04B 25               dec h
 533+ A04C 28 05            jr z,2F
 534+ A04E
 535+ A04E 22 F3 88         ld (Puntero_indice_mov),hl
 536+ A051 18 14            jr 3F
 537+ A053
 538+ A053              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A053
 540+ A053 3A F9 88     2 ld a,(Incrementa_puntero)
 541+ A056 47               ld b,a
 542+ A057
 543+ A057 2A F3 88         ld hl,(Puntero_indice_mov)
 544+ A05A 2B           1 dec hl
 545+ A05B 2B               dec hl
 546+ A05C 10 FC            djnz 1B
 547+ A05E 22 F3 88         ld (Puntero_indice_mov),hl
 548+ A061
 549+ A061 AF               xor a
 550+ A062 32 F9 88         ld (Incrementa_puntero),a
 551+ A065 18 06            jr 4F
 552+ A067
 553+ A067 3A FA 88     3 ld a,(Incrementa_puntero_backup)
 554+ A06A 32 F9 88         ld (Incrementa_puntero),a
 555+ A06D C9           4 ret
 556+ A06E
 557+ A06E
 558+ A06E
# file closed: Patrones_de_mov.asm
1736  A06E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A06E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A06E              ;
   3+ A06E              ;	12/12/23
   4+ A06E              ;
   5+ A06E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A06E
   7+ A06E              ;	ADC HL,SP	LD (addr),SP
   8+ A06E              ;	ADD HL,SP	LD SP,(addr)
   9+ A06E              ;	ADD IX,SP	LD SP,nn
  10+ A06E              ; 	ADD IY,SP	LD SP,HL
  11+ A06E              ;				LD SP,IX
  12+ A06E              ;	DEC SP		LD SP,IY
  13+ A06E
  14+ A06E              ;	EX (SP),HL
  15+ A06E              ;	EX (SP),IX
  16+ A06E              ;	EX (SP),IY
  17+ A06E
  18+ A06E              ;	INC SP
  19+ A06E
  20+ A06E                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 16 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 E4 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 F0 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7FB0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7FB2              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7FB2
  50+ 7FB2 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 7FB5
  52+ 7FB5 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 7FB6 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 7FB8 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7FBA
  56+ 7FBA              ; Disparo o entidad?
  57+ 7FBA
  58+ 7FBA 3A 05 89         ld a,(Ctrl_1)
  59+ 7FBD CB 47            bit 0,a
  60+ 7FBF 28 05            jr z,2F
  61+ 7FC1
  62+ 7FC1 2A 1E 89         ld hl,(Stack_snapshot_disparos)
  63+ 7FC4 18 0F            jr 4F
  64+ 7FC6
  65+ 7FC6              ; No es disparo. Entidad/Amadeus ????
  66+ 7FC6
  67+ 7FC6 3A F2 88     2 ld a,(Ctrl_0)
  68+ 7FC9 CB 77            bit 6,a
  69+ 7FCB 28 05            jr z,7F
  70+ 7FCD
  71+ 7FCD              ; Guardamos foto de Amadeus.
  72+ 7FCD
  73+ 7FCD 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7FD0 18 03            jr 4F
  75+ 7FD2
  76+ 7FD2 2A 1C 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 7FD5
  78+ 7FD5 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 7FD7
  80+ 7FD7 D1           1 pop de
  81+ 7FD8 73               ld (hl),e
  82+ 7FD9 23               inc hl
  83+ 7FDA 72               ld (hl),d
  84+ 7FDB 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7FDC 10 F9            djnz 1B
  86+ 7FDE
  87+ 7FDE              ; Disparo o entidad ?
  88+ 7FDE
  89+ 7FDE 3A 05 89         ld a,(Ctrl_1)
  90+ 7FE1 CB 47            bit 0,a
  91+ 7FE3 28 05            jr z,5F
  92+ 7FE5
  93+ 7FE5 22 1E 89         ld (Stack_snapshot_disparos),hl
  94+ 7FE8 18 13            jr 6F
  95+ 7FEA
  96+ 7FEA              ; Entidad o Amadeus ?
  97+ 7FEA
  98+ 7FEA 3A F2 88     5 ld a,(Ctrl_0)
  99+ 7FED CB 77            bit 6,a
 100+ 7FEF 28 09            jr z,8F
 101+ 7FF1
 102+ 7FF1 22 22 89         ld (End_Snapshot_Amadeus),hl
 103+ 7FF4 ED 7B 16 89      ld sp,(Stack)
 104+ 7FF8 FB               ei
 105+ 7FF9 C9               ret
 106+ 7FFA
 107+ 7FFA 22 1C 89     8 ld (Stack_snapshot),hl
 108+ 7FFD ED 7B 16 89  6 ld sp,(Stack)
 109+ 8001
 110+ 8001 FB               ei
 111+ 8002 C9               ret
 112+ 8003
 113+ 8003              ; -----------------------------------------------------------------------------
 114+ 8003              ;
 115+ 8003              ;   21/11/23
 116+ 8003
 117+ 8003              Limpia_y_reinicia_Stack_Snapshot
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos.
 120+ 8003
 121+ 8003 2A 1C 89         ld hl,(Stack_snapshot)
 122+ 8006 7D               ld a,l
 123+ 8007 A7               and a
 124+ 8008 C8               ret z   ;   Salimos si el álbum está vacío.
 125+ 8009
 126+ 8009 47               ld b,a
 127+ 800A 04               inc b
 128+ 800B
 129+ 800B 36 00        1 ld (hl),0
 130+ 800D 2D               dec l
 131+ 800E 10 FB            djnz 1B
 132+ 8010
 133+ 8010              ;   Reinicializa (Stack_snapshot).
 134+ 8010
 135+ 8010 AF               xor a
 136+ 8011 32 1C 89         ld (Stack_snapshot),a
 137+ 8014
 138+ 8014 C9               ret
# file closed: Guarda_foto_registros.asm
1737  8015
1738  8015              	SAVESNA "Pruebas.sna", START
1739  8015
1740  8015
1741  8015
1742  8015
# file closed: Banco_de_Pruebas.asm
