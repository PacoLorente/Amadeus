# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 17 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 02 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD DA 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 0F 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 1
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $50	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 17 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 ED 4D        	reti
  86  AA35
  87  AA35              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA35
  89  AA35              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA35              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA35              ;
   3+ AA35              ;	17/02/23
   4+ AA35              ;
   5+ AA35              ;	Sprites e índices.
   6+ AA35
   7+ AA35              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1D 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 23 89        	defw End_Snapshot_1
 267+ 8500 27 89        	defw End_Snapshot_2
 268+ 8502 2B 89        	defw End_Snapshot_3
 269+ 8504 1F 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 25 89        	defw End_Snapshot_disparos_1
 271+ 8508 29 89        	defw End_Snapshot_disparos_2
 272+ 850A 2D 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 0B 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 0B 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CB 87        	defw Nivel_2
   7+ 87BE D8 87        	defw Nivel_3
   8+ 87C0 E8 87        	defw Nivel_4
   9+ 87C2 FA 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87C9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 01 02
  21+ 87D2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D6 01 02
  22+ 87D8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DD 01
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87ED 01
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 02 03        	db 2,3
  31+ 87FA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FF 01
  33+ 8800 05 01 01 01  	db 5,1,1,1,1
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1
  35+ 880E 01
  36+ 880F
  37+ 880F              ;---------------------------------------------------------------------------------------------------------------
  38+ 880F              ;
  39+ 880F              ;   3/9/23
  40+ 880F              ;
  41+ 880F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880F              ;	_en la caja DRAW correspondiente.
  45+ 880F              ;
  46+ 880F              ;	MODIFICA: HL,DE y A.
  47+ 880F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880F
  49+ 880F              Inicializa_Punteros_de_nivel
  50+ 880F
  51+ 880F 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8812 22 5C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8815 CD 7F 8C     	call Extrae_address
  54+ 8818 7E           	ld a,(hl)
  55+ 8819 32 0B 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881C 23           	inc hl
  57+ 881D 22 5E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8820 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8821
  60+ 8821              ;---------------------------------------------------------------------------------------------------------------
  61+ 8821              ;
  62+ 8821              ;   13/5/23
  63+ 8821              ;
  64+ 8821              ;	Destruye A,BC,HL,DE
  65+ 8821
  66+ 8821              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8821              ;	_del juego.
  68+ 8821
  69+ 8821              Prepara_cajas
  70+ 8821
  71+ 8821              ; Preparamos los punteros de las cajas.
  72+ 8821
  73+ 8821 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8824 CD 7F 8C     	call Extrae_address
  75+ 8827 CD 64 88     	call Avanza_caja
  76+ 882A
  77+ 882A CD A8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882D
  79+ 882D 2A 5E 89     	ld hl,(Datos_de_nivel)
  80+ 8830
  81+ 8830              ; HL está en los datos del nivel correspondiente.
  82+ 8830              ; B actuará como contador de cajas.
  83+ 8830
  84+ 8830 C5           1 push bc
  85+ 8831
  86+ 8831 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8832 CD 55 88     	call PreparaBC
  88+ 8835
  89+ 8835 21 96 87     	ld hl,Indice_de_entidades
  90+ 8838 CD 5D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883B 22 11 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883E
  93+ 883E CD 6E 88     	call Datos_de_entidad_a_caja
  94+ 8841
  95+ 8841 2A 09 89     	ld hl,(Indice_restore_caja)
  96+ 8844 CD 7F 8C     	call Extrae_address
  97+ 8847 CD 64 88     	call Avanza_caja
  98+ 884A
  99+ 884A 2A 5E 89     	ld hl,(Datos_de_nivel)
 100+ 884D 23           	inc hl
 101+ 884E 22 5E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8851
 103+ 8851 C1           	pop bc
 104+ 8852 10 DC        	djnz 1B
 105+ 8854 C9           	ret
 106+ 8855
 107+ 8855 CB 27        PreparaBC sla a
 108+ 8857 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8859 4F           	ld c,a
 110+ 885A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885C C9           	ret
 112+ 885D
 113+ 885D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885E ED 4A        	adc hl,bc
 115+ 8860 CD 7F 8C     	call Extrae_address
 116+ 8863 C9           	ret
 117+ 8864
 118+ 8864 22 05 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8867 13           	inc de
 120+ 8868 13           	inc de
 121+ 8869 EB           	ex de,hl
 122+ 886A 22 09 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886D C9           	ret
 124+ 886E
 125+ 886E              Datos_de_entidad_a_caja
 126+ 886E
 127+ 886E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886E
 129+ 886E
 130+ 886E ED 5B 05 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8872
 132+ 8872 01 02 00     	ld bc,2
 133+ 8875 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8877
 135+ 8877 01 07 00     	ld bc,7
 136+ 887A CD A2 88     	call Situa_DE
 137+ 887D
 138+ 887D 01 05 00     	ld bc,5
 139+ 8880 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8882
 141+ 8882 01 04 00     	ld bc,4
 142+ 8885 CD A2 88     	call Situa_DE
 143+ 8888
 144+ 8888 01 07 00     	ld bc,7
 145+ 888B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888D
 147+ 888D 01 12 00     	ld bc,18
 148+ 8890 CD A2 88     	call Situa_DE
 149+ 8893
 150+ 8893 01 02 00     	ld bc,2
 151+ 8896 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8898
 153+ 8898              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8898              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8898
 156+ 8898 01 0F 00     	ld bc,15									; *****
 157+ 889B CD A2 88     	call Situa_DE
 158+ 889E
 159+ 889E 3E 03        	ld a,3
 160+ 88A0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A1
 162+ 88A1 C9           	ret
 163+ 88A2
 164+ 88A2 EB           Situa_DE ex de,hl
 165+ 88A3 A7           	and a
 166+ 88A4 ED 4A        	adc hl,bc
 167+ 88A6 EB           	ex de,hl
 168+ 88A7 C9           	ret
 169+ 88A8
 170+ 88A8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A8              ;
 172+ 88A8              ;	21/5/23
 173+ 88A8              ;
 174+ 88A8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A8              ;
 177+ 88A8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A8              ;
 181+ 88A8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A8              ;	MODIFICA: A y B.
 183+ 88A8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A8
 185+ 88A8              Admin_num_entidades
 186+ 88A8
 187+ 88A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A8
 189+ 88A8 3A 0B 89     	ld a,(Numero_de_entidades)
 190+ 88AB A7           	and a
 191+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AC              ;	jr z,$
 193+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AC
 195+ 88AC 20 03        	jr nz,3F
 196+ 88AE
 197+ 88AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AE
 199+ 88AE CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B1
 201+ 88B1 3A 0B 89     3 ld a,(Numero_de_entidades)
 202+ 88B4 FE 0A        	cp 10
 203+ 88B6 38 08        	jr c,1F
 204+ 88B8
 205+ 88B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B8              ; Actualizamos variables.
 207+ 88B8
 208+ 88B8 3E 0A        	ld a,10
 209+ 88BA 32 0C 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BD 47           	ld b,a
 211+ 88BE 18 04        	jr 2F
 212+ 88C0
 213+ 88C0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C0              ; (Numero_de_entidades)="0".
 215+ 88C0
 216+ 88C0 32 0C 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C3 47           	ld b,a
 218+ 88C4 C9           2 ret
# file closed: Niveles.asm
  92  88C5
  93  88C5              ; ******************************************************************************************************************************************************************************************
  94  88C5              ; Constantes.
  95  88C5              ; ******************************************************************************************************************************************************************************************
  96  88C5              ;
  97  88C5              ; 4/9/23
  98  88C5              ;
  99  88C5              ; Constantes generales.
 100  88C5              ;
 101  88C5
 102  88C5              Sprite_vacio equ $f000
 103  88C5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C5
 108  88C5              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C5              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C5              ;
 114  88C5              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C5              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C5              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C5              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C5              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C5              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C5
 121  88C5              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C5              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C5
 124  88C5
 125  88C5
 126  88C5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C5
 128  88C5              ; ******************************************************************************************************************************************************************************************
 129  88C5              ; Variables.
 130  88C5              ; ******************************************************************************************************************************************************************************************
 131  88C5              ;
 132  88C5              ; 28/07/23
 133  88C5              ;
 134  88C5              ; Variables de DRAW. (Motor principal).
 135  88C5              ;
 136  88C5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C5
 138  88C5 00           Filas db 0												; Filas. [DRAW]
 139  88C6 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88C9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CD
 145  88CD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CD
 147  88CD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88CE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88CE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88CE 00           Attr db 0												; Atributos de la entidad:
 151  88CF
 152  88CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88CF              ;
 154  88CF              ;	COLORES: 0 ..... NEGRO
 155  88CF              ;    		 1 ..... AZUL
 156  88CF              ; 			 2 ..... ROJO
 157  88CF              ;			 3 ..... MAGENTA
 158  88CF              ; 			 4 ..... VERDE
 159  88CF              ; 			 5 ..... CIAN
 160  88CF              ;			 6 ..... AMARILLO
 161  88CF              ; 			 7 ..... BLANCO
 162  88CF
 163  88CF 00 00        Indice_Sprite_der defw 0
 164  88D1 00 00        Indice_Sprite_izq defw 0
 165  88D3 00 00        Puntero_DESPLZ_der defw 0
 166  88D5 00 00        Puntero_DESPLZ_izq defw 0
 167  88D7
 168  88D7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88D9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DA
 171  88DA              ; Variables de objeto. (Características).
 172  88DA
 173  88DA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88DE
 178  88DE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88DF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88DF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88DF 00 00 00...  Variables_de_borrado ds 6
 182  88E5
 183  88E5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E7 00 00        	defw 0
 185  88E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EB 00 00 00 00  	db 0,0,0,0
 187  88EF
 188  88EF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88EF
 190  88EF 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F0              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F0              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F0              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F0              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F0              ;
 196  88F0              ; 														DESCRIPCIÖN:
 197  88F0              ;
 198  88F0              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F0              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F0              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F0              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F0              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F0              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F0              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F0              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F0              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F0              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F0              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F0              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F0              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F0              ;
 212  88F0              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F0              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F0              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F0
 216  88F0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F0
 218  88F0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F4 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F6              ;
 222  88F6              ;
 223  88F6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F7 00           Incrementa_puntero_backup db 0
 227  88F8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88F9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88F9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FC              ;
 233  88FC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FC              ;
 237  88FC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FC              ;
 242  88FC              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FC
 246  88FC
 247  88FC              ; Variables de funcionamiento. [DRAW].
 248  88FC
 249  88FC 00           Columnas db 0
 250  88FD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  88FF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  88FF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8900
 254  8900              ; variables de control general.
 255  8900
 256  8900 00           Ctrl_2 db 0
 257  8901              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8901              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8901              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8901              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8901              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8901              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8901              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8901              ;
 265  8901              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8901              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8901              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8901              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8901              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8901
 271  8901 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8902
 273  8902              ;! 61 Bytes por entidad.
 274  8902
 275  8902              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8902              ;					         		---------;      ;---------
 277  8902
 278  8902
 279  8902              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8902
 281  8902 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8903
 283  8903              ;														DESCRIPCIÓN:
 284  8903              ;
 285  8903              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8903              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8903              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8903              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8903              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8903              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8903
 292  8903              ;														BIT 3, Recarga de nueva oleada.
 293  8903              ;														BIT 4, Recarga de nueva oleada.
 294  8903              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  8903              ;														BIT 6, **** Frame completo.
 296  8903              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8903
 298  8903 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8905              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8905              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8905              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8905
 303  8905              ; Ctrl_3 db 0											; Byte de control de propósito general.
 304  8905
 305  8905              ;														DESCRIPCIÓN:
 306  8905              ;
 307  8905              ;														BIT 0,
 308  8905
 309  8905              ; Gestión de ENTIDADES y CAJAS.
 310  8905
 311  8905 00 00        Puntero_store_caja defw 0
 312  8907 00 00        Puntero_restore_caja defw 0
 313  8909 00 00        Indice_restore_caja defw 0
 314  890B 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890C 00           Numero_parcial_de_entidades db 0
 316  890D 00           Entidades_en_curso db 0									; ..... ..... .....
 317  890E 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  890F              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  890F              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  890F              ;														; _ (Numero_de_malotes)="0".
 321  890F 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8911 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8913              ;														; _ puntero (Indice_entidades).
 324  8913
 325  8913
 326  8913              ;---------------------------------------------------------------------------------------------------------------
 327  8913              ;
 328  8913              ;	2/9/23
 329  8913              ;
 330  8913              ;	Álbumes.
 331  8913
 332  8913 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8915              ;														; _variable para almacenar lo posición del puntero_
 334  8915              ; 														; _de pila, SP.
 335  8915 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8917              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8917 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  8919 00 00        Stack_snapshot defw 0
 339  891B 00 00        Stack_snapshot_disparos defw 0
 340  891D
 341  891D 00 00        End_Snapshot defw 0
 342  891F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  891F 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8921              ;														; _el snapshot de los registros del siguiente disparo.
 345  8921              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8921 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8923 00 00        End_Snapshot_1 defw 0
 348  8925 00 00        End_Snapshot_disparos_1 defw 0
 349  8927 00 00        End_Snapshot_2 defw 0
 350  8929 00 00        End_Snapshot_disparos_2 defw 0
 351  892B 00 00        End_Snapshot_3 defw 0
 352  892D 00 00        End_Snapshot_disparos_3 defw 0
 353  892F
 354  892F 00 00        Puntero_indice_album_de_fotos defw 0
 355  8931 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8933
 357  8933 00 00        Puntero_indice_End_Snapshot defw 0
 358  8935 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8937 00 00        Puntero_de_End_Snapshot defw 0
 360  8939 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893B
 362  893B F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 363  893C              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 364  893C 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 365  893D
 366  893D              ;---------------------------------------------------------------------------------------------------------------
 367  893D
 368  893D              ; Gestión de Disparos.
 369  893D
 370  893D 00           Numero_de_disparotes db 0
 371  893E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 372  8940 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 373  8942 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 374  8943              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 375  8943              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 376  8943 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 377  8945              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 378  8945              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 379  8945              ;														; _produzca colisión.
 380  8945 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 381  8947              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 382  8947 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 383  894A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 384  894A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 385  894D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 386  894D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 387  894F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 388  8950
 389  8950              ;---------------------------------------------------------------------------------------------------------------
 390  8950
 391  8950              ; Relojes y temporizaciones.
 392  8950
 393  8950 00           Contador_de_frames db 0
 394  8951 00           Contador_de_frames_2 db 0
 395  8952
 396  8952 04           Clock_explosion db 4
 397  8953 1E           Clock_Entidades_en_curso db 30
 398  8954 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 399  8955              ;														; Repite la oleada de entidades.
 400  8955 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 401  8956 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 402  8957 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 403  8958
 404  8958 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 405  8959 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 406  895A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 407  895B
 408  895B              ;---------------------------------------------------------------------------------------------------------------
 409  895B
 410  895B              ; Gestión de NIVELES.
 411  895B
 412  895B 00           Nivel db 0												; Nivel actual del juego.
 413  895C 00 00        Puntero_indice_NIVELES defw 0
 414  895E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 415  8960              ; 														; _ que definen el NIVEL.
 416  8960              ; Y todo comienza aquí .....
 417  8960              ;
 418  8960              ; Rutina principal *************************************************************************************************************************************************************************
 419  8960              ;
 420  8960              ;	14/11/22
 421  8960
 422  8960              START
 423  8960
 424  8960 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 425  8963 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 426  8965 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 427  8967 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 428  8969 F3           	DI
 429  896A
 430  896A 3E 07        	ld a,%00000111
 431  896C CD 38 99     	call Cls
 432  896F
 433  896F CD 58 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 434  8972
 435  8972              ; INICIALIZACIÓN.
 436  8972
 437  8972 CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 438  8975
 439  8975 CD 21 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 440  8978
 441  8978 CD 7D 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 442  897B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 443  897B CD 93 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 444  897E              ;													     ; _ malotes antes de guardar ninguna foto.
 445  897E              ; ----------
 446  897E
 447  897E CD 08 8D     	call Restore_entidad
 448  8981
 449  8981 21 0C 89     	ld hl,Numero_parcial_de_entidades
 450  8984 46           	ld b,(hl)
 451  8985 04           	inc b
 452  8986 05           	dec b
 453  8987 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 454  8989
 455  8989              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 456  8989              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 457  8989              ;	Pintamos el resto de entidades:
 458  8989
 459  8989              ;	INICIA ENTIDADES !!!!!
 460  8989
 461  8989 C5           1 push bc  												; Guardo el contador de entidades.
 462  898A CD 4E 8B     	call Inicia_entidad
 463  898D C1           	pop bc
 464  898E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 465  8990
 466  8990              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 467  8990              ; (Esto se dá cuando se inicia una nueva oleada).
 468  8990
 469  8990 3A 02 89     	ld a,(Ctrl_1)
 470  8993 CB 5F        	bit 3,a
 471  8995 20 00        	jr nz,5F											; Loop
 472  8997
 473  8997              ; 	INICIA AMADEUS !!!!!
 474  8997
 475  8997              3
 476  8997
 477  8997              ;	call Restore_Amadeus
 478  8997              ;	call Inicia_Puntero_objeto
 479  8997              ;	call Draw
 480  8997              ;	call Guarda_foto_registros
 481  8997              ;	call Guarda_datos_de_borrado_Amadeus
 482  8997
 483  8997              ;	ld de,Amadeus_db
 484  8997              ;	call Store_Amadeus
 485  8997
 486  8997              ; 	INICIA DISPAROS !!!!!
 487  8997
 488  8997              ;	call Inicia_Puntero_Disparo_Entidades
 489  8997              ;	call Inicia_Puntero_Disparo_Amadeus
 490  8997
 491  8997              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 492  8997
 493  8997 CD 7D 8B     5 call Inicia_punteros_de_cajas
 494  899A CD 08 8D     	call Restore_entidad
 495  899D
 496  899D 3A 02 89     	ld a,(Ctrl_1)
 497  89A0 CB 5F        	bit 3,a
 498  89A2 28 07        	jr z,6F
 499  89A4
 500  89A4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 501  89A4
 502  89A4 21 02 89     	ld hl,Ctrl_1
 503  89A7 CB 9E        	res 3,(hl)
 504  89A9 18 03        	jr Main
 505  89AB
 506  89AB
 507  89AB              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 508  89AB              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 509  89AB              ; _ para situarnos en el siguiente album.
 510  89AB
 511  89AB CD C4 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 512  89AE
 513  89AE
 514  89AE              ; ------------------------------------
 515  89AE
 516  89AE              Main
 517  89AE              ;
 518  89AE              ;	3/8/23
 519  89AE
 520  89AE              ; 	ei
 521  89AE
 522  89AE 3A 53 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 523  89B1 47           	ld b,a
 524  89B2 3A 50 89     	ld a,(Contador_de_frames)
 525  89B5 B8           	cp b
 526  89B6 20 18        	jr nz,13F
 527  89B8
 528  89B8 3A 0C 89     	ld a,(Numero_parcial_de_entidades)
 529  89BB 47           	ld b,a
 530  89BC 3A 0D 89     	ld a,(Entidades_en_curso)
 531  89BF B8           	cp b
 532  89C0 28 0E        	jr z,13F
 533  89C2 30 0C        	jr nc,13F
 534  89C4
 535  89C4 3C           	inc a
 536  89C5 32 0D 89     	ld (Entidades_en_curso),a
 537  89C8
 538  89C8 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 539  89CB
 540  89CB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 541  89CB              ;! _ IMPREDECIBLE !!!!
 542  89CB
 543  89CB C6 64        	add 100
 544  89CD 32 53 89     	ld (Clock_Entidades_en_curso),a
 545  89D0
 546  89D0              ; Habilita disparos.
 547  89D0
 548  89D0 21 55 89     13 ld hl,Disparo_Amadeus
 549  89D3 11 57 89     	ld de,CLOCK_repone_disparo_Amadeus
 550  89D6 CD FC 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 551  89D9
 552  89D9 21 58 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 553  89DC 11 5A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 554  89DF CD FC 9C     	call Habilita_disparos
 555  89E2
 556  89E2              ; COLISIONES.
 557  89E2
 558  89E2 CD 0D 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 559  89E5
 560  89E5              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 561  89E5              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 562  89E5              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 563  89E5
 564  89E5 AF           	xor a
 565  89E6 32 42 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 566  89E9
 567  89E9 CD 7D 8B     	call Inicia_punteros_de_cajas
 568  89EC CD 08 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 569  89EF              ; 														; _ en DRAW.
 570  89EF 3A C5 88     	ld a,(Filas)
 571  89F2 A7           	and a
 572  89F3 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 573  89F5 CD 1A 8D     	call Incrementa_punteros_de_cajas
 574  89F8 18 F2        	jr 12B
 575  89FA
 576  89FA              ; ---------------------------------------------------------------------------------------
 577  89FA
 578  89FA 3A 0C 89     10 ld a,(Numero_parcial_de_entidades)
 579  89FD 47               ld b,a
 580  89FE A7           	and a
 581  89FF 20 14        	jr nz,11F
 582  8A01
 583  8A01 21 02 89     	ld hl,Ctrl_1
 584  8A04 CB 66        	bit 4,(hl)
 585  8A06 C2 93 8A     	jp nz,16F
 586  8A09
 587  8A09 21 02 89     	ld hl,Ctrl_1
 588  8A0C CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 589  8A0E
 590  8A0E 3A 50 89     	ld a,(Contador_de_frames)
 591  8A11 3C           	inc a
 592  8A12 32 54 89     	ld (Activa_recarga_cajas),a
 593  8A15
 594  8A15              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 595  8A15
 596  8A15 3A 0D 89     11 ld a,(Entidades_en_curso)
 597  8A18 A7           	and a
 598  8A19 CA 93 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 599  8A1C 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 600  8A1D
 601  8A1D              ; Código que ejecutamos con cada entidad:
 602  8A1D              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 603  8A1D
 604  8A1D C5           15 push bc 												; Nº de entidades en curso.
 605  8A1E
 606  8A1E              ; Impacto ???
 607  8A1E
 608  8A1E 3A DE 88     	ld a,(Impacto)
 609  8A21 A7           	and a
 610  8A22 28 32        	jr z,8F
 611  8A24
 612  8A24              ; Hay Impacto en esta entidad.
 613  8A24
 614  8A24 21 52 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 615  8A27 35           	dec (hl)
 616  8A28 20 63        	jr nz,17F
 617  8A2A
 618  8A2A              ;! Velocidad de la animación de la explosión.
 619  8A2A
 620  8A2A 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 621  8A2C              ;														; _,(velocidad de la explosión).
 622  8A2C
 623  8A2C              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 624  8A2C 18 FE        	jr $
 625  8A2E
 626  8A2E CD C9 8D     	call Repone_datos_de_borrado
 627  8A31 CD 21 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 628  8A34
 629  8A34
 630  8A34              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 631  8A34
 632  8A34 3A 00 89     	ld a,(Ctrl_2)
 633  8A37 CB 4F        	bit 1,a
 634  8A39 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 635  8A3B
 636  8A3B              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 637  8A3B
 638  8A3B 3A CD 88     	ld a,(CTRL_DESPLZ)
 639  8A3E A7           	and a
 640  8A3F 20 08        	jr nz,18F
 641  8A41
 642  8A41 21 84 84     	ld hl,Indice_Explosion_2x2-2
 643  8A44 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 644  8A47 18 06        	jr 19F
 645  8A49
 646  8A49 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 647  8A4C 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 648  8A4F
 649  8A4F 21 00 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 650  8A52 CB CE        	set 1,(hl)
 651  8A54 18 22        	jr 7F
 652  8A56
 653  8A56              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 654  8A56              ; _con las coordenadas de la entidad almacenada en DRAW.
 655  8A56
 656  8A56 3A 02 89     8 ld a,(Ctrl_1)
 657  8A59 CB 57        	bit 2,a
 658  8A5B 28 1B        	jr z,7F
 659  8A5D
 660  8A5D 2A 45 89     	ld hl,(Coordenadas_disparo_certero)
 661  8A60 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 662  8A61              ;														; E contiene la coordenada_X del disparo.
 663  8A61 2A CB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 664  8A64              ;														; H FILA, (Coordenada_y de la entidad).
 665  8A64 A7           	and a
 666  8A65 ED 52        	sbc hl,de
 667  8A67
 668  8A67 CD 44 92     	call Determina_resultado_comparativa
 669  8A6A
 670  8A6A 78           	ld a,b
 671  8A6B A7           	and a
 672  8A6C 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 673  8A6E
 674  8A6E              ; ----- ----- -----
 675  8A6E
 676  8A6E 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 677  8A70 32 DE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 678  8A73
 679  8A73 21 02 89     	ld hl,Ctrl_1
 680  8A76 CB 96        	res 2,(hl)
 681  8A78
 682  8A78 CD EA 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 683  8A7B
 684  8A7B 3A EF 88     	ld a,(Ctrl_0)
 685  8A7E CB 67        	bit 4,a
 686  8A80 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 687  8A82
 688  8A82              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 689  8A82              ; [[[
 690  8A82 CD A3 8D     	call Detecta_disparo_entidad
 691  8A85              ; ]]]
 692  8A85
 693  8A85 CD 5E 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 694  8A88              ;	call Guarda_datos_de_borrado
 695  8A88
 696  8A88 21 EF 88     	ld hl,Ctrl_0
 697  8A8B CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 698  8A8D
 699  8A8D CD CD 8C     17 call Store_Restore_cajas
 700  8A90
 701  8A90 C1           	pop bc
 702  8A91 10 8A        	djnz 15B
 703  8A93
 704  8A93              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 705  8A93              ; Hemos gestionado todas las unidades.
 706  8A93              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 707  8A93
 708  8A93              ;	ld hl,Ctrl_1
 709  8A93              ;	res 2,(hl)
 710  8A93
 711  8A93 CD C4 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 712  8A96              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 713  8A96
 714  8A96              ; ----------------------------------------
 715  8A96
 716  8A96 3A 02 89     	ld a,(Ctrl_1) 										; Existe Loop?
 717  8A99 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 718  8A9B CA AE 89     	jp z,Main
 719  8A9E
 720  8A9E 3A 50 89     	ld a,(Contador_de_frames)
 721  8AA1 47           	ld b,a
 722  8AA2 3A 54 89     	ld a,(Activa_recarga_cajas)
 723  8AA5 B8           	cp b
 724  8AA6 28 08        	jr z,20F
 725  8AA8
 726  8AA8 21 02 89     	ld hl,Ctrl_1
 727  8AAB CB E6        	set 4,(hl)
 728  8AAD C3 AE 89     	jp Main
 729  8AB0
 730  8AB0 21 02 89     20 ld hl,Ctrl_1
 731  8AB3 CB A6        	res 4,(hl)
 732  8AB5
 733  8AB5 3A 50 89     	ld a,(Contador_de_frames)
 734  8AB8
 735  8AB8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 736  8AB8              ;! _ IMPREDECIBLE !!!!
 737  8AB8
 738  8AB8 C6 0A        	add 10
 739  8ABA 32 53 89     	ld (Clock_Entidades_en_curso),a
 740  8ABD
 741  8ABD C3 75 89     	jp 4B
 742  8AC0
 743  8AC0 C9           	ret
 744  8AC1
 745  8AC1              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 746  8AC1
 747  8AC1              Gestiona_Amadeus
 748  8AC1
 749  8AC1 3E 04            ld a,4
 750  8AC3 D3 FE        	out ($fe),a											; Azul.
 751  8AC5
 752  8AC5 CD 2F 8D     	call Restore_Amadeus
 753  8AC8
 754  8AC8              ;! Activa/desactiva impacto con Amadeus.
 755  8AC8
 756  8AC8 3A DE 88     	ld a,(Impacto)
 757  8ACB A7           	and a
 758  8ACC 20 FE        	jr nz,$
 759  8ACE
 760  8ACE CD 3B 8B     	call Mov_Amadeus
 761  8AD1
 762  8AD1 3A EF 88     	ld a,(Ctrl_0)
 763  8AD4 CB 67        	bit 4,a
 764  8AD6 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 765  8AD8
 766  8AD8 CD 5E 8B     	call Guarda_foto_entidad_a_pintar
 767  8ADB CD A9 8D     	call Guarda_datos_de_borrado_Amadeus
 768  8ADE
 769  8ADE 21 EF 88     14 ld hl,Ctrl_0
 770  8AE1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 771  8AE3
 772  8AE3 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 773  8AE6 CD 41 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 774  8AE9
 775  8AE9              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 776  8AE9
 777  8AE9              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 778  8AE9
 779  8AE9              ;	call Calcula_numero_de_disparotes
 780  8AE9
 781  8AE9 C9           	ret
 782  8AEA
 783  8AEA              ; --------------------------------------------------------------------------------------------------------------
 784  8AEA              ;
 785  8AEA              ;	27/05/23
 786  8AEA
 787  8AEA              Mov_obj
 788  8AEA
 789  8AEA 3A 00 89     	ld a,(Ctrl_2)
 790  8AED CB 4F        	bit 1,a
 791  8AEF 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 792  8AF1
 793  8AF1              ; Explosión:
 794  8AF1
 795  8AF1 3A 01 89     	ld a,(Frames_explosion)
 796  8AF4 A7           	and a
 797  8AF5 20 11        	jr nz,4F
 798  8AF7
 799  8AF7              ; Una alimaña menos!!!!!!!!!1
 800  8AF7
 801  8AF7 CD 4A 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 802  8AFA 21 0C 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 803  8AFD 35           	dec (hl)
 804  8AFE 21 0D 89     	ld hl,Entidades_en_curso
 805  8B01 35           	dec (hl)
 806  8B02 21 0B 89     	ld hl,Numero_de_entidades
 807  8B05 35           	dec (hl)
 808  8B06 18 32        	jr 3F
 809  8B08
 810  8B08              ; -----
 811  8B08
 812  8B08              ;	`Movemos´ la explosión.
 813  8B08
 814  8B08 2A D3 88     4 ld hl,(Puntero_DESPLZ_der)
 815  8B0B 23           	inc hl
 816  8B0C 23           	inc hl
 817  8B0D 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 818  8B10 CD 7F 8C     	call Extrae_address
 819  8B13 22 C9 88     	ld (Puntero_objeto),hl
 820  8B16
 821  8B16 21 01 89     	ld hl,Frames_explosion
 822  8B19 35           	dec (hl)
 823  8B1A
 824  8B1A              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 825  8B1A 18 1E        	jr 3F
 826  8B1C
 827  8B1C AF           2 xor a
 828  8B1D 32 EF 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 829  8B20
 830  8B20              ; Movemos Entidades malignas.
 831  8B20
 832  8B20 CD A7 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 833  8B23
 834  8B23 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 835  8B26 CB 67        	bit 4,a
 836  8B28 C8           	ret z
 837  8B29
 838  8B29              ; Ha habido desplazamiento de la entidad maligna.
 839  8B29              ; Ha llegado a zona de AMADEUS ???
 840  8B29
 841  8B29 3A CC 88     	ld a,(Coordenada_y)
 842  8B2C FE 14        	cp $14
 843  8B2E D4 D2 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 844  8B31              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 845  8B31              ; ---------
 846  8B31
 847  8B31 CD 65 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 848  8B34 CD C9 8D     	call Repone_datos_de_borrado
 849  8B37 CD 21 8C     	call Limpia_Variables_de_borrado
 850  8B3A
 851  8B3A C9           3 ret													; _de la misma.
 852  8B3B
 853  8B3B              ; --------------------------------------------------------------------------------------------------------------
 854  8B3B              ;
 855  8B3B              ;	29/1/23
 856  8B3B
 857  8B3B              Mov_Amadeus
 858  8B3B
 859  8B3B CD 6C 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 860  8B3E
 861  8B3E 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 862  8B41 CB 67        	bit 4,a
 863  8B43 C8           	ret z
 864  8B44
 865  8B44              ; ---------
 866  8B44
 867  8B44 CD 65 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 868  8B47 CD B9 8D     	call Repone_datos_de_borrado_Amadeus
 869  8B4A CD 21 8C     	call Limpia_Variables_de_borrado
 870  8B4D
 871  8B4D C9           	ret
 872  8B4E
 873  8B4E              ; -----------------------------------------------------------------------------------
 874  8B4E
 875  8B4E CD 85 8C     Inicia_entidad	call Inicia_Puntero_objeto
 876  8B51 CD 4C 99     	call Recompone_posicion_inicio
 877  8B54 CD 2B 93     	call Draw
 878  8B57 CD A0 7F     	call Guarda_foto_registros
 879  8B5A              ;	call Guarda_datos_de_borrado
 880  8B5A CD CD 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 881  8B5D C9           	ret
 882  8B5E
 883  8B5E              ; --------------------------------------------------------------------------------------------------------------
 884  8B5E              ;
 885  8B5E              ;	31/08/23
 886  8B5E              ;
 887  8B5E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 888  8B5E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 889  8B5E
 890  8B5E              Guarda_foto_entidad_a_pintar
 891  8B5E
 892  8B5E              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 893  8B5E
 894  8B5E CD 2B 93     	call Draw
 895  8B61 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 896  8B64 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 897  8B65
 898  8B65              ; --------------------------------------------------------------------------------------------------------------
 899  8B65              ;
 900  8B65              ;	19/9/23
 901  8B65
 902  8B65 21 C5 88     Prepara_var_pintado ld hl,Filas
 903  8B68 11 E5 88     	ld de,Variables_de_pintado
 904  8B6B 01 08 00     	ld bc,8
 905  8B6E ED B0        	ldir
 906  8B70 C9           	ret
 907  8B71
 908  8B71              ; --------------------------------------------------------------------------------------------------------------
 909  8B71
 910  8B71 21 E5 88     Repone_pintar ld hl,Variables_de_pintado
 911  8B74 11 C5 88     	ld de,Filas
 912  8B77 01 08 00     	ld bc,8
 913  8B7A ED B0        	ldir
 914  8B7C C9           	ret
 915  8B7D
 916  8B7D              ; *************************************************************************************************************************************************************
 917  8B7D              ;
 918  8B7D              ; 8/1/23
 919  8B7D              ;
 920  8B7D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 921  8B7D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 922  8B7D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 923  8B7D
 924  8B7D              ; Destruye HL y DE !!!!!
 925  8B7D
 926  8B7D              Inicia_punteros_de_cajas
 927  8B7D
 928  8B7D 21 8C 85     	ld hl,Indice_de_cajas
 929  8B80 CD 7F 8C         call Extrae_address
 930  8B83 22 05 89         ld (Puntero_store_caja),hl
 931  8B86 21 8E 85     	ld hl,Indice_de_cajas+2
 932  8B89 22 09 89     	ld (Indice_restore_caja),hl
 933  8B8C CD 7F 8C     	call Extrae_address
 934  8B8F 22 07 89     	ld (Puntero_restore_caja),hl
 935  8B92 C9               ret
 936  8B93
 937  8B93              ; ---------------------------------------------------------------
 938  8B93              ;
 939  8B93              ;	9/8/23
 940  8B93              ;
 941  8B93              ;	Inicialización y gestión de álbumes de fotos y cajas.
 942  8B93
 943  8B93              Inicia_punteros_de_albumes_y_malotes
 944  8B93
 945  8B93 21 EC 84     	ld hl,Indice_album_de_fotos
 946  8B96 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
 947  8B99 CD 7F 8C     	call Extrae_address
 948  8B9C 22 19 89     	ld (Stack_snapshot),hl
 949  8B9F
 950  8B9F 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 951  8BA2 22 31 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 952  8BA5 CD 7F 8C     	call Extrae_address
 953  8BA8 22 1B 89     	ld (Stack_snapshot_disparos),hl
 954  8BAB
 955  8BAB 21 FC 84     	ld hl,Indice_End_Snapshot
 956  8BAE 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
 957  8BB1 CD 7F 8C     	call Extrae_address
 958  8BB4 22 37 89     	ld (Puntero_de_End_Snapshot),hl
 959  8BB7
 960  8BB7 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 961  8BBA 22 35 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 962  8BBD CD 7F 8C     	call Extrae_address
 963  8BC0 22 39 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 964  8BC3
 965  8BC3 C9           	ret
 966  8BC4
 967  8BC4              ;	23/10/23
 968  8BC4
 969  8BC4              Avanza_puntero_de_album_de_fotos_de_entidades
 970  8BC4
 971  8BC4              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 972  8BC4
 973  8BC4              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 974  8BC4              ; Estamos en el último álbum del índice???.
 975  8BC4              ;
 976  8BC4
 977  8BC4 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
 978  8BC7 01 F2 84     	ld bc,Indice_album_de_fotos+6
 979  8BCA A7           	and a
 980  8BCB ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 981  8BCD 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 982  8BCF
 983  8BCF              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
 984  8BCF              ; Actualizamos (Semaforo).
 985  8BCF
 986  8BCF 21 3B 89     	ld hl,Semaforo
 987  8BD2 CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
 988  8BD4
 989  8BD4              ; Inicia con el buffer de video completo !!!
 990  8BD4
 991  8BD4 FB           	ei
 992  8BD5 76           	halt
 993  8BD6 C9           	ret
 994  8BD7
 995  8BD7 2A 2F 89     1 ld hl,(Puntero_indice_album_de_fotos)
 996  8BDA 23           	inc hl
 997  8BDB 23           	inc hl
 998  8BDC 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
 999  8BDF CD 7F 8C     	call Extrae_address
1000  8BE2 22 19 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1001  8BE5
1002  8BE5 2A 33 89     	ld hl,(Puntero_indice_End_Snapshot)
1003  8BE8 23           	inc hl
1004  8BE9 23           	inc hl
1005  8BEA 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
1006  8BED CD 7F 8C     	call Extrae_address
1007  8BF0 22 37 89     	ld (Puntero_de_End_Snapshot),hl
1008  8BF3
1009  8BF3 21 3B 89     	ld hl,Semaforo
1010  8BF6 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1011  8BF8
1012  8BF8 C9           	ret
1013  8BF9
1014  8BF9              ; *************************************************************************************************************************************************************
1015  8BF9              ;
1016  8BF9              ; 8/1/23
1017  8BF9              ;
1018  8BF9              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1019  8BF9
1020  8BF9 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1021  8BFC 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1022  8BFF C9           	ret
1023  8C00 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1024  8C03 22 40 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1025  8C06 C9           	ret
1026  8C07
1027  8C07              ; -------------------------------------------------------------------------------------------------------------
1028  8C07              ;
1029  8C07              ; 21/9/23
1030  8C07              ;
1031  8C07
1032  8C07              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1033  8C07
1034  8C07              Limpia_album_Amadeus
1035  8C07
1036  8C07 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1037  8C0A 7E           	ld a,(hl)
1038  8C0B A7           	and a
1039  8C0C C8           	ret z
1040  8C0D
1041  8C0D 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1042  8C10 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1043  8C13 01 0B 00     	ld bc,11
1044  8C16 AF           	xor a
1045  8C17 77           	ld (hl),a
1046  8C18 ED B0        	ldir
1047  8C1A
1048  8C1A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1049  8C1D 22 21 89     	ld (End_Snapshot_Amadeus),hl
1050  8C20
1051  8C20 C9           	ret
1052  8C21
1053  8C21 21 DF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1054  8C24 11 E0 88     	ld de,Variables_de_borrado+1
1055  8C27 01 05 00     	ld bc,5
1056  8C2A AF           	xor a
1057  8C2B 77           	ld (hl),a
1058  8C2C ED B0        	ldir
1059  8C2E C9           	ret
1060  8C2F
1061  8C2F              ; -------------------------------------------------------------------------------------------------------------
1062  8C2F              ;
1063  8C2F              ; 8/9/23
1064  8C2F              ;
1065  8C2F
1066  8C2F              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1067  8C2F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1068  8C2F
1069  8C2F              Calcula_numero_de_malotes
1070  8C2F
1071  8C2F 21 00 70     	ld hl,Album_de_fotos
1072  8C32 EB           	ex de,hl
1073  8C33 2A 1D 89     	ld hl,(End_Snapshot)
1074  8C36
1075  8C36 7C           	ld a,h
1076  8C37 A7           	and a
1077  8C38 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1078  8C3A
1079  8C3A 06 00        4 ld b,0
1080  8C3C 7D           	ld a,l
1081  8C3D 93           	sub e
1082  8C3E 28 07        	jr z,1F
1083  8C40
1084  8C40              ; Nº de malotes no es "0".
1085  8C40
1086  8C40 D6 06        2 sub 6
1087  8C42 04           	inc b
1088  8C43 A7           	and a
1089  8C44 20 FA        	jr nz,2B
1090  8C46 78           	ld a,b
1091  8C47
1092  8C47 32 0E 89     1 ld (Numero_de_malotes),a
1093  8C4A C9           	ret
1094  8C4B
1095  8C4B              ; -------------------------------------------------------------------------------------------------------------
1096  8C4B              ;
1097  8C4B              ; 8/9/23
1098  8C4B              ;
1099  8C4B
1100  8C4B              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1101  8C4B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1102  8C4B
1103  8C4B              Calcula_malotes_Amadeus
1104  8C4B
1105  8C4B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1106  8C4E EB           	ex de,hl
1107  8C4F 2A 21 89     	ld hl,(End_Snapshot_Amadeus)
1108  8C52
1109  8C52 7C           	ld a,h
1110  8C53 A7           	and a
1111  8C54 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1112  8C56
1113  8C56 06 00        	ld b,0
1114  8C58 7D           	ld a,l
1115  8C59 93           	sub e
1116  8C5A 28 07        	jr z,1F
1117  8C5C
1118  8C5C              ; Nº de malotes no es "0".
1119  8C5C
1120  8C5C D6 06        2 sub 6
1121  8C5E 04           	inc b
1122  8C5F A7           	and a
1123  8C60 20 FA        	jr nz,2B
1124  8C62 78           	ld a,b
1125  8C63
1126  8C63 32 0E 89     1 ld (Numero_de_malotes),a
1127  8C66 C9           	ret
1128  8C67
1129  8C67              ; -------------------------------------------------------------------------------------------------------------
1130  8C67              ;
1131  8C67              ; 28/2/23
1132  8C67              ;
1133  8C67
1134  8C67              Calcula_numero_de_disparotes
1135  8C67
1136  8C67 21 50 71     	ld hl,Album_de_fotos_disparos
1137  8C6A EB           	ex de,hl
1138  8C6B 2A 39 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1139  8C6E
1140  8C6E 06 00        	ld b,0
1141  8C70 7D           	ld a,l
1142  8C71 93           	sub e
1143  8C72 28 07        	jr z,1F
1144  8C74
1145  8C74              ; Nº de malotes no es "0".
1146  8C74
1147  8C74 D6 06        2 sub 6
1148  8C76 04           	inc b
1149  8C77 A7           	and a
1150  8C78 20 FA        	jr nz,2B
1151  8C7A 78           	ld a,b
1152  8C7B
1153  8C7B 32 3D 89     1 ld (Numero_de_disparotes),a
1154  8C7E C9           	ret
1155  8C7F
1156  8C7F              ; *************************************************************************************************************************************************************
1157  8C7F              ;
1158  8C7F              ; 20/10/22
1159  8C7F              ;
1160  8C7F              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1161  8C7F              ;
1162  8C7F              ; Destruye el puntero y DE !!!!!
1163  8C7F
1164  8C7F 5E           Extrae_address ld e,(hl)
1165  8C80 23           	inc hl
1166  8C81 56           	ld d,(hl)
1167  8C82 2B           	dec hl
1168  8C83 EB           	ex de,hl
1169  8C84 C9           	ret
1170  8C85
1171  8C85              ; *************************************************************************************************************************************************************
1172  8C85              ;
1173  8C85              ;	7/2/23
1174  8C85              ;
1175  8C85              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1176  8C85              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1177  8C85              ;
1178  8C85              ;   Destruye HL y BC !!!!!,
1179  8C85              ;
1180  8C85              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1181  8C85              ;					"0" ..... Izquierda.
1182  8C85
1183  8C85              Inicia_Puntero_objeto
1184  8C85
1185  8C85 3A D9 88     	ld a,(Cuad_objeto)
1186  8C88 E6 01        	and 1
1187  8C8A F5           	push af
1188  8C8B CC A9 8C     	call z,Inicia_puntero_objeto_izq
1189  8C8E F1           	pop af
1190  8C8F 28 2B        	jr z,1F
1191  8C91 CD 96 8C     	call Inicia_puntero_objeto_der
1192  8C94 18 26        	jr 1F
1193  8C96
1194  8C96              ; Arrancamos desde la parte izquierda de la pantalla.
1195  8C96              ; Iniciamos (Indice_Sprite_der).
1196  8C96
1197  8C96 2A CF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1198  8C99 22 D3 88     	ld (Puntero_DESPLZ_der),hl
1199  8C9C CD 7F 8C     	call Extrae_address
1200  8C9F 22 C9 88     	ld (Puntero_objeto),hl
1201  8CA2
1202  8CA2 2A D1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1203  8CA5 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1204  8CA8 C9           	ret
1205  8CA9
1206  8CA9              ; Arrancamos desde la parte derecha de la pantalla.
1207  8CA9              ; Iniciamos (Indice_Sprite_izq).
1208  8CA9
1209  8CA9 2A D1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1210  8CAC 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1211  8CAF CD 7F 8C     	call Extrae_address
1212  8CB2 22 C9 88     	ld (Puntero_objeto),hl
1213  8CB5
1214  8CB5 2A CF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1215  8CB8 22 D3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1216  8CBB C9           	ret
1217  8CBC
1218  8CBC              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1219  8CBC
1220  8CBC 21 40 83     1 ld hl,Amadeus
1221  8CBF ED 4B C9 88  	ld bc,(Puntero_objeto)
1222  8CC3 B7 ED 42     	sub hl,bc
1223  8CC6 C0           	ret nz
1224  8CC7 21 EF 88     	ld hl,Ctrl_0
1225  8CCA CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1226  8CCC C9           	ret 												; _de nuestra nave en los extremos.
1227  8CCD
1228  8CCD              ; *************************************************************************************************************************************************************
1229  8CCD              ;
1230  8CCD              ;	14/5/23
1231  8CCD              ;
1232  8CCD              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1233  8CCD              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1234  8CCD
1235  8CCD              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1236  8CCD              ;	_de la 2ª y 3ª entidad respectivamente.
1237  8CCD
1238  8CCD              Store_Restore_cajas
1239  8CCD
1240  8CCD E5           	push hl
1241  8CCE D5           	push de
1242  8CCF C5            	push bc
1243  8CD0
1244  8CD0              ;	STORE !!!!!
1245  8CD0              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1246  8CD0
1247  8CD0 21 C5 88     	ld hl,Filas
1248  8CD3 ED 5B 05 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1249  8CD7 01 3D 00     	ld bc,61
1250  8CDA ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1251  8CDC
1252  8CDC              ; 	Entidad_sospechosa. 20/4/23
1253  8CDC
1254  8CDC 3A DE 88     	ld a,(Impacto)
1255  8CDF A7           	and a
1256  8CE0 28 0C        	jr z,1F
1257  8CE2
1258  8CE2 2A 05 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1259  8CE5 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1260  8CE8 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1261  8CE9 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1262  8CEB 22 43 89     	ld (Entidad_sospechosa_de_colision),hl
1263  8CEE
1264  8CEE              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1265  8CEE
1266  8CEE 2A 07 89     1 ld hl,(Puntero_restore_caja)
1267  8CF1 7E           	ld a,(hl)
1268  8CF2 A7           	and a
1269  8CF3 F5           	push af
1270  8CF4 28 08        	jr z,2F
1271  8CF6
1272  8CF6 11 C5 88     	ld de,Filas
1273  8CF9 01 3D 00     	ld bc,61
1274  8CFC ED B0        	ldir
1275  8CFE
1276  8CFE CD 1A 8D     2 call Incrementa_punteros_de_cajas
1277  8D01
1278  8D01 F1           	pop af
1279  8D02 28 EA        	jr z,1B
1280  8D04
1281  8D04 C1           	pop bc
1282  8D05 D1           	pop de
1283  8D06 E1           	pop hl
1284  8D07
1285  8D07 C9           	ret
1286  8D08
1287  8D08              ; **************************************************************************************************
1288  8D08              ;
1289  8D08              ;	12/05/23
1290  8D08              ;
1291  8D08              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1292  8D08
1293  8D08 E5           Restore_entidad push hl
1294  8D09 D5           	push de
1295  8D0A C5            	push bc
1296  8D0B
1297  8D0B 2A 05 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1298  8D0E 11 C5 88     	ld de,Filas
1299  8D11 01 3D 00     	ld bc,61
1300  8D14 ED B0        	ldir
1301  8D16
1302  8D16 C1           	pop bc
1303  8D17 D1           	pop de
1304  8D18 E1           	pop hl
1305  8D19 C9           	ret
1306  8D1A
1307  8D1A              ; **************************************************************************************************
1308  8D1A              ;
1309  8D1A              ;	08/05/23
1310  8D1A              ;
1311  8D1A              ;	Incrementamos los dos punteros de entidades. (+1).
1312  8D1A
1313  8D1A              Incrementa_punteros_de_cajas
1314  8D1A
1315  8D1A 2A 07 89     	ld hl,(Puntero_restore_caja)
1316  8D1D 22 05 89     	ld (Puntero_store_caja),hl
1317  8D20 2A 09 89     	ld hl,(Indice_restore_caja)
1318  8D23 23           	inc hl
1319  8D24 23           	inc hl
1320  8D25 22 09 89     	ld (Indice_restore_caja),hl
1321  8D28 CD 7F 8C         call Extrae_address
1322  8D2B 22 07 89         ld (Puntero_restore_caja),hl
1323  8D2E C9               ret
1324  8D2F
1325  8D2F              ; **************************************************************************************************
1326  8D2F              ;
1327  8D2F              ;	25/01/23
1328  8D2F              ;
1329  8D2F              ;	Restore_Amadeus
1330  8D2F              ;
1331  8D2F              ;	Cargamos en DRAW los parámetros de Amadeus.
1332  8D2F              ;
1333  8D2F
1334  8D2F E5           Restore_Amadeus	push hl
1335  8D30 D5           	push de
1336  8D31 C5            	push bc
1337  8D32 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1338  8D35 11 C5 88     	ld de,Filas
1339  8D38 01 3D 00     	ld bc,61
1340  8D3B ED B0        	ldir
1341  8D3D C1           	pop bc
1342  8D3E D1           	pop de
1343  8D3F E1           	pop hl
1344  8D40 C9           	ret
1345  8D41
1346  8D41              ; *************************************************************************************************************************************************************
1347  8D41              ;
1348  8D41              ;	29/04/23
1349  8D41              ;
1350  8D41              ;	Store_Amadeus
1351  8D41              ;
1352  8D41              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1353  8D41              ;
1354  8D41              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1355  8D41              ;
1356  8D41              ;	DESTRUYE: HL y BC y DE.
1357  8D41
1358  8D41 21 C5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1359  8D44 01 3D 00     	ld bc,61
1360  8D47 ED B0        	ldir
1361  8D49 C9           	ret
1362  8D4A
1363  8D4A              ; -----------------------------------------------------------
1364  8D4A              ;
1365  8D4A              ;	27/04/23
1366  8D4A              ;
1367  8D4A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1368  8D4A              ;
1369  8D4A              ;	Destruye: HL,BC,DE,A
1370  8D4A
1371  8D4A 21 C5 88     Borra_datos_entidad ld hl,Filas
1372  8D4D 01 3C 00     	ld bc,60
1373  8D50 AF           	xor a
1374  8D51 77           	ld (hl),a
1375  8D52 11 C6 88     	ld de,Filas+1
1376  8D55 ED B0        	ldir
1377  8D57 C9           	ret
1378  8D58
1379  8D58              ; -----------------------------------------------------------
1380  8D58
1381  8D58              ; Teclado.
1382  8D58
1383  8D58 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1384  8D5A DB FE        	in a,($fe)
1385  8D5C E6 01        	and $01
1386  8D5E 28 02        	jr z,1f
1387  8D60 18 F6        	jr Pulsa_ENTER
1388  8D62 C9           1 ret
1389  8D63
1390  8D63              ; **************************************************************************************************
1391  8D63              ;
1392  8D63              ; Temporización.
1393  8D63
1394  8D63              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1395  8D63              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1396  8D63              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1397  8D63              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1398  8D63
1399  8D63              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1400  8D63              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1401  8D63              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1402  8D63
1403  8D63              ; A partir de $4f61 no hace falta DELAY.
1404  8D63
1405  8D63              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1406  8D63
1407  8D63 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1408  8D66 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1409  8D67 78           	LD A,B
1410  8D68 A7           	AND A
1411  8D69 20 FB        	JR NZ,wait
1412  8D6B C9           	RET
1413  8D6C
1414  8D6C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1415  8D6C              ;
1416  8D6C              ;	5/3/23
1417  8D6C              ;
1418  8D6C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1419  8D6C
1420  8D6C              Movimiento_Amadeus
1421  8D6C
1422  8D6C              ; Disparo.
1423  8D6C
1424  8D6C 3A 55 89     	ld a,(Disparo_Amadeus)
1425  8D6F A7           	and a
1426  8D70 20 02        	jr nz,1F
1427  8D72 18 15        	jr 2F
1428  8D74
1429  8D74 3E F7        1 ld a,$f7													; "5" para disparar.
1430  8D76 DB FE        	in a,($fe)
1431  8D78 E6 10        	and $10
1432  8D7A
1433  8D7A F5           	push af
1434  8D7B CC 35 8E     	call z,Genera_disparo
1435  8D7E F1           	pop af
1436  8D7F 20 08        	jr nz,2F
1437  8D81
1438  8D81 3A 55 89     	ld a,(Disparo_Amadeus)
1439  8D84 EE 01        	xor 1
1440  8D86 32 55 89     	ld (Disparo_Amadeus),a
1441  8D89
1442  8D89 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1443  8D8B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1444  8D8D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1445  8D8F CC 06 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1446  8D92
1447  8D92 3E F7        	ld a,$f7
1448  8D94 DB FE        	in a,($fe)
1449  8D96 E6 01        	and $01
1450  8D98 C8           	ret z
1451  8D99
1452  8D99 3E F7        	ld a,$f7
1453  8D9B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1454  8D9D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1455  8D9F CC E8 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1456  8DA2 C9           	ret
1457  8DA3
1458  8DA3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1459  8DA3              ;
1460  8DA3              ;	Rutina provisional para que los malotes cagen balas.
1461  8DA3
1462  8DA3              Detecta_disparo_entidad
1463  8DA3
1464  8DA3 3A 58 89     	ld a,(Disparo_entidad)
1465  8DA6 A7           	and a
1466  8DA7 C8           	ret z
1467  8DA8
1468  8DA8              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1469  8DA8
1470  8DA8              ;	ld a,$7f				; Detecta SPACE.
1471  8DA8              ;	in a,($fe)
1472  8DA8              ;	and 1
1473  8DA8              ;	ret nz
1474  8DA8
1475  8DA8              ;	call Genera_disparo
1476  8DA8 C9           	ret
1477  8DA9
1478  8DA9              ; ----------------------------------------------------------------------
1479  8DA9              ;
1480  8DA9              ;	8/9/23
1481  8DA9
1482  8DA9 2A 21 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1483  8DAC 2B            	dec hl
1484  8DAD 7E           	ld a,(hl)
1485  8DAE A7           	and a
1486  8DAF C8           	ret z										; Salimos si es álbum está vacío.
1487  8DB0
1488  8DB0 11 E4 88     	ld de,Variables_de_borrado+5
1489  8DB3 01 06 00     	ld bc,6
1490  8DB6 ED B8        	lddr
1491  8DB8 C9           	ret
1492  8DB9
1493  8DB9              ; ----------------------------------------------------------------------
1494  8DB9              ;
1495  8DB9              ;	9/9/23
1496  8DB9
1497  8DB9              Repone_datos_de_borrado_Amadeus
1498  8DB9
1499  8DB9 21 DF 88     	ld hl,Variables_de_borrado
1500  8DBC 11 A0 72     	ld de,Album_de_fotos_Amadeus
1501  8DBF 01 06 00     	ld bc,6
1502  8DC2 ED B0        	ldir
1503  8DC4
1504  8DC4 EB           	ex de,hl
1505  8DC5 22 21 89     	ld (End_Snapshot_Amadeus),hl
1506  8DC8
1507  8DC8 C9           	ret
1508  8DC9
1509  8DC9              ; ----------------------------------------------------------------------
1510  8DC9              ;
1511  8DC9              ;	18/9/23
1512  8DC9              ;
1513  8DC9
1514  8DC9              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1515  8DC9              ;	_ Album_de_fotos correspondiente.
1516  8DC9
1517  8DC9              ;	DI.
1518  8DC9
1519  8DC9              Repone_datos_de_borrado
1520  8DC9
1521  8DC9 ED 5B 19 89  	ld de,(Stack_snapshot)
1522  8DCD 21 DF 88     	ld hl,Variables_de_borrado
1523  8DD0 01 06 00     	ld bc,6
1524  8DD3 ED B0        	ldir
1525  8DD5
1526  8DD5 EB           	ex de,hl
1527  8DD6 22 19 89     	ld (Stack_snapshot),hl
1528  8DD9
1529  8DD9 C9           	ret
1530  8DDA
1531  8DDA              ; ----------------------------------------------------------------------
1532  8DDA              ;
1533  8DDA              ;	11/8/23
1534  8DDA
1535  8DDA              Gestiona_entidades
1536  8DDA
1537  8DDA              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1538  8DDA
1539  8DDA 3A 3B 89     	ld a,(Semaforo)
1540  8DDD CB 47        	bit 0,a
1541  8DDF 28 FE        	jr z,$												;! STOP el buffer está vacío.
1542  8DE1 C8           	ret z
1543  8DE2
1544  8DE2              ;	call Extrae_foto_disparos
1545  8DE2              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1546  8DE2
1547  8DE2 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1548  8DE5
1549  8DE5              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1550  8DE5
1551  8DE5              ;	Album incompleto ?????
1552  8DE5              ;	Si es así, inicializamos el bit 4 de (Semaforo) y salimos de la rutina.
1553  8DE5
1554  8DE5              ;	ld a,(Semaforo)
1555  8DE5              ;	bit 5,a
1556  8DE5              ;	jr nz,1F
1557  8DE5
1558  8DE5              ;	bit 4,a
1559  8DE5              ;	ret nz
1560  8DE5
1561  8DE5              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1562  8DE5              ; Nos situamos al comienzo del último álbum.
1563  8DE5
1564  8DE5 2A 2F 89     1 ld hl,(Puntero_indice_album_de_fotos)
1565  8DE8 CD 7F 8C     	call Extrae_address
1566  8DEB 22 19 89     	ld (Stack_snapshot),hl
1567  8DEE
1568  8DEE              ;	En este punto:
1569  8DEE
1570  8DEE              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1571  8DEE              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1572  8DEE
1573  8DEE              ;	ld hl,Ctrl_1
1574  8DEE              ;	res 5,(hl)
1575  8DEE
1576  8DEE              ;	Album_de_fotos_3 vuelve a estar vacío.
1577  8DEE
1578  8DEE 21 3B 89     	ld hl,Semaforo
1579  8DF1 CB 0E        	rrc (hl)
1580  8DF3
1581  8DF3 C9           	ret
1582  8DF4
1583  8DF4              ; -----------------------------------------------------------------------------------
1584  8DF4
1585  8DF4              Pinta_Amadeus
1586  8DF4
1587  8DF4 3E 06        	ld a,6
1588  8DF6 D3 FE            out ($fe),a										; Amarillo
1589  8DF8
1590  8DF8 CD 4B 8C        	call Calcula_malotes_Amadeus
1591  8DFB CD BB 96     	call Extrae_foto_Amadeus
1592  8DFE CD 07 8C     	call Limpia_album_Amadeus
1593  8E01
1594  8E01 C9           	ret
1595  8E02
1596  8E02              Pinta_entidades
1597  8E02
1598  8E02 3A 3B 89     	ld a,(Semaforo)
1599  8E05 CB 47        	bit 0,a
1600  8E07 C8           	ret z
1601  8E08
1602  8E08              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1603  8E08
1604  8E08 CD 2F 8C     	call Calcula_numero_de_malotes
1605  8E0B CD 39 96     	call Extrae_foto_entidades
1606  8E0E
1607  8E0E C9           	ret
1608  8E0F
1609  8E0F              ; -----------------------------------------------------------------------------------
1610  8E0F
1611  8E0F              Actualiza_relojes
1612  8E0F
1613  8E0F 21 50 89     	ld hl,Contador_de_frames
1614  8E12 7E           	ld a,(hl)
1615  8E13 FE FF        	cp $ff
1616  8E15 20 04        	jr nz,1F
1617  8E17 34           	inc (hl)
1618  8E18 21 51 89     	ld hl,Contador_de_frames_2
1619  8E1B 34           1 inc (hl)											; 0 - 255
1620  8E1C C9           	ret
1621  8E1D
1622  8E1D              ; ---------------------------------------------------------------
1623  8E1D              ;
1624  8E1D              ;	27/9/23
1625  8E1D
1626  8E1D              Guarda_parametros_DRAW
1627  8E1D
1628  8E1D 21 C5 88     	ld hl,Filas
1629  8E20 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1630  8E23 01 3D 00     	ld bc,61
1631  8E26 ED B0        	ldir
1632  8E28 C9           	ret
1633  8E29
1634  8E29              Recupera_parametros_DRAW
1635  8E29
1636  8E29 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1637  8E2C 11 C5 88     	ld de,Filas
1638  8E2F 01 3D 00     	ld bc,61
1639  8E32 ED B0        	ldir
1640  8E34 C9           	ret
1641  8E35
1642  8E35              ; ---------------------------------------------------------------
1643  8E35
1644  8E35              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E35              ; ******************************************************************************************************************************************************************************************
   2+ 8E35              ;
   3+ 8E35              ;   21/07/23
   4+ 8E35              ;
   5+ 8E35              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E35              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E35              ;
   8+ 8E35              ;
   9+ 8E35              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E35              ;
  11+ 8E35              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E35              ;               _ hacen las entidades hacia abajo.
  13+ 8E35              ;
  14+ 8E35              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E35              ;
  16+ 8E35              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E35              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E35              ;
  19+ 8E35              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E35              ;           _ la bala.
  21+ 8E35              ;
  22+ 8E35              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E35              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E35              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E35              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E35              ;           _ en el momento de generarse la bala)).
  27+ 8E35
  28+ 8E35              Genera_disparo
  29+ 8E35
  30+ 8E35              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E35              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E35              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E35              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E35              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E35              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E35              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E35
  38+ 8E35              ; Exclusiones:
  39+ 8E35
  40+ 8E35 3A DD 88         ld a,(Vel_down)
  41+ 8E38 47               ld b,a
  42+ 8E39 3A 4F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E3C B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E3D D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E3E 3A FC 88         ld a,(Columnas)
  46+ 8E41 47               ld b,a
  47+ 8E42 3A C6 88         ld a,(Columns)
  48+ 8E45 B8               cp b
  49+ 8E46 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E47
  51+ 8E47              ; ----- ----- -----
  52+ 8E47
  53+ 8E47 3A EF 88         ld a,(Ctrl_0)
  54+ 8E4A CB 77            bit 6,a
  55+ 8E4C 20 06            jr nz,14F
  56+ 8E4E
  57+ 8E4E 3A CC 88         ld a,(Coordenada_y)
  58+ 8E51 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E53 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E54
  61+ 8E54 21 00 80     14 ld hl,Indice_disparo
  62+ 8E57 3A CD 88         ld a,(CTRL_DESPLZ)
  63+ 8E5A 4F               ld c,a
  64+ 8E5B 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E5D              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E5D              ;                                            ""        ""       "f9", B="1"
  67+ 8E5D              ;                                            ""        ""       "fb", B="2"
  68+ 8E5D              ;                                            ""        ""       "fb", B="3"
  69+ 8E5D A7               and a
  70+ 8E5E 28 10            jr z,1F
  71+ 8E60 E6 01            and 1
  72+ 8E62 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E63
  74+ 8E63 79               ld a,c
  75+ 8E64 16 F9            ld d,$f9
  76+ 8E66 23           2 inc hl
  77+ 8E67 23               inc hl
  78+ 8E68 04               inc b
  79+ 8E69 BA               cp d
  80+ 8E6A 28 04            jr z,1F
  81+ 8E6C 14               inc d
  82+ 8E6D 14               inc d
  83+ 8E6E 18 F6            jr 2B
  84+ 8E70
  85+ 8E70 CD 7F 8C     1 call Extrae_address
  86+ 8E73 E5               push hl
  87+ 8E74 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E76 DD 21 01 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E7A
  90+ 8E7A              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E7A              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E7A
  93+ 8E7A 3A EF 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E7D CB 77            bit 6,a
  95+ 8E7F 20 04            jr nz,19F
  96+ 8E81
  97+ 8E81 AF               xor a
  98+ 8E82 32 58 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E85
 100+ 8E85 3A D9 88     19 ld a,(Cuad_objeto)
 101+ 8E88 FE 02            cp 2
 102+ 8E8A 38 66            jr c,3F
 103+ 8E8C 28 64            jr z,3F
 104+ 8E8E
 105+ 8E8E              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E8E
 107+ 8E8E E6 01            and 1
 108+ 8E90 28 30            jr z,4F
 109+ 8E92
 110+ 8E92              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E92              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E92              ;
 113+ 8E92              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E92              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E92              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E92
 117+ 8E92 2A C7 88     	ld hl,(Posicion_actual)
 118+ 8E95
 119+ 8E95              ;   Amadeus o entidad ???.
 120+ 8E95
 121+ 8E95 3A EF 88         ld a,(Ctrl_0)
 122+ 8E98 CB 77            bit 6,a
 123+ 8E9A 28 0A            jr z,8F
 124+ 8E9C
 125+ 8E9C              ; 	Dispara Amadeus.
 126+ 8E9C
 127+ 8E9C 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E9E CD 2A 96         call PreviousScan
 129+ 8EA1 CD 2A 96         call PreviousScan
 130+ 8EA4
 131+ 8EA4              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EA4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EA4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EA4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EA4
 136+ 8EA4 18 11            jr 10F
 137+ 8EA6
 138+ 8EA6              ; 	Dispara Entidad.
 139+ 8EA6
 140+ 8EA6 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EA9              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EA9
 143+ 8EA9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EA9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EA9
 146+ 8EA9 C5               push bc
 147+ 8EAA 06 10            ld b,16
 148+ 8EAC CD 1B 96     9 call NextScan
 149+ 8EAF 10 FB            djnz 9B
 150+ 8EB1 C1               pop bc
 151+ 8EB2 CD 1C 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EB5 18 06            jr 17F
 153+ 8EB7
 154+ 8EB7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EB7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EB7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EB7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EB7
 159+ 8EB7 CD 1C 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EBA CD 91 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EBD              ;                                                      ; _al generar el disparo.
 162+ 8EBD
 163+ 8EBD              ; 	LLegados a este punto tendremos:
 164+ 8EBD              ;
 165+ 8EBD              ;       Puntero_objeto_disparo en IY.
 166+ 8EBD              ;       Rutinas_de_impresion en IX.
 167+ 8EBD              ;       Puntero_de_impresion en HL.
 168+ 8EBD              ;       Impacto/Dirección en BC.
 169+ 8EBD
 170+ 8EBD CD 24 8F     17 call Almacena_disparo
 171+ 8EC0 18 52            jr 6F                                             ; RET.
 172+ 8EC2
 173+ 8EC2              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EC2              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EC2              ;
 176+ 8EC2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EC2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EC2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EC2
 180+ 8EC2 2A C7 88     4 ld hl,(Posicion_actual)
 181+ 8EC5
 182+ 8EC5              ;   Amadeus o entidad ???.
 183+ 8EC5
 184+ 8EC5 3A EF 88         ld a,(Ctrl_0)
 185+ 8EC8 CB 77            bit 6,a
 186+ 8ECA 28 0A            jr z,11F
 187+ 8ECC
 188+ 8ECC              ; 	Dispara Amadeus.
 189+ 8ECC
 190+ 8ECC 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8ECE CD 2A 96         call PreviousScan
 192+ 8ED1 CD 2A 96         call PreviousScan
 193+ 8ED4
 194+ 8ED4              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8ED4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8ED4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8ED4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8ED4
 199+ 8ED4 18 11            jr 13F
 200+ 8ED6
 201+ 8ED6              ; 	Dispara Entidad.
 202+ 8ED6
 203+ 8ED6 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8ED9              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8ED9
 206+ 8ED9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8ED9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8ED9
 209+ 8ED9 C5               push bc
 210+ 8EDA 06 10            ld b,16
 211+ 8EDC CD 1B 96     12 call NextScan
 212+ 8EDF 10 FB            djnz 12B
 213+ 8EE1 C1               pop bc
 214+ 8EE2
 215+ 8EE2 CD 15 8F         call Ajusta_disparo_parte_derecha
 216+ 8EE5 18 06            jr 18F
 217+ 8EE7
 218+ 8EE7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EE7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EE7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EE7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EE7
 223+ 8EE7 CD 15 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EEA CD 91 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EED              ;                                                       ; _al generar el disparo.
 226+ 8EED
 227+ 8EED              ; LLegados a este punto tendremos:
 228+ 8EED              ;
 229+ 8EED              ;       Puntero_objeto_disparo en IY.
 230+ 8EED              ;       Rutinas_de_impresion en IX.
 231+ 8EED              ;       Puntero_de_impresion en HL.
 232+ 8EED              ;       Impacto/Dirección en BC.
 233+ 8EED
 234+ 8EED CD 24 8F     18 call Almacena_disparo
 235+ 8EF0 18 22            jr 6F                                               ; RET.
 236+ 8EF2
 237+ 8EF2              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EF2
 239+ 8EF2 28 11        3 jr z,5F
 240+ 8EF4
 241+ 8EF4              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EF4              ;
 243+ 8EF4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EF4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EF4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EF4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EF4
 248+ 8EF4              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EF4              ;	   ""        ""       "f9", B="1"
 250+ 8EF4              ;	   ""        ""       "fb", B="2"
 251+ 8EF4              ; 	   ""        ""       "fb", B="3"
 252+ 8EF4
 253+ 8EF4 2A C7 88     	ld hl,(Posicion_actual)
 254+ 8EF7 CD 1B 96     	call NextScan
 255+ 8EFA
 256+ 8EFA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EFA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EFA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EFA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EFA
 261+ 8EFA CD 1C 8F         call Ajusta_disparo_parte_izquierda
 262+ 8EFD
 263+ 8EFD              ; 	No se produce impacto. B="$80"
 264+ 8EFD              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8EFD
 266+ 8EFD 01 80 80         ld bc,$8080
 267+ 8F00
 268+ 8F00              ; 	LLegados a este punto tendremos:
 269+ 8F00              ;
 270+ 8F00              ;       Puntero_objeto_disparo en IY.
 271+ 8F00              ;       Rutinas_de_impresion en IX.
 272+ 8F00              ;       Puntero_de_impresion en HL.
 273+ 8F00              ;       Impacto/Dirección en BC.
 274+ 8F00
 275+ 8F00 CD 24 8F         call Almacena_disparo
 276+ 8F03 18 0F            jr 6F                                           ; RET.
 277+ 8F05
 278+ 8F05              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F05              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F05              ;
 281+ 8F05              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F05              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F05              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F05              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F05
 286+ 8F05 2A C7 88     5 ld hl,(Posicion_actual)
 287+ 8F08 CD 1B 96     	call NextScan
 288+ 8F0B
 289+ 8F0B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F0B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F0B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F0B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F0B
 294+ 8F0B CD 15 8F         call Ajusta_disparo_parte_derecha
 295+ 8F0E
 296+ 8F0E              ; 	No se produce impacto. B="$80"
 297+ 8F0E              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F0E
 299+ 8F0E 01 80 80     15 ld bc,$8080
 300+ 8F11
 301+ 8F11              ; 	LLegados a este punto tendremos:
 302+ 8F11              ;
 303+ 8F11              ;       Puntero_objeto_disparo en IY.
 304+ 8F11              ;       Rutinas_de_impresion en IX.
 305+ 8F11              ;       Puntero_de_impresion en HL.
 306+ 8F11              ;       Impacto/Dirección en BC.
 307+ 8F11
 308+ 8F11 CD 24 8F         call Almacena_disparo
 309+ 8F14
 310+ 8F14 C9           6 ret
 311+ 8F15
 312+ 8F15              ; ----------------------------------------------------------------
 313+ 8F15              ;
 314+ 8F15              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F15              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F15              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F15
 318+ 8F15 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F16 FE 02            cp 2
 320+ 8F18 38 01            jr c,1F
 321+ 8F1A 23               inc hl
 322+ 8F1B C9           1 ret
 323+ 8F1C
 324+ 8F1C 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F1D FE 01        	cp 1
 326+ 8F1F 20 01        	jr nz,1F
 327+ 8F21 2B           	dec hl
 328+ 8F22 2B           1 dec hl
 329+ 8F23 C9               ret
 330+ 8F24
 331+ 8F24              ; ----------------------------------------------------------------
 332+ 8F24              ;
 333+ 8F24              ;   25/02/23
 334+ 8F24              ;
 335+ 8F24              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F24              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F24              ;
 338+ 8F24              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F24              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F24
 341+ 8F24              Almacena_disparo
 342+ 8F24
 343+ 8F24 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F25 F1               pop af
 345+ 8F26 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F27
 347+ 8F27 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F28 E6 01            and 1
 349+ 8F2A 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F2C              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F2C              ; 	Dispara AMADEUS.
 352+ 8F2C
 353+ 8F2C              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F2C              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F2C              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F2C              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F2C
 358+ 8F2C C5               push bc
 359+ 8F2D 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F30 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F33 A7               and a
 362+ 8F34 ED 42            sbc hl,bc
 363+ 8F36 CC 00 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F39 C1               pop bc
 365+ 8F3A 28 54            jr z,4F
 366+ 8F3C
 367+ 8F3C 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F3F 23               inc hl
 369+ 8F40 23               inc hl
 370+ 8F41 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F44              ;                                                   ; _ Disparo_(+1).
 372+ 8F44 18 18            jr 2F
 373+ 8F46
 374+ 8F46              ; Dispara una entidad.
 375+ 8F46
 376+ 8F46 C5           1 push bc
 377+ 8F47 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F4A 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F4D A7               and a
 380+ 8F4E ED 42            sbc hl,bc
 381+ 8F50 CC F9 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F53 C1               pop bc
 383+ 8F54 28 3A            jr z,4F
 384+ 8F56
 385+ 8F56 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F59 23               inc hl
 387+ 8F5A 23               inc hl
 388+ 8F5B 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F5E              ;                                                   ; _ Disparo_(+1).
 390+ 8F5E CD 7F 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F61              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F61              ;
 393+ 8F61              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F61              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F61              ;                                                     Puntero_de_impresion en HL.
 396+ 8F61              ;                                                     Impacto/Dirección en BC.
 397+ 8F61
 398+ 8F61 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F62 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F63 23               inc hl                                          ; _ al siguiente.
 401+ 8F64 A7               and a
 402+ 8F65 20 C0            jr nz,3B
 403+ 8F67
 404+ 8F67 08               ex af,af
 405+ 8F68 ED 73 13 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F6C F9               ld sp,hl
 407+ 8F6D
 408+ 8F6D DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F6F F5               push af                                         ; Puntero de impresión.
 410+ 8F70 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F72 C5               push bc                                         ; Control.
 412+ 8F73
 413+ 8F73 ED 7B 13 89      ld sp,(Stack)
 414+ 8F77
 415+ 8F77              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F77
 417+ 8F77 21 02 89     	ld hl,Ctrl_1
 418+ 8F7A CB C6        	set 0,(hl)
 419+ 8F7C
 420+ 8F7C DD E5        	push ix
 421+ 8F7E E1               pop hl
 422+ 8F7F F5               push af
 423+ 8F80 DD E1            pop ix
 424+ 8F82
 425+ 8F82 CD A0 7F     	call Guarda_foto_registros
 426+ 8F85
 427+ 8F85 21 02 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F88 CB 86        	res 0,(hl)
 429+ 8F8A
 430+ 8F8A              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F8A              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F8A
 433+ 8F8A CD 00 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F8D CD F9 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F90
 436+ 8F90 C9           4 ret
 437+ 8F91
 438+ 8F91              ; ----------------------------------------------------------------
 439+ 8F91              ;
 440+ 8F91              ;   4/3/23
 441+ 8F91              ;
 442+ 8F91              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F91              ;   _ al generarse el disparo.
 444+ 8F91              ;
 445+ 8F91              ;       "$80" ..... No se produce colisión.
 446+ 8F91              ;       "$81" ..... Se produce colisión.
 447+ 8F91              ;
 448+ 8F91              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F91              ;         _ que forman el disparo.
 450+ 8F91
 451+ 8F91
 452+ 8F91              Comprueba_Colision
 453+ 8F91
 454+ 8F91              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F91
 456+ 8F91 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F93 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F94
 459+ 8F94 CD CA 8F         call Modifica_H_Velocidad_disparo
 460+ 8F97
 461+ 8F97 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F98 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F9A 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F9C
 465+ 8F9C 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F9E CD BA 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FA1
 468+ 8FA1 7B               ld a,e
 469+ 8FA2 E6 01            and 1
 470+ 8FA4 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FA6              ;                                                  ; _ para activar IMPACTO.
 472+ 8FA6 E1               pop hl
 473+ 8FA7 E5               push hl
 474+ 8FA8 CD 1B 96         call NextScan
 475+ 8FAB
 476+ 8FAB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FAC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FAE 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FB0              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FB0 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FB2 CD BA 8F         call Bucle_2
 482+ 8FB5
 483+ 8FB5 43           1 ld b,e
 484+ 8FB6 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FB7 FD E1            pop iy
 486+ 8FB9 C9               ret
 487+ 8FBA
 488+ 8FBA              ; ---------- ----------
 489+ 8FBA
 490+ 8FBA 06 02        Bucle_2 ld b,2
 491+ 8FBC FD 7E 00     2 ld a,(iy)
 492+ 8FBF A6               and (hl)
 493+ 8FC0 28 02            jr z,1F
 494+ 8FC2 1E 81            ld e,$81
 495+ 8FC4 23           1 inc hl
 496+ 8FC5 FD 23            inc iy
 497+ 8FC7 10 F3            djnz 2B
 498+ 8FC9 C9               ret
 499+ 8FCA
 500+ 8FCA              ; ---------- ----------
 501+ 8FCA              ;
 502+ 8FCA              ;   21/7/23
 503+ 8FCA
 504+ 8FCA              Modifica_H_Velocidad_disparo
 505+ 8FCA
 506+ 8FCA 3A 4F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FCD FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FCF D0               ret nc                                         ; _ incrementamos H.
 509+ 8FD0 24               inc h
 510+ 8FD1
 511+ 8FD1 C9               ret
 512+ 8FD2
 513+ 8FD2              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FD2              ;
 515+ 8FD2              ;   11/04/23
 516+ 8FD2              ;
 517+ 8FD2              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FD2              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FD2              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FD2              ;
 521+ 8FD2              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FD2
 523+ 8FD2              Compara_coordenadas_X
 524+ 8FD2
 525+ 8FD2              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FD2              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FD2
 528+ 8FD2              ; Preparamos registros:
 529+ 8FD2
 530+ 8FD2 21 CB 88         ld hl,Filas+6
 531+ 8FD5 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FD6 23               inc hl
 533+ 8FD7 23               inc hl
 534+ 8FD8 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FD9 43               ld b,e
 536+ 8FDA
 537+ 8FDA 21 D9 88         ld hl,Filas+20
 538+ 8FDD 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FDE 21 4A 89         ld hl,Coordenadas_X_Entidad
 540+ 8FE1 CD FD 91         call Guarda_coordenadas_X
 541+ 8FE4
 542+ 8FE4              ; Preparamos registros:
 543+ 8FE4
 544+ 8FE4 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FE7 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FE8 23               inc hl
 547+ 8FE9 23               inc hl
 548+ 8FEA 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FEB 7B               ld a,e
 550+ 8FEC 08               ex af,af'
 551+ 8FED 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FF0 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FF1 21 47 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FF4 CD FD 91         call Guarda_coordenadas_X
 555+ 8FF7
 556+ 8FF7              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8FF7              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8FF7
 559+ 8FF7 04               inc b
 560+ 8FF8 05               dec b
 561+ 8FF9 28 04            jr z,1F
 562+ 8FFB 06 03            ld b,3
 563+ 8FFD 18 02            jr 2F
 564+ 8FFF 06 02        1 ld b,2
 565+ 9001 08           2 ex af,af'
 566+ 9002 3C               inc a
 567+ 9003 3D               dec a
 568+ 9004 28 04            jr z,5F
 569+ 9006 0E 03            ld c,3
 570+ 9008 18 02            jr 6F
 571+ 900A 0E 02        5 ld c,2
 572+ 900C 79           6 ld a,c
 573+ 900D 08               ex af,af'
 574+ 900E 11 4A 89         ld de,Coordenadas_X_Entidad
 575+ 9011 1A           4 ld a,(de)
 576+ 9012 21 47 89         ld hl,Coordenadas_X_Amadeus
 577+ 9015 BE           3 cp (hl)
 578+ 9016 28 0E            jr z,7F
 579+ 9018 23               inc hl
 580+ 9019 0D               dec c
 581+ 901A 20 F9            jr nz,3B
 582+ 901C 13               inc de
 583+ 901D 08               ex af,af'
 584+ 901E 4F               ld c,a
 585+ 901F 08               ex af,af'
 586+ 9020 10 EF            djnz 4B
 587+ 9022
 588+ 9022              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9022
 590+ 9022 CD 39 92     8 call Limpia_Coordenadas_X
 591+ 9025 C9               ret
 592+ 9026
 593+ 9026 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9028 32 DE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 902B 21 42 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 902E CB D6            set 2,(hl)
 597+ 9030 18 F0            jr 8B
 598+ 9032
 599+ 9032              ; -----------------------------------------------------------------------
 600+ 9032              ;
 601+ 9032              ;   17/04/23
 602+ 9032              ;
 603+ 9032
 604+ 9032              Detecta_colision_nave_entidad
 605+ 9032
 606+ 9032              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9032
 608+ 9032 2A C7 88         ld hl,(Posicion_actual)
 609+ 9035 CD 76 95         call Calcula_puntero_de_impresion
 610+ 9038
 611+ 9038              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9038              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9038
 614+ 9038 DD E5            push ix
 615+ 903A E1               pop hl
 616+ 903B E5               push hl
 617+ 903C
 618+ 903C              ; ----- ----- -----
 619+ 903C 1E 00            ld e,0                                         ; Indica impacto.
 620+ 903E 06 0A            ld b,10
 621+ 9040 CD 70 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9043 7B               ld a,e
 623+ 9044 FE 05            cp 5
 624+ 9046 38 0E            jr c,3F
 625+ 9048
 626+ 9048              ; LLegados a este punto:
 627+ 9048              ;
 628+ 9048              ;   HAY COLISIÓN !!!!!.
 629+ 9048              ;
 630+ 9048              ;   .db (Impacto) de Amadeus a "1".
 631+ 9048              ;   SET el bit3 de (Impacto2).
 632+ 9048              ;
 633+ 9048              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9048
 635+ 9048 21 B7 85         ld hl,Amadeus_db+25
 636+ 904B 36 01            ld (hl),1
 637+ 904D 21 42 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9050 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9052 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9054 18 18            jr 1F
 641+ 9056
 642+ 9056              ; -----
 643+ 9056
 644+ 9056 E1           3 pop hl
 645+ 9057 CD 1B 96         call NextScan
 646+ 905A E5               push hl
 647+ 905B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 905C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 905E 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9060 30 0C            jr nc,1F
 651+ 9062              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9062 10 DC            djnz 2B
 653+ 9064
 654+ 9064              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9064
 656+ 9064              ; LLegados a este punto:
 657+ 9064              ;
 658+ 9064              ;   NO HAY COLISIÓN !!!!!.
 659+ 9064              ;
 660+ 9064              ;   .db (Impacto) de Amadeus a "0".
 661+ 9064              ;   RES el bit2 de (Impacto2).
 662+ 9064              ;
 663+ 9064              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9064              ;   Lo colocamos a "0".
 665+ 9064
 666+ 9064 21 42 89         ld hl,Impacto2
 667+ 9067 CB 96            res 2,(hl)
 668+ 9069 2A 43 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 906C 36 00            ld (hl),0
 670+ 906E
 671+ 906E E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 906F C9               ret
 673+ 9070
 674+ 9070               ; ---------- ----------
 675+ 9070
 676+ 9070 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9071 3A C6 88         ld a,(Columns)
 678+ 9074 47               ld b,a
 679+ 9075 FD 7E 00     2 ld a,(iy)
 680+ 9078 BE               cp (hl)
 681+ 9079 28 01            jr z,1F
 682+ 907B
 683+ 907B 1C               inc e
 684+ 907C
 685+ 907C 23           1 inc hl
 686+ 907D FD 23            inc iy
 687+ 907F 10 F4            djnz 2B
 688+ 9081 C1               pop bc
 689+ 9082 C9               ret
 690+ 9083
 691+ 9083              ; -------------------------------------------------------------------------------------------------------------
 692+ 9083              ;
 693+ 9083              ;   13/03/23
 694+ 9083              ;
 695+ 9083              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9083              ;
 697+ 9083              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9083
 699+ 9083 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9086 7E               ld a,(hl)
 701+ 9087 A7               and a
 702+ 9088 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9089
 704+ 9089 44               ld b,h
 705+ 908A 4D               ld c,l
 706+ 908B 2A 1B 89         ld hl,(Stack_snapshot_disparos)
 707+ 908E E5               push hl
 708+ 908F A7               and a
 709+ 9090 ED 42            sbc hl,bc
 710+ 9092 E5               push hl
 711+ 9093 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9094
 713+ 9094 E1               pop hl
 714+ 9095 54               ld d,h
 715+ 9096 5D               ld e,l
 716+ 9097 1B               dec de
 717+ 9098 ED B8            lddr                                                ; Limpiamos.
 718+ 909A
 719+ 909A 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 909D 22 1B 89         ld (Stack_snapshot_disparos),hl
 721+ 90A0
 722+ 90A0 C9               ret
 723+ 90A1
 724+ 90A1              ; -------------------------------------------------------------------------------------------------------------
 725+ 90A1              ;
 726+ 90A1              ;   18/07/23
 727+ 90A1              ;
 728+ 90A1
 729+ 90A1              Motor_de_disparos
 730+ 90A1
 731+ 90A1              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90A1
 733+ 90A1 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90A4 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90A7
 736+ 90A7 CD 7F 8C     2 call Extrae_address
 737+ 90AA 7E               ld a,(hl)
 738+ 90AB A7               and a
 739+ 90AC 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90AE
 741+ 90AE              ; ----- ----- ----- ----- ----- -----
 742+ 90AE
 743+ 90AE C5               push bc
 744+ 90AF CD 73 91         call foto_disparo_a_borrar
 745+ 90B2
 746+ 90B2              ; Existe colisión con este disparo???
 747+ 90B2
 748+ 90B2 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90B3 7E               ld a,(hl)
 750+ 90B4 2B               dec hl
 751+ 90B5 E6 01            and 1
 752+ 90B7 28 1D            jr z,9F
 753+ 90B9
 754+ 90B9              ;   En este punto:
 755+ 90B9              ;
 756+ 90B9              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90B9              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90B9              ;   _con la entidad).
 759+ 90B9              ;
 760+ 90B9              ;   Disparo_2A defw 0                                ; Control.
 761+ 90B9              ;    defw 0                                          ; Puntero objeto.
 762+ 90B9              ;    defw 0                                          ; Puntero de impresión.
 763+ 90B9              ;    defw 0                                          ; Rutina de impresión.
 764+ 90B9
 765+ 90B9 E5               push hl
 766+ 90BA
 767+ 90BA 06 04            ld b,4
 768+ 90BC 23           19 inc hl
 769+ 90BD 10 FD            djnz 19B
 770+ 90BF
 771+ 90BF CD 7F 8C         call Extrae_address
 772+ 90C2 CD E4 9C         call Genera_coordenadas_disparo
 773+ 90C5
 774+ 90C5              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90C5
 776+ 90C5 21 45 89         ld hl,Coordenadas_disparo_certero
 777+ 90C8 72               ld (hl),d
 778+ 90C9 23               inc hl
 779+ 90CA 73               ld (hl),e
 780+ 90CB
 781+ 90CB              ; Elimino el disparo de la base de datos.
 782+ 90CB
 783+ 90CB E1               pop hl
 784+ 90CC CD F2 91         call Elimina_disparo_de_base_de_datos
 785+ 90CF 21 42 89         ld hl,Impacto2
 786+ 90D2 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90D4
 788+ 90D4 18 06            jr 11F
 789+ 90D6
 790+ 90D6 CD 9C 91     9 call Mueve_disparo
 791+ 90D9 CD 73 91         call foto_disparo_a_borrar
 792+ 90DC
 793+ 90DC C1           11 pop bc
 794+ 90DD 18 04            jr 7F
 795+ 90DF
 796+ 90DF              ; ----- ----- ----- ----- ----- -----
 797+ 90DF
 798+ 90DF ED 42        1 sbc hl,bc
 799+ 90E1 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90E3
 801+ 90E3 2A 40 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90E6 23               inc hl
 803+ 90E7 23               inc hl
 804+ 90E8 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90EB 18 BA            jr 2B
 806+ 90ED
 807+ 90ED CD 00 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90F0              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90F0
 810+ 90F0              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90F0
 812+ 90F0 01 8A 85         ld bc,Disparo_11
 813+ 90F3 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 90F6
 815+ 90F6 CD 7F 8C     5 call Extrae_address
 816+ 90F9 7E               ld a,(hl)
 817+ 90FA A7               and a
 818+ 90FB 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 90FD
 820+ 90FD              ; ----- ----- ----- ----- ----- -----
 821+ 90FD
 822+ 90FD C5               push bc
 823+ 90FE CD 73 91         call foto_disparo_a_borrar
 824+ 9101
 825+ 9101              ; Existe colisión con este disparo???
 826+ 9101
 827+ 9101 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9102 7E               ld a,(hl)
 829+ 9103 2B               dec hl
 830+ 9104 E6 01            and 1
 831+ 9106 28 4D            jr z,10F
 832+ 9108
 833+ 9108              ;! La colisión se produce con Amadeus???
 834+ 9108              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9108
 836+ 9108 E5               push hl
 837+ 9109
 838+ 9109 06 04            ld b,4
 839+ 910B 23           16 inc hl
 840+ 910C 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 910E
 842+ 910E CD 7F 8C         call Extrae_address
 843+ 9111 CD E4 9C         call Genera_coordenadas_disparo
 844+ 9114
 845+ 9114 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9115 FE 16            cp $16
 847+ 9117 38 2A            jr c,15F
 848+ 9119
 849+ 9119
 850+ 9119              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9119
 852+ 9119 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 911A
 854+ 911A              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 911A
 856+ 911A
 857+ 911A 2A 4D 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 911D
 859+ 911D              ; Coordenada X de Amadeus en D.
 860+ 911D
 861+ 911D 7D               ld a,l
 862+ 911E E6 1F            and $1F
 863+ 9120 57               ld d,a
 864+ 9121
 865+ 9121 21 A6 85         ld hl,Amadeus_db+8
 866+ 9124 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9125
 868+ 9125 21 47 89         ld hl,Coordenadas_X_Amadeus
 869+ 9128 CD FD 91         call Guarda_coordenadas_X
 870+ 912B
 871+ 912B D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 912C
 873+ 912C              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 912C
 875+ 912C 06 02            ld b,2
 876+ 912E C5           20 push bc
 877+ 912F
 878+ 912F 06 03            ld b,3
 879+ 9131 21 47 89         ld hl,Coordenadas_X_Amadeus
 880+ 9134 7E           18 ld a,(hl)
 881+ 9135 BA               cp d
 882+ 9136 20 04            jr nz,17F
 883+ 9138
 884+ 9138              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9138
 886+ 9138 C1               pop bc
 887+ 9139 E1               pop hl
 888+ 913A 18 0D            jr 14F
 889+ 913C
 890+ 913C 23           17 inc hl
 891+ 913D 10 F5            djnz 18B
 892+ 913F
 893+ 913F 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9140
 895+ 9140 C1               pop bc
 896+ 9141 10 EB            djnz 20B
 897+ 9143
 898+ 9143
 899+ 9143              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9143              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9143
 902+ 9143 E1           15 pop hl
 903+ 9144 23               inc hl
 904+ 9145 35               dec (hl)
 905+ 9146 2B               dec hl
 906+ 9147 18 0C            jr 10F
 907+ 9149
 908+ 9149              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9149              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9149
 911+ 9149 E5           14 push hl
 912+ 914A CD F2 91         call Elimina_disparo_de_base_de_datos
 913+ 914D 21 42 89         ld hl,Impacto2
 914+ 9150 CB CE            set 1,(hl)
 915+ 9152 E1               pop hl
 916+ 9153 18 06            jr 12F
 917+ 9155
 918+ 9155              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9155
 920+ 9155 CD 9C 91     10 call Mueve_disparo
 921+ 9158 CD 73 91         call foto_disparo_a_borrar
 922+ 915B C1           12 pop bc
 923+ 915C
 924+ 915C 18 04            jr 8F
 925+ 915E
 926+ 915E              ; ----- ----- ----- ----- ----- -----
 927+ 915E
 928+ 915E ED 42        4 sbc hl,bc
 929+ 9160 28 0A            jr z,6F
 930+ 9162
 931+ 9162 2A 3E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9165 23               inc hl
 933+ 9166 23               inc hl
 934+ 9167 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 916A 18 8A            jr 5B
 936+ 916C
 937+ 916C CD F9 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 916F CD 39 92         call Limpia_Coordenadas_X
 939+ 9172 C9               ret
 940+ 9173
 941+ 9173              ; ------------------------------------------------------------------
 942+ 9173
 943+ 9173              foto_disparo_a_borrar
 944+ 9173
 945+ 9173 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9174 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9175 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9176
 949+ 9176 E5               push hl
 950+ 9177 23               inc hl
 951+ 9178 23               inc hl
 952+ 9179 ED 73 13 89      ld (Stack),sp
 953+ 917D F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 917E FD E1            pop iy
 955+ 9180 DD E1            pop ix
 956+ 9182 E1               pop hl
 957+ 9183 ED 7B 13 89      ld sp,(Stack)
 958+ 9187 3A 02 89         ld a,(Ctrl_1)
 959+ 918A CB C7            set 0,a
 960+ 918C 32 02 89         ld (Ctrl_1),a
 961+ 918F CD A0 7F         call Guarda_foto_registros
 962+ 9192 3A 02 89         ld a,(Ctrl_1)
 963+ 9195 CB 87            res 0,a
 964+ 9197 32 02 89         ld (Ctrl_1),a
 965+ 919A E1               pop hl
 966+ 919B C9               ret
 967+ 919C
 968+ 919C              ;---------------------------------------------------
 969+ 919C              ;
 970+ 919C              ;   18/07/23
 971+ 919C              ;
 972+ 919C
 973+ 919C              Mueve_disparo
 974+ 919C
 975+ 919C              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 919C              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 919C              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 919C
 979+ 919C E5               push hl
 980+ 919D
 981+ 919D 7E               ld a,(hl)
 982+ 919E
 983+ 919E 06 04            ld b,4
 984+ 91A0 23           1 inc hl
 985+ 91A1 10 FD            djnz 1B
 986+ 91A3
 987+ 91A3              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91A3
 989+ 91A3 CD 7F 8C         call Extrae_address
 990+ 91A6
 991+ 91A6 E6 01            and 1
 992+ 91A8 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91AA
 994+ 91AA              ; Disparo hacia arriba, (Amadeus).
 995+ 91AA
 996+ 91AA              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91AA              ; _ de la dificultad.
 998+ 91AA
 999+ 91AA CD 2A 96         call PreviousScan
1000+ 91AD CD 2A 96         call PreviousScan
1001+ 91B0 CD 2A 96         call PreviousScan
1002+ 91B3 CD 2A 96         call PreviousScan
1003+ 91B6
1004+ 91B6              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91B6
1006+ 91B6 7C               ld a,h
1007+ 91B7 FE 40            cp $40
1008+ 91B9 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91BB
1010+ 91BB              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91BB
1012+ 91BB EB               ex de,hl
1013+ 91BC 06 04            ld b,4
1014+ 91BE 2B           6 dec hl
1015+ 91BF 10 FD            djnz 6B
1016+ 91C1
1017+ 91C1 CD F2 91         call Elimina_disparo_de_base_de_datos
1018+ 91C4 E1               pop hl
1019+ 91C5 18 10            jr 7F
1020+ 91C7
1021+ 91C7              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91C7              ; HL contiene el puntero de impresión del disparo.
1023+ 91C7              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91C7
1025+ 91C7 D5           3 push de
1026+ 91C8 C5               push bc
1027+ 91C9
1028+ 91C9 CD 91 8F         call Comprueba_Colision
1029+ 91CC
1030+ 91CC              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91CC
1032+ 91CC 78               ld a,b
1033+ 91CD
1034+ 91CD C1               pop bc
1035+ 91CE D1               pop de
1036+ 91CF
1037+ 91CF EB               ex de,hl
1038+ 91D0
1039+ 91D0 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91D1 23               inc hl                                      ; _ movimiento.
1041+ 91D2 72               ld (hl),d
1042+ 91D3
1043+ 91D3 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91D4
1045+ 91D4 23               inc hl                                      ; _ en curso.
1046+ 91D5 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91D6 2B               dec hl
1048+ 91D7
1049+ 91D7 C9           7 ret
1050+ 91D8
1051+ 91D8              ; Disparo hacia abajo, (Entidad).
1052+ 91D8
1053+ 91D8 3A 4F 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91DB 47               ld b,a
1055+ 91DC
1056+ 91DC CD 1B 96     4 call NextScan
1057+ 91DF 10 FB            djnz 4B
1058+ 91E1
1059+ 91E1              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91E1
1061+ 91E1 7C               ld a,h
1062+ 91E2 FE 58            cp $58
1063+ 91E4 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91E6
1065+ 91E6 EB               ex de,hl
1066+ 91E7 06 04            ld b,4
1067+ 91E9 2B           5 dec hl
1068+ 91EA 10 FD            djnz 5B
1069+ 91EC
1070+ 91EC CD F2 91         call Elimina_disparo_de_base_de_datos
1071+ 91EF E1               pop hl
1072+ 91F0 18 E5            jr 7B
1073+ 91F2
1074+ 91F2              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91F2
1076+ 91F2 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91F5 AF               xor a
1078+ 91F6 77               ld (hl),a
1079+ 91F7 54               ld d,h
1080+ 91F8 5D               ld e,l
1081+ 91F9 13               inc de
1082+ 91FA ED B0            ldir
1083+ 91FC C9               ret
1084+ 91FD
1085+ 91FD              ; -----------------------------------------------------------------
1086+ 91FD              ;
1087+ 91FD              ;   19/7/23
1088+ 91FD              ;
1089+ 91FD              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 91FD              ;
1091+ 91FD              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 91FD              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 91FD              ;
1094+ 91FD              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 91FD              ;
1096+ 91FD              ;   INPUTS:
1097+ 91FD              ;
1098+ 91FD              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 91FD              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 91FD
1101+ 91FD              ;   MODIFICA: A, HL, BC y DE.
1102+ 91FD
1103+ 91FD              Guarda_coordenadas_X
1104+ 91FD
1105+ 91FD 7B               ld a,e
1106+ 91FE A7               and a
1107+ 91FF 20 04            jr nz,1F
1108+ 9201
1109+ 9201 06 02            ld b,2
1110+ 9203 18 02            jr 2F
1111+ 9205
1112+ 9205 06 03        1 ld b,3
1113+ 9207 72           2 ld (hl),d
1114+ 9208 23               inc hl
1115+ 9209 14               inc d
1116+ 920A 10 FB            djnz 2B
1117+ 920C
1118+ 920C C9               ret
1119+ 920D
1120+ 920D              ; -----------------------------------------------------------------
1121+ 920D              ;
1122+ 920D              ;   12/04/23
1123+ 920D              ;
1124+ 920D
1125+ 920D 3A 42 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9210 A7               and a
1127+ 9211 C8               ret z
1128+ 9212
1129+ 9212 FE 04            cp 4
1130+ 9214 20 09            jr nz,1F
1131+ 9216
1132+ 9216
1133+ 9216              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9216
1135+ 9216 CD 32 90         call Detecta_colision_nave_entidad
1136+ 9219
1137+ 9219 21 42 89         ld hl,Impacto2
1138+ 921C CB 5E            bit 3,(hl)
1139+ 921E C0               ret nz                                               ; Existe colisión, RET.
1140+ 921F
1141+ 921F              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 921F              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 921F
1144+ 921F 21 42 89     1 ld hl,Impacto2
1145+ 9222 CB 4E            bit 1,(hl)
1146+ 9224 28 07            jr z,2F
1147+ 9226
1148+ 9226 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9229 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 922B 18 0B            jr 3F
1151+ 922D
1152+ 922D 21 42 89     2 ld hl,Impacto2
1153+ 9230 CB 46            bit 0,(hl)
1154+ 9232 C8               ret z
1155+ 9233
1156+ 9233              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9233
1158+ 9233 21 02 89         ld hl,Ctrl_1
1159+ 9236 CB D6            set 2,(hl)
1160+ 9238
1161+ 9238 C9           3 ret
1162+ 9239
1163+ 9239              ; -----------------------------------------------------------------
1164+ 9239              ;
1165+ 9239              ;   19/7/23
1166+ 9239              ;
1167+ 9239              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9239
1169+ 9239 AF           Limpia_Coordenadas_X xor a
1170+ 923A 06 06            ld b,6
1171+ 923C 21 47 89         ld hl,Coordenadas_X_Amadeus
1172+ 923F 77           1 ld (hl),a
1173+ 9240 23               inc hl
1174+ 9241 10 FC            djnz 1B
1175+ 9243 C9               ret
1176+ 9244
1177+ 9244              ; -----------------------------------------------------------------
1178+ 9244              ;
1179+ 9244              ;   25/04/23
1180+ 9244              ;
1181+ 9244
1182+ 9244              Determina_resultado_comparativa
1183+ 9244
1184+ 9244              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9244              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9244              ;
1187+ 9244              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9244              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9244              ;
1190+ 9244              ;   SBC HL,DE
1191+ 9244
1192+ 9244              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9244              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9244
1195+ 9244              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9244              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9244
1198+ 9244
1199+ 9244 3A D9 88         ld a,(Cuad_objeto)
1200+ 9247 FE 02            cp 2
1201+ 9249 28 26            jr z,2F
1202+ 924B 38 24            jr c,2F
1203+ 924D
1204+ 924D              ; Cuadrantes 3º y 4º
1205+ 924D
1206+ 924D E6 01            and 1
1207+ 924F 28 10            jr z,4F
1208+ 9251
1209+ 9251              ; Cuadrante 3º
1210+ 9251
1211+ 9251 7C               ld a,h
1212+ 9252 06 00            ld b,0
1213+ 9254
1214+ 9254 CD DF 92         call Compara_cositas_H3
1215+ 9257
1216+ 9257 04               inc b
1217+ 9258 05               dec b
1218+ 9259 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 925A
1220+ 925A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 925B 06 00            ld b,0
1222+ 925D
1223+ 925D CD F1 92         call Compara_cositas_L3
1224+ 9260 C9               ret
1225+ 9261
1226+ 9261              ; Cuadrante 4º
1227+ 9261
1228+ 9261 7C           4 ld a,h
1229+ 9262 06 00            ld b,0
1230+ 9264
1231+ 9264 CD 03 93         call Compara_cositas_H4
1232+ 9267
1233+ 9267 04               inc b
1234+ 9268 05               dec b
1235+ 9269 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 926A
1237+ 926A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 926B 06 00            ld b,0
1239+ 926D
1240+ 926D CD 19 93         call Compara_cositas_L4
1241+ 9270 C9               ret
1242+ 9271
1243+ 9271              ; Cuadrantes 1º y 2º.
1244+ 9271
1245+ 9271 28 10        2 jr z,3F
1246+ 9273
1247+ 9273              ; 1er Cuadrante
1248+ 9273
1249+ 9273 7C               ld a,h
1250+ 9274 06 00            ld b,0
1251+ 9276
1252+ 9276 CD B7 92         call Compara_cositas_H1
1253+ 9279
1254+ 9279 04               inc b
1255+ 927A 05               dec b
1256+ 927B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 927C
1258+ 927C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 927D 06 00            ld b,0
1260+ 927F
1261+ 927F CD CD 92         call Compara_cositas_L1
1262+ 9282 C9               ret
1263+ 9283
1264+ 9283
1265+ 9283              ; 2º Cuadrante
1266+ 9283
1267+ 9283 7C           3 ld a,h
1268+ 9284 06 00            ld b,0
1269+ 9286
1270+ 9286 CD 93 92         call Compara_cositas_H2
1271+ 9289
1272+ 9289 04               inc b
1273+ 928A 05               dec b
1274+ 928B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 928C
1276+ 928C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 928D 06 00            ld b,0
1278+ 928F
1279+ 928F CD A5 92         call Compara_cositas_L2
1280+ 9292 C9               ret
1281+ 9293
1282+ 9293 A7           Compara_cositas_H2 and a
1283+ 9294 28 0D            jr z,1F
1284+ 9296              ;    cp $fd
1285+ 9296              ;    jr z,1F
1286+ 9296              ;    cp $fe
1287+ 9296              ;    jr z,1F
1288+ 9296 FE FF            cp $ff
1289+ 9298 28 09            jr z,1F
1290+ 929A FE 01            cp $01
1291+ 929C 28 05            jr z,1F
1292+ 929E FE 02            cp $02
1293+ 92A0 28 01            jr z,1F
1294+ 92A2 C0               ret nz
1295+ 92A3 04           1 inc b
1296+ 92A4 C9               ret
1297+ 92A5
1298+ 92A5 A7           Compara_cositas_L2 and a
1299+ 92A6 28 0D            jr z,1F
1300+ 92A8              ;    cp $fd
1301+ 92A8              ;    jr z,1F
1302+ 92A8 FE FE            cp $fe
1303+ 92AA 28 09            jr z,1F
1304+ 92AC FE FF            cp $ff
1305+ 92AE 28 05            jr z,1F
1306+ 92B0 FE 01            cp $01
1307+ 92B2 28 01            jr z,1F
1308+ 92B4              ;    cp $02
1309+ 92B4              ;    jr z,1F
1310+ 92B4 C0               ret nz
1311+ 92B5 04           1 inc b
1312+ 92B6 C9               ret
1313+ 92B7
1314+ 92B7 A7           Compara_cositas_H1 and a
1315+ 92B8 28 11            jr z,1F
1316+ 92BA              ;    cp $fd
1317+ 92BA              ;    jr z,1F
1318+ 92BA              ;    cp $fe
1319+ 92BA              ;    jr z,1F
1320+ 92BA FE FF            cp $ff
1321+ 92BC 28 0D            jr z,1F
1322+ 92BE FE 01            cp $01
1323+ 92C0 28 09            jr z,1F
1324+ 92C2 FE 02            cp $02
1325+ 92C4 28 05            jr z,1F
1326+ 92C6 FE 03            cp $03
1327+ 92C8 28 01            jr z,1F
1328+ 92CA C0               ret nz
1329+ 92CB 04           1 inc b
1330+ 92CC C9               ret
1331+ 92CD
1332+ 92CD A7           Compara_cositas_L1 and a
1333+ 92CE 28 0D            jr z,1F
1334+ 92D0              ;    cp $fd
1335+ 92D0              ;    jr z,1F
1336+ 92D0              ;    cp $fe
1337+ 92D0              ;    jr z,1F
1338+ 92D0              ;    cp $ff
1339+ 92D0              ;    jr z,1F
1340+ 92D0 FE 01            cp $01
1341+ 92D2 28 09            jr z,1F
1342+ 92D4 FE 02            cp $02
1343+ 92D6 28 05            jr z,1F
1344+ 92D8 FE 03            cp $03
1345+ 92DA 28 01            jr z,1F
1346+ 92DC C0               ret nz
1347+ 92DD 04           1 inc b
1348+ 92DE C9               ret
1349+ 92DF
1350+ 92DF A7           Compara_cositas_H3 and a
1351+ 92E0 28 0D            jr z,1F
1352+ 92E2              ;    cp $fd
1353+ 92E2              ;    jr z,1F
1354+ 92E2 FE FE            cp $fe
1355+ 92E4 28 09            jr z,1F
1356+ 92E6 FE FF            cp $ff
1357+ 92E8 28 05            jr z,1F
1358+ 92EA FE 01            cp $01
1359+ 92EC 28 01            jr z,1F
1360+ 92EE              ;    cp $02
1361+ 92EE              ;    jr z,1F
1362+ 92EE              ;    cp $03
1363+ 92EE              ;    jr z,1F
1364+ 92EE C0               ret nz
1365+ 92EF 04           1 inc b
1366+ 92F0 C9               ret
1367+ 92F1
1368+ 92F1 A7           Compara_cositas_L3 and a
1369+ 92F2 28 0D            jr z,1F
1370+ 92F4              ;    cp $fd
1371+ 92F4              ;    jr z,1F
1372+ 92F4              ;    cp $fe
1373+ 92F4              ;    jr z,1F
1374+ 92F4              ;    cp $ff
1375+ 92F4              ;    jr z,1F
1376+ 92F4 FE 01            cp $01
1377+ 92F6 28 09            jr z,1F
1378+ 92F8 FE 02            cp $02
1379+ 92FA 28 05            jr z,1F
1380+ 92FC FE 03            cp $03
1381+ 92FE 28 01            jr z,1F
1382+ 9300 C0               ret nz
1383+ 9301 04           1 inc b
1384+ 9302 C9               ret
1385+ 9303
1386+ 9303 A7           Compara_cositas_H4 and a
1387+ 9304 28 11            jr z,1F
1388+ 9306 FE FD            cp $fd
1389+ 9308 28 0D            jr z,1F
1390+ 930A FE FE            cp $fe
1391+ 930C 28 09            jr z,1F
1392+ 930E FE FF            cp $ff
1393+ 9310 28 05            jr z,1F
1394+ 9312 FE 01            cp $01
1395+ 9314 28 01            jr z,1F
1396+ 9316              ;    cp $02
1397+ 9316              ;    jr z,1F
1398+ 9316              ;    cp $03
1399+ 9316              ;    jr z,1F
1400+ 9316 C0               ret nz
1401+ 9317 04           1 inc b
1402+ 9318 C9               ret
1403+ 9319
1404+ 9319 A7           Compara_cositas_L4 and a
1405+ 931A 28 0D            jr z,1F
1406+ 931C              ;    cp $fd
1407+ 931C              ;    jr z,1F
1408+ 931C FE FE            cp $fe
1409+ 931E 28 09            jr z,1F
1410+ 9320 FE FF            cp $ff
1411+ 9322 28 05            jr z,1F
1412+ 9324 FE 01            cp $01
1413+ 9326 28 01            jr z,1F
1414+ 9328              ;    cp $02
1415+ 9328              ;    jr z,1F
1416+ 9328              ;    cp $03
1417+ 9328              ;    jr z,1F
1418+ 9328 C0               ret nz
1419+ 9329 04           1 inc b
1420+ 932A C9               ret
# file closed: Disparo.asm
1645  932B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 932B              ; ******************************************************************************************************************************************************************************************
   2+ 932B              ;
   3+ 932B              ; 26/06/23
   4+ 932B              ;
   5+ 932B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 932B
   7+ 932B CD 0F 96     Draw call Prepara_draw
   8+ 932E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 932F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9330 28 05        	jr z,2F
  11+ 9332
  12+ 9332 3A D9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9335 18 0C        	jr 1F
  14+ 9337
  15+ 9337 2A D7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 933A 22 C7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 933D CD CC 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9340              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9340 CD 6F 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9343
  21+ 9343 3A EF 88     1 ld a,(Ctrl_0)
  22+ 9346 CB 6F        	bit 5,a
  23+ 9348 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 934A
  25+ 934A CD 62 93     	call Comprueba_limite_horizontal
  26+ 934D CD F2 93     	call Comprueba_limite_vertical
  27+ 9350
  28+ 9350              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9350              ; -----------------------
  30+ 9350              ; -----------------------
  31+ 9350              ; -----------------------
  32+ 9350
  33+ 9350 CD 3F 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9353 CD 76 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9356 CD D5 95     	call Define_rutina_de_impresion
  36+ 9359
  37+ 9359 3A EF 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 935C CB AF        	res 5,a											; _a ser de utilidad.
  39+ 935E 32 EF 88     	ld (Ctrl_0),a
  40+ 9361
  41+ 9361 C9           	ret
  42+ 9362
  43+ 9362              ; *******************************************************************************************************************************************************************************************
  44+ 9362              ;	21/01/23
  45+ 9362              ;
  46+ 9362              ; 	Comprueba_limite_horizontal.
  47+ 9362              ;
  48+ 9362              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9362              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9362              ;
  51+ 9362              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9362              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9362              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9362              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9362
  56+ 9362
  57+ 9362
  58+ 9362 3A EF 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9365 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9367 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9369 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 936B 32 EF 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 936E 18 09            jr 6F
  64+ 9370 CB 5F        1 bit 3,a
  65+ 9372 28 0A            jr z,2F
  66+ 9374 E6 F7            and $f7
  67+ 9376 32 EF 88         ld (Ctrl_0),a
  68+ 9379 CD CC 94     6 call Inicializacion
  69+ 937C 18 5B            jr 5F
  70+ 937E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 937F
  72+ 937F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 937F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 937F
  75+ 937F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9380 2A FD 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9383 CD 2E 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9386 67           	ld h,a
  79+ 9387 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9388 CD 2E 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 938B 67           	ld h,a
  82+ 938C A7           	and a
  83+ 938D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 938F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9390 3A D9 88     	ld a,(Cuad_objeto)
  86+ 9393 FE 02        	cp 2
  87+ 9395 38 1E        	jr c,3F
  88+ 9397 28 1C        	jr z,3F
  89+ 9399 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 939A 28 23            jr z,7F
  91+ 939C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 939E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93A0 E1           	pop hl
  94+ 93A1
  95+ 93A1              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93A1              ; _para indicar con E="2" en caso necesario.
  97+ 93A1
  98+ 93A1 E5               push hl
  99+ 93A2 C5               push bc
 100+ 93A3 CD 2E 99     	call calcula_tercio
 101+ 93A6 FE 01        	cp 1
 102+ 93A8 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93AA CD DA 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93AD 28 26            jr z,9F
 105+ 93AF 38 24            jr c,9F
 106+ 93B1 1E 00        11 ld e,0
 107+ 93B3 18 22            jr 8F
 108+ 93B5 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93B6 28 07        	jr z, 7F
 110+ 93B8 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93BA 1E 00         	ld e,0
 112+ 93BC E1           	pop hl
 113+ 93BD 18 04        	jr 4F
 114+ 93BF 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93C1 18 15            jr 10F
 116+ 93C3
 117+ 93C3              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93C3              ; _para indicar con E="2" en caso necesario.
 119+ 93C3
 120+ 93C3 E5           4 push hl
 121+ 93C4 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93C5 CD 2E 99     	call calcula_tercio
 123+ 93C8 FE 01        	cp 1
 124+ 93CA 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93CC CD DA 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93CF 28 04            jr z,9F
 127+ 93D1 30 02            jr nc,9F
 128+ 93D3 18 02        	jr 8F
 129+ 93D5 1E 02        9 ld e,2
 130+ 93D7 C1           8 pop bc
 131+ 93D8 E1           10 pop hl
 132+ 93D9 C9           5 ret
 133+ 93DA
 134+ 93DA              ; --------------------
 135+ 93DA              ;
 136+ 93DA              ; 25/08/22
 137+ 93DA
 138+ 93DA CD 2E 99     Comprueba_centro call calcula_tercio
 139+ 93DD 67               ld h,a
 140+ 93DE 08           	ex af,af
 141+ 93DF FE 02        	cp 2
 142+ 93E1 38 07        	jr c,1F
 143+ 93E3 28 05        	jr z,1F
 144+ 93E5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93E8 18 03        	jr 2F
 146+ 93EA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93ED 08           2 ex af,af
 148+ 93EE A7               and a
 149+ 93EF ED 42            sbc hl,bc
 150+ 93F1 C9               ret
 151+ 93F2
 152+ 93F2              ; *********************************************************************************************************************************************************************************************
 153+ 93F2              ;
 154+ 93F2              ;   16/8/22
 155+ 93F2              ;
 156+ 93F2              ;	Comprueba_limite_vertical
 157+ 93F2              ;
 158+ 93F2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93F2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93F2              ;
 161+ 93F2
 162+ 93F2 2A C7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93F5 7D           	ld a,l
 164+ 93F6 E6 1F        	and $1F
 165+ 93F8 57           	ld d,a
 166+ 93F9 3A FF 88     	ld a,(Limite_vertical)
 167+ 93FC BA           	cp d 											; Límite - Posición.
 168+ 93FD 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 93FE 3A D9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9401 CB 47        	bit 0,a
 171+ 9403 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9405
 173+ 9405              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9405
 175+ 9405 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9406 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9408
 178+ 9408              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9408              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9408
 181+ 9408 3A CB 88         ld a,(Coordenada_X)
 182+ 940B 16 0F            ld d,Centro_izquierda
 183+ 940D A7               and a
 184+ 940E 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 940F 28 1E            jr z,3F
 186+ 9411 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9413              ;                                                    ; _salimos sin modificar nada.
 188+ 9413 18 0E            jr 2F
 189+ 9415 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9416 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9418
 192+ 9418              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9418              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9418
 195+ 9418 3A CB 88         ld a,(Coordenada_X)
 196+ 941B 16 10            ld d,Centro_derecha
 197+ 941D A7               and a
 198+ 941E 92               sub d
 199+ 941F 28 0E            jr z,3F
 200+ 9421 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9423              ;                                                    ; _salimos sin modificar nada.
 202+ 9423 CB 43        2 bit 0,e
 203+ 9425 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9427 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9428 CD BC 94         call Modificaccionne
 206+ 942B C1           	pop bc
 207+ 942C CD CC 94         call Inicializacion
 208+ 942F C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9430
 210+ 9430              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9430
 212+ 9430 C5           4 push bc
 213+ 9431 01 C6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9434 0A           	ld a,(bc)
 215+ 9435 3D           	dec a
 216+ 9436 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9437 7D           	ld a,l
 218+ 9438 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9439 CB 47        	bit 0,a
 220+ 943B 28 03        	jr z,5F
 221+ 943D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 943E 18 2E        	jr 7F
 223+ 9440
 224+ 9440              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9440
 226+ 9440 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9441 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9442 3A EF 88     	ld a,(Ctrl_0)
 229+ 9445 CB 4F        	bit 1,a
 230+ 9447 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9449 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 944A
 233+ 944A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 944A
 235+ 944A 1C               inc e
 236+ 944B 1D               dec e
 237+ 944C 20 07            jr nz,12F
 238+ 944E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 944F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9450 22 C7 88     	ld (Posicion_actual),hl
 241+ 9453 18 44        13 jr 9F
 242+ 9455 CB 43        12 bit 0,e
 243+ 9457 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9459              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9459 C1           	pop bc
 246+ 945A 18 D3        	jr 3B
 247+ 945C 80           14 add b
 248+ 945D 6F               ld l,a
 249+ 945E 22 C7 88     	ld (Posicion_actual),hl
 250+ 9461 CD BC 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9464 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9466 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9468 32 EF 88         ld (Ctrl_0),a
 254+ 946B F1           	pop af
 255+ 946C 18 2B        	jr 9F
 256+ 946E
 257+ 946E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 946E
 259+ 946E F5           7 push af
 260+ 946F 3A EF 88     	ld a,(Ctrl_0)
 261+ 9472 CB 47        	bit 0,a
 262+ 9474 20 1D        	jr nz,8F
 263+ 9476 F1           	pop af
 264+ 9477
 265+ 9477              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9477
 267+ 9477 1C           	inc e
 268+ 9478 1D               dec e
 269+ 9479 20 07            jr nz,10F
 270+ 947B 90           	sub b
 271+ 947C 6F               ld l,a
 272+ 947D 22 C7 88     	ld (Posicion_actual),hl
 273+ 9480 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9482              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9482 CB 43        10 bit 0,e
 276+ 9484 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9486              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9486 C1           	pop bc
 279+ 9487 18 A6        	jr 3B
 280+ 9489 90           16 sub b
 281+ 948A 6F               ld l,a
 282+ 948B 22 C7 88     	ld (Posicion_actual),hl
 283+ 948E CD BC 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9491 18 06            jr 9F
 285+ 9493 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9495 32 EF 88         ld (Ctrl_0),a
 287+ 9498 F1           	pop af
 288+ 9499 C1           9 pop bc
 289+ 949A 1E 00        	ld e,0
 290+ 949C CD CC 94         call Inicializacion
 291+ 949F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94A0 08           	ex af,af
 293+ 94A1 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94A2 18 8B            jr 3B
 295+ 94A4
 296+ 94A4              ; --------------------
 297+ 94A4
 298+ 94A4 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94A6 CD 2A 96     1 call PreviousScan
 300+ 94A9 10 FB            djnz 1B
 301+ 94AB 22 C7 88     	ld (Posicion_actual),hl
 302+ 94AE AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94AF C9           	ret
 304+ 94B0
 305+ 94B0              ; --------------------
 306+ 94B0
 307+ 94B0 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94B2 CD 1B 96     1 call NextScan
 309+ 94B5 10 FB            djnz 1B
 310+ 94B7 22 C7 88     	ld (Posicion_actual),hl
 311+ 94BA AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94BB C9           	ret
 313+ 94BC
 314+ 94BC              ; --------------------
 315+ 94BC              ;
 316+ 94BC              ;	22/01/23
 317+ 94BC              ;
 318+ 94BC              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94BC              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94BC              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94BC
 322+ 94BC
 323+ 94BC              Modificaccionne
 324+ 94BC
 325+ 94BC 3A D9 88     	ld a,(Cuad_objeto)
 326+ 94BF FE 02        	cp 2
 327+ 94C1 CC A4 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94C4 DC A4 94         call c,Modifica_Pos_actual
 329+ 94C7 C8           	ret z
 330+ 94C8 CD B0 94         call Modifica_Pos_actual2
 331+ 94CB C9               ret
 332+ 94CC
 333+ 94CC              ; *************************************************************************************************************************************************************************************************
 334+ 94CC              ;
 335+ 94CC              ;	13/8/22
 336+ 94CC              ;
 337+ 94CC              ;	Inicializacion
 338+ 94CC              ;
 339+ 94CC              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94CC              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94CC              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94CC              ;
 343+ 94CC              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94CC              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94CC              ;	_ desaparece/aparece.
 346+ 94CC
 347+ 94CC              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94CC              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94CC              ;
 350+ 94CC              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94CC              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94CC              ; 		   [E] ="0"
 353+ 94CC
 354+ 94CC              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94CC
 356+ 94CC CD 2E 99     Inicializacion call calcula_tercio
 357+ 94CF 28 36        	jr z,primit
 358+ 94D1 E6 02        	and 2
 359+ 94D3 20 07        	jr nz,segmit
 360+ 94D5 7D           	ld a,l
 361+ 94D6 FE 7F        	cp $7f
 362+ 94D8 38 2D        	jr c,primit
 363+ 94DA 28 2B        	jr z,primit
 364+ 94DC CD 39 95     segmit call column
 365+ 94DF 38 13        	jr c,tercuad
 366+ 94E1 3E 04        cuarcuad ld a,4
 367+ 94E3 32 D9 88     	ld (Cuad_objeto),a
 368+ 94E6 21 20 48     	ld hl,$4820
 369+ 94E9 22 FD 88     	ld (Limite_horizontal),hl
 370+ 94EC 21 FF 88     	ld hl,Limite_vertical
 371+ 94EF 36 0D        	ld (hl),$0d
 372+ 94F1 08           	ex af,af
 373+ 94F2 18 3C        	jr 1F
 374+ 94F4              tercuad
 375+ 94F4 3E 03        	ld a,3
 376+ 94F6 32 D9 88     	ld (Cuad_objeto),a
 377+ 94F9 21 20 48     	ld hl,$4820
 378+ 94FC 22 FD 88     	ld (Limite_horizontal),hl
 379+ 94FF 21 FF 88     	ld hl,Limite_vertical
 380+ 9502 36 12        	ld (hl),$12
 381+ 9504 08           	ex af,af
 382+ 9505 18 29        	jr 1F
 383+ 9507 CD 39 95     primit call column
 384+ 950A 38 13        	jr c, primcuad
 385+ 950C              segcuad
 386+ 950C 3E 02        	ld a,2
 387+ 950E 32 D9 88     	ld (Cuad_objeto),a
 388+ 9511 21 C0 4F     	ld hl,$4fc0
 389+ 9514 22 FD 88     	ld (Limite_horizontal),hl
 390+ 9517 21 FF 88     	ld hl,Limite_vertical
 391+ 951A 36 0D        	ld (hl),$0d
 392+ 951C 08           	ex af,af
 393+ 951D 18 11        	jr 1F
 394+ 951F              primcuad
 395+ 951F 3E 01        	ld a,1
 396+ 9521 32 D9 88     	ld (Cuad_objeto),a
 397+ 9524 21 C0 4F     	ld hl,$4fc0
 398+ 9527 22 FD 88     	ld (Limite_horizontal),hl
 399+ 952A 21 FF 88     	ld hl,Limite_vertical
 400+ 952D 36 12        	ld (hl),$12
 401+ 952F 08           	ex af,af
 402+ 9530 CD B9 9C     1 call Genera_coordenadas
 403+ 9533 21 EF 88     	ld hl,Ctrl_0
 404+ 9536 CB EE        	set 5,(hl)
 405+ 9538 C9           	ret
 406+ 9539
 407+ 9539              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9539
 409+ 9539              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9539              ;
 411+ 9539              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9539
 413+ 9539 7D           column ld a,l
 414+ 953A E6 1F        	and $1f
 415+ 953C FE 10         	cp $10
 416+ 953E C9            	ret
 417+ 953F
 418+ 953F              ; --------------------------------------------------------------------------------------------------------------------
 419+ 953F              ;
 420+ 953F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 953F              ;
 422+ 953F              ; 14/12/22
 423+ 953F              ;
 424+ 953F              ;	Modifica: A y BC.
 425+ 953F
 426+ 953F 3A D9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9542 E6 01        	and 1
 428+ 9544 28 17        	jr z,1F
 429+ 9546
 430+ 9546              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9546
 432+ 9546 3A CB 88     	ld a,(Coordenada_X)
 433+ 9549 47           	ld b,a
 434+ 954A 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 954B 79           	ld a,c
 436+ 954C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 954D 38 08        	jr c,2F
 438+ 954F 47           	ld b,a
 439+ 9550 79           	ld a,c
 440+ 9551 90           	sub b
 441+ 9552 32 FC 88     	ld (Columnas),a
 442+ 9555 18 1B        	jr 4F
 443+ 9557 79           2 ld a,c
 444+ 9558 32 FC 88     	ld (Columnas),a
 445+ 955B 18 15        	jr 4F
 446+ 955D
 447+ 955D              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 955D
 449+ 955D 3A CB 88     1 ld a,(Coordenada_X)
 450+ 9560 81           	add c
 451+ 9561 3D           	dec a
 452+ 9562 D6 1F        	sub $1f
 453+ 9564 38 08        	jr c,3F
 454+ 9566 47           	ld b,a
 455+ 9567 79           	ld a,c
 456+ 9568 90           	sub b
 457+ 9569 32 FC 88     	ld (Columnas),a
 458+ 956C 18 04        	jr 4F
 459+ 956E 79           3 ld a,c
 460+ 956F 32 FC 88     	ld (Columnas),a
 461+ 9572 D9           4 exx
 462+ 9573 4F           	ld c,a
 463+ 9574 D9           	exx
 464+ 9575 C9            ret
 465+ 9576
 466+ 9576              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9576              ;
 468+ 9576              ;   19/7/23
 469+ 9576              ;
 470+ 9576              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9576              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9576              ;
 473+ 9576              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9576              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9576              ;
 476+ 9576              ;	DESTRUYE: HL,B Y A.
 477+ 9576
 478+ 9576 3A D9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9579 FE 02        	cp 2
 480+ 957B 38 18        	jr c,1F
 481+ 957D 28 16        	jr z,1F
 482+ 957F E6 01        	and 1
 483+ 9581 28 0D        	jr z,3F
 484+ 9583
 485+ 9583              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9583
 487+ 9583 CD C9 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9586
 489+ 9586 7D           9 ld a,l
 490+ 9587 E6 1F        	and $1f
 491+ 9589 28 2A        	jr z,7F
 492+ 958B 2B           	dec hl
 493+ 958C 10 F8        	djnz 9B
 494+ 958E 18 25        	jr 7F
 495+ 9590
 496+ 9590              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9590
 498+ 9590 2A C7 88     3 ld hl,(Posicion_actual)
 499+ 9593 18 20        	jr 7F
 500+ 9595
 501+ 9595 28 14        1 jr z,2F
 502+ 9597
 503+ 9597              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9597
 505+ 9597 CD C9 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 959A
 507+ 959A 7D           4 ld a,l
 508+ 959B E6 1F        	and $1f
 509+ 959D 28 03        	jr z,6F
 510+ 959F 2B           	dec hl
 511+ 95A0 10 F8        	djnz 4B
 512+ 95A2 06 0F        6 ld b,15
 513+ 95A4 CD 2A 96     5 call PreviousScan
 514+ 95A7 10 FB        	djnz 5B
 515+ 95A9 18 0A        	jr 7F
 516+ 95AB
 517+ 95AB              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95AB
 519+ 95AB CD C9 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95AE 06 0F        	ld b,15
 521+ 95B0 CD 2A 96     8 call PreviousScan
 522+ 95B3 10 FB        	djnz 8B
 523+ 95B5
 524+ 95B5 E5           7 push hl
 525+ 95B6 DD E1        	pop ix
 526+ 95B8
 527+ 95B8 2A C9 88     	ld hl,(Puntero_objeto)
 528+ 95BB E5           	push hl
 529+ 95BC FD E1        	pop iy
 530+ 95BE
 531+ 95BE              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95BE
 533+ 95BE 3A EF 88     	ld a,(Ctrl_0)
 534+ 95C1 CB 77        	bit 6,a
 535+ 95C3 C8           	ret z
 536+ 95C4
 537+ 95C4              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95C4              ; _ entidad / Amadeus´.
 539+ 95C4
 540+ 95C4 DD 22 4D 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95C8
 542+ 95C8 C9           	ret
 543+ 95C9
 544+ 95C9              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95C9              ;
 546+ 95C9              ;	2/1/23
 547+ 95C9              ;
 548+ 95C9              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95C9              ;
 550+ 95C9              ;	Tras esta rutina tenemos:
 551+ 95C9              ;
 552+ 95C9              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95C9              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95C9              ;
 555+ 95C9              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95C9
 557+ 95C9 2A C7 88     Operandos ld hl,(Posicion_actual)
 558+ 95CC 3A FC 88     	ld a,(Columnas)
 559+ 95CF 3D           	dec a
 560+ 95D0 20 01        	jr nz,1F
 561+ 95D2 3C           	inc a
 562+ 95D3 47           1 ld b,a
 563+ 95D4 C9           	ret
 564+ 95D5
 565+ 95D5              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95D5              ;
 567+ 95D5              ;	3/1/23
 568+ 95D5              ;
 569+ 95D5              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95D5              ;
 571+ 95D5              ;	Destruye: A,B,HL y DE.
 572+ 95D5
 573+ 95D5              Define_rutina_de_impresion
 574+ 95D5
 575+ 95D5 3A C6 88     	ld a,(Columns)
 576+ 95D8 47           	ld b,a
 577+ 95D9 3A FC 88     	ld a,(Columnas)
 578+ 95DC B8           	cp b
 579+ 95DD 20 0D        	jr nz,2f
 580+ 95DF
 581+ 95DF              ;	La entidad se imprime entera.
 582+ 95DF
 583+ 95DF 21 FE 96     	ld hl, Indice_entidades_completas
 584+ 95E2 E6 01        	and 1
 585+ 95E4 28 02        	jr z,1F
 586+ 95E6
 587+ 95E6 23           	inc hl
 588+ 95E7 23           	inc hl
 589+ 95E8
 590+ 95E8 CD 7F 8C     1 call Extrae_address
 591+ 95EB C9           	ret		;	ret
 592+ 95EC
 593+ 95EC              ;	La entidad no se imprime entera en pantalla.
 594+ 95EC
 595+ 95EC 3A D9 88     2 ld a,(Cuad_objeto)
 596+ 95EF E6 01        	and 1
 597+ 95F1 28 17        	jr z,3F
 598+ 95F3
 599+ 95F3              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95F3
 601+ 95F3 21 02 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95F6 3A C6 88     4 ld a,(Columns)
 603+ 95F9 E6 01        	and 1
 604+ 95FB 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 95FD
 606+ 95FD 23           	inc hl
 607+ 95FE 23           	inc hl
 608+ 95FF
 609+ 95FF 3A FC 88     	ld a,(Columnas)
 610+ 9602 E6 01        	and 1
 611+ 9604 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9606
 613+ 9606 23           	inc hl
 614+ 9607 23           	inc hl
 615+ 9608
 616+ 9608 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 960A
 618+ 960A 21 08 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 960D 18 E7        	jr 4B
 620+ 960F
 621+ 960F              ; --------------------------------------------------------------------------------------------------------------------
 622+ 960F              ;
 623+ 960F              ;	Prepara_draw
 624+ 960F              ;
 625+ 960F              ;	Es una rutina de carga.
 626+ 960F              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 960F              ;
 628+ 960F              ;	FUNCIONAMIENTO:
 629+ 960F              ;
 630+ 960F              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 960F              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 960F              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 960F              ;
 634+ 960F              ;	DESTRUYE:
 635+ 960F              ;
 636+ 960F              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 960F
 638+ 960F 21 C5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9612 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9613 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9614 4E           	ld c,(hl)
 642+ 9615 2A C7 88     	ld hl,(Posicion_actual)
 643+ 9618 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 961A C9           	ret
 645+ 961B
 646+ 961B              ;----------------------------------------------------------------------------------------------------------------
 647+ 961B              ;
 648+ 961B              ;	5/08/22
 649+ 961B              ;
 650+ 961B              ;   NextScan.
 651+ 961B              ;
 652+ 961B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 961B              ;
 654+ 961B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 961B              ;
 656+ 961B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 961B              ;
 658+ 961B              ;       DESTRUIDOS: AF y HL !!!
 659+ 961B              ;
 660+ 961B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 961B              ;
 662+ 961B
 663+ 961B 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 961C 7C               ld a,h
 665+ 961D E6 07            and 7
 666+ 961F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9620
 668+ 9620 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9621 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9623 6F               ld l,a
 671+ 9624 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9625
 673+ 9625 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9626 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9628 67               ld h,a
 676+ 9629 C9               ret
 677+ 962A
 678+ 962A              ;----------------------------------------------------------------------------------------------------------------
 679+ 962A              ;
 680+ 962A              ;	5/08/22
 681+ 962A              ;
 682+ 962A              ;   PreviousScan.
 683+ 962A              ;
 684+ 962A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 962A              ;
 686+ 962A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 962A              ;
 688+ 962A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 962A              ;
 690+ 962A              ;       DESTRUIDOS: AF y HL !!!
 691+ 962A              ;
 692+ 962A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 962A              ;
 694+ 962A
 695+ 962A 7C           PreviousScan ld a,h
 696+ 962B 25               dec h               ; Dec H.
 697+ 962C E6 07            and 7
 698+ 962E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 962F
 700+ 962F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9630 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9632 6F               ld l,a
 703+ 9633 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9634
 705+ 9634 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9635 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9637 67               ld h,a
 708+ 9638 C9               ret
 709+ 9639
 710+ 9639              ; -----------------------------------------------------------------------------------
 711+ 9639              ;
 712+ 9639              ;	31/7/23
 713+ 9639              ;
 714+ 9639              ;	Rutina principal de pintado de entidades.
 715+ 9639              ;	Extrae la foto del frame, (entidades).
 716+ 9639
 717+ 9639              Extrae_foto_entidades
 718+ 9639
 719+ 9639 21 01 70     	ld hl,Album_de_fotos+1
 720+ 963C 7E           	ld a,(hl)
 721+ 963D A7           	and a
 722+ 963E C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 963F
 724+ 963F              ;	No hay datos, (entidades para pintar en este frame).
 725+ 963F
 726+ 963F 3A 0E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9642 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9643 C8           	ret z
 729+ 9644
 730+ 9644              ; -----------------------------------
 731+ 9644
 732+ 9644 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9648 31 00 70     	ld sp,Album_de_fotos
 734+ 964B
 735+ 964B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 964D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 964E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 964F
 739+ 964F ED 73 15 89  	ld (Stack_2),sp
 740+ 9653 ED 7B 13 89  	ld sp,(Stack)
 741+ 9657
 742+ 9657              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9657
 744+ 9657 3E CD        	ld a,$cd
 745+ 9659 32 61 96     	ld (Imprime),a
 746+ 965C EB           	ex de,hl
 747+ 965D 22 62 96     	ld (Imprime+1),hl
 748+ 9660 EB           	ex de,hl
 749+ 9661
 750+ 9661              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9661
 752+ 9661 00 00 00     Imprime db 0,0,0
 753+ 9664
 754+ 9664 ED 73 13 89  	ld (Stack),sp
 755+ 9668
 756+ 9668 3A 0E 89     	ld a,(Numero_de_malotes)
 757+ 966B 3D           	dec a
 758+ 966C 28 09        	jr z,1F
 759+ 966E 32 0E 89      	ld (Numero_de_malotes),a
 760+ 9671
 761+ 9671 ED 7B 15 89  	ld sp,(Stack_2)
 762+ 9675 18 D4        	jr 2B
 763+ 9677
 764+ 9677 AF           1 xor a
 765+ 9678 32 15 89     	ld (Stack_2),a
 766+ 967B
 767+ 967B C9           	ret
 768+ 967C
 769+ 967C              ; -----------------------------------------------------------------------------------
 770+ 967C              ;
 771+ 967C              ;	28/2/23
 772+ 967C              ;
 773+ 967C              ;	Pinta los disparos generados.
 774+ 967C
 775+ 967C              Extrae_foto_disparos
 776+ 967C
 777+ 967C 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 967F 7E               ld a,(hl)
 779+ 9680 A7               and a
 780+ 9681 C8               ret z
 781+ 9682
 782+ 9682 3A 3D 89     	ld a,(Numero_de_disparotes)
 783+ 9685 A7           	and a
 784+ 9686 C8           	ret z
 785+ 9687 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 968B 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 968E
 788+ 968E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9690 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9691 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9692
 792+ 9692 ED 73 15 89  	ld (Stack_2),sp
 793+ 9696 ED 7B 13 89  	ld sp,(Stack)
 794+ 969A
 795+ 969A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 969A
 797+ 969A 3E CD        	ld a,$cd
 798+ 969C 32 A4 96     	ld (Imprime2),a
 799+ 969F EB           	ex de,hl
 800+ 96A0 22 A5 96     	ld (Imprime2+1),hl
 801+ 96A3 EB           	ex de,hl
 802+ 96A4
 803+ 96A4              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96A4
 805+ 96A4 00 00 00     Imprime2 db 0,0,0
 806+ 96A7
 807+ 96A7 3A 3D 89     	ld a,(Numero_de_disparotes)
 808+ 96AA 3D           	dec a
 809+ 96AB 28 09        	jr z,1F
 810+ 96AD 32 3D 89      	ld (Numero_de_disparotes),a
 811+ 96B0
 812+ 96B0 ED 7B 15 89  	ld sp,(Stack_2)
 813+ 96B4 18 D8        	jr 2B
 814+ 96B6
 815+ 96B6 AF           1 xor a
 816+ 96B7 32 15 89     	ld (Stack_2),a
 817+ 96BA C9           	ret
 818+ 96BB
 819+ 96BB              ; -----------------------------------------------------------------------------------
 820+ 96BB              ;
 821+ 96BB              ;	4/9/23
 822+ 96BB              ;
 823+ 96BB              ;	Rutina principal de pintado de Amadeus.
 824+ 96BB              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96BB
 826+ 96BB 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96BE 7E           	ld a,(hl)
 828+ 96BF A7           	and a
 829+ 96C0 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96C1
 831+ 96C1 3A 0E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96C4 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96C5 C8           	ret z
 834+ 96C6
 835+ 96C6              ; -----------------------------------
 836+ 96C6
 837+ 96C6 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96CA 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96CD
 840+ 96CD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96CF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96D0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96D1
 844+ 96D1 ED 73 15 89  	ld (Stack_2),sp
 845+ 96D5 ED 7B 13 89  	ld sp,(Stack)
 846+ 96D9
 847+ 96D9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96D9
 849+ 96D9 3E CD        	ld a,$cd
 850+ 96DB 32 E3 96     	ld (Imprime_Amadeus),a
 851+ 96DE EB           	ex de,hl
 852+ 96DF 22 E4 96     	ld (Imprime_Amadeus+1),hl
 853+ 96E2 EB           	ex de,hl
 854+ 96E3
 855+ 96E3              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96E3
 857+ 96E3 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96E6
 859+ 96E6 ED 73 13 89  	ld (Stack),sp
 860+ 96EA
 861+ 96EA 3A 0E 89     	ld a,(Numero_de_malotes)
 862+ 96ED 3D           	dec a
 863+ 96EE 28 09        	jr z,1F
 864+ 96F0 32 0E 89      	ld (Numero_de_malotes),a
 865+ 96F3
 866+ 96F3 ED 7B 15 89  	ld sp,(Stack_2)
 867+ 96F7 18 D4        	jr 2B
 868+ 96F9
 869+ 96F9 AF           1 xor a
 870+ 96FA 32 15 89     	ld (Stack_2),a
 871+ 96FD
 872+ 96FD C9           	ret
# file closed: Draw_XOR.asm
1646  96FE              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96FE              ;   índices de Rutinas de impresión.
   2+ 96FE
   3+ 96FE 0E 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9700 3B 97            defw Pinta_Amadeus_3x2
   5+ 9702
   6+ 9702 91 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9704 31 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9706 E5 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9708
  10+ 9708 BB 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 970A BF 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 970C 73 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 970E
  14+ 970E
  15+ 970E              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 970E              ;
  17+ 970E              ;   12/12/22
  18+ 970E              ;
  19+ 970E              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 970E              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 970E              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 970E              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 970E              ;
  24+ 970E              ;   Modifica: DE y HL.
  25+ 970E
  26+ 970E ED 73 13 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9712 FD F9        	ld sp,iy
  28+ 9714 06 10            ld b,16
  29+ 9716 D1           1 pop de
  30+ 9717 7B               ld a,e
  31+ 9718 AE               xor (hl)
  32+ 9719 77           	ld (hl),a
  33+ 971A 23           	inc hl
  34+ 971B 7A               ld a,d
  35+ 971C AE               xor (hl)
  36+ 971D 77           	ld (hl),a
  37+ 971E 2B           	dec hl
  38+ 971F 24           	inc h
  39+ 9720 7C               ld a,h
  40+ 9721 E6 07            and 7
  41+ 9723 20 0A            jr nz,2F
  42+ 9725 7D               ld a,l
  43+ 9726 C6 20            add a,$20
  44+ 9728 6F               ld l,a
  45+ 9729 38 04            jr c,2F
  46+ 972B 7C               ld a,h
  47+ 972C D6 08            sub 8
  48+ 972E 67               ld h,a
  49+ 972F 7C           2 ld a,h
  50+ 9730 FE 58            cp $58
  51+ 9732 28 02            jr z,3F
  52+ 9734 10 E0            djnz 1B
  53+ 9736 ED 7B 13 89  3 ld sp,(Stack)
  54+ 973A C9           	ret
  55+ 973B
  56+ 973B ED 73 13 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 973F FD F9        	ld sp,iy
  58+ 9741 06 08            ld b,8
  59+ 9743 D1           1 pop de
  60+ 9744 7B               ld a,e
  61+ 9745 AE               xor (hl)
  62+ 9746 77           	ld (hl),a
  63+ 9747 23           	inc hl
  64+ 9748 7A               ld a,d
  65+ 9749 AE               xor (hl)
  66+ 974A 77           	ld (hl),a
  67+ 974B 23           	inc hl
  68+ 974C D1           	pop de
  69+ 974D 7B               ld a,e
  70+ 974E AE               xor (hl)
  71+ 974F 77           	ld (hl),a
  72+ 9750 2B           	dec hl
  73+ 9751 2B           	dec hl
  74+ 9752 24           	inc h
  75+ 9753 7C               ld a,h
  76+ 9754 E6 07            and 7
  77+ 9756 20 0A            jr nz,2F
  78+ 9758 7D               ld a,l
  79+ 9759 C6 20            add a,$20
  80+ 975B 6F               ld l,a
  81+ 975C 38 04            jr c,2F
  82+ 975E 7C               ld a,h
  83+ 975F D6 08            sub 8
  84+ 9761 67               ld h,a
  85+ 9762 7C           2 ld a,h
  86+ 9763 FE 58            cp $58
  87+ 9765 28 25            jr z,4F
  88+ 9767 7A               ld a,d
  89+ 9768 AE               xor (hl)
  90+ 9769 77               ld (hl),a
  91+ 976A D1           	pop de
  92+ 976B 23           	inc hl
  93+ 976C 7B               ld a,e
  94+ 976D AE               xor (hl)
  95+ 976E 77           	ld (hl),a
  96+ 976F 23           	inc hl
  97+ 9770 7A               ld a,d
  98+ 9771 AE               xor (hl)
  99+ 9772 77           	ld (hl),a
 100+ 9773 2B           	dec hl
 101+ 9774 2B           	dec hl
 102+ 9775 24           	inc h
 103+ 9776 7C               ld a,h
 104+ 9777 E6 07            and 7
 105+ 9779 20 0A            jr nz,3F
 106+ 977B 7D               ld a,l
 107+ 977C C6 20            add a,$20
 108+ 977E 6F               ld l,a
 109+ 977F 38 04            jr c,3F
 110+ 9781 7C               ld a,h
 111+ 9782 D6 08            sub 8
 112+ 9784 67               ld h,a
 113+ 9785 7C           3 ld a,h
 114+ 9786 FE 58            cp $58
 115+ 9788 28 02            jr z,4F
 116+ 978A 10 B7            djnz 1B
 117+ 978C ED 7B 13 89  4 ld sp,(Stack)
 118+ 9790 C9           	ret
 119+ 9791
 120+ 9791              ; ---------------------------------------------------
 121+ 9791
 122+ 9791 ED 73 13 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9795 FD F9        	ld sp,iy
 124+ 9797
 125+ 9797              ; >>>
 126+ 9797
 127+ 9797 06 10            ld b,16
 128+ 9799 D1           1 pop de
 129+ 979A 7A           	ld a,d
 130+ 979B AE           	xor (hl)
 131+ 979C 77           	ld (hl),a
 132+ 979D 24           	inc h
 133+ 979E 7C               ld a,h
 134+ 979F E6 07            and 7
 135+ 97A1 20 0C            jr nz,2F
 136+ 97A3 7D               ld a,l
 137+ 97A4 C6 20            add a,$20
 138+ 97A6 6F               ld l,a
 139+ 97A7 38 06            jr c,2F
 140+ 97A9 7C               ld a,h
 141+ 97AA D6 08            sub 8
 142+ 97AC 67               ld h,a
 143+ 97AD 18 00            jr 2F
 144+ 97AF 7C           2 ld a,h
 145+ 97B0 FE 58            cp $58
 146+ 97B2 28 02            jr z,3F
 147+ 97B4 10 E3            djnz 1B
 148+ 97B6 ED 7B 13 89  3 ld sp,(Stack)
 149+ 97BA C9           	ret
 150+ 97BB
 151+ 97BB ED 73 13 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97BF FD F9        	ld sp,iy
 153+ 97C1
 154+ 97C1              ; >>>
 155+ 97C1
 156+ 97C1 06 10            ld b,16
 157+ 97C3 D1           1 pop de
 158+ 97C4 7B           	ld a,e
 159+ 97C5 AE           	xor (hl)
 160+ 97C6 77           	ld (hl),a
 161+ 97C7 24           	inc h
 162+ 97C8 7C               ld a,h
 163+ 97C9 E6 07            and 7
 164+ 97CB 20 0C            jr nz,2F
 165+ 97CD 7D               ld a,l
 166+ 97CE C6 20            add a,$20
 167+ 97D0 6F               ld l,a
 168+ 97D1 38 06            jr c,2F
 169+ 97D3 7C               ld a,h
 170+ 97D4 D6 08            sub 8
 171+ 97D6 67               ld h,a
 172+ 97D7 18 00            jr 2F
 173+ 97D9 7C           2 ld a,h
 174+ 97DA FE 58            cp $58
 175+ 97DC 28 02            jr z,3F
 176+ 97DE 10 E3            djnz 1B
 177+ 97E0 ED 7B 13 89  3 ld sp,(Stack)
 178+ 97E4 C9           	ret
 179+ 97E5
 180+ 97E5              ; ---------------------------------------------------
 181+ 97E5
 182+ 97E5 ED 73 13 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97E9 FD F9        	ld sp,iy
 184+ 97EB 06 08            ld b,8
 185+ 97ED D1           1 pop de
 186+ 97EE 7A           	ld a,d
 187+ 97EF AE           	xor (hl)
 188+ 97F0 77           	ld (hl),a
 189+ 97F1 23           	inc hl
 190+ 97F2 D1           	pop de
 191+ 97F3 7B           	ld a,e
 192+ 97F4 AE           	xor (hl)
 193+ 97F5 77           	ld (hl),a
 194+ 97F6 2B           	dec hl
 195+ 97F7 24            	inc h
 196+ 97F8 7C               ld a,h
 197+ 97F9 E6 07            and 7
 198+ 97FB 20 0A            jr nz,2F
 199+ 97FD 7D               ld a,l
 200+ 97FE C6 20            add a,$20
 201+ 9800 6F               ld l,a
 202+ 9801 38 04            jr c,2F
 203+ 9803 7C               ld a,h
 204+ 9804 D6 08            sub 8
 205+ 9806 67               ld h,a
 206+ 9807 7C           2 ld a,h
 207+ 9808 FE 58            cp $58
 208+ 980A 28 20            jr z,4F
 209+ 980C D1               pop de
 210+ 980D 7B           	ld a,e
 211+ 980E AE           	xor (hl)
 212+ 980F 77           	ld (hl),a
 213+ 9810 23           	inc hl
 214+ 9811 7A           	ld a,d
 215+ 9812 AE           	xor (hl)
 216+ 9813 77           	ld (hl),a
 217+ 9814 2B           	dec hl
 218+ 9815 24           	inc h
 219+ 9816 7C               ld a,h
 220+ 9817 E6 07            and 7
 221+ 9819 20 0A            jr nz,3F
 222+ 981B 7D               ld a,l
 223+ 981C C6 20            add a,$20
 224+ 981E 6F               ld l,a
 225+ 981F 38 04            jr c,3F
 226+ 9821 7C               ld a,h
 227+ 9822 D6 08            sub 8
 228+ 9824 67               ld h,a
 229+ 9825 7C           3 ld a,h
 230+ 9826 FE 58            cp $58
 231+ 9828 28 02            jr z,4F
 232+ 982A 10 C1            djnz 1B
 233+ 982C ED 7B 13 89  4 ld sp,(Stack)
 234+ 9830 C9           	ret
 235+ 9831
 236+ 9831 ED 73 13 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9835 FD F9        	ld sp,iy
 238+ 9837 06 08            ld b,8
 239+ 9839 D1           1 pop de
 240+ 983A D1           	pop de
 241+ 983B 7B           	ld a,e
 242+ 983C AE           	xor (hl)
 243+ 983D 77           	ld (hl),a
 244+ 983E 24            	inc h
 245+ 983F 7C               ld a,h
 246+ 9840 E6 07            and 7
 247+ 9842 20 0A            jr nz,2F
 248+ 9844 7D               ld a,l
 249+ 9845 C6 20            add a,$20
 250+ 9847 6F               ld l,a
 251+ 9848 38 04            jr c,2F
 252+ 984A 7C               ld a,h
 253+ 984B D6 08            sub 8
 254+ 984D 67               ld h,a
 255+ 984E 7C           2 ld a,h
 256+ 984F FE 58            cp $58
 257+ 9851 28 1B            jr z,4F
 258+ 9853 D1               pop de
 259+ 9854 7A           	ld a,d
 260+ 9855 AE           	xor (hl)
 261+ 9856 77           	ld (hl),a
 262+ 9857 24           	inc h
 263+ 9858 7C               ld a,h
 264+ 9859 E6 07            and 7
 265+ 985B 20 0A            jr nz,3F
 266+ 985D 7D               ld a,l
 267+ 985E C6 20            add a,$20
 268+ 9860 6F               ld l,a
 269+ 9861 38 04            jr c,3F
 270+ 9863 7C               ld a,h
 271+ 9864 D6 08            sub 8
 272+ 9866 67               ld h,a
 273+ 9867 7C           3 ld a,h
 274+ 9868 FE 58            cp $58
 275+ 986A 28 02            jr z,4F
 276+ 986C 10 CB            djnz 1B
 277+ 986E ED 7B 13 89  4 ld sp,(Stack)
 278+ 9872 C9           	ret
 279+ 9873
 280+ 9873 ED 73 13 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9877 FD F9        	ld sp,iy
 282+ 9879 06 08            ld b,8
 283+ 987B D1           1 pop de
 284+ 987C 7B           	ld a,e
 285+ 987D AE           	xor (hl)
 286+ 987E 77           	ld (hl),a
 287+ 987F 23           	inc hl
 288+ 9880 7A           	ld a,d
 289+ 9881 AE           	xor (hl)
 290+ 9882 77           	ld (hl),a
 291+ 9883 2B           	dec hl
 292+ 9884 24             	inc h
 293+ 9885 7C               ld a,h
 294+ 9886 E6 07            and 7
 295+ 9888 20 0A            jr nz,2F
 296+ 988A 7D               ld a,l
 297+ 988B C6 20            add a,$20
 298+ 988D 6F               ld l,a
 299+ 988E 38 04            jr c,2F
 300+ 9890 7C               ld a,h
 301+ 9891 D6 08            sub 8
 302+ 9893 67               ld h,a
 303+ 9894 7C           2 ld a,h
 304+ 9895 FE 58            cp $58
 305+ 9897 28 21            jr z,4F
 306+ 9899 D1               pop de
 307+ 989A 7A           	ld a,d
 308+ 989B AE           	xor (hl)
 309+ 989C 77           	ld (hl),a
 310+ 989D 23           	inc hl
 311+ 989E D1               pop de
 312+ 989F 7B           	ld a,e
 313+ 98A0 AE           	xor (hl)
 314+ 98A1 77           	ld (hl),a
 315+ 98A2 2B           	dec hl
 316+ 98A3 24           	inc h
 317+ 98A4 7C               ld a,h
 318+ 98A5 E6 07            and 7
 319+ 98A7 20 0A            jr nz,3F
 320+ 98A9 7D               ld a,l
 321+ 98AA C6 20            add a,$20
 322+ 98AC 6F               ld l,a
 323+ 98AD 38 04            jr c,3F
 324+ 98AF 7C               ld a,h
 325+ 98B0 D6 08            sub 8
 326+ 98B2 67               ld h,a
 327+ 98B3 7C           3 ld a,h
 328+ 98B4 FE 58            cp $58
 329+ 98B6 28 02            jr z,4F
 330+ 98B8 10 C1            djnz 1B
 331+ 98BA ED 7B 13 89  4 ld sp,(Stack)
 332+ 98BE C9           	ret
 333+ 98BF
 334+ 98BF ED 73 13 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98C3 FD F9        	ld sp,iy
 336+ 98C5 06 08            ld b,8
 337+ 98C7 D1           1 pop de
 338+ 98C8 7B           	ld a,e
 339+ 98C9 AE           	xor (hl)
 340+ 98CA 77           	ld (hl),a
 341+ 98CB 24            	inc h
 342+ 98CC 7C               ld a,h
 343+ 98CD E6 07            and 7
 344+ 98CF 20 0A            jr nz,2F
 345+ 98D1 7D               ld a,l
 346+ 98D2 C6 20            add a,$20
 347+ 98D4 6F               ld l,a
 348+ 98D5 38 04            jr c,2F
 349+ 98D7 7C               ld a,h
 350+ 98D8 D6 08            sub 8
 351+ 98DA 67               ld h,a
 352+ 98DB 7C           2 ld a,h
 353+ 98DC FE 58            cp $58
 354+ 98DE 28 1C            jr z,4F
 355+ 98E0 D1               pop de
 356+ 98E1 7A           	ld a,d
 357+ 98E2 AE           	xor (hl)
 358+ 98E3 77           	ld (hl),a
 359+ 98E4 24           	inc h
 360+ 98E5 7C               ld a,h
 361+ 98E6 E6 07            and 7
 362+ 98E8 20 0A            jr nz,3F
 363+ 98EA 7D               ld a,l
 364+ 98EB C6 20            add a,$20
 365+ 98ED 6F               ld l,a
 366+ 98EE 38 04            jr c,3F
 367+ 98F0 7C               ld a,h
 368+ 98F1 D6 08            sub 8
 369+ 98F3 67               ld h,a
 370+ 98F4 7C           3 ld a,h
 371+ 98F5 FE 58            cp $58
 372+ 98F7 28 03            jr z,4F
 373+ 98F9 D1               pop de
 374+ 98FA 10 CB            djnz 1B
 375+ 98FC ED 7B 13 89  4 ld sp,(Stack)
 376+ 9900 C9           	ret
 377+ 9901
 378+ 9901              ; ---------------------------------------------------
 379+ 9901              ;
 380+ 9901              ;   27/02/23
 381+ 9901              ;
 382+ 9901              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9901              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9901              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9901
 386+ 9901 ED 73 13 89  Pinta_Disparo ld (Stack),sp
 387+ 9905 FD F9            ld sp,iy
 388+ 9907 06 03            ld b,3
 389+ 9909 D1           1 pop de
 390+ 990A 7B               ld a,e
 391+ 990B AE               xor (hl)
 392+ 990C 77               ld (hl),a
 393+ 990D 23               inc hl
 394+ 990E 7A               ld a,d
 395+ 990F AE               xor (hl)
 396+ 9910 77               ld (hl),a
 397+ 9911 2B               dec hl
 398+ 9912
 399+ 9912 24               inc h
 400+ 9913 7C               ld a,h
 401+ 9914 E6 07            and 7
 402+ 9916 20 0A            jr nz,2F
 403+ 9918 7D               ld a,l
 404+ 9919 C6 20            add a,$20
 405+ 991B 6F               ld l,a
 406+ 991C 38 04            jr c,2F
 407+ 991E 7C               ld a,h
 408+ 991F D6 08            sub 8
 409+ 9921 67               ld h,a
 410+ 9922 7C           2 ld a,h
 411+ 9923 FE 58            cp $58
 412+ 9925 28 02            jr z,3F
 413+ 9927
 414+ 9927 10 E0            djnz 1B
 415+ 9929 ED 7B 13 89  3 ld sp,(Stack)
 416+ 992D C9               ret
 417+ 992E
# file closed: Rutinas_de_impresion_sprites.asm
1647  992E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 992E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 992E              ;
   3+ 992E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 992E              ;
   5+ 992E              ; *****************************************************************************************************************************************************************************************
   6+ 992E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 992E
   8+ 992E 7C           calcula_tercio ld a,h
   9+ 992F E6 18        	and $18
  10+ 9931 CB 2F        	sra a
  11+ 9933 CB 2F        	sra a
  12+ 9935 CB 2F        	sra a
  13+ 9937 C9           	ret
  14+ 9938
# file closed: calcula_tercio.asm
1648  9938              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9938              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9938              ;
   3+ 9938              ;
   4+ 9938              ;	CLS.
   5+ 9938              ;
   6+ 9938              ;	Limpia la pantalla y define sus atributos.
   7+ 9938              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9938              ;
   9+ 9938              ;	COLORES: 0 ..... NEGRO
  10+ 9938              ;    		 1 ..... AZUL
  11+ 9938              ; 			 2 ..... ROJO
  12+ 9938              ;			 3 ..... MAGENTA
  13+ 9938              ; 			 4 ..... VERDE
  14+ 9938              ; 			 5 ..... CIAN
  15+ 9938              ;			 6 ..... AMARILLO
  16+ 9938              ; 			 7 ..... BLANCO
  17+ 9938              ;
  18+ 9938              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9938              ;
  20+ 9938              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9938
  22+ 9938
  23+ 9938 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 993B 11 01 40     	LD DE,$4001
  25+ 993E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9941 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9943 ED B0        	LDIR
  28+ 9945 01 FF 02     	LD BC,767
  29+ 9948 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9949 ED B0        	LDIR
  31+ 994B C9           	ret
  32+ 994C
# file closed: Cls.asm
1649  994C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 994C              ; ******************************************************************************************************************************************************************************************
   2+ 994C              ;
   3+ 994C              ;   20/05/23
   4+ 994C              ;
   5+ 994C              ;	Recompone_posicion_inicio
   6+ 994C              ;
   7+ 994C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 994C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 994C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 994C              ;	_ a una u otra rutina.
  11+ 994C
  12+ 994C              Recompone_posicion_inicio
  13+ 994C
  14+ 994C 2A D7 88     	ld hl,(Posicion_inicio)
  15+ 994F 7D           	ld a,l
  16+ 9950 E6 1F        	and $1f
  17+ 9952 28 16        	jr z,1F
  18+ 9954
  19+ 9954 FE 1F        	cp $1f
  20+ 9956 28 0D        	jr z,3F
  21+ 9958
  22+ 9958 21 00 89     	ld hl,Ctrl_2
  23+ 995B CB C6        	set 0,(hl)
  24+ 995D 2A C9 88     	ld hl,(Puntero_objeto)
  25+ 9960 22 03 89     	ld (Repone_puntero_objeto),hl
  26+ 9963 18 08        	jr 2F
  27+ 9965
  28+ 9965 CD 06 9B     3 call Mov_left
  29+ 9968 18 03        	jr 2F
  30+ 996A
  31+ 996A CD E8 99     1 call Mov_right
  32+ 996D 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9970 22 C9 88     	ld (Puntero_objeto),hl
  34+ 9973 C9           	ret
  35+ 9974
  36+ 9974              ; ******************************************************************************************************************************************************************************************
  37+ 9974              ;
  38+ 9974              ;   27/05/23
  39+ 9974              ;
  40+ 9974              ;	Mov_down
  41+ 9974              ;
  42+ 9974              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9974              ;
  44+ 9974              ;
  45+ 9974              Mov_down
  46+ 9974
  47+ 9974 CD D6 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9977              ;																	; _ repone (Puntero_objeto).
  49+ 9977 21 EF 88     	ld hl,Ctrl_0
  50+ 997A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 997C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 997C              ; 																	; _ en el caso de que no lo haya.
  53+ 997C 3A DD 88     	ld a,(Vel_down)
  54+ 997F 47           	ld b,a
  55+ 9980 2A C7 88         ld hl,(Posicion_actual)
  56+ 9983 CD 2E 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9986 E6 02        	and 2
  58+ 9988 28 0F        	jr z,1F
  59+ 998A
  60+ 998A              ; Nos encontramos en el último tercio de pantalla.
  61+ 998A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 998A
  63+ 998A 7C           	ld a,h
  64+ 998B FE 57        	cp $57
  65+ 998D 20 0A        	jr nz,1F
  66+ 998F
  67+ 998F 7D           	ld a,l
  68+ 9990 C6 20        	add $20
  69+ 9992 30 05        	jr nc,1F
  70+ 9994
  71+ 9994              ; ------------------------------
  72+ 9994              ;	call Reaparece_arriba
  73+ 9994 CD 93 9C     	call Reinicio
  74+ 9997              ; ------------------------------
  75+ 9997
  76+ 9997 18 08        	jr 3F
  77+ 9999 CD 1B 96     1 call NextScan
  78+ 999C 22 C7 88     	ld (Posicion_actual),hl
  79+ 999F 10 E2            djnz 2B
  80+ 99A1 CD B9 9C     3 call Genera_coordenadas
  81+ 99A4 C9           	ret
  82+ 99A5
  83+ 99A5              ; ******************************************************************************************************************************************************************************************
  84+ 99A5              ;
  85+ 99A5              ;   27/05/23
  86+ 99A5              ;
  87+ 99A5              ;	Mov_up
  88+ 99A5              ;
  89+ 99A5              ; 	Mueve el Sprite hacia arriba.
  90+ 99A5              ;
  91+ 99A5              ;
  92+ 99A5              Mov_up
  93+ 99A5
  94+ 99A5 CD D6 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99A8              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99A8 21 EF 88     	ld hl,Ctrl_0
  97+ 99AB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99AD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99AD              ; 																		; _ en el caso de que no lo haya.
 100+ 99AD 3A DC 88     	ld a,(Vel_up)
 101+ 99B0 47           	ld b,a
 102+ 99B1 2A C7 88     	ld hl,(Posicion_actual)
 103+ 99B4 CD 2E 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99B7 A7           	and a
 105+ 99B8 20 10        	jr nz,1F
 106+ 99BA
 107+ 99BA              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99BA              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99BA
 110+ 99BA 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99BB FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99BD 20 0B            jr nz,1F
 113+ 99BF 7D               ld a,l
 114+ 99C0 D6 20            sub $20
 115+ 99C2 30 06            jr nc,1F
 116+ 99C4 25               dec h
 117+ 99C5
 118+ 99C5              ; -----------------------------
 119+ 99C5 CD 74 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99C8              ;	call Reinicio
 121+ 99C8              ; -----------------------------
 122+ 99C8
 123+ 99C8 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99CA CD 2A 96     1 call PreviousScan
 125+ 99CD 22 C7 88     	ld (Posicion_actual),hl
 126+ 99D0 10 E2            djnz 3B
 127+ 99D2 CD B9 9C     2 call Genera_coordenadas
 128+ 99D5 C9           	ret
 129+ 99D6
 130+ 99D6              ; -----------------------------
 131+ 99D6              ;
 132+ 99D6              ;	27/5/23
 133+ 99D6              ;
 134+ 99D6              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99D6              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99D6              ;
 137+ 99D6              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99D6              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99D6              ;
 140+ 99D6              ;	Modifica: A y (Puntero_objeto).
 141+ 99D6
 142+ 99D6 3A 00 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99D9 CB 47        	bit 0,a
 144+ 99DB C8           	ret z
 145+ 99DC CB 87        	res 0,a
 146+ 99DE 32 00 89     	ld (Ctrl_2),a
 147+ 99E1 2A 03 89     	ld hl,(Repone_puntero_objeto)
 148+ 99E4 22 C9 88     	ld (Puntero_objeto),hl
 149+ 99E7 C9           	ret
 150+ 99E8
 151+ 99E8              ; ******************************************************************************************************************************************************************************************
 152+ 99E8              ;
 153+ 99E8              ;	19/10/22
 154+ 99E8              ;
 155+ 99E8              ;	Mov_right.
 156+ 99E8              ;
 157+ 99E8              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99E8              ;
 159+ 99E8
 160+ 99E8 21 EF 88     Mov_right ld hl,Ctrl_0
 161+ 99EB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99ED              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99ED              ; 																	; _ en el caso de que no lo haya.
 164+ 99ED 3A EF 88     	ld a,(Ctrl_0)
 165+ 99F0 CB 77        	bit 6,a
 166+ 99F2 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99F4
 168+ 99F4 CD 22 9C     	call Stop_Amadeus_right
 169+ 99F7 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99F8 18 4D        	jr 8F
 171+ 99FA
 172+ 99FA 3A CB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99FD FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99FF 20 46        	jr nz,8F
 175+ 9A01
 176+ 9A01 3A CD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A04 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A05 28 40        	jr z,8F
 179+ 9A07
 180+ 9A07              ; ---------- ---------- ----------
 181+ 9A07              ;
 182+ 9A07              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A07
 184+ 9A07 3A DB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A0A FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A0C 28 11        	jr z,1F
 187+ 9A0E 38 06        	jr c,6F
 188+ 9A10 FE 04        	cp 4
 189+ 9A12 28 14        	jr z,7F
 190+ 9A14 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A16
 192+ 9A16              ; ---------- ---------- ----------
 193+ 9A16              ;
 194+ 9A16              ; Perfiles de velocidad
 195+ 9A16              ;
 196+ 9A16
 197+ 9A16 3A CD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A19 FE FE        	cp $fe
 199+ 9A1B 20 2A        	jr nz,8F
 200+ 9A1D 18 10        	jr 3F
 201+ 9A1F 3A CD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A22 FE FD        	cp $fd
 203+ 9A24 20 21        	jr nz,8F
 204+ 9A26 18 07        	jr 3F
 205+ 9A28 3A CD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A2B FE FB        	cp $fb
 207+ 9A2D 20 18        	jr nz,8F
 208+ 9A2F
 209+ 9A2F              ; ---------- ---------- ----------
 210+ 9A2F
 211+ 9A2F              3
 212+ 9A2F CD 62 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A32              ;	call Reinicio
 214+ 9A32
 215+ 9A32              ; ---------- ---------- ----------
 216+ 9A32              ;
 217+ 9A32              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A32
 219+ 9A32 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A34 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A35 CD 4E 9A     	call DESPLZ_DER
 222+ 9A38 C1           	pop bc
 223+ 9A39 10 F9        	djnz 5B
 224+ 9A3B 2A C7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A3E 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A3F 22 C7 88     	ld (Posicion_actual),hl
 227+ 9A42 CD B9 9C     	call Genera_coordenadas
 228+ 9A45 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A47
 230+ 9A47              ; ---------- ---------- ----------
 231+ 9A47
 232+ 9A47 2A C7 88     8 ld hl,(Posicion_actual)
 233+ 9A4A CD 4E 9A     	call DESPLZ_DER
 234+ 9A4D C9           2 ret
 235+ 9A4E
 236+ 9A4E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A4E              ;
 238+ 9A4E              ;	22/9/22
 239+ 9A4E              ;
 240+ 9A4E
 241+ 9A4E CD 5D 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A51 CD A9 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A54 CD D2 9A         call Ciclo_completo
 244+ 9A57 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A5A CB FE        	set 7,(hl)
 246+ 9A5C C9           	ret
 247+ 9A5D
 248+ 9A5D              ; ******************************************************************************************************************************************************************************************
 249+ 9A5D              ;	15/02/23
 250+ 9A5D              ;
 251+ 9A5D
 252+ 9A5D 3A DB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A60 47           	ld b,a
 254+ 9A61 2A D3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A64 23           1 inc hl
 256+ 9A65 23           	inc hl
 257+ 9A66 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A68 22 D3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A6B CD 7F 8C     	call Extrae_address
 260+ 9A6E 22 C9 88     	ld (Puntero_objeto),hl
 261+ 9A71
 262+ 9A71              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A71
 264+ 9A71              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A71              ; Cuántos movimientos hemos hecho ??
 266+ 9A71              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A71
 268+ 9A71 2A CF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A74 EB           	ex de,hl
 270+ 9A75 A7           	and a
 271+ 9A76 ED 52        	sbc hl,de
 272+ 9A78 CB 3D        	srl l
 273+ 9A7A 3E 08        6 ld a,8
 274+ 9A7C 95           	sub l
 275+ 9A7D 30 1E        	jr nc,3F
 276+ 9A7F
 277+ 9A7F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A7F              ; B="0".
 279+ 9A7F
 280+ 9A7F 04           4 inc b
 281+ 9A80 3C           	inc a
 282+ 9A81 20 FC        	jr nz,4B
 283+ 9A83 78           	ld a,b
 284+ 9A84 08           	ex af,af
 285+ 9A85 2A CF 88     	ld hl,(Indice_Sprite_der)
 286+ 9A88 23           5 inc hl
 287+ 9A89 23           	inc hl
 288+ 9A8A 10 FC        	djnz 5B
 289+ 9A8C 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A8F CD 7F 8C     	call Extrae_address
 291+ 9A92 22 C9 88     	ld (Puntero_objeto),hl
 292+ 9A95
 293+ 9A95              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A95              ; _(Posicion_actual).
 295+ 9A95
 296+ 9A95 21 C7 88     	ld hl,Posicion_actual
 297+ 9A98 34           	inc (hl)
 298+ 9A99 08               ex af,af
 299+ 9A9A 6F           	ld l,a
 300+ 9A9B 18 DD        	jr 6B
 301+ 9A9D
 302+ 9A9D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A9D
 304+ 9A9D 47           3 ld b,a
 305+ 9A9E 2A D1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AA1 23           2 inc hl
 307+ 9AA2 23           	inc hl
 308+ 9AA3 10 FC        	djnz 2B
 309+ 9AA5 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AA8 C9           8 ret
 311+ 9AA9
 312+ 9AA9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AA9              ;
 314+ 9AA9              ;	24/7/22
 315+ 9AA9              ;
 316+ 9AA9              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AA9              ;
 318+ 9AA9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AA9              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AA9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AA9
 322+ 9AA9 3A CD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AAC A7           	and a
 324+ 9AAD 20 1F        	jr nz,1F
 325+ 9AAF D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AB1 32 CD 88         ld (CTRL_DESPLZ),a
 327+ 9AB4
 328+ 9AB4 21 C6 88     	ld hl,Columns
 329+ 9AB7 34           	inc (hl)
 330+ 9AB8 3A D9 88     	ld a,(Cuad_objeto)
 331+ 9ABB E6 01        	and 1
 332+ 9ABD 28 0F        	jr z,1F
 333+ 9ABF 2A C7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AC2 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AC3 22 C7 88     	ld (Posicion_actual),hl
 336+ 9AC6 CD B9 9C     	call Genera_coordenadas
 337+ 9AC9 CD 2E 9C     	call Inc_CTRL_DESPLZ
 338+ 9ACC 18 03        	jr 2F
 339+ 9ACE CD 2E 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AD1 C9           2 ret
 341+ 9AD2
 342+ 9AD2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AD2              ;
 344+ 9AD2              ;	24/7/22
 345+ 9AD2              ;
 346+ 9AD2              ;	Ciclo_completo.
 347+ 9AD2              ;
 348+ 9AD2              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AD2              ;
 350+ 9AD2              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AD2              ; 	Decrementamos (Columns).
 352+ 9AD2              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AD2              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AD2
 355+ 9AD2
 356+ 9AD2 3A CD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AD5 FE FF        	cp $ff
 358+ 9AD7 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AD9 E6 F0        	and $f0
 360+ 9ADB 20 28        	jr nz,3F
 361+ 9ADD
 362+ 9ADD              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9ADD
 364+ 9ADD 3A CD 88     	ld a,(CTRL_DESPLZ)
 365+ 9AE0 47           	ld b,a
 366+ 9AE1 3E F8        	ld a,$f8
 367+ 9AE3 80           	add b
 368+ 9AE4 32 CD 88     	ld (CTRL_DESPLZ),a
 369+ 9AE7 18 1C        	jr 3F
 370+ 9AE9 21 C6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AEC 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AED AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AEE 32 CD 88     	ld (CTRL_DESPLZ),a
 374+ 9AF1 3A D9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AF4 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AF6 20 0A        	jr nz,2F
 377+ 9AF8 2A C7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AFB 23           	inc hl
 379+ 9AFC 22 C7 88     	ld (Posicion_actual),hl
 380+ 9AFF CD B9 9C     	call Genera_coordenadas
 381+ 9B02
 382+ 9B02              ; Inicia el puntero de Sprite.
 383+ 9B02
 384+ 9B02 CD 96 8C     2 call Inicia_puntero_objeto_der
 385+ 9B05 C9           3 ret
 386+ 9B06
 387+ 9B06              ; ******************************************************************************************************************************************************************************************
 388+ 9B06              ;
 389+ 9B06              ;	15/02/23
 390+ 9B06              ;
 391+ 9B06              ;	Mov_left.
 392+ 9B06              ;
 393+ 9B06              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B06              ;
 395+ 9B06              Mov_left
 396+ 9B06
 397+ 9B06 21 EF 88     	ld hl,Ctrl_0
 398+ 9B09 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B0B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B0B              ; 																	; _ en el caso de que no lo haya.
 401+ 9B0B 3A EF 88     	ld a,(Ctrl_0)
 402+ 9B0E CB 77        	bit 6,a
 403+ 9B10 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B12
 405+ 9B12 CD 28 9C     	call Stop_Amadeus_left
 406+ 9B15 C8           	ret z
 407+ 9B16 20 4A        	jr nz,8F
 408+ 9B18
 409+ 9B18 3A CB 88     11 ld a,(Coordenada_X)
 410+ 9B1B A7           	and a
 411+ 9B1C 20 44        	jr nz,8F
 412+ 9B1E
 413+ 9B1E 3A CD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B21 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B22 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B24
 417+ 9B24              ; ---------- ---------- ----------
 418+ 9B24
 419+ 9B24 3A DA 88     	ld a,(Vel_left)
 420+ 9B27 FE 02        	cp 2
 421+ 9B29 28 0F        	jr z,1F
 422+ 9B2B 38 04        	jr c,6F
 423+ 9B2D FE 04        	cp 4
 424+ 9B2F 28 12        	jr z,7F
 425+ 9B31
 426+ 9B31              ; ---------- ---------- ----------
 427+ 9B31
 428+ 9B31 3A CD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B34 FE F8        	cp $f8
 430+ 9B36 20 2A        	jr nz,8F
 431+ 9B38 18 10        	jr 4F
 432+ 9B3A 3A CD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B3D FE F9        	cp $f9
 434+ 9B3F 20 21        	jr nz,8F
 435+ 9B41 18 07        	jr 4F
 436+ 9B43 3A CD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B46 FE FB        	cp $fb
 438+ 9B48 20 18        	jr nz,8F
 439+ 9B4A
 440+ 9B4A              ; ---------- ---------- ----------
 441+ 9B4A
 442+ 9B4A              4
 443+ 9B4A CD 50 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B4D              ;	call Reinicio
 445+ 9B4D
 446+ 9B4D              ; ---------- ---------- ----------
 447+ 9B4D
 448+ 9B4D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B4F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B50
 451+ 9B50              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B50              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B50
 454+ 9B50 CD 69 9B     	call DESPLZ_IZQ
 455+ 9B53 C1           	pop bc
 456+ 9B54 10 F9        	djnz 5B
 457+ 9B56 2A C7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B59 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B5A 22 C7 88     	ld (Posicion_actual),hl
 460+ 9B5D CD B9 9C     	call Genera_coordenadas
 461+ 9B60 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B62
 463+ 9B62              ; ---------- ---------- ----------
 464+ 9B62
 465+ 9B62              ; Movemos, no hay recolocación.
 466+ 9B62
 467+ 9B62 2A C7 88     8 ld hl,(Posicion_actual)
 468+ 9B65 CD 69 9B     	call DESPLZ_IZQ
 469+ 9B68 C9           2 ret
 470+ 9B69
 471+ 9B69              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B69              ;
 473+ 9B69              ;	22/9/22
 474+ 9B69
 475+ 9B69              DESPLZ_IZQ
 476+ 9B69
 477+ 9B69 CD 78 9B     	call Desplaza_izquierda
 478+ 9B6C CD C4 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B6F CD EC 9B     	call Ciclo_completo_2
 480+ 9B72 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B75 CB BE        	res 7,(hl)
 482+ 9B77 C9           	ret
 483+ 9B78
 484+ 9B78              Desplaza_izquierda
 485+ 9B78
 486+ 9B78 3A DA 88     	ld a,(Vel_left)
 487+ 9B7B 47           	ld b,a
 488+ 9B7C 2A D5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B7F 23           1 inc hl
 490+ 9B80 23           	inc hl
 491+ 9B81 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B83 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B86 CD 7F 8C     	call Extrae_address
 494+ 9B89 22 C9 88     	ld (Puntero_objeto),hl
 495+ 9B8C
 496+ 9B8C              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B8C
 498+ 9B8C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B8C              ; Cuántos movimientos hemos hecho ??
 500+ 9B8C              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B8C
 502+ 9B8C 2A D1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B8F EB           	ex de,hl
 504+ 9B90 A7           	and a
 505+ 9B91 ED 52        	sbc hl,de
 506+ 9B93 CB 3D        	srl l
 507+ 9B95 3E 08        6 ld a,8
 508+ 9B97 95           	sub l
 509+ 9B98 30 1E        	jr nc,3F
 510+ 9B9A
 511+ 9B9A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B9A              ; B="0".
 513+ 9B9A
 514+ 9B9A 04           4 inc b
 515+ 9B9B 3C           	inc a
 516+ 9B9C 20 FC        	jr nz,4B
 517+ 9B9E 78           	ld a,b
 518+ 9B9F 08           	ex af,af
 519+ 9BA0 2A D1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BA3 23           5 inc hl
 521+ 9BA4 23           	inc hl
 522+ 9BA5 10 FC        	djnz 5B
 523+ 9BA7 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BAA CD 7F 8C     	call Extrae_address
 525+ 9BAD 22 C9 88     	ld (Puntero_objeto),hl
 526+ 9BB0
 527+ 9BB0              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BB0              ; _(Posicion_actual).
 529+ 9BB0
 530+ 9BB0 21 C7 88     	ld hl,Posicion_actual
 531+ 9BB3 35           	dec (hl)
 532+ 9BB4 08           	ex af,af
 533+ 9BB5 6F           	ld l,a
 534+ 9BB6 18 DD        	jr 6B
 535+ 9BB8
 536+ 9BB8              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BB8
 538+ 9BB8 47           3 ld b,a
 539+ 9BB9 2A CF 88     	ld hl,(Indice_Sprite_der)
 540+ 9BBC 23           2 inc hl
 541+ 9BBD 23           	inc hl
 542+ 9BBE 10 FC        	djnz 2B
 543+ 9BC0 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BC3 C9           8 ret
 545+ 9BC4
 546+ 9BC4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BC4              ;
 548+ 9BC4              ;	modifica_parametros_1er_DESPLZ
 549+ 9BC4              ;
 550+ 9BC4              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BC4              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BC4              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BC4
 554+ 9BC4 3A CD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BC7 A7           	and a
 556+ 9BC8 20 1E        	jr nz,1F
 557+ 9BCA 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BCB 32 CD 88         ld (CTRL_DESPLZ),a
 559+ 9BCE 21 C6 88     	ld hl,Columns
 560+ 9BD1 34           	inc (hl)
 561+ 9BD2 3A D9 88     	ld a,(Cuad_objeto)
 562+ 9BD5 E6 01        	and 1
 563+ 9BD7 20 0F        	jr nz,1F
 564+ 9BD9 2A C7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BDC 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BDD 22 C7 88     	ld (Posicion_actual),hl
 567+ 9BE0 CD B9 9C     	call Genera_coordenadas
 568+ 9BE3 CD 3F 9C     	call Dec_CTRL_DESPLZ
 569+ 9BE6 18 03        	jr 2F
 570+ 9BE8 CD 3F 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BEB C9           2 ret
 572+ 9BEC
 573+ 9BEC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BEC
 575+ 9BEC 3A CD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BEF FE F7        	cp $f7
 577+ 9BF1 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BF3 30 2C        	jr nc,3F
 579+ 9BF5
 580+ 9BF5              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BF5
 582+ 9BF5 06 00        	ld b,0
 583+ 9BF7 04           4 inc b
 584+ 9BF8 3C           	inc a
 585+ 9BF9 FE F7        	cp $f7
 586+ 9BFB 20 FA        	jr nz,4B
 587+ 9BFD 3E FF        	ld a,$ff
 588+ 9BFF 90           	sub b
 589+ 9C00 32 CD 88     	ld (CTRL_DESPLZ),a
 590+ 9C03 18 1C        	jr 3F
 591+ 9C05
 592+ 9C05              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C05
 594+ 9C05 21 C6 88     1 ld hl,Columns
 595+ 9C08 35           	dec (hl)
 596+ 9C09 AF           	xor a
 597+ 9C0A 32 CD 88     	ld (CTRL_DESPLZ),a
 598+ 9C0D 3A D9 88     	ld a,(Cuad_objeto)
 599+ 9C10 E6 01        	and 1
 600+ 9C12 28 0A        	jr z,2F
 601+ 9C14 2A C7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C17 2B           	dec hl
 603+ 9C18 22 C7 88     	ld (Posicion_actual),hl
 604+ 9C1B CD B9 9C     	call Genera_coordenadas
 605+ 9C1E
 606+ 9C1E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C1E
 608+ 9C1E CD A9 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C21 C9           3 ret
 610+ 9C22
 611+ 9C22              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C22              ;
 613+ 9C22              ;	19/10/22
 614+ 9C22              ;
 615+ 9C22              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C22              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C22
 618+ 9C22 3A CB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C25 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C27 C9           	ret
 621+ 9C28
 622+ 9C28              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C28              ;
 624+ 9C28              ;	19/10/22
 625+ 9C28              ;
 626+ 9C28              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C28              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C28
 629+ 9C28 3A CB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C2B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C2D C9           	ret
 632+ 9C2E
 633+ 9C2E              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C2E              ;
 635+ 9C2E              ;	24/7/22
 636+ 9C2E              ;
 637+ 9C2E              ;	Inc_CTRL_DESPLZ
 638+ 9C2E              ;
 639+ 9C2E              ;
 640+ 9C2E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C2E
 642+ 9C2E 21 CD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C31 3A DB 88     	ld a,(Vel_right)
 644+ 9C34 A7           	and a
 645+ 9C35 28 06        	jr z,1F
 646+ 9C37 47           	ld b,a
 647+ 9C38 34           3 inc (hl)
 648+ 9C39 10 FD        	djnz 3B
 649+ 9C3B 18 01        	jr 2F
 650+ 9C3D 34           1 inc (hl)
 651+ 9C3E C9           2 ret
 652+ 9C3F
 653+ 9C3F              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C3F              ;
 655+ 9C3F              ;	5/2/23
 656+ 9C3F              ;
 657+ 9C3F              ;	Dec_CTRL_DESPLZ
 658+ 9C3F              ;
 659+ 9C3F              ;
 660+ 9C3F              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C3F
 662+ 9C3F 21 CD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C42 3A DA 88     	ld a,(Vel_left)
 664+ 9C45 A7           	and a
 665+ 9C46 28 06        	jr z,1F
 666+ 9C48 47           	ld b,a
 667+ 9C49 35           3 dec (hl)
 668+ 9C4A 10 FD        	djnz 3B
 669+ 9C4C 18 01        	jr 2F
 670+ 9C4E 35           1 dec (hl)
 671+ 9C4F C9           2 ret
 672+ 9C50
 673+ 9C50              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C50
 675+ 9C50 2A C7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C53 01 1F 00     	ld bc,31
 677+ 9C56 A7           	and a
 678+ 9C57 ED 4A        	adc hl,bc
 679+ 9C59 22 C7 88     	ld (Posicion_actual),hl
 680+ 9C5C 21 EF 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C5F CB C6        	set 0,(hl)
 682+ 9C61 C9           	ret
 683+ 9C62
 684+ 9C62              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C62
 686+ 9C62 2A C7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C65 01 1F 00     	ld bc,31
 688+ 9C68 A7           	and a
 689+ 9C69 ED 42        	sbc hl,bc
 690+ 9C6B 22 C7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C6E 21 EF 88     	ld hl,Ctrl_0
 692+ 9C71 CB CE        	set 1,(hl)
 693+ 9C73 C9           	ret
 694+ 9C74
 695+ 9C74              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C74
 697+ 9C74 24           Reaparece_abajo inc h
 698+ 9C75 01 E0 17     	ld bc,$17e0
 699+ 9C78 A7           	and a
 700+ 9C79 ED 4A        	adc hl,bc
 701+ 9C7B 22 C7 88     	ld (Posicion_actual),hl
 702+ 9C7E 21 EF 88     	ld hl,Ctrl_0
 703+ 9C81 CB D6        	set 2,(hl)
 704+ 9C83 C9           	ret
 705+ 9C84
 706+ 9C84              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C84
 708+ 9C84 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C87 A7           	and a
 710+ 9C88 ED 42        	sbc hl,bc
 711+ 9C8A 22 C7 88     	ld (Posicion_actual),hl
 712+ 9C8D 21 EF 88     	ld hl,Ctrl_0
 713+ 9C90 CB DE        	set 3,(hl)
 714+ 9C92 C9           	ret
 715+ 9C93
 716+ 9C93              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C93              ;
 718+ 9C93              ;	15/07/23
 719+ 9C93
 720+ 9C93              Reinicio
 721+ 9C93
 722+ 9C93              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C93
 724+ 9C93 AF           	xor a
 725+ 9C94 21 F4 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C97 CD B5 9C     	call Limpia_contenido_hl
 727+ 9C9A
 728+ 9C9A 21 C7 88     	ld hl,Posicion_actual
 729+ 9C9D CD B5 9C     	call Limpia_contenido_hl
 730+ 9CA0
 731+ 9CA0 CD E5 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CA3 CD 6F 9F     	call Inicia_Puntero_mov
 733+ 9CA6
 734+ 9CA6 21 F6 88     	ld hl,Incrementa_puntero
 735+ 9CA9 06 05        	ld b,5
 736+ 9CAB 77           1 ld (hl),a
 737+ 9CAC 23           	inc hl
 738+ 9CAD 10 FC        	djnz 1B
 739+ 9CAF
 740+ 9CAF 21 00 89     	ld hl,Ctrl_2
 741+ 9CB2 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CB4
 743+ 9CB4 C9           	ret
 744+ 9CB5
 745+ 9CB5 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CB6 23           	inc hl
 747+ 9CB7 77           	ld (hl),a
 748+ 9CB8 C9           	ret
 749+ 9CB9
 750+ 9CB9
# file closed: Direcciones.asm
1650  9CB9              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CB9              ; ------------------------------------------------------------------------
   2+ 9CB9              ;
   3+ 9CB9              ;	02/04/23
   4+ 9CB9              ;
   5+ 9CB9              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CB9              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CB9              ;
   8+ 9CB9              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CB9              ;
  10+ 9CB9              ;	Modifica: A,BC y DE.
  11+ 9CB9
  12+ 9CB9 C5           Genera_coordenadas push bc
  13+ 9CBA E5           	push hl
  14+ 9CBB D5           	push de
  15+ 9CBC
  16+ 9CBC 2A C7 88     	ld hl,(Posicion_actual)
  17+ 9CBF
  18+ 9CBF 7D           	ld a,l
  19+ 9CC0 E6 1F        	and $1f
  20+ 9CC2 32 CB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CC5
  22+ 9CC5 CD 2E 99     	call calcula_tercio
  23+ 9CC8 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CC9
  25+ 9CC9 1E 00        	ld e,0
  26+ 9CCB 7D           	ld a,l
  27+ 9CCC E6 E0        	and $e0
  28+ 9CCE 28 01        	jr z,1F
  29+ 9CD0 04           	inc b
  30+ 9CD1
  31+ 9CD1 04           1 inc b
  32+ 9CD2 05           	dec b
  33+ 9CD3 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CD5              ;														; _ , salimos.
  35+ 9CD5 1C           3 inc e
  36+ 9CD6 D6 20        	sub 32
  37+ 9CD8 20 FB        	jr nz,3B
  38+ 9CDA 10 F5        	djnz 1B
  39+ 9CDC
  40+ 9CDC 7B           2 ld a,e
  41+ 9CDD 32 CC 88     	ld (Coordenada_y),a
  42+ 9CE0
  43+ 9CE0 D1           	pop de
  44+ 9CE1 E1           	pop hl
  45+ 9CE2 C1           	pop bc
  46+ 9CE3
  47+ 9CE3 C9           	ret
  48+ 9CE4
  49+ 9CE4              ; ------------------------------------------------------------------------
  50+ 9CE4              ;	28/05/23
  51+ 9CE4              ;
  52+ 9CE4              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CE4              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CE4              ;
  55+ 9CE4              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CE4              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CE4              ;
  58+ 9CE4              ;		DE="$120d"
  59+ 9CE4              ;
  60+ 9CE4              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CE4              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CE4              ;
  63+ 9CE4              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CE4
  65+ 9CE4              ;	Modifica: A,BC y DE.
  66+ 9CE4
  67+ 9CE4
  68+ 9CE4              Genera_coordenadas_disparo
  69+ 9CE4
  70+ 9CE4              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CE4
  72+ 9CE4 7D           	ld a,l
  73+ 9CE5 E6 1F        	and $1f
  74+ 9CE7 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CE8 CD 2E 99     	call calcula_tercio
  76+ 9CEB 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CEC 1E 00        	ld e,0
  78+ 9CEE 7D           	ld a,l
  79+ 9CEF E6 E0        	and $e0
  80+ 9CF1 28 01        	jr z,1F
  81+ 9CF3 04           	inc b
  82+ 9CF4 1C           1 inc e
  83+ 9CF5 D6 20        	sub 32
  84+ 9CF7 20 FB        	jr nz,1B
  85+ 9CF9 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CFB C9           	ret
  87+ 9CFC
# file closed: Genera_coordenadas.asm
1651  9CFC              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9CFC              ; Relojes y temporizaciones.
   2+ 9CFC
   3+ 9CFC              ; ------------------------------------------------------
   4+ 9CFC              ;
   5+ 9CFC              ;	16/7/23
   6+ 9CFC              ;
   7+ 9CFC              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9CFC              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9CFC              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9CFC              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9CFC              ;
  12+ 9CFC              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9CFC              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9CFC
  15+ 9CFC              ; Disparo_entidad db 1
  16+ 9CFC              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9CFC              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9CFC
  19+ 9CFC              Habilita_disparos
  20+ 9CFC
  21+ 9CFC 7E           	ld a,(hl)
  22+ 9CFD A7           	and a
  23+ 9CFE C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9CFF
  25+ 9CFF EB           	ex de,hl
  26+ 9D00
  27+ 9D00 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D01 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D02
  30+ 9D02              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D02
  32+ 9D02 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D03 7E           	ld a,(hl)
  34+ 9D04 23           	inc hl
  35+ 9D05 77           	ld (hl),a
  36+ 9D06
  37+ 9D06 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D07 3E 01        	ld a,1
  39+ 9D09 77           	ld (hl),a
  40+ 9D0A C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1652  9D0B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D0B
   2+ 9D0B
   3+ 9D0B              ;   07/07/23
   4+ 9D0B              ;
   5+ 9D0B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D0B              ;
   7+ 9D0B              ;   Codificación:
   8+ 9D0B              ;
   9+ 9D0B              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D0B              ;
  11+ 9D0B              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D0B              ;
  13+ 9D0B              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D0B              ;
  15+ 9D0B              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D0B              ;
  17+ 9D0B              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D0B              ;                               ..... %01000010 Vel_up 4
  19+ 9D0B              ;                                               Vel_down 2
  20+ 9D0B              ;                               ..... $42
  21+ 9D0B              ;
  22+ 9D0B              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D0B              ;
  24+ 9D0B              ;                               ..... %01000010 Vel_left 4
  25+ 9D0B              ;                                               Vel_right 2
  26+ 9D0B              ;                               ..... $42
  27+ 9D0B              ;
  28+ 9D0B              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D0B              ;
  30+ 9D0B              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D0B              ;
  32+ 9D0B              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D0B              ;
  34+ 9D0B              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D0B              ;                                     $53
  36+ 9D0B              ;
  37+ 9D0B              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D0B              ;
  39+ 9D0B              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D0B              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D0B              ;
  42+ 9D0B              ;                       Arriba ..... $81
  43+ 9D0B              ;                       Arriba - izquierda ..... $a1
  44+ 9D0B              ;                       Arriba - derecha ..... $91
  45+ 9D0B              ;
  46+ 9D0B              ;                       Abajo ..... $41
  47+ 9D0B              ;                       Abajo - izquierda ..... $61
  48+ 9D0B              ;                       Abajo - derecha ..... $51
  49+ 9D0B              ;
  50+ 9D0B              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D0B              ;
  52+ 9D0B              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D0B              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D0B              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D0B              ;
  56+ 9D0B              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D0B              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D0B              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D0B              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D0B              ;
  61+ 9D0B              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D0B              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D0B              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D0B              ;
  65+ 9D0B              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D0B              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D0B              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D0B              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D0B
  70+ 9D0B              ; ----- ----- ----- ----- -----
  71+ 9D0B
  72+ 9D0B 37 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D0D 3F 9D            defw F_1
  74+ 9D0F 49 9D            defw F_2
  75+ 9D11 53 9D            defw Codo_abajo_derecha
  76+ 9D13 87 9D            defw Derecha_y_subiendo
  77+ 9D15 91 9D            defw Derecha_y_subiendo_1
  78+ 9D17 9B 9D            defw F_3
  79+ 9D19 A5 9D            defw F_4
  80+ 9D1B AF 9D            defw Derecha_y_bajando
  81+ 9D1D B9 9D            defw Derecha_y_bajando_1
  82+ 9D1F C3 9D            defw Derecha_y_bajando_2
  83+ 9D21 CD 9D            defw Codo_derecha_abajo
  84+ 9D23 FD 9D            defw Codo_abajo_izq.
  85+ 9D25 31 9E            defw Izquierda_y_subiendo
  86+ 9D27 3B 9E            defw Izquierda_y_subiendo_1
  87+ 9D29 45 9E            defw F_5
  88+ 9D2B 4F 9E            defw F_6
  89+ 9D2D 59 9E            defw Izquierda_y_bajando
  90+ 9D2F 63 9E            defw Izquierda_y_bajando_1
  91+ 9D31 6D 9E            defw Izquierda_y_bajando_2
  92+ 9D33 77 9E            defw Codo_izquierda_abajo
  93+ 9D35 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D37
  95+ 9D37 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D3B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D3F
  98+ 9D3F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D43 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D47 08 00
 100+ 9D49 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D4D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D51 0F FE
 102+ 9D53
 103+ 9D53 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D57 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D5F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D63 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D67 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D6B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D6F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D73 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D77 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D7B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D7F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D83 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D87
 117+ 9D87 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D8B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D8F 06 00
 119+ 9D91
 120+ 9D91 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D95 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D99 02 00
 122+ 9D9B
 123+ 9D9B 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D9F 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DA3 04 00
 125+ 9DA5 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DA9 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DAD 08 00
 127+ 9DAF
 128+ 9DAF 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DB3 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DB7 02 00
 130+ 9DB9
 131+ 9DB9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DBD 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DC1 06 00
 133+ 9DC3
 134+ 9DC3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DC7 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DCB 06 00
 136+ 9DCD
 137+ 9DCD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DCD
 139+ 9DCD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DD1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DD5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DD9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DDD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DE1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DE5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DE9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DED 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DF5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DF9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DFD
 152+ 9DFD 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E01 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E09 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E0D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E11 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E15 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E19 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E1D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E21 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E25 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E29 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E2D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E31
 166+ 9E31 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E35 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E39 06 00
 168+ 9E3B
 169+ 9E3B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E3F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E43 02 00
 171+ 9E45
 172+ 9E45 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E49 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E4D 04 00
 174+ 9E4F 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E53 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E57 08 00
 176+ 9E59
 177+ 9E59 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E5D 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E61 02 00
 179+ 9E63
 180+ 9E63 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E67 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E6B 06 00
 182+ 9E6D
 183+ 9E6D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E71 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E75 06 00
 185+ 9E77
 186+ 9E77 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E7B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E7F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E83 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E8B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E8F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E93 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E97 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E9B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E9F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EA3 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EA7
 199+ 9EA7              ; ----- ----- ----- ----- -----
 200+ 9EA7              ;
 201+ 9EA7              ;   27/06/23
 202+ 9EA7
 203+ 9EA7              Movimiento
 204+ 9EA7
 205+ 9EA7              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EA7
 207+ 9EA7              ;    ld hl,(Posicion_actual)
 208+ 9EA7
 209+ 9EA7 3A 00 89         ld a,(Ctrl_2)
 210+ 9EAA CB 57            bit 2,a
 211+ 9EAC 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EAE
 213+ 9EAE 2A F2 88         ld hl,(Puntero_mov)
 214+ 9EB1 7E               ld a,(hl)
 215+ 9EB2
 216+ 9EB2              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EB2
 218+ 9EB2              Inicia_desplazamiento.
 219+ 9EB2
 220+ 9EB2              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EB2
 222+ 9EB2 CD A6 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EB5
 224+ 9EB5              ; Iniciamos (Repetimos_mov).
 225+ 9EB5
 226+ 9EB5 7E               ld a,(hl)
 227+ 9EB6 E6 0F            and $0f
 228+ 9EB8 32 F8 88         ld (Repetimos_desplazamiento),a
 229+ 9EBB 32 F9 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EBE
 231+ 9EBE              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EBE
 233+ 9EBE 23               inc hl
 234+ 9EBF 7E               ld a,(hl)
 235+ 9EC0 32 FB 88         ld (Cola_de_desplazamiento),a
 236+ 9EC3 2B               dec hl
 237+ 9EC4
 238+ 9EC4 21 00 89         ld hl,Ctrl_2
 239+ 9EC7 CB D6            set 2,(hl)
 240+ 9EC9
 241+ 9EC9              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EC9              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EC9
 244+ 9EC9              Desplazamiento_iniciado
 245+ 9EC9
 246+ 9EC9 CD 7A 9F         call Aplica_desplazamiento
 247+ 9ECC
 248+ 9ECC 3A 00 89         ld a,(Ctrl_2)
 249+ 9ECF CB 67            bit 4,a
 250+ 9ED1 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9ED2
 252+ 9ED2 21 F8 88     3 ld hl,Repetimos_desplazamiento
 253+ 9ED5 35               dec (hl)
 254+ 9ED6 C0               ret nz
 255+ 9ED7
 256+ 9ED7              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9ED7              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9ED7              ; Analiza (Cola_de_desplazamiento).
 259+ 9ED7
 260+ 9ED7 3A FB 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EDA A7               and a
 262+ 9EDB CC CF 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EDE 28 30            jr z,Reinicia_el_movimiento
 264+ 9EE0
 265+ 9EE0 FE FF            cp $ff
 266+ 9EE2 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EE4
 268+ 9EE4 FE FE            cp $fe
 269+ 9EE6 CC 53 9F         call z,Fijamos_bucle
 270+ 9EE9 28 25            jr z,Reinicia_el_movimiento
 271+ 9EEB
 272+ 9EEB FE FD            cp $fd
 273+ 9EED 20 11            jr nz,1F
 274+ 9EEF
 275+ 9EEF              ; ---
 276+ 9EEF              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EEF
 278+ 9EEF 3A 00 89         ld a,(Ctrl_2)
 279+ 9EF2 CB 5F            bit 3,a
 280+ 9EF4 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EF6
 282+ 9EF6              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EF6
 284+ 9EF6 21 00 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EF9 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EFB
 287+ 9EFB CD 64 9F         call Inicia_Repetimos_movimiento
 288+ 9EFE 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F00              ; ---
 290+ 9F00
 291+ 9F00 FE 01        1 cp 1
 292+ 9F02 CA 3D 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F05
 294+ 9F05 3D               dec a
 295+ 9F06 32 FB 88         ld (Cola_de_desplazamiento),a
 296+ 9F09
 297+ 9F09 3A F9 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F0C 32 F8 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F0F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F0F C9               ret
 301+ 9F10
 302+ 9F10              Reinicia_el_movimiento
 303+ 9F10
 304+ 9F10 3A 00 89         ld a,(Ctrl_2)
 305+ 9F13 CB 5F            bit 3,a
 306+ 9F15 28 1B            jr z,2F
 307+ 9F17
 308+ 9F17              ; (Cola_de_desplazamiento)="254".
 309+ 9F17
 310+ 9F17 21 FA 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F1A 35               dec (hl)
 312+ 9F1B 20 15            jr nz,2F
 313+ 9F1D
 314+ 9F1D              ; Fin de las repeticiones del último movimiento.
 315+ 9F1D
 316+ 9F1D 21 00 89         ld hl,Ctrl_2
 317+ 9F20 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F22
 319+ 9F22 2A F2 88         ld hl,(Puntero_mov)
 320+ 9F25 23               inc hl
 321+ 9F26 23               inc hl
 322+ 9F27 23               inc hl
 323+ 9F28 22 F2 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F2B              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F2B 7E               ld a,(hl)
 326+ 9F2C 32 FB 88         ld (Cola_de_desplazamiento),a
 327+ 9F2F
 328+ 9F2F C3 D7 9E         jp Cola
 329+ 9F32
 330+ 9F32 CD 6F 9F     2 call Inicia_Puntero_mov
 331+ 9F35
 332+ 9F35 21 00 89         ld hl,Ctrl_2
 333+ 9F38 CB 96            res 2,(hl)
 334+ 9F3A
 335+ 9F3A C3 A7 9E         jp Movimiento
 336+ 9F3D
 337+ 9F3D              Siguiente_desplazamiento
 338+ 9F3D
 339+ 9F3D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F3D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F3D
 342+ 9F3D 21 00 89         ld hl,Ctrl_2
 343+ 9F40 CB 96            res 2,(hl)
 344+ 9F42
 345+ 9F42 2A F2 88         ld hl,(Puntero_mov)
 346+ 9F45 23               inc hl
 347+ 9F46 23               inc hl
 348+ 9F47 22 F2 88         ld (Puntero_mov),hl
 349+ 9F4A
 350+ 9F4A 7E               ld a,(hl)
 351+ 9F4B A7               and a
 352+ 9F4C CC CF 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F4F CA 10 9F         jp z,Reinicia_el_movimiento
 354+ 9F52
 355+ 9F52 C9               ret
 356+ 9F53              ; Subrutinas -----------------------------------------
 357+ 9F53              ; ---------- --------- --------- ---------- ----------
 358+ 9F53              ;
 359+ 9F53              ;   24/07/23
 360+ 9F53              ;
 361+ 9F53              ;   Fijamos_bucle
 362+ 9F53              ;
 363+ 9F53              ;
 364+ 9F53
 365+ 9F53              Fijamos_bucle
 366+ 9F53
 367+ 9F53 3A F6 88         ld a,(Incrementa_puntero)
 368+ 9F56 3C               inc a
 369+ 9F57 32 F7 88         ld (Incrementa_puntero_backup),a
 370+ 9F5A
 371+ 9F5A CD CF 9F         call Incrementa_Puntero_indice_mov
 372+ 9F5D 2A F0 88         ld hl,(Puntero_indice_mov)
 373+ 9F60 22 F4 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F63 C9               ret
 375+ 9F64
 376+ 9F64              ; ---------- --------- --------- ---------- ----------
 377+ 9F64              ;
 378+ 9F64              ;   07/7/23
 379+ 9F64              ;
 380+ 9F64              ;   Inicia_Repetimos_movimiento
 381+ 9F64              ;
 382+ 9F64              ;
 383+ 9F64
 384+ 9F64              Inicia_Repetimos_movimiento
 385+ 9F64
 386+ 9F64              ; Iniciamos (Repetimos_movimiento).
 387+ 9F64
 388+ 9F64 DD 2A F2 88      ld ix,(Puntero_mov)
 389+ 9F68 DD 7E 02         ld a,(ix+2)
 390+ 9F6B 32 FA 88         ld (Repetimos_movimiento),a
 391+ 9F6E
 392+ 9F6E C9               ret
 393+ 9F6F
 394+ 9F6F              ; ---------- --------- --------- ---------- ----------
 395+ 9F6F              ;
 396+ 9F6F              ;   26/6/23
 397+ 9F6F              ;
 398+ 9F6F              ;   Inicia_Puntero_mov
 399+ 9F6F              ;
 400+ 9F6F              ;
 401+ 9F6F
 402+ 9F6F 2A F0 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F72 5E               ld e,(hl)
 404+ 9F73 23               inc hl
 405+ 9F74 56               ld d,(hl)
 406+ 9F75 EB               ex de,hl
 407+ 9F76 22 F2 88         ld (Puntero_mov),hl
 408+ 9F79 C9               ret
 409+ 9F7A
 410+ 9F7A              ; ---------- --------- --------- ---------- ----------
 411+ 9F7A              ;
 412+ 9F7A              ;   27/06/23
 413+ 9F7A              ;
 414+ 9F7A              ;   Aplica_movimiento.
 415+ 9F7A
 416+ 9F7A              Aplica_desplazamiento
 417+ 9F7A
 418+ 9F7A              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F7A
 420+ 9F7A 2A F2 88         ld hl, (Puntero_mov)
 421+ 9F7D
 422+ 9F7D 7E               ld a,(hl)
 423+ 9F7E E6 F0            and $f0
 424+ 9F80 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F81
 426+ 9F81 CB 7E            bit 7,(hl)
 427+ 9F83 28 03            jr z,1F
 428+ 9F85 CD A5 99         call Mov_up
 429+ 9F88 2A F2 88     1 ld hl, (Puntero_mov)
 430+ 9F8B CB 76            bit 6,(hl)
 431+ 9F8D 28 03            jr z,2F
 432+ 9F8F CD 74 99         call Mov_down
 433+ 9F92 2A F2 88     2 ld hl, (Puntero_mov)
 434+ 9F95 CB 6E            bit 5,(hl)
 435+ 9F97 28 03            jr z,3F
 436+ 9F99 CD 06 9B         call Mov_left
 437+ 9F9C 2A F2 88     3 ld hl, (Puntero_mov)
 438+ 9F9F CB 66            bit 4,(hl)
 439+ 9FA1 C8               ret z
 440+ 9FA2 CD E8 99         call Mov_right
 441+ 9FA5 C9               ret
 442+ 9FA6
 443+ 9FA6              ; ---------- --------- --------- ---------- ----------
 444+ 9FA6              ;
 445+ 9FA6              ;   26/06/23
 446+ 9FA6              ;
 447+ 9FA6              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FA6
 449+ 9FA6              Ajusta_velocidad_desplazamiento
 450+ 9FA6
 451+ 9FA6              ; 1er byte de la cadena de movimiento.
 452+ 9FA6              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FA6
 454+ 9FA6 CD C4 9F         call Extrae_nibble_alto
 455+ 9FA9
 456+ 9FA9 32 DC 88         ld (Vel_up),a
 457+ 9FAC 79               ld a,c
 458+ 9FAD E6 0F            and $0f
 459+ 9FAF 32 DD 88         ld (Vel_down),a
 460+ 9FB2
 461+ 9FB2              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FB2              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FB2
 464+ 9FB2 23               inc hl
 465+ 9FB3 CD C4 9F         call Extrae_nibble_alto
 466+ 9FB6
 467+ 9FB6 32 DA 88         ld (Vel_left),a
 468+ 9FB9 79               ld a,c
 469+ 9FBA E6 0F            and $0f
 470+ 9FBC 32 DB 88         ld (Vel_right),a
 471+ 9FBF
 472+ 9FBF              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FBF
 474+ 9FBF 23               inc hl
 475+ 9FC0 22 F2 88         ld (Puntero_mov),hl
 476+ 9FC3 C9               ret
 477+ 9FC4
 478+ 9FC4 06 04        Extrae_nibble_alto ld b,4
 479+ 9FC6 7E               ld a,(hl)
 480+ 9FC7 4F               ld c,a
 481+ 9FC8 E6 F0            and $f0
 482+ 9FCA CB 3F        1 srl a
 483+ 9FCC 10 FC            djnz 1B
 484+ 9FCE C9               ret
 485+ 9FCF
 486+ 9FCF              ; ---------- --------- --------- ---------- ----------
 487+ 9FCF              ;
 488+ 9FCF              ;   5/7/23
 489+ 9FCF              ;
 490+ 9FCF              ;   Incrementa_Puntero_indice_mov
 491+ 9FCF
 492+ 9FCF              Incrementa_Puntero_indice_mov
 493+ 9FCF
 494+ 9FCF 21 F6 88         ld hl,Incrementa_puntero
 495+ 9FD2 34               inc (hl)
 496+ 9FD3
 497+ 9FD3 2A F0 88         ld hl,(Puntero_indice_mov)
 498+ 9FD6 01 02 00         ld bc,2
 499+ 9FD9 A7               and a
 500+ 9FDA 09               add hl,bc
 501+ 9FDB 22 F0 88         ld (Puntero_indice_mov),hl
 502+ 9FDE
 503+ 9FDE 7E               ld a,(hl)
 504+ 9FDF A7               and a
 505+ 9FE0
 506+ 9FE0              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FE0
 508+ 9FE0              ;    jr z,$
 509+ 9FE0
 510+ 9FE0              ;! Reinicia el Patrón de movimiento.
 511+ 9FE0
 512+ 9FE0 CC E5 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FE3
 514+ 9FE3 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FE4
 516+ 9FE4 C9               ret
 517+ 9FE5
 518+ 9FE5
 519+ 9FE5              ; ---------- --------- --------- ---------- ----------
 520+ 9FE5              ;
 521+ 9FE5              ;   24/07/23
 522+ 9FE5              ;
 523+ 9FE5              ;   Inicializa_Puntero_indice_mov
 524+ 9FE5
 525+ 9FE5              Inicializa_Puntero_indice_mov
 526+ 9FE5
 527+ 9FE5              ; Existe etiqueta de bucle principal???
 528+ 9FE5
 529+ 9FE5 2A F4 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FE8 24               inc h
 531+ 9FE9 25               dec h
 532+ 9FEA 28 05            jr z,2F
 533+ 9FEC
 534+ 9FEC 22 F0 88         ld (Puntero_indice_mov),hl
 535+ 9FEF 18 14            jr 3F
 536+ 9FF1
 537+ 9FF1              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ 9FF1
 539+ 9FF1 3A F6 88     2 ld a,(Incrementa_puntero)
 540+ 9FF4 47               ld b,a
 541+ 9FF5
 542+ 9FF5 2A F0 88         ld hl,(Puntero_indice_mov)
 543+ 9FF8 2B           1 dec hl
 544+ 9FF9 2B               dec hl
 545+ 9FFA 10 FC            djnz 1B
 546+ 9FFC 22 F0 88         ld (Puntero_indice_mov),hl
 547+ 9FFF
 548+ 9FFF AF               xor a
 549+ A000 32 F6 88         ld (Incrementa_puntero),a
 550+ A003 18 06            jr 4F
 551+ A005
 552+ A005 3A F7 88     3 ld a,(Incrementa_puntero_backup)
 553+ A008 32 F6 88         ld (Incrementa_puntero),a
 554+ A00B C9           4 ret
 555+ A00C
 556+ A00C
 557+ A00C
# file closed: Patrones_de_mov.asm
1653  A00C              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A00C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A00C              ;
   3+ A00C              ;	4/9/23
   4+ A00C              ;
   5+ A00C              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A00C
   7+ A00C              ;	ADC HL,SP	LD (addr),SP
   8+ A00C              ;	ADD HL,SP	LD SP,(addr)
   9+ A00C              ;	ADD IX,SP	LD SP,nn
  10+ A00C              ; 	ADD IY,SP	LD SP,HL
  11+ A00C              ;				LD SP,IX
  12+ A00C              ;	DEC SP		LD SP,IY
  13+ A00C
  14+ A00C              ;	EX (SP),HL
  15+ A00C              ;	EX (SP),IX
  16+ A00C              ;	EX (SP),IY
  17+ A00C
  18+ A00C              ;	INC SP
  19+ A00C
  20+ A00C                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 13 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4
  33+ 7FA4              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  34+ 7FA4
  35+ 7FA4 31 E5 88         ld sp,Variables_de_borrado+6
  36+ 7FA7
  37+ 7FA7 E5               push hl
  38+ 7FA8 DD E5            push ix
  39+ 7FAA FD E5            push iy
  40+ 7FAC
  41+ 7FAC 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  42+ 7FAF
  43+ 7FAF E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  44+ 7FB0 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  45+ 7FB2 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  46+ 7FB4
  47+ 7FB4              ; Disparo o entidad?
  48+ 7FB4
  49+ 7FB4 3A 02 89         ld a,(Ctrl_1)
  50+ 7FB7 CB 47            bit 0,a
  51+ 7FB9 28 05            jr z,2F
  52+ 7FBB
  53+ 7FBB 2A 1B 89         ld hl,(Stack_snapshot_disparos)
  54+ 7FBE 18 0F            jr 4F
  55+ 7FC0
  56+ 7FC0              ; No es disparo. Entidad/Amadeus ????
  57+ 7FC0
  58+ 7FC0 3A EF 88     2 ld a,(Ctrl_0)
  59+ 7FC3 CB 77            bit 6,a
  60+ 7FC5 28 05            jr z,7F
  61+ 7FC7
  62+ 7FC7              ; Guardamos foto de Amadeus.
  63+ 7FC7
  64+ 7FC7 2A 21 89         ld hl,(End_Snapshot_Amadeus)
  65+ 7FCA 18 03            jr 4F
  66+ 7FCC
  67+ 7FCC 2A 19 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  68+ 7FCF
  69+ 7FCF 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  70+ 7FD1
  71+ 7FD1 D1           1 pop de
  72+ 7FD2 73               ld (hl),e
  73+ 7FD3 23               inc hl
  74+ 7FD4 72               ld (hl),d
  75+ 7FD5 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  76+ 7FD6 10 F9            djnz 1B
  77+ 7FD8
  78+ 7FD8              ; Disparo o entidad ?
  79+ 7FD8
  80+ 7FD8 3A 02 89         ld a,(Ctrl_1)
  81+ 7FDB CB 47            bit 0,a
  82+ 7FDD 28 05            jr z,5F
  83+ 7FDF
  84+ 7FDF 22 1B 89         ld (Stack_snapshot_disparos),hl
  85+ 7FE2 18 12            jr 6F
  86+ 7FE4
  87+ 7FE4              ; Entidad o Amadeus ?
  88+ 7FE4
  89+ 7FE4 3A EF 88     5 ld a,(Ctrl_0)
  90+ 7FE7 CB 77            bit 6,a
  91+ 7FE9 28 08            jr z,8F
  92+ 7FEB
  93+ 7FEB 22 21 89         ld (End_Snapshot_Amadeus),hl
  94+ 7FEE ED 7B 13 89      ld sp,(Stack)
  95+ 7FF2 C9               ret
  96+ 7FF3
  97+ 7FF3 22 19 89     8 ld (Stack_snapshot),hl
  98+ 7FF6 ED 7B 13 89  6 ld sp,(Stack)
  99+ 7FFA
 100+ 7FFA              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 101+ 7FFA
 102+ 7FFA 5D               ld e,l
 103+ 7FFB 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 104+ 7FFC
 105+ 7FFC 2A 37 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 106+ 7FFF 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 107+ 8000 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 108+ 8001 72               ld (hl),d                                     ; _ álbum a otro.
 109+ 8002
 110+ 8002 C9               ret
 111+ 8003
 112+ 8003              ; ------------------------------------------------
 113+ 8003              ;
 114+ 8003              ;   19/10/23
 115+ 8003              ;
 116+ 8003              ;   La rutina estará situada justo después de:
 117+ 8003              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 120+ 8003              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 121+ 8003
 122+ 8003                  org $72ec
 123+ 72EC
 124+ 72EC              Gestiona_albumes_de_fotos
 125+ 72EC
 126+ 72EC              ; En 1er lugar consultamos el bit_4 de (Semaforo).
 127+ 72EC              ; Nos indica si existe algún album vacío.
 128+ 72EC
 129+ 72EC              ;    ld a,(Semaforo)
 130+ 72EC              ;    bit 4,a
 131+ 72EC              ;    jr z,7F
 132+ 72EC
 133+ 72EC              ;    res 4,a
 134+ 72EC              ;    ld (Semaforo),a
 135+ 72EC
 136+ 72EC              ; Album_de_fots_2 o Album_de_fotos_1 está vacío.
 137+ 72EC              ; Album_de_fotos_2 ???
 138+ 72EC
 139+ 72EC              ;    bit 7,a                         ; bit_7 ="1". Indica que Album_de_fotos_2 está vacío.
 140+ 72EC              ;    jr z,8F                         ; Hay que "ordenar los álbumes". Volcamos Album_de_fotos_3 a Album_de_fotos_2.
 141+ 72EC
 142+ 72EC              ; Rellena Album_de_fotos_2
 143+ 72EC
 144+ 72EC               ;   res 7,a
 145+ 72EC               ;   set 5,a                         ; El bit_5 indica que el álbum ha sido reestructurado.
 146+ 72EC               ;   ld (Semaforo),a
 147+ 72EC
 148+ 72EC               ;   call Album3_a_Album2
 149+ 72EC               ;   call Actualiza_punteros_de_albumes
 150+ 72EC
 151+ 72EC               ;   jr 7F
 152+ 72EC
 153+ 72EC              ; Album_de_fotos_1 está vacío.
 154+ 72EC
 155+ 72EC              ;8 res 6,a
 156+ 72EC              ;    set 5,a
 157+ 72EC              ;    ld (Semaforo),a
 158+ 72EC
 159+ 72EC              ;    call Album2_a_Album1
 160+ 72EC
 161+ 72EC              ;   1-1-0-X Distribución actual de los álbumes.
 162+ 72EC
 163+ 72EC              ;   Está el buffer lleno ???
 164+ 72EC
 165+ 72EC              ;    ld a,(Ctrl_1)
 166+ 72EC              ;    bit 5,a
 167+ 72EC              ;    jr $
 168+ 72EC
 169+ 72EC              ;    call Album3_a_Album2
 170+ 72EC              ;    call Actualiza_punteros_de_albumes
 171+ 72EC
 172+ 72EC              ;    ld a,(Contador_de_frames_2)
 173+ 72EC              ;    ex af,af'
 174+ 72EC              ;    ld a,(Contador_de_frames)
 175+ 72EC              ;    jr $
 176+ 72EC
 177+ 72EC              ; #############################################################3
 178+ 72EC
 179+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 180+ 72EC              ;   Vaciamos Album_de_fotos.
 181+ 72EC
 182+ 72EC              ;   Album_de_fotos. Contiene datos ???
 183+ 72EC
 184+ 72EC 21 01 70     7 ld hl,Album_de_fotos+1
 185+ 72EF 7E               ld a,(hl)
 186+ 72F0 A7               and a
 187+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 188+ 72F3
 189+ 72F3              ;   Hemos impreso Album_de_fotos. Limpiamos el álbum y actualizamos (End_Snapshot).
 190+ 72F3
 191+ 72F3 2A 1D 89         ld hl,(End_Snapshot)
 192+ 72F6 01 00 70         ld bc,Album_de_fotos
 193+ 72F9 11 01 70         ld de,Album_de_fotos+1
 194+ 72FC AF               xor a
 195+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 196+ 72FE
 197+ 72FE CD AD 73         call Limpia_album
 198+ 7301
 199+ 7301 21 00 00         ld hl,0
 200+ 7304 22 1D 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 201+ 7307
 202+ 7307              ; ----- ----- ----- -----
 203+ 7307
 204+ 7307              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 205+ 7307              ;   Album_de_fotos_1. Contiene un frame completo ???
 206+ 7307
 207+ 7307 3A 3B 89     3 ld a,(Semaforo)
 208+ 730A CB 4F            bit 1,a
 209+ 730C 20 02            jr nz,4F
 210+ 730E
 211+ 730E              ;   Album_de_fotos_1 no está completo.
 212+ 730E
 213+ 730E              ;    ld hl,Semaforo
 214+ 730E              ;    set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 215+ 730E              ;    res 1,(hl)
 216+ 730E              ;    ret                         ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 217+ 730E
 218+ 730E 18 FE            jr $
 219+ 7310
 220+ 7310
 221+ 7310              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 222+ 7310
 223+ 7310 21 55 70     4 ld hl,Album_de_fotos_1+1
 224+ 7313 7E               ld a,(hl)
 225+ 7314 A7               and a
 226+ 7315 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 227+ 7317
 228+ 7317              ; ----- ----- ----- -----
 229+ 7317              ; ----- ----- ----- -----
 230+ 7317
 231+ 7317              ;   Album_de_fotos_1 Contiene un frame completo que hay que volcar en Album_de_fotos.
 232+ 7317              ;   Actualiza (End_Snapshot).
 233+ 7317
 234+ 7317 2A 23 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 235+ 731A 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 236+ 731D 11 00 70         ld de,Album_de_fotos        ; Destino.
 237+ 7320
 238+ 7320 CD AD 73         call Limpia_album
 239+ 7323
 240+ 7323              ;   Calculamos (End_Snapshot)
 241+ 7323
 242+ 7323 A7               and a
 243+ 7324 ED 4A            adc hl,bc
 244+ 7326 22 1D 89         ld (End_Snapshot),hl
 245+ 7329
 246+ 7329              ;   Limpiamos Album_de_fotos_1.
 247+ 7329
 248+ 7329 2A 23 89         ld hl,(End_Snapshot_1)
 249+ 732C 01 54 70         ld bc,Album_de_fotos_1
 250+ 732F 11 55 70         ld de,Album_de_fotos_1+1
 251+ 7332 AF               xor a
 252+ 7333 02               ld (bc),a
 253+ 7334
 254+ 7334 CD AD 73         call Limpia_album
 255+ 7337
 256+ 7337 21 00 00         ld hl,0
 257+ 733A 22 23 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 258+ 733D
 259+ 733D              ; ----- ----- ----- -----
 260+ 733D
 261+ 733D              ;   Album_de_fotos_2. Contiene Frame completo ???
 262+ 733D
 263+ 733D 3A 3B 89     1 ld a,(Semaforo)
 264+ 7340 CB 57            bit 2,a
 265+ 7342 20 02            jr nz,5F
 266+ 7344
 267+ 7344              ;   Album_de_fotos_2 no está completo.
 268+ 7344
 269+ 7344              ;   Ha sido reestructurado ???
 270+ 7344
 271+ 7344
 272+ 7344              ;    ld a,(Contador_de_frames_2)
 273+ 7344              ;    ex af,af'
 274+ 7344               ;   ld a,(Contador_de_frames)
 275+ 7344 18 FE            jr $
 276+ 7346
 277+ 7346              ;    ld a,(Semaforo)
 278+ 7346              ;    bit 5,a
 279+ 7346              ;    ret nz
 280+ 7346
 281+ 7346              ;    ld hl,Semaforo
 282+ 7346              ;    set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 283+ 7346              ;    set 6,(hl)
 284+ 7346              ;    ret
 285+ 7346
 286+ 7346              ;   Album_de_fotos_2 contiene un FRAME completo. Datos ???.
 287+ 7346
 288+ 7346 21 A9 70     5 ld hl,Album_de_fotos_2+1
 289+ 7349 7E               ld a,(hl)
 290+ 734A A7               and a
 291+ 734B 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 292+ 734D
 293+ 734D              ; ----- ----- ----- -----
 294+ 734D              ; ----- ----- ----- -----
 295+ 734D              ; ----- ----- ----- -----
 296+ 734D
 297+ 734D              ;   Album_de_fotos_2 contiene un frame completo.
 298+ 734D              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 299+ 734D
 300+ 734D CD 86 73         call Album2_a_Album1
 301+ 7350
 302+ 7350              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 303+ 7350              ;   Album_de_fotos_3. Contiene un frame completo ???
 304+ 7350
 305+ 7350 3A 3B 89     2 ld a,(Semaforo)
 306+ 7353 CB 5F            bit 3,a
 307+ 7355 20 02            jr nz,6F
 308+ 7357
 309+ 7357              ;   Album_de_fotos_3 no está completo.
 310+ 7357
 311+ 7357              ;   Ha sido reestructurado ???
 312+ 7357
 313+ 7357 18 FE            jr $
 314+ 7359
 315+ 7359               ;   ld a,(Semaforo)
 316+ 7359              ;    bit 5,a
 317+ 7359              ;    ret nz
 318+ 7359
 319+ 7359              ;    ld hl,Semaforo
 320+ 7359              ;    set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 321+ 7359              ;    set 7,(hl)                  ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 322+ 7359              ;    ret
 323+ 7359
 324+ 7359              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 325+ 7359
 326+ 7359 21 FD 70     6 ld hl,Album_de_fotos_3+1
 327+ 735C 7E               ld a,(hl)
 328+ 735D A7               and a
 329+ 735E C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 330+ 735F
 331+ 735F              ; ----- ----- ----- -----
 332+ 735F              ; ----- ----- ----- -----
 333+ 735F              ; ----- ----- ----- -----
 334+ 735F
 335+ 735F              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2 y limpiamos Album_de_fotos_3.
 336+ 735F
 337+ 735F 2A 2B 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 338+ 7362 01 FC 70         ld bc,Album_de_fotos_3                  ; Origen.
 339+ 7365 11 A8 70         ld de,Album_de_fotos_2                  ; Destino.
 340+ 7368
 341+ 7368 CD AD 73         call Limpia_album
 342+ 736B
 343+ 736B              ;   Actualizamos (End_Snapshot_2):
 344+ 736B
 345+ 736B A7               and a
 346+ 736C ED 4A            adc hl,bc
 347+ 736E 22 27 89         ld (End_Snapshot_2),hl
 348+ 7371
 349+ 7371              ;   Limpiamos Album_de_fotos_3.
 350+ 7371
 351+ 7371 2A 2B 89         ld hl,(End_Snapshot_3)
 352+ 7374 01 FC 70         ld bc,Album_de_fotos_3
 353+ 7377 11 FD 70         ld de,Album_de_fotos_3+1
 354+ 737A AF               xor a
 355+ 737B 02               ld (bc),a
 356+ 737C CD AD 73         call Limpia_album
 357+ 737F
 358+ 737F              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 359+ 737F              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 360+ 737F
 361+ 737F 21 00 00         ld hl,0
 362+ 7382 22 2B 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 363+ 7385
 364+ 7385 C9               ret
 365+ 7386
 366+ 7386 2A 27 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 367+ 7389 01 A8 70         ld bc,Album_de_fotos_2                   ; Origen.
 368+ 738C 11 54 70         ld de,Album_de_fotos_1                   ; Destino.
 369+ 738F CD AD 73         call Limpia_album
 370+ 7392
 371+ 7392              ;   Actualizamos (End_Snapshot_1):
 372+ 7392
 373+ 7392 A7               and a
 374+ 7393 ED 4A            adc hl,bc
 375+ 7395 22 23 89         ld (End_Snapshot_1),hl
 376+ 7398
 377+ 7398              ;   Limpiamos Album_de_fotos_2.
 378+ 7398
 379+ 7398 2A 27 89         ld hl,(End_Snapshot_2)
 380+ 739B 01 A8 70         ld bc,Album_de_fotos_2
 381+ 739E 11 A9 70         ld de,Album_de_fotos_2+1
 382+ 73A1 AF               xor a
 383+ 73A2 02               ld (bc),a
 384+ 73A3 CD AD 73         call Limpia_album
 385+ 73A6 21 00 00         ld hl,0
 386+ 73A9 22 27 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 387+ 73AC C9               ret
 388+ 73AD
 389+ 73AD
 390+ 73AD              ; ----------------------------------------------------
 391+ 73AD              ;
 392+ 73AD              ;   10/8/23
 393+ 73AD              ;
 394+ 73AD              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 395+ 73AD              ;
 396+ 73AD              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 397+ 73AD              ;           BC ..... Dirección de inicio del álbum.
 398+ 73AD              ;           DE ..... Dirección de inicio del álbum. +1
 399+ 73AD
 400+ 73AD              ;    ld hl,(End_Snapshot)
 401+ 73AD              ;    ld bc,Album_de_fotos
 402+ 73AD              ;    ld de,Album_de_fotos+1
 403+ 73AD
 404+ 73AD              ;   MODIFICA: A,HL,BC y DE.
 405+ 73AD
 406+ 73AD              Limpia_album
 407+ 73AD D5               push de                     ; Guardo DESTINO.
 408+ 73AE C5               push bc                     ; Guardo ORIGEN.
 409+ 73AF ED 42            sbc hl,bc
 410+ 73B1 4D               ld c,l
 411+ 73B2 44               ld b,h
 412+ 73B3 E1               pop hl
 413+ 73B4 C5               push bc
 414+ 73B5 ED B0            ldir
 415+ 73B7 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 416+ 73B8 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 417+ 73B9 C9               ret                         ; _ a otro).
 418+ 73BA
 419+ 73BA              ; --------------------------------------------------------------------------------------------
 420+ 73BA              ;
 421+ 73BA              ;   20/10/23
 422+ 73BA
 423+ 73BA              Actualiza_punteros_de_albumes
 424+ 73BA
 425+ 73BA 2A 2F 89         ld hl,(Puntero_indice_album_de_fotos)
 426+ 73BD 2B               dec hl
 427+ 73BE 2B               dec hl
 428+ 73BF 22 2F 89         ld (Puntero_indice_album_de_fotos),hl
 429+ 73C2
 430+ 73C2 2A 33 89         ld hl,(Puntero_indice_End_Snapshot)
 431+ 73C5 2B               dec hl
 432+ 73C6 2B               dec hl
 433+ 73C7 22 33 89         ld (Puntero_indice_End_Snapshot),hl
 434+ 73CA CD 7F 8C         call Extrae_address
 435+ 73CD 22 37 89         ld (Puntero_de_End_Snapshot),hl
 436+ 73D0
 437+ 73D0 CD 7F 8C         call Extrae_address
 438+ 73D3 22 19 89         ld (Stack_snapshot),hl
 439+ 73D6
 440+ 73D6 C9               ret
 441+ 73D7
# file closed: Guarda_foto_registros.asm
1654  73D7
1655  73D7              	SAVESNA "Pruebas.sna", START
1656  73D7
1657  73D7
1658  73D7
1659  73D7
# file closed: Banco_de_pruebas.asm
