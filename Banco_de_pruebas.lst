# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 2B 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD E3 A1     	call Pinta_disparos_Amadeus
  74  82F6 CD B4 9E     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 55 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 22 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 53 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 53 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 56 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 32 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 FE 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas de entidades.
  83+ 8961              ;
  84+ 8961              ;	18/1/24
  85+ 8961              ;
  86+ 8961
  87+ 8961              Indice_de_cajas_de_entidades
  88+ 8961
  89+ 8961 7F 89        	defw Caja_1
  90+ 8963 8B 89        	defw Caja_2
  91+ 8965 97 89        	defw Caja_3
  92+ 8967 A3 89        	defw Caja_4
  93+ 8969 AF 89        	defw Caja_5
  94+ 896B BB 89        	defw Caja_6
  95+ 896D C7 89        	defw Caja_7
  96+ 896F
  97+ 896F 00 00        	defw 0
  98+ 8971 00 00        	defw 0
  99+ 8973
 100+ 8973              ; -------------------------
 101+ 8973
 102+ 8973              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8973
 104+ 8973              ;	db 0
 105+ 8973
 106+ 8973              ; ---------- ---------- ---------- ---------- ----------
 107+ 8973              ;
 108+ 8973              ;	28/05/24
 109+ 8973              ;
 110+ 8973              ; 	Cada caja tiene 14 bytes !!!
 111+ 8973              ;
 112+ 8973              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8973
 114+ 8973 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8974 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8976 00           	db 0												; (Contador_de_vueltas).
 117+ 8977 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8978 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 897A 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 897C 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897E 00           	db 0												; (Velocidad).
 122+ 897F
 123+ 897F              ; ---------- ---------- ---------- ---------- ----------
 124+ 897F              ;
 125+ 897F              ;	22/01/24
 126+ 897F              ;
 127+ 897F              ; 	Cada caja tiene 12 bytes !!!
 128+ 897F
 129+ 897F 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 8982 00           	db 0												; (Contador_de_vueltas).
 131+ 8983 00           	db 0												; (Impacto).
 132+ 8984 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8986 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8988 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 898A 00           	db 0												; (Velocidad).
 136+ 898B
 137+ 898B              ; ---------- ---------- ---------- ---------- ----------
 138+ 898B
 139+ 898B 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898E 00           	db 0 												; (Contador_de_vueltas).
 141+ 898F 00           	db 0												; (Impacto).
 142+ 8990 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 8992 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8994 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8996 00           	db 0												; (Velocidad).
 146+ 8997
 147+ 8997              ; ---------- ---------- ---------- ---------- ----------
 148+ 8997
 149+ 8997 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 899A 00           	db 0 												; (Contador_de_vueltas).
 151+ 899B 00           	db 0												; (Impacto).
 152+ 899C 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 89A0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 89A2 00           	db 0												; (Velocidad).
 156+ 89A3
 157+ 89A3              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A3
 159+ 89A3 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A6 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A7 00           	db 0												; (Impacto).
 162+ 89A8 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89AA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89AC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AE 00           	db 0												; (Velocidad).
 166+ 89AF
 167+ 89AF              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AF
 169+ 89AF 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89B2 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B3 00           	db 0												; (Impacto).
 172+ 89B4 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89BA 00           	db 0												; (Velocidad).
 176+ 89BB
 177+ 89BB              ; ---------- ---------- ---------- ---------- ----------
 178+ 89BB
 179+ 89BB 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BE 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BF 00           	db 0												; (Impacto).
 182+ 89C0 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89C2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C6 00           	db 0												; (Velocidad).
 186+ 89C7
 187+ 89C7              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C7
 189+ 89C7 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89CA 00           	db 0 												; (Contador_de_vueltas).
 191+ 89CB 00           	db 0												; (Impacto).
 192+ 89CC 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89D0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89D2 00           	db 0												; (Velocidad).
 196+ 89D3
 197+ 89D3              ; -------------------------------------------------------------------------------------
 198+ 89D3              ;
 199+ 89D3              ;	10/11/24
 200+ 89D3              ;
 201+ 89D3              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D3              ;
 203+ 89D3              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D3              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D3              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D3              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D3
 208+ 89D3              Indice_de_definiciones_de_entidades
 209+ 89D3
 210+ 89D3 D7 89        	defw Entidad_1
 211+ 89D5 E4 89        	defw Entidad_2
 212+ 89D7
 213+ 89D7              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D7
 215+ 89D7              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 216+ 89D7
 217+ 89D7 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89DA 01           	db 1												; (Contador_de_vueltas).
 219+ 89DB 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DD 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DF
 222+ 89DF              ; Aleatoriedad en la posición de inicio de la entidad.
 223+ 89DF              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 224+ 89DF
 225+ 89DF 00 40        Pos_inicio_entidad1	defw $4000	                        ; (Posicion_inicio).
 226+ 89E1 00           	db 0												; (Cuad_objeto).
 227+ 89E2
 228+ 89E2 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 229+ 89E4
 230+ 89E4              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 231+ 89E4
 232+ 89E4 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 233+ 89E7 01           	db 1												; (Contador_de_vueltas).
 234+ 89E8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 235+ 89EA 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 236+ 89EC 40 50        	defw $5040                                      	; (Posicion_inicio).
 237+ 89EE 01           	db 1												; (Cuad_objeto).
 238+ 89EF C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 239+ 89F1
 240+ 89F1              ; -------------------------------------------------------------------------------------
 241+ 89F1              ;
 242+ 89F1              ;	28/05/24
 243+ 89F1              ;
 244+ 89F1              ;	Definición de Amadeus.
 245+ 89F1              ;
 246+ 89F1              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 247+ 89F1              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 248+ 89F1
 249+ 89F1 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 250+ 89F4 00           	db 0												; (Contador_de_vueltas).
 251+ 89F5 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 252+ 89F7 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 253+ 89F9 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 254+ 89FB 03           	db 3												; (Cuad_objeto).
 255+ 89FC DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  89FE              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FE
   2+ 89FE
   3+ 89FE              ;   07/07/23
   4+ 89FE              ;
   5+ 89FE              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FE              ;
   7+ 89FE              ;   Codificación:
   8+ 89FE              ;
   9+ 89FE              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FE              ;
  11+ 89FE              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FE              ;
  13+ 89FE              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FE              ;
  15+ 89FE              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FE              ;
  17+ 89FE              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FE              ;                               ..... %01000010 Vel_up 4
  19+ 89FE              ;                                               Vel_down 2
  20+ 89FE              ;                               ..... $42
  21+ 89FE              ;
  22+ 89FE              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FE              ;
  24+ 89FE              ;                               ..... %01000010 Vel_left 4
  25+ 89FE              ;                                               Vel_right 2
  26+ 89FE              ;                               ..... $42
  27+ 89FE              ;
  28+ 89FE              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FE              ;
  30+ 89FE              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FE              ;
  32+ 89FE              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FE              ;
  34+ 89FE              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FE              ;                                     $53
  36+ 89FE              ;
  37+ 89FE              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FE              ;
  39+ 89FE              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FE              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FE              ;
  42+ 89FE              ;                       Arriba ..... $81
  43+ 89FE              ;                       Arriba - izquierda ..... $a1
  44+ 89FE              ;                       Arriba - derecha ..... $91
  45+ 89FE              ;
  46+ 89FE              ;                       Abajo ..... $41
  47+ 89FE              ;                       Abajo - izquierda ..... $61
  48+ 89FE              ;                       Abajo - derecha ..... $51
  49+ 89FE              ;
  50+ 89FE              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FE              ;
  52+ 89FE              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FE              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FE              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FE              ;
  56+ 89FE              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FE              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FE              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FE              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FE              ;
  61+ 89FE              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FE              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FE              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FE              ;
  65+ 89FE              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FE              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FE              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FE              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FE
  70+ 89FE              ; ----- ----- ----- ----- -----
  71+ 89FE
  72+ 89FE 2A 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A00 32 8A            defw F_1
  74+ 8A02 3C 8A            defw F_2
  75+ 8A04 46 8A            defw Codo_abajo_derecha
  76+ 8A06 7A 8A            defw Derecha_y_subiendo
  77+ 8A08 84 8A            defw Derecha_y_subiendo_1
  78+ 8A0A 8E 8A            defw F_3
  79+ 8A0C 98 8A            defw F_4
  80+ 8A0E A2 8A            defw Derecha_y_bajando
  81+ 8A10 AC 8A            defw Derecha_y_bajando_1
  82+ 8A12 B6 8A            defw Derecha_y_bajando_2
  83+ 8A14 C0 8A            defw Codo_derecha_abajo
  84+ 8A16 F0 8A            defw Codo_abajo_izq.
  85+ 8A18 24 8B            defw Izquierda_y_subiendo
  86+ 8A1A 2E 8B            defw Izquierda_y_subiendo_1
  87+ 8A1C 38 8B            defw F_5
  88+ 8A1E 42 8B            defw F_6
  89+ 8A20 4C 8B            defw Izquierda_y_bajando
  90+ 8A22 56 8B            defw Izquierda_y_bajando_1
  91+ 8A24 60 8B            defw Izquierda_y_bajando_2
  92+ 8A26 6A 8B            defw Codo_izquierda_abajo
  93+ 8A28 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2A
  95+ 8A2A 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2E 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A32
  98+ 8A32 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A36 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3A 08 00
 100+ 8A3C
 101+ 8A3C 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A40 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A44 0F FE
 103+ 8A46
 104+ 8A46 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A52 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A56 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A62 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A66 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6E 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A72 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A76 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7A
 118+ 8A7A 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7E 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A82 06 00
 120+ 8A84
 121+ 8A84 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A88 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8C 02 00
 123+ 8A8E
 124+ 8A8E 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A92 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A96 04 00
 126+ 8A98
 127+ 8A98 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9C 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA0 08 00
 129+ 8AA2
 130+ 8AA2 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA6 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAA 02 00
 132+ 8AAC
 133+ 8AAC 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB0 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB4 06 00
 135+ 8AB6
 136+ 8AB6 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABA 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABE 06 00
 138+ 8AC0
 139+ 8AC0              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC0
 141+ 8AC0 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC4 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD4 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AEC 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF0
 154+ 8AF0 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B00 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B04 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B08 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0C 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B10 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B14 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B18 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B20 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B24
 168+ 8B24 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B28 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2C 06 00
 170+ 8B2E
 171+ 8B2E 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B32 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B36 02 00
 173+ 8B38
 174+ 8B38 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3C 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B40 04 00
 176+ 8B42
 177+ 8B42 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B46 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4A 08 00
 179+ 8B4C
 180+ 8B4C 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B50 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B54 02 00
 182+ 8B56
 183+ 8B56 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5A 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5E 06 00
 185+ 8B60
 186+ 8B60 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B64 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B68 06 00
 188+ 8B6A
 189+ 8B6A 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B72 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B76 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7E 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B82 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B86 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B92 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B96 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9A
 202+ 8B9A
 203+ 8B9A
 204+ 8B9A
 205+ 8B9A
 206+ 8B9A
 207+ 8B9A
 208+ 8B9A
 209+ 8B9A
 210+ 8B9A
# file closed: Patrones_de_mov.asm
 149  8B9A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9A              ; 19/1/24
   2+ 8B9A
   3+ 8B9A              Indice_de_niveles
   4+ 8B9A
   5+ 8B9A A2 8B        	defw Nivel_1
   6+ 8B9C A9 8B        	defw Nivel_2
   7+ 8B9E
   8+ 8B9E              ;	...
   9+ 8B9E              ;	...
  10+ 8B9E              ;	+ Niveles ...
  11+ 8B9E
  12+ 8B9E 00 00        	defw 0
  13+ 8BA0 00 00        	defw 0
  14+ 8BA2
  15+ 8BA2 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA3 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BA7 01 01
  17+ 8BA9
  18+ 8BA9 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BAA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BAE 01 02
  20+ 8BB0 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BB4 01 02
  21+ 8BB6
# file closed: Niveles.asm
 150  8BB6
 151  8BB6              ; --------------------------------------------------------------------------------
 152  8BB6              ;
 153  8BB6              ; 12/05/24
 154  8BB6              ;
 155  8BB6              ; Parámetros DRAW.
 156  8BB6              ;
 157  8BB6
 158  8BB6              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BB6
 160  8BB6 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BB7              ;															- Patrón de movimiento.
 162  8BB7 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BB8 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BB9
 165  8BB9 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BBA              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BBA
 168  8BBA              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BBA              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BBA              ; Ejemplos.
 171  8BBA
 172  8BBA              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BBA              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BBA              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BBA              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BBA              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BBA
 178  8BBA 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BBB              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BBB              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BBB
 182  8BBB 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BBD              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BBD
 185  8BBD 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BBF
 187  8BBF              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BBF
 189  8BBF 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BC1              ;														; _palabras que componen el "movimiento_masticado".
 191  8BC1
 192  8BC1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BC1
 194  8BC1 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BC2              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BC2              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BC2              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BC2              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BC2
 200  8BC2 00           Ctrl_2 db 0
 201  8BC3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BC3              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BC3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BC3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BC3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BC3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BC3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BC3              ;
 209  8BC3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BC3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BC3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BC3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BC3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BC3              ;														BIT 4, ???
 215  8BC3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BC3
 217  8BC3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BC4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BC4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BC4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BC4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BC4              ;
 223  8BC4              ; 														DESCRIPCIÖN:
 224  8BC4              ;
 225  8BC4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BC4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BC4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BC4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BC4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BC4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BC4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BC4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BC4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BC4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BC4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BC4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BC4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BC4              ;
 239  8BC4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BC4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BC4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BC4
 243  8BC4              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BC4
 245  8BC4 00           Filas db 0												; Filas. [DRAW]
 246  8BC5 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BC6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BC8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BCA
 250  8BCA              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BCA
 252  8BCA 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BCB              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BCB              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BCB
 256  8BCB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BCB
 258  8BCB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BCB              ;
 260  8BCB              ;	COLORES: 0 ..... NEGRO
 261  8BCB              ;    		 1 ..... AZUL
 262  8BCB              ; 			 2 ..... ROJO
 263  8BCB              ;			 3 ..... MAGENTA
 264  8BCB              ; 			 4 ..... VERDE
 265  8BCB              ; 			 5 ..... CIAN
 266  8BCB              ;			 6 ..... AMARILLO
 267  8BCB              ; 			 7 ..... BLANCO
 268  8BCB
 269  8BCB 00 00        Indice_Sprite_der defw 0
 270  8BCD 00 00        Indice_Sprite_izq defw 0
 271  8BCF 00 00        Puntero_DESPLZ_der defw 0
 272  8BD1 00 00        Puntero_DESPLZ_izq defw 0
 273  8BD3
 274  8BD3 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8BD5 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8BD6 00           Columnas db 0
 277  8BD7 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8BD9              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BD9 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8BDA
 281  8BDA              ; variables de control general.
 282  8BDA
 283  8BDA 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8BDB
 285  8BDB              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8BDB
 287  8BDB              Perfiles_de_velocidad
 288  8BDB
 289  8BDB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8BDC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8BDD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8BDE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8BDF
 294  8BDF              ; Contadores de 16 bits.
 295  8BDF
 296  8BDF 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8BE1 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8BE7
 301  8BE7              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8BE7
 303  8BE7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8BE9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8BEB 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8BED              ;
 307  8BED              ;
 308  8BED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8BEE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8BEE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8BEE 00           Incrementa_puntero_backup db 0
 312  8BEF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8BF0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8BF0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8BF1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8BF2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8BF3              ;
 318  8BF3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8BF3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8BF3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8BF3              ;
 322  8BF3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8BF3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8BF3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8BF3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8BF3              ;
 327  8BF3              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8BF3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8BF3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8BF3
 331  8BF3 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8BF4
 333  8BF4              ;														DESCRIPCIÓN:
 334  8BF4              ;
 335  8BF4              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8BF4              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8BF4              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8BF4              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8BF4              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8BF4              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8BF4
 342  8BF4              ;														BIT 3, Recarga de nueva oleada.
 343  8BF4              ;														BIT 4, Recarga de nueva oleada.
 344  8BF4              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8BF4              ;														BIT 6, **** Frame completo.
 346  8BF4              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8BF4
 348  8BF4 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8BF6              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8BF6              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8BF6              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8BF6
 353  8BF6              ; Gestión de ENTIDADES y CAJAS.
 354  8BF6
 355  8BF6 00 00        Puntero_store_caja defw 0
 356  8BF8 00 00        Puntero_restore_caja defw 0
 357  8BFA 00 00        Indice_restore_caja defw 0
 358  8BFC
 359  8BFC 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 360  8BFD 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 361  8BFE 00           Entidades_en_curso db 0									; Entidades en pantalla.
 362  8BFF
 363  8BFF 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 364  8C01 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 365  8C03              ;														; _ puntero (Indice_entidades).
 366  8C03
 367  8C03              ;---------------------------------------------------------------------------------------------------------------
 368  8C03              ;
 369  8C03              ;	13/10/24
 370  8C03              ;
 371  8C03              ;	Álbumes.
 372  8C03
 373  8C03 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 374  8C05              ;														; _variable para almacenar lo posición del puntero_
 375  8C05              ; 														; _de pila, SP.
 376  8C05 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 377  8C07              ;														; La utiliza la rutina [Extrae_foto_registros].
 378  8C07
 379  8C07              ; Impresión. ----------------------------------------------------------------------------------------------------
 380  8C07
 381  8C07 00 00        Album_de_pintado defw 0
 382  8C09 00 00        Album_de_borrado defw 0
 383  8C0B 00 00        Album_de_pintado_Amadeus defw 0
 384  8C0D 00 00        Album_de_borrado_Amadeus defw 0
 385  8C0F
 386  8C0F 00 00        Album_de_pintado_disparos_Amadeus defw 0
 387  8C11 00 00        Album_de_borrado_disparos_Amadeus defw 0
 388  8C13
 389  8C13 00 00        Album_de_pintado_disparos_Entidades defw 0
 390  8C15 00 00        Album_de_borrado_disparos_Entidades defw 0
 391  8C17
 392  8C17
 393  8C17 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 394  8C19
 395  8C19 00           Num_de_bytes_album_de_disparos db 0
 396  8C1A 00           Num_de_bytes_album_de_disparos_borrado db 0
 397  8C1B
 398  8C1B 07           Numero_de_disparos_de_entidades db 7
 399  8C1C
 400  8C1C 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 401  8C1D 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 402  8C1E
 403  8C1E 00 00        Techo_Scanlines_album defw 0
 404  8C20 00 00        Techo_Scanlines_album_2 defw 0
 405  8C22 00           Switch db 0
 406  8C23 00 00        Techo defw 0
 407  8C25 00 00        Scanlines_album_SP defw 0
 408  8C27 00 89        India_SP defw Tabla_de_pintado
 409  8C29 03 89        India_2_SP defw Tabla_de_pintado+3
 410  8C2B
 411  8C2B 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 412  8C2C              ;
 413  8C2C              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 414  8C2C              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 415  8C2C              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 416  8C2C              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 417  8C2C              ;																Habilita el borrado/pintado de sprites.
 418  8C2C              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 419  8C2C              ;																_ a la baja.
 420  8C2C              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 421  8C2C              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 422  8C2C              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 423  8C2C              ; 																_ el último frame de la explosión de nuestra nave.
 424  8C2C              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 425  8C2C              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 426  8C2C
 427  8C2C 00           Ctrl_4 db 0
 428  8C2D 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 429  8C2E              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 430  8C2E              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 431  8C2E
 432  8C2E              ; Gestión de Disparos.
 433  8C2E
 434  8C2E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 435  8C30 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 436  8C32 00           Impacto2 db 0											; Byte de control de impactos.
 437  8C33
 438  8C33              ;
 439  8C33              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 440  8C33              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 441  8C33              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 442  8C33              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 443  8C33
 444  8C33
 445  8C33
 446  8C33
 447  8C33
 448  8C33
 449  8C33
 450  8C33 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 451  8C35              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 452  8C35              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 453  8C35
 454  8C35 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 455  8C37              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 456  8C37 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 457  8C3A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 458  8C3A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 459  8C3D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 460  8C3D
 461  8C3D              ;---------------------------------------------------------------------------------------------------------------
 462  8C3D
 463  8C3D              ; Relojes y temporizaciones.
 464  8C3D
 465  8C3D 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 466  8C3E 05           Clock_explosion_Amadeus db 5
 467  8C3F 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 468  8C40
 469  8C40 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 470  8C42 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 471  8C44 00           Numero_rnd_disparos db 0
 472  8C45
 473  8C45 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 474  8C47 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 475  8C48              ;																		; Repite la oleada de entidades.
 476  8C48 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 477  8C49 A0           CLOCK_disparos_de_entidades db $a0
 478  8C4A
 479  8C4A              ;---------------------------------------------------------------------------------------------------------------
 480  8C4A
 481  8C4A              ; Gestión de NIVELES.
 482  8C4A
 483  8C4A 00           Nivel db 0												; Nivel actual del juego.
 484  8C4B 00 00        Puntero_indice_NIVELES defw 0
 485  8C4D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 486  8C4F              ; 														; _ que definen el NIVEL.
 487  8C4F
 488  8C4F              ; ---------------------------------------------------------------------------------------------------------------
 489  8C4F
 490  8C4F              ; Temporizaciones Shield.
 491  8C4F
 492  8C4F 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 493  8C53 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 494  8C55 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 495  8C56 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 496  8C57 00           Shield_3 db 0
 497  8C58
 498  8C58 03           Lives db 3
 499  8C59
 500  8C59              ; 	INICIO  *************************************************************************************************************************************************************************
 501  8C59              ;
 502  8C59              ;	10/11/24
 503  8C59
 504  8C59              START
 505  8C59
 506  8C59 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 507  8C5C 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 508  8C5E ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 509  8C60 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 510  8C62 F3           	DI
 511  8C63
 512  8C63              ; Limpiamos pantalla.
 513  8C63
 514  8C63 3E 07        	ld a,%00000111
 515  8C65 CD 61 94     	call Cls
 516  8C68 CD 17 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 517  8C6B
 518  8C6B              INICIALIZACION
 519  8C6B
 520  8C6B 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 521  8C6D CD 64 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 522  8C70 CD AC 8E     	call Extrae_numero_aleatorio_y_avanza
 523  8C73 6F           	ld l,a
 524  8C74 26 00        	ld h,0
 525  8C76 22 45 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 526  8C79
 527  8C79              ; 	Con nuestros nº aleatorios mágicos podremos darle magia a nuestros patrones de movimiento.
 528  8C79              ;	Vamos a generar los movimientos masticados de las entidades.
 529  8C79
 530  8C79 CD 94 92     	call Genera_movimientos_masticados_del_nivel
 531  8C7C
 532  8C7C              ;	Una vez construidas las distintas coreografías de las entidades que componen el nivel, vamos a inicializarlo.
 533  8C7C
 534  8C7C 18 FE        	jr $
 535  8C7E
 536  8C7E              ;	Inicia los álbumes de líneas.
 537  8C7E
 538  8C7E CD 65 90     	call Inicia_albumes_de_lineas
 539  8C81              ;
 540  8C81 CD 75 90     	call Inicia_albumes_de_lineas_Amadeus
 541  8C84 CD 82 90     	call Inicia_albumes_de_disparos
 542  8C87
 543  8C87              4
 544  8C87
 545  8C87              ;	call Inicia_Entidades
 546  8C87 CD 4D 93     	call Inicia_Amadeus
 547  8C8A
 548  8C8A              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 549  8C8A              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 550  8C8A              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 551  8C8A
 552  8C8A 11 73 89     	ld de,Amadeus_BOX
 553  8C8D CD 31 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 554  8C90 CD 90 93     	call Limpiamos_bandeja_DRAW
 555  8C93
 556  8C93              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 557  8C93
 558  8C93 06 3C        	ld b,60
 559  8C95 CD 07 9D     2 call Amadeus_a_izquierda
 560  8C98 10 FB        	djnz 2B
 561  8C9A
 562  8C9A CD 43 90     	call Genera_datos_de_impresion_Amadeus
 563  8C9D
 564  8C9D              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 565  8C9D
 566  8C9D CD 9E 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 567  8CA0
 568  8CA0 CD 22 91     	call Inicia_Shield
 569  8CA3
 570  8CA3 2A 25 8C     6 ld hl,(Scanlines_album_SP)
 571  8CA6 22 1E 8C     	ld (Techo_Scanlines_album),hl
 572  8CA9
 573  8CA9 2A 09 8C     	ld hl,(Album_de_borrado)
 574  8CAC 22 25 8C     	ld (Scanlines_album_SP),hl
 575  8CAF
 576  8CAF 21 00 89     	ld hl,Tabla_de_pintado
 577  8CB2 22 27 8C     	ld (India_SP),hl
 578  8CB5
 579  8CB5 21 2B 8C     	ld hl,Ctrl_3
 580  8CB8 CB C6        	set 0,(hl) 											; Indica Frame completo.
 581  8CBA CB D6        	set 2,(hl)
 582  8CBC CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 583  8CBE
 584  8CBE FB           	ei 													; Ha de apuntar a $5c3a.
 585  8CBF
 586  8CBF 76           	halt
 587  8CC0
 588  8CC0              ; ------------------------------------
 589  8CC0
 590  8CC0              Main
 591  8CC0              ;
 592  8CC0              ; 07/11/24.
 593  8CC0
 594  8CC0              ; Gestión de disparos.
 595  8CC0
 596  8CC0 CD 81 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 597  8CC3 CD FA 9E     	call Motor_de_disparos_entidades
 598  8CC6 CD 8F A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 599  8CC9
 600  8CC9              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 601  8CC9              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 602  8CC9              ; Este hecho lo indica el bit2 de (Impacto2).
 603  8CC9
 604  8CC9 CD 2C A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 605  8CCC
 606  8CCC              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 607  8CCC
 608  8CCC 21 49 8C     	ld hl,CLOCK_disparos_de_entidades
 609  8CCF 35           	dec (hl)
 610  8CD0 CC C8 8D     	call z,Autoriza_disparo_de_entidades
 611  8CD3
 612  8CD3 2A 45 8C     	ld hl,(Clock_next_entity)
 613  8CD6 ED 4B 78 5C  	ld bc,(FRAMES)
 614  8CDA A7           	and a
 615  8CDB ED 42        	sbc hl,bc
 616  8CDD 20 16        	jr nz,1F
 617  8CDF
 618  8CDF              ; GESTIÓN DE ENTIDADES.
 619  8CDF
 620  8CDF              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 621  8CDF              ; _ (Clock_next_entity) para la siguiente entidad.
 622  8CDF
 623  8CDF              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 624  8CDF              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 625  8CDF              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 626  8CDF
 627  8CDF 21 FD 8B     	ld hl,Numero_parcial_de_entidades
 628  8CE2 46           	ld b,(hl)
 629  8CE3 3A FE 8B     	ld a,(Entidades_en_curso)									; Entidades que hay en pantalla.
 630  8CE6 B8           	cp b
 631  8CE7 28 0C        	jr z,1F
 632  8CE9 30 0A        	jr nc,1F
 633  8CEB
 634  8CEB              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 635  8CEB
 636  8CEB 3C           	inc a
 637  8CEC 32 FE 8B     	ld (Entidades_en_curso),a
 638  8CEF
 639  8CEF              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 640  8CEF
 641  8CEF CD AC 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 642  8CF2 CD C8 8E     	call Define_Clock_next_entity
 643  8CF5
 644  8CF5 3A FE 8B     1 ld a,(Entidades_en_curso)
 645  8CF8 A7           	and a
 646  8CF9 CA 73 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 647  8CFC 47           	ld b,a												; No hay entidades que gestionar.
 648  8CFD
 649  8CFD              ; ( Código que ejecutamos con cada entidad: ).
 650  8CFD
 651  8CFD              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 652  8CFD              ;
 653  8CFD              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 654  8CFD
 655  8CFD 21 00 89     	ld hl,Tabla_de_pintado
 656  8D00 22 27 8C     	ld (India_SP),hl
 657  8D03
 658  8D03 21 2B 8C     	ld hl,Ctrl_3
 659  8D06 CB D6        	set 2,(hl)
 660  8D08 CD 56 8E     	call Change
 661  8D0B
 662  8D0B C5           2 push bc 												; Nº de entidades en curso.
 663  8D0C
 664  8D0C CD EF 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 665  8D0F ED 5B 25 8C  	ld de,(Scanlines_album_SP)
 666  8D13
 667  8D13              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 668  8D13
 669  8D13              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 670  8D13              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 671  8D13
 672  8D13 3A 32 8C     	ld a,(Impacto2)
 673  8D16 CB 5F        	bit 3,a
 674  8D18 C4 26 A1     	call nz,Compara_con_coordenadas_de_disparo
 675  8D1B
 676  8D1B 3A BA 8B     	ld a,(Impacto)
 677  8D1E CB 4F        	bit 1,a
 678  8D20 C4 FF 91     	call nz,Genera_explosion
 679  8D23 20 31        	jr nz,Gestiona_siguiente_entidad
 680  8D25
 681  8D25 3A BA 8B     	ld a,(Impacto)
 682  8D28 A7           	and a
 683  8D29 28 0C        	jr z,3F
 684  8D2B
 685  8D2B              ; IMPACTO en entidad por colisión con Amadeus.
 686  8D2B
 687  8D2B              ; 5/7/24
 688  8D2B              ; Nota importante:
 689  8D2B              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 690  8D2B              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 691  8D2B              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 692  8D2B
 693  8D2B 3A 77 89     	ld a,(Impacto_Amadeus)
 694  8D2E A7           	and a
 695  8D2F C4 FF 91     	call nz,Genera_explosion
 696  8D32 20 22        	jr nz,Gestiona_siguiente_entidad
 697  8D34
 698  8D34              ; Falsa colisión !!!
 699  8D34
 700  8D34 32 BA 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 701  8D37
 702  8D37              ; -------------------------------------------
 703  8D37
 704  8D37 CD 0C 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 705  8D3A CD 34 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 706  8D3D CD FC 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 707  8D40 CD A1 94     	call Genera_datos_de_impresion
 708  8D43 CD B3 93     	call Decrementa_Contador_de_mov_masticados
 709  8D46
 710  8D46              ; -------------------------------------------
 711  8D46
 712  8D46              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 713  8D46
 714  8D46 2A BB 8B     	ld hl,(Puntero_de_impresion)
 715  8D49 CD 75 94     	call Genera_coordenadas
 716  8D4C
 717  8D4C              ; TODO: Generamos disparo ???
 718  8D4C
 719  8D4C 3A 1D 8C     	ld a,(Permiso_de_disparo_Entidades)
 720  8D4F A7           	and a
 721  8D50 C4 DD 8D     	call nz,Entidad_genera_disparo_si_procede
 722  8D53
 723  8D53 CD AA A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 724  8D56
 725  8D56              Gestiona_siguiente_entidad
 726  8D56
 727  8D56 CD 85 93      	call Store_Restore_cajas
 728  8D59 C1           	pop bc
 729  8D5A 10 AF        	djnz 2B
 730  8D5C
 731  8D5C              ; Hemos gestionado todas las entidades.
 732  8D5C              ; ----- ----- -----
 733  8D5C
 734  8D5C CD 20 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 735  8D5F CD 37 8F     	call Ordena_tabla_de_impresion
 736  8D62 CD 9E 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 737  8D65
 738  8D65 CD DD 8E     	call Borra_diferencia
 739  8D68
 740  8D68 3A 2B 8C     	ld a,(Ctrl_3)
 741  8D6B CB 5F        	bit 3,a
 742  8D6D 20 04        	jr nz,Gestion_de_Amadeus
 743  8D6F
 744  8D6F EB           	ex de,hl
 745  8D70 71           	ld (hl),c
 746  8D71 2C           	inc l
 747  8D72 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 748  8D73
 749  8D73              ;! GESTIONA AMADEUS !!!!!!!!!!
 750  8D73
 751  8D73              Gestion_de_Amadeus
 752  8D73
 753  8D73 21 2B 8C     	ld hl,Ctrl_3
 754  8D76 CB 76        	bit 6,(hl)
 755  8D78 28 13        	jr z,Amadeus_vivo
 756  8D7A
 757  8D7A              ; Amadeus ha sido destruido.
 758  8D7A              ; Decrementa (Temp_new_live).
 759  8D7A
 760  8D7A 21 3F 8C     	ld hl,Temp_new_live
 761  8D7D 35           	dec (hl)
 762  8D7E 20 26        	jr nz,End_frame
 763  8D80
 764  8D80              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 765  8D80
 766  8D80 21 58 8C     	ld hl,Lives
 767  8D83 35           	dec (hl)
 768  8D84
 769  8D84              ;! Fin del juego
 770  8D84
 771  8D84 F3           	di
 772  8D85 28 FE        	jr z,$
 773  8D87 FB           	ei
 774  8D88
 775  8D88              ; Nueva nave.
 776  8D88
 777  8D88 CD FA 8D     	call Reinicia_Amadeus
 778  8D8B 18 19        	jr End_frame
 779  8D8D
 780  8D8D              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 781  8D8D
 782  8D8D              Amadeus_vivo
 783  8D8D
 784  8D8D 3A 77 89     	ld a,(Impacto_Amadeus)
 785  8D90 A7           	and a
 786  8D91 C4 2F 92     	call nz, Genera_explosion_Amadeus
 787  8D94 20 10        	jr nz, End_frame
 788  8D96
 789  8D96 CD DC 91     	call Teclado
 790  8D99 21 2B 8C     	ld hl,Ctrl_3
 791  8D9C
 792  8D9C CB 6E        	bit 5,(hl)
 793  8D9E 28 06        	jr z,End_frame
 794  8DA0
 795  8DA0              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 796  8DA0
 797  8DA0 CD 71 8E     	call Change_Amadeus
 798  8DA3 CD 43 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 799  8DA6
 800  8DA6              End_frame
 801  8DA6
 802  8DA6              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 803  8DA6              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 804  8DA6
 805  8DA6 CD 51 A0     	call Genera_datos_de_impresion_disparos_Entidades
 806  8DA9 CD 15 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 807  8DAC CD 6B A1     	call Calcula_bytes_pintado_disparos
 808  8DAF CD 78 A1     	call Limpia_album_de_pintado_disparos_entidades
 809  8DB2
 810  8DB2              ; ------------ ------------- --------------
 811  8DB2
 812  8DB2 2A 09 8C     	ld hl,(Album_de_borrado)
 813  8DB5 22 25 8C     	ld (Scanlines_album_SP),hl
 814  8DB8
 815  8DB8 21 2B 8C     	ld hl,Ctrl_3
 816  8DBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 817  8DBD CB 9E        	res 3,(hl)
 818  8DBF CB A6        	res 4,(hl)
 819  8DC1
 820  8DC1 AF           	xor a
 821  8DC2 D3 FE        	out ($fe),a
 822  8DC4
 823  8DC4 76           	halt
 824  8DC5
 825  8DC5              ; ----------------------------------------
 826  8DC5
 827  8DC5              ;	ld a,(Ctrl_1) 										; Existe Loop?
 828  8DC5              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 829  8DC5 CA C0 8C     	jp z,Main
 830  8DC8
 831  8DC8              ;------------------------------------------
 832  8DC8              ;
 833  8DC8              ;	07/11/24
 834  8DC8
 835  8DC8              Autoriza_disparo_de_entidades
 836  8DC8
 837  8DC8 3E 01        	ld a,1
 838  8DCA 32 1D 8C     	ld (Permiso_de_disparo_Entidades),a
 839  8DCD
 840  8DCD 3A 48 8C     	ld a,(Repone_CLOCK_disparos)
 841  8DD0 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 842  8DD2 38 02        	jr c,1F
 843  8DD4
 844  8DD4              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 845  8DD4              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 846  8DD4              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 847  8DD4
 848  8DD4 D6 03        	sub 3
 849  8DD6
 850  8DD6 32 48 8C     1 ld (Repone_CLOCK_disparos),a
 851  8DD9 32 49 8C     	ld (CLOCK_disparos_de_entidades),a
 852  8DDC
 853  8DDC C9           	ret
 854  8DDD
 855  8DDD              ;------------------------------------------
 856  8DDD              ;
 857  8DDD              ;	14/09/24
 858  8DDD              ;
 859  8DDD              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 860  8DDD
 861  8DDD              Entidad_genera_disparo_si_procede
 862  8DDD
 863  8DDD 2A 42 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 864  8DE0 CB 06        	rlc (hl)
 865  8DE2
 866  8DE2 DC A1 A0     	call c,Genera_disparo_de_entidad_maldosa
 867  8DE5
 868  8DE5 C9           	ret
 869  8DE6
 870  8DE6              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 871  8DE6              ;
 872  8DE6              ;	30/09/24
 873  8DE6
 874  8DE6              Actuaiza_sp_de_disparos_de_entidades
 875  8DE6
 876  8DE6 2A 42 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 877  8DE9 23           	inc hl
 878  8DEA 22 42 8C     	ld (Puntero_num_aleatorios_disparos),hl
 879  8DED
 880  8DED 11 FD 88     	ld de,Numeros_aleatorios+7
 881  8DF0 7B           	ld a,e
 882  8DF1 95           	sub l
 883  8DF2 C0           	ret nz
 884  8DF3
 885  8DF3 21 F6 88     1 ld hl,Numeros_aleatorios
 886  8DF6 22 42 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 887  8DF9 C9           	ret
 888  8DFA
 889  8DFA              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 890  8DFA              ;
 891  8DFA              ;	24/07/24
 892  8DFA
 893  8DFA              Reinicia_Amadeus
 894  8DFA
 895  8DFA              ;	Reinicia posición y estado.
 896  8DFA
 897  8DFA 21 CF 50     	ld hl,$50cf
 898  8DFD 22 78 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 899  8E00 21 CC DC     	ld hl,$dccc
 900  8E03 22 7A 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 901  8E06 21 3D 00     	ld hl,$003d
 902  8E09 22 7C 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 903  8E0C
 904  8E0C              ;	limpiamos el álbum de borrado.
 905  8E0C
 906  8E0C 2A 0D 8C     	ld hl,(Album_de_borrado_Amadeus)
 907  8E0F
 908  8E0F AF           	xor a
 909  8E10 77           	ld (hl),a
 910  8E11
 911  8E11 E5           	push hl
 912  8E12 D1           	pop de
 913  8E13 13           	inc de
 914  8E14
 915  8E14 01 23 00     	ld bc,35
 916  8E17 ED B0        	ldir
 917  8E19
 918  8E19 CD 43 90     	call Genera_datos_de_impresion_Amadeus
 919  8E1C
 920  8E1C              ;	Reinicia temporizaciones.
 921  8E1C
 922  8E1C CD 22 91     	call Inicia_Shield
 923  8E1F
 924  8E1F 3E 5A        	ld a,90
 925  8E21 32 55 8C     	ld (Shield),a
 926  8E24
 927  8E24 3E 64        	ld a,100
 928  8E26 32 3F 8C     	ld (Temp_new_live),a
 929  8E29
 930  8E29              ; 	Restauramos el FLAG: Amadeus vivo.
 931  8E29
 932  8E29 21 2B 8C     	ld hl,Ctrl_3
 933  8E2C CB B6        	res 6,(hl)
 934  8E2E
 935  8E2E              ;	Fuerza la impresión de la nave en el siguiente frame.
 936  8E2E
 937  8E2E 21 2B 8C      	ld hl,Ctrl_3
 938  8E31 CB EE        	set 5,(hl)
 939  8E33
 940  8E33 C9           	ret
 941  8E34
 942  8E34              ; --------------------------------------------------------------------------------------------------------------
 943  8E34              ;
 944  8E34              ;	7/11/24
 945  8E34
 946  8E34              Ajusta_velocidad_entidad
 947  8E34
 948  8E34 3A C1 8B     	ld a,(Velocidad)
 949  8E37 A7           	and a
 950  8E38 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 951  8E39              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 952  8E39              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 953  8E39
 954  8E39
 955  8E39              ; Incrementa (Contador_de_vueltas)x2.
 956  8E39              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 957  8E39
 958  8E39              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 959  8E39              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 960  8E39              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 961  8E39              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 962  8E39              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 963  8E39
 964  8E39
 965  8E39 CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 966  8E3B 32 C1 8B     	ld (Velocidad),a
 967  8E3E E6 10        	and $10
 968  8E40 C8           	ret z
 969  8E41
 970  8E41              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 971  8E41
 972  8E41 3A B9 8B     	ld a,(Contador_de_vueltas)
 973  8E44 CB 2F        	sra a
 974  8E46 CB 2F        	sra a
 975  8E48 32 C1 8B     	ld (Velocidad),a
 976  8E4B
 977  8E4B 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 978  8E4E 23           	inc hl
 979  8E4F 23           	inc hl
 980  8E50 23           	inc hl
 981  8E51 23           	inc hl
 982  8E52 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 983  8E55
 984  8E55 C9           	ret
 985  8E56
 986  8E56              ; --------------------------------------------------------------------------------------------------------------
 987  8E56              ;
 988  8E56              ;	25/08/24
 989  8E56
 990  8E56              Change
 991  8E56
 992  8E56 3A 22 8C     	ld a,(Switch)
 993  8E59 EE 01        	xor 1
 994  8E5B 32 22 8C     	ld (Switch),a
 995  8E5E 2A 07 8C     	ld hl,(Album_de_pintado)
 996  8E61 ED 5B 09 8C  	ld de,(Album_de_borrado)
 997  8E65 EB           	ex de,hl
 998  8E66 22 07 8C     	ld (Album_de_pintado),hl
 999  8E69 22 25 8C     	ld (Scanlines_album_SP),hl
1000  8E6C ED 53 09 8C  	ld (Album_de_borrado),de
1001  8E70 C9           	ret
1002  8E71
1003  8E71              Change_Amadeus
1004  8E71
1005  8E71 2A 0B 8C     	ld hl,(Album_de_pintado_Amadeus)
1006  8E74 ED 5B 0D 8C  	ld de,(Album_de_borrado_Amadeus)
1007  8E78 EB           	ex de,hl
1008  8E79 22 0B 8C     	ld (Album_de_pintado_Amadeus),hl
1009  8E7C ED 53 0D 8C  	ld (Album_de_borrado_Amadeus),de
1010  8E80 C9           	ret
1011  8E81
1012  8E81              Change_Disparos
1013  8E81
1014  8E81              ; Álbumes de Amadeus.
1015  8E81
1016  8E81 2A 0F 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1017  8E84 ED 5B 11 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1018  8E88 EB           	ex de,hl
1019  8E89 22 0F 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1020  8E8C ED 53 11 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1021  8E90 CD 60 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1022  8E93
1023  8E93              ; Álbumes de entidades.
1024  8E93
1025  8E93 2A 13 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1026  8E96 ED 5B 15 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1027  8E9A EB           	ex de,hl
1028  8E9B 22 13 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1029  8E9E ED 53 15 8C  	ld (Album_de_borrado_disparos_Entidades),de
1030  8EA2 22 17 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1031  8EA5
1032  8EA5 3A 19 8C     	ld a,(Num_de_bytes_album_de_disparos)
1033  8EA8 32 1A 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1034  8EAB
1035  8EAB C9           	ret
1036  8EAC
1037  8EAC              ; ------------------------------------
1038  8EAC              ;
1039  8EAC              ; 1/05/24
1040  8EAC
1041  8EAC              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1042  8EAC              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1043  8EAC
1044  8EAC              ;	DESTRUYE: HL,DE,A
1045  8EAC              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1046  8EAC
1047  8EAC              ;	Variables implicadas: (RND_SP).
1048  8EAC
1049  8EAC              Extrae_numero_aleatorio_y_avanza
1050  8EAC
1051  8EAC 21 00 89     	ld hl,Tabla_de_pintado
1052  8EAF EB           	ex de,hl
1053  8EB0 2A 40 8C     	ld hl,(RND_SP)
1054  8EB3 EB           	ex de,hl
1055  8EB4 A7           	and a
1056  8EB5 ED 52        	sbc hl,de
1057  8EB7
1058  8EB7 2A 40 8C     	ld hl,(RND_SP)
1059  8EBA 20 06        	jr nz,1F
1060  8EBC
1061  8EBC              ; Sitúa HL al principio de la tabla de nº aleatorios.
1062  8EBC
1063  8EBC 21 F6 88     	ld hl,Numeros_aleatorios
1064  8EBF 22 40 8C     	ld (RND_SP),HL
1065  8EC2
1066  8EC2              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1067  8EC2
1068  8EC2 7E           1 ld a,(hl)
1069  8EC3 23           	inc hl
1070  8EC4 22 40 8C     	ld (RND_SP),hl
1071  8EC7 C9           	ret
1072  8EC8
1073  8EC8              ; ------------------------------------
1074  8EC8              ;
1075  8EC8              ; 1/05/24
1076  8EC8
1077  8EC8              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1078  8EC8              ; (1 a 4 segundos).
1079  8EC8              ; Actualizamos (Clock_next_entity) con A.
1080  8EC8
1081  8EC8              ;	DESTRUYE: A y B.
1082  8EC8              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1083  8EC8              ;			 Actualiza (Clock_next_entity) con A.
1084  8EC8
1085  8EC8              ;	Variables implicadas: (Clock_next_entity).
1086  8EC8
1087  8EC8              ; Notas:
1088  8EC8
1089  8EC8              ; 	$32 1 seg.
1090  8EC8              ; 	$64 2 seg.
1091  8EC8              ; 	$96 3 seg.
1092  8EC8              ; 	$c8 4 seg.
1093  8EC8              ; 	$fa 5 seg.
1094  8EC8
1095  8EC8              ; $ffff 1310,7 seg, 22 minutos.
1096  8EC8
1097  8EC8              ;	$0100  5 seg. aproximadamente.
1098  8EC8              ;	$0200 10 seg. aproximadamente.
1099  8EC8              ;	$0300 15 seg. aproximadamente.
1100  8EC8              ;	$0400 20 seg. aproximadamente.
1101  8EC8              ;	$0500 25 seg. aproximadamente.
1102  8EC8              ;	$0600 30 seg. aproximadamente.
1103  8EC8
1104  8EC8              Define_Clock_next_entity
1105  8EC8
1106  8EC8 FE 34        	cp $34
1107  8ECA 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1108  8ECC
1109  8ECC              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1110  8ECC
1111  8ECC 4F           3 ld c,a
1112  8ECD 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1113  8ECF 2A 78 5C     	ld hl,(FRAMES)
1114  8ED2 A7           	and a
1115  8ED3 ED 4A        	adc hl,bc
1116  8ED5 22 45 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1117  8ED8 C9           	ret
1118  8ED9
1119  8ED9 3E 34        1 ld a,$34
1120  8EDB 18 EF        	jr 3B
1121  8EDD
1122  8EDD              ; ------------------------------------
1123  8EDD              ;
1124  8EDD              ; 18/03/24
1125  8EDD
1126  8EDD              Borra_diferencia
1127  8EDD
1128  8EDD ED 4B 25 8C  	ld bc,(Scanlines_album_SP)
1129  8EE1
1130  8EE1 3A 22 8C     	ld a,(Switch)
1131  8EE4 A7           	and a
1132  8EE5 28 08        	jr z,2F
1133  8EE7
1134  8EE7 2A 20 8C     	ld hl,(Techo_Scanlines_album_2)
1135  8EEA 11 20 8C     	ld de,Techo_Scanlines_album_2
1136  8EED 18 06        	jr 3F
1137  8EEF
1138  8EEF 2A 1E 8C     2 ld hl,(Techo_Scanlines_album)
1139  8EF2 11 1E 8C     	ld de,Techo_Scanlines_album
1140  8EF5
1141  8EF5              ; Diferencia.
1142  8EF5
1143  8EF5 ED 42        3 sbc hl,bc
1144  8EF7
1145  8EF7 C8           	ret z
1146  8EF8 D8           	ret c
1147  8EF9
1148  8EF9              ; Nuevo techo, (más bajo que el anterior).
1149  8EF9              ; Fijamos nuevo techo y borramos bytes sobrantes.
1150  8EF9
1151  8EF9 EB           	ex de,hl
1152  8EFA
1153  8EFA 71           	ld (hl),c
1154  8EFB 2C           	inc l
1155  8EFC 70           	ld (hl),b
1156  8EFD
1157  8EFD AF           	xor a
1158  8EFE 43           	ld b,e
1159  8EFF
1160  8EFF 2A 25 8C     	ld hl,(Scanlines_album_SP)
1161  8F02
1162  8F02 77           1 ld (hl),a
1163  8F03 23           	inc hl
1164  8F04 10 FC        	djnz 1B
1165  8F06
1166  8F06              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1167  8F06
1168  8F06 21 2B 8C     	ld hl,Ctrl_3
1169  8F09 CB DE        	set 3,(hl)
1170  8F0B
1171  8F0B C9           	ret
1172  8F0C
1173  8F0C              ; --------------------------------------------------------------------------------------------------------------
1174  8F0C              ;
1175  8F0C              ;	26/3/24
1176  8F0C
1177  8F0C              Recauda_informacion_de_entidad_en_curso
1178  8F0C
1179  8F0C              ; Almacena la Coordenada Y de la entidad en curso.
1180  8F0C
1181  8F0C              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1182  8F0C
1183  8F0C 3A B8 8B     	ld a,(Coordenada_y)
1184  8F0F 2A 27 8C     	ld hl,(India_SP)
1185  8F12 77           	ld (hl),a
1186  8F13 2C           	inc l
1187  8F14
1188  8F14              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1189  8F14
1190  8F14 ED 5B 25 8C  	ld de,(Scanlines_album_SP)
1191  8F18
1192  8F18 73           	ld (hl),e
1193  8F19 2C           	inc l
1194  8F1A 72           	ld (hl),d
1195  8F1B 2C           	inc l
1196  8F1C
1197  8F1C 22 27 8C     	ld (India_SP),hl
1198  8F1F
1199  8F1F C9           	ret
1200  8F20
1201  8F20              ; --------------------------------------------------------------------------------------------------------------
1202  8F20              ;
1203  8F20              ;	27/03/24
1204  8F20              ;
1205  8F20
1206  8F20              Inicializa_India_y_limpia_Tabla_de_impresion
1207  8F20
1208  8F20 2A 27 8C     	ld hl,(India_SP)
1209  8F23 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1210  8F26
1211  8F26 79           	ld a,c
1212  8F27 95           	sub l
1213  8F28 28 06        	jr z,2F
1214  8F2A 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1215  8F2B              ;														; _ y pasamos a inicializar (India_SP).
1216  8F2B AF           	xor a
1217  8F2C
1218  8F2C 77           1 ld (hl),a
1219  8F2D 2C           	inc l
1220  8F2E 10 FC        	djnz 1B												; Limpia Tabla.
1221  8F30
1222  8F30 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1223  8F33 22 27 8C     	ld (India_SP),hl
1224  8F36
1225  8F36 C9           	ret
1226  8F37
1227  8F37              ; --------------------------------------------------------------------------------------------------------------
1228  8F37              ;
1229  8F37              ;	31/3/24
1230  8F37
1231  8F37              Ordena_tabla_de_impresion
1232  8F37
1233  8F37              ; 5794 T/states.
1234  8F37              ; 6278 T/states.
1235  8F37              ; 5310 T/states.
1236  8F37
1237  8F37              ; Inicializamos punteros (India_SP) e (India_2_SP).
1238  8F37              ; Inicializamos contador de comparaciones, [C].
1239  8F37              ; Cargamos los registros A y B para efectuar comparación.
1240  8F37
1241  8F37 FD 2E 00     	ld iyl,0
1242  8F3A
1243  8F3A 3A FE 8B     	ld a,(Entidades_en_curso)
1244  8F3D FE 04        	cp 4 	;	4
1245  8F3F D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1246  8F40
1247  8F40 3D           	dec a
1248  8F41 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1249  8F42 51           	ld d,c 										; Copia de respaldo.
1250  8F43
1251  8F43 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1252  8F44
1253  8F44 21 03 89     	ld hl,Tabla_de_pintado+3
1254  8F47 46           	ld b,(hl)
1255  8F48 22 29 8C     	ld (India_2_SP),hl
1256  8F4B
1257  8F4B B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1258  8F4C DC 74 8F     	call c, Avanza_India_2_SP
1259  8F4F CC 74 8F     	call z, Avanza_India_2_SP
1260  8F52
1261  8F52 FD 2D        	dec iyl
1262  8F54 28 18        	jr z,2F
1263  8F56
1264  8F56
1265  8F56              ; --------------------------------------------------------------------------------------------------------------
1266  8F56              ;
1267  8F56              ;	7/4/24
1268  8F56
1269  8F56              Trueque
1270  8F56
1271  8F56              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1272  8F56              ;  			A contiene en nº de fila de (India_SP).
1273  8F56              ;			HL contiene (India_2_SP).
1274  8F56
1275  8F56 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1276  8F57 E5           	push hl										; Preservo (India_2_SP).
1277  8F58
1278  8F58 ED 5B 27 8C  	ld de,(India_SP)
1279  8F5C EB           	ex de,hl
1280  8F5D 70           	ld (hl),b
1281  8F5E 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1282  8F5F
1283  8F5F CD A0 8F     	call Intercambia_1_byte
1284  8F62 CD A0 8F     	call Intercambia_1_byte
1285  8F65
1286  8F65
1287  8F65              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1288  8F65              ; Recuperamos (India_2_SP) en HL.
1289  8F65
1290  8F65 2A 27 8C     	ld hl,(India_SP)
1291  8F68 7E           	ld a,(hl)
1292  8F69
1293  8F69 E1           	pop hl
1294  8F6A D1           	pop de
1295  8F6B
1296  8F6B              ; --------------------------------------------------------------------------------------------------------------
1297  8F6B
1298  8F6B CD 74 8F     	call Avanza_India_2_SP
1299  8F6E
1300  8F6E 14           2 inc d
1301  8F6F 15           	dec d
1302  8F70 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1303  8F71 18 D8        	jr 1B
1304  8F73
1305  8F73 C9           	ret
1306  8F74
1307  8F74              ; ----- ----- ----- ----- -----
1308  8F74
1309  8F74              Avanza_India_2_SP
1310  8F74
1311  8F74 0D           	dec c
1312  8F75 28 0A        	jr z,Avanza_punteros_indios
1313  8F77
1314  8F77 FD 2C        	inc iyl
1315  8F79
1316  8F79 2C           	inc l
1317  8F7A 2C           	inc l
1318  8F7B 2C           	inc l
1319  8F7C
1320  8F7C 46           	ld b,(hl)
1321  8F7D 22 29 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1322  8F80
1323  8F80 C9           	ret
1324  8F81
1325  8F81              ; ----- ----- ----- ----- -----
1326  8F81
1327  8F81              Avanza_punteros_indios
1328  8F81
1329  8F81 15           	dec d
1330  8F82 28 15        	jr z,Prepara_salida
1331  8F84
1332  8F84 4A           	ld c,d
1333  8F85
1334  8F85 2A 27 8C     	ld hl,(India_SP)
1335  8F88 2C           	inc l
1336  8F89 2C           	inc l
1337  8F8A 2C           	inc l
1338  8F8B 7E           	ld a,(hl)
1339  8F8C 22 27 8C     	ld (India_SP),hl
1340  8F8F
1341  8F8F 2C           	inc l
1342  8F90 2C           	inc l
1343  8F91 2C           	inc l
1344  8F92 46           	ld b,(hl)
1345  8F93 22 29 8C     	ld (India_2_SP),hl
1346  8F96
1347  8F96 FD 2C        	inc iyl
1348  8F98
1349  8F98 C9           	ret
1350  8F99
1351  8F99              Prepara_salida
1352  8F99
1353  8F99 21 00 89     	ld hl,Tabla_de_pintado
1354  8F9C 22 27 8C     	ld (India_SP),hl
1355  8F9F C9           	ret
1356  8FA0
1357  8FA0
1358  8FA0 2C           Intercambia_1_byte inc l
1359  8FA1 1C           	inc e
1360  8FA2 46           	ld b,(hl)
1361  8FA3 1A           	ld a,(de)
1362  8FA4 EB           	ex de,hl
1363  8FA5 70           	ld (hl),b
1364  8FA6 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1365  8FA7 C9           	ret
1366  8FA8
1367  8FA8              ; -----------------------------------------------------------------------------------
1368  8FA8              ;
1369  8FA8              ;	20/01/24
1370  8FA8              ;
1371  8FA8              ;
1372  8FA8
1373  8FA8              Construye_movimientos_masticados_entidad
1374  8FA8
1375  8FA8 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1376  8FAB E5           	push hl
1377  8FAC CD EF 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1378  8FAF              ;															; _ el (Contador_de_mov_masticados).
1379  8FAF CD BA 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1380  8FB2              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1381  8FB2 CD 8D 99     	call Recompone_posicion_inicio
1382  8FB5
1383  8FB5 CD BD 96     1 call Draw
1384  8FB8 CD D4 8F     	call Guarda_movimiento_masticado
1385  8FBB
1386  8FBB CD 3A 9D     	call Movimiento
1387  8FBE
1388  8FBE 3A 2B 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1389  8FC1 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1390  8FC3 28 F0        	jr z,1B
1391  8FC5
1392  8FC5              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1393  8FC5              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1394  8FC5
1395  8FC5 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1396  8FC6 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1397  8FC9
1398  8FC9              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1399  8FC9
1400  8FC9 CD 9E 9E     	call Situa_en_contador_general_de_mov_masticados
1401  8FCC
1402  8FCC              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1403  8FCC              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1404  8FCC
1405  8FCC ED 4B BF 8B  	ld bc,(Contador_de_mov_masticados)
1406  8FD0
1407  8FD0 71           	ld (hl),c
1408  8FD1 23           	inc hl
1409  8FD2 70           	ld (hl),b
1410  8FD3
1411  8FD3 C9           	ret
1412  8FD4
1413  8FD4              ; -----------------------------------------------------------------------------------
1414  8FD4              ;
1415  8FD4              ;	28/12/23
1416  8FD4              ;
1417  8FD4              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1418  8FD4              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1419  8FD4
1420  8FD4              Guarda_movimiento_masticado
1421  8FD4
1422  8FD4 ED 73 03 8C  	ld (Stack),sp
1423  8FD8 ED 7B BD 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1424  8FDC
1425  8FDC DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1426  8FDE FD E5            push iy 												; Pushea Puntero_objeto.
1427  8FE0
1428  8FE0 ED 7B 03 8C      ld sp,(Stack)
1429  8FE4
1430  8FE4 2A BF 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1431  8FE7 23           	inc hl
1432  8FE8 22 BF 8B     	ld (Contador_de_mov_masticados),hl
1433  8FEB
1434  8FEB CD EF 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1435  8FEE              ;															; _ el (Contador_de_mov_masticados).
1436  8FEE C9               ret
1437  8FEF
1438  8FEF              ; --------------------------------------------------------------------------------------------------------------
1439  8FEF              ;
1440  8FEF              ;	12/1/24
1441  8FEF              ;
1442  8FEF              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1443  8FEF
1444  8FEF              Actualiza_Puntero_de_almacen_de_mov_masticados
1445  8FEF
1446  8FEF 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1447  8FF2 01 04 00     	ld bc,4
1448  8FF5 A7           	and a
1449  8FF6 ED 4A        	adc hl,bc
1450  8FF8 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1451  8FFB C9           	ret
1452  8FFC
1453  8FFC              ; --------------------------------------------------------------------------------------------------------------
1454  8FFC              ;
1455  8FFC              ;	24/03/24
1456  8FFC              ;
1457  8FFC              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1458  8FFC              ;
1459  8FFC              ;	IX contiene el puntero de impresión.
1460  8FFC              ;	DE contiene (Puntero_objeto).
1461  8FFC
1462  8FFC
1463  8FFC              Cargamos_registros_con_mov_masticado
1464  8FFC
1465  8FFC ED 73 03 8C  	ld (Stack),sp
1466  9000 ED 7B BD 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1467  9004
1468  9004 D1           	pop de 															; DE contiene Puntero_objeto
1469  9005 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1470  9007
1471  9007 ED 73 BD 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1472  900B ED 7B 03 8C  	ld sp,(Stack)
1473  900F
1474  900F 7B           	ld a,e
1475  9010 82           	add d															; Comprueba si ya no hay datos en el almacén.
1476  9011
1477  9011 CC BB 93     	call z,Reinicia_entidad_maliciosa
1478  9014
1479  9014 C9           	ret
1480  9015
1481  9015              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1482  9015              ;
1483  9015              ;	22/7/24
1484  9015
1485  9015              Cargamos_registros_con_explosion
1486  9015
1487  9015
1488  9015 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1489  9018 CD B4 90     	call Extrae_address
1490  901B
1491  901B 5D           	ld e,l
1492  901C 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1493  901D
1494  901D DD 2A BB 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1495  9021
1496  9021 C9           	ret
1497  9022
1498  9022
1499  9022              Cargamos_registros_con_explosion_Amadeus
1500  9022
1501  9022 2A 7A 89     	ld hl,(Pamm_Amadeus)
1502  9025 CD B4 90     	call Extrae_address
1503  9028
1504  9028 5D           	ld e,l
1505  9029 54           	ld d,h
1506  902A
1507  902A DD 2A 78 89  	ld ix,(p.imp.amadeus)
1508  902E
1509  902E C9           	ret
1510  902F
1511  902F              ; --------------------------------------------------------------------------------------------------------------
1512  902F              ;
1513  902F              ;	17/06/24
1514  902F              ;
1515  902F              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1516  902F              ;
1517  902F              ;	IX contiene el puntero de impresión.
1518  902F              ;	DE contiene (Puntero_objeto).
1519  902F
1520  902F
1521  902F              Cargamos_registros_con_mov_masticado_Amadeus
1522  902F
1523  902F ED 73 03 8C  	ld (Stack),sp
1524  9033 ED 7B 7A 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1525  9037 D1           	pop de 															; DE contiene Puntero_objeto
1526  9038 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1527  903A DD 22 78 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1528  903E ED 7B 03 8C  	ld sp,(Stack)
1529  9042 C9           	ret
1530  9043
1531  9043              ; ---------------------------------------------------------------------------------------------------------------------
1532  9043              ;
1533  9043              ;	18/6/24
1534  9043              ;
1535  9043              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1536  9043
1537  9043              Genera_datos_de_impresion_Amadeus
1538  9043
1539  9043 3A 77 89     	ld a,(Impacto_Amadeus)
1540  9046 A7           	and a
1541  9047 20 03        	jr nz,1F
1542  9049
1543  9049              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1544  9049              ; _apuntando a la correspondiente explosión.
1545  9049
1546  9049 CD 2F 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1547  904C
1548  904C DD 7D        1 ld a,ixl
1549  904E E6 1F        	and $1f
1550  9050 32 74 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1551  9053
1552  9053 2A 25 8C     	ld hl,(Scanlines_album_SP)
1553  9056 E5           	push hl
1554  9057
1555  9057 2A 0B 8C     	ld hl,(Album_de_pintado_Amadeus)
1556  905A 22 25 8C     	ld (Scanlines_album_SP),hl
1557  905D
1558  905D CD A1 94     	call Genera_datos_de_impresion
1559  9060
1560  9060 E1           	pop hl
1561  9061 22 25 8C     	ld (Scanlines_album_SP),hl
1562  9064
1563  9064 C9           	ret
1564  9065
1565  9065              ; ---------------------------------------------------------------------------------------------------------------------
1566  9065              ;
1567  9065              ;	13/03/24
1568  9065              ;
1569  9065              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1570  9065
1571  9065              Inicia_albumes_de_lineas
1572  9065
1573  9065 21 00 80     	ld hl,Scanlines_album
1574  9068 22 07 8C     	ld (Album_de_pintado),hl
1575  906B 22 25 8C     	ld (Scanlines_album_SP),hl
1576  906E
1577  906E 21 1A 81     	ld hl,Scanlines_album_2
1578  9071 22 09 8C     	ld (Album_de_borrado),hl
1579  9074
1580  9074 C9           	ret
1581  9075
1582  9075              Inicia_albumes_de_lineas_Amadeus
1583  9075
1584  9075 21 34 82     	ld hl,Amadeus_scanlines_album
1585  9078 22 0B 8C     	ld (Album_de_pintado_Amadeus),hl
1586  907B 21 58 82     	ld hl,Amadeus_scanlines_album_2
1587  907E 22 0D 8C     	ld (Album_de_borrado_Amadeus),hl
1588  9081
1589  9081 C9           	ret
1590  9082
1591  9082              Inicia_albumes_de_disparos
1592  9082
1593  9082 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1594  9085 22 0F 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1595  9088 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1596  908B 22 11 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1597  908E
1598  908E 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1599  9091 22 13 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1600  9094 22 17 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1601  9097
1602  9097 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1603  909A 22 15 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1604  909D
1605  909D C9           	ret
1606  909E
1607  909E              ; ---------------------------------------------------------------------------------------------------------------------
1608  909E              ;
1609  909E              ; 8/1/23
1610  909E              ;
1611  909E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1612  909E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1613  909E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1614  909E
1615  909E              ; Destruye HL y DE !!!!!
1616  909E
1617  909E              Inicia_punteros_de_cajas
1618  909E
1619  909E 21 61 89     	ld hl,Indice_de_cajas_de_entidades
1620  90A1 CD B4 90         call Extrae_address
1621  90A4 22 F6 8B         ld (Puntero_store_caja),hl
1622  90A7 21 63 89     	ld hl,Indice_de_cajas_de_entidades+2
1623  90AA 22 FA 8B     	ld (Indice_restore_caja),hl
1624  90AD CD B4 90     	call Extrae_address
1625  90B0 22 F8 8B     	ld (Puntero_restore_caja),hl
1626  90B3 C9               ret
1627  90B4
1628  90B4              ; *************************************************************************************************************************************************************
1629  90B4
1630  90B4              ;
1631  90B4              ; 20/10/22
1632  90B4              ;
1633  90B4              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1634  90B4              ;
1635  90B4              ; Destruye el puntero y DE !!!!!
1636  90B4
1637  90B4 5E           Extrae_address ld e,(hl)
1638  90B5 23           	inc hl
1639  90B6 56           	ld d,(hl)
1640  90B7 2B           	dec hl
1641  90B8 EB           	ex de,hl
1642  90B9 C9           	ret
1643  90BA
1644  90BA              ; *************************************************************************************************************************************************************
1645  90BA              ;
1646  90BA              ;	20/1/24
1647  90BA              ;
1648  90BA              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1649  90BA              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1650  90BA              ;
1651  90BA              ;   Destruye HL y BC !!!!!,
1652  90BA              ;
1653  90BA              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1654  90BA              ;					"0" ..... Izquierda.
1655  90BA
1656  90BA              Inicia_Puntero_objeto
1657  90BA
1658  90BA 3A D5 8B     	ld a,(Cuad_objeto)
1659  90BD E6 01        	and 1
1660  90BF F5           	push af
1661  90C0 CC DC 90     	call z,Inicia_puntero_objeto_izq
1662  90C3 F1           	pop af
1663  90C4 C8           	ret z
1664  90C5 CD C9 90     	call Inicia_puntero_objeto_der
1665  90C8 C9           	ret
1666  90C9
1667  90C9              ; Arrancamos desde la parte izquierda de la pantalla.
1668  90C9              ; Iniciamos (Indice_Sprite_der).
1669  90C9
1670  90C9 2A CB 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1671  90CC 22 CF 8B     	ld (Puntero_DESPLZ_der),hl
1672  90CF CD B4 90     	call Extrae_address
1673  90D2 22 C8 8B     	ld (Puntero_objeto),hl
1674  90D5
1675  90D5 2A CD 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1676  90D8 22 D1 8B     	ld (Puntero_DESPLZ_izq),hl
1677  90DB C9           	ret
1678  90DC
1679  90DC              ; Arrancamos desde la parte derecha de la pantalla.
1680  90DC              ; Iniciamos (Indice_Sprite_izq).
1681  90DC
1682  90DC 2A CD 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1683  90DF 22 D1 8B     	ld (Puntero_DESPLZ_izq),hl
1684  90E2 CD B4 90     	call Extrae_address
1685  90E5 22 C8 8B     	ld (Puntero_objeto),hl
1686  90E8
1687  90E8 2A CB 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1688  90EB 22 CF 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1689  90EE C9           	ret
1690  90EF
1691  90EF              ; **************************************************************************************************
1692  90EF              ;
1693  90EF              ;	06/07/24
1694  90EF              ;
1695  90EF              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1696  90EF
1697  90EF              Restore_entidad
1698  90EF
1699  90EF 2A F6 8B     	ld hl,(Puntero_store_caja)
1700  90F2 7E           	ld a,(hl)
1701  90F3 A7           	and a
1702  90F4 CC 02 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1703  90F7 28 F6        	jr z,Restore_entidad
1704  90F9
1705  90F9 11 B6 8B     	ld de,Bandeja_DRAW
1706  90FC 01 0C 00     	ld bc,12
1707  90FF ED B0        	ldir
1708  9101 C9           	ret
1709  9102
1710  9102              ; **************************************************************************************************
1711  9102              ;
1712  9102              ;	08/05/23
1713  9102              ;
1714  9102              ;	Incrementamos los dos punteros de entidades. (+1).
1715  9102
1716  9102              Incrementa_punteros_de_cajas
1717  9102
1718  9102 2A F8 8B     	ld hl,(Puntero_restore_caja)
1719  9105 22 F6 8B     	ld (Puntero_store_caja),hl
1720  9108 2A FA 8B     	ld hl,(Indice_restore_caja)
1721  910B 23           	inc hl
1722  910C 23           	inc hl
1723  910D 22 FA 8B     	ld (Indice_restore_caja),hl
1724  9110 CD B4 90         call Extrae_address
1725  9113 22 F8 8B         ld (Puntero_restore_caja),hl
1726  9116 C9               ret
1727  9117
1728  9117              ; -----------------------------------------------------------
1729  9117
1730  9117              ; Teclado.
1731  9117
1732  9117 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1733  9119 DB FE        	in a,($fe)
1734  911B E6 01        	and $01
1735  911D 28 02        	jr z,1f
1736  911F 18 F6        	jr Pulsa_ENTER
1737  9121 C9           1 ret
1738  9122
1739  9122              ; **************************************************************************************************
1740  9122              ;
1741  9122              ; Temporización.
1742  9122
1743  9122              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1744  9122              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1745  9122              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1746  9122              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1747  9122
1748  9122              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1749  9122              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1750  9122              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1751  9122
1752  9122              ; A partir de $4f61 no hace falta DELAY.
1753  9122
1754  9122              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1755  9122
1756  9122              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1757  9122              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1758  9122              ;	LD A,B
1759  9122              ;	AND A
1760  9122              ;	JR NZ,wait
1761  9122              ;	RET
1762  9122
1763  9122              ; ---------------------------------------------------------------------------------------------------------------
1764  9122              ;
1765  9122              ;	13/07/24
1766  9122              ;
1767  9122
1768  9122              Inicia_Shield
1769  9122
1770  9122 21 4F 8C     	ld hl,Datos_Shield
1771  9125 22 53 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1772  9128
1773  9128 7E           	ld a,(hl)
1774  9129 32 56 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1775  912C
1776  912C 3E 01        	ld a,1
1777  912E 32 57 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1778  9131
1779  9131 C9           	ret
1780  9132
1781  9132              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1782  9132              ;
1783  9132              ;	4/6/24
1784  9132              ;
1785  9132              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1786  9132              ;
1787  9132              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1788  9132              ;
1789  9132
1790  9132              Actualiza_pantalla
1791  9132
1792  9132 3E 02        	ld a,2
1793  9134 D3 FE        	out ($fe),a
1794  9136
1795  9136 3A 2B 8C     	ld a,(Ctrl_3)
1796  9139 CB 57        	bit 2,a
1797  913B 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1798  913D
1799  913D              Borrando_entidades
1800  913D
1801  913D 2A 25 8C     	ld hl,(Scanlines_album_SP)
1802  9140 CD B4 90     	call Extrae_address
1803  9143 24           	inc h
1804  9144 25           	dec h
1805  9145 28 05        	jr z,Pintando_entidades
1806  9147 CD 9A 95     	call Pinta_Sprites
1807  914A 18 F1        	jr Borrando_entidades
1808  914C
1809  914C              Pintando_entidades
1810  914C
1811  914C 2A 27 8C     	ld hl,(India_SP)
1812  914F 2C           	inc l
1813  9150 CD B4 90     	call Extrae_address
1814  9153 24           	inc h
1815  9154 25           	dec h
1816  9155 28 0E        	jr z,Ejecuta_escudo
1817  9157 1C           	inc e
1818  9158 1C           	inc e
1819  9159 ED 53 27 8C  	ld (India_SP),de
1820  915D CD B4 90     	call Extrae_address
1821  9160 CD 9A 95     	call Pinta_Sprites
1822  9163 18 E7        	jr Pintando_entidades
1823  9165
1824  9165              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1825  9165
1826  9165              Ejecuta_escudo
1827  9165
1828  9165 3A 55 8C     	ld a,(Shield)
1829  9168 A7           	and a
1830  9169 20 2F        	jr nz,Aplica_Shield
1831  916B
1832  916B              Borrando_Amadeus
1833  916B
1834  916B 21 2B 8C     	ld hl,Ctrl_3
1835  916E CB 6E        	bit 5,(hl)
1836  9170 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1837  9172
1838  9172 2A 0D 8C     	ld hl,(Album_de_borrado_Amadeus)
1839  9175 CD B4 90     	call Extrae_address
1840  9178 24           	inc h
1841  9179 25           	dec h
1842  917A 28 03        	jr z,Pintando_Amadeus
1843  917C CD 9A 95     	call Pinta_Sprites
1844  917F
1845  917F              Pintando_Amadeus
1846  917F
1847  917F 2A 0B 8C     	ld hl,(Album_de_pintado_Amadeus)
1848  9182 CD B4 90     	call Extrae_address
1849  9185 24           	inc h
1850  9186 25           	dec h
1851  9187 28 03        	jr z,1F
1852  9189 CD 9A 95     	call Pinta_Sprites
1853  918C
1854  918C              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1855  918C
1856  918C 21 2B 8C     1 ld hl,Ctrl_3
1857  918F CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1858  9191 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1859  9193 CB AE        	res 5,(hl)
1860  9195
1861  9195 3E 01        	ld a,1												; Borde azul.
1862  9197 D3 FE        	out ($fe),a
1863  9199
1864  9199 C9           	ret
1865  919A
1866  919A              Aplica_Shield
1867  919A
1868  919A              ;	Bit 1 "1" (Shield_3) Sólo borra.
1869  919A              ;		  "0"     ""     Borra/Pinta.
1870  919A              ;	Bit 2    ""  RET.	 No borra, no pinta.
1871  919A
1872  919A 21 57 8C     	ld hl,Shield_3
1873  919D
1874  919D CB 5E        	bit 3,(hl)
1875  919F 20 DE        	jr nz,Pintando_Amadeus
1876  91A1
1877  91A1 CB 56        	bit 2,(hl)
1878  91A3 20 E7        	jr nz,1B
1879  91A5
1880  91A5 CB 4E        	bit 1,(hl)
1881  91A7 C4 AE 91     	call nz,Borra_Amadeus_shield
1882  91AA
1883  91AA 28 BF        	jr z,Borrando_Amadeus
1884  91AC 18 DE        	jr 1B
1885  91AE
1886  91AE              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1887  91AE
1888  91AE              Borra_Amadeus_shield
1889  91AE
1890  91AE 3A 2B 8C     	ld a,(Ctrl_3)
1891  91B1 CB 6F        	bit 5,a
1892  91B3 28 08        	jr z,1F
1893  91B5
1894  91B5 2A 0D 8C     	ld hl,(Album_de_borrado_Amadeus)
1895  91B8 CD B4 90     	call Extrae_address
1896  91BB 18 06        	jr 2F
1897  91BD
1898  91BD 2A 0B 8C     1 ld hl,(Album_de_pintado_Amadeus)
1899  91C0 CD B4 90     	call Extrae_address
1900  91C3
1901  91C3 CD 9A 95     2 call Pinta_Sprites
1902  91C6
1903  91C6 AF           	xor a
1904  91C7 3C           	inc a											; Asegura NZ en la salida de la rutina.
1905  91C8
1906  91C8 C9           	ret
1907  91C9
1908  91C9              Pinta_Amadeus_shield
1909  91C9
1910  91C9 2A 0B 8C     	ld hl,(Album_de_pintado_Amadeus)
1911  91CC CD B4 90     	call Extrae_address
1912  91CF CD 9A 95     	call Pinta_Sprites
1913  91D2
1914  91D2 AF           	xor a
1915  91D3 3C           	inc a											; Asegura NZ en la salida de la rutina.
1916  91D4
1917  91D4 C9           	ret
1918  91D5
1919  91D5              Borra_Pinta_Amadeus_shield
1920  91D5
1921  91D5 CD AE 91     	call Borra_Amadeus_shield
1922  91D8 CD C9 91     	call Pinta_Amadeus_shield
1923  91DB C9           	ret
1924  91DC
1925  91DC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1926  91DC              ;
1927  91DC              ;	19/6/24
1928  91DC              ;
1929  91DC
1930  91DC              Teclado
1931  91DC
1932  91DC              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1933  91DC
1934  91DC 3E F7        	ld a,$f7												; "5" para disparar.
1935  91DE DB FE        	in a,($fe)
1936  91E0 E6 10        	and $10
1937  91E2
1938  91E2 CC 34 A2     	call z,Genera_disparo_Amadeus
1939  91E5
1940  91E5 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1941  91E7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1942  91E9 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1943  91EB CC 07 9D         call z,Amadeus_a_izquierda
1944  91EE
1945  91EE 3E F7        	ld a,$f7
1946  91F0 DB FE        	in a,($fe)
1947  91F2 E6 01        	and $01
1948  91F4 C8           	ret z
1949  91F5
1950  91F5 3E F7        	ld a,$f7
1951  91F7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1952  91F9 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1953  91FB CC 1F 9D     	call z,Amadeus_a_derecha
1954  91FE
1955  91FE C9           	ret
1956  91FF
1957  91FF              ; ------------------------------------------------------------------------------------------------------------------------
1958  91FF              ;
1959  91FF              ;	06/07/24
1960  91FF              ;
1961  91FF
1962  91FF              Genera_explosion
1963  91FF
1964  91FF 21 3D 8C     	ld hl,Clock_explosion
1965  9202 35           	dec (hl)
1966  9203 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1967  9205
1968  9205              Borra_entidad_colisionada
1969  9205
1970  9205 CD 0C 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1971  9208 CD 15 90     	call Cargamos_registros_con_explosion
1972  920B CD A1 94     	call Genera_datos_de_impresion
1973  920E
1974  920E AF           	xor a
1975  920F 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1976  9210
1977  9210 C9           	ret
1978  9211
1979  9211              Siguiente_frame_explosion
1980  9211
1981  9211 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1982  9213
1983  9213              ; Avanza Frame de explosión.
1984  9213
1985  9213 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1986  9216 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1987  9219
1988  9219 79           	ld a,c
1989  921A 95           	sub l
1990  921B 20 0B        	jr nz,1F
1991  921D
1992  921D              ; Fín de la entidad !!!!!!!!!!!!!
1993  921D
1994  921D 21 FD 8B     	ld hl,Numero_parcial_de_entidades
1995  9220 35           	dec (hl)
1996  9221 23           	inc hl
1997  9222 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1998  9223
1999  9223 CD 90 93     	call Limpiamos_bandeja_DRAW
2000  9226 18 DD        	jr Borra_entidad_colisionada
2001  9228
2002  9228 23           1 inc hl
2003  9229 23           	inc hl
2004  922A 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2005  922D 18 D6        	jr Borra_entidad_colisionada
2006  922F
2007  922F              ; ----- ----- ----- ----- -----
2008  922F
2009  922F              Genera_explosion_Amadeus
2010  922F
2011  922F 21 3E 8C     	ld hl,Clock_explosion_Amadeus
2012  9232 35           	dec (hl)
2013  9233 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2014  9235
2015  9235              Borra_Amadeus_impactado
2016  9235
2017  9235 CD 71 8E     	call Change_Amadeus
2018  9238 CD 22 90     	call Cargamos_registros_con_explosion_Amadeus
2019  923B CD 43 90     	call Genera_datos_de_impresion_Amadeus
2020  923E
2021  923E 21 2B 8C     	ld hl,Ctrl_3
2022  9241 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2023  9243
2024  9243 AF           	xor a
2025  9244 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2026  9245
2027  9245 C9           	ret
2028  9246
2029  9246              Siguiente_frame_explosion_Amadeus
2030  9246
2031  9246 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2032  9248
2033  9248              ; Avanza Frame de explosión.
2034  9248
2035  9248 2A 7A 89     	ld hl,(Pamm_Amadeus)
2036  924B 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2037  924E
2038  924E 79           	ld a,c
2039  924F 95           	sub l
2040  9250 20 0B        	jr nz,1F
2041  9252
2042  9252              ; Fín de Amadeus !!!!!!!!!!!!!
2043  9252              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2044  9252
2045  9252 AF           	xor a
2046  9253 32 77 89     	ld (Impacto_Amadeus),a
2047  9256 21 2B 8C     	ld hl,Ctrl_3
2048  9259 CB F6        	set 6,(hl)
2049  925B
2050  925B 18 D8        	jr Borra_Amadeus_impactado
2051  925D
2052  925D 23           1 inc hl
2053  925E 23           	inc hl
2054  925F 22 7A 89     	ld (Pamm_Amadeus),hl
2055  9262 18 D1        	jr Borra_Amadeus_impactado
2056  9264
2057  9264              ; ---------------------------------------------------------------
2058  9264
2059  9264              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9264              ; ******************************************************************************************************************************************************************************************
   2+ 9264              ;
   3+ 9264              ;   21/04/24
   4+ 9264              ;
   5+ 9264              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9264              ;   (XOR) bit a bit.
   7+ 9264              ;
   8+ 9264              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9264
  10+ 9264              Derivando_RND
  11+ 9264
  12+ 9264 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9267
  14+ 9267 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9269 C5               push bc
  16+ 926A              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 926A 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 926D              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 926D
  20+ 926D A7           6 and a                                 ; Carry a "0".
  21+ 926E CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9270 30 02            jr nc,1F
  23+ 9272
  24+ 9272 CB C1            set 0,c
  25+ 9274
  26+ 9274 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9275 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9277 5F               ld e,a
  29+ 9278
  30+ 9278 7A               ld a,d
  31+ 9279 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 927B 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 927D
  34+ 927D CB 3F            srl a
  35+ 927F
  36+ 927F AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9280
  38+ 9280 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9281 28 04            jr z,4F
  40+ 9283
  41+ 9283 CB FF            set 7,a
  42+ 9285 18 02            jr 5F
  43+ 9287
  44+ 9287 CB BF        4 res 7,a
  45+ 9289
  46+ 9289 CB 21        5 sla c
  47+ 928B 10 E0            djnz 6B
  48+ 928D
  49+ 928D 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 928E
  51+ 928E 77               ld (hl),a
  52+ 928F 23               inc hl
  53+ 9290 C1               pop bc
  54+ 9291 10 D4            djnz 3B
  55+ 9293
  56+ 9293 C9               ret
  57+ 9294
  58+ 9294
  59+ 9294
# file closed: RND_Derivando.asm
2060  9294              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9294              ;---------------------------------------------------------------------------------------------------------------
   2+ 9294              ;
   3+ 9294              ;   10/11/24
   4+ 9294
   5+ 9294              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
   6+ 9294
   7+ 9294              ;	Entidad_1 db 1,2,2		                     		; (Tipo) / (Filas) / (Columns).
   8+ 9294              ;	db 1												; (Contador_de_vueltas).
   9+ 9294              ;	defw Indice_Badsat_der								; (Indice_Sprite_der).
  10+ 9294              ;	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
  11+ 9294
  12+ 9294              ; 	Aleatoriedad en la posición de inicio de la entidad.
  13+ 9294              ; 	BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
  14+ 9294
  15+ 9294              ;	Pos_inicio_entidad1	defw $0000	                    ; (Posicion_inicio).
  16+ 9294              ;	db 0												; (Cuad_objeto).
  17+ 9294
  18+ 9294              ;	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
  19+ 9294
  20+ 9294
  21+ 9294              Genera_movimientos_masticados_del_nivel
  22+ 9294
  23+ 9294 CD CF 92     	call Inicializa_Nivel
  24+ 9297
  25+ 9297              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  26+ 9297
  27+ 9297              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  28+ 9297              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  29+ 9297              ;	(Datos_de_nivel) apunta al .db, (tipo) de la 1ª entidad del Nivel.
  30+ 9297
  31+ 9297 E5           1 push hl														; (Datos_de_nivel).
  32+ 9298 7E           	ld a,(hl)													; A contiene el (Tipo) de la entidad del Nivel.
  33+ 9299
  34+ 9299              ;	Se han construido los "Movimientos masticados" de este (Tipo) de entidad ?
  35+ 9299
  36+ 9299 CD EF 93         call Calcula_salto_en_BC
  37+ 929C 21 1B 89         ld hl,Indice_de_almacenes_de_mov_masticados
  38+ 929F A7               and a
  39+ 92A0 ED 4A            adc hl,bc
  40+ 92A2 CD B4 90         call Extrae_address
  41+ 92A5 2C           	inc l
  42+ 92A6 7E           	ld a,(hl)
  43+ 92A7 A7           	and a
  44+ 92A8 20 1C        	jr nz,Movimientos_masticados_construidos
  45+ 92AA
  46+ 92AA E1           	pop hl														; (Datos_de_nivel).
  47+ 92AB 7E           	ld a,(hl)
  48+ 92AC E5           	push hl														; (Datos_de_nivel).
  49+ 92AD
  50+ 92AD CD 7B 93     	call Definicion_segun_tipo
  51+ 92B0
  52+ 92B0              ;	HL apunta al primer .db que define la entidad, (Tipo).
  53+ 92B0
  54+ 92B0 7E           	ld a,(hl)
  55+ 92B1 08           	ex af,af													; (Tipo) en áf
  56+ 92B2
  57+ 92B2 CD 04 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  58+ 92B5
  59+ 92B5 08           	ex af,af
  60+ 92B6 CD E2 92     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  61+ 92B9
  62+ 92B9              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  63+ 92B9
  64+ 92B9 2A 40 8C     	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  65+ 92BC 7E           	ld a,(hl)
  66+ 92BD E6 1F        	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  67+ 92BF
  68+ 92BF 21 D3 8B     	ld hl,Posicion_inicio
  69+ 92C2 77           	ld (hl),a
  70+ 92C3
  71+ 92C3              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  72+ 92C3              ;	Generamos "Movimientos masticados" de la entidad.
  73+ 92C3
  74+ 92C3 CD A8 8F     	call Construye_movimientos_masticados_entidad
  75+ 92C6
  76+ 92C6              ; 	Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
  77+ 92C6              ; 	(Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
  78+ 92C6              ; 	(Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
  79+ 92C6              ; 	Contador_general_de_mov_masticados de este tipo de entidad actualizado.
  80+ 92C6              ; 	Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
  81+ 92C6
  82+ 92C6              Movimientos_masticados_construidos
  83+ 92C6
  84+ 92C6 21 FC 8B     	ld hl,Numero_de_entidades
  85+ 92C9 35           	dec (hl)
  86+ 92CA E1           	pop hl														; (Datos_de_nivel) en HL.
  87+ 92CB C8           	ret z
  88+ 92CC 2C           	inc l
  89+ 92CD 18 C8        	jr 1B
  90+ 92CF
  91+ 92CF              ;---------------------------------------------------------------------------------------------------------------
  92+ 92CF              ;
  93+ 92CF              ;   9/11/24
  94+ 92CF              ;
  95+ 92CF              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  96+ 92CF              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  97+ 92CF              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  98+ 92CF              ;	_ de la 1ª entidad del Nivel.
  99+ 92CF              ;
 100+ 92CF              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
 101+ 92CF
 102+ 92CF              ;	MODIFICA: HL,DE y A.
 103+ 92CF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
 104+ 92CF
 105+ 92CF              Inicializa_Nivel
 106+ 92CF
 107+ 92CF              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 108+ 92CF
 109+ 92CF 21 9A 8B     	ld hl,Indice_de_niveles
 110+ 92D2 CD B4 90     	call Extrae_address
 111+ 92D5 ED 53 4B 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 112+ 92D9
 113+ 92D9 7E           	ld a,(hl)
 114+ 92DA 32 FC 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 115+ 92DD
 116+ 92DD 2C           	inc l
 117+ 92DE 22 4D 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 118+ 92E1
 119+ 92E1 C9           	ret
 120+ 92E2
 121+ 92E2              ; ----------------------
 122+ 92E2
 123+ 92E2              ; Fija_velocidades ld de,Perfiles_de_velocidad
 124+ 92E2              ; 	ld bc,4
 125+ 92E2              ; 	ldir
 126+ 92E2              ; 	ret
 127+ 92E2
 128+ 92E2 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 129+ 92E3 CD EF 93         call Calcula_salto_en_BC
 130+ 92E6 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 131+ 92E9 A7               and a
 132+ 92EA ED 4A            adc hl,bc
 133+ 92EC CD B4 90         call Extrae_address
 134+ 92EF 22 E7 8B         ld (Puntero_indice_mov),hl
 135+ 92F2 C9               ret
 136+ 92F3
 137+ 92F3              ;Situa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
 138+ 92F3              ;	call Calcula_salto_en_BC
 139+ 92F3              ;	ld hl,Indice_de_almacenes_de_mov_masticados
 140+ 92F3              ;    and a
 141+ 92F3              ;    adc hl,bc
 142+ 92F3              ;    call Extrae_address
 143+ 92F3              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
 144+ 92F3              ;	ret
 145+ 92F3
 146+ 92F3              ;---------------------------------------------------------------------------------------------------------------
 147+ 92F3              ;
 148+ 92F3              ;   5/1/24
 149+ 92F3              ;
 150+ 92F3              ;	Destruye A,BC,HL,DE
 151+ 92F3
 152+ 92F3              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
 153+ 92F3              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
 154+ 92F3
 155+ 92F3              Inicia_Entidades
 156+ 92F3
 157+ 92F3              ; Preparamos los punteros de las cajas de entidades:
 158+ 92F3
 159+ 92F3 CD 9E 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 160+ 92F6              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 161+ 92F6 CD 3A 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 162+ 92F9
 163+ 92F9 2A 4D 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 164+ 92FC
 165+ 92FC 22 4D 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
 166+ 92FF
 167+ 92FF              ;	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
 168+ 92FF
 169+ 92FF 2A 4D 8C     	ld hl,(Datos_de_nivel)
 170+ 9302
 171+ 9302              ; En este punto:
 172+ 9302              ;
 173+ 9302              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
 174+ 9302              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
 175+ 9302
 176+ 9302 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
 177+ 9303
 178+ 9303 7E           	ld a,(hl)
 179+ 9304 CD 7B 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 180+ 9307
 181+ 9307 CD 04 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 182+ 930A
 183+ 930A              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 184+ 930A
 185+ 930A              ;	call Busca_mov_masticados_segun_tipo
 186+ 930A
 187+ 930A A7           	and a
 188+ 930B 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 189+ 930D
 190+ 930D              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 191+ 930D
 192+ 930D              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 193+ 930D              ;	_ de este tipo de entidad.
 194+ 930D
 195+ 930D CD 9E 9E     	call Situa_en_contador_general_de_mov_masticados
 196+ 9310 CD AB 9E     	call Transfiere_datos_de_contadores
 197+ 9313
 198+ 9313 18 03        	jr 4F
 199+ 9315
 200+ 9315 CD A8 8F     3 call Construye_movimientos_masticados_entidad
 201+ 9318
 202+ 9318              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 203+ 9318              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 204+ 9318              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 205+ 9318              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 206+ 9318              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 207+ 9318
 208+ 9318              ;	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 209+ 9318              ;																; _ Mov_masticados ya generados.
 210+ 9318
 211+ 9318 CD FC 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 212+ 931B
 213+ 931B DD E5        	push ix
 214+ 931D E1           	pop hl 														; (Puntero_de_impresion) en HL.
 215+ 931E
 216+ 931E D5           	push de
 217+ 931F CD 75 94     	call Genera_coordenadas
 218+ 9322
 219+ 9322 ED 5B 25 8C  	ld de,(Scanlines_album_SP)
 220+ 9326 CD 0C 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 221+ 9329 D1           	pop de
 222+ 932A
 223+ 932A CD A1 94     	call Genera_datos_de_impresion
 224+ 932D              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 225+ 932D              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 226+ 932D              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 227+ 932D              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 228+ 932D
 229+ 932D CD B3 93     	call Decrementa_Contador_de_mov_masticados
 230+ 9330
 231+ 9330              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 232+ 9330
 233+ 9330 ED 5B F6 8B  	ld de,(Puntero_store_caja)
 234+ 9334 CD 31 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 235+ 9337
 236+ 9337 CD 90 93     	call Limpiamos_bandeja_DRAW
 237+ 933A CD 02 91     	call Incrementa_punteros_de_cajas
 238+ 933D
 239+ 933D              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 240+ 933D              ; _ entidad del Nivel.
 241+ 933D
 242+ 933D 3A 2C 8C     	ld a,(Ctrl_4)
 243+ 9340 E6 F0        	and $f0
 244+ 9342 32 2C 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 245+ 9345
 246+ 9345              ; Siguiente entidad del Nivel.
 247+ 9345
 248+ 9345 2A 4D 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 249+ 9348 23           	inc hl 														; _ entidad del Nivel.
 250+ 9349
 251+ 9349 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 252+ 934A
 253+ 934A 10 B0        	djnz 2B
 254+ 934C
 255+ 934C C9           	ret
 256+ 934D
 257+ 934D              ; -------------------------------------------------------------------------------------------------------------------
 258+ 934D              ;
 259+ 934D              ;	27/5/24
 260+ 934D              ;
 261+ 934D              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 262+ 934D              ;
 263+ 934D
 264+ 934D              ; 	Cargamos la definición de Amadeus en DRAW.
 265+ 934D              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 266+ 934D
 267+ 934D 21 F1 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 268+ 9350 CD 04 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 269+ 9353
 270+ 9353
 271+ 9353              Construye_movimientos_masticados_Amadeus
 272+ 9353
 273+ 9353 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 274+ 9356 CD EF 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 275+ 9359              ;															; _ el (Contador_de_mov_masticados).
 276+ 9359 CD BA 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 277+ 935C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 278+ 935C
 279+ 935C              ; Generamos movimientos masticados de Amadeus.
 280+ 935C
 281+ 935C 06 79        	ld b,121												; $0079, 121d.
 282+ 935E
 283+ 935E C5           1 push bc
 284+ 935F CD BD 96     	call Draw
 285+ 9362 CD D4 8F     	call Guarda_movimiento_masticado
 286+ 9365
 287+ 9365 CD 31 9A     	call Mov_right
 288+ 9368 CD 31 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 289+ 936B
 290+ 936B C1           	pop bc
 291+ 936C 10 F0        	djnz 1B
 292+ 936E
 293+ 936E              ; Todos los movimientos masticados de Amadeus se han creado.
 294+ 936E
 295+ 936E              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 296+ 936E              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 297+ 936E
 298+ 936E 2A BD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 299+ 9371 01 08 00     	ld bc,8
 300+ 9374 A7           	and a
 301+ 9375 ED 42        	sbc hl,bc
 302+ 9377 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 303+ 937A
 304+ 937A C9           	ret
 305+ 937B
 306+ 937B              ; ---------------------------------------------------------------------
 307+ 937B              ;
 308+ 937B              ;	10/02/24
 309+ 937B              ;
 310+ 937B              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 311+ 937B              ;
 312+ 937B              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 313+ 937B
 314+ 937B              Definicion_segun_tipo
 315+ 937B
 316+ 937B CD EF 93     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 317+ 937E 21 D3 89     	ld hl,Indice_de_definiciones_de_entidades
 318+ 9381 CD FA 93     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 319+ 9384 C9           	ret
 320+ 9385
 321+ 9385              ; ---------------------------------------------------------------------
 322+ 9385              ;
 323+ 9385              ;	6/7/24
 324+ 9385
 325+ 9385
 326+ 9385              Store_Restore_cajas
 327+ 9385
 328+ 9385 ED 5B F6 8B  	ld de,(Puntero_store_caja)
 329+ 9389 CD 31 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 330+ 938C CD 02 91     	call Incrementa_punteros_de_cajas
 331+ 938F C9           	ret
 332+ 9390
 333+ 9390              ; ---------------------------------------------------------------------
 334+ 9390              ;
 335+ 9390              ;	23/6/24
 336+ 9390              ;
 337+ 9390              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 338+ 9390              ;
 339+ 9390              ;	MODIFY: HL
 340+ 9390
 341+ 9390              Limpiamos_bandeja_DRAW
 342+ 9390
 343+ 9390 ED 73 03 8C  	ld (Stack),sp
 344+ 9394 31 DB 8B     	ld sp,Vel_left
 345+ 9397
 346+ 9397 AF           	xor a
 347+ 9398 67           	ld h,a
 348+ 9399 6F           	ld l,a
 349+ 939A
 350+ 939A E5           	push hl
 351+ 939B E5           	push hl
 352+ 939C E5           	push hl
 353+ 939D E5           	push hl
 354+ 939E E5           	push hl
 355+ 939F E5           	push hl
 356+ 93A0 E5           	push hl
 357+ 93A1 E5           	push hl
 358+ 93A2 E5           	push hl
 359+ 93A3 E5           	push hl
 360+ 93A4 E5           	push hl
 361+ 93A5 E5           	push hl
 362+ 93A6 E5           	push hl
 363+ 93A7 E5           	push hl
 364+ 93A8 E5           	push hl
 365+ 93A9 E5           	push hl
 366+ 93AA E5           	push hl
 367+ 93AB E5           	push hl
 368+ 93AC
 369+ 93AC 33           	inc sp
 370+ 93AD
 371+ 93AD E5           	push hl
 372+ 93AE ED 7B 03 8C  	ld sp,(Stack)
 373+ 93B2
 374+ 93B2 C9           	ret
 375+ 93B3
 376+ 93B3              ; ---------------------------------------------------------------------
 377+ 93B3              ;
 378+ 93B3              ;	24/03/24
 379+ 93B3
 380+ 93B3 2A BF 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 381+ 93B6 2B           	dec hl
 382+ 93B7 22 BF 8B     	ld (Contador_de_mov_masticados),hl
 383+ 93BA C9           	ret
 384+ 93BB
 385+ 93BB              ; ---------------------------------------------------------------------
 386+ 93BB              ;
 387+ 93BB              ;	7/11/24
 388+ 93BB
 389+ 93BB              Reinicia_entidad_maliciosa
 390+ 93BB
 391+ 93BB              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 392+ 93BB
 393+ 93BB CD 9E 9E     	call Situa_en_contador_general_de_mov_masticados
 394+ 93BE CD AB 9E     	call Transfiere_datos_de_contadores
 395+ 93C1
 396+ 93C1              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 397+ 93C1
 398+ 93C1 3A B6 8B     	ld a,(Tipo)
 399+ 93C4 CD 7B 93     	call Definicion_segun_tipo
 400+ 93C7
 401+ 93C7 E5           	push hl
 402+ 93C8 DD E1        	pop ix
 403+ 93CA
 404+ 93CA DD 6E 0B     	ld l,(ix+11)
 405+ 93CD DD 66 0C     	ld h,(ix+12)
 406+ 93D0
 407+ 93D0 22 BD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 408+ 93D3
 409+ 93D3 CD FC 8F     	call Cargamos_registros_con_mov_masticado
 410+ 93D6
 411+ 93D6              ; Incrementa (Contador_de_vueltas)x2.
 412+ 93D6              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 413+ 93D6
 414+ 93D6              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 415+ 93D6              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 416+ 93D6              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 417+ 93D6              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 418+ 93D6              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 419+ 93D6
 420+ 93D6 21 B9 8B     	ld hl,Contador_de_vueltas
 421+ 93D9 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 422+ 93DB
 423+ 93DB 7E           	ld a,(hl)
 424+ 93DC CB 2F        	sra a
 425+ 93DE CB 2F        	sra a
 426+ 93E0
 427+ 93E0 32 C1 8B     	ld (Velocidad),a
 428+ 93E3
 429+ 93E3 3E 40        	ld a,$40
 430+ 93E5 BE           	cp (hl)
 431+ 93E6 C0           	ret nz
 432+ 93E7
 433+ 93E7              ; Límitador.
 434+ 93E7
 435+ 93E7              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 436+ 93E7
 437+ 93E7 CB 2E        	sra (hl)
 438+ 93E9 21 C1 8B     	ld hl,Velocidad
 439+ 93EC CB 2E        	sra (hl)
 440+ 93EE
 441+ 93EE C9           	ret
 442+ 93EF
 443+ 93EF              ;	------------------------------------------------------------------------------------
 444+ 93EF              ;
 445+ 93EF              ;	09/11/24
 446+ 93EF              ;
 447+ 93EF              ;	INPUTS:	A contiene el (Tipo) de entidad.
 448+ 93EF              ;
 449+ 93EF              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 450+ 93EF              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 451+ 93EF
 452+ 93EF A7           Calcula_salto_en_BC and a
 453+ 93F0 28 04        	jr z,1F
 454+ 93F2 CB 27        	sla a
 455+ 93F4 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 456+ 93F6 4F           1 ld c,a
 457+ 93F7 06 00        	ld b,0
 458+ 93F9 C9           	ret
 459+ 93FA
 460+ 93FA              ; ------------------------------------------------------------------
 461+ 93FA              ;
 462+ 93FA              ;	19/1/24
 463+ 93FA              ;
 464+ 93FA              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 465+ 93FA              ;	Actualiza (Datos_de_entidad) con esa dirección.
 466+ 93FA
 467+ 93FA A7           Situa_en_datos_de_definicion and a
 468+ 93FB ED 4A        	adc hl,bc
 469+ 93FD CD B4 90     	call Extrae_address
 470+ 9400 22 01 8C         ld (Datos_de_entidad),hl
 471+ 9403 C9           	ret
 472+ 9404
 473+ 9404              ; ------------------------------------------------------------------
 474+ 9404
 475+ 9404              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 476+ 9404              ; 	inc de
 477+ 9404              ; 	inc de
 478+ 9404              ; 	ex de,hl
 479+ 9404              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 480+ 9404              ; 	ret
 481+ 9404
 482+ 9404              ; ----------------------------------------------------------------------------------------------------------
 483+ 9404              ;
 484+ 9404              ;	24/6/24
 485+ 9404              ;
 486+ 9404              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 487+ 9404              ;	_ de entidad.
 488+ 9404              ;
 489+ 9404              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 490+ 9404              ;
 491+ 9404              ;
 492+ 9404              ;	MODIFICA: HL,DE y BC
 493+ 9404
 494+ 9404
 495+ 9404              Definicion_de_entidad_a_bandeja_DRAW
 496+ 9404
 497+ 9404 11 B6 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 498+ 9407 7E           	ld a,(hl) 									; Volcamos Tipo.
 499+ 9408 12           	ld (de),a
 500+ 9409 23           	inc hl
 501+ 940A              ;
 502+ 940A 11 C4 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 503+ 940D 01 02 00     	ld bc,2
 504+ 9410 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 505+ 9412              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 506+ 9412 11 B9 8B     	ld de,Contador_de_vueltas
 507+ 9415 7E           	ld a,(hl)
 508+ 9416 12           	ld (de),a
 509+ 9417 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 510+ 9418
 511+ 9418 11 CB 8B     	ld de,Indice_Sprite_der
 512+ 941B 01 04 00     	ld bc,4
 513+ 941E ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 514+ 9420
 515+ 9420 11 D3 8B     	ld de,Posicion_inicio
 516+ 9423 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 517+ 9426 ED B0        	ldir 									; Vuelco (Frames_explosion).
 518+ 9428
 519+ 9428 11 BD 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 520+ 942B 01 02 00     	ld bc,2
 521+ 942E ED B0        	ldir
 522+ 9430
 523+ 9430 C9           	ret
 524+ 9431
 525+ 9431              ; ----------------------------------------------------------------------------------------------------------
 526+ 9431              ;
 527+ 9431              ;	1/8/24
 528+ 9431              ;
 529+ 9431
 530+ 9431              Parametros_de_bandeja_DRAW_a_caja
 531+ 9431
 532+ 9431 21 B6 8B     	ld hl,Bandeja_DRAW
 533+ 9434 01 0C 00     	ld bc,12
 534+ 9437 ED B0        	ldir
 535+ 9439 C9           	ret
 536+ 943A
 537+ 943A              ;---------------------------------------------------------------------------------------------------------------
 538+ 943A              ;
 539+ 943A              ;	5/1/24
 540+ 943A              ;
 541+ 943A              ;	INICIALIZA (Numero_parcial_de_entidades).
 542+ 943A              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 543+ 943A              ;
 544+ 943A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 545+ 943A              ;
 546+ 943A              ;	(Numero_parcial_de_entidades)="7".
 547+ 943A              ;
 548+ 943A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 549+ 943A              ;
 550+ 943A              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 551+ 943A              ;
 552+ 943A              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 553+ 943A              ;	MODIFICA: A y B.
 554+ 943A              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 555+ 943A
 556+ 943A              Inicializa_Numero_parcial_de_entidades
 557+ 943A
 558+ 943A              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 559+ 943A
 560+ 943A 3A FC 8B     	ld a,(Numero_de_entidades)
 561+ 943D A7           	and a
 562+ 943E
 563+ 943E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 564+ 943E              ;	jr z,$
 565+ 943E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 566+ 943E
 567+ 943E 20 03        	jr nz,3F
 568+ 9440
 569+ 9440              ; ---------- ---------- ----------
 570+ 9440
 571+ 9440              ;! RESET para pruebas. Omitir esta línea en modo normal.
 572+ 9440              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 573+ 9440
 574+ 9440 CD CF 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 575+ 9443
 576+ 9443              ; ---------- ---------- ----------
 577+ 9443
 578+ 9443 3A FC 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 579+ 9446 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 580+ 9448 38 08        	jr c,1F
 581+ 944A
 582+ 944A              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 583+ 944A              ; Actualizamos variables.
 584+ 944A
 585+ 944A 3E 07        	ld a,7
 586+ 944C 32 FD 8B     	ld (Numero_parcial_de_entidades),a
 587+ 944F 47           	ld b,a
 588+ 9450 18 04        	jr 2F
 589+ 9452
 590+ 9452              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 591+ 9452              ; (Numero_de_entidades)="0".
 592+ 9452
 593+ 9452 32 FD 8B     1 ld (Numero_parcial_de_entidades),a
 594+ 9455 47           	ld b,a
 595+ 9456 C9           2 ret
 596+ 9457
# file closed: Rutinas_de_inicio_y_niveles.asm
2061  9457              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9457              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9457              ;
   3+ 9457              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9457              ;
   5+ 9457              ; *****************************************************************************************************************************************************************************************
   6+ 9457              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9457
   8+ 9457 7C           calcula_tercio ld a,h
   9+ 9458 E6 18        	and $18
  10+ 945A CB 2F        	sra a
  11+ 945C CB 2F        	sra a
  12+ 945E CB 2F        	sra a
  13+ 9460 C9           	ret
  14+ 9461
# file closed: calcula_tercio.asm
2062  9461              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9461              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9461              ;
   3+ 9461              ;
   4+ 9461              ;	CLS.
   5+ 9461              ;
   6+ 9461              ;	Limpia la pantalla y define sus atributos.
   7+ 9461              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9461              ;
   9+ 9461              ;	COLORES: 0 ..... NEGRO
  10+ 9461              ;    		 1 ..... AZUL
  11+ 9461              ; 			 2 ..... ROJO
  12+ 9461              ;			 3 ..... MAGENTA
  13+ 9461              ; 			 4 ..... VERDE
  14+ 9461              ; 			 5 ..... CIAN
  15+ 9461              ;			 6 ..... AMARILLO
  16+ 9461              ; 			 7 ..... BLANCO
  17+ 9461              ;
  18+ 9461              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9461              ;
  20+ 9461              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9461
  22+ 9461
  23+ 9461 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9464 11 01 40     	LD DE,$4001
  25+ 9467 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 946A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 946C ED B0        	LDIR
  28+ 946E 01 FF 02     	LD BC,767
  29+ 9471 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9472 ED B0        	LDIR
  31+ 9474 C9           	ret
  32+ 9475
# file closed: Cls.asm
2063  9475              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9475              ; ------------------------------------------------------------------------
   2+ 9475              ;
   3+ 9475              ;	30/1/24
   4+ 9475              ;
   5+ 9475              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9475              ;	Fila superior "0", Columna izquierda "0".
   7+ 9475              ;
   8+ 9475              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9475              ;
  10+ 9475              ;	Modifica: A,BC y DE.
  11+ 9475
  12+ 9475 7D           Genera_coordenadas ld a,l
  13+ 9476 E6 1F        	and $1f
  14+ 9478 32 B7 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 947B
  16+ 947B 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 947C FE 40        	cp $40
  18+ 947E 38 1C        	jr c,4F
  19+ 9480
  20+ 9480 CD 57 94     	call calcula_tercio
  21+ 9483 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9484
  23+ 9484 1E 00        	ld e,0
  24+ 9486 7D           	ld a,l
  25+ 9487 E6 E0        	and $e0
  26+ 9489 28 01        	jr z,1F
  27+ 948B 04           	inc b
  28+ 948C
  29+ 948C 04           1 inc b
  30+ 948D 05           	dec b
  31+ 948E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9490              ;														; _ , salimos.
  33+ 9490 1C           3 inc e
  34+ 9491 D6 20        	sub 32
  35+ 9493 20 FB        	jr nz,3B
  36+ 9495 10 F5        	djnz 1B
  37+ 9497
  38+ 9497 7B           2 ld a,e
  39+ 9498 32 B8 8B     	ld (Coordenada_y),a
  40+ 949B C9           	ret
  41+ 949C
  42+ 949C AF           4 xor a
  43+ 949D 32 B8 8B     	ld (Coordenada_y),a
  44+ 94A0 C9           	ret
  45+ 94A1
# file closed: Genera_coordenadas.asm
2064  94A1              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94A1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94A1              ;
   3+ 94A1              ;	20/09/24
   4+ 94A1              ;
   5+ 94A1              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94A1              ;   DE contiene Puntero_objeto.
   7+ 94A1              ;   IX contiene el Puntero de impresión.
   8+ 94A1
   9+ 94A1              Genera_datos_de_impresion
  10+ 94A1
  11+ 94A1 ED 73 03 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94A5
  13+ 94A5 31 BD 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94A8 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94AA
  16+ 94AA 2A 25 8C         ld hl,(Scanlines_album_SP)
  17+ 94AD
  18+ 94AD 3E 05            ld a,5
  19+ 94AF 85               add l
  20+ 94B0 6F               ld l,a
  21+ 94B1
  22+ 94B1 F9               ld sp,hl
  23+ 94B2 22 25 8C         ld (Scanlines_album_SP),hl
  24+ 94B5
  25+ 94B5 21 00 00         ld hl,0
  26+ 94B8
  27+ 94B8 DD E5            push ix
  28+ 94BA 3B               dec sp
  29+ 94BB ED 7A            adc hl,sp
  30+ 94BD D5               push de
  31+ 94BE
  32+ 94BE              ; Recuperamos SP.
  33+ 94BE
  34+ 94BE ED 7B 03 8C      ld sp,(Stack)
  35+ 94C2
  36+ 94C2 E5               push hl
  37+ 94C3 F1               pop af
  38+ 94C4 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94C5
  40+ 94C5              ; Tenemos el encabezado listo.
  41+ 94C5              ; Preparamos registros para generar los scanlines.
  42+ 94C5
  43+ 94C5 DD E5            push ix
  44+ 94C7 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94C8
  46+ 94C8 ED 5B 25 8C      ld de,(Scanlines_album_SP)
  47+ 94CC
  48+ 94CC              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94CC              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94CC
  51+ 94CC 7C               ld a,h
  52+ 94CD FE 50            cp $50
  53+ 94CF 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94D1
  55+ 94D1 20 05            jr nz,2F
  56+ 94D3
  57+ 94D3 7D               ld a,l
  58+ 94D4 FE E0            cp $e0
  59+ 94D6 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94D8
  61+ 94D8 7D           2 ld a,l
  62+ 94D9 FE C0            cp $c0
  63+ 94DB D2 71 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94DE
  65+ 94DE              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94DE
  67+ 94DE CD 6F 99         call NextScan
  68+ 94E1 EB               ex de,hl
  69+ 94E2
  70+ 94E2 73               ld (hl),e
  71+ 94E3 23               inc hl
  72+ 94E4 72               ld (hl),d
  73+ 94E5 23               inc hl
  74+ 94E6
  75+ 94E6 EB               ex de,hl
  76+ 94E7
  77+ 94E7 CD 6F 99         call NextScan
  78+ 94EA EB               ex de,hl
  79+ 94EB
  80+ 94EB 73               ld (hl),e
  81+ 94EC 23               inc hl
  82+ 94ED 72               ld (hl),d
  83+ 94EE 23               inc hl
  84+ 94EF
  85+ 94EF EB               ex de,hl
  86+ 94F0
  87+ 94F0 CD 6F 99         call NextScan
  88+ 94F3 EB               ex de,hl
  89+ 94F4
  90+ 94F4 73               ld (hl),e
  91+ 94F5 23               inc hl
  92+ 94F6 72               ld (hl),d
  93+ 94F7 23               inc hl
  94+ 94F8
  95+ 94F8 EB               ex de,hl
  96+ 94F9
  97+ 94F9 CD 6F 99         call NextScan
  98+ 94FC EB               ex de,hl
  99+ 94FD
 100+ 94FD 73               ld (hl),e
 101+ 94FE 23               inc hl
 102+ 94FF 72               ld (hl),d
 103+ 9500 23               inc hl
 104+ 9501
 105+ 9501 EB               ex de,hl
 106+ 9502
 107+ 9502 CD 6F 99         call NextScan
 108+ 9505 EB               ex de,hl
 109+ 9506
 110+ 9506 73               ld (hl),e
 111+ 9507 23               inc hl
 112+ 9508 72               ld (hl),d
 113+ 9509 23               inc hl
 114+ 950A
 115+ 950A EB               ex de,hl
 116+ 950B
 117+ 950B CD 6F 99         call NextScan
 118+ 950E EB               ex de,hl
 119+ 950F
 120+ 950F 73               ld (hl),e
 121+ 9510 23               inc hl
 122+ 9511 72               ld (hl),d
 123+ 9512 23               inc hl
 124+ 9513
 125+ 9513 EB               ex de,hl
 126+ 9514
 127+ 9514 CD 6F 99         call NextScan
 128+ 9517 EB               ex de,hl
 129+ 9518
 130+ 9518 73               ld (hl),e
 131+ 9519 23               inc hl
 132+ 951A 72               ld (hl),d
 133+ 951B 23               inc hl
 134+ 951C
 135+ 951C EB               ex de,hl
 136+ 951D
 137+ 951D CD 6F 99         call NextScan
 138+ 9520 EB               ex de,hl
 139+ 9521
 140+ 9521 73               ld (hl),e
 141+ 9522 23               inc hl
 142+ 9523 72               ld (hl),d
 143+ 9524 23               inc hl
 144+ 9525
 145+ 9525 EB               ex de,hl
 146+ 9526
 147+ 9526 CD 6F 99         call NextScan
 148+ 9529 EB               ex de,hl
 149+ 952A
 150+ 952A 73               ld (hl),e
 151+ 952B 23               inc hl
 152+ 952C 72               ld (hl),d
 153+ 952D 23               inc hl
 154+ 952E
 155+ 952E EB               ex de,hl
 156+ 952F
 157+ 952F CD 6F 99         call NextScan
 158+ 9532 EB               ex de,hl
 159+ 9533
 160+ 9533 73               ld (hl),e
 161+ 9534 23               inc hl
 162+ 9535 72               ld (hl),d
 163+ 9536 23               inc hl
 164+ 9537
 165+ 9537 EB               ex de,hl
 166+ 9538
 167+ 9538 CD 6F 99         call NextScan
 168+ 953B EB               ex de,hl
 169+ 953C
 170+ 953C 73               ld (hl),e
 171+ 953D 23               inc hl
 172+ 953E 72               ld (hl),d
 173+ 953F 23               inc hl
 174+ 9540
 175+ 9540 EB               ex de,hl
 176+ 9541
 177+ 9541 CD 6F 99         call NextScan
 178+ 9544 EB               ex de,hl
 179+ 9545
 180+ 9545 73               ld (hl),e
 181+ 9546 23               inc hl
 182+ 9547 72               ld (hl),d
 183+ 9548 23               inc hl
 184+ 9549
 185+ 9549 EB               ex de,hl
 186+ 954A
 187+ 954A CD 6F 99         call NextScan
 188+ 954D EB               ex de,hl
 189+ 954E
 190+ 954E 73               ld (hl),e
 191+ 954F 23               inc hl
 192+ 9550 72               ld (hl),d
 193+ 9551 23               inc hl
 194+ 9552
 195+ 9552 EB               ex de,hl
 196+ 9553
 197+ 9553 CD 6F 99         call NextScan
 198+ 9556 EB               ex de,hl
 199+ 9557
 200+ 9557 73               ld (hl),e
 201+ 9558 23               inc hl
 202+ 9559 72               ld (hl),d
 203+ 955A 23               inc hl
 204+ 955B
 205+ 955B EB               ex de,hl
 206+ 955C
 207+ 955C CD 6F 99         call NextScan
 208+ 955F EB               ex de,hl
 209+ 9560
 210+ 9560              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 9560              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 9560              ;   _ generar sus scanlines.
 213+ 9560
 214+ 9560              ;    ld (Puntero_de_impresion_disparo),de
 215+ 9560
 216+ 9560 73               ld (hl),e
 217+ 9561 23               inc hl
 218+ 9562 72               ld (hl),d
 219+ 9563 23               inc hl
 220+ 9564
 221+ 9564              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 9564
 223+ 9564 22 25 8C         ld (Scanlines_album_SP),hl
 224+ 9567
 225+ 9567 EB               ex de,hl
 226+ 9568
 227+ 9568              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 9568
 229+ 9568              ;    call NextScan
 230+ 9568              ;    call NextScan
 231+ 9568
 232+ 9568 22 30 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 956B
 234+ 956B              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 956B
 236+ 956B 08               ex af,af
 237+ 956C
 238+ 956C F5               push af
 239+ 956D E1               pop hl
 240+ 956E
 241+ 956E 36 10            ld (hl),16
 242+ 9570
 243+ 9570 C9               ret
 244+ 9571
 245+ 9571              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 9571
 247+ 9571              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 9571
 249+ 9571 3E 57            ld a,$57
 250+ 9573 94               sub h
 251+ 9574 47               ld b,a
 252+ 9575
 253+ 9575 3E DF            ld a,$df
 254+ 9577 BD               cp l
 255+ 9578 38 04            jr c,1F
 256+ 957A
 257+ 957A 3E 08            ld a,8
 258+ 957C 80               add b
 259+ 957D 47               ld b,a
 260+ 957E
 261+ 957E              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 957E              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 957E
 264+ 957E 48           1 ld c,b
 265+ 957F 0C               inc c
 266+ 9580
 267+ 9580 04               inc b
 268+ 9581 05               dec b
 269+ 9582 20 02            jr nz,3F
 270+ 9584
 271+ 9584 18 0B            jr 6F
 272+ 9586
 273+ 9586 CD 6F 99     3 call NextScan
 274+ 9589 EB               ex de,hl
 275+ 958A
 276+ 958A 73               ld (hl),e
 277+ 958B 23               inc hl
 278+ 958C 72               ld (hl),d
 279+ 958D 23               inc hl
 280+ 958E
 281+ 958E EB               ex de,hl
 282+ 958F 10 F5            djnz 3B
 283+ 9591
 284+ 9591 ED 53 25 8C  6 ld (Scanlines_album_SP),de
 285+ 9595
 286+ 9595 08           5 ex af,af
 287+ 9596 F5               push af
 288+ 9597 E1               pop hl
 289+ 9598
 290+ 9598 71               ld (hl),c
 291+ 9599
 292+ 9599 C9               ret
 293+ 959A
# file closed: Genera_datos_de_impresion.asm
2065  959A              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 959A              ; -----------------------------------------------------------------------------
   2+ 959A              ;
   3+ 959A              ;   11/03/24
   4+ 959A              ;
   5+ 959A
   6+ 959A              Pinta_Sprites
   7+ 959A
   8+ 959A              ;    ld hl,(Scanlines_album_SP)
   9+ 959A              ;    call Extrae_address
  10+ 959A
  11+ 959A              ;    inc h
  12+ 959A              ;    dec h
  13+ 959A              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 959A
  15+ 959A ED 73 03 8C      ld (Stack),sp
  16+ 959E
  17+ 959E EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 959F              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 959F 2C               inc l
  20+ 95A0 2C               inc l
  21+ 95A1
  22+ 95A1 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95A2
  24+ 95A2 2C               inc l
  25+ 95A3 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95A4
  27+ 95A4              ;   Seleccionamos rutina de impresión:
  28+ 95A4
  29+ 95A4 3E 10            ld a,16
  30+ 95A6 B8               cp b
  31+ 95A7 C2 A3 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95AA
  33+ 95AA              ;   Rutinas:
  34+ 95AA
  35+ 95AA              Pinta_rapido    ;   1520 t/states.
  36+ 95AA
  37+ 95AA E1               pop hl
  38+ 95AB
  39+ 95AB 1A               ld a,(de)
  40+ 95AC AE               xor (hl)
  41+ 95AD 77               ld (hl),a
  42+ 95AE 2C               inc l
  43+ 95AF 1C               inc e
  44+ 95B0 1A               ld a,(de)
  45+ 95B1 AE               xor (hl)
  46+ 95B2 77               ld (hl),a
  47+ 95B3 2C               inc l
  48+ 95B4 1C               inc e
  49+ 95B5 1A               ld a,(de)
  50+ 95B6 AE               xor (hl)
  51+ 95B7 77               ld (hl),a
  52+ 95B8 13               inc de
  53+ 95B9
  54+ 95B9 E1               pop hl
  55+ 95BA
  56+ 95BA 1A               ld a,(de)
  57+ 95BB AE               xor (hl)
  58+ 95BC 77               ld (hl),a
  59+ 95BD 2C               inc l
  60+ 95BE 1C               inc e
  61+ 95BF 1A               ld a,(de)
  62+ 95C0 AE               xor (hl)
  63+ 95C1 77               ld (hl),a
  64+ 95C2 2C               inc l
  65+ 95C3 1C               inc e
  66+ 95C4 1A               ld a,(de)
  67+ 95C5 AE               xor (hl)
  68+ 95C6 77               ld (hl),a
  69+ 95C7 13               inc de
  70+ 95C8
  71+ 95C8 E1               pop hl
  72+ 95C9
  73+ 95C9 1A               ld a,(de)
  74+ 95CA AE               xor (hl)
  75+ 95CB 77               ld (hl),a
  76+ 95CC 2C               inc l
  77+ 95CD 1C               inc e
  78+ 95CE 1A               ld a,(de)
  79+ 95CF AE               xor (hl)
  80+ 95D0 77               ld (hl),a
  81+ 95D1 2C               inc l
  82+ 95D2 1C               inc e
  83+ 95D3 1A               ld a,(de)
  84+ 95D4 AE               xor (hl)
  85+ 95D5 77               ld (hl),a
  86+ 95D6 13               inc de
  87+ 95D7
  88+ 95D7 E1               pop hl
  89+ 95D8
  90+ 95D8 1A               ld a,(de)
  91+ 95D9 AE               xor (hl)
  92+ 95DA 77               ld (hl),a
  93+ 95DB 2C               inc l
  94+ 95DC 1C               inc e
  95+ 95DD 1A               ld a,(de)
  96+ 95DE AE               xor (hl)
  97+ 95DF 77               ld (hl),a
  98+ 95E0 2C               inc l
  99+ 95E1 1C               inc e
 100+ 95E2 1A               ld a,(de)
 101+ 95E3 AE               xor (hl)
 102+ 95E4 77               ld (hl),a
 103+ 95E5 13               inc de
 104+ 95E6
 105+ 95E6 E1               pop hl
 106+ 95E7
 107+ 95E7 1A               ld a,(de)
 108+ 95E8 AE               xor (hl)
 109+ 95E9 77               ld (hl),a
 110+ 95EA 2C               inc l
 111+ 95EB 1C               inc e
 112+ 95EC 1A               ld a,(de)
 113+ 95ED AE               xor (hl)
 114+ 95EE 77               ld (hl),a
 115+ 95EF 2C               inc l
 116+ 95F0 1C               inc e
 117+ 95F1 1A               ld a,(de)
 118+ 95F2 AE               xor (hl)
 119+ 95F3 77               ld (hl),a
 120+ 95F4 13               inc de
 121+ 95F5
 122+ 95F5 E1               pop hl
 123+ 95F6
 124+ 95F6 1A               ld a,(de)
 125+ 95F7 AE               xor (hl)
 126+ 95F8 77               ld (hl),a
 127+ 95F9 2C               inc l
 128+ 95FA 1C               inc e
 129+ 95FB 1A               ld a,(de)
 130+ 95FC AE               xor (hl)
 131+ 95FD 77               ld (hl),a
 132+ 95FE 2C               inc l
 133+ 95FF 1C               inc e
 134+ 9600 1A               ld a,(de)
 135+ 9601 AE               xor (hl)
 136+ 9602 77               ld (hl),a
 137+ 9603 13               inc de
 138+ 9604
 139+ 9604 E1               pop hl
 140+ 9605
 141+ 9605 1A               ld a,(de)
 142+ 9606 AE               xor (hl)
 143+ 9607 77               ld (hl),a
 144+ 9608 2C               inc l
 145+ 9609 1C               inc e
 146+ 960A 1A               ld a,(de)
 147+ 960B AE               xor (hl)
 148+ 960C 77               ld (hl),a
 149+ 960D 2C               inc l
 150+ 960E 1C               inc e
 151+ 960F 1A               ld a,(de)
 152+ 9610 AE               xor (hl)
 153+ 9611 77               ld (hl),a
 154+ 9612 13               inc de
 155+ 9613
 156+ 9613 E1               pop hl
 157+ 9614
 158+ 9614 1A               ld a,(de)
 159+ 9615 AE               xor (hl)
 160+ 9616 77               ld (hl),a
 161+ 9617 2C               inc l
 162+ 9618 1C               inc e
 163+ 9619 1A               ld a,(de)
 164+ 961A AE               xor (hl)
 165+ 961B 77               ld (hl),a
 166+ 961C 2C               inc l
 167+ 961D 1C               inc e
 168+ 961E 1A               ld a,(de)
 169+ 961F AE               xor (hl)
 170+ 9620 77               ld (hl),a
 171+ 9621 13               inc de
 172+ 9622
 173+ 9622 E1               pop hl
 174+ 9623
 175+ 9623 1A               ld a,(de)
 176+ 9624 AE               xor (hl)
 177+ 9625 77               ld (hl),a
 178+ 9626 2C               inc l
 179+ 9627 1C               inc e
 180+ 9628 1A               ld a,(de)
 181+ 9629 AE               xor (hl)
 182+ 962A 77               ld (hl),a
 183+ 962B 2C               inc l
 184+ 962C 1C               inc e
 185+ 962D 1A               ld a,(de)
 186+ 962E AE               xor (hl)
 187+ 962F 77               ld (hl),a
 188+ 9630 13               inc de
 189+ 9631
 190+ 9631 E1               pop hl
 191+ 9632
 192+ 9632 1A               ld a,(de)
 193+ 9633 AE               xor (hl)
 194+ 9634 77               ld (hl),a
 195+ 9635 2C               inc l
 196+ 9636 1C               inc e
 197+ 9637 1A               ld a,(de)
 198+ 9638 AE               xor (hl)
 199+ 9639 77               ld (hl),a
 200+ 963A 2C               inc l
 201+ 963B 1C               inc e
 202+ 963C 1A               ld a,(de)
 203+ 963D AE               xor (hl)
 204+ 963E 77               ld (hl),a
 205+ 963F 13               inc de
 206+ 9640
 207+ 9640 E1               pop hl
 208+ 9641
 209+ 9641 1A               ld a,(de)
 210+ 9642 AE               xor (hl)
 211+ 9643 77               ld (hl),a
 212+ 9644 2C               inc l
 213+ 9645 1C               inc e
 214+ 9646 1A               ld a,(de)
 215+ 9647 AE               xor (hl)
 216+ 9648 77               ld (hl),a
 217+ 9649 2C               inc l
 218+ 964A 1C               inc e
 219+ 964B 1A               ld a,(de)
 220+ 964C AE               xor (hl)
 221+ 964D 77               ld (hl),a
 222+ 964E 13               inc de
 223+ 964F
 224+ 964F E1               pop hl
 225+ 9650
 226+ 9650 1A               ld a,(de)
 227+ 9651 AE               xor (hl)
 228+ 9652 77               ld (hl),a
 229+ 9653 2C               inc l
 230+ 9654 1C               inc e
 231+ 9655 1A               ld a,(de)
 232+ 9656 AE               xor (hl)
 233+ 9657 77               ld (hl),a
 234+ 9658 2C               inc l
 235+ 9659 1C               inc e
 236+ 965A 1A               ld a,(de)
 237+ 965B AE               xor (hl)
 238+ 965C 77               ld (hl),a
 239+ 965D 13               inc de
 240+ 965E
 241+ 965E E1               pop hl
 242+ 965F
 243+ 965F 1A               ld a,(de)
 244+ 9660 AE               xor (hl)
 245+ 9661 77               ld (hl),a
 246+ 9662 2C               inc l
 247+ 9663 1C               inc e
 248+ 9664 1A               ld a,(de)
 249+ 9665 AE               xor (hl)
 250+ 9666 77               ld (hl),a
 251+ 9667 2C               inc l
 252+ 9668 1C               inc e
 253+ 9669 1A               ld a,(de)
 254+ 966A AE               xor (hl)
 255+ 966B 77               ld (hl),a
 256+ 966C 13               inc de
 257+ 966D
 258+ 966D E1               pop hl
 259+ 966E
 260+ 966E 1A               ld a,(de)
 261+ 966F AE               xor (hl)
 262+ 9670 77               ld (hl),a
 263+ 9671 2C               inc l
 264+ 9672 1C               inc e
 265+ 9673 1A               ld a,(de)
 266+ 9674 AE               xor (hl)
 267+ 9675 77               ld (hl),a
 268+ 9676 2C               inc l
 269+ 9677 1C               inc e
 270+ 9678 1A               ld a,(de)
 271+ 9679 AE               xor (hl)
 272+ 967A 77               ld (hl),a
 273+ 967B 13               inc de
 274+ 967C
 275+ 967C E1               pop hl
 276+ 967D
 277+ 967D 1A               ld a,(de)
 278+ 967E AE               xor (hl)
 279+ 967F 77               ld (hl),a
 280+ 9680 2C               inc l
 281+ 9681 1C               inc e
 282+ 9682 1A               ld a,(de)
 283+ 9683 AE               xor (hl)
 284+ 9684 77               ld (hl),a
 285+ 9685 2C               inc l
 286+ 9686 1C               inc e
 287+ 9687 1A               ld a,(de)
 288+ 9688 AE               xor (hl)
 289+ 9689 77               ld (hl),a
 290+ 968A 13               inc de
 291+ 968B
 292+ 968B E1               pop hl
 293+ 968C
 294+ 968C 1A               ld a,(de)
 295+ 968D AE               xor (hl)
 296+ 968E 77               ld (hl),a
 297+ 968F 2C               inc l
 298+ 9690 1C               inc e
 299+ 9691 1A               ld a,(de)
 300+ 9692 AE               xor (hl)
 301+ 9693 77               ld (hl),a
 302+ 9694 2C               inc l
 303+ 9695 1C               inc e
 304+ 9696 1A               ld a,(de)
 305+ 9697 AE               xor (hl)
 306+ 9698 77               ld (hl),a
 307+ 9699 13               inc de
 308+ 969A
 309+ 969A ED 73 25 8C      ld (Scanlines_album_SP),sp
 310+ 969E ED 7B 03 8C      ld sp,(Stack)
 311+ 96A2 C9               ret
 312+ 96A3
 313+ 96A3              Pinta_lento
 314+ 96A3
 315+ 96A3 E1           1 pop hl
 316+ 96A4
 317+ 96A4 1A               ld a,(de)
 318+ 96A5 AE               xor (hl)
 319+ 96A6 77               ld (hl),a
 320+ 96A7 2C               inc l
 321+ 96A8 1C               inc e
 322+ 96A9 1A               ld a,(de)
 323+ 96AA AE               xor (hl)
 324+ 96AB 77               ld (hl),a
 325+ 96AC 2C               inc l
 326+ 96AD 1C               inc e
 327+ 96AE 1A               ld a,(de)
 328+ 96AF AE               xor (hl)
 329+ 96B0 77               ld (hl),a
 330+ 96B1 13               inc de
 331+ 96B2
 332+ 96B2 10 EF            djnz 1B
 333+ 96B4
 334+ 96B4 ED 73 25 8C      ld (Scanlines_album_SP),sp
 335+ 96B8 ED 7B 03 8C      ld sp,(Stack)
 336+ 96BC C9               ret
# file closed: Pinta_Sprites.asm
2066  96BD              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96BD              ; ******************************************************************************************************************************************************************************************
   2+ 96BD              ;
   3+ 96BD              ; 26/06/23
   4+ 96BD              ;
   5+ 96BD              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96BD
   7+ 96BD              Draw
   8+ 96BD
   9+ 96BD CD 63 99     	call Prepara_draw
  10+ 96C0 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96C1 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96C2 28 05        	jr z,2F
  13+ 96C4
  14+ 96C4 3A D5 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96C7 18 0C        	jr 1F
  16+ 96C9
  17+ 96C9 2A D3 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96CC 22 C6 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96CF CD 5B 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96D2              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96D2
  22+ 96D2 CD 02 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96D5
  24+ 96D5 3A C3 8B     1 ld a,(Ctrl_0)
  25+ 96D8 CB 6F        	bit 5,a
  26+ 96DA 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96DC
  28+ 96DC CD F1 96     	call Comprueba_limite_horizontal
  29+ 96DF CD 81 97     	call Comprueba_limite_vertical
  30+ 96E2
  31+ 96E2              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96E2              ; -----------------------
  33+ 96E2              ; -----------------------
  34+ 96E2              ; -----------------------
  35+ 96E2
  36+ 96E2 CD D7 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96E5 CD 0E 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96E8
  39+ 96E8 3A C3 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96EB CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96ED 32 C3 8B     	ld (Ctrl_0),a
  42+ 96F0
  43+ 96F0 C9           	ret
  44+ 96F1
  45+ 96F1              ; *******************************************************************************************************************************************************************************************
  46+ 96F1              ;	21/01/23
  47+ 96F1              ;
  48+ 96F1              ; 	Comprueba_limite_horizontal.
  49+ 96F1              ;
  50+ 96F1              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 96F1              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 96F1              ;
  53+ 96F1              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 96F1              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 96F1              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 96F1              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 96F1
  58+ 96F1
  59+ 96F1
  60+ 96F1 3A C3 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 96F4 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 96F6 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 96F8 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 96FA 32 C3 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 96FD 18 09            jr 6F
  66+ 96FF CB 5F        1 bit 3,a
  67+ 9701 28 0A            jr z,2F
  68+ 9703 E6 F7            and $f7
  69+ 9705 32 C3 8B         ld (Ctrl_0),a
  70+ 9708 CD 5B 98     6 call Inicializacion
  71+ 970B 18 5B            jr 5F
  72+ 970D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 970E
  74+ 970E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 970E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 970E
  77+ 970E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 970F 2A D7 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9712 CD 57 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9715 67           	ld h,a
  81+ 9716 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9717 CD 57 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 971A 67           	ld h,a
  84+ 971B A7           	and a
  85+ 971C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 971E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 971F 3A D5 8B     	ld a,(Cuad_objeto)
  88+ 9722 FE 02        	cp 2
  89+ 9724 38 1E        	jr c,3F
  90+ 9726 28 1C        	jr z,3F
  91+ 9728 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9729 28 23            jr z,7F
  93+ 972B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 972D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 972F E1           	pop hl
  96+ 9730
  97+ 9730              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9730              ; _para indicar con E="2" en caso necesario.
  99+ 9730
 100+ 9730 E5               push hl
 101+ 9731 C5               push bc
 102+ 9732 CD 57 94     	call calcula_tercio
 103+ 9735 FE 01        	cp 1
 104+ 9737 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9739 CD 69 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 973C 28 26            jr z,9F
 107+ 973E 38 24            jr c,9F
 108+ 9740 1E 00        11 ld e,0
 109+ 9742 18 22            jr 8F
 110+ 9744 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9745 28 07        	jr z, 7F
 112+ 9747 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9749 1E 00         	ld e,0
 114+ 974B E1           	pop hl
 115+ 974C 18 04        	jr 4F
 116+ 974E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9750 18 15            jr 10F
 118+ 9752
 119+ 9752              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9752              ; _para indicar con E="2" en caso necesario.
 121+ 9752
 122+ 9752 E5           4 push hl
 123+ 9753 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9754 CD 57 94     	call calcula_tercio
 125+ 9757 FE 01        	cp 1
 126+ 9759 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 975B CD 69 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 975E 28 04            jr z,9F
 129+ 9760 30 02            jr nc,9F
 130+ 9762 18 02        	jr 8F
 131+ 9764 1E 02        9 ld e,2
 132+ 9766 C1           8 pop bc
 133+ 9767 E1           10 pop hl
 134+ 9768 C9           5 ret
 135+ 9769
 136+ 9769              ; --------------------
 137+ 9769              ;
 138+ 9769              ; 25/08/22
 139+ 9769
 140+ 9769 CD 57 94     Comprueba_centro call calcula_tercio
 141+ 976C 67               ld h,a
 142+ 976D 08           	ex af,af
 143+ 976E FE 02        	cp 2
 144+ 9770 38 07        	jr c,1F
 145+ 9772 28 05        	jr z,1F
 146+ 9774 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9777 18 03        	jr 2F
 148+ 9779 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 977C 08           2 ex af,af
 150+ 977D A7               and a
 151+ 977E ED 42            sbc hl,bc
 152+ 9780 C9               ret
 153+ 9781
 154+ 9781              ; *********************************************************************************************************************************************************************************************
 155+ 9781              ;
 156+ 9781              ;   16/8/22
 157+ 9781              ;
 158+ 9781              ;	Comprueba_limite_vertical
 159+ 9781              ;
 160+ 9781              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9781              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9781              ;
 163+ 9781
 164+ 9781 2A C6 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9784 7D           	ld a,l
 166+ 9785 E6 1F        	and $1F
 167+ 9787 57           	ld d,a
 168+ 9788 3A D9 8B     	ld a,(Limite_vertical)
 169+ 978B BA           	cp d 											; Límite - Posición.
 170+ 978C 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 978D 3A D5 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9790 CB 47        	bit 0,a
 173+ 9792 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9794
 175+ 9794              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9794
 177+ 9794 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9795 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9797
 180+ 9797              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9797              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9797
 183+ 9797 3A B7 8B         ld a,(Coordenada_X)
 184+ 979A 16 0F            ld d,Centro_izquierda
 185+ 979C A7               and a
 186+ 979D 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 979E 28 1E            jr z,3F
 188+ 97A0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97A2              ;                                                    ; _salimos sin modificar nada.
 190+ 97A2 18 0E            jr 2F
 191+ 97A4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97A5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97A7
 194+ 97A7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97A7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97A7
 197+ 97A7 3A B7 8B         ld a,(Coordenada_X)
 198+ 97AA 16 10            ld d,Centro_derecha
 199+ 97AC A7               and a
 200+ 97AD 92               sub d
 201+ 97AE 28 0E            jr z,3F
 202+ 97B0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97B2              ;                                                    ; _salimos sin modificar nada.
 204+ 97B2 CB 43        2 bit 0,e
 205+ 97B4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97B6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97B7 CD 4B 98         call Modificaccionne
 208+ 97BA C1           	pop bc
 209+ 97BB CD 5B 98         call Inicializacion
 210+ 97BE C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97BF
 212+ 97BF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97BF
 214+ 97BF C5           4 push bc
 215+ 97C0 01 C5 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97C3 0A           	ld a,(bc)
 217+ 97C4 3D           	dec a
 218+ 97C5 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97C6 7D           	ld a,l
 220+ 97C7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97C8 CB 47        	bit 0,a
 222+ 97CA 28 03        	jr z,5F
 223+ 97CC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97CD 18 2E        	jr 7F
 225+ 97CF
 226+ 97CF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97CF
 228+ 97CF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97D0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97D1 3A C3 8B     	ld a,(Ctrl_0)
 231+ 97D4 CB 4F        	bit 1,a
 232+ 97D6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97D8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97D9
 235+ 97D9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97D9
 237+ 97D9 1C               inc e
 238+ 97DA 1D               dec e
 239+ 97DB 20 07            jr nz,12F
 240+ 97DD 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97DE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97DF 22 C6 8B     	ld (Posicion_actual),hl
 243+ 97E2 18 44        13 jr 9F
 244+ 97E4 CB 43        12 bit 0,e
 245+ 97E6 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97E8              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97E8 C1           	pop bc
 248+ 97E9 18 D3        	jr 3B
 249+ 97EB 80           14 add b
 250+ 97EC 6F               ld l,a
 251+ 97ED 22 C6 8B     	ld (Posicion_actual),hl
 252+ 97F0 CD 4B 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 97F3 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 97F5 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 97F7 32 C3 8B         ld (Ctrl_0),a
 256+ 97FA F1           	pop af
 257+ 97FB 18 2B        	jr 9F
 258+ 97FD
 259+ 97FD              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 97FD
 261+ 97FD F5           7 push af
 262+ 97FE 3A C3 8B     	ld a,(Ctrl_0)
 263+ 9801 CB 47        	bit 0,a
 264+ 9803 20 1D        	jr nz,8F
 265+ 9805 F1           	pop af
 266+ 9806
 267+ 9806              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9806
 269+ 9806 1C           	inc e
 270+ 9807 1D               dec e
 271+ 9808 20 07            jr nz,10F
 272+ 980A 90           	sub b
 273+ 980B 6F               ld l,a
 274+ 980C 22 C6 8B     	ld (Posicion_actual),hl
 275+ 980F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9811              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9811 CB 43        10 bit 0,e
 278+ 9813 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9815              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9815 C1           	pop bc
 281+ 9816 18 A6        	jr 3B
 282+ 9818 90           16 sub b
 283+ 9819 6F               ld l,a
 284+ 981A 22 C6 8B     	ld (Posicion_actual),hl
 285+ 981D CD 4B 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9820 18 06            jr 9F
 287+ 9822 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9824 32 C3 8B         ld (Ctrl_0),a
 289+ 9827 F1           	pop af
 290+ 9828 C1           9 pop bc
 291+ 9829 1E 00        	ld e,0
 292+ 982B CD 5B 98         call Inicializacion
 293+ 982E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 982F 08           	ex af,af
 295+ 9830 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9831 18 8B            jr 3B
 297+ 9833
 298+ 9833              ; --------------------
 299+ 9833
 300+ 9833 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9835 CD 7E 99     1 call PreviousScan
 302+ 9838 10 FB            djnz 1B
 303+ 983A 22 C6 8B     	ld (Posicion_actual),hl
 304+ 983D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 983E C9           	ret
 306+ 983F
 307+ 983F              ; --------------------
 308+ 983F
 309+ 983F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9841 CD 6F 99     1 call NextScan
 311+ 9844 10 FB            djnz 1B
 312+ 9846 22 C6 8B     	ld (Posicion_actual),hl
 313+ 9849 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 984A C9           	ret
 315+ 984B
 316+ 984B              ; --------------------
 317+ 984B              ;
 318+ 984B              ;	22/01/23
 319+ 984B              ;
 320+ 984B              ;	E="1". Hemos cambiado de cuadrante.
 321+ 984B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 984B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 984B
 324+ 984B
 325+ 984B              Modificaccionne
 326+ 984B
 327+ 984B 3A D5 8B     	ld a,(Cuad_objeto)
 328+ 984E FE 02        	cp 2
 329+ 9850 CC 33 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9853 DC 33 98         call c,Modifica_Pos_actual
 331+ 9856 C8           	ret z
 332+ 9857 CD 3F 98         call Modifica_Pos_actual2
 333+ 985A C9               ret
 334+ 985B
 335+ 985B              ; *************************************************************************************************************************************************************************************************
 336+ 985B              ;
 337+ 985B              ;	13/8/22
 338+ 985B              ;
 339+ 985B              ;	Inicializacion
 340+ 985B              ;
 341+ 985B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 985B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 985B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 985B              ;
 345+ 985B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 985B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 985B              ;	_ desaparece/aparece.
 348+ 985B
 349+ 985B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 985B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 985B              ;
 352+ 985B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 985B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 985B              ; 		   [E] ="0"
 355+ 985B
 356+ 985B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 985B
 358+ 985B CD 57 94     Inicializacion call calcula_tercio
 359+ 985E 28 36        	jr z,primit
 360+ 9860 E6 02        	and 2
 361+ 9862 20 07        	jr nz,segmit
 362+ 9864 7D           	ld a,l
 363+ 9865 FE 7F        	cp $7f
 364+ 9867 38 2D        	jr c,primit
 365+ 9869 28 2B        	jr z,primit
 366+ 986B CD D1 98     segmit call column
 367+ 986E 38 13        	jr c,tercuad
 368+ 9870 3E 04        cuarcuad ld a,4
 369+ 9872 32 D5 8B     	ld (Cuad_objeto),a
 370+ 9875 21 20 48     	ld hl,$4820
 371+ 9878 22 D7 8B     	ld (Limite_horizontal),hl
 372+ 987B 21 D9 8B     	ld hl,Limite_vertical
 373+ 987E 36 0D        	ld (hl),$0d
 374+ 9880 08           	ex af,af
 375+ 9881 18 3C        	jr 1F
 376+ 9883              tercuad
 377+ 9883 3E 03        	ld a,3
 378+ 9885 32 D5 8B     	ld (Cuad_objeto),a
 379+ 9888 21 20 48     	ld hl,$4820
 380+ 988B 22 D7 8B     	ld (Limite_horizontal),hl
 381+ 988E 21 D9 8B     	ld hl,Limite_vertical
 382+ 9891 36 12        	ld (hl),$12
 383+ 9893 08           	ex af,af
 384+ 9894 18 29        	jr 1F
 385+ 9896 CD D1 98     primit call column
 386+ 9899 38 13        	jr c, primcuad
 387+ 989B              segcuad
 388+ 989B 3E 02        	ld a,2
 389+ 989D 32 D5 8B     	ld (Cuad_objeto),a
 390+ 98A0 21 C0 4F     	ld hl,$4fc0
 391+ 98A3 22 D7 8B     	ld (Limite_horizontal),hl
 392+ 98A6 21 D9 8B     	ld hl,Limite_vertical
 393+ 98A9 36 0D        	ld (hl),$0d
 394+ 98AB 08           	ex af,af
 395+ 98AC 18 11        	jr 1F
 396+ 98AE              primcuad
 397+ 98AE 3E 01        	ld a,1
 398+ 98B0 32 D5 8B     	ld (Cuad_objeto),a
 399+ 98B3 21 C0 4F     	ld hl,$4fc0
 400+ 98B6 22 D7 8B     	ld (Limite_horizontal),hl
 401+ 98B9 21 D9 8B     	ld hl,Limite_vertical
 402+ 98BC 36 12        	ld (hl),$12
 403+ 98BE 08           	ex af,af
 404+ 98BF
 405+ 98BF C5           1 push bc
 406+ 98C0 E5           	push hl
 407+ 98C1 D5           	push de
 408+ 98C2
 409+ 98C2 2A C6 8B     	ld hl,(Posicion_actual)
 410+ 98C5 CD 75 94     	call Genera_coordenadas
 411+ 98C8
 412+ 98C8 D1           	pop de
 413+ 98C9 E1           	pop hl
 414+ 98CA C1           	pop bc
 415+ 98CB
 416+ 98CB 21 C3 8B     	ld hl,Ctrl_0
 417+ 98CE CB EE        	set 5,(hl)
 418+ 98D0 C9           	ret
 419+ 98D1
 420+ 98D1              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98D1
 422+ 98D1              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98D1              ;
 424+ 98D1              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98D1
 426+ 98D1 7D           column ld a,l
 427+ 98D2 E6 1F        	and $1f
 428+ 98D4 FE 10         	cp $10
 429+ 98D6 C9            	ret
 430+ 98D7
 431+ 98D7              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98D7              ;
 433+ 98D7              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98D7              ;
 435+ 98D7              ; 14/12/22
 436+ 98D7              ;
 437+ 98D7              ;	Modifica: A y BC.
 438+ 98D7
 439+ 98D7 3A D5 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98DA E6 01        	and 1
 441+ 98DC 28 17        	jr z,1F
 442+ 98DE
 443+ 98DE              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98DE
 445+ 98DE 3A B7 8B     	ld a,(Coordenada_X)
 446+ 98E1 47           	ld b,a
 447+ 98E2 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98E3 79           	ld a,c
 449+ 98E4 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98E5 38 08        	jr c,2F
 451+ 98E7 47           	ld b,a
 452+ 98E8 79           	ld a,c
 453+ 98E9 90           	sub b
 454+ 98EA 32 D6 8B     	ld (Columnas),a
 455+ 98ED 18 1B        	jr 4F
 456+ 98EF 79           2 ld a,c
 457+ 98F0 32 D6 8B     	ld (Columnas),a
 458+ 98F3 18 15        	jr 4F
 459+ 98F5
 460+ 98F5              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 98F5
 462+ 98F5 3A B7 8B     1 ld a,(Coordenada_X)
 463+ 98F8 81           	add c
 464+ 98F9 3D           	dec a
 465+ 98FA D6 1F        	sub $1f
 466+ 98FC 38 08        	jr c,3F
 467+ 98FE 47           	ld b,a
 468+ 98FF 79           	ld a,c
 469+ 9900 90           	sub b
 470+ 9901 32 D6 8B     	ld (Columnas),a
 471+ 9904 18 04        	jr 4F
 472+ 9906 79           3 ld a,c
 473+ 9907 32 D6 8B     	ld (Columnas),a
 474+ 990A D9           4 exx
 475+ 990B 4F           	ld c,a
 476+ 990C D9           	exx
 477+ 990D C9            ret
 478+ 990E
 479+ 990E              ; --------------------------------------------------------------------------------------------------------------------
 480+ 990E              ;
 481+ 990E              ;   19/7/23
 482+ 990E              ;
 483+ 990E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 990E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 990E              ;
 486+ 990E              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 990E              ;			HL e IY Contienen (Puntero_objeto).
 488+ 990E              ;
 489+ 990E              ;	DESTRUYE: HL,B Y A.
 490+ 990E
 491+ 990E 3A D5 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9911 FE 02        	cp 2
 493+ 9913 38 18        	jr c,1F
 494+ 9915 28 16        	jr z,1F
 495+ 9917 E6 01        	and 1
 496+ 9919 28 0D        	jr z,3F
 497+ 991B
 498+ 991B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 991B
 500+ 991B CD 57 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 991E
 502+ 991E 7D           9 ld a,l
 503+ 991F E6 1F        	and $1f
 504+ 9921 28 2A        	jr z,7F
 505+ 9923 2B           	dec hl
 506+ 9924 10 F8        	djnz 9B
 507+ 9926 18 25        	jr 7F
 508+ 9928
 509+ 9928              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9928
 511+ 9928 2A C6 8B     3 ld hl,(Posicion_actual)
 512+ 992B 18 20        	jr 7F
 513+ 992D
 514+ 992D 28 14        1 jr z,2F
 515+ 992F
 516+ 992F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 992F
 518+ 992F CD 57 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9932
 520+ 9932 7D           4 ld a,l
 521+ 9933 E6 1F        	and $1f
 522+ 9935 28 03        	jr z,6F
 523+ 9937 2B           	dec hl
 524+ 9938 10 F8        	djnz 4B
 525+ 993A 06 0F        6 ld b,15
 526+ 993C CD 7E 99     5 call PreviousScan
 527+ 993F 10 FB        	djnz 5B
 528+ 9941 18 0A        	jr 7F
 529+ 9943
 530+ 9943              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9943
 532+ 9943 CD 57 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9946 06 0F        	ld b,15
 534+ 9948 CD 7E 99     8 call PreviousScan
 535+ 994B 10 FB        	djnz 8B
 536+ 994D
 537+ 994D E5           7 push hl
 538+ 994E DD E1        	pop ix
 539+ 9950
 540+ 9950 2A C8 8B     	ld hl,(Puntero_objeto)
 541+ 9953 E5           	push hl
 542+ 9954 FD E1        	pop iy
 543+ 9956
 544+ 9956 C9           	ret
 545+ 9957
 546+ 9957              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9957              ;
 548+ 9957              ;	2/1/23
 549+ 9957              ;
 550+ 9957              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9957              ;
 552+ 9957              ;	Tras esta rutina tenemos:
 553+ 9957              ;
 554+ 9957              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9957              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9957              ;
 557+ 9957              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9957
 559+ 9957 2A C6 8B     Operandos ld hl,(Posicion_actual)
 560+ 995A 3A D6 8B     	ld a,(Columnas)
 561+ 995D 3D           	dec a
 562+ 995E 20 01        	jr nz,1F
 563+ 9960 3C           	inc a
 564+ 9961 47           1 ld b,a
 565+ 9962 C9           	ret
 566+ 9963
 567+ 9963              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9963              ;
 569+ 9963              ;	Prepara_draw
 570+ 9963              ;
 571+ 9963              ;	Es una rutina de carga.
 572+ 9963              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9963              ;
 574+ 9963              ;	FUNCIONAMIENTO:
 575+ 9963              ;
 576+ 9963              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9963              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9963              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9963              ;
 580+ 9963              ;	DESTRUYE:
 581+ 9963              ;
 582+ 9963              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9963
 584+ 9963 21 C4 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9966 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9967 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9968 4E           	ld c,(hl)
 588+ 9969 2A C6 8B     	ld hl,(Posicion_actual)
 589+ 996C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 996E C9           	ret
 591+ 996F
 592+ 996F              ;----------------------------------------------------------------------------------------------------------------
 593+ 996F              ;
 594+ 996F              ;	5/08/22
 595+ 996F              ;
 596+ 996F              ;   NextScan.
 597+ 996F              ;
 598+ 996F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 996F              ;
 600+ 996F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 996F              ;
 602+ 996F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 996F              ;
 604+ 996F              ;       DESTRUIDOS: AF y HL !!!
 605+ 996F              ;
 606+ 996F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 996F              ;
 608+ 996F
 609+ 996F 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9970 7C               ld a,h
 611+ 9971 E6 07            and 7
 612+ 9973 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9974
 614+ 9974 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9975 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9977 6F               ld l,a
 617+ 9978 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9979
 619+ 9979 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 997A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 997C 67               ld h,a
 622+ 997D C9               ret
 623+ 997E
 624+ 997E              ;----------------------------------------------------------------------------------------------------------------
 625+ 997E              ;
 626+ 997E              ;	5/08/22
 627+ 997E              ;
 628+ 997E              ;   PreviousScan.
 629+ 997E              ;
 630+ 997E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 997E              ;
 632+ 997E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 997E              ;
 634+ 997E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 997E              ;
 636+ 997E              ;       DESTRUIDOS: AF y HL !!!
 637+ 997E              ;
 638+ 997E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 997E              ;
 640+ 997E
 641+ 997E 7C           PreviousScan ld a,h
 642+ 997F 25               dec h               ; Dec H.
 643+ 9980 E6 07            and 7
 644+ 9982 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9983
 646+ 9983 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9984 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9986 6F               ld l,a
 649+ 9987 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9988
 651+ 9988 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9989 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 998B 67               ld h,a
 654+ 998C C9               ret
 655+ 998D
 656+ 998D
 657+ 998D
 658+ 998D
 659+ 998D
 660+ 998D
 661+ 998D
 662+ 998D
 663+ 998D
 664+ 998D
 665+ 998D
 666+ 998D
# file closed: Draw_XOR.asm
2067  998D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 998D
   2+ 998D              ; ******************************************************************************************************************************************************************************************
   3+ 998D              ;
   4+ 998D              ;   20/05/23
   5+ 998D              ;
   6+ 998D              ;	Recompone_posicion_inicio
   7+ 998D              ;
   8+ 998D              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 998D              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 998D              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 998D              ;	_ a una u otra rutina.
  12+ 998D
  13+ 998D              Recompone_posicion_inicio
  14+ 998D
  15+ 998D 2A D3 8B     	ld hl,(Posicion_inicio)
  16+ 9990 7D           	ld a,l
  17+ 9991 E6 1F        	and $1f
  18+ 9993 28 16        	jr z,1F
  19+ 9995
  20+ 9995 FE 1F        	cp $1f
  21+ 9997 28 0D        	jr z,3F
  22+ 9999
  23+ 9999 21 C2 8B     	ld hl,Ctrl_2
  24+ 999C CB C6        	set 0,(hl)
  25+ 999E 2A C8 8B     	ld hl,(Puntero_objeto)
  26+ 99A1 22 F4 8B     	ld (Repone_puntero_objeto),hl
  27+ 99A4 18 08        	jr 2F
  28+ 99A6
  29+ 99A6 CD 54 9B     3 call Mov_left
  30+ 99A9 18 03        	jr 2F
  31+ 99AB
  32+ 99AB CD 31 9A     1 call Mov_right
  33+ 99AE 21 80 F8     2 ld hl,Sprite_vacio
  34+ 99B1 22 C8 8B     	ld (Puntero_objeto),hl
  35+ 99B4 C9           	ret
  36+ 99B5
  37+ 99B5              ; ******************************************************************************************************************************************************************************************
  38+ 99B5              ;
  39+ 99B5              ;   27/05/23
  40+ 99B5              ;
  41+ 99B5              ;	Mov_down
  42+ 99B5              ;
  43+ 99B5              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99B5              ;
  45+ 99B5              ;
  46+ 99B5              Mov_down
  47+ 99B5
  48+ 99B5 CD 1F 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99B8              ;																	; _ repone (Puntero_objeto).
  50+ 99B8 21 C3 8B     	ld hl,Ctrl_0
  51+ 99BB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99BD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99BD              ; 																	; _ en el caso de que no lo haya.
  54+ 99BD 3A DE 8B     	ld a,(Vel_down)
  55+ 99C0 47           	ld b,a
  56+ 99C1 2A C6 8B         ld hl,(Posicion_actual)
  57+ 99C4 CD 57 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99C7 E6 02        	and 2
  59+ 99C9 28 17        	jr z,1F
  60+ 99CB
  61+ 99CB              ; Nos encontramos en el último tercio de pantalla.
  62+ 99CB              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99CB
  64+ 99CB 7C           	ld a,h
  65+ 99CC FE 57        	cp $57
  66+ 99CE 20 12        	jr nz,1F
  67+ 99D0
  68+ 99D0 7D           	ld a,l
  69+ 99D1 C6 20        	add $20
  70+ 99D3 30 0D        	jr nc,1F
  71+ 99D5
  72+ 99D5              ; ------------------------------
  73+ 99D5              ;
  74+ 99D5              ;	12/01/24
  75+ 99D5
  76+ 99D5              ;	call Reaparece_arriba
  77+ 99D5 CD E1 9C     	call Reinicio
  78+ 99D8
  79+ 99D8              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99D8
  81+ 99D8 3A 2B 8C     	ld a,(Ctrl_3)
  82+ 99DB CB CF        	set 1,a
  83+ 99DD 32 2B 8C     	ld (Ctrl_3),a
  84+ 99E0
  85+ 99E0 18 08        	jr 3F
  86+ 99E2              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99E2              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99E2              ; ------------------------------
  89+ 99E2
  90+ 99E2 CD 6F 99     1 call NextScan
  91+ 99E5 22 C6 8B     	ld (Posicion_actual),hl
  92+ 99E8 10 DA            djnz 2B
  93+ 99EA CD 75 94     3 call Genera_coordenadas
  94+ 99ED C9           	ret
  95+ 99EE
  96+ 99EE              ; ******************************************************************************************************************************************************************************************
  97+ 99EE              ;
  98+ 99EE              ;   27/05/23
  99+ 99EE              ;
 100+ 99EE              ;	Mov_up
 101+ 99EE              ;
 102+ 99EE              ; 	Mueve el Sprite hacia arriba.
 103+ 99EE              ;
 104+ 99EE              ;
 105+ 99EE              Mov_up
 106+ 99EE
 107+ 99EE CD 1F 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 99F1              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 99F1 21 C3 8B     	ld hl,Ctrl_0
 110+ 99F4 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 99F6              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 99F6              ; 																		; _ en el caso de que no lo haya.
 113+ 99F6 3A DD 8B     	ld a,(Vel_up)
 114+ 99F9 47           	ld b,a
 115+ 99FA 2A C6 8B     	ld hl,(Posicion_actual)
 116+ 99FD CD 57 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A00 A7           	and a
 118+ 9A01 20 10        	jr nz,1F
 119+ 9A03
 120+ 9A03              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A03              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A03
 123+ 9A03 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A04 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A06 20 0B            jr nz,1F
 126+ 9A08 7D               ld a,l
 127+ 9A09 D6 20            sub $20
 128+ 9A0B 30 06            jr nc,1F
 129+ 9A0D 25               dec h
 130+ 9A0E
 131+ 9A0E              ; -----------------------------
 132+ 9A0E CD C2 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A11              ;	call Reinicio
 134+ 9A11              ; -----------------------------
 135+ 9A11
 136+ 9A11 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A13 CD 7E 99     1 call PreviousScan
 138+ 9A16 22 C6 8B     	ld (Posicion_actual),hl
 139+ 9A19 10 E2            djnz 3B
 140+ 9A1B CD 75 94     2 call Genera_coordenadas
 141+ 9A1E C9           	ret
 142+ 9A1F
 143+ 9A1F              ; -----------------------------
 144+ 9A1F              ;
 145+ 9A1F              ;	27/5/23
 146+ 9A1F              ;
 147+ 9A1F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A1F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A1F              ;
 150+ 9A1F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A1F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A1F              ;
 153+ 9A1F              ;	Modifica: A y (Puntero_objeto).
 154+ 9A1F
 155+ 9A1F 3A C2 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A22 CB 47        	bit 0,a
 157+ 9A24 C8           	ret z
 158+ 9A25 CB 87        	res 0,a
 159+ 9A27 32 C2 8B     	ld (Ctrl_2),a
 160+ 9A2A 2A F4 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A2D 22 C8 8B     	ld (Puntero_objeto),hl
 162+ 9A30 C9           	ret
 163+ 9A31
 164+ 9A31              ; ******************************************************************************************************************************************************************************************
 165+ 9A31              ;
 166+ 9A31              ;	19/10/22
 167+ 9A31              ;
 168+ 9A31              ;	Mov_right.
 169+ 9A31              ;
 170+ 9A31              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A31              ;
 172+ 9A31
 173+ 9A31 3A C3 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A34 CB 77        	bit 6,a
 175+ 9A36 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A38
 177+ 9A38 CD 70 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A3B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A3C
 180+ 9A3C 21 C3 8B     	ld hl,Ctrl_0
 181+ 9A3F CB E6        	set 4,(hl)
 182+ 9A41 18 52        	jr 8F
 183+ 9A43
 184+ 9A43 21 C3 8B     10 ld hl,Ctrl_0
 185+ 9A46 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A48              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A48              ; 																	; _ en el caso de que no lo haya.
 188+ 9A48 3A B7 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A4B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A4D 20 46        	jr nz,8F
 191+ 9A4F
 192+ 9A4F 3A CA 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A52 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A53 28 40        	jr z,8F
 195+ 9A55
 196+ 9A55              ; ---------- ---------- ----------
 197+ 9A55              ;
 198+ 9A55              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A55
 200+ 9A55 3A DC 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A58 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A5A 28 11        	jr z,1F
 203+ 9A5C 38 06        	jr c,6F
 204+ 9A5E FE 04        	cp 4
 205+ 9A60 28 14        	jr z,7F
 206+ 9A62 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A64
 208+ 9A64              ; ---------- ---------- ----------
 209+ 9A64              ;
 210+ 9A64              ; Perfiles de velocidad
 211+ 9A64              ;
 212+ 9A64
 213+ 9A64 3A CA 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A67 FE FE        	cp $fe
 215+ 9A69 20 2A        	jr nz,8F
 216+ 9A6B 18 10        	jr 3F
 217+ 9A6D 3A CA 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A70 FE FD        	cp $fd
 219+ 9A72 20 21        	jr nz,8F
 220+ 9A74 18 07        	jr 3F
 221+ 9A76 3A CA 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A79 FE FB        	cp $fb
 223+ 9A7B 20 18        	jr nz,8F
 224+ 9A7D
 225+ 9A7D              ; ---------- ---------- ----------
 226+ 9A7D
 227+ 9A7D              3
 228+ 9A7D CD B0 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A80              ;	call Reinicio
 230+ 9A80
 231+ 9A80              ; ---------- ---------- ----------
 232+ 9A80              ;
 233+ 9A80              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A80
 235+ 9A80 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A82 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A83 CD 9C 9A     	call DESPLZ_DER
 238+ 9A86 C1           	pop bc
 239+ 9A87 10 F9        	djnz 5B
 240+ 9A89 2A C6 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A8C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A8D 22 C6 8B     	ld (Posicion_actual),hl
 243+ 9A90 CD 75 94     	call Genera_coordenadas
 244+ 9A93 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9A95
 246+ 9A95              ; ---------- ---------- ----------
 247+ 9A95
 248+ 9A95 2A C6 8B     8 ld hl,(Posicion_actual)
 249+ 9A98 CD 9C 9A     	call DESPLZ_DER
 250+ 9A9B C9           2 ret
 251+ 9A9C
 252+ 9A9C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9A9C              ;
 254+ 9A9C              ;	22/9/22
 255+ 9A9C              ;
 256+ 9A9C
 257+ 9A9C CD AB 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9A9F CD F7 9A         call modifica_parametros_1er_DESPLZ_2
 259+ 9AA2 CD 20 9B         call Ciclo_completo
 260+ 9AA5 21 C3 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AA8 CB FE        	set 7,(hl)
 262+ 9AAA C9           	ret
 263+ 9AAB
 264+ 9AAB              ; ******************************************************************************************************************************************************************************************
 265+ 9AAB              ;	15/02/23
 266+ 9AAB              ;
 267+ 9AAB
 268+ 9AAB 3A DC 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AAE 47           	ld b,a
 270+ 9AAF 2A CF 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AB2 23           1 inc hl
 272+ 9AB3 23           	inc hl
 273+ 9AB4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AB6 22 CF 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AB9 CD B4 90     	call Extrae_address
 276+ 9ABC 22 C8 8B     	ld (Puntero_objeto),hl
 277+ 9ABF
 278+ 9ABF              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9ABF
 280+ 9ABF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9ABF              ; Cuántos movimientos hemos hecho ??
 282+ 9ABF              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9ABF
 284+ 9ABF 2A CB 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AC2 EB           	ex de,hl
 286+ 9AC3 A7           	and a
 287+ 9AC4 ED 52        	sbc hl,de
 288+ 9AC6 CB 3D        	srl l
 289+ 9AC8 3E 08        6 ld a,8
 290+ 9ACA 95           	sub l
 291+ 9ACB 30 1E        	jr nc,3F
 292+ 9ACD
 293+ 9ACD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9ACD              ; B="0".
 295+ 9ACD
 296+ 9ACD 04           4 inc b
 297+ 9ACE 3C           	inc a
 298+ 9ACF 20 FC        	jr nz,4B
 299+ 9AD1 78           	ld a,b
 300+ 9AD2 08           	ex af,af
 301+ 9AD3 2A CB 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AD6 23           5 inc hl
 303+ 9AD7 23           	inc hl
 304+ 9AD8 10 FC        	djnz 5B
 305+ 9ADA 22 CF 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9ADD CD B4 90     	call Extrae_address
 307+ 9AE0 22 C8 8B     	ld (Puntero_objeto),hl
 308+ 9AE3
 309+ 9AE3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AE3              ; _(Posicion_actual).
 311+ 9AE3
 312+ 9AE3 21 C6 8B     	ld hl,Posicion_actual
 313+ 9AE6 34           	inc (hl)
 314+ 9AE7 08               ex af,af
 315+ 9AE8 6F           	ld l,a
 316+ 9AE9 18 DD        	jr 6B
 317+ 9AEB
 318+ 9AEB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9AEB
 320+ 9AEB 47           3 ld b,a
 321+ 9AEC 2A CD 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9AEF 23           2 inc hl
 323+ 9AF0 23           	inc hl
 324+ 9AF1 10 FC        	djnz 2B
 325+ 9AF3 22 D1 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9AF6 C9           8 ret
 327+ 9AF7
 328+ 9AF7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9AF7              ;
 330+ 9AF7              ;	24/7/22
 331+ 9AF7              ;
 332+ 9AF7              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9AF7              ;
 334+ 9AF7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9AF7              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9AF7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9AF7
 338+ 9AF7 3A CA 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9AFA A7           	and a
 340+ 9AFB 20 1F        	jr nz,1F
 341+ 9AFD D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9AFF 32 CA 8B         ld (CTRL_DESPLZ),a
 343+ 9B02
 344+ 9B02 21 C5 8B     	ld hl,Columns
 345+ 9B05 34           	inc (hl)
 346+ 9B06 3A D5 8B     	ld a,(Cuad_objeto)
 347+ 9B09 E6 01        	and 1
 348+ 9B0B 28 0F        	jr z,1F
 349+ 9B0D 2A C6 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B10 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B11 22 C6 8B     	ld (Posicion_actual),hl
 352+ 9B14 CD 75 94     	call Genera_coordenadas
 353+ 9B17 CD 7C 9C     	call Inc_CTRL_DESPLZ
 354+ 9B1A 18 03        	jr 2F
 355+ 9B1C CD 7C 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B1F C9           2 ret
 357+ 9B20
 358+ 9B20              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B20              ;
 360+ 9B20              ;	24/7/22
 361+ 9B20              ;
 362+ 9B20              ;	Ciclo_completo.
 363+ 9B20              ;
 364+ 9B20              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B20              ;
 366+ 9B20              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B20              ; 	Decrementamos (Columns).
 368+ 9B20              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B20              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B20
 371+ 9B20
 372+ 9B20 3A CA 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B23 FE FF        	cp $ff
 374+ 9B25 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B27 E6 F0        	and $f0
 376+ 9B29 20 28        	jr nz,3F
 377+ 9B2B
 378+ 9B2B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B2B
 380+ 9B2B 3A CA 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B2E 47           	ld b,a
 382+ 9B2F 3E F8        	ld a,$f8
 383+ 9B31 80           	add b
 384+ 9B32 32 CA 8B     	ld (CTRL_DESPLZ),a
 385+ 9B35 18 1C        	jr 3F
 386+ 9B37 21 C5 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B3A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B3B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B3C 32 CA 8B     	ld (CTRL_DESPLZ),a
 390+ 9B3F 3A D5 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B42 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B44 20 0A        	jr nz,2F
 393+ 9B46 2A C6 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B49 23           	inc hl
 395+ 9B4A 22 C6 8B     	ld (Posicion_actual),hl
 396+ 9B4D CD 75 94     	call Genera_coordenadas
 397+ 9B50
 398+ 9B50              ; Inicia el puntero de Sprite.
 399+ 9B50
 400+ 9B50 CD C9 90     2 call Inicia_puntero_objeto_der
 401+ 9B53 C9           3 ret
 402+ 9B54
 403+ 9B54              ; ******************************************************************************************************************************************************************************************
 404+ 9B54              ;
 405+ 9B54              ;	15/02/23
 406+ 9B54              ;
 407+ 9B54              ;	Mov_left.
 408+ 9B54              ;
 409+ 9B54              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B54              ;
 411+ 9B54              Mov_left
 412+ 9B54
 413+ 9B54 21 C3 8B     	ld hl,Ctrl_0
 414+ 9B57 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B59              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B59              ; 																	; _ en el caso de que no lo haya.
 417+ 9B59 3A C3 8B     	ld a,(Ctrl_0)
 418+ 9B5C CB 77        	bit 6,a
 419+ 9B5E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B60
 421+ 9B60 CD 76 9C     	call Stop_Amadeus_left
 422+ 9B63 C8           	ret z
 423+ 9B64 20 4A        	jr nz,8F
 424+ 9B66
 425+ 9B66 3A B7 8B     11 ld a,(Coordenada_X)
 426+ 9B69 A7           	and a
 427+ 9B6A 20 44        	jr nz,8F
 428+ 9B6C
 429+ 9B6C 3A CA 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B6F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B70 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B72
 433+ 9B72              ; ---------- ---------- ----------
 434+ 9B72
 435+ 9B72 3A DB 8B     	ld a,(Vel_left)
 436+ 9B75 FE 02        	cp 2
 437+ 9B77 28 0F        	jr z,1F
 438+ 9B79 38 04        	jr c,6F
 439+ 9B7B FE 04        	cp 4
 440+ 9B7D 28 12        	jr z,7F
 441+ 9B7F
 442+ 9B7F              ; ---------- ---------- ----------
 443+ 9B7F
 444+ 9B7F 3A CA 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B82 FE F8        	cp $f8
 446+ 9B84 20 2A        	jr nz,8F
 447+ 9B86 18 10        	jr 4F
 448+ 9B88 3A CA 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9B8B FE F9        	cp $f9
 450+ 9B8D 20 21        	jr nz,8F
 451+ 9B8F 18 07        	jr 4F
 452+ 9B91 3A CA 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9B94 FE FB        	cp $fb
 454+ 9B96 20 18        	jr nz,8F
 455+ 9B98
 456+ 9B98              ; ---------- ---------- ----------
 457+ 9B98
 458+ 9B98              4
 459+ 9B98 CD 9E 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9B9B              ;	call Reinicio
 461+ 9B9B
 462+ 9B9B              ; ---------- ---------- ----------
 463+ 9B9B
 464+ 9B9B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9B9D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9B9E
 467+ 9B9E              ;	ld hl,(Indice_Sprite_izq)
 468+ 9B9E              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9B9E
 470+ 9B9E CD B7 9B     	call DESPLZ_IZQ
 471+ 9BA1 C1           	pop bc
 472+ 9BA2 10 F9        	djnz 5B
 473+ 9BA4 2A C6 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BA7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BA8 22 C6 8B     	ld (Posicion_actual),hl
 476+ 9BAB CD 75 94     	call Genera_coordenadas
 477+ 9BAE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BB0
 479+ 9BB0              ; ---------- ---------- ----------
 480+ 9BB0
 481+ 9BB0              ; Movemos, no hay recolocación.
 482+ 9BB0
 483+ 9BB0 2A C6 8B     8 ld hl,(Posicion_actual)
 484+ 9BB3 CD B7 9B     	call DESPLZ_IZQ
 485+ 9BB6 C9           2 ret
 486+ 9BB7
 487+ 9BB7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BB7              ;
 489+ 9BB7              ;	22/9/22
 490+ 9BB7
 491+ 9BB7              DESPLZ_IZQ
 492+ 9BB7
 493+ 9BB7 CD C6 9B     	call Desplaza_izquierda
 494+ 9BBA CD 12 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BBD CD 3A 9C     	call Ciclo_completo_2
 496+ 9BC0 21 C3 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BC3 CB BE        	res 7,(hl)
 498+ 9BC5 C9           	ret
 499+ 9BC6
 500+ 9BC6              Desplaza_izquierda
 501+ 9BC6
 502+ 9BC6 3A DB 8B     	ld a,(Vel_left)
 503+ 9BC9 47           	ld b,a
 504+ 9BCA 2A D1 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BCD 23           1 inc hl
 506+ 9BCE 23           	inc hl
 507+ 9BCF 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BD1 22 D1 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BD4 CD B4 90     	call Extrae_address
 510+ 9BD7 22 C8 8B     	ld (Puntero_objeto),hl
 511+ 9BDA
 512+ 9BDA              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BDA
 514+ 9BDA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BDA              ; Cuántos movimientos hemos hecho ??
 516+ 9BDA              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BDA
 518+ 9BDA 2A CD 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BDD EB           	ex de,hl
 520+ 9BDE A7           	and a
 521+ 9BDF ED 52        	sbc hl,de
 522+ 9BE1 CB 3D        	srl l
 523+ 9BE3 3E 08        6 ld a,8
 524+ 9BE5 95           	sub l
 525+ 9BE6 30 1E        	jr nc,3F
 526+ 9BE8
 527+ 9BE8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BE8              ; B="0".
 529+ 9BE8
 530+ 9BE8 04           4 inc b
 531+ 9BE9 3C           	inc a
 532+ 9BEA 20 FC        	jr nz,4B
 533+ 9BEC 78           	ld a,b
 534+ 9BED 08           	ex af,af
 535+ 9BEE 2A CD 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9BF1 23           5 inc hl
 537+ 9BF2 23           	inc hl
 538+ 9BF3 10 FC        	djnz 5B
 539+ 9BF5 22 D1 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9BF8 CD B4 90     	call Extrae_address
 541+ 9BFB 22 C8 8B     	ld (Puntero_objeto),hl
 542+ 9BFE
 543+ 9BFE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9BFE              ; _(Posicion_actual).
 545+ 9BFE
 546+ 9BFE 21 C6 8B     	ld hl,Posicion_actual
 547+ 9C01 35           	dec (hl)
 548+ 9C02 08           	ex af,af
 549+ 9C03 6F           	ld l,a
 550+ 9C04 18 DD        	jr 6B
 551+ 9C06
 552+ 9C06              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C06
 554+ 9C06 47           3 ld b,a
 555+ 9C07 2A CB 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C0A 23           2 inc hl
 557+ 9C0B 23           	inc hl
 558+ 9C0C 10 FC        	djnz 2B
 559+ 9C0E 22 CF 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C11 C9           8 ret
 561+ 9C12
 562+ 9C12              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C12              ;
 564+ 9C12              ;	modifica_parametros_1er_DESPLZ
 565+ 9C12              ;
 566+ 9C12              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C12              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C12              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C12
 570+ 9C12 3A CA 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C15 A7           	and a
 572+ 9C16 20 1E        	jr nz,1F
 573+ 9C18 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C19 32 CA 8B         ld (CTRL_DESPLZ),a
 575+ 9C1C 21 C5 8B     	ld hl,Columns
 576+ 9C1F 34           	inc (hl)
 577+ 9C20 3A D5 8B     	ld a,(Cuad_objeto)
 578+ 9C23 E6 01        	and 1
 579+ 9C25 20 0F        	jr nz,1F
 580+ 9C27 2A C6 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C2A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C2B 22 C6 8B     	ld (Posicion_actual),hl
 583+ 9C2E CD 75 94     	call Genera_coordenadas
 584+ 9C31 CD 8D 9C     	call Dec_CTRL_DESPLZ
 585+ 9C34 18 03        	jr 2F
 586+ 9C36 CD 8D 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C39 C9           2 ret
 588+ 9C3A
 589+ 9C3A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C3A
 591+ 9C3A 3A CA 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C3D FE F7        	cp $f7
 593+ 9C3F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C41 30 2C        	jr nc,3F
 595+ 9C43
 596+ 9C43              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C43
 598+ 9C43 06 00        	ld b,0
 599+ 9C45 04           4 inc b
 600+ 9C46 3C           	inc a
 601+ 9C47 FE F7        	cp $f7
 602+ 9C49 20 FA        	jr nz,4B
 603+ 9C4B 3E FF        	ld a,$ff
 604+ 9C4D 90           	sub b
 605+ 9C4E 32 CA 8B     	ld (CTRL_DESPLZ),a
 606+ 9C51 18 1C        	jr 3F
 607+ 9C53
 608+ 9C53              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C53
 610+ 9C53 21 C5 8B     1 ld hl,Columns
 611+ 9C56 35           	dec (hl)
 612+ 9C57 AF           	xor a
 613+ 9C58 32 CA 8B     	ld (CTRL_DESPLZ),a
 614+ 9C5B 3A D5 8B     	ld a,(Cuad_objeto)
 615+ 9C5E E6 01        	and 1
 616+ 9C60 28 0A        	jr z,2F
 617+ 9C62 2A C6 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C65 2B           	dec hl
 619+ 9C66 22 C6 8B     	ld (Posicion_actual),hl
 620+ 9C69 CD 75 94     	call Genera_coordenadas
 621+ 9C6C
 622+ 9C6C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C6C
 624+ 9C6C CD DC 90     2 call Inicia_puntero_objeto_izq
 625+ 9C6F C9           3 ret
 626+ 9C70
 627+ 9C70              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C70              ;
 629+ 9C70              ;	19/10/22
 630+ 9C70              ;
 631+ 9C70              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C70              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C70
 634+ 9C70 3A B7 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C73 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C75 C9           	ret
 637+ 9C76
 638+ 9C76              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C76              ;
 640+ 9C76              ;	19/10/22
 641+ 9C76              ;
 642+ 9C76              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C76              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C76
 645+ 9C76 3A B7 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C79 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C7B C9           	ret
 648+ 9C7C
 649+ 9C7C              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C7C              ;
 651+ 9C7C              ;	24/7/22
 652+ 9C7C              ;
 653+ 9C7C              ;	Inc_CTRL_DESPLZ
 654+ 9C7C              ;
 655+ 9C7C              ;
 656+ 9C7C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C7C
 658+ 9C7C 21 CA 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C7F 3A DC 8B     	ld a,(Vel_right)
 660+ 9C82 A7           	and a
 661+ 9C83 28 06        	jr z,1F
 662+ 9C85 47           	ld b,a
 663+ 9C86 34           3 inc (hl)
 664+ 9C87 10 FD        	djnz 3B
 665+ 9C89 18 01        	jr 2F
 666+ 9C8B 34           1 inc (hl)
 667+ 9C8C C9           2 ret
 668+ 9C8D
 669+ 9C8D              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C8D              ;
 671+ 9C8D              ;	5/2/23
 672+ 9C8D              ;
 673+ 9C8D              ;	Dec_CTRL_DESPLZ
 674+ 9C8D              ;
 675+ 9C8D              ;
 676+ 9C8D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C8D
 678+ 9C8D 21 CA 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9C90 3A DB 8B     	ld a,(Vel_left)
 680+ 9C93 A7           	and a
 681+ 9C94 28 06        	jr z,1F
 682+ 9C96 47           	ld b,a
 683+ 9C97 35           3 dec (hl)
 684+ 9C98 10 FD        	djnz 3B
 685+ 9C9A 18 01        	jr 2F
 686+ 9C9C 35           1 dec (hl)
 687+ 9C9D C9           2 ret
 688+ 9C9E
 689+ 9C9E              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9C9E
 691+ 9C9E 2A C6 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CA1 01 1F 00     	ld bc,31
 693+ 9CA4 A7           	and a
 694+ 9CA5 ED 4A        	adc hl,bc
 695+ 9CA7 22 C6 8B     	ld (Posicion_actual),hl
 696+ 9CAA 21 C3 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CAD CB C6        	set 0,(hl)
 698+ 9CAF C9           	ret
 699+ 9CB0
 700+ 9CB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CB0
 702+ 9CB0 2A C6 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CB3 01 1F 00     	ld bc,31
 704+ 9CB6 A7           	and a
 705+ 9CB7 ED 42        	sbc hl,bc
 706+ 9CB9 22 C6 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CBC 21 C3 8B     	ld hl,Ctrl_0
 708+ 9CBF CB CE        	set 1,(hl)
 709+ 9CC1 C9           	ret
 710+ 9CC2
 711+ 9CC2              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CC2
 713+ 9CC2 24           Reaparece_abajo inc h
 714+ 9CC3 01 E0 17     	ld bc,$17e0
 715+ 9CC6 A7           	and a
 716+ 9CC7 ED 4A        	adc hl,bc
 717+ 9CC9 22 C6 8B     	ld (Posicion_actual),hl
 718+ 9CCC 21 C3 8B     	ld hl,Ctrl_0
 719+ 9CCF CB D6        	set 2,(hl)
 720+ 9CD1 C9           	ret
 721+ 9CD2
 722+ 9CD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CD2
 724+ 9CD2 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CD5 A7           	and a
 726+ 9CD6 ED 42        	sbc hl,bc
 727+ 9CD8 22 C6 8B     	ld (Posicion_actual),hl
 728+ 9CDB 21 C3 8B     	ld hl,Ctrl_0
 729+ 9CDE CB DE        	set 3,(hl)
 730+ 9CE0 C9           	ret
 731+ 9CE1
 732+ 9CE1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CE1              ;
 734+ 9CE1              ;	15/07/23
 735+ 9CE1
 736+ 9CE1              Reinicio
 737+ 9CE1
 738+ 9CE1              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CE1
 740+ 9CE1 AF           	xor a
 741+ 9CE2 21 EB 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CE5 CD 03 9D     	call Limpia_contenido_hl
 743+ 9CE8
 744+ 9CE8 21 C6 8B     	ld hl,Posicion_actual
 745+ 9CEB CD 03 9D     	call Limpia_contenido_hl
 746+ 9CEE
 747+ 9CEE CD E2 92     	call Situa_Puntero_indice_mov
 748+ 9CF1 CD 02 9E     	call Inicia_Puntero_mov
 749+ 9CF4
 750+ 9CF4 21 ED 8B     	ld hl,Incrementa_puntero
 751+ 9CF7 06 05        	ld b,5
 752+ 9CF9 77           1 ld (hl),a
 753+ 9CFA 23           	inc hl
 754+ 9CFB 10 FC        	djnz 1B
 755+ 9CFD
 756+ 9CFD 21 C2 8B     	ld hl,Ctrl_2
 757+ 9D00 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D02
 759+ 9D02 C9           	ret
 760+ 9D03
 761+ 9D03 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D04 23           	inc hl
 763+ 9D05 77           	ld (hl),a
 764+ 9D06 C9           	ret
 765+ 9D07
 766+ 9D07              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D07              ;
 768+ 9D07              ;	18/6/24
 769+ 9D07              ;
 770+ 9D07
 771+ 9D07              Amadeus_a_izquierda
 772+ 9D07
 773+ 9D07              ;	Actualiza contador de movimientos.
 774+ 9D07
 775+ 9D07 21 7C 89     	ld hl,Comm_Amadeus
 776+ 9D0A 35           	dec (hl)
 777+ 9D0B 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D0D
 779+ 9D0D 2A 7A 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D10 2B           	dec hl
 781+ 9D11 2B           	dec hl
 782+ 9D12 2B           	dec hl
 783+ 9D13 2B           	dec hl
 784+ 9D14 22 7A 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D17
 786+ 9D17 21 2B 8C     	ld hl,Ctrl_3
 787+ 9D1A CB EE        	set 5,(hl)
 788+ 9D1C
 789+ 9D1C C9           	ret
 790+ 9D1D
 791+ 9D1D 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D1E C9           	ret
 793+ 9D1F
 794+ 9D1F
 795+ 9D1F              Amadeus_a_derecha
 796+ 9D1F
 797+ 9D1F              ;	Actualiza contador de movimientos.
 798+ 9D1F
 799+ 9D1F 21 7C 89     	ld hl,Comm_Amadeus
 800+ 9D22 34           	inc (hl)
 801+ 9D23 3E 7A        	ld a,$7a
 802+ 9D25 BE           	cp (hl)
 803+ 9D26 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D28
 805+ 9D28 2A 7A 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D2B 23           	inc hl
 807+ 9D2C 23           	inc hl
 808+ 9D2D 23           	inc hl
 809+ 9D2E 23           	inc hl
 810+ 9D2F 22 7A 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D32
 812+ 9D32 21 2B 8C     	ld hl,Ctrl_3
 813+ 9D35 CB EE        	set 5,(hl)
 814+ 9D37 C9           	ret
 815+ 9D38
 816+ 9D38 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D39 C9           	ret
# file closed: Direcciones.asm
2068  9D3A              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D3A              ; ----- ----- ----- ----- -----
   2+ 9D3A              ;
   3+ 9D3A              ;   28/12/23
   4+ 9D3A
   5+ 9D3A              Movimiento
   6+ 9D3A
   7+ 9D3A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D3A
   9+ 9D3A 3A C2 8B         ld a,(Ctrl_2)
  10+ 9D3D CB 57            bit 2,a
  11+ 9D3F 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D41
  13+ 9D41 2A E9 8B         ld hl,(Puntero_mov)
  14+ 9D44 7E               ld a,(hl)
  15+ 9D45
  16+ 9D45              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D45
  18+ 9D45              Inicia_desplazamiento.
  19+ 9D45
  20+ 9D45              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D45
  22+ 9D45 CD 38 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D48
  24+ 9D48              ; Iniciamos (Repetimos_mov).
  25+ 9D48
  26+ 9D48 7E               ld a,(hl)
  27+ 9D49 E6 0F            and $0f
  28+ 9D4B 32 EF 8B         ld (Repetimos_desplazamiento),a
  29+ 9D4E 32 F0 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D51
  31+ 9D51              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D51
  33+ 9D51 23               inc hl
  34+ 9D52 7E               ld a,(hl)
  35+ 9D53 32 F2 8B         ld (Cola_de_desplazamiento),a
  36+ 9D56 2B               dec hl
  37+ 9D57
  38+ 9D57 21 C2 8B         ld hl,Ctrl_2
  39+ 9D5A CB D6            set 2,(hl)
  40+ 9D5C
  41+ 9D5C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D5C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D5C
  44+ 9D5C              Desplazamiento_iniciado
  45+ 9D5C
  46+ 9D5C CD 0C 9E         call Aplica_desplazamiento
  47+ 9D5F
  48+ 9D5F              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D5F
  50+ 9D5F 3A 2B 8C         ld a,(Ctrl_3)
  51+ 9D62 CB 4F            bit 1,a
  52+ 9D64 C0               ret nz
  53+ 9D65
  54+ 9D65 21 EF 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D68 35               dec (hl)
  56+ 9D69 C0               ret nz
  57+ 9D6A
  58+ 9D6A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D6A              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D6A              ; Analiza (Cola_de_desplazamiento).
  61+ 9D6A
  62+ 9D6A 3A F2 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D6D A7               and a
  64+ 9D6E CC 61 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D71 28 30            jr z,Reinicia_el_movimiento
  66+ 9D73
  67+ 9D73 FE FF            cp $ff
  68+ 9D75 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D77
  70+ 9D77 FE FE            cp $fe
  71+ 9D79 CC E6 9D         call z,Fijamos_bucle
  72+ 9D7C 28 25            jr z,Reinicia_el_movimiento
  73+ 9D7E
  74+ 9D7E FE FD            cp $fd
  75+ 9D80 20 11            jr nz,1F
  76+ 9D82
  77+ 9D82              ; ---
  78+ 9D82              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D82
  80+ 9D82 3A C2 8B         ld a,(Ctrl_2)
  81+ 9D85 CB 5F            bit 3,a
  82+ 9D87 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D89
  84+ 9D89              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D89
  86+ 9D89 21 C2 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D8C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D8E
  89+ 9D8E CD F7 9D         call Inicia_Repetimos_movimiento
  90+ 9D91 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9D93              ; ---
  92+ 9D93
  93+ 9D93 FE 01        1 cp 1
  94+ 9D95 CA D0 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9D98
  96+ 9D98 3D               dec a
  97+ 9D99 32 F2 8B         ld (Cola_de_desplazamiento),a
  98+ 9D9C
  99+ 9D9C 3A F0 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9D9F 32 EF 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DA2              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DA2 C9               ret
 103+ 9DA3
 104+ 9DA3              Reinicia_el_movimiento
 105+ 9DA3
 106+ 9DA3 3A C2 8B         ld a,(Ctrl_2)
 107+ 9DA6 CB 5F            bit 3,a
 108+ 9DA8 28 1B            jr z,2F
 109+ 9DAA
 110+ 9DAA              ; (Cola_de_desplazamiento)="254".
 111+ 9DAA
 112+ 9DAA 21 F1 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DAD 35               dec (hl)
 114+ 9DAE 20 15            jr nz,2F
 115+ 9DB0
 116+ 9DB0              ; Fin de las repeticiones del último movimiento.
 117+ 9DB0
 118+ 9DB0 21 C2 8B         ld hl,Ctrl_2
 119+ 9DB3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DB5
 121+ 9DB5 2A E9 8B         ld hl,(Puntero_mov)
 122+ 9DB8 23               inc hl
 123+ 9DB9 23               inc hl
 124+ 9DBA 23               inc hl
 125+ 9DBB 22 E9 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DBE              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DBE 7E               ld a,(hl)
 128+ 9DBF 32 F2 8B         ld (Cola_de_desplazamiento),a
 129+ 9DC2
 130+ 9DC2 C3 6A 9D         jp Cola
 131+ 9DC5
 132+ 9DC5 CD 02 9E     2 call Inicia_Puntero_mov
 133+ 9DC8
 134+ 9DC8 21 C2 8B         ld hl,Ctrl_2
 135+ 9DCB CB 96            res 2,(hl)
 136+ 9DCD
 137+ 9DCD C3 3A 9D         jp Movimiento
 138+ 9DD0
 139+ 9DD0              Siguiente_desplazamiento
 140+ 9DD0
 141+ 9DD0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DD0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DD0
 144+ 9DD0 21 C2 8B         ld hl,Ctrl_2
 145+ 9DD3 CB 96            res 2,(hl)
 146+ 9DD5
 147+ 9DD5 2A E9 8B         ld hl,(Puntero_mov)
 148+ 9DD8 23               inc hl
 149+ 9DD9 23               inc hl
 150+ 9DDA 22 E9 8B         ld (Puntero_mov),hl
 151+ 9DDD
 152+ 9DDD 7E               ld a,(hl)
 153+ 9DDE A7               and a
 154+ 9DDF CC 61 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DE2 CA A3 9D         jp z,Reinicia_el_movimiento
 156+ 9DE5
 157+ 9DE5 C9               ret
 158+ 9DE6
 159+ 9DE6              ; Subrutinas -----------------------------------------
 160+ 9DE6              ; ---------- --------- --------- ---------- ----------
 161+ 9DE6              ;
 162+ 9DE6              ;   24/07/23
 163+ 9DE6              ;
 164+ 9DE6              ;   Fijamos_bucle
 165+ 9DE6              ;
 166+ 9DE6              ;
 167+ 9DE6
 168+ 9DE6              Fijamos_bucle
 169+ 9DE6
 170+ 9DE6 3A ED 8B         ld a,(Incrementa_puntero)
 171+ 9DE9 3C               inc a
 172+ 9DEA 32 EE 8B         ld (Incrementa_puntero_backup),a
 173+ 9DED
 174+ 9DED CD 61 9E         call Incrementa_Puntero_indice_mov
 175+ 9DF0 2A E7 8B         ld hl,(Puntero_indice_mov)
 176+ 9DF3 22 EB 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9DF6 C9               ret
 178+ 9DF7
 179+ 9DF7              ; ---------- --------- --------- ---------- ----------
 180+ 9DF7              ;
 181+ 9DF7              ;   07/7/23
 182+ 9DF7              ;
 183+ 9DF7              ;   Inicia_Repetimos_movimiento
 184+ 9DF7              ;
 185+ 9DF7              ;
 186+ 9DF7
 187+ 9DF7              Inicia_Repetimos_movimiento
 188+ 9DF7
 189+ 9DF7              ; Iniciamos (Repetimos_movimiento).
 190+ 9DF7
 191+ 9DF7 DD 2A E9 8B      ld ix,(Puntero_mov)
 192+ 9DFB DD 7E 02         ld a,(ix+2)
 193+ 9DFE 32 F1 8B         ld (Repetimos_movimiento),a
 194+ 9E01
 195+ 9E01 C9               ret
 196+ 9E02
 197+ 9E02              ; ---------- --------- --------- ---------- ----------
 198+ 9E02              ;
 199+ 9E02              ;   26/6/23
 200+ 9E02              ;
 201+ 9E02              ;   Inicia_Puntero_mov
 202+ 9E02              ;
 203+ 9E02              ;
 204+ 9E02
 205+ 9E02 2A E7 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E05 CD B4 90         call Extrae_address
 207+ 9E08 22 E9 8B         ld (Puntero_mov),hl
 208+ 9E0B C9               ret
 209+ 9E0C
 210+ 9E0C              ; ---------- --------- --------- ---------- ----------
 211+ 9E0C              ;
 212+ 9E0C              ;   27/06/23
 213+ 9E0C              ;
 214+ 9E0C              ;   Aplica_movimiento.
 215+ 9E0C
 216+ 9E0C              Aplica_desplazamiento
 217+ 9E0C
 218+ 9E0C              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E0C
 220+ 9E0C 2A E9 8B         ld hl, (Puntero_mov)
 221+ 9E0F
 222+ 9E0F 7E               ld a,(hl)
 223+ 9E10 E6 F0            and $f0
 224+ 9E12 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E13
 226+ 9E13 CB 7E            bit 7,(hl)
 227+ 9E15 28 03            jr z,1F
 228+ 9E17 CD EE 99         call Mov_up
 229+ 9E1A 2A E9 8B     1 ld hl, (Puntero_mov)
 230+ 9E1D CB 76            bit 6,(hl)
 231+ 9E1F 28 03            jr z,2F
 232+ 9E21 CD B5 99         call Mov_down
 233+ 9E24
 234+ 9E24              ; Se ha aplicado reinicio ???
 235+ 9E24              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E24
 237+ 9E24              ;    ld a,(Ctrl_3)
 238+ 9E24              ;    bit 1,a
 239+ 9E24              ;    ret nz
 240+ 9E24
 241+ 9E24 2A E9 8B     2 ld hl, (Puntero_mov)
 242+ 9E27 CB 6E            bit 5,(hl)
 243+ 9E29 28 03            jr z,3F
 244+ 9E2B CD 54 9B         call Mov_left
 245+ 9E2E 2A E9 8B     3 ld hl, (Puntero_mov)
 246+ 9E31 CB 66            bit 4,(hl)
 247+ 9E33 C8               ret z
 248+ 9E34 CD 31 9A         call Mov_right
 249+ 9E37 C9               ret
 250+ 9E38
 251+ 9E38              ; ---------- --------- --------- ---------- ----------
 252+ 9E38              ;
 253+ 9E38              ;   26/06/23
 254+ 9E38              ;
 255+ 9E38              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E38
 257+ 9E38              Ajusta_velocidad_desplazamiento
 258+ 9E38
 259+ 9E38              ; 1er byte de la cadena de movimiento.
 260+ 9E38              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E38
 262+ 9E38 CD 56 9E         call Extrae_nibble_alto
 263+ 9E3B
 264+ 9E3B 32 DD 8B         ld (Vel_up),a
 265+ 9E3E 79               ld a,c
 266+ 9E3F E6 0F            and $0f
 267+ 9E41 32 DE 8B         ld (Vel_down),a
 268+ 9E44
 269+ 9E44              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E44              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E44
 272+ 9E44 23               inc hl
 273+ 9E45 CD 56 9E         call Extrae_nibble_alto
 274+ 9E48
 275+ 9E48 32 DB 8B         ld (Vel_left),a
 276+ 9E4B 79               ld a,c
 277+ 9E4C E6 0F            and $0f
 278+ 9E4E 32 DC 8B         ld (Vel_right),a
 279+ 9E51
 280+ 9E51              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E51
 282+ 9E51 23               inc hl
 283+ 9E52 22 E9 8B         ld (Puntero_mov),hl
 284+ 9E55 C9               ret
 285+ 9E56
 286+ 9E56 06 04        Extrae_nibble_alto ld b,4
 287+ 9E58 7E               ld a,(hl)
 288+ 9E59 4F               ld c,a
 289+ 9E5A E6 F0            and $f0
 290+ 9E5C CB 3F        1 srl a
 291+ 9E5E 10 FC            djnz 1B
 292+ 9E60 C9               ret
 293+ 9E61
 294+ 9E61              ; ---------- --------- --------- ---------- ----------
 295+ 9E61              ;
 296+ 9E61              ;   5/7/23
 297+ 9E61              ;
 298+ 9E61              ;   Incrementa_Puntero_indice_mov
 299+ 9E61
 300+ 9E61              Incrementa_Puntero_indice_mov
 301+ 9E61
 302+ 9E61 21 ED 8B         ld hl,Incrementa_puntero
 303+ 9E64 34               inc (hl)
 304+ 9E65
 305+ 9E65 2A E7 8B         ld hl,(Puntero_indice_mov)
 306+ 9E68 01 02 00         ld bc,2
 307+ 9E6B A7               and a
 308+ 9E6C 09               add hl,bc
 309+ 9E6D 22 E7 8B         ld (Puntero_indice_mov),hl
 310+ 9E70
 311+ 9E70 7E               ld a,(hl)
 312+ 9E71 A7               and a
 313+ 9E72
 314+ 9E72              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E72
 316+ 9E72              ;    jr z,$
 317+ 9E72
 318+ 9E72              ;! Reinicia el Patrón de movimiento.
 319+ 9E72
 320+ 9E72 CC 77 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E75
 322+ 9E75 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E76
 324+ 9E76 C9               ret
 325+ 9E77
 326+ 9E77              ; ---------- --------- --------- ---------- ----------
 327+ 9E77              ;
 328+ 9E77              ;   15/01/24
 329+ 9E77              ;
 330+ 9E77              ;   Inicializa_Puntero_indice_mov
 331+ 9E77
 332+ 9E77              Inicializa_Puntero_indice_mov_2
 333+ 9E77
 334+ 9E77              ; Existe etiqueta de bucle principal???
 335+ 9E77
 336+ 9E77 2A EB 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E7A 24               inc h
 338+ 9E7B 25               dec h
 339+ 9E7C 28 05            jr z,2F
 340+ 9E7E
 341+ 9E7E 22 E7 8B         ld (Puntero_indice_mov),hl
 342+ 9E81 18 14            jr 3F
 343+ 9E83
 344+ 9E83              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E83
 346+ 9E83 3A ED 8B     2 ld a,(Incrementa_puntero)
 347+ 9E86 47               ld b,a
 348+ 9E87
 349+ 9E87 2A E7 8B         ld hl,(Puntero_indice_mov)
 350+ 9E8A 2B           1 dec hl
 351+ 9E8B 2B               dec hl
 352+ 9E8C 10 FC            djnz 1B
 353+ 9E8E 22 E7 8B         ld (Puntero_indice_mov),hl
 354+ 9E91
 355+ 9E91 AF               xor a
 356+ 9E92 32 ED 8B         ld (Incrementa_puntero),a
 357+ 9E95 18 06            jr 4F
 358+ 9E97
 359+ 9E97 3A EE 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9E9A 32 ED 8B         ld (Incrementa_puntero),a
 361+ 9E9D C9           4 ret
 362+ 9E9E
 363+ 9E9E              ; ----------------------------------------------------------------------
 364+ 9E9E              ;
 365+ 9E9E              ;   30/01/24
 366+ 9E9E              ;
 367+ 9E9E              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9E9E
 369+ 9E9E 3A B6 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EA1 CD EF 93         call Calcula_salto_en_BC
 371+ 9EA4 21 DF 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EA7 A7               and a
 373+ 9EA8 ED 4A            adc hl,bc
 374+ 9EAA C9               ret
 375+ 9EAB
 376+ 9EAB              ; ----------------------------------------------------------------------
 377+ 9EAB              ;
 378+ 9EAB              ;   30/01/24
 379+ 9EAB              ;
 380+ 9EAB              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EAB              ;
 382+ 9EAB              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EAB
 384+ 9EAB 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EAC 23               inc hl
 386+ 9EAD 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EAE 69               ld l,c
 388+ 9EAF 60               ld h,b
 389+ 9EB0 22 BF 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EB3 C9               ret
 391+ 9EB4
# file closed: Movimiento.asm
2069  9EB4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EB4              ; --------------------------------------------------------------------------------------
   2+ 9EB4              ;
   3+ 9EB4              ;   25/10/24
   4+ 9EB4              ;
   5+ 9EB4
   6+ 9EB4              Pinta_disparos_Entidades
   7+ 9EB4
   8+ 9EB4 ED 73 03 8C      ld (Stack),sp
   9+ 9EB8 ED 7B 15 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9EBC
  11+ 9EBC 3E 02            ld a,2
  12+ 9EBE 08               ex af,af
  13+ 9EBF
  14+ 9EBF 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9EC1              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9EC1              ;                                     _ No encontraría "0".
  17+ 9EC1 FD E1        4 pop iy
  18+ 9EC3 D1               pop de                          ; 1er .db IYL
  19+ 9EC4              ;                                   ; 2º  .db IYH
  20+ 9EC4              ;                                   ; 3er .db E.
  21+ 9EC4              ;   Album vacío ???
  22+ 9EC4
  23+ 9EC4 FD 7D            ld a,iyl
  24+ 9EC6 FD 84            add iyh
  25+ 9EC8 83               add e
  26+ 9EC9 28 1F            jr z,1F
  27+ 9ECB
  28+ 9ECB              ;   Imprime album, (contiene datos).
  29+ 9ECB
  30+ 9ECB 3B               dec sp
  31+ 9ECC
  32+ 9ECC E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9ECD
  34+ 9ECD              ; Imprime el 1er scanline del disparo.
  35+ 9ECD
  36+ 9ECD FD 7D            ld a,iyl
  37+ 9ECF AE               xor (hl)
  38+ 9ED0 77               ld (hl),a
  39+ 9ED1
  40+ 9ED1 2C               inc l
  41+ 9ED2
  42+ 9ED2 FD 7C            ld a,iyh
  43+ 9ED4 AE               xor (hl)
  44+ 9ED5 77               ld (hl),a
  45+ 9ED6
  46+ 9ED6 2C               inc l
  47+ 9ED7
  48+ 9ED7 7B               ld a,e
  49+ 9ED8 AE               xor (hl)
  50+ 9ED9 77               ld (hl),a
  51+ 9EDA
  52+ 9EDA              ; Imprime el 2º scanline del disparo.
  53+ 9EDA
  54+ 9EDA E1               pop hl
  55+ 9EDB
  56+ 9EDB FD 7D            ld a,iyl
  57+ 9EDD AE               xor (hl)
  58+ 9EDE 77               ld (hl),a
  59+ 9EDF
  60+ 9EDF 2C               inc l
  61+ 9EE0
  62+ 9EE0 FD 7C            ld a,iyh
  63+ 9EE2 AE               xor (hl)
  64+ 9EE3 77               ld (hl),a
  65+ 9EE4
  66+ 9EE4 2C               inc l
  67+ 9EE5
  68+ 9EE5 7B               ld a,e
  69+ 9EE6 AE               xor (hl)
  70+ 9EE7 77               ld (hl),a
  71+ 9EE8
  72+ 9EE8 10 D7            djnz 4B
  73+ 9EEA
  74+ 9EEA 08           1 ex af,af
  75+ 9EEB 3D               dec a
  76+ 9EEC 20 05            jr nz,2F
  77+ 9EEE
  78+ 9EEE ED 7B 03 8C      ld sp,(Stack)
  79+ 9EF2 C9               ret
  80+ 9EF3
  81+ 9EF3 ED 7B 13 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9EF7 08               ex af,af
  83+ 9EF8 18 C5            jr 3B
  84+ 9EFA
  85+ 9EFA              ; --------------------------------------------------------------------------------------
  86+ 9EFA              ;
  87+ 9EFA              ;   30/10/24
  88+ 9EFA              ;
  89+ 9EFA
  90+ 9EFA              Motor_de_disparos_entidades
  91+ 9EFA
  92+ 9EFA 3A 1B 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9EFD FE 07            cp 7
  94+ 9EFF C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F00
  96+ 9F00 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F02 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F05
  99+ 9F05 CD B4 90     1 call Extrae_address
 100+ 9F08 1C               inc e
 101+ 9F09 1C               inc e
 102+ 9F0A ED 53 2E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F0E
 104+ 9F0E               ; Caja vacía ???
 105+ 9F0E
 106+ 9F0E 2D               dec l
 107+ 9F0F 7E               ld a,(hl)
 108+ 9F10 A7               and a
 109+ 9F11 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F13
 111+ 9F13              ; --- Trabajamos con caja:
 112+ 9F13
 113+ 9F13 2C               inc l
 114+ 9F14
 115+ 9F14              ; --- Existe posibilidad de impacto ???
 116+ 9F14
 117+ 9F14 CB 46            bit 0,(hl)
 118+ 9F16 C4 56 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F19 20 37            jr nz,3F
 120+ 9F1B
 121+ 9F1B CD DD 9F         call Rota_disparo_si_procede
 122+ 9F1E
 123+ 9F1E              ; ------------------------------------------------------------
 124+ 9F1E
 125+ 9F1E 2D               dec l
 126+ 9F1F 2D               dec l
 127+ 9F20
 128+ 9F20 CD B4 90         call Extrae_address
 129+ 9F23
 130+ 9F23              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F23              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F23
 133+ 9F23 3A 2D 8C         ld a,(Ctrl_5)
 134+ 9F26 CB 57            bit 2,a
 135+ 9F28 28 09            jr z,4F
 136+ 9F2A
 137+ 9F2A CB 97            res 2,a
 138+ 9F2C 32 2D 8C         ld (Ctrl_5),a
 139+ 9F2F 2C               inc l
 140+ 9F30 2C               inc l
 141+ 9F31 18 0C            jr 5F
 142+ 9F33
 143+ 9F33 CB 5F        4 bit 3,a
 144+ 9F35 28 08            jr z,5F
 145+ 9F37
 146+ 9F37 CB 9F            res 3,a
 147+ 9F39 32 2D 8C         ld (Ctrl_5),a
 148+ 9F3C 2D               dec l
 149+ 9F3D 2D               dec l
 150+ 9F3E 2D               dec l
 151+ 9F3F
 152+ 9F3F              ; ---------------------------------------------------------------------
 153+ 9F3F
 154+ 9F3F              ;! Velocidad del disparo de entidades.
 155+ 9F3F
 156+ 9F3F CD 6F 99     5 call NextScan
 157+ 9F42 CD 6F 99         call NextScan
 158+ 9F45
 159+ 9F45              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9F45
 161+ 9F45 CD BA 9F         call Fin_de_disparo_de_entidad
 162+ 9F48
 163+ 9F48 EB               ex de,hl
 164+ 9F49
 165+ 9F49 73               ld (hl),e
 166+ 9F4A 23               inc hl
 167+ 9F4B 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9F4C
 169+ 9F4C 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9F4F 18 02            jr 2F
 171+ 9F51
 172+ 9F51 C9               ret
 173+ 9F52
 174+ 9F52 EB           3 ex de,hl
 175+ 9F53 10 B0        2 djnz 1B
 176+ 9F55
 177+ 9F55 C9               ret
 178+ 9F56
 179+ 9F56              ; ------------- ------------- ------------
 180+ 9F56              ;
 181+ 9F56              ;   1/11/24
 182+ 9F56
 183+ 9F56              Comprueba_impacto_con_Amadeus
 184+ 9F56
 185+ 9F56              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9F56              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9F56
 188+ 9F56              ;   Modificamos registros, así que guardamos ...
 189+ 9F56
 190+ 9F56 C5               push bc
 191+ 9F57 E5               push hl
 192+ 9F58 D5               push de
 193+ 9F59
 194+ 9F59 2D               dec l
 195+ 9F5A 2D               dec l
 196+ 9F5B
 197+ 9F5B CD B4 90         call Extrae_address
 198+ 9F5E
 199+ 9F5E 3A 74 89         ld a,(CX_Amadeus)
 200+ 9F61 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9F62
 202+ 9F62 7D               ld a,l
 203+ 9F63 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9F65
 205+ 9F65 06 03            ld b,3
 206+ 9F67
 207+ 9F67 B9           1 cp c
 208+ 9F68 28 15            jr z,Coincidencia
 209+ 9F6A 0C               inc c
 210+ 9F6B 10 FA            djnz 1B
 211+ 9F6D
 212+ 9F6D 0D               dec c
 213+ 9F6E 0D               dec c
 214+ 9F6F 0D               dec c
 215+ 9F70
 216+ 9F70 3C               inc a
 217+ 9F71 B9               cp c
 218+ 9F72 28 0B            jr z,Coincidencia
 219+ 9F74
 220+ 9F74 3C               inc a
 221+ 9F75 B9               cp c
 222+ 9F76 28 07            jr z,Coincidencia
 223+ 9F78
 224+ 9F78 D1           2 pop de
 225+ 9F79 E1               pop hl
 226+ 9F7A C1               pop bc
 227+ 9F7B
 228+ 9F7B              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9F7B
 230+ 9F7B CB 86            res 0,(hl)
 231+ 9F7D AF               xor a                       ; Z before RET.
 232+ 9F7E C9               ret
 233+ 9F7F
 234+ 9F7F              Coincidencia
 235+ 9F7F
 236+ 9F7F              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9F7F              ;   Existe posibilidad de impacto.
 238+ 9F7F              ;   Vamos a averiguarlo ...
 239+ 9F7F
 240+ 9F7F 1D               dec e
 241+ 9F80 1D               dec e
 242+ 9F81 1D               dec e
 243+ 9F82
 244+ 9F82              ; DE en Puntero_objeto del disparo.
 245+ 9F82              ; HL en Puntero_de_impresión del disparo.
 246+ 9F82
 247+ 9F82              ; Comparador:
 248+ 9F82
 249+ 9F82 06 03            ld b,3
 250+ 9F84
 251+ 9F84 1A           3 ld a,(de)
 252+ 9F85 4F               ld c,a
 253+ 9F86 A6               and (hl)
 254+ 9F87 B9               cp c
 255+ 9F88 20 06            jr nz,Amadeus_impactado
 256+ 9F8A
 257+ 9F8A 2C               inc l
 258+ 9F8B 1C               inc e
 259+ 9F8C
 260+ 9F8C 10 F6            djnz 3B
 261+ 9F8E
 262+ 9F8E 18 E8            jr 2B
 263+ 9F90
 264+ 9F90              Amadeus_impactado
 265+ 9F90
 266+ 9F90              ; Borramos disparo.
 267+ 9F90
 268+ 9F90 D1               pop de
 269+ 9F91 E1               pop hl
 270+ 9F92
 271+ 9F92 E5               push hl
 272+ 9F93 D5               push de
 273+ 9F94
 274+ 9F94 CD 48 A0         call Borra_6_bytes
 275+ 9F97
 276+ 9F97 21 1B 8C         ld hl,Numero_de_disparos_de_entidades
 277+ 9F9A 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ 9F9B
 279+ 9F9B              ; Iniciamos el proceso de explosión de Amadeus.
 280+ 9F9B
 281+ 9F9B 21 77 89         ld hl,Impacto_Amadeus
 282+ 9F9E 36 01            ld (hl),1
 283+ 9FA0
 284+ 9FA0              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ 9FA0              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ 9FA0
 287+ 9FA0 3A 78 89         ld a,(p.imp.amadeus)
 288+ 9FA3 FE DE            cp $de
 289+ 9FA5 20 04            jr nz,1F
 290+ 9FA7
 291+ 9FA7 3D               dec a
 292+ 9FA8 32 78 89         ld (p.imp.amadeus),a
 293+ 9FAB
 294+ 9FAB              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ 9FAB
 296+ 9FAB 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ 9FAE 21 7A 89         ld hl,Pamm_Amadeus
 298+ 9FB1
 299+ 9FB1 73               ld (hl),e
 300+ 9FB2 23               inc hl
 301+ 9FB3 72               ld (hl),d
 302+ 9FB4
 303+ 9FB4 D1               pop de
 304+ 9FB5 E1               pop hl
 305+ 9FB6 C1               pop bc
 306+ 9FB7
 307+ 9FB7 AF               xor a
 308+ 9FB8 3C               inc a               ; NZ before RET.
 309+ 9FB9 C9               ret
 310+ 9FBA
 311+ 9FBA              ; ------------- ------------- ------------
 312+ 9FBA              ;
 313+ 9FBA              ;   31/10/24
 314+ 9FBA
 315+ 9FBA              Fin_de_disparo_de_entidad
 316+ 9FBA
 317+ 9FBA              ; Estamos en zona de Amadeus ??
 318+ 9FBA
 319+ 9FBA 7C               ld a,h
 320+ 9FBB FE 54            cp $54
 321+ 9FBD 38 0D            jr c,1F
 322+ 9FBF
 323+ 9FBF D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ 9FC0
 325+ 9FC0 5D               ld e,l
 326+ 9FC1 54               ld d,h
 327+ 9FC2
 328+ 9FC2 21 E0 57         ld hl,$57e0
 329+ 9FC5 ED 52            sbc hl,de
 330+ 9FC7
 331+ 9FC7 38 6F            jr c,Elimina_disparo_entidad
 332+ 9FC9
 333+ 9FC9 6B               ld l,e
 334+ 9FCA 62               ld h,d
 335+ 9FCB
 336+ 9FCB D1               pop de
 337+ 9FCC
 338+ 9FCC 7C           1 ld a,h
 339+ 9FCD FE 50            cp $50
 340+ 9FCF D8               ret c
 341+ 9FD0
 342+ 9FD0 7D               ld a,l
 343+ 9FD1 FE C0            cp $c0
 344+ 9FD3 D8               ret c
 345+ 9FD4
 346+ 9FD4              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ 9FD4              ; Así podremos comprobar si hay colisión más adelante.
 348+ 9FD4
 349+ 9FD4 1C               inc e
 350+ 9FD5 1C               inc e
 351+ 9FD6
 352+ 9FD6 EB               ex de,hl
 353+ 9FD7 CB C6            set 0,(hl)
 354+ 9FD9 EB               ex de,hl
 355+ 9FDA
 356+ 9FDA 1D               dec e
 357+ 9FDB 1D               dec e
 358+ 9FDC
 359+ 9FDC C9               ret
 360+ 9FDD
 361+ 9FDD              ; ----------------------------------------------------------
 362+ 9FDD              ;
 363+ 9FDD              ;   08/10/24
 364+ 9FDD
 365+ 9FDD              ;   Estructura de un disparo de entidades.
 366+ 9FDD
 367+ 9FDD              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ 9FDD              ; 	defw 0											; Puntero de impresión.
 369+ 9FDD              ;	defw 0											; Control.
 370+ 9FDD
 371+ 9FDD              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ 9FDD              ;   _de la entidad en el momento de disparar.
 373+ 9FDD
 374+ 9FDD              ;   El byte alto muestra la siguiente información:
 375+ 9FDD              ;
 376+ 9FDD              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ 9FDD              ;                        _antes de desplazarse a derecha/izquierda.
 378+ 9FDD              ;
 379+ 9FDD              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ 9FDD              ;
 381+ 9FDD              ;                        10xx ..... Izquierda.
 382+ 9FDD              ;                        01xx ..... Derecha.
 383+ 9FDD              ;                        00xx ..... Recto.
 384+ 9FDD
 385+ 9FDD              Rota_disparo_si_procede
 386+ 9FDD
 387+ 9FDD              ;   Nos situamos en el byte alto de (Control).
 388+ 9FDD
 389+ 9FDD CB 76            bit 6,(hl)
 390+ 9FDF 20 2D            jr nz,Rota_a_derecha
 391+ 9FE1 CB 7E            bit 7,(hl)
 392+ 9FE3 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ 9FE4
 394+ 9FE4              Rota_a_izq
 395+ 9FE4
 396+ 9FE4 E5               push hl
 397+ 9FE5
 398+ 9FE5 7D               ld a,l
 399+ 9FE6 D6 05            sub 5
 400+ 9FE8 6F               ld l,a
 401+ 9FE9
 402+ 9FE9 E5               push hl
 403+ 9FEA FD E1            pop iy
 404+ 9FEC
 405+ 9FEC A7               and a
 406+ 9FED
 407+ 9FED FD CB 02 16      rl (iy+02)
 408+ 9FF1 FD CB 01 16      rl (iy+01)
 409+ 9FF5 FD CB 00 16      rl (iy+00)
 410+ 9FF9
 411+ 9FF9 30 3B            jr nc,Exit
 412+ 9FFB
 413+ 9FFB              ; Desplazamiento completo hasta Carry.
 414+ 9FFB              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ 9FFB
 416+ 9FFB FD 36 02 03      ld (iy+02),$03
 417+ 9FFF FD 36 01 00      ld (iy+01),$00
 418+ A003 FD 36 00 00      ld (iy+00),$00
 419+ A007
 420+ A007 21 2D 8C         ld hl,Ctrl_5
 421+ A00A CB DE            set 3,(hl)
 422+ A00C
 423+ A00C 18 28            jr Exit
 424+ A00E
 425+ A00E              Rota_a_derecha
 426+ A00E
 427+ A00E E5               push hl
 428+ A00F
 429+ A00F 7D               ld a,l
 430+ A010 D6 05            sub 5
 431+ A012 6F               ld l,a
 432+ A013
 433+ A013 E5               push hl
 434+ A014 FD E1            pop iy
 435+ A016
 436+ A016 A7               and a
 437+ A017
 438+ A017 FD CB 00 1E      rr (iy+00)
 439+ A01B FD CB 01 1E      rr (iy+01)
 440+ A01F FD CB 02 1E      rr (iy+02)
 441+ A023
 442+ A023 30 11            jr nc,Exit
 443+ A025
 444+ A025              ; Desplazamiento completo hasta Carry.
 445+ A025              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A025
 447+ A025 FD 36 00 01      ld (iy+00),$01
 448+ A029 FD 36 01 80      ld (iy+01),$80
 449+ A02D FD 36 02 00      ld (iy+02),$00
 450+ A031
 451+ A031 21 2D 8C         ld hl,Ctrl_5
 452+ A034 CB D6            set 2,(hl)
 453+ A036
 454+ A036 E1           Exit pop hl
 455+ A037 C9               ret
 456+ A038
 457+ A038              ; ------------ ----------- ------------
 458+ A038              ;
 459+ A038              ;   25/9/24
 460+ A038
 461+ A038              Elimina_disparo_entidad
 462+ A038
 463+ A038 21 1B 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A03B 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A03C
 466+ A03C E1               pop hl
 467+ A03D E5               push hl
 468+ A03E
 469+ A03E 2C               inc l
 470+ A03F 2C               inc l
 471+ A040
 472+ A040 CD 48 A0         call Borra_6_bytes
 473+ A043
 474+ A043 D1               pop de
 475+ A044
 476+ A044 21 00 00         ld hl,0
 477+ A047
 478+ A047 C9               ret
 479+ A048
 480+ A048              ; ----- ----- ----- ----- -----
 481+ A048
 482+ A048              Borra_6_bytes
 483+ A048
 484+ A048 16 06            ld d,6                                                    ; Contador
 485+ A04A AF               xor a                                                     ; Borrador
 486+ A04B 77           1 ld (hl),a
 487+ A04C 2D               dec l
 488+ A04D 15               dec d
 489+ A04E 20 FB            jr nz,1B
 490+ A050
 491+ A050 C9               ret
 492+ A051
 493+ A051              ; --------------------------------------------------------------------------------------
 494+ A051              ;
 495+ A051              ;   12/10/24
 496+ A051              ;
 497+ A051
 498+ A051              Genera_datos_de_impresion_disparos_Entidades
 499+ A051
 500+ A051 3E 07            ld a,7
 501+ A053 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A054
 503+ A054              ; ---------------
 504+ A054
 505+ A054              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A054
 507+ A054 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A057
 509+ A057 CD B4 90     1 call Extrae_address
 510+ A05A
 511+ A05A 13               inc de
 512+ A05B 13               inc de
 513+ A05C
 514+ A05C ED 53 2E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A060
 516+ A060 2D               dec l
 517+ A061 7E               ld a,(hl)
 518+ A062 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A063 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A065
 521+ A065              ; ----- ----- ----- -----
 522+ A065
 523+ A065 2D               dec l
 524+ A066 CD B4 90         call Extrae_address
 525+ A069 E5               push hl
 526+ A06A
 527+ A06A 1D               dec e
 528+ A06B
 529+ A06B EB               ex de,hl
 530+ A06C
 531+ A06C 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A06D 2D               dec l
 533+ A06E 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A06F 2D               dec l
 535+ A070 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A071
 537+ A071 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A072
 539+ A072              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A072
 541+ A072 FD 2A 17 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A076 FD 73 00         ld (iy+0),e
 543+ A079 FD 70 01         ld (iy+1),b
 544+ A07C FD 71 02         ld (iy+2),c
 545+ A07F
 546+ A07F FD 75 03         ld (iy+3),l
 547+ A082 FD 74 04         ld (iy+4),h
 548+ A085
 549+ A085 CD 6F 99         call NextScan
 550+ A088
 551+ A088 FD 75 05         ld (iy+5),l
 552+ A08B FD 74 06         ld (iy+6),h
 553+ A08E
 554+ A08E FD E5            push iy
 555+ A090 E1               pop hl
 556+ A091
 557+ A091 3E 07            ld a,7
 558+ A093 85               add l
 559+ A094 6F               ld l,a
 560+ A095
 561+ A095 22 17 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A098
 563+ A098              ; ----- ----- ----- -----
 564+ A098
 565+ A098              Situa_en_siguiente_caja
 566+ A098
 567+ A098 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A099 3D               dec a
 569+ A09A C8               ret z
 570+ A09B
 571+ A09B 08               ex af,af
 572+ A09C 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A09F 18 B6            jr 1B
 574+ A0A1
 575+ A0A1              ; --------------------------------------------------------------------------------------
 576+ A0A1              ;
 577+ A0A1              ;   12/10/24
 578+ A0A1              ;
 579+ A0A1
 580+ A0A1              Genera_disparo_de_entidad_maldosa
 581+ A0A1
 582+ A0A1              ;   Estructura de un disparo de entidades.
 583+ A0A1
 584+ A0A1              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A0A1              ; 	defw 0											; Puntero de impresión.
 586+ A0A1              ;	defw 0											; Control.
 587+ A0A1
 588+ A0A1              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A0A1              ;   _de la entidad en el momento de disparar.
 590+ A0A1
 591+ A0A1              ;   El byte de control muestra la siguiente información:
 592+ A0A1
 593+ A0A1              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A0A1              ;
 595+ A0A1              ;                        10xx ..... Izquierda.
 596+ A0A1              ;                        01xx ..... Derecha.
 597+ A0A1              ;                        00xx ..... Recto.
 598+ A0A1
 599+ A0A1              ;*  Exclusiones.
 600+ A0A1
 601+ A0A1              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A0A1              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A0A1
 604+ A0A1 3A 1B 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A0A4 A7               and a
 606+ A0A5 C8               ret z
 607+ A0A6
 608+ A0A6 3A B8 8B         ld a,(Coordenada_y)
 609+ A0A9 A7               and a
 610+ A0AA C8               ret z
 611+ A0AB
 612+ A0AB 3D               dec a
 613+ A0AC C8               ret z
 614+ A0AD
 615+ A0AD FE 10            cp 16
 616+ A0AF D0               ret nc
 617+ A0B0
 618+ A0B0              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A0B0              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A0B0              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A0B0
 622+ A0B0 21 1D 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A0B3 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A0B4
 625+ A0B4              ;   Decrementa el numero de disparos de entidades.
 626+ A0B4
 627+ A0B4 21 1B 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A0B7 35               dec (hl)
 629+ A0B8
 630+ A0B8 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A0BB
 632+ A0BB CD B4 90     1 call Extrae_address
 633+ A0BE
 634+ A0BE 13               inc de
 635+ A0BF 13               inc de
 636+ A0C0
 637+ A0C0 ED 53 2E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A0C4
 639+ A0C4              ;   Comprobamos si la caja está vacía.
 640+ A0C4
 641+ A0C4 2D               dec l
 642+ A0C5 7E               ld a,(hl)
 643+ A0C6 A7               and a
 644+ A0C7 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A0C9 2C               inc l
 646+ A0CA
 647+ A0CA              ;   Caja vacía, vamos a generar un disparo.
 648+ A0CA              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A0CA
 650+ A0CA CD EB A0         call Genera_byte_inclinacion
 651+ A0CD
 652+ A0CD 7E               ld a,(hl)
 653+ A0CE 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A0CF
 655+ A0CF 2D               dec l
 656+ A0D0
 657+ A0D0 CD 07 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A0D3
 659+ A0D3 70               ld (hl),b
 660+ A0D4 2D               dec l
 661+ A0D5 71               ld (hl),c
 662+ A0D6
 663+ A0D6 2D               dec l
 664+ A0D7
 665+ A0D7              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A0D7
 667+ A0D7 FD 7E 02         ld a,(iy+02)
 668+ A0DA 77               ld (hl),a
 669+ A0DB 2D               dec l
 670+ A0DC
 671+ A0DC FD 7E 01         ld a,(iy+01)
 672+ A0DF 77               ld (hl),a
 673+ A0E0 2D               dec l
 674+ A0E1
 675+ A0E1 FD 7E 00         ld a,(iy+00)
 676+ A0E4 77               ld (hl),a
 677+ A0E5
 678+ A0E5 C9               ret
 679+ A0E6
 680+ A0E6              ;   --- --- ---
 681+ A0E6
 682+ A0E6              Situa_en_siguiente_disparo
 683+ A0E6
 684+ A0E6 2A 2E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A0E9 18 D0            jr 1B
 686+ A0EB
 687+ A0EB              ; --------------------------------------------------------------------------------------
 688+ A0EB              ;
 689+ A0EB              ;   09/10/24
 690+ A0EB              ;
 691+ A0EB
 692+ A0EB              Genera_byte_inclinacion
 693+ A0EB
 694+ A0EB              ; Determina tendencia del disparo.
 695+ A0EB
 696+ A0EB 3A 74 89         ld a,(CX_Amadeus)
 697+ A0EE 47               ld b,a
 698+ A0EF 3A B7 8B         ld a,(Coordenada_X)
 699+ A0F2 90               sub b
 700+ A0F3 38 07            jr c,Disparo_a_derecha
 701+ A0F5
 702+ A0F5 FE 06        Disparo_a_izquierda cp 6
 703+ A0F7
 704+ A0F7 D8               ret c
 705+ A0F8 C8               ret z
 706+ A0F9
 707+ A0F9 CB FE            set 7,(hl)
 708+ A0FB C9               ret
 709+ A0FC
 710+ A0FC 47           Disparo_a_derecha ld b,a
 711+ A0FD 3E FF            ld a,$ff
 712+ A0FF 90               sub b
 713+ A100
 714+ A100 FE 05            cp 5
 715+ A102
 716+ A102 D8               ret c
 717+ A103 C8               ret z
 718+ A104
 719+ A104 CB F6            set 6,(hl)
 720+ A106 C9               ret
 721+ A107
 722+ A107              ; --------------------------------------------------------------------------------------
 723+ A107              ;
 724+ A107              ;   09/10/24
 725+ A107              ;
 726+ A107
 727+ A107              Modifica_puntero_de_impresion
 728+ A107
 729+ A107              ;   Puntero de impresión del disparo en BC.
 730+ A107
 731+ A107 E5               push hl
 732+ A108
 733+ A108 2A 30 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A10B CD 6F 99         call NextScan
 735+ A10E
 736+ A10E 4D               ld c,l
 737+ A10F 44               ld b,h
 738+ A110
 739+ A110 E1               pop hl
 740+ A111
 741+ A111 08               ex af,af
 742+ A112 CB 77            bit 6,a
 743+ A114 28 06            jr z,1F
 744+ A116
 745+ A116 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A11A 0C               inc c
 747+ A11B C9               ret
 748+ A11C
 749+ A11C CB 7F        1 bit 7,a
 750+ A11E 28 F6            jr z,2B
 751+ A120
 752+ A120 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A124 0D               dec c
 754+ A125
 755+ A125 C9               ret
 756+ A126
 757+ A126              ; --------------------------------------------------------------------------------------
 758+ A126              ;
 759+ A126              ;   31/08/24
 760+ A126              ;
 761+ A126
 762+ A126              Compara_con_coordenadas_de_disparo
 763+ A126
 764+ A126 3A B8 8B         ld a,(Coordenada_y)
 765+ A129 47               ld b,a
 766+ A12A 3A 35 8C         ld a,(Coordenadas_disparo_certero)
 767+ A12D 90               sub b
 768+ A12E
 769+ A12E              ; A = "0" ok
 770+ A12E              ; A = "1" ok
 771+ A12E
 772+ A12E 28 08            jr z,Comprueba_coordenada_X
 773+ A130 3D               dec a
 774+ A131 28 05            jr z,Comprueba_coordenada_X
 775+ A133
 776+ A133              ; A = "$ff" ok
 777+ A133
 778+ A133 FE FE            cp $fe
 779+ A135 28 01            jr z,Comprueba_coordenada_X
 780+ A137
 781+ A137 C9               ret
 782+ A138
 783+ A138              Comprueba_coordenada_X
 784+ A138
 785+ A138 3A B7 8B         ld a,(Coordenada_X)
 786+ A13B 47               ld b,a
 787+ A13C 21 36 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A13F 7E               ld a,(hl)
 789+ A140 90               sub b
 790+ A141
 791+ A141              ; A = "0" ok
 792+ A141              ; A = "1" ok
 793+ A141
 794+ A141 28 09            jr z,Activa_Impacto_en_entidad
 795+ A143 3D               dec a
 796+ A144 28 06            jr z,Activa_Impacto_en_entidad
 797+ A146
 798+ A146              ; A = "2" ok
 799+ A146
 800+ A146 3D               dec a
 801+ A147 28 03            jr z,Activa_Impacto_en_entidad
 802+ A149
 803+ A149              ; A = "$ff"
 804+ A149
 805+ A149 FE FD            cp $fd
 806+ A14B C0               ret nz
 807+ A14C
 808+ A14C              Activa_Impacto_en_entidad
 809+ A14C
 810+ A14C              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A14C
 812+ A14C 3E 02            ld a,2
 813+ A14E 32 BA 8B         ld (Impacto),a
 814+ A151
 815+ A151              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A151
 817+ A151 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A154 21 BD 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A157
 820+ A157 73               ld (hl),e
 821+ A158 23               inc hl
 822+ A159 72               ld (hl),d
 823+ A15A
 824+ A15A              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A15A
 826+ A15A 21 32 8C         ld hl,Impacto2
 827+ A15D CB 9E            res 3,(hl)
 828+ A15F
 829+ A15F C9               ret
 830+ A160
 831+ A160              ; --------------------------------------------------------------------------------------
 832+ A160              ;
 833+ A160              ;   13/10/24
 834+ A160              ;
 835+ A160
 836+ A160              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A160
 838+ A160              Limpia_album_de_pintado_disparos_Amadeus
 839+ A160
 840+ A160 2A 0F 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A163 06 06            ld b,6
 842+ A165 AF               xor a
 843+ A166 77           1 ld (hl),a
 844+ A167 2C               inc l
 845+ A168 10 FC            djnz 1B
 846+ A16A
 847+ A16A C9               ret
 848+ A16B
 849+ A16B              ; --------------------------------------------------------------------------------------
 850+ A16B              ;
 851+ A16B              ;   29/09/24
 852+ A16B              ;
 853+ A16B
 854+ A16B              Calcula_bytes_pintado_disparos
 855+ A16B
 856+ A16B 2A 13 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A16E 45               ld b,l
 858+ A16F 2A 17 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A172 7D               ld a,l
 860+ A173
 861+ A173 90               sub b
 862+ A174 32 19 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A177
 864+ A177 C9               ret
 865+ A178
 866+ A178              ; --------------------------------------------------------------------------------------
 867+ A178              ;
 868+ A178              ;   26/10/24
 869+ A178              ;
 870+ A178              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A178              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A178              ;   _disparos que el álbum del FRAME actual).
 873+ A178
 874+ A178              Limpia_album_de_pintado_disparos_entidades
 875+ A178
 876+ A178 21 1A 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A17B 7E               ld a,(hl)
 878+ A17C 2D               dec l
 879+ A17D 46               ld b,(hl)
 880+ A17E 90               sub b
 881+ A17F
 882+ A17F D8               ret c
 883+ A180 C8               ret z
 884+ A181
 885+ A181 F5               push af
 886+ A182 80               add b
 887+ A183 77               ld (hl),a
 888+ A184 F1               pop af
 889+ A185
 890+ A185              ; Clean.
 891+ A185
 892+ A185 47           2 ld b,a
 893+ A186 AF               xor a
 894+ A187 2A 17 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A18A 77           1 ld (hl),a
 896+ A18B 23               inc hl
 897+ A18C 10 FC            djnz 1B
 898+ A18E
 899+ A18E C9               ret
 900+ A18F
 901+ A18F              ; --------------------------------------------------------------------------------------
 902+ A18F              ;
 903+ A18F              ;   29/09/24
 904+ A18F              ;
 905+ A18F
 906+ A18F              Motor_Disparos_Amadeus
 907+ A18F
 908+ A18F 21 26 89         ld hl,Disparo_Amad+1
 909+ A192
 910+ A192 34               inc (hl)
 911+ A193 35               dec (hl)
 912+ A194
 913+ A194 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A195
 915+ A195              ;   Esta caja contiene un disparo.
 916+ A195
 917+ A195 CD 9C A1         call Consulta_Impacto
 918+ A198 CC B5 A1         call z,Mueve_disparo_Amadeus
 919+ A19B
 920+ A19B C9               ret
 921+ A19C
 922+ A19C              ; ----------------------
 923+ A19C              ;
 924+ A19C              ;
 925+ A19C              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A19C              ;
 927+ A19C              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A19C
 929+ A19C
 930+ A19C              Consulta_Impacto
 931+ A19C
 932+ A19C              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A19C              ;   _sea lo más coherente posible.
 934+ A19C
 935+ A19C E5               push hl
 936+ A19D 2B               dec hl
 937+ A19E CD 91 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A1A1 E1               pop hl
 939+ A1A2 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A1A3
 941+ A1A3 C8               ret z
 942+ A1A4
 943+ A1A4 3A 32 8C         ld a,(Impacto2)
 944+ A1A7 CB DF            set 3,a
 945+ A1A9 32 32 8C         ld (Impacto2),a
 946+ A1AC
 947+ A1AC E5               push hl
 948+ A1AD CD 7E A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A1B0 E1               pop hl
 950+ A1B1 CD CE A1         call Elimina_disparo_Amadeus
 951+ A1B4
 952+ A1B4 C9               ret
 953+ A1B5
 954+ A1B5              ; ----------------------
 955+ A1B5              ;
 956+ A1B5              ;
 957+ A1B5              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A1B5
 959+ A1B5              Mueve_disparo_Amadeus
 960+ A1B5
 961+ A1B5 CD B4 90         call Extrae_address
 962+ A1B8
 963+ A1B8 CD 7E 99         call PreviousScan
 964+ A1BB CD 7E 99         call PreviousScan
 965+ A1BE CD 7E 99         call PreviousScan
 966+ A1C1 CD 7E 99         call PreviousScan
 967+ A1C4
 968+ A1C4              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A1C4
 970+ A1C4 7C               ld a,h
 971+ A1C5 D6 40            sub $40
 972+ A1C7 EB               ex de,hl
 973+ A1C8 38 04            jr c,Elimina_disparo_Amadeus
 974+ A1CA
 975+ A1CA               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A1CA
 977+ A1CA 73               ld (hl),e
 978+ A1CB 23               inc hl
 979+ A1CC 72               ld (hl),d
 980+ A1CD
 981+ A1CD C9               ret
 982+ A1CE
 983+ A1CE              ; ----------------------
 984+ A1CE              ;
 985+ A1CE              ;   29/9/24
 986+ A1CE
 987+ A1CE              Elimina_disparo_Amadeus
 988+ A1CE
 989+ A1CE              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A1CE              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A1CE
 992+ A1CE              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A1CE              ;   	defw 0											; Puntero de impresión.
 994+ A1CE
 995+ A1CE 2B               dec hl
 996+ A1CF 2B               dec hl
 997+ A1D0
 998+ A1D0 AF               xor a
 999+ A1D1 77               ld (hl),a
1000+ A1D2 23               inc hl
1001+ A1D3 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A1D4
1003+ A1D4 23               inc hl
1004+ A1D5 77               ld (hl),a
1005+ A1D6 23               inc hl
1006+ A1D7 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A1D8
1008+ A1D8 3E 01            ld a,1
1009+ A1DA 32 1C 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A1DD
1011+ A1DD CD 60 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A1E0
1013+ A1E0 AF               xor a
1014+ A1E1 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A1E2
1016+ A1E2 C9               ret
1017+ A1E3
1018+ A1E3              ; --------------------------------------------------------------------------------------
1019+ A1E3              ;
1020+ A1E3              ;   13/10/24
1021+ A1E3              ;
1022+ A1E3
1023+ A1E3              Pinta_disparos_Amadeus
1024+ A1E3
1025+ A1E3 06 02            ld b,2
1026+ A1E5 ED 73 03 8C      ld (Stack),sp
1027+ A1E9 ED 7B 11 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A1ED D1           3 pop de
1029+ A1EE 14               inc d
1030+ A1EF 15               dec d
1031+ A1F0 28 1C            jr z,1F
1032+ A1F2 E1               pop hl
1033+ A1F3
1034+ A1F3              Imprime_scanlines_en_pantalla
1035+ A1F3
1036+ A1F3              ; 1er scanline
1037+ A1F3
1038+ A1F3 1A               ld a,(de)
1039+ A1F4 AE               xor (hl)
1040+ A1F5 77               ld (hl),a
1041+ A1F6
1042+ A1F6 1C               inc e
1043+ A1F7 2C               inc l
1044+ A1F8
1045+ A1F8 1A               ld a,(de)
1046+ A1F9 AE               xor (hl)
1047+ A1FA 77               ld (hl),a
1048+ A1FB
1049+ A1FB 1D               dec e
1050+ A1FC E1               pop hl
1051+ A1FD
1052+ A1FD              ; 2º scanline
1053+ A1FD
1054+ A1FD 1A               ld a,(de)
1055+ A1FE AE               xor (hl)
1056+ A1FF 77               ld (hl),a
1057+ A200
1058+ A200 1C               inc e
1059+ A201 2C               inc l
1060+ A202
1061+ A202 1A               ld a,(de)
1062+ A203 AE               xor (hl)
1063+ A204 77               ld (hl),a
1064+ A205
1065+ A205 1D               dec e
1066+ A206
1067+ A206 18 06            jr 1F
1068+ A208
1069+ A208 ED 7B 0F 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A20C 18 DF            jr 3B
1071+ A20E 10 F8        1 djnz 2B
1072+ A210 ED 7B 03 8C      ld sp,(Stack)
1073+ A214 C9               ret
1074+ A215
1075+ A215              ; --------------------------------------------------------------------------------------
1076+ A215              ;
1077+ A215              ;   13/10/24
1078+ A215              ;
1079+ A215              ;   Modifica: HL,BC y DE.
1080+ A215
1081+ A215
1082+ A215              Genera_datos_de_impresion_disparos_Amadeus
1083+ A215
1084+ A215 ED 73 03 8C      ld (Stack),sp
1085+ A219 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A21C D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A21D
1088+ A21D 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A21E 15               dec d
1090+ A21F
1091+ A21F 28 0E            jr z,Salida
1092+ A221
1093+ A221              Genera_scanlines_de_disparo_Amadeus
1094+ A221
1095+ A221 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A222              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A222 ED 7B 0F 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A226
1099+ A226 C1               pop bc
1100+ A227 C1               pop bc
1101+ A228 C1               pop bc
1102+ A229
1103+ A229 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A22A CD 7E 99         call PreviousScan
1105+ A22D E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A22E D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A22F
1108+ A22F              Salida
1109+ A22F
1110+ A22F ED 7B 03 8C      ld sp,(Stack)
1111+ A233
1112+ A233 C9               ret
1113+ A234
1114+ A234              ; --------------------------------------------------------------------------------------
1115+ A234              ;
1116+ A234              ;   12/09/24
1117+ A234              ;
1118+ A234
1119+ A234              Genera_disparo_Amadeus
1120+ A234
1121+ A234              ;*  Exclusiones.
1122+ A234
1123+ A234 3A 1C 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A237 A7               and a
1125+ A238 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A239
1127+ A239 3D               dec a
1128+ A23A 32 1C 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A23D
1130+ A23D              Define_puntero_objeto_disparo
1131+ A23D
1132+ A23D              ;   Inicializamos contador.
1133+ A23D
1134+ A23D 06 00            ld b,0
1135+ A23F
1136+ A23F 2A 78 89         ld hl,(p.imp.amadeus)
1137+ A242 2C               inc l
1138+ A243
1139+ A243 3E 80            ld a,$80
1140+ A245 BE               cp (hl)
1141+ A246 28 0D            jr z,1F
1142+ A248
1143+ A248 04               inc b
1144+ A249
1145+ A249 3E 60            ld a,$60
1146+ A24B BE               cp (hl)
1147+ A24C 28 07            jr z,1F
1148+ A24E
1149+ A24E
1150+ A24E 04               inc b
1151+ A24F
1152+ A24F 3E 18            ld a,$18
1153+ A251 BE               cp (hl)
1154+ A252 28 01            jr z,1F
1155+ A254
1156+ A254 04               inc b
1157+ A255
1158+ A255              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A255
1160+ A255              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A255
1162+ A255 CD 7E 99     1 call PreviousScan
1163+ A258
1164+ A258 78               ld a,b
1165+ A259 CB 3F            srl a
1166+ A25B 28 03            jr z,4F
1167+ A25D
1168+ A25D              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A25D E5               push hl
1170+ A25E 18 02            jr 5F
1171+ A260 2D           4 dec l
1172+ A261 E5               push hl
1173+ A262              ; ---
1174+ A262
1175+ A262              ;   Calcula el Puntero_objeto del disparo.
1176+ A262
1177+ A262 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A265 04               inc b
1179+ A266 05               dec b
1180+ A267 28 04            jr z,2F
1181+ A269
1182+ A269              ;   Nos desplazamos por el índice de disparos.
1183+ A269
1184+ A269 2C           3 inc l
1185+ A26A 2C               inc l
1186+ A26B 10 FC            djnz 3B
1187+ A26D
1188+ A26D              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A26D CD B4 90     2 call Extrae_address
1190+ A270 E5               push hl
1191+ A271              ; ---
1192+ A271
1193+ A271              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A271              ; HL en el 1er .db de la caja.
1195+ A271
1196+ A271 21 25 89         ld hl,Disparo_Amad
1197+ A274
1198+ A274 06 02            ld b,2
1199+ A276
1200+ A276 D1           6 pop de
1201+ A277 73               ld (hl),e
1202+ A278 23               inc hl
1203+ A279 72               ld (hl),d
1204+ A27A 23               inc hl
1205+ A27B
1206+ A27B 10 F9            djnz 6B
1207+ A27D
1208+ A27D C9               ret
1209+ A27E
1210+ A27E              Genera_coordenadas_de_disparo_Amadeus
1211+ A27E
1212+ A27E              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A27E              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A27E              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A27E
1216+ A27E CD B4 90         call Extrae_address
1217+ A281 CD 75 94         call Genera_coordenadas
1218+ A284
1219+ A284 3D               dec a
1220+ A285
1221+ A285 21 35 8C         ld hl,Coordenadas_disparo_certero
1222+ A288 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A289 23               inc hl
1224+ A28A 3A B7 8B         ld a,(Coordenada_X)
1225+ A28D 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A28E
1227+ A28E AF               xor a
1228+ A28F 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A290
1230+ A290 C9               ret
1231+ A291
1232+ A291              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A291              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A291              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A291
1236+ A291              ; ----------------------------------------------
1237+ A291              ;
1238+ A291              ;   27/08/24
1239+ A291              ;
1240+ A291              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A291              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A291
1243+ A291              Detecta_impacto_en_disparo_de_Amadeus
1244+ A291
1245+ A291              Extraccion_de_datos
1246+ A291
1247+ A291 13               inc de
1248+ A292 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A293
1250+ A293 5E               ld e,(hl)
1251+ A294 23               inc hl
1252+ A295 56               ld d,(hl)
1253+ A296
1254+ A296 23               inc hl
1255+ A297
1256+ A297 4E               ld c,(hl)
1257+ A298 23               inc hl
1258+ A299 46               ld b,(hl)
1259+ A29A
1260+ A29A C5               push bc
1261+ A29B E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A29C
1263+ A29C              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A29C
1265+ A29C CD 7E 99         call PreviousScan
1266+ A29F CD 7E 99         call PreviousScan
1267+ A2A2
1268+ A2A2              Detecta_impacto_
1269+ A2A2
1270+ A2A2 1A               ld a,(de)
1271+ A2A3 A6               and (hl)
1272+ A2A4 C0               ret nz
1273+ A2A5
1274+ A2A5 13               inc de
1275+ A2A6 23               inc hl
1276+ A2A7
1277+ A2A7 1A               ld a,(de)
1278+ A2A8 A6               and (hl)
1279+ A2A9 C9               ret
1280+ A2AA
1281+ A2AA              ; -------------------------------------------------------------------------------------------------------------
1282+ A2AA              ;
1283+ A2AA              ;   8/8/24
1284+ A2AA              ;
1285+ A2AA              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A2AA              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A2AA              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A2AA              ;
1289+ A2AA              ;   MODIFICA: HL,DE,BC y A.
1290+ A2AA              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A2AA              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A2AA
1293+ A2AA              Colision_Entidad_Amadeus
1294+ A2AA
1295+ A2AA              ; Posible contacto de entidad con Amadeus. ?????
1296+ A2AA
1297+ A2AA              ; Exclusiones:
1298+ A2AA
1299+ A2AA 3A 55 8C         ld a,(Shield)
1300+ A2AD A7               and a
1301+ A2AE C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A2AF
1303+ A2AF 21 2B 8C         ld hl,Ctrl_3
1304+ A2B2 CB 76            bit 6,(hl)
1305+ A2B4 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A2B5
1307+ A2B5 21 32 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A2B8 CB 56            bit 2,(hl)
1309+ A2BA C0               ret nz
1310+ A2BB
1311+ A2BB 3A B8 8B     	ld a,(Coordenada_y)
1312+ A2BE FE 14        	cp $14
1313+ A2C0 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A2C1
1315+ A2C1 3A 77 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A2C4 A7               and a
1317+ A2C5 C0               ret nz
1318+ A2C6
1319+ A2C6              Genera_coordenadas_X
1320+ A2C6
1321+ A2C6              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A2C6              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A2C6
1324+ A2C6              ;   Limpiamos almacenes.
1325+ A2C6
1326+ A2C6              ;    call Limpia_Coordenadas_X
1327+ A2C6
1328+ A2C6              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A2C6
1330+ A2C6 21 37 8C         ld hl,Coordenadas_X_Entidad
1331+ A2C9 3A B7 8B         ld a,(Coordenada_X)
1332+ A2CC CD EE A2         call Guarda_coordenadas_X
1333+ A2CF
1334+ A2CF              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A2CF
1336+ A2CF 3A 74 89         ld a,(CX_Amadeus)
1337+ A2D2 CD EE A2         call Guarda_coordenadas_X
1338+ A2D5 CD 02 A3         call Compara_coordenadas_X
1339+ A2D8 C0               ret nz
1340+ A2D9
1341+ A2D9 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A2DB 32 BA 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A2DE
1344+ A2DE 2A F6 8B         ld hl,(Puntero_store_caja)
1345+ A2E1 2C               inc l
1346+ A2E2 2C               inc l
1347+ A2E3 2C               inc l
1348+ A2E4 2C               inc l
1349+ A2E5 22 33 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A2E8
1351+ A2E8 21 32 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A2EB CB D6            set 2,(hl)
1353+ A2ED
1354+ A2ED C9               ret
1355+ A2EE
1356+ A2EE               ; ----- ----- ----- ----- -----
1357+ A2EE
1358+ A2EE 77           Guarda_coordenadas_X ld (hl),a
1359+ A2EF 3C               inc a
1360+ A2F0 2C               inc l
1361+ A2F1 77               ld (hl),a
1362+ A2F2 3C               inc a
1363+ A2F3 2C               inc l
1364+ A2F4 77               ld (hl),a
1365+ A2F5 2C               inc l
1366+ A2F6 C9               ret
1367+ A2F7
1368+ A2F7 AF           Limpia_Coordenadas_X xor a
1369+ A2F8 06 06            ld b,6
1370+ A2FA 21 3A 8C         ld hl,Coordenadas_X_Amadeus
1371+ A2FD 77           1 ld (hl),a
1372+ A2FE 23               inc hl
1373+ A2FF 10 FC            djnz 1B
1374+ A301 C9               ret
1375+ A302
1376+ A302              ; ----- ----- ----- ----- -----
1377+ A302
1378+ A302              Compara_coordenadas_X
1379+ A302
1380+ A302 DD 21 37 8C      ld ix,Coordenadas_X_Entidad
1381+ A306 DD 7E 00         ld a,(ix+0)
1382+ A309 CD 17 A3         call Comparando
1383+ A30C C8               ret z
1384+ A30D
1385+ A30D 3C               inc a
1386+ A30E CD 26 A3         call Comparando_1
1387+ A311 C8               ret z
1388+ A312
1389+ A312 3C               inc a
1390+ A313 CD 26 A3         call Comparando_1
1391+ A316 C9               ret
1392+ A317
1393+ A317              ; ----- ----- ----- ----- -----
1394+ A317              ;
1395+ A317              ;   4/12/23
1396+ A317              ;
1397+ A317              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A317
1399+ A317              Comparando
1400+ A317
1401+ A317 DD 2C            inc ixl
1402+ A319 DD 2C            inc ixl
1403+ A31B DD 2C            inc ixl
1404+ A31D
1405+ A31D DD 46 00         ld b,(ix+0)
1406+ A320 DD 4E 01         ld c,(ix+1)
1407+ A323 DD 56 02         ld d,(ix+2)
1408+ A326
1409+ A326 B8           Comparando_1 cp b
1410+ A327 C8               ret z
1411+ A328 B9               cp c
1412+ A329 C8               ret z
1413+ A32A BA               cp d
1414+ A32B C9               ret
1415+ A32C
1416+ A32C              ; -----------------------------------------------------------------------
1417+ A32C              ;
1418+ A32C              ;   04/7/24
1419+ A32C              ;
1420+ A32C
1421+ A32C              Detecta_colision_nave_entidad
1422+ A32C
1423+ A32C              ; Exclusiones:
1424+ A32C
1425+ A32C              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A32C
1427+ A32C 21 32 8C     	ld hl,Impacto2
1428+ A32F CB 56        	bit 2,(hl)
1429+ A331 C8           	ret z
1430+ A332
1431+ A332              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A332
1433+ A332 2A 7A 89         ld hl,(Pamm_Amadeus)
1434+ A335 CD B4 90         call Extrae_address
1435+ A338 54               ld d,h
1436+ A339 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A33A
1438+ A33A 2A 78 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A33D 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A33F FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A342
1442+ A342 C5           1 push bc
1443+ A343 06 03            ld b,3
1444+ A345 E5               push hl
1445+ A346
1446+ A346              ; .db
1447+ A346
1448+ A346 1A           3 ld a,(de)
1449+ A347 A7               and a
1450+ A348 20 03            jr nz,4F
1451+ A34A
1452+ A34A 2C               inc l
1453+ A34B 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A34D
1455+ A34D ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A34F 28 04            jr z,2F
1457+ A351
1458+ A351              ; Impacto.
1459+ A351 FD 2D            dec iyl
1460+ A353 28 22            jr z,5F
1461+ A355
1462+ A355 1C           2 inc e
1463+ A356 10 EE            djnz 3B
1464+ A358
1465+ A358 E1               pop hl
1466+ A359
1467+ A359              ; Hay salto de línea en el puntero de impresión ???
1468+ A359
1469+ A359 7C               ld a,h
1470+ A35A D6 57            sub $57
1471+ A35C 20 0A            jr nz,6F
1472+ A35E
1473+ A35E              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A35E
1475+ A35E 2A 78 89         ld hl,(p.imp.amadeus)
1476+ A361 3E 20            ld a,$20
1477+ A363 A7               and a
1478+ A364 85               add l
1479+ A365 6F               ld l,a
1480+ A366 18 01            jr 7F
1481+ A368
1482+ A368 24           6 inc h
1483+ A369
1484+ A369 C1           7 pop bc
1485+ A36A 10 D6            djnz 1B
1486+ A36C
1487+ A36C              ;   Fin de la comparativa.
1488+ A36C
1489+ A36C              ;   NO HAY COLISIÓN !!!!!.
1490+ A36C              ;
1491+ A36C              ;   .db (Impacto) de Amadeus a "0".
1492+ A36C              ;   RES el bit2 de (Impacto2).
1493+ A36C              ;
1494+ A36C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A36C              ;   Lo colocamos a "0".
1496+ A36C
1497+ A36C 21 32 8C         ld hl,Impacto2
1498+ A36F CB 96            res 2,(hl)
1499+ A371 2A 33 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A374 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A376 C9               ret
1502+ A377
1503+ A377              ;   COLISIÓN !!!!!.
1504+ A377              ;
1505+ A377              ;   .db (Impacto) de Amadeus a "1".
1506+ A377              ;   SET el bit3 de (Impacto2).
1507+ A377              ;
1508+ A377              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A377
1510+ A377 E1           5 pop hl
1511+ A378 C1               pop bc
1512+ A379
1513+ A379 21 77 89         ld hl,Impacto_Amadeus
1514+ A37C 36 01            ld (hl),1
1515+ A37E 21 32 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A381 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A383
1518+ A383 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A386 2A 33 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A389
1521+ A389 23               inc hl
1522+ A38A 23               inc hl
1523+ A38B 23               inc hl
1524+ A38C
1525+ A38C 73               ld (hl),e
1526+ A38D 23               inc hl
1527+ A38E 72               ld (hl),d
1528+ A38F
1529+ A38F              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A38F
1531+ A38F 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A392 21 7A 89         ld hl,Pamm_Amadeus
1533+ A395
1534+ A395 73               ld (hl),e
1535+ A396 23               inc hl
1536+ A397 72               ld (hl),d
1537+ A398
1538+ A398 C9               ret
1539+ A399
1540+ A399
1541+ A399
# file closed: Disparo.asm
2070  A399
2071  A399              	SAVESNA "Pruebas.sna", START
2072  A399
2073  A399
2074  A399
2075  A399
# file closed: Banco_de_pruebas.asm
