# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E7 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A F1 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 03        	jr z,1F
  42  AA20
  43  AA20 CD CA 92     	call Extrae_foto_entidades
  44  AA23
  45  AA23              ;	ld a,6
  46  AA23              ;	out ($fe),a
  47  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  48  AA23
  49  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  50  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  51  AA23
  52  AA23              ;	ld a,7
  53  AA23              ;	out ($fe),a												; Borde blanco.
  54  AA23              ;	call Guarda_parametros_DRAW
  55  AA23              ;	call Restore_Amadeus
  56  AA23
  57  AA23              ; Posible colisión Entidad-Amadeus ???
  58  AA23
  59  AA23              ;	ld a,(Impacto2)
  60  AA23              ;	bit 2,a
  61  AA23              ;	jr z,1F
  62  AA23
  63  AA23              ;	call Detecta_colision_nave_entidad
  64  AA23
  65  AA23              ;1 ld a,4
  66  AA23              ;	out ($fe),a
  67  AA23              ;	call Gestiona_Amadeus
  68  AA23
  69  AA23              ;	ld a,7
  70  AA23              ;	out ($fe),a											; Borde blanco.
  71  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  72  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  73  AA23
  74  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  75  AA23
  76  AA23              ;	call Recupera_parametros_DRAW
  77  AA23
  78  AA23 CD AB 8D     1 call Actualiza_relojes
  79  AA26
  80  AA26 21 F1 89     	ld hl,Ctrl_3
  81  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  82  AA2B
  83  AA2B FD E1        	pop iy
  84  AA2D DD E1        	pop ix
  85  AA2F F1           	pop af
  86  AA30 C1           	pop bc
  87  AA31 D1           	pop de
  88  AA32 E1           	pop hl
  89  AA33 D9           	exx
  90  AA34 C1           	pop bc
  91  AA35 D1           	pop de
  92  AA36 E1           	pop hl
  93  AA37 08           	ex af,af'
  94  AA38 F1           	pop af
  95  AA39 08           	ex af,af'
  96  AA3A D9           	exx
  97  AA3B
  98  AA3B ED 7B E7 89  	ld sp,(Stack_3)
  99  AA3F
 100  AA3F FB           	ei
 101  AA40
 102  AA40 3E 01        	ld a,1												; Borde azul.
 103  AA42 D3 FE        	out ($fe),a
 104  AA44
 105  AA44 C9           	ret
 106  AA45
 107  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 108  AA45
 109  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 20 83        	defw Badsat_der_f8
  97+ 82F4 50 83        	defw Badsat_der_f9
  98+ 82F6 80 83        	defw Badsat_der_fa
  99+ 82F8 B0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 104+ 8304 54 40 AA 40
 105+ 8308 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 105+ 830C 17 FE 06 C0
 106+ 8310 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 106+ 8314 17 D4 02 2A
 107+ 8318 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 107+ 831C 00 14 00 08
 108+ 8320
 109+ 8320 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 109+ 8324 20 00 2A 20
 110+ 8328 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 110+ 832C 2A A0 00 15
 111+ 8330 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 111+ 8334 00 03 60 00
 112+ 8338 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 112+ 833C F4 00 0B EA
 113+ 8340 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 113+ 8344 03 2A 80 00
 114+ 8348 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 114+ 834C 00 00 04 00
 115+ 8350
 116+ 8350 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 116+ 8354 10 00 15 10
 117+ 8358 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 117+ 835C 15 50 00 0A
 118+ 8360 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 118+ 8364 80 01 B0 00
 119+ 8368 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 119+ 836C FA 00 05 F5
 120+ 8370 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 120+ 8374 01 95 40 00
 121+ 8378 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 121+ 837C 00 00 02 00
 122+ 8380
 123+ 8380 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 123+ 8384 08 00 0A 88
 124+ 8388 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 124+ 838C 0A A8 00 05
 125+ 8390 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 125+ 8394 C0 00 D8 00
 126+ 8398 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 126+ 839C FD 00 02 FA
 127+ 83A0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 127+ 83A4 00 CA A0 00
 128+ 83A8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 128+ 83AC 80 00 01 00
 129+ 83B0
 130+ 83B0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 130+ 83B4 84 00 05 44
 131+ 83B8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 131+ 83BC 05 54 00 02
 132+ 83C0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 132+ 83C4 E0 00 6C 00
 133+ 83C8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 133+ 83CC FE 80 01 7D
 134+ 83D0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 134+ 83D4 00 65 50 00
 135+ 83D8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 135+ 83DC 40 00 00 80
 136+ 83E0
 137+ 83E0              	org $8400
 138+ 8400
 139+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 139+ 8404 42 00 02 A2
 140+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 140+ 840C 02 AA 00 01
 141+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 141+ 8414 F0 00 36 00
 142+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 142+ 841C FF 40 00 BE
 143+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 143+ 8424 00 32 A8 00
 144+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 144+ 842C A0 00 00 40
 145+ 8430
 146+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 146+ 8434 A1 00 01 51
 147+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 147+ 843C 01 55 00 00
 148+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 148+ 8444 F8 00 1B 00
 149+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 149+ 844C FF A0 00 1F
 150+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 150+ 8454 00 09 54 00
 151+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 151+ 845C 50 00 00 20
 152+ 8460
 153+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 153+ 8464 50 80 00 A8
 154+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 154+ 846C 00 AA 80 00
 155+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 155+ 8474 FC 00 0D 80
 156+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 156+ 847C FF D0 00 0F
 157+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 157+ 8484 00 04 AA 00
 158+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 158+ 848C 28 00 00 10
 159+ 8490
 160+ 8490              ; ----------------------------------------------------------------------------------------
 161+ 8490
 162+ 8490              ; Amadeus. 2x2.
 163+ 8490
 164+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 165+ 8492 00 00        	defw 0
 166+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 167+ 8496 00 00        	defw 0
 168+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 169+ 849A 00 00        	defw 0
 170+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 171+ 849E 00 00        	defw 0	 								; (Fín de índice).
 172+ 84A0
 173+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 174+ 84A2 00 00        	defw 0
 175+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 176+ 84A6 00 00        	defw 0
 177+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 178+ 84AA 00 00        	defw 0
 179+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 180+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 181+ 84B0
 182+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 182+ 84B4 26 64 24 24
 183+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 183+ 84BC 6F F6 67 E6
 184+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 184+ 84C4 F7 EF FF FF
 185+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 185+ 84CC 8B D1 71 8E
 186+ 84D0
 187+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 187+ 84D4 F1 00 09 99
 188+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 188+ 84DC 0B 0D 00 1B
 189+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 189+ 84E4 80 19 F9 80
 190+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 190+ 84EC F3 C0 3D FB
 191+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 191+ 84F4 3E F7 C0 3E
 192+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 192+ 84FC 40 1C 63 80
 193+ 8500
 194+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 194+ 8504 3C 40 02 66
 195+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 195+ 850C 02 C3 40 06
 196+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 196+ 8514 60 06 7E 60
 197+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 197+ 851C 3C F0 0F 7E
 198+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 198+ 8524 0F BD F0 0F
 199+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 199+ 852C 10 07 18 E0
 200+ 8530
 201+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 201+ 8534 8F 10 00 99
 202+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 202+ 853C 00 B0 D0 01
 203+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 203+ 8544 D8 01 9F 98
 204+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 204+ 854C CF 3C 03 DF
 205+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 205+ 8554 03 EF 7C 03
 206+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 206+ 855C 44 01 C6 38
 207+ 8560
 208+ 8560              ; ----------------------------------------------------------------------------------------
 209+ 8560
 210+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 211+ 8562 96 85        	defw Explosion_2x3_2
 212+ 8564 C6 85        	defw Explosion_2x3_3
 213+ 8566
 214+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 214+ 856A 10 00 04 38
 215+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 215+ 8572 02 E6 80 01
 216+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 216+ 857A 00 03 DD 80
 217+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 217+ 8582 3B 80 01 9D
 218+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 218+ 858A 02 FD 80 03
 219+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 219+ 8592 00 08 00 00
 220+ 8596
 221+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 221+ 859A 38 10 03 BC
 222+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 222+ 85A2 04 06 C0 00
 223+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 223+ 85AA 00 03 DD 80
 224+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 224+ 85B2 3A 70 01 9C
 225+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 225+ 85BA 04 F8 80 06
 226+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 226+ 85C2 00 00 00 00
 227+ 85C6
 228+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 228+ 85CA 00 20 08 00
 229+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 229+ 85D2 00 06 00 00
 230+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 230+ 85DA 00 00 14 30
 231+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 231+ 85E2 38 00 01 08
 232+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 232+ 85EA 00 80 00 04
 233+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 233+ 85F2 10 08 00 20
 234+ 85F6
 235+ 85F6              ; ------------------------------------------
 236+ 85F6
 237+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 238+ 85F8 20 86        	defw Explosion_2x2_2
 239+ 85FA 40 86        	defw Explosion_2x2_3
 240+ 85FC
 241+ 85FC              	org $8600
 242+ 8600
 243+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 243+ 8604 43 84 37 D8
 244+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 244+ 860C 17 F0 3D D8
 245+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 245+ 8614 19 D0 1F 60
 246+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 246+ 861C 40 00 80 00
 247+ 8620
 248+ 8620
 249+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 249+ 8624 3B C2 60 0C
 250+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 250+ 862C 07 F0 3D D8
 251+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 251+ 8634 19 C6 1F 64
 252+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 252+ 863C 80 00 00 00
 253+ 8640
 254+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 254+ 8644 88 04 10 0C
 255+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 255+ 864C 81 E0 01 43
 256+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 256+ 8654 10 80 18 00
 257+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 257+ 865C 60 01 80 02
 258+ 8660
 259+ 8660
 260+ 8660
 261+ 8660
 262+ 8660
# file closed: Sprites_e_indices.asm
 110  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 8719 40           	db $40												; (Ctrl_0).
 142+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 871E 00 00
 143+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 146+ 8726 00           	db 0 												; (Columnas).
 147+ 8727 00 00        	defw 0												; (Limite_horizontal).
 148+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 872C
 150+ 872C              ; ---------- ---------- ---------- ---------- ----------
 151+ 872C              ;
 152+ 872C              ;	22/01/24
 153+ 872C              ;
 154+ 872C              ; 	Cada caja tiene 19 bytes !!!
 155+ 872C
 156+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 872F 00           	db %00000000										; (Attr).
 158+ 8730              ;	db 0												; (Cuad_objeto).
 159+ 8730 00           	db 0												; (Impacto).
 160+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 873D 00           	db 0												; (Ctrl_0).
 165+ 873E 00           	db 0												; (Ctrl_2).
 166+ 873F
 167+ 873F              ; ---------- ---------- ---------- ---------- ----------
 168+ 873F
 169+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 8742 00           	db %00000000										; (Attr).
 171+ 8743              ;	db 0												; (Cuad_objeto).
 172+ 8743 00           	db 0												; (Impacto).
 173+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 8750 00           	db 0												; (Ctrl_0).
 178+ 8751 00           	db 0												; (Ctrl_2).
 179+ 8752
 180+ 8752              ; ---------- ---------- ---------- ---------- ----------
 181+ 8752
 182+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8755 00           	db %00000000										; (Attr).
 184+ 8756              ;	db 0												; (Cuad_objeto).
 185+ 8756 00           	db 0												; (Impacto).
 186+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8763 00           	db 0												; (Ctrl_0).
 191+ 8764 00           	db 0												; (Ctrl_2).
 192+ 8765
 193+ 8765              ; ---------- ---------- ---------- ---------- ----------
 194+ 8765
 195+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8768 00           	db %00000000										; (Attr).
 197+ 8769              ;	db 0												; (Cuad_objeto).
 198+ 8769 00           	db 0												; (Impacto).
 199+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8776 00           	db 0												; (Ctrl_0).
 204+ 8777 00           	db 0												; (Ctrl_2).
 205+ 8778
 206+ 8778              ; ---------- ---------- ---------- ---------- ----------
 207+ 8778
 208+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 877B 00           	db %00000000										; (Attr).
 210+ 877C              ;	db 0												; (Cuad_objeto).
 211+ 877C 00           	db 0												; (Impacto).
 212+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8789 00           	db 0												; (Ctrl_0).
 217+ 878A 00           	db 0												; (Ctrl_2).
 218+ 878B
 219+ 878B              ; ---------- ---------- ---------- ---------- ----------
 220+ 878B
 221+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 878E 00           	db %00000000										; (Attr).
 223+ 878F              ;	db 0												; (Cuad_objeto).
 224+ 878F 00           	db 0												; (Impacto).
 225+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 879C 00           	db 0												; (Ctrl_0).
 230+ 879D 00           	db 0												; (Ctrl_2).
 231+ 879E
 232+ 879E              ; ---------- ---------- ---------- ---------- ----------
 233+ 879E
 234+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 87A1 00           	db %00000000										; (Attr).
 236+ 87A2              ;	db 0												; (Cuad_objeto).
 237+ 87A2 00           	db 0												; (Impacto).
 238+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 87AF 00           	db 0												; (Ctrl_0).
 243+ 87B0 00           	db 0												; (Ctrl_2).
 244+ 87B1
 245+ 87B1              ; -------------------------------------------------------------------------------------
 246+ 87B1              ;
 247+ 87B1              ;	11/1/24
 248+ 87B1              ;
 249+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 87B1              ;
 251+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 87B1
 256+ 87B1              Indice_de_definiciones_de_entidades
 257+ 87B1
 258+ 87B1 B5 87        	defw Entidad_1
 259+ 87B3 C2 87        	defw Entidad_2
 260+ 87B5
 261+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 87B5
 263+ 87B5              ;	BADSAT, (Satélite malvado).
 264+ 87B5
 265+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 87B8 04           	db %00000100										; (Attr).
 267+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 270+ 87BF 01           	db 1												; (Cuad_objeto).
 271+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 87C2
 273+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 87C5 02           	db %00000010										; (Attr).
 275+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 87CC 01           	db 1												; (Cuad_objeto).
 279+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 87CF
# file closed: Cajas_y_disparos.asm
 111  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 112  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
# file closed: Niveles.asm
 113  898A
 114  898A              ; ******************************************************************************************************************************************************************************************
 115  898A              ; Constantes.
 116  898A              ; ******************************************************************************************************************************************************************************************
 117  898A              ;
 118  898A              ; 25/12/23
 119  898A
 120  898A              ;
 121  898A              ; Constantes.
 122  898A              ;
 123  898A
 124  898A              Sprite_vacio equ $eae0
 125  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 126  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 127  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 128  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 129  898A
 130  898A              Almacen_de_scanlines_masticados_a_borrar equ $e800
 131  898A              Almacen_de_scanlines_masticados equ $e900
 132  898A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 133  898A              Almacen_de_movimientos_masticados_Amadeus equ $e700
 134  898A              ;
 135  898A              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 136  898A              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 137  898A              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 138  898A
 139  898A              Album_de_fotos_de_borrado equ $8056   ;   ($8056 - $80ab).
 140  898A
 141  898A
 142  898A              Album_de_fotos_disparos equ $80ac  ;  (8056h - 8101h).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 143  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 144  898A              ;														; 55 Bytes.
 145  898A
 146  898A              Album_de_fotos_Amadeus equ $8102  ;  (80ach - 810eh) ; 12 bytes.
 147  898A
 148  898A              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 149  898A
 150  898A              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 151  898A
 152  898A              ; ******************************************************************************************************************************************************************************************
 153  898A              ; Variables.
 154  898A              ; ******************************************************************************************************************************************************************************************
 155  898A              ;
 156  898A              ; 18/01/24
 157  898A              ;
 158  898A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 159  898A              ;
 160  898A
 161  898A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 162  898A
 163  898A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 164  898B              ;															- Patrón de movimiento.
 165  898B              ;															- Aspecto
 166  898B 00           Filas db 0												; Filas. [DRAW]
 167  898C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 168  898D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 169  898F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 170  8991 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 171  8992 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 172  8993
 173  8993              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 174  8993
 175  8993 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 176  8994              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 177  8994              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 178  8994 00           Attr db 0												; Atributos de la entidad:
 179  8995
 180  8995              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 181  8995              ;
 182  8995              ;	COLORES: 0 ..... NEGRO
 183  8995              ;    		 1 ..... AZUL
 184  8995              ; 			 2 ..... ROJO
 185  8995              ;			 3 ..... MAGENTA
 186  8995              ; 			 4 ..... VERDE
 187  8995              ; 			 5 ..... CIAN
 188  8995              ;			 6 ..... AMARILLO
 189  8995              ; 			 7 ..... BLANCO
 190  8995
 191  8995 00 00        Indice_Sprite_der defw 0
 192  8997 00 00        Indice_Sprite_izq defw 0
 193  8999 00 00        Puntero_DESPLZ_der defw 0
 194  899B 00 00        Puntero_DESPLZ_izq defw 0
 195  899D
 196  899D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 197  899F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 198  89A0
 199  89A0              ; Variables de objeto. (Características).
 200  89A0
 201  89A0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 202  89A1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 203  89A1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 204  89A1 00 00 00...  Variables_de_borrado ds 6
 205  89A7
 206  89A7 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 207  89A9              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 208  89A9
 209  89A9 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 210  89AB
 211  89AB              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 212  89AB              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 213  89AB
 214  89AB 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 215  89AD              ;														; _palabras que componen el "movimiento_masticado".
 216  89AD
 217  89AD              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 218  89AD
 219  89AD 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 220  89AE              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 221  89AE              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 222  89AE              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 223  89AE              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 224  89AE              ;
 225  89AE              ; 														DESCRIPCIÖN:
 226  89AE              ;
 227  89AE              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 228  89AE              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 229  89AE              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 230  89AE              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 231  89AE              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 232  89AE              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 233  89AE              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 234  89AE              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 235  89AE              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 236  89AE              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 237  89AE              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 238  89AE              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 239  89AE              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 240  89AE              ;
 241  89AE              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 242  89AE              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 243  89AE              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 244  89AE
 245  89AE              ; Variables de funcionamiento. [DRAW].
 246  89AE
 247  89AE 00           Columnas db 0
 248  89AF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 249  89B1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 250  89B1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 251  89B2
 252  89B2              ; variables de control general.
 253  89B2
 254  89B2 00           Ctrl_2 db 0
 255  89B3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 256  89B3              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 257  89B3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 258  89B3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 259  89B3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 260  89B3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 261  89B3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 262  89B3              ;
 263  89B3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 264  89B3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 265  89B3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 266  89B3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 267  89B3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 268  89B3              ;														BIT 4, ???
 269  89B3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 270  89B3
 271  89B3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  89B4
 273  89B4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 274  89B4
 275  89B4              ;					         		---------;      ;---------
 276  89B4
 277  89B4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 278  89B4
 279  89B4              Perfiles_de_velocidad
 280  89B4
 281  89B4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 282  89B5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 283  89B6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 284  89B7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 285  89B8
 286  89B8              ; Contadores de 16 bits.
 287  89B8
 288  89B8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 289  89BA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 290  89BC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 291  89BE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 292  89C0
 293  89C0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 294  89C0
 295  89C0 00 E9        Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 296  89C2 00 E8        Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 297  89C4 02 80        Puntero_de_scanlines_en_album defw Album_de_fotos+2
 298  89C6
 299  89C6 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 300  89C8 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 301  89CA 00 00        Puntero_indice_mov_bucle defw 0							;
 302  89CC              ;
 303  89CC              ;
 304  89CC 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 305  89CD              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 306  89CD              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 307  89CD 00           Incrementa_puntero_backup db 0
 308  89CE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 309  89CF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 310  89CF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 311  89D0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 312  89D1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 313  89D2              ;
 314  89D2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 315  89D2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 316  89D2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 317  89D2              ;
 318  89D2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 319  89D2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 320  89D2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 321  89D2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 322  89D2              ;
 323  89D2              ;														;	"$ff" ..... Bucle infinito de repetición.
 324  89D2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 325  89D2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 326  89D2              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 327  89D2
 328  89D2 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 329  89D3
 330  89D3              ;														DESCRIPCIÓN:
 331  89D3              ;
 332  89D3              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 333  89D3              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 334  89D3              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 335  89D3              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 336  89D3              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 337  89D3              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 338  89D3
 339  89D3              ;														BIT 3, Recarga de nueva oleada.
 340  89D3              ;														BIT 4, Recarga de nueva oleada.
 341  89D3              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 342  89D3              ;														BIT 6, **** Frame completo.
 343  89D3              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 344  89D3
 345  89D3 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 346  89D5              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 347  89D5              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 348  89D5              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 349  89D5
 350  89D5              ; Gestión de ENTIDADES y CAJAS.
 351  89D5
 352  89D5 00 00        Puntero_store_caja defw 0
 353  89D7 00 00        Puntero_restore_caja defw 0
 354  89D9 00 00        Indice_restore_caja defw 0
 355  89DB 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 356  89DC 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 357  89DD 00           Entidades_en_curso db 0									; ..... ..... .....
 358  89DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 359  89DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 360  89DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 361  89DF              ;														; _ (Numero_de_malotes)="0".
 362  89DF 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 363  89E1 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 364  89E3              ;														; _ puntero (Indice_entidades).
 365  89E3
 366  89E3              ;---------------------------------------------------------------------------------------------------------------
 367  89E3              ;
 368  89E3              ;	11/01/24
 369  89E3              ;
 370  89E3              ;	Álbumes.
 371  89E3
 372  89E3 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 373  89E5              ;														; _variable para almacenar lo posición del puntero_
 374  89E5              ; 														; _de pila, SP.
 375  89E5 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 376  89E7              ;														; La utiliza la rutina [Extrae_foto_registros].
 377  89E7 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 378  89E9 00 80        Stack_snapshot defw Album_de_fotos
 379  89EB AC 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 380  89ED
 381  89ED              ;End_Snapshot defw Album_de_fotos
 382  89ED              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 383  89ED AC 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 384  89EF              ;														; _el snapshot de los registros del siguiente disparo.
 385  89EF              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 386  89EF 02 81        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 387  89F1
 388  89F1 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 389  89F2              ;
 390  89F2              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 391  89F2              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 392  89F2              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 393  89F2
 394  89F2 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 395  89F3              ;
 396  89F3              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 397  89F3              ;
 398  89F3              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 399  89F3              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 400  89F3              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 401  89F3              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 402  89F3              ;
 403  89F3              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 404  89F3              ;															_ masticados ya generados.
 405  89F3              ;
 406  89F3              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 407  89F3              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 408  89F3              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 409  89F3              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 410  89F3
 411  89F3
 412  89F3              ; Gestión de Disparos.
 413  89F3
 414  89F3 00           Numero_de_disparotes db 0
 415  89F4 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 416  89F6 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 417  89F8 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 418  89F9              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 419  89F9              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 420  89F9 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 421  89FB              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 422  89FB              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 423  89FB              ;														; _produzca colisión.
 424  89FB 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 425  89FD              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 426  89FD 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 427  8A00              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 428  8A00 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 429  8A03              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 430  8A03 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 431  8A04
 432  8A04              ;---------------------------------------------------------------------------------------------------------------
 433  8A04
 434  8A04              ; Relojes y temporizaciones.
 435  8A04
 436  8A04 00           Contador_de_frames db 0
 437  8A05 00           Contador_de_frames_2 db 0
 438  8A06
 439  8A06 04           Clock_explosion db 4
 440  8A07 14           Clock_Entidades_en_curso db 20
 441  8A08 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 442  8A09              ;														; Repite la oleada de entidades.
 443  8A09 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 444  8A0A 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 445  8A0B 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 446  8A0C
 447  8A0C 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 448  8A0D 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 449  8A0E 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 450  8A0F
 451  8A0F              ;---------------------------------------------------------------------------------------------------------------
 452  8A0F
 453  8A0F              ; Gestión de NIVELES.
 454  8A0F
 455  8A0F 00           Nivel db 0												; Nivel actual del juego.
 456  8A10 00 00        Puntero_indice_NIVELES defw 0
 457  8A12 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 458  8A14              ; 														; _ que definen el NIVEL.
 459  8A14              ; Y todo comienza aquí .....
 460  8A14              ;
 461  8A14              ; 	INICIO  *************************************************************************************************************************************************************************
 462  8A14              ;
 463  8A14              ;	5/1/24
 464  8A14
 465  8A14              START
 466  8A14
 467  8A14 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 468  8A17 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 469  8A19 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 470  8A1B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 471  8A1D F3           	DI
 472  8A1E
 473  8A1E              ;	ld a,%00000111
 474  8A1E              ;	call Cls
 475  8A1E CD 1C 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 476  8A21
 477  8A21              ; INICIALIZACIÓN.
 478  8A21
 479  8A21              ;	Inicializa 1er Nivel.
 480  8A21
 481  8A21 21 6B 89     	ld hl,Indice_de_niveles
 482  8A24 22 10 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 483  8A27 CD BD 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 484  8A2A              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 485  8A2A              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 486  8A2A              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 487  8A2A
 488  8A2A              ;	Provisional, (para desarrollo).
 489  8A2A
 490  8A2A              	;-
 491  8A2A              ;	ld hl,Numero_parcial_de_entidades
 492  8A2A              ;	ld b,(hl)
 493  8A2A              ;	inc b
 494  8A2A              ;	dec b
 495  8A2A              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 496  8A2A
 497  8A2A CD 02 8E     4 call Inicia_Entidades
 498  8A2D
 499  8A2D CD DF 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 500  8A30
 501  8A30              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 502  8A30              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 503  8A30              ; (Esto se dá cuando se inicia una nueva oleada).
 504  8A30
 505  8A30              ;	ld a,(Ctrl_1)
 506  8A30              ;	bit 3,a
 507  8A30              ;	jr nz,5F											; Loop
 508  8A30
 509  8A30              ; 	INICIA AMADEUS !!!!!
 510  8A30
 511  8A30              ;3 call Restore_Amadeus
 512  8A30              ;	call Inicia_Puntero_objeto
 513  8A30              ;	call Draw
 514  8A30
 515  8A30              ;	call Guarda_movimiento_masticado	;! Provisional
 516  8A30
 517  8A30              ;	call Guarda_foto_registros
 518  8A30              ;	call Guarda_datos_de_borrado_Amadeus
 519  8A30
 520  8A30              ;	ld de,Amadeus_db
 521  8A30              ;	call Store_Amadeus
 522  8A30
 523  8A30              ; 	INICIA DISPAROS !!!!!
 524  8A30
 525  8A30              ;	call Inicia_Puntero_Disparo_Entidades
 526  8A30              ;	call Inicia_Puntero_Disparo_Amadeus
 527  8A30
 528  8A30              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 529  8A30
 530  8A30              ;5 call Inicia_punteros_de_cajas
 531  8A30              ;	call Restore_entidad
 532  8A30
 533  8A30              ;	ld a,(Ctrl_1)
 534  8A30              ;	bit 3,a
 535  8A30              ;	jr z,6F
 536  8A30
 537  8A30              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 538  8A30
 539  8A30              ;	ld hl,Ctrl_1
 540  8A30              ;	res 3,(hl)
 541  8A30              ;	jr Main
 542  8A30
 543  8A30              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 544  8A30
 545  8A30              6
 546  8A30 CD 2B 8C     	call Calcula_numero_de_malotes
 547  8A33 CD 1A 8B     	call Genera_scanlines_masticados
 548  8A36 CD 01 8B     	call Genera_scanlines_masticados_a_borrar
 549  8A39
 550  8A39 21 F1 89     	ld hl,Ctrl_3
 551  8A3C CB C6        	set 0,(hl)											; Frame completo.
 552  8A3E FB           	ei
 553  8A3F 76           	halt
 554  8A40
 555  8A40              ; ------------------------------------
 556  8A40
 557  8A40              Main
 558  8A40              ;
 559  8A40              ;	11/12/23
 560  8A40
 561  8A40              ; Aparece nueva entidad ???
 562  8A40
 563  8A40              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 564  8A40              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 565  8A40              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 566  8A40              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 567  8A40              ;														; _un 2º bloque.
 568  8A40
 569  8A40 CD E4 8A     	call Limpia_Almacen_de_scanlines_masticados
 570  8A43 CD E2 8A     	call Construye_album_de_borrado
 571  8A46 CD 17 81     	call Limpia_y_reinicia_Stack_Snapshot 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 572  8A49              ; 													 	; _(Stack_snapshot).
 573  8A49
 574  8A49 3A 07 8A     	ld a,(Clock_Entidades_en_curso)
 575  8A4C 47           	ld b,a
 576  8A4D 3A 04 8A     	ld a,(Contador_de_frames)
 577  8A50 B8           	cp b
 578  8A51 20 18        	jr nz,13F
 579  8A53
 580  8A53              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 581  8A53              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 582  8A53
 583  8A53 3A DC 89     21 ld a,(Numero_parcial_de_entidades)
 584  8A56 47           	ld b,a
 585  8A57 3A DD 89     	ld a,(Entidades_en_curso)
 586  8A5A B8           	cp b
 587  8A5B 28 0E        	jr z,13F
 588  8A5D 30 0C        	jr nc,13F
 589  8A5F
 590  8A5F 3C           	inc a
 591  8A60 32 DD 89     	ld (Entidades_en_curso),a
 592  8A63
 593  8A63              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 594  8A63
 595  8A63 3A 07 8A     	ld a,(Clock_Entidades_en_curso)
 596  8A66              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 597  8A66              ;! _ IMPREDECIBLE !!!!
 598  8A66 C6 64        	add 100
 599  8A68 32 07 8A     	ld (Clock_Entidades_en_curso),a
 600  8A6B
 601  8A6B              ; -------------------------------------------------------------------------------------------------------------
 602  8A6B
 603  8A6B              ; Habilita disparos.
 604  8A6B
 605  8A6B              13
 606  8A6B
 607  8A6B              ;	ld hl,Disparo_Amadeus
 608  8A6B              ;	ld de,CLOCK_repone_disparo_Amadeus
 609  8A6B              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 610  8A6B
 611  8A6B              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 612  8A6B              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 613  8A6B              ;	call Habilita_disparos
 614  8A6B
 615  8A6B              ; COLISIONES.
 616  8A6B
 617  8A6B              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 618  8A6B
 619  8A6B              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 620  8A6B              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 621  8A6B              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 622  8A6B
 623  8A6B              ;	xor a
 624  8A6B              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 625  8A6B
 626  8A6B              ;	call Inicia_punteros_de_cajas
 627  8A6B              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 628  8A6B              ; 														; _ en DRAW.
 629  8A6B
 630  8A6B              ;	ld a,(Filas)
 631  8A6B              ;	and a
 632  8A6B              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 633  8A6B              ;	call Incrementa_punteros_de_cajas
 634  8A6B              ;	jr 12B
 635  8A6B
 636  8A6B              ; ---------------------------------------------------------------------------------------
 637  8A6B
 638  8A6B 3A DC 89     10 ld a,(Numero_parcial_de_entidades)
 639  8A6E 47               ld b,a
 640  8A6F A7           	and a
 641  8A70 20 00        	jr nz,11F
 642  8A72
 643  8A72              ;	ld hl,Ctrl_1;
 644  8A72              ;	bit 4,(hl)
 645  8A72              ;	jp nz,16F
 646  8A72
 647  8A72              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 648  8A72
 649  8A72              ;	ld hl,Ctrl_1
 650  8A72              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 651  8A72
 652  8A72              ;	ld a,(Contador_de_frames)
 653  8A72              ;	inc a
 654  8A72              ;	ld (Activa_recarga_cajas),a
 655  8A72
 656  8A72              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 657  8A72
 658  8A72 3A DD 89     11 ld a,(Entidades_en_curso)
 659  8A75 A7           	and a
 660  8A76 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 661  8A78 47           	ld b,a												; No hay entidades que gestionar.
 662  8A79
 663  8A79              ; ( Código que ejecutamos con cada entidad: ).
 664  8A79
 665  8A79              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 666  8A79
 667  8A79 C5           15 push bc 												; Nº de entidades en curso.
 668  8A7A
 669  8A7A CD B2 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 670  8A7D
 671  8A7D 3A F1 89     	ld a,(Ctrl_3)
 672  8A80 CB 57        	bit 2,a
 673  8A82 F3           	di
 674  8A83 20 FE        	jr nz,$
 675  8A85 FB           	ei
 676  8A86
 677  8A86              ; Existe "Entidad_guía" ???.
 678  8A86              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 679  8A86
 680  8A86              ;	ld a,(Ctrl_3)
 681  8A86              ;	bit 1,a
 682  8A86              ;	jr nz,22F
 683  8A86
 684  8A86              ; Almacén de "Movimientos_masticados" lleno ???
 685  8A86              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 686  8A86              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 687  8A86
 688  8A86              ;;	ld a,(Ctrl_3)
 689  8A86              ;;	bit 3,a
 690  8A86              ;;	jr nz,22F
 691  8A86
 692  8A86              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 693  8A86
 694  8A86              ;	ld hl,Ctrl_2
 695  8A86              ;	set 5,(hl)
 696  8A86              ;	ld hl,Ctrl_3
 697  8A86              ;	set 1,(hl)
 698  8A86
 699  8A86              ; Impacto ???
 700  8A86
 701  8A86              ;22 ld a,(Impacto)
 702  8A86              ;	and a
 703  8A86              ;	jr z,8F
 704  8A86
 705  8A86              ; Hay Impacto en esta entidad.
 706  8A86
 707  8A86              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 708  8A86              ;	dec (hl)
 709  8A86              ;	jp nz,17F
 710  8A86
 711  8A86              ;! Velocidad de la animación de la explosión.
 712  8A86
 713  8A86              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 714  8A86              ;														; _,(velocidad de la explosión).
 715  8A86              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 716  8A86
 717  8A86              ;	call Repone_datos_de_borrado
 718  8A86              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 719  8A86
 720  8A86              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 721  8A86
 722  8A86              ;	ld a,(Ctrl_2)
 723  8A86              ;	bit 1,a
 724  8A86              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 725  8A86
 726  8A86              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 727  8A86
 728  8A86              ;	ld a,(CTRL_DESPLZ)
 729  8A86              ;	and a
 730  8A86              ;	jr nz,18F
 731  8A86
 732  8A86              ;	ld hl,Indice_Explosion_2x2-2
 733  8A86              ;	ld (Puntero_DESPLZ_der),hl
 734  8A86              ;	jr 19F
 735  8A86
 736  8A86              ;18 ld hl,Indice_Explosion_2x3-2
 737  8A86              ;	ld (Puntero_DESPLZ_der),hl
 738  8A86
 739  8A86              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 740  8A86              ;	set 1,(hl)
 741  8A86              ;	jr 7F
 742  8A86
 743  8A86              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 744  8A86              ; _con las coordenadas de la entidad almacenada en DRAW.
 745  8A86
 746  8A86              ;8 ld a,(Ctrl_1)
 747  8A86              ;	bit 2,a
 748  8A86              ;	jr z,7F
 749  8A86
 750  8A86              ;	ld hl,(Coordenadas_disparo_certero)
 751  8A86              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 752  8A86              ;														; E contiene la coordenada_X del disparo.
 753  8A86              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 754  8A86              ;														; H FILA, (Coordenada_y de la entidad).
 755  8A86              ;	and a
 756  8A86              ;	sbc hl,de
 757  8A86
 758  8A86              ;	call Determina_resultado_comparativa
 759  8A86
 760  8A86              ;	ld a,b
 761  8A86              ;	and a
 762  8A86              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 763  8A86
 764  8A86              ; ----- ----- -----
 765  8A86
 766  8A86              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 767  8A86              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 768  8A86
 769  8A86              ;	ld hl,Ctrl_1
 770  8A86              ;	res 2,(hl)
 771  8A86
 772  8A86 CD A8 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 773  8A89
 774  8A89              ;	ld a,(Ctrl_0)
 775  8A89              ;	bit 4,a
 776  8A89              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 777  8A89
 778  8A89              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 779  8A89              ; [[[
 780  8A89              ;	call Detecta_disparo_entidad
 781  8A89              ; ]]]
 782  8A89
 783  8A89 CD 6C 8E     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 784  8A8C
 785  8A8C              ;	ld hl,Ctrl_0
 786  8A8C              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 787  8A8C
 788  8A8C CD 5C 8E     17 call Store_Restore_cajas
 789  8A8F
 790  8A8F C1           	pop bc
 791  8A90
 792  8A90 10 E7        	djnz 15B
 793  8A92
 794  8A92 CD DF 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 795  8A95
 796  8A95              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 797  8A95              ; Hemos gestionado todas las unidades.
 798  8A95              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 799  8A95
 800  8A95              ;	ld hl,Ctrl_1
 801  8A95              ;	res 2,(hl)
 802  8A95
 803  8A95              16
 804  8A95
 805  8A95 CD 2B 8C     	call Calcula_numero_de_malotes
 806  8A98 CD 1A 8B     	call Genera_scanlines_masticados
 807  8A9B
 808  8A9B 21 F1 89     	ld hl,Ctrl_3
 809  8A9E CB C6        	set 0,(hl)											; Frame completo.
 810  8AA0
 811  8AA0 AF           	xor a
 812  8AA1 D3 FE        	out ($fe),a
 813  8AA3 76           	halt
 814  8AA4
 815  8AA4              ; ----------------------------------------
 816  8AA4
 817  8AA4              ;	ld a,(Ctrl_1) 										; Existe Loop?
 818  8AA4              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 819  8AA4 CA 40 8A     	jp z,Main
 820  8AA7
 821  8AA7              ; RECARGA DE NUEVA OLEADA.
 822  8AA7
 823  8AA7              ;	ld a,(Contador_de_frames)
 824  8AA7              ;	ld b,a
 825  8AA7              ;	ld a,(Activa_recarga_cajas)
 826  8AA7              ;	cp b
 827  8AA7              ;	jr z,20F
 828  8AA7
 829  8AA7              ;	ld hl,Ctrl_1
 830  8AA7              ;	set 4,(hl)
 831  8AA7              ;	jp Main
 832  8AA7
 833  8AA7              ;20 ld hl,Ctrl_1
 834  8AA7              ;	res 4,(hl)
 835  8AA7
 836  8AA7              ;	ld a,(Contador_de_frames)
 837  8AA7
 838  8AA7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 839  8AA7              ;! _ IMPREDECIBLE !!!!
 840  8AA7
 841  8AA7              ;	add 10
 842  8AA7              ;	ld (Clock_Entidades_en_curso),a
 843  8AA7
 844  8AA7              ;	jp 4B
 845  8AA7
 846  8AA7 C9           	ret
 847  8AA8
 848  8AA8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 849  8AA8              ;
 850  8AA8              ;	16/11/23
 851  8AA8
 852  8AA8              ;;Gestiona_Amadeus
 853  8AA8
 854  8AA8              ;! Activa/desactiva impacto con Amadeus.
 855  8AA8
 856  8AA8              ;	ld a,(Impacto)
 857  8AA8              ;	and a
 858  8AA8              ;	jr nz,2F
 859  8AA8
 860  8AA8              ;;	call Mov_Amadeus
 861  8AA8
 862  8AA8              ;;2 ld a,(Ctrl_0)
 863  8AA8              ;;	bit 4,a
 864  8AA8              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 865  8AA8
 866  8AA8              ;;	call Guarda_foto_entidad_a_pintar
 867  8AA8              ;;	call Guarda_datos_de_borrado_Amadeus
 868  8AA8
 869  8AA8              ;;1 ld hl,Ctrl_0
 870  8AA8              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 871  8AA8
 872  8AA8              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 873  8AA8
 874  8AA8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 875  8AA8
 876  8AA8              ;	call Calcula_numero_de_disparotes
 877  8AA8
 878  8AA8              ;;	ret
 879  8AA8
 880  8AA8              ; --------------------------------------------------------------------------------------------------------------
 881  8AA8              ;
 882  8AA8              ;	15/12/23
 883  8AA8
 884  8AA8              Mov_obj
 885  8AA8
 886  8AA8              ;	ld a,(Ctrl_2)
 887  8AA8              ;	bit 1,a
 888  8AA8              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 889  8AA8
 890  8AA8              ; Explosión:
 891  8AA8
 892  8AA8              ;	ld a,(Frames_explosion)
 893  8AA8              ;	and a
 894  8AA8              ;	jr nz,4F
 895  8AA8
 896  8AA8              ;!  Una alimaña menos!!!!!!!!!1
 897  8AA8
 898  8AA8              ; Se trataba de una Entidad_guía ???
 899  8AA8
 900  8AA8              ;	ld a,(Ctrl_2)
 901  8AA8              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 902  8AA8              ;	jr z,5F
 903  8AA8
 904  8AA8              ;	ld hl,Ctrl_3
 905  8AA8              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 906  8AA8
 907  8AA8              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 908  8AA8              ;!! _generado puede ser distinto, (aletoriedad).
 909  8AA8
 910  8AA8              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 911  8AA8              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 912  8AA8              ;	dec (hl)
 913  8AA8              ;	ld hl,Entidades_en_curso
 914  8AA8              ;	dec (hl)
 915  8AA8              ;	ld hl,Numero_de_entidades
 916  8AA8              ;	dec (hl)
 917  8AA8              ;	jr 3F
 918  8AA8
 919  8AA8              ; -----
 920  8AA8
 921  8AA8              ;	`Movemos´ la explosión.
 922  8AA8
 923  8AA8              ;4 ld hl,(Puntero_DESPLZ_der)
 924  8AA8              ;	inc hl
 925  8AA8              ;	inc hl
 926  8AA8              ;	call Extrae_address
 927  8AA8              ;;	ld (Puntero_objeto),hl
 928  8AA8
 929  8AA8              ;;	ld hl,Frames_explosion
 930  8AA8              ;;	dec (hl)
 931  8AA8
 932  8AA8              ;;	ld hl,Ctrl_0
 933  8AA8              ;;	set 4,(hl);;
 934  8AA8
 935  8AA8              ;;	jr 3F
 936  8AA8
 937  8AA8              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 938  8AA8
 939  8AA8              ;2 xor a
 940  8AA8              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 941  8AA8
 942  8AA8              ; Movemos Entidades malignas.
 943  8AA8              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 944  8AA8
 945  8AA8              ;	ld a,(Ctrl_2)
 946  8AA8              ;	bit 5,a
 947  8AA8              ;	jr nz,8F
 948  8AA8
 949  8AA8              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 950  8AA8              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 951  8AA8              ;	jr 7F
 952  8AA8
 953  8AA8              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 954  8AA8
 955  8AA8              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 956  8AA8              ;	bit 4,a
 957  8AA8              ;	ret z
 958  8AA8
 959  8AA8              ; Ha habido desplazamiento de la entidad maligna.
 960  8AA8              ; Ha llegado a zona de AMADEUS ???
 961  8AA8
 962  8AA8              ;7 ld a,(Coordenada_y)
 963  8AA8              ;	cp $14
 964  8AA8              ;	jr c,1F
 965  8AA8
 966  8AA8              ; ---------
 967  8AA8
 968  8AA8              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 969  8AA8              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 970  8AA8
 971  8AA8              ;	di
 972  8AA8              ;	call Genera_coordenadas_X
 973  8AA8              ;	call Compara_coordenadas_X
 974  8AA8              ;	ei
 975  8AA8
 976  8AA8              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 977  8AA8
 978  8AA8              ; ---------
 979  8AA8
 980  8AA8              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 981  8AA8              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 982  8AA8              ;	call Limpia_Variables_de_borrado
 983  8AA8
 984  8AA8 C9           3 ret
 985  8AA9
 986  8AA9              ; --------------------------------------------------------------------------------------------------------------
 987  8AA9              ;
 988  8AA9              ;	29/1/23
 989  8AA9
 990  8AA9              Mov_Amadeus
 991  8AA9
 992  8AA9              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 993  8AA9
 994  8AA9 CD 51 96     	call Mov_right
 995  8AAC
 996  8AAC 3A AD 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 997  8AAF CB 67        	bit 4,a
 998  8AB1 C8           	ret z
 999  8AB2
1000  8AB2              ; ---------
1001  8AB2
1002  8AB2              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1003  8AB2 CD 80 8D     	call Repone_datos_de_borrado_Amadeus
1004  8AB5 CD 1D 8C     	call Limpia_Variables_de_borrado
1005  8AB8
1006  8AB8 C9           	ret
1007  8AB9
1008  8AB9              ; -----------------------------------------------------------------------------------
1009  8AB9              ;
1010  8AB9              ;	20/01/24
1011  8AB9              ;
1012  8AB9              ;
1013  8AB9
1014  8AB9              Construye_movimientos_masticados_entidad
1015  8AB9
1016  8AB9 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1017  8ABC E5           	push hl
1018  8ABD CD 81 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1019  8AC0              ;															; _ el (Contador_de_mov_masticados).
1020  8AC0 CD 7D 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1021  8AC3              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1022  8AC3              ;	call Recompone_posicion_inicio
1023  8AC3
1024  8AC3 CD B3 8F     1 call Draw
1025  8AC6 CD 65 8B     	call Guarda_movimiento_masticado
1026  8AC9
1027  8AC9 CD 27 99     	call Movimiento
1028  8ACC
1029  8ACC 3A F1 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1030  8ACF CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1031  8AD1 28 F0        	jr z,1B
1032  8AD3
1033  8AD3              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1034  8AD3              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1035  8AD3
1036  8AD3 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1037  8AD4 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1038  8AD7
1039  8AD7              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1040  8AD7
1041  8AD7 CD 8B 9A     	call Situa_en_contador_general_de_mov_masticados
1042  8ADA
1043  8ADA              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1044  8ADA              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1045  8ADA
1046  8ADA ED 4B AB 89  	ld bc,(Contador_de_mov_masticados)
1047  8ADE 71           	ld (hl),c
1048  8ADF 23           	inc hl
1049  8AE0 70           	ld (hl),b
1050  8AE1
1051  8AE1 C9           	ret
1052  8AE2
1053  8AE2              ; -----------------------------------------------------------------------------------
1054  8AE2              ;
1055  8AE2              ;	28/02/24
1056  8AE2              ;
1057  8AE2
1058  8AE2 18 FE        Construye_album_de_borrado jr $
1059  8AE4
1060  8AE4              ; -----------------------------------------------------------------------------------
1061  8AE4              ;
1062  8AE4              ;	28/02/24
1063  8AE4              ;
1064  8AE4
1065  8AE4              Limpia_Almacen_de_scanlines_masticados
1066  8AE4
1067  8AE4 2A C0 89     	ld hl,(Puntero_de_scanlines_masticados)
1068  8AE7 01 00 E9     	ld bc,Almacen_de_scanlines_masticados
1069  8AEA A7           	and a
1070  8AEB ED 42        	sbc hl,bc
1071  8AED C8           	ret z 												; Salimos. No hay scanlines masticados que copiar.
1072  8AEE
1073  8AEE E5           	push hl
1074  8AEF C1           	pop bc
1075  8AF0
1076  8AF0 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1077  8AF3 11 01 E9     	ld de,Almacen_de_scanlines_masticados+1
1078  8AF6
1079  8AF6 AF           	xor a
1080  8AF7 77           	ld (hl),a
1081  8AF8
1082  8AF8 ED B0        	ldir
1083  8AFA
1084  8AFA 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1085  8AFD 22 C0 89     	ld (Puntero_de_scanlines_masticados),hl
1086  8B00
1087  8B00 C9           	ret
1088  8B01
1089  8B01              ; -----------------------------------------------------------------------------------
1090  8B01              ;
1091  8B01              ;	28/02/24
1092  8B01              ;
1093  8B01
1094  8B01              Genera_scanlines_masticados_a_borrar
1095  8B01
1096  8B01 2A C0 89     	ld hl,(Puntero_de_scanlines_masticados)
1097  8B04 01 00 E9     	ld bc,Almacen_de_scanlines_masticados
1098  8B07 A7           	and a
1099  8B08 ED 42        	sbc hl,bc
1100  8B0A C8           	ret z 												; Salimos. No hay scanlines masticados que copiar.
1101  8B0B
1102  8B0B E5           	push hl
1103  8B0C C1           	pop bc
1104  8B0D
1105  8B0D 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1106  8B10 11 00 E8     	ld de,Almacen_de_scanlines_masticados_a_borrar
1107  8B13 ED B0        	ldir
1108  8B15
1109  8B15 ED 53 C2 89  	ld (Puntero_de_scanlines_masticados_a_borrar),de
1110  8B19
1111  8B19 C9           	ret
1112  8B1A
1113  8B1A              ; -----------------------------------------------------------------------------------
1114  8B1A              ;
1115  8B1A              ;	24/02/24
1116  8B1A              ;
1117  8B1A              ;	INPUTS: A Y B contienen (Numero_de_malotes).
1118  8B1A
1119  8B1A              Genera_scanlines_masticados
1120  8B1A
1121  8B1A A7           	and a
1122  8B1B C8           	ret z 												; Salimos si no hay malotes que pintar.
1123  8B1C
1124  8B1C 2A C4 89     	ld hl,(Puntero_de_scanlines_en_album) 				; Dirección donde se encuentra el puntero de impresión.
1125  8B1F ED 5B C0 89  	ld de,(Puntero_de_scanlines_masticados)
1126  8B23
1127  8B23 C5           1 push bc
1128  8B24
1129  8B24 7E           	ld a,(hl)
1130  8B25 12           	ld (de),a
1131  8B26 73           	ld (hl),e
1132  8B27
1133  8B27 23           	inc hl
1134  8B28 7E           	ld a,(hl)
1135  8B29 72           	ld (hl),d
1136  8B2A
1137  8B2A 13           	inc de
1138  8B2B 12           	ld (de),a 											; 1er scanline, (Puntero_de_impresion) en el Almacén de scanlines masticados.
1139  8B2C              ;				                                        ; La dirección donde se encuentra el (Puntero_de_impresion) dentro del almacén de scanlines_masticados_
1140  8B2C              ; 														; _sustituye al (Puntero_de_impresion) dentro del Album_de_fotos.
1141  8B2C CD 3C 8B     	call Construimos_scanlines
1142  8B2F
1143  8B2F              ; Actualizamos (Puntero_de_scanlines_en_album). Nos situamos en el Puntero_de_impresion de la siguiente entidad.
1144  8B2F
1145  8B2F 01 05 00     	ld bc,5
1146  8B32 A7           	and a
1147  8B33 ED 4A        	adc hl,bc
1148  8B35 22 C4 89     	ld (Puntero_de_scanlines_en_album),hl
1149  8B38
1150  8B38 C1           	pop bc
1151  8B39
1152  8B39 10 E8        	djnz 1B
1153  8B3B
1154  8B3B C9           	ret
1155  8B3C
1156  8B3C              ; --------------------------------------------------------
1157  8B3C
1158  8B3C E5           Construimos_scanlines push hl
1159  8B3D C5           	push bc
1160  8B3E
1161  8B3E 06 0F        	ld b,15
1162  8B40 1B           	dec de
1163  8B41
1164  8B41 1A           	ld a,(de)
1165  8B42 6F           	ld l,a
1166  8B43 13           	inc de
1167  8B44 1A           	ld a,(de)
1168  8B45 67           	ld h,a 												; Puntero_de_impresión en HL.
1169  8B46
1170  8B46 13           	inc de
1171  8B47
1172  8B47 CD AC 92     1 call NextScan
1173  8B4A
1174  8B4A              ; Entramos en memoria de attr.???
1175  8B4A
1176  8B4A              ; Si es así, decrementamos H. (Repetimos el último scancline).
1177  8B4A
1178  8B4A 7C           	ld a,h
1179  8B4B FE 58        	cp $58
1180  8B4D 20 03        	jr nz,2F
1181  8B4F
1182  8B4F 21 00 00     	ld hl,0 											; Scanline NO IMPRIMIBLE, "0".
1183  8B52
1184  8B52 7D           2 ld a,l
1185  8B53 12           	ld (de),a
1186  8B54 13           	inc de
1187  8B55 7C           	ld a,h
1188  8B56 12           	ld (de),a
1189  8B57
1190  8B57 13           	inc de
1191  8B58
1192  8B58 24           	inc h
1193  8B59 25           	dec h
1194  8B5A 28 02        	jr z,3F  											; No generamos más escanlines si hemos entrado en memoria de attr.
1195  8B5C
1196  8B5C 10 E9        	djnz 1B 											; 16 scanlines generados.
1197  8B5E
1198  8B5E ED 53 C0 89  3 ld (Puntero_de_scanlines_masticados),de 				; Actualizamos puntero.
1199  8B62
1200  8B62 C1           	pop bc
1201  8B63 E1           	pop hl
1202  8B64
1203  8B64 C9           	ret
1204  8B65
1205  8B65              ; -----------------------------------------------------------------------------------
1206  8B65              ;
1207  8B65              ;	28/12/23
1208  8B65              ;
1209  8B65              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1210  8B65              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1211  8B65
1212  8B65              Guarda_movimiento_masticado
1213  8B65
1214  8B65 ED 73 E3 89  	ld (Stack),sp
1215  8B69 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1216  8B6D
1217  8B6D E5           	push hl
1218  8B6E DD E5            push ix
1219  8B70 FD E5            push iy
1220  8B72
1221  8B72 ED 7B E3 89      ld sp,(Stack)
1222  8B76
1223  8B76 2A AB 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1224  8B79 23           	inc hl
1225  8B7A 22 AB 89     	ld (Contador_de_mov_masticados),hl
1226  8B7D
1227  8B7D CD 81 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1228  8B80              ;															; _ el (Contador_de_mov_masticados).
1229  8B80 C9               ret
1230  8B81
1231  8B81              ; --------------------------------------------------------------------------------------------------------------
1232  8B81              ;
1233  8B81              ;	12/1/24
1234  8B81              ;
1235  8B81              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1236  8B81
1237  8B81              Actualiza_Puntero_de_almacen_de_mov_masticados
1238  8B81
1239  8B81 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1240  8B84 01 06 00     	ld bc,6
1241  8B87 A7           	and a
1242  8B88 ED 4A        	adc hl,bc
1243  8B8A 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1244  8B8D C9           	ret
1245  8B8E
1246  8B8E              ; --------------------------------------------------------------------------------------------------------------
1247  8B8E              ;
1248  8B8E              ;	15/01/24
1249  8B8E              ;
1250  8B8E              ;	Cargamos los registros_
1251  8B8E              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1252  8B8E              ;
1253  8B8E              ;	HL contiene la dirección de la rutina de impresión.
1254  8B8E              ;	IX contiene el puntero de impresión.
1255  8B8E              ;	IY contiene (Puntero_objeto).
1256  8B8E
1257  8B8E
1258  8B8E ED 73 E3 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1259  8B92 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1260  8B96
1261  8B96 FD E1        	pop iy
1262  8B98 DD E1        	pop ix
1263  8B9A E1           	pop hl
1264  8B9B
1265  8B9B ED 73 A9 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1266  8B9F
1267  8B9F ED 7B E3 89  	ld sp,(Stack)
1268  8BA3
1269  8BA3 C9           	ret
1270  8BA4
1271  8BA4              ; --------------------------------------------------------------------------------------------------------------
1272  8BA4              ;
1273  8BA4              ;	28/12/23
1274  8BA4              ;
1275  8BA4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1276  8BA4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1277  8BA4
1278  8BA4              Guarda_foto_entidad_a_pintar
1279  8BA4
1280  8BA4 3A AD 89     	ld a,(Ctrl_0)
1281  8BA7 CB 77        	bit 6,a
1282  8BA9 28 04        	jr z,5F
1283  8BAB
1284  8BAB              ;	Guarda la foto de Amadeus.
1285  8BAB
1286  8BAB              ;	call Draw
1287  8BAB              ;	call Guarda_movimiento_masticado	;! Provisional
1288  8BAB CD BF 80     	call Guarda_foto_registros
1289  8BAE C9           	ret
1290  8BAF
1291  8BAF              ; ENTIDADES!
1292  8BAF              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1293  8BAF
1294  8BAF 3A F1 89     5 ld a,(Ctrl_3)
1295  8BB2 CB 5F        	bit 3,a
1296  8BB4 28 01        	jr z,1F
1297  8BB6
1298  8BB6              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1299  8BB6
1300  8BB6              4
1301  8BB6              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1302  8BB6 C9           	ret
1303  8BB7
1304  8BB7              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1305  8BB7
1306  8BB7 3A F1 89     1 ld a,(Ctrl_3)
1307  8BBA CB 57        	bit 2,a
1308  8BBC 20 10        	jr nz,6F
1309  8BBE
1310  8BBE              ; Entidad guía o fantasma ???
1311  8BBE
1312  8BBE 3A B2 89     	ld a,(Ctrl_2)
1313  8BC1 CB 6F        	bit 5,a
1314  8BC3 20 10        	jr nz,3F
1315  8BC5
1316  8BC5              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1317  8BC5
1318  8BC5 18 EF        	jr 4B
1319  8BC7
1320  8BC7              ; ENTIDAD_GUÍA:
1321  8BC7              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1322  8BC7              ; _guardando "movimientos_masticados".
1323  8BC7
1324  8BC7 3A F1 89     2 ld a,(Ctrl_3)
1325  8BCA CB 57        	bit 2,a
1326  8BCC 28 07        	jr z,3F
1327  8BCE
1328  8BCE              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1329  8BCE              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1330  8BCE
1331  8BCE CB 97        6 res 2,a
1332  8BD0 CB DF        	set 3,a
1333  8BD2 32 F1 89     	ld (Ctrl_3),a
1334  8BD5
1335  8BD5
1336  8BD5              ;	Esto sólo lo ejecuta una entidad guía.
1337  8BD5
1338  8BD5 CD B3 8F     3 	call Draw
1339  8BD8 CD 65 8B     	call Guarda_movimiento_masticado
1340  8BDB CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1341  8BDE
1342  8BDE              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1343  8BDE              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1344  8BDE
1345  8BDE              ;	call Convierte_guia_en_fantasma
1346  8BDE C9           	ret
1347  8BDF
1348  8BDF              ; *************************************************************************************************************************************************************
1349  8BDF              ;
1350  8BDF              ; 8/1/23
1351  8BDF              ;
1352  8BDF              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1353  8BDF              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1354  8BDF              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1355  8BDF
1356  8BDF              ; Destruye HL y DE !!!!!
1357  8BDF
1358  8BDF              Inicia_punteros_de_cajas
1359  8BDF
1360  8BDF 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1361  8BE2 CD 77 8C         call Extrae_address
1362  8BE5 22 D5 89         ld (Puntero_store_caja),hl
1363  8BE8 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1364  8BEB 22 D9 89     	ld (Indice_restore_caja),hl
1365  8BEE CD 77 8C     	call Extrae_address
1366  8BF1 22 D7 89     	ld (Puntero_restore_caja),hl
1367  8BF4 C9               ret
1368  8BF5
1369  8BF5              ; *************************************************************************************************************************************************************
1370  8BF5              ;
1371  8BF5              ; 8/1/23
1372  8BF5              ;
1373  8BF5              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1374  8BF5
1375  8BF5 21 7C 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1376  8BF8 22 F4 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1377  8BFB C9           	ret
1378  8BFC 21 64 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1379  8BFF 22 F6 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1380  8C02 C9           	ret
1381  8C03
1382  8C03              ; -------------------------------------------------------------------------------------------------------------
1383  8C03              ;
1384  8C03              ; 21/9/23
1385  8C03              ;
1386  8C03
1387  8C03              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1388  8C03
1389  8C03              Limpia_album_Amadeus
1390  8C03
1391  8C03 21 02 81     	ld hl,Album_de_fotos_Amadeus
1392  8C06 7E           	ld a,(hl)
1393  8C07 A7           	and a
1394  8C08 C8           	ret z
1395  8C09
1396  8C09 21 02 81     	ld hl,Album_de_fotos_Amadeus
1397  8C0C 11 03 81     	ld de,Album_de_fotos_Amadeus+1
1398  8C0F 01 0B 00     	ld bc,11
1399  8C12 AF           	xor a
1400  8C13 77           	ld (hl),a
1401  8C14 ED B0        	ldir
1402  8C16
1403  8C16 21 02 81     	ld hl,Album_de_fotos_Amadeus
1404  8C19 22 EF 89     	ld (End_Snapshot_Amadeus),hl
1405  8C1C
1406  8C1C C9           	ret
1407  8C1D
1408  8C1D 21 A1 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1409  8C20 11 A2 89     	ld de,Variables_de_borrado+1
1410  8C23 01 05 00     	ld bc,5
1411  8C26 AF           	xor a
1412  8C27 77           	ld (hl),a
1413  8C28 ED B0        	ldir
1414  8C2A C9           	ret
1415  8C2B
1416  8C2B              ; -------------------------------------------------------------------------------------------------------------
1417  8C2B              ;
1418  8C2B              ; 	21/02/24
1419  8C2B              ;
1420  8C2B              ;	MODIFICA: AF,HL,BC,DE
1421  8C2B              ;
1422  8C2B              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1423  8C2B              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1424  8C2B
1425  8C2B              Calcula_numero_de_malotes
1426  8C2B
1427  8C2B 21 00 80     	ld hl,Album_de_fotos
1428  8C2E EB           	ex de,hl
1429  8C2F 2A E9 89     	ld hl,(Stack_snapshot)
1430  8C32
1431  8C32 06 00        	ld b,0
1432  8C34 7D           	ld a,l
1433  8C35 93           	sub e
1434  8C36 28 07        	jr z,1F
1435  8C38
1436  8C38              ; Nº de malotes no es "0".
1437  8C38
1438  8C38 D6 06        2 sub 6
1439  8C3A 04           	inc b
1440  8C3B A7           	and a
1441  8C3C 20 FA        	jr nz,2B
1442  8C3E 78           	ld a,b
1443  8C3F
1444  8C3F 32 DE 89     1 ld (Numero_de_malotes),a
1445  8C42 C9           	ret
1446  8C43
1447  8C43              ; -------------------------------------------------------------------------------------------------------------
1448  8C43              ;
1449  8C43              ; 8/9/23
1450  8C43              ;
1451  8C43
1452  8C43              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1453  8C43              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1454  8C43
1455  8C43              Calcula_malotes_Amadeus
1456  8C43
1457  8C43 21 02 81     	ld hl,Album_de_fotos_Amadeus
1458  8C46 EB           	ex de,hl
1459  8C47 2A EF 89     	ld hl,(End_Snapshot_Amadeus)
1460  8C4A
1461  8C4A 7C           	ld a,h
1462  8C4B A7           	and a
1463  8C4C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1464  8C4E
1465  8C4E 06 00        	ld b,0
1466  8C50 7D           	ld a,l
1467  8C51 93           	sub e
1468  8C52 28 07        	jr z,1F
1469  8C54
1470  8C54              ; Nº de malotes no es "0".
1471  8C54
1472  8C54 D6 06        2 sub 6
1473  8C56 04           	inc b
1474  8C57 A7           	and a
1475  8C58 20 FA        	jr nz,2B
1476  8C5A 78           	ld a,b
1477  8C5B
1478  8C5B 32 DE 89     1 ld (Numero_de_malotes),a
1479  8C5E C9           	ret
1480  8C5F
1481  8C5F              ; -------------------------------------------------------------------------------------------------------------
1482  8C5F              ;
1483  8C5F              ; 28/2/23
1484  8C5F              ;
1485  8C5F
1486  8C5F              Calcula_numero_de_disparotes
1487  8C5F
1488  8C5F 21 AC 80     	ld hl,Album_de_fotos_disparos
1489  8C62 EB           	ex de,hl
1490  8C63 2A ED 89     	ld hl,(End_Snapshot_disparos)
1491  8C66
1492  8C66 06 00        	ld b,0
1493  8C68 7D           	ld a,l
1494  8C69 93           	sub e
1495  8C6A 28 07        	jr z,1F
1496  8C6C
1497  8C6C              ; Nº de malotes no es "0".
1498  8C6C
1499  8C6C D6 06        2 sub 6
1500  8C6E 04           	inc b
1501  8C6F A7           	and a
1502  8C70 20 FA        	jr nz,2B
1503  8C72 78           	ld a,b
1504  8C73
1505  8C73 32 F3 89     1 ld (Numero_de_disparotes),a
1506  8C76 C9           	ret
1507  8C77
1508  8C77              ; *************************************************************************************************************************************************************
1509  8C77              ;
1510  8C77              ; 20/10/22
1511  8C77              ;
1512  8C77              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1513  8C77              ;
1514  8C77              ; Destruye el puntero y DE !!!!!
1515  8C77
1516  8C77 5E           Extrae_address ld e,(hl)
1517  8C78 23           	inc hl
1518  8C79 56           	ld d,(hl)
1519  8C7A 2B           	dec hl
1520  8C7B EB           	ex de,hl
1521  8C7C C9           	ret
1522  8C7D
1523  8C7D              ; *************************************************************************************************************************************************************
1524  8C7D              ;
1525  8C7D              ;	20/1/24
1526  8C7D              ;
1527  8C7D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1528  8C7D              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1529  8C7D              ;
1530  8C7D              ;   Destruye HL y BC !!!!!,
1531  8C7D              ;
1532  8C7D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1533  8C7D              ;					"0" ..... Izquierda.
1534  8C7D
1535  8C7D              Inicia_Puntero_objeto
1536  8C7D
1537  8C7D 3A 9F 89     	ld a,(Cuad_objeto)
1538  8C80 E6 01        	and 1
1539  8C82 F5           	push af
1540  8C83 CC 9F 8C     	call z,Inicia_puntero_objeto_izq
1541  8C86 F1           	pop af
1542  8C87 C8           	ret z
1543  8C88 CD 8C 8C     	call Inicia_puntero_objeto_der
1544  8C8B C9           	ret
1545  8C8C
1546  8C8C              ; Arrancamos desde la parte izquierda de la pantalla.
1547  8C8C              ; Iniciamos (Indice_Sprite_der).
1548  8C8C
1549  8C8C 2A 95 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1550  8C8F 22 99 89     	ld (Puntero_DESPLZ_der),hl
1551  8C92 CD 77 8C     	call Extrae_address
1552  8C95 22 8F 89     	ld (Puntero_objeto),hl
1553  8C98
1554  8C98 2A 97 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1555  8C9B 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1556  8C9E C9           	ret
1557  8C9F
1558  8C9F              ; Arrancamos desde la parte derecha de la pantalla.
1559  8C9F              ; Iniciamos (Indice_Sprite_izq).
1560  8C9F
1561  8C9F 2A 97 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1562  8CA2 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1563  8CA5 CD 77 8C     	call Extrae_address
1564  8CA8 22 8F 89     	ld (Puntero_objeto),hl
1565  8CAB
1566  8CAB 2A 95 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1567  8CAE 22 99 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1568  8CB1 C9           	ret
1569  8CB2
1570  8CB2              ; **************************************************************************************************
1571  8CB2              ;
1572  8CB2              ;	31/01/24
1573  8CB2              ;
1574  8CB2              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1575  8CB2
1576  8CB2              Restore_entidad
1577  8CB2
1578  8CB2 2A D5 89     	ld hl,(Puntero_store_caja)
1579  8CB5 11 8A 89     	ld de,Bandeja_DRAW
1580  8CB8 7E           	ld a,(hl)
1581  8CB9 12           	ld (de),a
1582  8CBA 23           	inc hl 											; (Tipo).
1583  8CBB
1584  8CBB 11 91 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1585  8CBE 01 02 00     	ld bc,2
1586  8CC1 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1587  8CC3
1588  8CC3 13           	inc de
1589  8CC4 7E           	ld a,(hl)
1590  8CC5 12           	ld (de),a 										; Transferimos (Attr).
1591  8CC6 23           	inc hl
1592  8CC7
1593  8CC7 11 A0 89     	ld de,Impacto
1594  8CCA
1595  8CCA 7E           	ld a,(hl)
1596  8CCB 12           	ld (de),a 										; Transferimos (Impacto).
1597  8CCC 23           	inc hl
1598  8CCD
1599  8CCD 13           	inc de
1600  8CCE
1601  8CCE 01 06 00     	ld bc,6
1602  8CD1 ED B0        	ldir
1603  8CD3
1604  8CD3 01 07 00     	ld bc,7
1605  8CD6 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1606  8CD8              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1607  8CD8 11 B2 89     	ld de,Ctrl_2
1608  8CDB
1609  8CDB 7E           	ld a,(hl)
1610  8CDC 12           	ld (de),a 										; Transferimos (Ctrl_2).
1611  8CDD
1612  8CDD C9           	ret
1613  8CDE
1614  8CDE              ; **************************************************************************************************
1615  8CDE              ;
1616  8CDE              ;	08/05/23
1617  8CDE              ;
1618  8CDE              ;	Incrementamos los dos punteros de entidades. (+1).
1619  8CDE
1620  8CDE              Incrementa_punteros_de_cajas
1621  8CDE
1622  8CDE 2A D7 89     	ld hl,(Puntero_restore_caja)
1623  8CE1 22 D5 89     	ld (Puntero_store_caja),hl
1624  8CE4 2A D9 89     	ld hl,(Indice_restore_caja)
1625  8CE7 23           	inc hl
1626  8CE8 23           	inc hl
1627  8CE9 22 D9 89     	ld (Indice_restore_caja),hl
1628  8CEC CD 77 8C         call Extrae_address
1629  8CEF 22 D7 89         ld (Puntero_restore_caja),hl
1630  8CF2 C9               ret
1631  8CF3
1632  8CF3              ; **************************************************************************************************
1633  8CF3              ;
1634  8CF3              ;	21/12/23
1635  8CF3              ;
1636  8CF3              ;	Restore_Amadeus
1637  8CF3              ;
1638  8CF3              ;	Cargamos en DRAW los parámetros de Amadeus.
1639  8CF3              ;
1640  8CF3
1641  8CF3 E5           Restore_Amadeus	push hl
1642  8CF4 D5           	push de
1643  8CF5 C5            	push bc
1644  8CF6 21 F6 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1645  8CF9 11 8A 89     	ld de,Bandeja_DRAW
1646  8CFC 01 2A 00     	ld bc,42
1647  8CFF ED B0        	ldir
1648  8D01 C1           	pop bc
1649  8D02 D1           	pop de
1650  8D03 E1           	pop hl
1651  8D04 C9           	ret
1652  8D05
1653  8D05              ; *************************************************************************************************************************************************************
1654  8D05              ;
1655  8D05              ;	21/12/23
1656  8D05              ;
1657  8D05              ;	Store_Amadeus
1658  8D05              ;
1659  8D05              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1660  8D05              ;
1661  8D05              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1662  8D05              ;
1663  8D05              ;	DESTRUYE: HL y BC y DE.
1664  8D05
1665  8D05 21 8A 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1666  8D08 01 2A 00     	ld bc,42
1667  8D0B ED B0        	ldir
1668  8D0D C9           	ret
1669  8D0E
1670  8D0E              ; -----------------------------------------------------------
1671  8D0E              ;
1672  8D0E              ;	21/12/23
1673  8D0E              ;
1674  8D0E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1675  8D0E              ;
1676  8D0E              ;	Destruye: HL,BC,DE,A
1677  8D0E
1678  8D0E 21 8A 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1679  8D11 01 29 00     	ld bc,41
1680  8D14 AF           	xor a
1681  8D15 77           	ld (hl),a
1682  8D16 11 8B 89     	ld de,Bandeja_DRAW+1
1683  8D19 ED B0        	ldir
1684  8D1B C9           	ret
1685  8D1C
1686  8D1C              ; -----------------------------------------------------------
1687  8D1C
1688  8D1C              ; Teclado.
1689  8D1C
1690  8D1C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1691  8D1E DB FE        	in a,($fe)
1692  8D20 E6 01        	and $01
1693  8D22 28 02        	jr z,1f
1694  8D24 18 F6        	jr Pulsa_ENTER
1695  8D26 C9           1 ret
1696  8D27
1697  8D27              ; **************************************************************************************************
1698  8D27              ;
1699  8D27              ; Temporización.
1700  8D27
1701  8D27              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1702  8D27              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1703  8D27              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1704  8D27              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1705  8D27
1706  8D27              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1707  8D27              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1708  8D27              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1709  8D27
1710  8D27              ; A partir de $4f61 no hace falta DELAY.
1711  8D27
1712  8D27              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1713  8D27
1714  8D27 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1715  8D2A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1716  8D2B 78           	LD A,B
1717  8D2C A7           	AND A
1718  8D2D 20 FB        	JR NZ,wait
1719  8D2F C9           	RET
1720  8D30
1721  8D30              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1722  8D30              ;
1723  8D30              ;	5/3/23
1724  8D30              ;
1725  8D30              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1726  8D30
1727  8D30              Movimiento_Amadeus
1728  8D30
1729  8D30              ; Disparo.
1730  8D30
1731  8D30 3A 09 8A     	ld a,(Disparo_Amadeus)
1732  8D33 A7           	and a
1733  8D34 20 02        	jr nz,1F
1734  8D36 18 15        	jr 2F
1735  8D38
1736  8D38 3E F7        1 ld a,$f7													; "5" para disparar.
1737  8D3A DB FE        	in a,($fe)
1738  8D3C E6 10        	and $10
1739  8D3E
1740  8D3E F5           	push af
1741  8D3F CC A1 9A     	call z,Genera_disparo
1742  8D42 F1           	pop af
1743  8D43 20 08        	jr nz,2F
1744  8D45
1745  8D45 3A 09 8A     	ld a,(Disparo_Amadeus)
1746  8D48 EE 01        	xor 1
1747  8D4A 32 09 8A     	ld (Disparo_Amadeus),a
1748  8D4D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1749  8D4F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1750  8D51 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1751  8D53 CC 74 97         call z,Mov_left											;			"			"			"			"			"			"			"			"
1752  8D56
1753  8D56 3E F7        	ld a,$f7
1754  8D58 DB FE        	in a,($fe)
1755  8D5A E6 01        	and $01
1756  8D5C C8           	ret z
1757  8D5D
1758  8D5D 3E F7        	ld a,$f7
1759  8D5F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1760  8D61 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1761  8D63 CC 51 96     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1762  8D66 C9           	ret
1763  8D67
1764  8D67              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1765  8D67              ;
1766  8D67              ;	Rutina provisional para que los malotes cagen balas.
1767  8D67
1768  8D67              Detecta_disparo_entidad
1769  8D67
1770  8D67 3A 0C 8A     	ld a,(Disparo_entidad)
1771  8D6A A7           	and a
1772  8D6B C8           	ret z
1773  8D6C
1774  8D6C              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1775  8D6C
1776  8D6C              ;	ld a,$7f				; Detecta SPACE.
1777  8D6C              ;	in a,($fe)
1778  8D6C              ;	and 1
1779  8D6C              ;	ret nz
1780  8D6C
1781  8D6C CD A1 9A     	call Genera_disparo
1782  8D6F C9           	ret
1783  8D70
1784  8D70              ; ----------------------------------------------------------------------
1785  8D70              ;
1786  8D70              ;	8/9/23
1787  8D70
1788  8D70 2A EF 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1789  8D73 2B            	dec hl
1790  8D74 7E           	ld a,(hl)
1791  8D75 A7           	and a
1792  8D76 C8           	ret z										; Salimos si es álbum está vacío.
1793  8D77
1794  8D77 11 A6 89     	ld de,Variables_de_borrado+5
1795  8D7A 01 06 00     	ld bc,6
1796  8D7D ED B8        	lddr
1797  8D7F C9           	ret
1798  8D80
1799  8D80              ; ----------------------------------------------------------------------
1800  8D80              ;
1801  8D80              ;	9/9/23
1802  8D80
1803  8D80              Repone_datos_de_borrado_Amadeus
1804  8D80
1805  8D80 21 A1 89     	ld hl,Variables_de_borrado
1806  8D83 11 02 81     	ld de,Album_de_fotos_Amadeus
1807  8D86 01 06 00     	ld bc,6
1808  8D89 ED B0        	ldir
1809  8D8B
1810  8D8B EB           	ex de,hl
1811  8D8C 22 EF 89     	ld (End_Snapshot_Amadeus),hl
1812  8D8F
1813  8D8F C9           	ret
1814  8D90
1815  8D90              ; ----------------------------------------------------------------------
1816  8D90              ;
1817  8D90              ;	27/10/23
1818  8D90              ;
1819  8D90
1820  8D90              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1821  8D90              ;	_ Album_de_fotos correspondiente.
1822  8D90
1823  8D90              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1824  8D90              ;	_ durante el proceso de escritura.
1825  8D90
1826  8D90              Repone_datos_de_borrado
1827  8D90
1828  8D90 ED 5B E9 89  	ld de,(Stack_snapshot)
1829  8D94 21 A1 89     	ld hl,Variables_de_borrado
1830  8D97 01 06 00     	ld bc,6
1831  8D9A ED B0        	ldir
1832  8D9C
1833  8D9C EB           	ex de,hl
1834  8D9D 22 E9 89     	ld (Stack_snapshot),hl
1835  8DA0
1836  8DA0 C9           	ret
1837  8DA1
1838  8DA1              ; --------------------------------------------------------------------------------------
1839  8DA1
1840  8DA1              Pinta_Amadeus
1841  8DA1
1842  8DA1 CD 43 8C        	call Calcula_malotes_Amadeus
1843  8DA4 CD 4C 93     	call Extrae_foto_Amadeus
1844  8DA7 CD 03 8C     	call Limpia_album_Amadeus
1845  8DAA
1846  8DAA C9           	ret
1847  8DAB
1848  8DAB              ; -----------------------------------------------------------------------------------
1849  8DAB              ;
1850  8DAB              ;	10/12/23
1851  8DAB              ;
1852  8DAB              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1853  8DAB
1854  8DAB              Actualiza_relojes
1855  8DAB
1856  8DAB 3A F1 89     	ld a,(Ctrl_3)
1857  8DAE CB 47        	bit 0,a
1858  8DB0 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1859  8DB1
1860  8DB1 21 04 8A     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1861  8DB4 34           	inc (hl)
1862  8DB5
1863  8DB5 34           	inc (hl)
1864  8DB6 35           	dec (hl)
1865  8DB7 C0           	ret nz
1866  8DB8
1867  8DB8 21 05 8A     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1868  8DBB 34           	inc (hl)
1869  8DBC C9           	ret
1870  8DBD
1871  8DBD              ; ---------------------------------------------------------------
1872  8DBD
1873  8DBD              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8DBD              ;---------------------------------------------------------------------------------------------------------------
   2+ 8DBD              ;
   3+ 8DBD              ;   19/1/24
   4+ 8DBD              ;
   5+ 8DBD              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8DBD              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8DBD              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8DBD              ;	_ de la 1ª entidad del Nivel.
   9+ 8DBD              ;
  10+ 8DBD              ;	MODIFICA: HL,DE y A.
  11+ 8DBD              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8DBD
  13+ 8DBD              Inicializa_Nivel
  14+ 8DBD
  15+ 8DBD 2A 10 8A     	ld hl,(Puntero_indice_NIVELES)
  16+ 8DC0 CD 77 8C     	call Extrae_address
  17+ 8DC3 7E           	ld a,(hl)
  18+ 8DC4 32 DB 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8DC7 23           	inc hl
  20+ 8DC8 CD D5 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8DCB 22 12 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8DCE CD DE 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8DD1              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8DD1 CD EF 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8DD4 C9           	ret
  26+ 8DD5
  27+ 8DD5              ; ----------------------
  28+ 8DD5
  29+ 8DD5 11 B4 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8DD8 01 04 00     	ld bc,4
  31+ 8DDB ED B0        	ldir
  32+ 8DDD C9           	ret
  33+ 8DDE
  34+ 8DDE 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8DDF CD 2F 8F         call Calcula_salto_en_BC
  36+ 8DE2 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8DE5 A7               and a
  38+ 8DE6 ED 4A            adc hl,bc
  39+ 8DE8 CD 77 8C         call Extrae_address
  40+ 8DEB 22 C6 89         ld (Puntero_indice_mov),hl
  41+ 8DEE C9               ret
  42+ 8DEF
  43+ 8DEF 3A 8A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8DF2 CD 2F 8F     	call Calcula_salto_en_BC
  45+ 8DF5 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8DF8 A7               and a
  47+ 8DF9 ED 4A            adc hl,bc
  48+ 8DFB CD 77 8C         call Extrae_address
  49+ 8DFE 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8E01 C9           	ret
  51+ 8E02
  52+ 8E02              ;---------------------------------------------------------------------------------------------------------------
  53+ 8E02              ;
  54+ 8E02              ;   5/1/24
  55+ 8E02              ;
  56+ 8E02              ;	Destruye A,BC,HL,DE
  57+ 8E02
  58+ 8E02              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8E02              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8E02
  61+ 8E02              Inicia_Entidades
  62+ 8E02
  63+ 8E02              ; Preparamos los punteros de las cajas de entidades:
  64+ 8E02
  65+ 8E02 CD DF 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8E05              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8E05 CD 96 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8E08
  69+ 8E08 2A 12 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8E0B
  71+ 8E0B 22 12 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8E0E
  73+ 8E0E CD DD 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8E11
  75+ 8E11 2A 12 8A     	ld hl,(Datos_de_nivel)
  76+ 8E14
  77+ 8E14              ; En este punto:
  78+ 8E14              ;
  79+ 8E14              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8E14              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8E14
  82+ 8E14 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8E15
  84+ 8E15 7E           	ld a,(hl)
  85+ 8E16 CD 52 8E     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8E19
  87+ 8E19 CD 41 8F     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8E1C
  89+ 8E1C              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8E1C
  91+ 8E1C CD FF 8E     	call Busca_mov_masticados_segun_tipo
  92+ 8E1F
  93+ 8E1F A7           	and a
  94+ 8E20 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8E22
  96+ 8E22              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8E22
  98+ 8E22              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8E22              ;	_ de este tipo de entidad.
 100+ 8E22
 101+ 8E22 CD 8B 9A     	call Situa_en_contador_general_de_mov_masticados
 102+ 8E25 CD 98 9A     	call Transfiere_datos_de_contadores
 103+ 8E28
 104+ 8E28 18 06        	jr 4F
 105+ 8E2A
 106+ 8E2A CD B9 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8E2D
 108+ 8E2D              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8E2D              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8E2D              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8E2D              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8E2D              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8E2D
 114+ 8E2D CD BD 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8E30              ;																; _ Mov_masticados ya generados.
 116+ 8E30 CD 6C 8E     4 call Guarda_foto_de_mov_masticado
 117+ 8E33
 118+ 8E33              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8E33
 120+ 8E33 2A A7 89     	ld hl,(Puntero_de_impresion)
 121+ 8E36 CD A2 9F     	call Genera_coordenadas
 122+ 8E39 CD 68 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8E3C CD 76 8E     	call Limpiamos_bandeja_DRAW
 124+ 8E3F CD DE 8C     	call Incrementa_punteros_de_cajas
 125+ 8E42
 126+ 8E42              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8E42              ; _ entidad del Nivel.
 128+ 8E42
 129+ 8E42 3A F2 89     	ld a,(Ctrl_4)
 130+ 8E45 E6 F0        	and $f0
 131+ 8E47 32 F2 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8E4A
 133+ 8E4A              ; Siguiente entidad del Nivel.
 134+ 8E4A
 135+ 8E4A 2A 12 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8E4D 23           	inc hl 														; _ entidad del Nivel.
 137+ 8E4E
 138+ 8E4E C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8E4F
 140+ 8E4F 10 BA        	djnz 2B
 141+ 8E51
 142+ 8E51 C9           	ret
 143+ 8E52
 144+ 8E52              ; ---------------------------------------------------------------------
 145+ 8E52              ;
 146+ 8E52              ;	10/02/24
 147+ 8E52              ;
 148+ 8E52              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8E52              ;
 150+ 8E52              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8E52
 152+ 8E52              Definicion_segun_tipo
 153+ 8E52
 154+ 8E52 CD 2F 8F     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8E55 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8E58 CD 37 8F     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8E5B C9           	ret
 158+ 8E5C
 159+ 8E5C              ; ---------------------------------------------------------------------
 160+ 8E5C              ;
 161+ 8E5C              ;	30/01/24
 162+ 8E5C
 163+ 8E5C
 164+ 8E5C              Store_Restore_cajas
 165+ 8E5C
 166+ 8E5C              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8E5C
 168+ 8E5C 2A A7 89     	ld hl,(Puntero_de_impresion)
 169+ 8E5F CD A2 9F     	call Genera_coordenadas
 170+ 8E62
 171+ 8E62 CD 68 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8E65 CD 76 8E     	call Limpiamos_bandeja_DRAW
 173+ 8E68
 174+ 8E68              ; 	Entidad_sospechosa. 20/4/23
 175+ 8E68
 176+ 8E68              ;	ld a,(Impacto)
 177+ 8E68              ;	and a
 178+ 8E68              ;	jr z,1F
 179+ 8E68
 180+ 8E68              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8E68              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8E68              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8E68              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8E68              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8E68
 186+ 8E68
 187+ 8E68              ;1 ld hl,(Puntero_restore_caja)
 188+ 8E68              ;	ld a,(hl)
 189+ 8E68              ;	and a
 190+ 8E68              ;	push af
 191+ 8E68              ;	jr z,2F
 192+ 8E68
 193+ 8E68              ;	di
 194+ 8E68              ;	ld de,Bandeja_DRAW
 195+ 8E68              ;	ld bc,42
 196+ 8E68              ;	ldir
 197+ 8E68              ;	ei
 198+ 8E68
 199+ 8E68 CD DE 8C     2 call Incrementa_punteros_de_cajas
 200+ 8E6B C9           	ret
 201+ 8E6C
 202+ 8E6C
 203+ 8E6C              ; ---------------------------------------------------------------------
 204+ 8E6C              ;
 205+ 8E6C              ;	29/01/24
 206+ 8E6C
 207+ 8E6C              Guarda_foto_de_mov_masticado
 208+ 8E6C
 209+ 8E6C CD 8E 8B     	call Cargamos_registros_con_mov_masticado
 210+ 8E6F CD BF 80     	call Guarda_foto_registros
 211+ 8E72              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 212+ 8E72              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 213+ 8E72              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 214+ 8E72              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 8E72
 216+ 8E72 CD 81 8E     	call Decrementa_Contador_de_mov_masticados
 217+ 8E75 C9           	ret
 218+ 8E76
 219+ 8E76              ; ---------------------------------------------------------------------
 220+ 8E76              ;
 221+ 8E76              ;	25/01/24
 222+ 8E76
 223+ 8E76 21 8A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 224+ 8E79 06 2A        	ld b,42
 225+ 8E7B AF           	xor a
 226+ 8E7C
 227+ 8E7C 77           1 ld (hl),a
 228+ 8E7D 23           	inc hl
 229+ 8E7E 10 FC        	djnz 1B
 230+ 8E80
 231+ 8E80 C9           	ret
 232+ 8E81
 233+ 8E81              ; ---------------------------------------------------------------------
 234+ 8E81              ;
 235+ 8E81              ;	22/01/24
 236+ 8E81
 237+ 8E81 2A AB 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 238+ 8E84 2B           	dec hl
 239+ 8E85
 240+ 8E85 24           	inc h
 241+ 8E86 25           	dec h
 242+ 8E87
 243+ 8E87 FC 8E 8E     	call m,Reinicia_entidad_maliciosa
 244+ 8E8A
 245+ 8E8A              ;	jr nz,1F
 246+ 8E8A
 247+ 8E8A              ;	inc l
 248+ 8E8A              ;	dec l
 249+ 8E8A
 250+ 8E8A              ;	di
 251+ 8E8A              ;	jr z,$
 252+ 8E8A              ;	ei
 253+ 8E8A
 254+ 8E8A 22 AB 89     1 ld (Contador_de_mov_masticados),hl
 255+ 8E8D C9           	ret
 256+ 8E8E
 257+ 8E8E              ; ---------------------------------------------------------------------
 258+ 8E8E              ;
 259+ 8E8E              ;	10/2/24
 260+ 8E8E
 261+ 8E8E              Reinicia_entidad_maliciosa
 262+ 8E8E
 263+ 8E8E              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 264+ 8E8E
 265+ 8E8E CD 8B 9A     	call Situa_en_contador_general_de_mov_masticados
 266+ 8E91 CD 98 9A     	call Transfiere_datos_de_contadores
 267+ 8E94
 268+ 8E94              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 269+ 8E94
 270+ 8E94 3A 8A 89     	ld a,(Tipo)
 271+ 8E97 CD 52 8E     	call Definicion_segun_tipo
 272+ 8E9A
 273+ 8E9A E5           	push hl
 274+ 8E9B DD E1        	pop ix
 275+ 8E9D
 276+ 8E9D DD 6E 0B     	ld l,(ix+11)
 277+ 8EA0 DD 66 0C     	ld h,(ix+12)
 278+ 8EA3
 279+ 8EA3 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 280+ 8EA6
 281+ 8EA6              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 282+ 8EA6              ;	Queremos pintar la entidad en su posición de inicio.
 283+ 8EA6
 284+ 8EA6 2A E9 89     	ld hl,(Stack_snapshot)
 285+ 8EA9 01 06 00     	ld bc,6
 286+ 8EAC A7           	and a
 287+ 8EAD ED 42        	sbc hl,bc
 288+ 8EAF 22 E9 89     	ld (Stack_snapshot),hl
 289+ 8EB2
 290+ 8EB2 CD 8E 8B     	call Cargamos_registros_con_mov_masticado
 291+ 8EB5 CD BF 80     	call Guarda_foto_registros
 292+ 8EB8
 293+ 8EB8 2A AB 89     	ld hl,(Contador_de_mov_masticados)
 294+ 8EBB 2B           	dec hl
 295+ 8EBC
 296+ 8EBC C9           	ret
 297+ 8EBD
 298+ 8EBD
 299+ 8EBD
 300+ 8EBD
 301+ 8EBD              ; ---------------------------------------------------------------------
 302+ 8EBD              ;
 303+ 8EBD              ;	22/01/24
 304+ 8EBD
 305+ 8EBD 21 F2 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 306+ 8EC0 CB 46        	bit 0,(hl)
 307+ 8EC2 20 0D        	jr nz,1F
 308+ 8EC4 CB 4E        	bit 1,(hl)
 309+ 8EC6 20 0C        	jr nz,2F
 310+ 8EC8 CB 56        	bit 2,(hl)
 311+ 8ECA 20 0B        	jr nz,3F
 312+ 8ECC CB 5E        	bit 3,(hl)
 313+ 8ECE 20 0A        	jr nz,4F
 314+ 8ED0 C9           	ret
 315+ 8ED1
 316+ 8ED1 CB E6        1 set 4,(hl)
 317+ 8ED3 C9           	ret
 318+ 8ED4 CB EE        2 set 5,(hl)
 319+ 8ED6 C9           	ret
 320+ 8ED7 CB F6        3 set 6,(hl)
 321+ 8ED9 C9           	ret
 322+ 8EDA CB FE        4 set 7,(hl)
 323+ 8EDC C9           	ret
 324+ 8EDD
 325+ 8EDD              ; ---------------------------------------------------------------------
 326+ 8EDD              ;
 327+ 8EDD              ;	23/01/24
 328+ 8EDD              ;
 329+ 8EDD              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 330+ 8EDD              ;
 331+ 8EDD              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 332+ 8EDD              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 333+ 8EDD              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 334+ 8EDD              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 335+ 8EDD
 336+ 8EDD              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 337+ 8EDD
 338+ 8EDD 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 339+ 8EDE 3D           	dec a
 340+ 8EDF 20 06        	jr nz,1F
 341+ 8EE1
 342+ 8EE1              ; --- Tipo_1
 343+ 8EE1
 344+ 8EE1 21 F2 89     	ld hl,Ctrl_4
 345+ 8EE4 CB C6        	set 0,(hl)
 346+ 8EE6 C9           	ret
 347+ 8EE7
 348+ 8EE7 3D           1 dec a
 349+ 8EE8 20 06        	jr nz,2F
 350+ 8EEA
 351+ 8EEA              ; --- Tipo_2
 352+ 8EEA
 353+ 8EEA 21 F2 89     	ld hl,Ctrl_4
 354+ 8EED CB CE        	set 1,(hl)
 355+ 8EEF C9           	ret
 356+ 8EF0
 357+ 8EF0 3D           2 dec a
 358+ 8EF1 20 06        	jr nz,3F
 359+ 8EF3
 360+ 8EF3              ; --- Tipo_3
 361+ 8EF3
 362+ 8EF3 21 F2 89     	ld hl,Ctrl_4
 363+ 8EF6 CB D6        	set 2,(hl)
 364+ 8EF8 C9           	ret
 365+ 8EF9
 366+ 8EF9              ; --- Tipo_3
 367+ 8EF9
 368+ 8EF9 21 F2 89     3 ld hl,Ctrl_4
 369+ 8EFC CB D6        	set 2,(hl)
 370+ 8EFE C9           	ret
 371+ 8EFF
 372+ 8EFF              ; ---------------------------------------------------------------------
 373+ 8EFF              ;
 374+ 8EFF              ;	22/01/24
 375+ 8EFF
 376+ 8EFF 21 F2 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 377+ 8F02 CB 46        	bit 0,(hl)
 378+ 8F04 20 0E        	jr nz,1F
 379+ 8F06
 380+ 8F06 CB 4E        	bit 1,(hl)
 381+ 8F08 20 10        	jr nz,2F
 382+ 8F0A
 383+ 8F0A CB 56        	bit 2,(hl)
 384+ 8F0C 20 12        	jr nz,3F
 385+ 8F0E
 386+ 8F0E CB 5E        	bit 3,(hl)
 387+ 8F10 20 14        	jr nz,4F
 388+ 8F12 18 19        	jr 6F
 389+ 8F14
 390+ 8F14              ; Entidad_de_Tipo_1.
 391+ 8F14
 392+ 8F14 CB 66        1 bit 4,(hl)
 393+ 8F16 28 15        	jr z,6F
 394+ 8F18 18 10        	jr 5F
 395+ 8F1A
 396+ 8F1A              ; Entidad_de_Tipo_2.
 397+ 8F1A
 398+ 8F1A CB 6E        2 bit 5,(hl)
 399+ 8F1C 28 0F        	jr z,6F
 400+ 8F1E 18 0A        	jr 5F
 401+ 8F20
 402+ 8F20              ; Entidad_de_Tipo_3.
 403+ 8F20
 404+ 8F20 CB 76        3 bit 6,(hl)
 405+ 8F22 28 09        	jr z,6F
 406+ 8F24 18 04        	jr 5F
 407+ 8F26
 408+ 8F26              ; Entidad_de_Tipo_4.
 409+ 8F26
 410+ 8F26 CB 7E        4 bit 7,(hl)
 411+ 8F28 28 03        	jr z,6F
 412+ 8F2A
 413+ 8F2A              ; Esta entidad TIENE MOV_MASTICADOS.
 414+ 8F2A
 415+ 8F2A AF           5 xor a
 416+ 8F2B 3C           	inc a
 417+ 8F2C C9           	ret
 418+ 8F2D
 419+ 8F2D              ; Esta entidad NO TIENE MOV_MASTICADOS.
 420+ 8F2D
 421+ 8F2D AF           6 xor a
 422+ 8F2E C9           	ret
 423+ 8F2F
 424+ 8F2F              ;	------------------------------------------------------------------------------------
 425+ 8F2F              ;
 426+ 8F2F              ;	12/01/24
 427+ 8F2F              ;
 428+ 8F2F              ;	INPUTS:	A contiene el (Tipo) de entidad.
 429+ 8F2F              ;
 430+ 8F2F              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 431+ 8F2F              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 432+ 8F2F
 433+ 8F2F CB 27        Calcula_salto_en_BC sla a
 434+ 8F31 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 435+ 8F33 4F           	ld c,a
 436+ 8F34 06 00        	ld b,0
 437+ 8F36 C9           	ret
 438+ 8F37
 439+ 8F37              ; ------------------------------------------------------------------
 440+ 8F37              ;
 441+ 8F37              ;	19/1/24
 442+ 8F37              ;
 443+ 8F37              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 444+ 8F37              ;	Actualiza (Datos_de_entidad) con esa dirección.
 445+ 8F37
 446+ 8F37 A7           Situa_en_datos_de_definicion and a
 447+ 8F38 ED 4A        	adc hl,bc
 448+ 8F3A CD 77 8C     	call Extrae_address
 449+ 8F3D 22 E1 89         ld (Datos_de_entidad),hl
 450+ 8F40 C9           	ret
 451+ 8F41
 452+ 8F41              ; ------------------------------------------------------------------
 453+ 8F41
 454+ 8F41              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 455+ 8F41              ; 	inc de
 456+ 8F41              ; 	inc de
 457+ 8F41              ; 	ex de,hl
 458+ 8F41              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 459+ 8F41              ; 	ret
 460+ 8F41
 461+ 8F41              ; ----------------------------------------------------------------------------------------------------------
 462+ 8F41              ;
 463+ 8F41              ;	31/1/24
 464+ 8F41              ;
 465+ 8F41              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 466+ 8F41              ;	_ de entidad.
 467+ 8F41              ;
 468+ 8F41              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 469+ 8F41              ;
 470+ 8F41              ;
 471+ 8F41              ;	MODIFICA: HL,DE y BC
 472+ 8F41
 473+ 8F41
 474+ 8F41              Definicion_de_entidad_a_bandeja_DRAW
 475+ 8F41
 476+ 8F41 11 8A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 477+ 8F44 01 03 00     	ld bc,3
 478+ 8F47 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 479+ 8F49              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 480+ 8F49 11 94 89     	ld de,Attr									; DE en (Attr).
 481+ 8F4C 01 05 00     	ld bc,5
 482+ 8F4F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 483+ 8F51              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 484+ 8F51 11 9D 89     	ld de,Posicion_inicio
 485+ 8F54 01 03 00     	ld bc,3
 486+ 8F57 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 487+ 8F59              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 488+ 8F59 11 A9 89     	ld de,Puntero_de_almacen_de_mov_masticados
 489+ 8F5C 01 02 00     	ld bc,2
 490+ 8F5F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 491+ 8F61
 492+ 8F61 11 B3 89     	ld de,Frames_explosion
 493+ 8F64 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 494+ 8F66 12           	ld (de),a 									; Vuelco (Frames_explosion).
 495+ 8F67
 496+ 8F67 C9           	ret
 497+ 8F68
 498+ 8F68              ; ----------------------------------------------------------------------------------------------------------
 499+ 8F68              ;
 500+ 8F68              ;	22/01/24
 501+ 8F68              ;
 502+ 8F68              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 503+ 8F68              ;
 504+ 8F68              ;	Las cajas contienen entidades iniciadas:
 505+ 8F68              ;
 506+ 8F68              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 507+ 8F68              ;
 508+ 8F68              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 509+ 8F68              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 510+ 8F68              ;
 511+ 8F68              ;	MODIFICA: HL,DE y BC
 512+ 8F68
 513+ 8F68 21 8A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 514+ 8F6B ED 5B D5 89  	ld de,(Puntero_store_caja)
 515+ 8F6F 7E           	ld a,(hl)
 516+ 8F70 12           	ld (de),a
 517+ 8F71 13           	inc de 													; (Tipo).
 518+ 8F72
 519+ 8F72 21 91 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 520+ 8F75 01 02 00     	ld bc,2
 521+ 8F78 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 522+ 8F7A              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 523+ 8F7A 23           	inc hl
 524+ 8F7B 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 525+ 8F7C 12           	ld (de),a
 526+ 8F7D 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 527+ 8F7E
 528+ 8F7E 21 A0 89     	ld hl,Impacto
 529+ 8F81 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 530+ 8F82 12           	ld (de),a
 531+ 8F83 13           	inc de 													; (Impacto), volcado a la caja.
 532+ 8F84              ;															; DE situado ahora en (Variables_de_borrado).
 533+ 8F84 23           	inc hl
 534+ 8F85 01 06 00     	ld bc,6
 535+ 8F88 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 536+ 8F8A              ; 															; DE situado ahora en (Puntero_de_impresión).
 537+ 8F8A 01 07 00     	ld bc,7
 538+ 8F8D ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 539+ 8F8F              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 540+ 8F8F              ;															; HL apunta ahora a (Columnas).
 541+ 8F8F 21 B2 89     	ld hl,Ctrl_2
 542+ 8F92 7E           	ld a,(hl)
 543+ 8F93 12           	ld (de),a 												; Volcamos (Ctrl_2).
 544+ 8F94 13           	inc de
 545+ 8F95
 546+ 8F95 C9           	ret
 547+ 8F96
 548+ 8F96              ;---------------------------------------------------------------------------------------------------------------
 549+ 8F96              ;
 550+ 8F96              ;	5/1/24
 551+ 8F96              ;
 552+ 8F96              ;	INICIALIZA (Numero_parcial_de_entidades).
 553+ 8F96              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 554+ 8F96              ;
 555+ 8F96              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 556+ 8F96              ;
 557+ 8F96              ;	(Numero_parcial_de_entidades)="7".
 558+ 8F96              ;
 559+ 8F96              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 560+ 8F96              ;
 561+ 8F96              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 562+ 8F96              ;
 563+ 8F96              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 564+ 8F96              ;	MODIFICA: A y B.
 565+ 8F96              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 566+ 8F96
 567+ 8F96              Inicializa_Numero_parcial_de_entidades
 568+ 8F96
 569+ 8F96              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 570+ 8F96
 571+ 8F96 3A DB 89     	ld a,(Numero_de_entidades)
 572+ 8F99 A7           	and a
 573+ 8F9A
 574+ 8F9A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 575+ 8F9A              ;	jr z,$
 576+ 8F9A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8F9A
 578+ 8F9A 20 03        	jr nz,3F
 579+ 8F9C
 580+ 8F9C              ; ---------- ---------- ----------
 581+ 8F9C
 582+ 8F9C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 583+ 8F9C              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 584+ 8F9C
 585+ 8F9C CD BD 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 586+ 8F9F
 587+ 8F9F              ; ---------- ---------- ----------
 588+ 8F9F
 589+ 8F9F 3A DB 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 590+ 8FA2 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 591+ 8FA4 38 08        	jr c,1F
 592+ 8FA6
 593+ 8FA6              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 594+ 8FA6              ; Actualizamos variables.
 595+ 8FA6
 596+ 8FA6 3E 07        	ld a,7
 597+ 8FA8 32 DC 89     	ld (Numero_parcial_de_entidades),a
 598+ 8FAB 47           	ld b,a
 599+ 8FAC 18 04        	jr 2F
 600+ 8FAE
 601+ 8FAE              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 602+ 8FAE              ; (Numero_de_entidades)="0".
 603+ 8FAE
 604+ 8FAE 32 DC 89     1 ld (Numero_parcial_de_entidades),a
 605+ 8FB1 47           	ld b,a
 606+ 8FB2 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1874  8FB3              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8FB3              ; ******************************************************************************************************************************************************************************************
   2+ 8FB3              ;
   3+ 8FB3              ; 26/06/23
   4+ 8FB3              ;
   5+ 8FB3              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8FB3
   7+ 8FB3              Draw
   8+ 8FB3
   9+ 8FB3 CD A0 92     	call Prepara_draw
  10+ 8FB6 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8FB7 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8FB8 28 05        	jr z,2F
  13+ 8FBA
  14+ 8FBA 3A 9F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8FBD 18 0C        	jr 1F
  16+ 8FBF
  17+ 8FBF 2A 9D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8FC2 22 8D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8FC5 CD 54 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8FC8              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8FC8
  22+ 8FC8 CD EF 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8FCB
  24+ 8FCB 3A AD 89     1 ld a,(Ctrl_0)
  25+ 8FCE CB 6F        	bit 5,a
  26+ 8FD0 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8FD2
  28+ 8FD2 CD EA 8F     	call Comprueba_limite_horizontal
  29+ 8FD5 CD 7A 90     	call Comprueba_limite_vertical
  30+ 8FD8
  31+ 8FD8              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8FD8              ; -----------------------
  33+ 8FD8              ; -----------------------
  34+ 8FD8              ; -----------------------
  35+ 8FD8
  36+ 8FD8 CD D0 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8FDB CD 07 92     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8FDE CD 66 92     	call Define_rutina_de_impresion
  39+ 8FE1
  40+ 8FE1 3A AD 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8FE4 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8FE6 32 AD 89     	ld (Ctrl_0),a
  43+ 8FE9
  44+ 8FE9 C9           	ret
  45+ 8FEA
  46+ 8FEA              ; *******************************************************************************************************************************************************************************************
  47+ 8FEA              ;	21/01/23
  48+ 8FEA              ;
  49+ 8FEA              ; 	Comprueba_limite_horizontal.
  50+ 8FEA              ;
  51+ 8FEA              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8FEA              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8FEA              ;
  54+ 8FEA              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8FEA              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8FEA              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8FEA              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8FEA
  59+ 8FEA
  60+ 8FEA
  61+ 8FEA 3A AD 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8FED CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8FEF 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8FF1 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8FF3 32 AD 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8FF6 18 09            jr 6F
  67+ 8FF8 CB 5F        1 bit 3,a
  68+ 8FFA 28 0A            jr z,2F
  69+ 8FFC E6 F7            and $f7
  70+ 8FFE 32 AD 89         ld (Ctrl_0),a
  71+ 9001 CD 54 91     6 call Inicializacion
  72+ 9004 18 5B            jr 5F
  73+ 9006 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9007
  75+ 9007              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9007              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9007
  78+ 9007 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9008 2A AF 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 900B CD 84 9F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 900E 67           	ld h,a
  82+ 900F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9010 CD 84 9F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9013 67           	ld h,a
  85+ 9014 A7           	and a
  86+ 9015 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9017 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9018 3A 9F 89     	ld a,(Cuad_objeto)
  89+ 901B FE 02        	cp 2
  90+ 901D 38 1E        	jr c,3F
  91+ 901F 28 1C        	jr z,3F
  92+ 9021 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9022 28 23            jr z,7F
  94+ 9024 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9026 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9028 E1           	pop hl
  97+ 9029
  98+ 9029              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9029              ; _para indicar con E="2" en caso necesario.
 100+ 9029
 101+ 9029 E5               push hl
 102+ 902A C5               push bc
 103+ 902B CD 84 9F     	call calcula_tercio
 104+ 902E FE 01        	cp 1
 105+ 9030 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9032 CD 62 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9035 28 26            jr z,9F
 108+ 9037 38 24            jr c,9F
 109+ 9039 1E 00        11 ld e,0
 110+ 903B 18 22            jr 8F
 111+ 903D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 903E 28 07        	jr z, 7F
 113+ 9040 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9042 1E 00         	ld e,0
 115+ 9044 E1           	pop hl
 116+ 9045 18 04        	jr 4F
 117+ 9047 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9049 18 15            jr 10F
 119+ 904B
 120+ 904B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 904B              ; _para indicar con E="2" en caso necesario.
 122+ 904B
 123+ 904B E5           4 push hl
 124+ 904C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 904D CD 84 9F     	call calcula_tercio
 126+ 9050 FE 01        	cp 1
 127+ 9052 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9054 CD 62 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9057 28 04            jr z,9F
 130+ 9059 30 02            jr nc,9F
 131+ 905B 18 02        	jr 8F
 132+ 905D 1E 02        9 ld e,2
 133+ 905F C1           8 pop bc
 134+ 9060 E1           10 pop hl
 135+ 9061 C9           5 ret
 136+ 9062
 137+ 9062              ; --------------------
 138+ 9062              ;
 139+ 9062              ; 25/08/22
 140+ 9062
 141+ 9062 CD 84 9F     Comprueba_centro call calcula_tercio
 142+ 9065 67               ld h,a
 143+ 9066 08           	ex af,af
 144+ 9067 FE 02        	cp 2
 145+ 9069 38 07        	jr c,1F
 146+ 906B 28 05        	jr z,1F
 147+ 906D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9070 18 03        	jr 2F
 149+ 9072 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9075 08           2 ex af,af
 151+ 9076 A7               and a
 152+ 9077 ED 42            sbc hl,bc
 153+ 9079 C9               ret
 154+ 907A
 155+ 907A              ; *********************************************************************************************************************************************************************************************
 156+ 907A              ;
 157+ 907A              ;   16/8/22
 158+ 907A              ;
 159+ 907A              ;	Comprueba_limite_vertical
 160+ 907A              ;
 161+ 907A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 907A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 907A              ;
 164+ 907A
 165+ 907A 2A 8D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 907D 7D           	ld a,l
 167+ 907E E6 1F        	and $1F
 168+ 9080 57           	ld d,a
 169+ 9081 3A B1 89     	ld a,(Limite_vertical)
 170+ 9084 BA           	cp d 											; Límite - Posición.
 171+ 9085 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9086 3A 9F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 9089 CB 47        	bit 0,a
 174+ 908B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 908D
 176+ 908D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 908D
 178+ 908D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 908E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9090
 181+ 9090              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9090              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9090
 184+ 9090 3A 91 89         ld a,(Coordenada_X)
 185+ 9093 16 0F            ld d,Centro_izquierda
 186+ 9095 A7               and a
 187+ 9096 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 9097 28 1E            jr z,3F
 189+ 9099 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 909B              ;                                                    ; _salimos sin modificar nada.
 191+ 909B 18 0E            jr 2F
 192+ 909D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 909E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 90A0
 195+ 90A0              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 90A0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 90A0
 198+ 90A0 3A 91 89         ld a,(Coordenada_X)
 199+ 90A3 16 10            ld d,Centro_derecha
 200+ 90A5 A7               and a
 201+ 90A6 92               sub d
 202+ 90A7 28 0E            jr z,3F
 203+ 90A9 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 90AB              ;                                                    ; _salimos sin modificar nada.
 205+ 90AB CB 43        2 bit 0,e
 206+ 90AD 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 90AF C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 90B0 CD 44 91         call Modificaccionne
 209+ 90B3 C1           	pop bc
 210+ 90B4 CD 54 91         call Inicializacion
 211+ 90B7 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 90B8
 213+ 90B8              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 90B8
 215+ 90B8 C5           4 push bc
 216+ 90B9 01 8C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 90BC 0A           	ld a,(bc)
 218+ 90BD 3D           	dec a
 219+ 90BE 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 90BF 7D           	ld a,l
 221+ 90C0 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 90C1 CB 47        	bit 0,a
 223+ 90C3 28 03        	jr z,5F
 224+ 90C5 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 90C6 18 2E        	jr 7F
 226+ 90C8
 227+ 90C8              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 90C8
 229+ 90C8 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 90C9 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 90CA 3A AD 89     	ld a,(Ctrl_0)
 232+ 90CD CB 4F        	bit 1,a
 233+ 90CF 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 90D1 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 90D2
 236+ 90D2              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 90D2
 238+ 90D2 1C               inc e
 239+ 90D3 1D               dec e
 240+ 90D4 20 07            jr nz,12F
 241+ 90D6 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 90D7 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 90D8 22 8D 89     	ld (Posicion_actual),hl
 244+ 90DB 18 44        13 jr 9F
 245+ 90DD CB 43        12 bit 0,e
 246+ 90DF 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 90E1              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 90E1 C1           	pop bc
 249+ 90E2 18 D3        	jr 3B
 250+ 90E4 80           14 add b
 251+ 90E5 6F               ld l,a
 252+ 90E6 22 8D 89     	ld (Posicion_actual),hl
 253+ 90E9 CD 44 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 90EC 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 90EE E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 90F0 32 AD 89         ld (Ctrl_0),a
 257+ 90F3 F1           	pop af
 258+ 90F4 18 2B        	jr 9F
 259+ 90F6
 260+ 90F6              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 90F6
 262+ 90F6 F5           7 push af
 263+ 90F7 3A AD 89     	ld a,(Ctrl_0)
 264+ 90FA CB 47        	bit 0,a
 265+ 90FC 20 1D        	jr nz,8F
 266+ 90FE F1           	pop af
 267+ 90FF
 268+ 90FF              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 90FF
 270+ 90FF 1C           	inc e
 271+ 9100 1D               dec e
 272+ 9101 20 07            jr nz,10F
 273+ 9103 90           	sub b
 274+ 9104 6F               ld l,a
 275+ 9105 22 8D 89     	ld (Posicion_actual),hl
 276+ 9108 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 910A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 910A CB 43        10 bit 0,e
 279+ 910C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 910E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 910E C1           	pop bc
 282+ 910F 18 A6        	jr 3B
 283+ 9111 90           16 sub b
 284+ 9112 6F               ld l,a
 285+ 9113 22 8D 89     	ld (Posicion_actual),hl
 286+ 9116 CD 44 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9119 18 06            jr 9F
 288+ 911B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 911D 32 AD 89         ld (Ctrl_0),a
 290+ 9120 F1           	pop af
 291+ 9121 C1           9 pop bc
 292+ 9122 1E 00        	ld e,0
 293+ 9124 CD 54 91         call Inicializacion
 294+ 9127 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9128 08           	ex af,af
 296+ 9129 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 912A 18 8B            jr 3B
 298+ 912C
 299+ 912C              ; --------------------
 300+ 912C
 301+ 912C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 912E CD BB 92     1 call PreviousScan
 303+ 9131 10 FB            djnz 1B
 304+ 9133 22 8D 89     	ld (Posicion_actual),hl
 305+ 9136 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9137 C9           	ret
 307+ 9138
 308+ 9138              ; --------------------
 309+ 9138
 310+ 9138 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 913A CD AC 92     1 call NextScan
 312+ 913D 10 FB            djnz 1B
 313+ 913F 22 8D 89     	ld (Posicion_actual),hl
 314+ 9142 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9143 C9           	ret
 316+ 9144
 317+ 9144              ; --------------------
 318+ 9144              ;
 319+ 9144              ;	22/01/23
 320+ 9144              ;
 321+ 9144              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9144              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9144              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9144
 325+ 9144
 326+ 9144              Modificaccionne
 327+ 9144
 328+ 9144 3A 9F 89     	ld a,(Cuad_objeto)
 329+ 9147 FE 02        	cp 2
 330+ 9149 CC 2C 91         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 914C DC 2C 91         call c,Modifica_Pos_actual
 332+ 914F C8           	ret z
 333+ 9150 CD 38 91         call Modifica_Pos_actual2
 334+ 9153 C9               ret
 335+ 9154
 336+ 9154              ; *************************************************************************************************************************************************************************************************
 337+ 9154              ;
 338+ 9154              ;	13/8/22
 339+ 9154              ;
 340+ 9154              ;	Inicializacion
 341+ 9154              ;
 342+ 9154              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9154              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9154              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9154              ;
 346+ 9154              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9154              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9154              ;	_ desaparece/aparece.
 349+ 9154
 350+ 9154              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9154              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9154              ;
 353+ 9154              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9154              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9154              ; 		   [E] ="0"
 356+ 9154
 357+ 9154              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9154
 359+ 9154 CD 84 9F     Inicializacion call calcula_tercio
 360+ 9157 28 36        	jr z,primit
 361+ 9159 E6 02        	and 2
 362+ 915B 20 07        	jr nz,segmit
 363+ 915D 7D           	ld a,l
 364+ 915E FE 7F        	cp $7f
 365+ 9160 38 2D        	jr c,primit
 366+ 9162 28 2B        	jr z,primit
 367+ 9164 CD CA 91     segmit call column
 368+ 9167 38 13        	jr c,tercuad
 369+ 9169 3E 04        cuarcuad ld a,4
 370+ 916B 32 9F 89     	ld (Cuad_objeto),a
 371+ 916E 21 20 48     	ld hl,$4820
 372+ 9171 22 AF 89     	ld (Limite_horizontal),hl
 373+ 9174 21 B1 89     	ld hl,Limite_vertical
 374+ 9177 36 0D        	ld (hl),$0d
 375+ 9179 08           	ex af,af
 376+ 917A 18 3C        	jr 1F
 377+ 917C              tercuad
 378+ 917C 3E 03        	ld a,3
 379+ 917E 32 9F 89     	ld (Cuad_objeto),a
 380+ 9181 21 20 48     	ld hl,$4820
 381+ 9184 22 AF 89     	ld (Limite_horizontal),hl
 382+ 9187 21 B1 89     	ld hl,Limite_vertical
 383+ 918A 36 12        	ld (hl),$12
 384+ 918C 08           	ex af,af
 385+ 918D 18 29        	jr 1F
 386+ 918F CD CA 91     primit call column
 387+ 9192 38 13        	jr c, primcuad
 388+ 9194              segcuad
 389+ 9194 3E 02        	ld a,2
 390+ 9196 32 9F 89     	ld (Cuad_objeto),a
 391+ 9199 21 C0 4F     	ld hl,$4fc0
 392+ 919C 22 AF 89     	ld (Limite_horizontal),hl
 393+ 919F 21 B1 89     	ld hl,Limite_vertical
 394+ 91A2 36 0D        	ld (hl),$0d
 395+ 91A4 08           	ex af,af
 396+ 91A5 18 11        	jr 1F
 397+ 91A7              primcuad
 398+ 91A7 3E 01        	ld a,1
 399+ 91A9 32 9F 89     	ld (Cuad_objeto),a
 400+ 91AC 21 C0 4F     	ld hl,$4fc0
 401+ 91AF 22 AF 89     	ld (Limite_horizontal),hl
 402+ 91B2 21 B1 89     	ld hl,Limite_vertical
 403+ 91B5 36 12        	ld (hl),$12
 404+ 91B7 08           	ex af,af
 405+ 91B8
 406+ 91B8 C5           1 push bc
 407+ 91B9 E5           	push hl
 408+ 91BA D5           	push de
 409+ 91BB
 410+ 91BB 2A 8D 89     	ld hl,(Posicion_actual)
 411+ 91BE CD A2 9F     	call Genera_coordenadas
 412+ 91C1
 413+ 91C1 D1           	pop de
 414+ 91C2 E1           	pop hl
 415+ 91C3 C1           	pop bc
 416+ 91C4
 417+ 91C4 21 AD 89     	ld hl,Ctrl_0
 418+ 91C7 CB EE        	set 5,(hl)
 419+ 91C9 C9           	ret
 420+ 91CA
 421+ 91CA              ; ------------------------------------------------------------------------------------------------------------------
 422+ 91CA
 423+ 91CA              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 91CA              ;
 425+ 91CA              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 91CA
 427+ 91CA 7D           column ld a,l
 428+ 91CB E6 1F        	and $1f
 429+ 91CD FE 10         	cp $10
 430+ 91CF C9            	ret
 431+ 91D0
 432+ 91D0              ; --------------------------------------------------------------------------------------------------------------------
 433+ 91D0              ;
 434+ 91D0              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 91D0              ;
 436+ 91D0              ; 14/12/22
 437+ 91D0              ;
 438+ 91D0              ;	Modifica: A y BC.
 439+ 91D0
 440+ 91D0 3A 9F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 91D3 E6 01        	and 1
 442+ 91D5 28 17        	jr z,1F
 443+ 91D7
 444+ 91D7              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 91D7
 446+ 91D7 3A 91 89     	ld a,(Coordenada_X)
 447+ 91DA 47           	ld b,a
 448+ 91DB 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 91DC 79           	ld a,c
 450+ 91DD 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 91DE 38 08        	jr c,2F
 452+ 91E0 47           	ld b,a
 453+ 91E1 79           	ld a,c
 454+ 91E2 90           	sub b
 455+ 91E3 32 AE 89     	ld (Columnas),a
 456+ 91E6 18 1B        	jr 4F
 457+ 91E8 79           2 ld a,c
 458+ 91E9 32 AE 89     	ld (Columnas),a
 459+ 91EC 18 15        	jr 4F
 460+ 91EE
 461+ 91EE              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 91EE
 463+ 91EE 3A 91 89     1 ld a,(Coordenada_X)
 464+ 91F1 81           	add c
 465+ 91F2 3D           	dec a
 466+ 91F3 D6 1F        	sub $1f
 467+ 91F5 38 08        	jr c,3F
 468+ 91F7 47           	ld b,a
 469+ 91F8 79           	ld a,c
 470+ 91F9 90           	sub b
 471+ 91FA 32 AE 89     	ld (Columnas),a
 472+ 91FD 18 04        	jr 4F
 473+ 91FF 79           3 ld a,c
 474+ 9200 32 AE 89     	ld (Columnas),a
 475+ 9203 D9           4 exx
 476+ 9204 4F           	ld c,a
 477+ 9205 D9           	exx
 478+ 9206 C9            ret
 479+ 9207
 480+ 9207              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9207              ;
 482+ 9207              ;   19/7/23
 483+ 9207              ;
 484+ 9207              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9207              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9207              ;
 487+ 9207              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9207              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9207              ;
 490+ 9207              ;	DESTRUYE: HL,B Y A.
 491+ 9207
 492+ 9207 3A 9F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 920A FE 02        	cp 2
 494+ 920C 38 18        	jr c,1F
 495+ 920E 28 16        	jr z,1F
 496+ 9210 E6 01        	and 1
 497+ 9212 28 0D        	jr z,3F
 498+ 9214
 499+ 9214              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9214
 501+ 9214 CD 5A 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9217
 503+ 9217 7D           9 ld a,l
 504+ 9218 E6 1F        	and $1f
 505+ 921A 28 2A        	jr z,7F
 506+ 921C 2B           	dec hl
 507+ 921D 10 F8        	djnz 9B
 508+ 921F 18 25        	jr 7F
 509+ 9221
 510+ 9221              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9221
 512+ 9221 2A 8D 89     3 ld hl,(Posicion_actual)
 513+ 9224 18 20        	jr 7F
 514+ 9226
 515+ 9226 28 14        1 jr z,2F
 516+ 9228
 517+ 9228              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9228
 519+ 9228 CD 5A 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 922B
 521+ 922B 7D           4 ld a,l
 522+ 922C E6 1F        	and $1f
 523+ 922E 28 03        	jr z,6F
 524+ 9230 2B           	dec hl
 525+ 9231 10 F8        	djnz 4B
 526+ 9233 06 0F        6 ld b,15
 527+ 9235 CD BB 92     5 call PreviousScan
 528+ 9238 10 FB        	djnz 5B
 529+ 923A 18 0A        	jr 7F
 530+ 923C
 531+ 923C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 923C
 533+ 923C CD 5A 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 923F 06 0F        	ld b,15
 535+ 9241 CD BB 92     8 call PreviousScan
 536+ 9244 10 FB        	djnz 8B
 537+ 9246
 538+ 9246 E5           7 push hl
 539+ 9247 DD E1        	pop ix
 540+ 9249
 541+ 9249 2A 8F 89     	ld hl,(Puntero_objeto)
 542+ 924C E5           	push hl
 543+ 924D FD E1        	pop iy
 544+ 924F
 545+ 924F              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 924F
 547+ 924F 3A AD 89     	ld a,(Ctrl_0)
 548+ 9252 CB 77        	bit 6,a
 549+ 9254 C8           	ret z
 550+ 9255
 551+ 9255              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9255              ; _ entidad / Amadeus´.
 553+ 9255
 554+ 9255 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 9259
 556+ 9259 C9           	ret
 557+ 925A
 558+ 925A              ; --------------------------------------------------------------------------------------------------------------------
 559+ 925A              ;
 560+ 925A              ;	2/1/23
 561+ 925A              ;
 562+ 925A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 925A              ;
 564+ 925A              ;	Tras esta rutina tenemos:
 565+ 925A              ;
 566+ 925A              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 925A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 925A              ;
 569+ 925A              ;	DESTRUYE!!!!! HL,B y A.
 570+ 925A
 571+ 925A 2A 8D 89     Operandos ld hl,(Posicion_actual)
 572+ 925D 3A AE 89     	ld a,(Columnas)
 573+ 9260 3D           	dec a
 574+ 9261 20 01        	jr nz,1F
 575+ 9263 3C           	inc a
 576+ 9264 47           1 ld b,a
 577+ 9265 C9           	ret
 578+ 9266
 579+ 9266              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9266              ;
 581+ 9266              ;	3/1/23
 582+ 9266              ;
 583+ 9266              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9266              ;
 585+ 9266              ;	Destruye: A,B,HL y DE.
 586+ 9266
 587+ 9266              Define_rutina_de_impresion
 588+ 9266
 589+ 9266 3A 8C 89     	ld a,(Columns)
 590+ 9269 47           	ld b,a
 591+ 926A 3A AE 89     	ld a,(Columnas)
 592+ 926D B8           	cp b
 593+ 926E 20 0D        	jr nz,2f
 594+ 9270
 595+ 9270              ;	La entidad se imprime entera.
 596+ 9270
 597+ 9270 21 8F 93     	ld hl, Indice_entidades_completas
 598+ 9273 E6 01        	and 1
 599+ 9275 28 02        	jr z,1F
 600+ 9277
 601+ 9277 23           	inc hl
 602+ 9278 23           	inc hl
 603+ 9279
 604+ 9279 CD 77 8C     1 call Extrae_address
 605+ 927C C9           	ret		;	ret
 606+ 927D
 607+ 927D              ;	La entidad no se imprime entera en pantalla.
 608+ 927D
 609+ 927D 3A 9F 89     2 ld a,(Cuad_objeto)
 610+ 9280 E6 01        	and 1
 611+ 9282 28 17        	jr z,3F
 612+ 9284
 613+ 9284              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9284
 615+ 9284 21 93 93     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9287 3A 8C 89     4 ld a,(Columns)
 617+ 928A E6 01        	and 1
 618+ 928C 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 928E
 620+ 928E 23           	inc hl
 621+ 928F 23           	inc hl
 622+ 9290
 623+ 9290 3A AE 89     	ld a,(Columnas)
 624+ 9293 E6 01        	and 1
 625+ 9295 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 9297
 627+ 9297 23           	inc hl
 628+ 9298 23           	inc hl
 629+ 9299
 630+ 9299 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 929B
 632+ 929B 21 99 93     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 929E 18 E7        	jr 4B
 634+ 92A0
 635+ 92A0              ; --------------------------------------------------------------------------------------------------------------------
 636+ 92A0              ;
 637+ 92A0              ;	Prepara_draw
 638+ 92A0              ;
 639+ 92A0              ;	Es una rutina de carga.
 640+ 92A0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 92A0              ;
 642+ 92A0              ;	FUNCIONAMIENTO:
 643+ 92A0              ;
 644+ 92A0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 92A0              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 92A0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 92A0              ;
 648+ 92A0              ;	DESTRUYE:
 649+ 92A0              ;
 650+ 92A0              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 92A0
 652+ 92A0 21 8B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 92A3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 92A4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 92A5 4E           	ld c,(hl)
 656+ 92A6 2A 8D 89     	ld hl,(Posicion_actual)
 657+ 92A9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 92AB C9           	ret
 659+ 92AC
 660+ 92AC              ;----------------------------------------------------------------------------------------------------------------
 661+ 92AC              ;
 662+ 92AC              ;	5/08/22
 663+ 92AC              ;
 664+ 92AC              ;   NextScan.
 665+ 92AC              ;
 666+ 92AC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 92AC              ;
 668+ 92AC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 92AC              ;
 670+ 92AC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 92AC              ;
 672+ 92AC              ;       DESTRUIDOS: AF y HL !!!
 673+ 92AC              ;
 674+ 92AC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 92AC              ;
 676+ 92AC
 677+ 92AC 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 92AD 7C               ld a,h
 679+ 92AE E6 07            and 7
 680+ 92B0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 92B1
 682+ 92B1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 92B2 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 92B4 6F               ld l,a
 685+ 92B5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 92B6
 687+ 92B6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 92B7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 92B9 67               ld h,a
 690+ 92BA C9               ret
 691+ 92BB
 692+ 92BB              ;----------------------------------------------------------------------------------------------------------------
 693+ 92BB              ;
 694+ 92BB              ;	5/08/22
 695+ 92BB              ;
 696+ 92BB              ;   PreviousScan.
 697+ 92BB              ;
 698+ 92BB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 92BB              ;
 700+ 92BB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 92BB              ;
 702+ 92BB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 92BB              ;
 704+ 92BB              ;       DESTRUIDOS: AF y HL !!!
 705+ 92BB              ;
 706+ 92BB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 92BB              ;
 708+ 92BB
 709+ 92BB 7C           PreviousScan ld a,h
 710+ 92BC 25               dec h               ; Dec H.
 711+ 92BD E6 07            and 7
 712+ 92BF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 92C0
 714+ 92C0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 92C1 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 92C3 6F               ld l,a
 717+ 92C4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 92C5
 719+ 92C5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 92C6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 92C8 67               ld h,a
 722+ 92C9 C9               ret
 723+ 92CA
 724+ 92CA              ; -----------------------------------------------------------------------------------
 725+ 92CA              ;
 726+ 92CA              ;	31/7/23
 727+ 92CA              ;
 728+ 92CA              ;	Rutina principal de pintado de entidades.
 729+ 92CA              ;	Extrae la foto del frame, (entidades).
 730+ 92CA
 731+ 92CA              Extrae_foto_entidades
 732+ 92CA
 733+ 92CA 21 01 80     	ld hl,Album_de_fotos+1
 734+ 92CD 7E           	ld a,(hl)
 735+ 92CE A7           	and a
 736+ 92CF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 92D0
 738+ 92D0              ;	No hay datos, (entidades para pintar en este frame).
 739+ 92D0
 740+ 92D0 3A DE 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 92D3 A7           	and a
 742+ 92D4 C8           	ret z
 743+ 92D5
 744+ 92D5              ; -----------------------------------
 745+ 92D5
 746+ 92D5 ED 73 E3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 92D9 31 00 80     	ld sp,Album_de_fotos
 748+ 92DC
 749+ 92DC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 92DE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 92DF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 92E0
 753+ 92E0 ED 73 E5 89  	ld (Stack_2),sp
 754+ 92E4 ED 7B E3 89  	ld sp,(Stack)
 755+ 92E8
 756+ 92E8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 92E8
 758+ 92E8 3E CD        	ld a,$cd
 759+ 92EA 32 F2 92     	ld (Imprime),a
 760+ 92ED EB           	ex de,hl
 761+ 92EE 22 F3 92     	ld (Imprime+1),hl
 762+ 92F1 EB           	ex de,hl
 763+ 92F2
 764+ 92F2              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 92F2
 766+ 92F2 00 00 00     Imprime db 0,0,0
 767+ 92F5
 768+ 92F5 ED 73 E3 89  	ld (Stack),sp
 769+ 92F9
 770+ 92F9 3A DE 89     	ld a,(Numero_de_malotes)
 771+ 92FC 3D           	dec a
 772+ 92FD 28 09        	jr z,1F
 773+ 92FF 32 DE 89      	ld (Numero_de_malotes),a
 774+ 9302
 775+ 9302 ED 7B E5 89  	ld sp,(Stack_2)
 776+ 9306 18 D4        	jr 2B
 777+ 9308
 778+ 9308 AF           1 xor a
 779+ 9309 32 E5 89     	ld (Stack_2),a
 780+ 930C
 781+ 930C C9           	ret
 782+ 930D
 783+ 930D              ; -----------------------------------------------------------------------------------
 784+ 930D              ;
 785+ 930D              ;	28/2/23
 786+ 930D              ;
 787+ 930D              ;	Pinta los disparos generados.
 788+ 930D
 789+ 930D              Extrae_foto_disparos
 790+ 930D
 791+ 930D 21 AD 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9310 7E               ld a,(hl)
 793+ 9311 A7               and a
 794+ 9312 C8               ret z
 795+ 9313
 796+ 9313 3A F3 89     	ld a,(Numero_de_disparotes)
 797+ 9316 A7           	and a
 798+ 9317 C8           	ret z
 799+ 9318 ED 73 E3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 931C 31 AC 80     	ld sp,Album_de_fotos_disparos
 801+ 931F
 802+ 931F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9321 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9322 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9323
 806+ 9323 ED 73 E5 89  	ld (Stack_2),sp
 807+ 9327 ED 7B E3 89  	ld sp,(Stack)
 808+ 932B
 809+ 932B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 932B
 811+ 932B 3E CD        	ld a,$cd
 812+ 932D 32 35 93     	ld (Imprime2),a
 813+ 9330 EB           	ex de,hl
 814+ 9331 22 36 93     	ld (Imprime2+1),hl
 815+ 9334 EB           	ex de,hl
 816+ 9335
 817+ 9335              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9335
 819+ 9335 00 00 00     Imprime2 db 0,0,0
 820+ 9338
 821+ 9338 3A F3 89     	ld a,(Numero_de_disparotes)
 822+ 933B 3D           	dec a
 823+ 933C 28 09        	jr z,1F
 824+ 933E 32 F3 89      	ld (Numero_de_disparotes),a
 825+ 9341
 826+ 9341 ED 7B E5 89  	ld sp,(Stack_2)
 827+ 9345 18 D8        	jr 2B
 828+ 9347
 829+ 9347 AF           1 xor a
 830+ 9348 32 E5 89     	ld (Stack_2),a
 831+ 934B C9           	ret
 832+ 934C
 833+ 934C              ; -----------------------------------------------------------------------------------
 834+ 934C              ;
 835+ 934C              ;	4/9/23
 836+ 934C              ;
 837+ 934C              ;	Rutina principal de pintado de Amadeus.
 838+ 934C              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 934C
 840+ 934C 21 02 81     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 934F 7E           	ld a,(hl)
 842+ 9350 A7           	and a
 843+ 9351 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9352
 845+ 9352 3A DE 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9355 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9356 C8           	ret z
 848+ 9357
 849+ 9357              ; -----------------------------------
 850+ 9357
 851+ 9357 ED 73 E3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 935B 31 02 81     	ld sp,Album_de_fotos_Amadeus
 853+ 935E
 854+ 935E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9360 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9361 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9362
 858+ 9362 ED 73 E5 89  	ld (Stack_2),sp
 859+ 9366 ED 7B E3 89  	ld sp,(Stack)
 860+ 936A
 861+ 936A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 936A
 863+ 936A 3E CD        	ld a,$cd
 864+ 936C 32 74 93     	ld (Imprime_Amadeus),a
 865+ 936F EB           	ex de,hl
 866+ 9370 22 75 93     	ld (Imprime_Amadeus+1),hl
 867+ 9373 EB           	ex de,hl
 868+ 9374
 869+ 9374              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9374
 871+ 9374 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9377
 873+ 9377 ED 73 E3 89  	ld (Stack),sp
 874+ 937B
 875+ 937B 3A DE 89     	ld a,(Numero_de_malotes)
 876+ 937E 3D           	dec a
 877+ 937F 28 09        	jr z,1F
 878+ 9381 32 DE 89      	ld (Numero_de_malotes),a
 879+ 9384
 880+ 9384 ED 7B E5 89  	ld sp,(Stack_2)
 881+ 9388 18 D4        	jr 2B
 882+ 938A
 883+ 938A AF           1 xor a
 884+ 938B 32 E5 89     	ld (Stack_2),a
 885+ 938E
 886+ 938E C9           	ret
# file closed: Draw_XOR.asm
1875  938F              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 938F              ;   índices de Rutinas de impresión.
   2+ 938F
   3+ 938F 9F 93        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9391 B8 93            defw Pinta_Amadeus_3x2
   5+ 9393
   6+ 9393 10 94        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9395 B0 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9397 64 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9399
  10+ 9399 3A 94        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 939B 3E 95            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 939D F2 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 939F
  14+ 939F
  15+ 939F              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 939F              ;
  17+ 939F              ;   28/2/24
  18+ 939F              ;
  19+ 939F              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 939F              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 939F              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 939F              ;
  23+ 939F              ;   Modifica: AF,HL,BC y DE.
  24+ 939F
  25+ 939F              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 939F
  27+ 939F FD E5            push iy
  28+ 93A1 D1               pop de
  29+ 93A2
  30+ 93A2 ED 73 E3 89      ld (Stack),sp
  31+ 93A6 F9           	ld sp,hl
  32+ 93A7 06 10            ld b,16
  33+ 93A9
  34+ 93A9 E1           1 pop hl
  35+ 93AA
  36+ 93AA 1A               ld a,(de)
  37+ 93AB 77               ld (hl),a
  38+ 93AC 1C           	inc e
  39+ 93AD 2C               inc l
  40+ 93AE 1A               ld a,(de)
  41+ 93AF 77               ld (hl),a
  42+ 93B0 1C               inc e
  43+ 93B1
  44+ 93B1 10 F6            djnz 1B
  45+ 93B3
  46+ 93B3 ED 7B E3 89      ld sp,(Stack)
  47+ 93B7
  48+ 93B7 C9           	ret
  49+ 93B8
  50+ 93B8              Pinta_Amadeus_3x2
  51+ 93B8
  52+ 93B8 18 FE            jr $
  53+ 93BA
  54+ 93BA
  55+ 93BA ED 73 E3 89      ld (Stack),sp
  56+ 93BE FD F9        	ld sp,iy
  57+ 93C0 06 08            ld b,8
  58+ 93C2 D1           1 pop de
  59+ 93C3 7B               ld a,e
  60+ 93C4 AE               xor (hl)
  61+ 93C5 77           	ld (hl),a
  62+ 93C6 23           	inc hl
  63+ 93C7 7A               ld a,d
  64+ 93C8 AE               xor (hl)
  65+ 93C9 77           	ld (hl),a
  66+ 93CA 23           	inc hl
  67+ 93CB D1           	pop de
  68+ 93CC 7B               ld a,e
  69+ 93CD AE               xor (hl)
  70+ 93CE 77           	ld (hl),a
  71+ 93CF 2B           	dec hl
  72+ 93D0 2B           	dec hl
  73+ 93D1 24           	inc h
  74+ 93D2 7C               ld a,h
  75+ 93D3 E6 07            and 7
  76+ 93D5 20 0A            jr nz,2F
  77+ 93D7 7D               ld a,l
  78+ 93D8 C6 20            add a,$20
  79+ 93DA 6F               ld l,a
  80+ 93DB 38 04            jr c,2F
  81+ 93DD 7C               ld a,h
  82+ 93DE D6 08            sub 8
  83+ 93E0 67               ld h,a
  84+ 93E1 7C           2 ld a,h
  85+ 93E2 FE 58            cp $58
  86+ 93E4 28 25            jr z,4F
  87+ 93E6 7A               ld a,d
  88+ 93E7 AE               xor (hl)
  89+ 93E8 77               ld (hl),a
  90+ 93E9 D1           	pop de
  91+ 93EA 23           	inc hl
  92+ 93EB 7B               ld a,e
  93+ 93EC AE               xor (hl)
  94+ 93ED 77           	ld (hl),a
  95+ 93EE 23           	inc hl
  96+ 93EF 7A               ld a,d
  97+ 93F0 AE               xor (hl)
  98+ 93F1 77           	ld (hl),a
  99+ 93F2 2B           	dec hl
 100+ 93F3 2B           	dec hl
 101+ 93F4 24           	inc h
 102+ 93F5 7C               ld a,h
 103+ 93F6 E6 07            and 7
 104+ 93F8 20 0A            jr nz,3F
 105+ 93FA 7D               ld a,l
 106+ 93FB C6 20            add a,$20
 107+ 93FD 6F               ld l,a
 108+ 93FE 38 04            jr c,3F
 109+ 9400 7C               ld a,h
 110+ 9401 D6 08            sub 8
 111+ 9403 67               ld h,a
 112+ 9404 7C           3 ld a,h
 113+ 9405 FE 58            cp $58
 114+ 9407 28 02            jr z,4F
 115+ 9409 10 B7            djnz 1B
 116+ 940B ED 7B E3 89  4 ld sp,(Stack)
 117+ 940F C9           	ret
 118+ 9410
 119+ 9410              ; ---------------------------------------------------
 120+ 9410
 121+ 9410 ED 73 E3 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 122+ 9414 FD F9        	ld sp,iy
 123+ 9416
 124+ 9416              ; >>>
 125+ 9416
 126+ 9416 06 10            ld b,16
 127+ 9418 D1           1 pop de
 128+ 9419 7A           	ld a,d
 129+ 941A AE           	xor (hl)
 130+ 941B 77           	ld (hl),a
 131+ 941C 24           	inc h
 132+ 941D 7C               ld a,h
 133+ 941E E6 07            and 7
 134+ 9420 20 0C            jr nz,2F
 135+ 9422 7D               ld a,l
 136+ 9423 C6 20            add a,$20
 137+ 9425 6F               ld l,a
 138+ 9426 38 06            jr c,2F
 139+ 9428 7C               ld a,h
 140+ 9429 D6 08            sub 8
 141+ 942B 67               ld h,a
 142+ 942C 18 00            jr 2F
 143+ 942E 7C           2 ld a,h
 144+ 942F FE 58            cp $58
 145+ 9431 28 02            jr z,3F
 146+ 9433 10 E3            djnz 1B
 147+ 9435 ED 7B E3 89  3 ld sp,(Stack)
 148+ 9439 C9           	ret
 149+ 943A
 150+ 943A ED 73 E3 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 151+ 943E FD F9        	ld sp,iy
 152+ 9440
 153+ 9440              ; >>>
 154+ 9440
 155+ 9440 06 10            ld b,16
 156+ 9442 D1           1 pop de
 157+ 9443 7B           	ld a,e
 158+ 9444 AE           	xor (hl)
 159+ 9445 77           	ld (hl),a
 160+ 9446 24           	inc h
 161+ 9447 7C               ld a,h
 162+ 9448 E6 07            and 7
 163+ 944A 20 0C            jr nz,2F
 164+ 944C 7D               ld a,l
 165+ 944D C6 20            add a,$20
 166+ 944F 6F               ld l,a
 167+ 9450 38 06            jr c,2F
 168+ 9452 7C               ld a,h
 169+ 9453 D6 08            sub 8
 170+ 9455 67               ld h,a
 171+ 9456 18 00            jr 2F
 172+ 9458 7C           2 ld a,h
 173+ 9459 FE 58            cp $58
 174+ 945B 28 02            jr z,3F
 175+ 945D 10 E3            djnz 1B
 176+ 945F ED 7B E3 89  3 ld sp,(Stack)
 177+ 9463 C9           	ret
 178+ 9464
 179+ 9464              ; ---------------------------------------------------
 180+ 9464
 181+ 9464 ED 73 E3 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 182+ 9468 FD F9        	ld sp,iy
 183+ 946A 06 08            ld b,8
 184+ 946C D1           1 pop de
 185+ 946D 7A           	ld a,d
 186+ 946E AE           	xor (hl)
 187+ 946F 77           	ld (hl),a
 188+ 9470 23           	inc hl
 189+ 9471 D1           	pop de
 190+ 9472 7B           	ld a,e
 191+ 9473 AE           	xor (hl)
 192+ 9474 77           	ld (hl),a
 193+ 9475 2B           	dec hl
 194+ 9476 24            	inc h
 195+ 9477 7C               ld a,h
 196+ 9478 E6 07            and 7
 197+ 947A 20 0A            jr nz,2F
 198+ 947C 7D               ld a,l
 199+ 947D C6 20            add a,$20
 200+ 947F 6F               ld l,a
 201+ 9480 38 04            jr c,2F
 202+ 9482 7C               ld a,h
 203+ 9483 D6 08            sub 8
 204+ 9485 67               ld h,a
 205+ 9486 7C           2 ld a,h
 206+ 9487 FE 58            cp $58
 207+ 9489 28 20            jr z,4F
 208+ 948B D1               pop de
 209+ 948C 7B           	ld a,e
 210+ 948D AE           	xor (hl)
 211+ 948E 77           	ld (hl),a
 212+ 948F 23           	inc hl
 213+ 9490 7A           	ld a,d
 214+ 9491 AE           	xor (hl)
 215+ 9492 77           	ld (hl),a
 216+ 9493 2B           	dec hl
 217+ 9494 24           	inc h
 218+ 9495 7C               ld a,h
 219+ 9496 E6 07            and 7
 220+ 9498 20 0A            jr nz,3F
 221+ 949A 7D               ld a,l
 222+ 949B C6 20            add a,$20
 223+ 949D 6F               ld l,a
 224+ 949E 38 04            jr c,3F
 225+ 94A0 7C               ld a,h
 226+ 94A1 D6 08            sub 8
 227+ 94A3 67               ld h,a
 228+ 94A4 7C           3 ld a,h
 229+ 94A5 FE 58            cp $58
 230+ 94A7 28 02            jr z,4F
 231+ 94A9 10 C1            djnz 1B
 232+ 94AB ED 7B E3 89  4 ld sp,(Stack)
 233+ 94AF C9           	ret
 234+ 94B0
 235+ 94B0 ED 73 E3 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 236+ 94B4 FD F9        	ld sp,iy
 237+ 94B6 06 08            ld b,8
 238+ 94B8 D1           1 pop de
 239+ 94B9 D1           	pop de
 240+ 94BA 7B           	ld a,e
 241+ 94BB AE           	xor (hl)
 242+ 94BC 77           	ld (hl),a
 243+ 94BD 24            	inc h
 244+ 94BE 7C               ld a,h
 245+ 94BF E6 07            and 7
 246+ 94C1 20 0A            jr nz,2F
 247+ 94C3 7D               ld a,l
 248+ 94C4 C6 20            add a,$20
 249+ 94C6 6F               ld l,a
 250+ 94C7 38 04            jr c,2F
 251+ 94C9 7C               ld a,h
 252+ 94CA D6 08            sub 8
 253+ 94CC 67               ld h,a
 254+ 94CD 7C           2 ld a,h
 255+ 94CE FE 58            cp $58
 256+ 94D0 28 1B            jr z,4F
 257+ 94D2 D1               pop de
 258+ 94D3 7A           	ld a,d
 259+ 94D4 AE           	xor (hl)
 260+ 94D5 77           	ld (hl),a
 261+ 94D6 24           	inc h
 262+ 94D7 7C               ld a,h
 263+ 94D8 E6 07            and 7
 264+ 94DA 20 0A            jr nz,3F
 265+ 94DC 7D               ld a,l
 266+ 94DD C6 20            add a,$20
 267+ 94DF 6F               ld l,a
 268+ 94E0 38 04            jr c,3F
 269+ 94E2 7C               ld a,h
 270+ 94E3 D6 08            sub 8
 271+ 94E5 67               ld h,a
 272+ 94E6 7C           3 ld a,h
 273+ 94E7 FE 58            cp $58
 274+ 94E9 28 02            jr z,4F
 275+ 94EB 10 CB            djnz 1B
 276+ 94ED ED 7B E3 89  4 ld sp,(Stack)
 277+ 94F1 C9           	ret
 278+ 94F2
 279+ 94F2 ED 73 E3 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 280+ 94F6 FD F9        	ld sp,iy
 281+ 94F8 06 08            ld b,8
 282+ 94FA D1           1 pop de
 283+ 94FB 7B           	ld a,e
 284+ 94FC AE           	xor (hl)
 285+ 94FD 77           	ld (hl),a
 286+ 94FE 23           	inc hl
 287+ 94FF 7A           	ld a,d
 288+ 9500 AE           	xor (hl)
 289+ 9501 77           	ld (hl),a
 290+ 9502 2B           	dec hl
 291+ 9503 24             	inc h
 292+ 9504 7C               ld a,h
 293+ 9505 E6 07            and 7
 294+ 9507 20 0A            jr nz,2F
 295+ 9509 7D               ld a,l
 296+ 950A C6 20            add a,$20
 297+ 950C 6F               ld l,a
 298+ 950D 38 04            jr c,2F
 299+ 950F 7C               ld a,h
 300+ 9510 D6 08            sub 8
 301+ 9512 67               ld h,a
 302+ 9513 7C           2 ld a,h
 303+ 9514 FE 58            cp $58
 304+ 9516 28 21            jr z,4F
 305+ 9518 D1               pop de
 306+ 9519 7A           	ld a,d
 307+ 951A AE           	xor (hl)
 308+ 951B 77           	ld (hl),a
 309+ 951C 23           	inc hl
 310+ 951D D1               pop de
 311+ 951E 7B           	ld a,e
 312+ 951F AE           	xor (hl)
 313+ 9520 77           	ld (hl),a
 314+ 9521 2B           	dec hl
 315+ 9522 24           	inc h
 316+ 9523 7C               ld a,h
 317+ 9524 E6 07            and 7
 318+ 9526 20 0A            jr nz,3F
 319+ 9528 7D               ld a,l
 320+ 9529 C6 20            add a,$20
 321+ 952B 6F               ld l,a
 322+ 952C 38 04            jr c,3F
 323+ 952E 7C               ld a,h
 324+ 952F D6 08            sub 8
 325+ 9531 67               ld h,a
 326+ 9532 7C           3 ld a,h
 327+ 9533 FE 58            cp $58
 328+ 9535 28 02            jr z,4F
 329+ 9537 10 C1            djnz 1B
 330+ 9539 ED 7B E3 89  4 ld sp,(Stack)
 331+ 953D C9           	ret
 332+ 953E
 333+ 953E ED 73 E3 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 334+ 9542 FD F9        	ld sp,iy
 335+ 9544 06 08            ld b,8
 336+ 9546 D1           1 pop de
 337+ 9547 7B           	ld a,e
 338+ 9548 AE           	xor (hl)
 339+ 9549 77           	ld (hl),a
 340+ 954A 24            	inc h
 341+ 954B 7C               ld a,h
 342+ 954C E6 07            and 7
 343+ 954E 20 0A            jr nz,2F
 344+ 9550 7D               ld a,l
 345+ 9551 C6 20            add a,$20
 346+ 9553 6F               ld l,a
 347+ 9554 38 04            jr c,2F
 348+ 9556 7C               ld a,h
 349+ 9557 D6 08            sub 8
 350+ 9559 67               ld h,a
 351+ 955A 7C           2 ld a,h
 352+ 955B FE 58            cp $58
 353+ 955D 28 1C            jr z,4F
 354+ 955F D1               pop de
 355+ 9560 7A           	ld a,d
 356+ 9561 AE           	xor (hl)
 357+ 9562 77           	ld (hl),a
 358+ 9563 24           	inc h
 359+ 9564 7C               ld a,h
 360+ 9565 E6 07            and 7
 361+ 9567 20 0A            jr nz,3F
 362+ 9569 7D               ld a,l
 363+ 956A C6 20            add a,$20
 364+ 956C 6F               ld l,a
 365+ 956D 38 04            jr c,3F
 366+ 956F 7C               ld a,h
 367+ 9570 D6 08            sub 8
 368+ 9572 67               ld h,a
 369+ 9573 7C           3 ld a,h
 370+ 9574 FE 58            cp $58
 371+ 9576 28 03            jr z,4F
 372+ 9578 D1               pop de
 373+ 9579 10 CB            djnz 1B
 374+ 957B ED 7B E3 89  4 ld sp,(Stack)
 375+ 957F C9           	ret
 376+ 9580
 377+ 9580              ; ---------------------------------------------------
 378+ 9580              ;
 379+ 9580              ;   27/02/23
 380+ 9580              ;
 381+ 9580              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 382+ 9580              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 383+ 9580              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 384+ 9580
 385+ 9580 ED 73 E3 89  Pinta_Disparo ld (Stack),sp
 386+ 9584 FD F9            ld sp,iy
 387+ 9586 06 03            ld b,3
 388+ 9588 D1           1 pop de
 389+ 9589 7B               ld a,e
 390+ 958A AE               xor (hl)
 391+ 958B 77               ld (hl),a
 392+ 958C 23               inc hl
 393+ 958D 7A               ld a,d
 394+ 958E AE               xor (hl)
 395+ 958F 77               ld (hl),a
 396+ 9590 2B               dec hl
 397+ 9591
 398+ 9591 24               inc h
 399+ 9592 7C               ld a,h
 400+ 9593 E6 07            and 7
 401+ 9595 20 0A            jr nz,2F
 402+ 9597 7D               ld a,l
 403+ 9598 C6 20            add a,$20
 404+ 959A 6F               ld l,a
 405+ 959B 38 04            jr c,2F
 406+ 959D 7C               ld a,h
 407+ 959E D6 08            sub 8
 408+ 95A0 67               ld h,a
 409+ 95A1 7C           2 ld a,h
 410+ 95A2 FE 58            cp $58
 411+ 95A4 28 02            jr z,3F
 412+ 95A6
 413+ 95A6 10 E0            djnz 1B
 414+ 95A8 ED 7B E3 89  3 ld sp,(Stack)
 415+ 95AC C9               ret
 416+ 95AD
# file closed: Rutinas_de_impresion_sprites.asm
1876  95AD              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 95AD
   2+ 95AD              ; ******************************************************************************************************************************************************************************************
   3+ 95AD              ;
   4+ 95AD              ;   20/05/23
   5+ 95AD              ;
   6+ 95AD              ;	Recompone_posicion_inicio
   7+ 95AD              ;
   8+ 95AD              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 95AD              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 95AD              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 95AD              ;	_ a una u otra rutina.
  12+ 95AD
  13+ 95AD              Recompone_posicion_inicio
  14+ 95AD
  15+ 95AD 2A 9D 89     	ld hl,(Posicion_inicio)
  16+ 95B0 7D           	ld a,l
  17+ 95B1 E6 1F        	and $1f
  18+ 95B3 28 16        	jr z,1F
  19+ 95B5
  20+ 95B5 FE 1F        	cp $1f
  21+ 95B7 28 0D        	jr z,3F
  22+ 95B9
  23+ 95B9 21 B2 89     	ld hl,Ctrl_2
  24+ 95BC CB C6        	set 0,(hl)
  25+ 95BE 2A 8F 89     	ld hl,(Puntero_objeto)
  26+ 95C1 22 D3 89     	ld (Repone_puntero_objeto),hl
  27+ 95C4 18 08        	jr 2F
  28+ 95C6
  29+ 95C6 CD 74 97     3 call Mov_left
  30+ 95C9 18 03        	jr 2F
  31+ 95CB
  32+ 95CB CD 51 96     1 call Mov_right
  33+ 95CE 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 95D1 22 8F 89     	ld (Puntero_objeto),hl
  35+ 95D4 C9           	ret
  36+ 95D5
  37+ 95D5              ; ******************************************************************************************************************************************************************************************
  38+ 95D5              ;
  39+ 95D5              ;   27/05/23
  40+ 95D5              ;
  41+ 95D5              ;	Mov_down
  42+ 95D5              ;
  43+ 95D5              ; 	Mueve el Sprite X px hacia abajo.
  44+ 95D5              ;
  45+ 95D5              ;
  46+ 95D5              Mov_down
  47+ 95D5
  48+ 95D5 CD 3F 96     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 95D8              ;																	; _ repone (Puntero_objeto).
  50+ 95D8 21 AD 89     	ld hl,Ctrl_0
  51+ 95DB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 95DD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 95DD              ; 																	; _ en el caso de que no lo haya.
  54+ 95DD 3A B7 89     	ld a,(Vel_down)
  55+ 95E0 47           	ld b,a
  56+ 95E1 2A 8D 89         ld hl,(Posicion_actual)
  57+ 95E4 CD 84 9F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 95E7 E6 02        	and 2
  59+ 95E9 28 17        	jr z,1F
  60+ 95EB
  61+ 95EB              ; Nos encontramos en el último tercio de pantalla.
  62+ 95EB              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 95EB
  64+ 95EB 7C           	ld a,h
  65+ 95EC FE 57        	cp $57
  66+ 95EE 20 12        	jr nz,1F
  67+ 95F0
  68+ 95F0 7D           	ld a,l
  69+ 95F1 C6 20        	add $20
  70+ 95F3 30 0D        	jr nc,1F
  71+ 95F5
  72+ 95F5              ; ------------------------------
  73+ 95F5              ;
  74+ 95F5              ;	12/01/24
  75+ 95F5
  76+ 95F5              ;	call Reaparece_arriba
  77+ 95F5 CD 01 99     	call Reinicio
  78+ 95F8
  79+ 95F8              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 95F8
  81+ 95F8 3A F1 89     	ld a,(Ctrl_3)
  82+ 95FB CB CF        	set 1,a
  83+ 95FD 32 F1 89     	ld (Ctrl_3),a
  84+ 9600
  85+ 9600 18 08        	jr 3F
  86+ 9602              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9602              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9602              ; ------------------------------
  89+ 9602
  90+ 9602 CD AC 92     1 call NextScan
  91+ 9605 22 8D 89     	ld (Posicion_actual),hl
  92+ 9608 10 DA            djnz 2B
  93+ 960A CD A2 9F     3 call Genera_coordenadas
  94+ 960D C9           	ret
  95+ 960E
  96+ 960E              ; ******************************************************************************************************************************************************************************************
  97+ 960E              ;
  98+ 960E              ;   27/05/23
  99+ 960E              ;
 100+ 960E              ;	Mov_up
 101+ 960E              ;
 102+ 960E              ; 	Mueve el Sprite hacia arriba.
 103+ 960E              ;
 104+ 960E              ;
 105+ 960E              Mov_up
 106+ 960E
 107+ 960E CD 3F 96     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9611              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9611 21 AD 89     	ld hl,Ctrl_0
 110+ 9614 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9616              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9616              ; 																		; _ en el caso de que no lo haya.
 113+ 9616 3A B6 89     	ld a,(Vel_up)
 114+ 9619 47           	ld b,a
 115+ 961A 2A 8D 89     	ld hl,(Posicion_actual)
 116+ 961D CD 84 9F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9620 A7           	and a
 118+ 9621 20 10        	jr nz,1F
 119+ 9623
 120+ 9623              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9623              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9623
 123+ 9623 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9624 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9626 20 0B            jr nz,1F
 126+ 9628 7D               ld a,l
 127+ 9629 D6 20            sub $20
 128+ 962B 30 06            jr nc,1F
 129+ 962D 25               dec h
 130+ 962E
 131+ 962E              ; -----------------------------
 132+ 962E CD E2 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9631              ;	call Reinicio
 134+ 9631              ; -----------------------------
 135+ 9631
 136+ 9631 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9633 CD BB 92     1 call PreviousScan
 138+ 9636 22 8D 89     	ld (Posicion_actual),hl
 139+ 9639 10 E2            djnz 3B
 140+ 963B CD A2 9F     2 call Genera_coordenadas
 141+ 963E C9           	ret
 142+ 963F
 143+ 963F              ; -----------------------------
 144+ 963F              ;
 145+ 963F              ;	27/5/23
 146+ 963F              ;
 147+ 963F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 963F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 963F              ;
 150+ 963F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 963F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 963F              ;
 153+ 963F              ;	Modifica: A y (Puntero_objeto).
 154+ 963F
 155+ 963F 3A B2 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9642 CB 47        	bit 0,a
 157+ 9644 C8           	ret z
 158+ 9645 CB 87        	res 0,a
 159+ 9647 32 B2 89     	ld (Ctrl_2),a
 160+ 964A 2A D3 89     	ld hl,(Repone_puntero_objeto)
 161+ 964D 22 8F 89     	ld (Puntero_objeto),hl
 162+ 9650 C9           	ret
 163+ 9651
 164+ 9651              ; ******************************************************************************************************************************************************************************************
 165+ 9651              ;
 166+ 9651              ;	19/10/22
 167+ 9651              ;
 168+ 9651              ;	Mov_right.
 169+ 9651              ;
 170+ 9651              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9651              ;
 172+ 9651
 173+ 9651 3A AD 89     Mov_right ld a,(Ctrl_0)
 174+ 9654 CB 77        	bit 6,a
 175+ 9656 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9658
 177+ 9658 CD 90 98     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 965B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 965C
 180+ 965C 21 AD 89     	ld hl,Ctrl_0
 181+ 965F CB E6        	set 4,(hl)
 182+ 9661 18 52        	jr 8F
 183+ 9663
 184+ 9663 21 AD 89     10 ld hl,Ctrl_0
 185+ 9666 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9668              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9668              ; 																	; _ en el caso de que no lo haya.
 188+ 9668 3A 91 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 966B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 966D 20 46        	jr nz,8F
 191+ 966F
 192+ 966F 3A 93 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9672 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9673 28 40        	jr z,8F
 195+ 9675
 196+ 9675              ; ---------- ---------- ----------
 197+ 9675              ;
 198+ 9675              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9675
 200+ 9675 3A B5 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9678 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 967A 28 11        	jr z,1F
 203+ 967C 38 06        	jr c,6F
 204+ 967E FE 04        	cp 4
 205+ 9680 28 14        	jr z,7F
 206+ 9682 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9684
 208+ 9684              ; ---------- ---------- ----------
 209+ 9684              ;
 210+ 9684              ; Perfiles de velocidad
 211+ 9684              ;
 212+ 9684
 213+ 9684 3A 93 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9687 FE FE        	cp $fe
 215+ 9689 20 2A        	jr nz,8F
 216+ 968B 18 10        	jr 3F
 217+ 968D 3A 93 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9690 FE FD        	cp $fd
 219+ 9692 20 21        	jr nz,8F
 220+ 9694 18 07        	jr 3F
 221+ 9696 3A 93 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9699 FE FB        	cp $fb
 223+ 969B 20 18        	jr nz,8F
 224+ 969D
 225+ 969D              ; ---------- ---------- ----------
 226+ 969D
 227+ 969D              3
 228+ 969D CD D0 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 96A0              ;	call Reinicio
 230+ 96A0
 231+ 96A0              ; ---------- ---------- ----------
 232+ 96A0              ;
 233+ 96A0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 96A0
 235+ 96A0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 96A2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 96A3 CD BC 96     	call DESPLZ_DER
 238+ 96A6 C1           	pop bc
 239+ 96A7 10 F9        	djnz 5B
 240+ 96A9 2A 8D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 96AC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 96AD 22 8D 89     	ld (Posicion_actual),hl
 243+ 96B0 CD A2 9F     	call Genera_coordenadas
 244+ 96B3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 96B5
 246+ 96B5              ; ---------- ---------- ----------
 247+ 96B5
 248+ 96B5 2A 8D 89     8 ld hl,(Posicion_actual)
 249+ 96B8 CD BC 96     	call DESPLZ_DER
 250+ 96BB C9           2 ret
 251+ 96BC
 252+ 96BC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 96BC              ;
 254+ 96BC              ;	22/9/22
 255+ 96BC              ;
 256+ 96BC
 257+ 96BC CD CB 96     DESPLZ_DER call Desplaza_derecha
 258+ 96BF CD 17 97         call modifica_parametros_1er_DESPLZ_2
 259+ 96C2 CD 40 97         call Ciclo_completo
 260+ 96C5 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 96C8 CB FE        	set 7,(hl)
 262+ 96CA C9           	ret
 263+ 96CB
 264+ 96CB              ; ******************************************************************************************************************************************************************************************
 265+ 96CB              ;	15/02/23
 266+ 96CB              ;
 267+ 96CB
 268+ 96CB 3A B5 89     Desplaza_derecha ld a,(Vel_right)
 269+ 96CE 47           	ld b,a
 270+ 96CF 2A 99 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 96D2 23           1 inc hl
 272+ 96D3 23           	inc hl
 273+ 96D4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 96D6 22 99 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 96D9 CD 77 8C     	call Extrae_address
 276+ 96DC 22 8F 89     	ld (Puntero_objeto),hl
 277+ 96DF
 278+ 96DF              ; Modifica (Puntero_DESPLZ_izq).
 279+ 96DF
 280+ 96DF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 96DF              ; Cuántos movimientos hemos hecho ??
 282+ 96DF              ; DE contiene (Puntero_DESPLZ_der).
 283+ 96DF
 284+ 96DF 2A 95 89     7 ld hl,(Indice_Sprite_der)
 285+ 96E2 EB           	ex de,hl
 286+ 96E3 A7           	and a
 287+ 96E4 ED 52        	sbc hl,de
 288+ 96E6 CB 3D        	srl l
 289+ 96E8 3E 08        6 ld a,8
 290+ 96EA 95           	sub l
 291+ 96EB 30 1E        	jr nc,3F
 292+ 96ED
 293+ 96ED              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 96ED              ; B="0".
 295+ 96ED
 296+ 96ED 04           4 inc b
 297+ 96EE 3C           	inc a
 298+ 96EF 20 FC        	jr nz,4B
 299+ 96F1 78           	ld a,b
 300+ 96F2 08           	ex af,af
 301+ 96F3 2A 95 89     	ld hl,(Indice_Sprite_der)
 302+ 96F6 23           5 inc hl
 303+ 96F7 23           	inc hl
 304+ 96F8 10 FC        	djnz 5B
 305+ 96FA 22 99 89     	ld (Puntero_DESPLZ_der),hl
 306+ 96FD CD 77 8C     	call Extrae_address
 307+ 9700 22 8F 89     	ld (Puntero_objeto),hl
 308+ 9703
 309+ 9703              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9703              ; _(Posicion_actual).
 311+ 9703
 312+ 9703 21 8D 89     	ld hl,Posicion_actual
 313+ 9706 34           	inc (hl)
 314+ 9707 08               ex af,af
 315+ 9708 6F           	ld l,a
 316+ 9709 18 DD        	jr 6B
 317+ 970B
 318+ 970B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 970B
 320+ 970B 47           3 ld b,a
 321+ 970C 2A 97 89     	ld hl,(Indice_Sprite_izq)
 322+ 970F 23           2 inc hl
 323+ 9710 23           	inc hl
 324+ 9711 10 FC        	djnz 2B
 325+ 9713 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9716 C9           8 ret
 327+ 9717
 328+ 9717              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9717              ;
 330+ 9717              ;	24/7/22
 331+ 9717              ;
 332+ 9717              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9717              ;
 334+ 9717              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9717              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9717              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9717
 338+ 9717 3A 93 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 971A A7           	and a
 340+ 971B 20 1F        	jr nz,1F
 341+ 971D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 971F 32 93 89         ld (CTRL_DESPLZ),a
 343+ 9722
 344+ 9722 21 8C 89     	ld hl,Columns
 345+ 9725 34           	inc (hl)
 346+ 9726 3A 9F 89     	ld a,(Cuad_objeto)
 347+ 9729 E6 01        	and 1
 348+ 972B 28 0F        	jr z,1F
 349+ 972D 2A 8D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9730 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9731 22 8D 89     	ld (Posicion_actual),hl
 352+ 9734 CD A2 9F     	call Genera_coordenadas
 353+ 9737 CD 9C 98     	call Inc_CTRL_DESPLZ
 354+ 973A 18 03        	jr 2F
 355+ 973C CD 9C 98     1 call Inc_CTRL_DESPLZ
 356+ 973F C9           2 ret
 357+ 9740
 358+ 9740              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9740              ;
 360+ 9740              ;	24/7/22
 361+ 9740              ;
 362+ 9740              ;	Ciclo_completo.
 363+ 9740              ;
 364+ 9740              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9740              ;
 366+ 9740              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9740              ; 	Decrementamos (Columns).
 368+ 9740              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9740              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9740
 371+ 9740
 372+ 9740 3A 93 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9743 FE FF        	cp $ff
 374+ 9745 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9747 E6 F0        	and $f0
 376+ 9749 20 28        	jr nz,3F
 377+ 974B
 378+ 974B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 974B
 380+ 974B 3A 93 89     	ld a,(CTRL_DESPLZ)
 381+ 974E 47           	ld b,a
 382+ 974F 3E F8        	ld a,$f8
 383+ 9751 80           	add b
 384+ 9752 32 93 89     	ld (CTRL_DESPLZ),a
 385+ 9755 18 1C        	jr 3F
 386+ 9757 21 8C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 975A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 975B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 975C 32 93 89     	ld (CTRL_DESPLZ),a
 390+ 975F 3A 9F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9762 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9764 20 0A        	jr nz,2F
 393+ 9766 2A 8D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9769 23           	inc hl
 395+ 976A 22 8D 89     	ld (Posicion_actual),hl
 396+ 976D CD A2 9F     	call Genera_coordenadas
 397+ 9770
 398+ 9770              ; Inicia el puntero de Sprite.
 399+ 9770
 400+ 9770 CD 8C 8C     2 call Inicia_puntero_objeto_der
 401+ 9773 C9           3 ret
 402+ 9774
 403+ 9774              ; ******************************************************************************************************************************************************************************************
 404+ 9774              ;
 405+ 9774              ;	15/02/23
 406+ 9774              ;
 407+ 9774              ;	Mov_left.
 408+ 9774              ;
 409+ 9774              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9774              ;
 411+ 9774              Mov_left
 412+ 9774
 413+ 9774 21 AD 89     	ld hl,Ctrl_0
 414+ 9777 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9779              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9779              ; 																	; _ en el caso de que no lo haya.
 417+ 9779 3A AD 89     	ld a,(Ctrl_0)
 418+ 977C CB 77        	bit 6,a
 419+ 977E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9780
 421+ 9780 CD 96 98     	call Stop_Amadeus_left
 422+ 9783 C8           	ret z
 423+ 9784 20 4A        	jr nz,8F
 424+ 9786
 425+ 9786 3A 91 89     11 ld a,(Coordenada_X)
 426+ 9789 A7           	and a
 427+ 978A 20 44        	jr nz,8F
 428+ 978C
 429+ 978C 3A 93 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 978F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9790 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9792
 433+ 9792              ; ---------- ---------- ----------
 434+ 9792
 435+ 9792 3A B4 89     	ld a,(Vel_left)
 436+ 9795 FE 02        	cp 2
 437+ 9797 28 0F        	jr z,1F
 438+ 9799 38 04        	jr c,6F
 439+ 979B FE 04        	cp 4
 440+ 979D 28 12        	jr z,7F
 441+ 979F
 442+ 979F              ; ---------- ---------- ----------
 443+ 979F
 444+ 979F 3A 93 89     6 ld a,(CTRL_DESPLZ)
 445+ 97A2 FE F8        	cp $f8
 446+ 97A4 20 2A        	jr nz,8F
 447+ 97A6 18 10        	jr 4F
 448+ 97A8 3A 93 89     1 ld a,(CTRL_DESPLZ)
 449+ 97AB FE F9        	cp $f9
 450+ 97AD 20 21        	jr nz,8F
 451+ 97AF 18 07        	jr 4F
 452+ 97B1 3A 93 89     7 ld a,(CTRL_DESPLZ)
 453+ 97B4 FE FB        	cp $fb
 454+ 97B6 20 18        	jr nz,8F
 455+ 97B8
 456+ 97B8              ; ---------- ---------- ----------
 457+ 97B8
 458+ 97B8              4
 459+ 97B8 CD BE 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 97BB              ;	call Reinicio
 461+ 97BB
 462+ 97BB              ; ---------- ---------- ----------
 463+ 97BB
 464+ 97BB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 97BD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 97BE
 467+ 97BE              ;	ld hl,(Indice_Sprite_izq)
 468+ 97BE              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 97BE
 470+ 97BE CD D7 97     	call DESPLZ_IZQ
 471+ 97C1 C1           	pop bc
 472+ 97C2 10 F9        	djnz 5B
 473+ 97C4 2A 8D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 97C7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 97C8 22 8D 89     	ld (Posicion_actual),hl
 476+ 97CB CD A2 9F     	call Genera_coordenadas
 477+ 97CE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 97D0
 479+ 97D0              ; ---------- ---------- ----------
 480+ 97D0
 481+ 97D0              ; Movemos, no hay recolocación.
 482+ 97D0
 483+ 97D0 2A 8D 89     8 ld hl,(Posicion_actual)
 484+ 97D3 CD D7 97     	call DESPLZ_IZQ
 485+ 97D6 C9           2 ret
 486+ 97D7
 487+ 97D7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 97D7              ;
 489+ 97D7              ;	22/9/22
 490+ 97D7
 491+ 97D7              DESPLZ_IZQ
 492+ 97D7
 493+ 97D7 CD E6 97     	call Desplaza_izquierda
 494+ 97DA CD 32 98         call modifica_parametros_1er_DESPLZ
 495+ 97DD CD 5A 98     	call Ciclo_completo_2
 496+ 97E0 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 97E3 CB BE        	res 7,(hl)
 498+ 97E5 C9           	ret
 499+ 97E6
 500+ 97E6              Desplaza_izquierda
 501+ 97E6
 502+ 97E6 3A B4 89     	ld a,(Vel_left)
 503+ 97E9 47           	ld b,a
 504+ 97EA 2A 9B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 97ED 23           1 inc hl
 506+ 97EE 23           	inc hl
 507+ 97EF 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 97F1 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 97F4 CD 77 8C     	call Extrae_address
 510+ 97F7 22 8F 89     	ld (Puntero_objeto),hl
 511+ 97FA
 512+ 97FA              ; Modifica (Puntero_DESPLZ_der).
 513+ 97FA
 514+ 97FA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 97FA              ; Cuántos movimientos hemos hecho ??
 516+ 97FA              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 97FA
 518+ 97FA 2A 97 89     7 ld hl,(Indice_Sprite_izq)
 519+ 97FD EB           	ex de,hl
 520+ 97FE A7           	and a
 521+ 97FF ED 52        	sbc hl,de
 522+ 9801 CB 3D        	srl l
 523+ 9803 3E 08        6 ld a,8
 524+ 9805 95           	sub l
 525+ 9806 30 1E        	jr nc,3F
 526+ 9808
 527+ 9808              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9808              ; B="0".
 529+ 9808
 530+ 9808 04           4 inc b
 531+ 9809 3C           	inc a
 532+ 980A 20 FC        	jr nz,4B
 533+ 980C 78           	ld a,b
 534+ 980D 08           	ex af,af
 535+ 980E 2A 97 89     	ld hl,(Indice_Sprite_izq)
 536+ 9811 23           5 inc hl
 537+ 9812 23           	inc hl
 538+ 9813 10 FC        	djnz 5B
 539+ 9815 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9818 CD 77 8C     	call Extrae_address
 541+ 981B 22 8F 89     	ld (Puntero_objeto),hl
 542+ 981E
 543+ 981E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 981E              ; _(Posicion_actual).
 545+ 981E
 546+ 981E 21 8D 89     	ld hl,Posicion_actual
 547+ 9821 35           	dec (hl)
 548+ 9822 08           	ex af,af
 549+ 9823 6F           	ld l,a
 550+ 9824 18 DD        	jr 6B
 551+ 9826
 552+ 9826              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9826
 554+ 9826 47           3 ld b,a
 555+ 9827 2A 95 89     	ld hl,(Indice_Sprite_der)
 556+ 982A 23           2 inc hl
 557+ 982B 23           	inc hl
 558+ 982C 10 FC        	djnz 2B
 559+ 982E 22 99 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9831 C9           8 ret
 561+ 9832
 562+ 9832              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9832              ;
 564+ 9832              ;	modifica_parametros_1er_DESPLZ
 565+ 9832              ;
 566+ 9832              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9832              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9832              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9832
 570+ 9832 3A 93 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9835 A7           	and a
 572+ 9836 20 1E        	jr nz,1F
 573+ 9838 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9839 32 93 89         ld (CTRL_DESPLZ),a
 575+ 983C 21 8C 89     	ld hl,Columns
 576+ 983F 34           	inc (hl)
 577+ 9840 3A 9F 89     	ld a,(Cuad_objeto)
 578+ 9843 E6 01        	and 1
 579+ 9845 20 0F        	jr nz,1F
 580+ 9847 2A 8D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 984A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 984B 22 8D 89     	ld (Posicion_actual),hl
 583+ 984E CD A2 9F     	call Genera_coordenadas
 584+ 9851 CD AD 98     	call Dec_CTRL_DESPLZ
 585+ 9854 18 03        	jr 2F
 586+ 9856 CD AD 98     1 call Dec_CTRL_DESPLZ
 587+ 9859 C9           2 ret
 588+ 985A
 589+ 985A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 985A
 591+ 985A 3A 93 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 985D FE F7        	cp $f7
 593+ 985F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9861 30 2C        	jr nc,3F
 595+ 9863
 596+ 9863              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9863
 598+ 9863 06 00        	ld b,0
 599+ 9865 04           4 inc b
 600+ 9866 3C           	inc a
 601+ 9867 FE F7        	cp $f7
 602+ 9869 20 FA        	jr nz,4B
 603+ 986B 3E FF        	ld a,$ff
 604+ 986D 90           	sub b
 605+ 986E 32 93 89     	ld (CTRL_DESPLZ),a
 606+ 9871 18 1C        	jr 3F
 607+ 9873
 608+ 9873              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9873
 610+ 9873 21 8C 89     1 ld hl,Columns
 611+ 9876 35           	dec (hl)
 612+ 9877 AF           	xor a
 613+ 9878 32 93 89     	ld (CTRL_DESPLZ),a
 614+ 987B 3A 9F 89     	ld a,(Cuad_objeto)
 615+ 987E E6 01        	and 1
 616+ 9880 28 0A        	jr z,2F
 617+ 9882 2A 8D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9885 2B           	dec hl
 619+ 9886 22 8D 89     	ld (Posicion_actual),hl
 620+ 9889 CD A2 9F     	call Genera_coordenadas
 621+ 988C
 622+ 988C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 988C
 624+ 988C CD 9F 8C     2 call Inicia_puntero_objeto_izq
 625+ 988F C9           3 ret
 626+ 9890
 627+ 9890              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9890              ;
 629+ 9890              ;	19/10/22
 630+ 9890              ;
 631+ 9890              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9890              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9890
 634+ 9890 3A 91 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9893 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9895 C9           	ret
 637+ 9896
 638+ 9896              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9896              ;
 640+ 9896              ;	19/10/22
 641+ 9896              ;
 642+ 9896              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9896              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9896
 645+ 9896 3A 91 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9899 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 989B C9           	ret
 648+ 989C
 649+ 989C              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 989C              ;
 651+ 989C              ;	24/7/22
 652+ 989C              ;
 653+ 989C              ;	Inc_CTRL_DESPLZ
 654+ 989C              ;
 655+ 989C              ;
 656+ 989C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 989C
 658+ 989C 21 93 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 989F 3A B5 89     	ld a,(Vel_right)
 660+ 98A2 A7           	and a
 661+ 98A3 28 06        	jr z,1F
 662+ 98A5 47           	ld b,a
 663+ 98A6 34           3 inc (hl)
 664+ 98A7 10 FD        	djnz 3B
 665+ 98A9 18 01        	jr 2F
 666+ 98AB 34           1 inc (hl)
 667+ 98AC C9           2 ret
 668+ 98AD
 669+ 98AD              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 98AD              ;
 671+ 98AD              ;	5/2/23
 672+ 98AD              ;
 673+ 98AD              ;	Dec_CTRL_DESPLZ
 674+ 98AD              ;
 675+ 98AD              ;
 676+ 98AD              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 98AD
 678+ 98AD 21 93 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 98B0 3A B4 89     	ld a,(Vel_left)
 680+ 98B3 A7           	and a
 681+ 98B4 28 06        	jr z,1F
 682+ 98B6 47           	ld b,a
 683+ 98B7 35           3 dec (hl)
 684+ 98B8 10 FD        	djnz 3B
 685+ 98BA 18 01        	jr 2F
 686+ 98BC 35           1 dec (hl)
 687+ 98BD C9           2 ret
 688+ 98BE
 689+ 98BE              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 98BE
 691+ 98BE 2A 8D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 98C1 01 1F 00     	ld bc,31
 693+ 98C4 A7           	and a
 694+ 98C5 ED 4A        	adc hl,bc
 695+ 98C7 22 8D 89     	ld (Posicion_actual),hl
 696+ 98CA 21 AD 89     	ld hl,Ctrl_0														; $xxx1
 697+ 98CD CB C6        	set 0,(hl)
 698+ 98CF C9           	ret
 699+ 98D0
 700+ 98D0              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 98D0
 702+ 98D0 2A 8D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 98D3 01 1F 00     	ld bc,31
 704+ 98D6 A7           	and a
 705+ 98D7 ED 42        	sbc hl,bc
 706+ 98D9 22 8D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 98DC 21 AD 89     	ld hl,Ctrl_0
 708+ 98DF CB CE        	set 1,(hl)
 709+ 98E1 C9           	ret
 710+ 98E2
 711+ 98E2              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 98E2
 713+ 98E2 24           Reaparece_abajo inc h
 714+ 98E3 01 E0 17     	ld bc,$17e0
 715+ 98E6 A7           	and a
 716+ 98E7 ED 4A        	adc hl,bc
 717+ 98E9 22 8D 89     	ld (Posicion_actual),hl
 718+ 98EC 21 AD 89     	ld hl,Ctrl_0
 719+ 98EF CB D6        	set 2,(hl)
 720+ 98F1 C9           	ret
 721+ 98F2
 722+ 98F2              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 98F2
 724+ 98F2 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 98F5 A7           	and a
 726+ 98F6 ED 42        	sbc hl,bc
 727+ 98F8 22 8D 89     	ld (Posicion_actual),hl
 728+ 98FB 21 AD 89     	ld hl,Ctrl_0
 729+ 98FE CB DE        	set 3,(hl)
 730+ 9900 C9           	ret
 731+ 9901
 732+ 9901              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9901              ;
 734+ 9901              ;	15/07/23
 735+ 9901
 736+ 9901              Reinicio
 737+ 9901
 738+ 9901              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9901
 740+ 9901 AF           	xor a
 741+ 9902 21 CA 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9905 CD 23 99     	call Limpia_contenido_hl
 743+ 9908
 744+ 9908 21 8D 89     	ld hl,Posicion_actual
 745+ 990B CD 23 99     	call Limpia_contenido_hl
 746+ 990E
 747+ 990E CD DE 8D     	call Inicializa_Puntero_indice_mov
 748+ 9911 CD EF 99     	call Inicia_Puntero_mov
 749+ 9914
 750+ 9914 21 CC 89     	ld hl,Incrementa_puntero
 751+ 9917 06 05        	ld b,5
 752+ 9919 77           1 ld (hl),a
 753+ 991A 23           	inc hl
 754+ 991B 10 FC        	djnz 1B
 755+ 991D
 756+ 991D 21 B2 89     	ld hl,Ctrl_2
 757+ 9920 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9922
 759+ 9922 C9           	ret
 760+ 9923
 761+ 9923 77           Limpia_contenido_hl	ld (hl),a
 762+ 9924 23           	inc hl
 763+ 9925 77           	ld (hl),a
 764+ 9926 C9           	ret
 765+ 9927
 766+ 9927
# file closed: Direcciones.asm
1877  9927              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9927              ; ----- ----- ----- ----- -----
   2+ 9927              ;
   3+ 9927              ;   28/12/23
   4+ 9927
   5+ 9927              Movimiento
   6+ 9927
   7+ 9927              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9927
   9+ 9927 3A B2 89         ld a,(Ctrl_2)
  10+ 992A CB 57            bit 2,a
  11+ 992C 20 1B            jr nz, Desplazamiento_iniciado
  12+ 992E
  13+ 992E 2A C8 89         ld hl,(Puntero_mov)
  14+ 9931 7E               ld a,(hl)
  15+ 9932
  16+ 9932              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9932
  18+ 9932              Inicia_desplazamiento.
  19+ 9932
  20+ 9932              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9932
  22+ 9932 CD 25 9A         call Ajusta_velocidad_desplazamiento
  23+ 9935
  24+ 9935              ; Iniciamos (Repetimos_mov).
  25+ 9935
  26+ 9935 7E               ld a,(hl)
  27+ 9936 E6 0F            and $0f
  28+ 9938 32 CE 89         ld (Repetimos_desplazamiento),a
  29+ 993B 32 CF 89         ld (Repetimos_desplazamiento_backup),a
  30+ 993E
  31+ 993E              ; Iniciamos (Cola_de_desplazamiento).
  32+ 993E
  33+ 993E 23               inc hl
  34+ 993F 7E               ld a,(hl)
  35+ 9940 32 D1 89         ld (Cola_de_desplazamiento),a
  36+ 9943 2B               dec hl
  37+ 9944
  38+ 9944 21 B2 89         ld hl,Ctrl_2
  39+ 9947 CB D6            set 2,(hl)
  40+ 9949
  41+ 9949              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9949              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9949
  44+ 9949              Desplazamiento_iniciado
  45+ 9949
  46+ 9949 CD F9 99         call Aplica_desplazamiento
  47+ 994C
  48+ 994C              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 994C
  50+ 994C 3A F1 89         ld a,(Ctrl_3)
  51+ 994F CB 4F            bit 1,a
  52+ 9951 C0               ret nz
  53+ 9952
  54+ 9952 21 CE 89     3 ld hl,Repetimos_desplazamiento
  55+ 9955 35               dec (hl)
  56+ 9956 C0               ret nz
  57+ 9957
  58+ 9957              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9957              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9957              ; Analiza (Cola_de_desplazamiento).
  61+ 9957
  62+ 9957 3A D1 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 995A A7               and a
  64+ 995B CC 4E 9A         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 995E 28 30            jr z,Reinicia_el_movimiento
  66+ 9960
  67+ 9960 FE FF            cp $ff
  68+ 9962 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9964
  70+ 9964 FE FE            cp $fe
  71+ 9966 CC D3 99         call z,Fijamos_bucle
  72+ 9969 28 25            jr z,Reinicia_el_movimiento
  73+ 996B
  74+ 996B FE FD            cp $fd
  75+ 996D 20 11            jr nz,1F
  76+ 996F
  77+ 996F              ; ---
  78+ 996F              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 996F
  80+ 996F 3A B2 89         ld a,(Ctrl_2)
  81+ 9972 CB 5F            bit 3,a
  82+ 9974 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9976
  84+ 9976              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9976
  86+ 9976 21 B2 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9979 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 997B
  89+ 997B CD E4 99         call Inicia_Repetimos_movimiento
  90+ 997E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9980              ; ---
  92+ 9980
  93+ 9980 FE 01        1 cp 1
  94+ 9982 CA BD 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9985
  96+ 9985 3D               dec a
  97+ 9986 32 D1 89         ld (Cola_de_desplazamiento),a
  98+ 9989
  99+ 9989 3A CF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 998C 32 CE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 998F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 998F C9               ret
 103+ 9990
 104+ 9990              Reinicia_el_movimiento
 105+ 9990
 106+ 9990 3A B2 89         ld a,(Ctrl_2)
 107+ 9993 CB 5F            bit 3,a
 108+ 9995 28 1B            jr z,2F
 109+ 9997
 110+ 9997              ; (Cola_de_desplazamiento)="254".
 111+ 9997
 112+ 9997 21 D0 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 999A 35               dec (hl)
 114+ 999B 20 15            jr nz,2F
 115+ 999D
 116+ 999D              ; Fin de las repeticiones del último movimiento.
 117+ 999D
 118+ 999D 21 B2 89         ld hl,Ctrl_2
 119+ 99A0 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 99A2
 121+ 99A2 2A C8 89         ld hl,(Puntero_mov)
 122+ 99A5 23               inc hl
 123+ 99A6 23               inc hl
 124+ 99A7 23               inc hl
 125+ 99A8 22 C8 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 99AB              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 99AB 7E               ld a,(hl)
 128+ 99AC 32 D1 89         ld (Cola_de_desplazamiento),a
 129+ 99AF
 130+ 99AF C3 57 99         jp Cola
 131+ 99B2
 132+ 99B2 CD EF 99     2 call Inicia_Puntero_mov
 133+ 99B5
 134+ 99B5 21 B2 89         ld hl,Ctrl_2
 135+ 99B8 CB 96            res 2,(hl)
 136+ 99BA
 137+ 99BA C3 27 99         jp Movimiento
 138+ 99BD
 139+ 99BD              Siguiente_desplazamiento
 140+ 99BD
 141+ 99BD              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 99BD              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 99BD
 144+ 99BD 21 B2 89         ld hl,Ctrl_2
 145+ 99C0 CB 96            res 2,(hl)
 146+ 99C2
 147+ 99C2 2A C8 89         ld hl,(Puntero_mov)
 148+ 99C5 23               inc hl
 149+ 99C6 23               inc hl
 150+ 99C7 22 C8 89         ld (Puntero_mov),hl
 151+ 99CA
 152+ 99CA 7E               ld a,(hl)
 153+ 99CB A7               and a
 154+ 99CC CC 4E 9A         call z,Incrementa_Puntero_indice_mov
 155+ 99CF CA 90 99         jp z,Reinicia_el_movimiento
 156+ 99D2
 157+ 99D2 C9               ret
 158+ 99D3
 159+ 99D3              ; Subrutinas -----------------------------------------
 160+ 99D3              ; ---------- --------- --------- ---------- ----------
 161+ 99D3              ;
 162+ 99D3              ;   24/07/23
 163+ 99D3              ;
 164+ 99D3              ;   Fijamos_bucle
 165+ 99D3              ;
 166+ 99D3              ;
 167+ 99D3
 168+ 99D3              Fijamos_bucle
 169+ 99D3
 170+ 99D3 3A CC 89         ld a,(Incrementa_puntero)
 171+ 99D6 3C               inc a
 172+ 99D7 32 CD 89         ld (Incrementa_puntero_backup),a
 173+ 99DA
 174+ 99DA CD 4E 9A         call Incrementa_Puntero_indice_mov
 175+ 99DD 2A C6 89         ld hl,(Puntero_indice_mov)
 176+ 99E0 22 CA 89         ld (Puntero_indice_mov_bucle),hl
 177+ 99E3 C9               ret
 178+ 99E4
 179+ 99E4              ; ---------- --------- --------- ---------- ----------
 180+ 99E4              ;
 181+ 99E4              ;   07/7/23
 182+ 99E4              ;
 183+ 99E4              ;   Inicia_Repetimos_movimiento
 184+ 99E4              ;
 185+ 99E4              ;
 186+ 99E4
 187+ 99E4              Inicia_Repetimos_movimiento
 188+ 99E4
 189+ 99E4              ; Iniciamos (Repetimos_movimiento).
 190+ 99E4
 191+ 99E4 DD 2A C8 89      ld ix,(Puntero_mov)
 192+ 99E8 DD 7E 02         ld a,(ix+2)
 193+ 99EB 32 D0 89         ld (Repetimos_movimiento),a
 194+ 99EE
 195+ 99EE C9               ret
 196+ 99EF
 197+ 99EF              ; ---------- --------- --------- ---------- ----------
 198+ 99EF              ;
 199+ 99EF              ;   26/6/23
 200+ 99EF              ;
 201+ 99EF              ;   Inicia_Puntero_mov
 202+ 99EF              ;
 203+ 99EF              ;
 204+ 99EF
 205+ 99EF 2A C6 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 99F2 CD 77 8C         call Extrae_address
 207+ 99F5 22 C8 89         ld (Puntero_mov),hl
 208+ 99F8 C9               ret
 209+ 99F9
 210+ 99F9              ; ---------- --------- --------- ---------- ----------
 211+ 99F9              ;
 212+ 99F9              ;   27/06/23
 213+ 99F9              ;
 214+ 99F9              ;   Aplica_movimiento.
 215+ 99F9
 216+ 99F9              Aplica_desplazamiento
 217+ 99F9
 218+ 99F9              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 99F9
 220+ 99F9 2A C8 89         ld hl, (Puntero_mov)
 221+ 99FC
 222+ 99FC 7E               ld a,(hl)
 223+ 99FD E6 F0            and $f0
 224+ 99FF C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9A00
 226+ 9A00 CB 7E            bit 7,(hl)
 227+ 9A02 28 03            jr z,1F
 228+ 9A04 CD 0E 96         call Mov_up
 229+ 9A07 2A C8 89     1 ld hl, (Puntero_mov)
 230+ 9A0A CB 76            bit 6,(hl)
 231+ 9A0C 28 03            jr z,2F
 232+ 9A0E CD D5 95         call Mov_down
 233+ 9A11
 234+ 9A11              ; Se ha aplicado reinicio ???
 235+ 9A11              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9A11
 237+ 9A11              ;    ld a,(Ctrl_3)
 238+ 9A11              ;    bit 1,a
 239+ 9A11              ;    ret nz
 240+ 9A11
 241+ 9A11 2A C8 89     2 ld hl, (Puntero_mov)
 242+ 9A14 CB 6E            bit 5,(hl)
 243+ 9A16 28 03            jr z,3F
 244+ 9A18 CD 74 97         call Mov_left
 245+ 9A1B 2A C8 89     3 ld hl, (Puntero_mov)
 246+ 9A1E CB 66            bit 4,(hl)
 247+ 9A20 C8               ret z
 248+ 9A21 CD 51 96         call Mov_right
 249+ 9A24 C9               ret
 250+ 9A25
 251+ 9A25              ; ---------- --------- --------- ---------- ----------
 252+ 9A25              ;
 253+ 9A25              ;   26/06/23
 254+ 9A25              ;
 255+ 9A25              ;   Ajusta_velocidad_desplazamiento.
 256+ 9A25
 257+ 9A25              Ajusta_velocidad_desplazamiento
 258+ 9A25
 259+ 9A25              ; 1er byte de la cadena de movimiento.
 260+ 9A25              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9A25
 262+ 9A25 CD 43 9A         call Extrae_nibble_alto
 263+ 9A28
 264+ 9A28 32 B6 89         ld (Vel_up),a
 265+ 9A2B 79               ld a,c
 266+ 9A2C E6 0F            and $0f
 267+ 9A2E 32 B7 89         ld (Vel_down),a
 268+ 9A31
 269+ 9A31              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9A31              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9A31
 272+ 9A31 23               inc hl
 273+ 9A32 CD 43 9A         call Extrae_nibble_alto
 274+ 9A35
 275+ 9A35 32 B4 89         ld (Vel_left),a
 276+ 9A38 79               ld a,c
 277+ 9A39 E6 0F            and $0f
 278+ 9A3B 32 B5 89         ld (Vel_right),a
 279+ 9A3E
 280+ 9A3E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9A3E
 282+ 9A3E 23               inc hl
 283+ 9A3F 22 C8 89         ld (Puntero_mov),hl
 284+ 9A42 C9               ret
 285+ 9A43
 286+ 9A43 06 04        Extrae_nibble_alto ld b,4
 287+ 9A45 7E               ld a,(hl)
 288+ 9A46 4F               ld c,a
 289+ 9A47 E6 F0            and $f0
 290+ 9A49 CB 3F        1 srl a
 291+ 9A4B 10 FC            djnz 1B
 292+ 9A4D C9               ret
 293+ 9A4E
 294+ 9A4E              ; ---------- --------- --------- ---------- ----------
 295+ 9A4E              ;
 296+ 9A4E              ;   5/7/23
 297+ 9A4E              ;
 298+ 9A4E              ;   Incrementa_Puntero_indice_mov
 299+ 9A4E
 300+ 9A4E              Incrementa_Puntero_indice_mov
 301+ 9A4E
 302+ 9A4E 21 CC 89         ld hl,Incrementa_puntero
 303+ 9A51 34               inc (hl)
 304+ 9A52
 305+ 9A52 2A C6 89         ld hl,(Puntero_indice_mov)
 306+ 9A55 01 02 00         ld bc,2
 307+ 9A58 A7               and a
 308+ 9A59 09               add hl,bc
 309+ 9A5A 22 C6 89         ld (Puntero_indice_mov),hl
 310+ 9A5D
 311+ 9A5D 7E               ld a,(hl)
 312+ 9A5E A7               and a
 313+ 9A5F
 314+ 9A5F              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9A5F
 316+ 9A5F              ;    jr z,$
 317+ 9A5F
 318+ 9A5F              ;! Reinicia el Patrón de movimiento.
 319+ 9A5F
 320+ 9A5F CC 64 9A         call z,Inicializa_Puntero_indice_mov_2
 321+ 9A62
 322+ 9A62 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9A63
 324+ 9A63 C9               ret
 325+ 9A64
 326+ 9A64              ; ---------- --------- --------- ---------- ----------
 327+ 9A64              ;
 328+ 9A64              ;   15/01/24
 329+ 9A64              ;
 330+ 9A64              ;   Inicializa_Puntero_indice_mov
 331+ 9A64
 332+ 9A64              Inicializa_Puntero_indice_mov_2
 333+ 9A64
 334+ 9A64              ; Existe etiqueta de bucle principal???
 335+ 9A64
 336+ 9A64 2A CA 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9A67 24               inc h
 338+ 9A68 25               dec h
 339+ 9A69 28 05            jr z,2F
 340+ 9A6B
 341+ 9A6B 22 C6 89         ld (Puntero_indice_mov),hl
 342+ 9A6E 18 14            jr 3F
 343+ 9A70
 344+ 9A70              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9A70
 346+ 9A70 3A CC 89     2 ld a,(Incrementa_puntero)
 347+ 9A73 47               ld b,a
 348+ 9A74
 349+ 9A74 2A C6 89         ld hl,(Puntero_indice_mov)
 350+ 9A77 2B           1 dec hl
 351+ 9A78 2B               dec hl
 352+ 9A79 10 FC            djnz 1B
 353+ 9A7B 22 C6 89         ld (Puntero_indice_mov),hl
 354+ 9A7E
 355+ 9A7E AF               xor a
 356+ 9A7F 32 CC 89         ld (Incrementa_puntero),a
 357+ 9A82 18 06            jr 4F
 358+ 9A84
 359+ 9A84 3A CD 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9A87 32 CC 89         ld (Incrementa_puntero),a
 361+ 9A8A C9           4 ret
 362+ 9A8B
 363+ 9A8B              ; ----------------------------------------------------------------------
 364+ 9A8B              ;
 365+ 9A8B              ;   30/01/24
 366+ 9A8B              ;
 367+ 9A8B              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9A8B
 369+ 9A8B 3A 8A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9A8E CD 2F 8F         call Calcula_salto_en_BC
 371+ 9A91 21 B8 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A94 A7               and a
 373+ 9A95 ED 4A            adc hl,bc
 374+ 9A97 C9               ret
 375+ 9A98
 376+ 9A98              ; ----------------------------------------------------------------------
 377+ 9A98              ;
 378+ 9A98              ;   30/01/24
 379+ 9A98              ;
 380+ 9A98              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A98              ;
 382+ 9A98              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A98
 384+ 9A98 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A99 23               inc hl
 386+ 9A9A 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A9B 69               ld l,c
 388+ 9A9C 60               ld h,b
 389+ 9A9D 22 AB 89         ld (Contador_de_mov_masticados),hl
 390+ 9AA0 C9               ret
 391+ 9AA1
# file closed: Movimiento.asm
1878  9AA1              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9AA1              ; ******************************************************************************************************************************************************************************************
   2+ 9AA1              ;
   3+ 9AA1              ;   21/07/23
   4+ 9AA1              ;
   5+ 9AA1              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9AA1              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9AA1              ;
   8+ 9AA1              ;
   9+ 9AA1              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9AA1              ;
  11+ 9AA1              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9AA1              ;               _ hacen las entidades hacia abajo.
  13+ 9AA1              ;
  14+ 9AA1              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9AA1              ;
  16+ 9AA1              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9AA1              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9AA1              ;
  19+ 9AA1              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9AA1              ;           _ la bala.
  21+ 9AA1              ;
  22+ 9AA1              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9AA1              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9AA1              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9AA1              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9AA1              ;           _ en el momento de generarse la bala)).
  27+ 9AA1
  28+ 9AA1              Genera_disparo
  29+ 9AA1
  30+ 9AA1              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9AA1              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9AA1              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9AA1              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9AA1              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9AA1              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9AA1              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9AA1
  38+ 9AA1              ; Exclusiones:
  39+ 9AA1
  40+ 9AA1 3A B7 89         ld a,(Vel_down)
  41+ 9AA4 47               ld b,a
  42+ 9AA5 3A 03 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9AA8 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9AA9 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9AAA 3A AE 89         ld a,(Columnas)
  46+ 9AAD 47               ld b,a
  47+ 9AAE 3A 8C 89         ld a,(Columns)
  48+ 9AB1 B8               cp b
  49+ 9AB2 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9AB3
  51+ 9AB3              ; ----- ----- -----
  52+ 9AB3
  53+ 9AB3 3A AD 89         ld a,(Ctrl_0)
  54+ 9AB6 CB 77            bit 6,a
  55+ 9AB8 20 06            jr nz,14F
  56+ 9ABA
  57+ 9ABA 3A 92 89         ld a,(Coordenada_y)
  58+ 9ABD FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9ABF D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9AC0
  61+ 9AC0 21 31 81     14 ld hl,Indice_disparo
  62+ 9AC3 3A 93 89         ld a,(CTRL_DESPLZ)
  63+ 9AC6 4F               ld c,a
  64+ 9AC7 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9AC9              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9AC9              ;                                            ""        ""       "f9", B="1"
  67+ 9AC9              ;                                            ""        ""       "fb", B="2"
  68+ 9AC9              ;                                            ""        ""       "fb", B="3"
  69+ 9AC9 A7               and a
  70+ 9ACA 28 10            jr z,1F
  71+ 9ACC E6 01            and 1
  72+ 9ACE C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9ACF
  74+ 9ACF 79               ld a,c
  75+ 9AD0 16 F9            ld d,$f9
  76+ 9AD2 23           2 inc hl
  77+ 9AD3 23               inc hl
  78+ 9AD4 04               inc b
  79+ 9AD5 BA               cp d
  80+ 9AD6 28 04            jr z,1F
  81+ 9AD8 14               inc d
  82+ 9AD9 14               inc d
  83+ 9ADA 18 F6            jr 2B
  84+ 9ADC
  85+ 9ADC CD 77 8C     1 call Extrae_address
  86+ 9ADF E5               push hl
  87+ 9AE0 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9AE2 DD 21 80 95  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9AE6
  90+ 9AE6              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9AE6              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9AE6
  93+ 9AE6 3A AD 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9AE9 CB 77            bit 6,a
  95+ 9AEB 20 04            jr nz,19F
  96+ 9AED
  97+ 9AED AF               xor a
  98+ 9AEE 32 0C 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9AF1
 100+ 9AF1 3A 9F 89     19 ld a,(Cuad_objeto)
 101+ 9AF4 FE 02            cp 2
 102+ 9AF6 38 66            jr c,3F
 103+ 9AF8 28 64            jr z,3F
 104+ 9AFA
 105+ 9AFA              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9AFA
 107+ 9AFA E6 01            and 1
 108+ 9AFC 28 30            jr z,4F
 109+ 9AFE
 110+ 9AFE              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9AFE              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9AFE              ;
 113+ 9AFE              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9AFE              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9AFE              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9AFE
 117+ 9AFE 2A 8D 89     	ld hl,(Posicion_actual)
 118+ 9B01
 119+ 9B01              ;   Amadeus o entidad ???.
 120+ 9B01
 121+ 9B01 3A AD 89         ld a,(Ctrl_0)
 122+ 9B04 CB 77            bit 6,a
 123+ 9B06 28 0A            jr z,8F
 124+ 9B08
 125+ 9B08              ; 	Dispara Amadeus.
 126+ 9B08
 127+ 9B08 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9B0A CD BB 92         call PreviousScan
 129+ 9B0D CD BB 92         call PreviousScan
 130+ 9B10
 131+ 9B10              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9B10              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9B10              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9B10              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9B10
 136+ 9B10 18 11            jr 10F
 137+ 9B12
 138+ 9B12              ; 	Dispara Entidad.
 139+ 9B12
 140+ 9B12 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9B15              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9B15
 143+ 9B15              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9B15              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9B15
 146+ 9B15 C5               push bc
 147+ 9B16 06 10            ld b,16
 148+ 9B18 CD AC 92     9 call NextScan
 149+ 9B1B 10 FB            djnz 9B
 150+ 9B1D C1               pop bc
 151+ 9B1E CD 88 9B         call Ajusta_disparo_parte_izquierda
 152+ 9B21 18 06            jr 17F
 153+ 9B23
 154+ 9B23              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9B23              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9B23              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9B23              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9B23
 159+ 9B23 CD 88 9B     10 call Ajusta_disparo_parte_izquierda
 160+ 9B26 CD FD 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9B29              ;                                                      ; _al generar el disparo.
 162+ 9B29
 163+ 9B29              ; 	LLegados a este punto tendremos:
 164+ 9B29              ;
 165+ 9B29              ;       Puntero_objeto_disparo en IY.
 166+ 9B29              ;       Rutinas_de_impresion en IX.
 167+ 9B29              ;       Puntero_de_impresion en HL.
 168+ 9B29              ;       Impacto/Dirección en BC.
 169+ 9B29
 170+ 9B29 CD 90 9B     17 call Almacena_disparo
 171+ 9B2C 18 52            jr 6F                                             ; RET.
 172+ 9B2E
 173+ 9B2E              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9B2E              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9B2E              ;
 176+ 9B2E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9B2E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9B2E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9B2E
 180+ 9B2E 2A 8D 89     4 ld hl,(Posicion_actual)
 181+ 9B31
 182+ 9B31              ;   Amadeus o entidad ???.
 183+ 9B31
 184+ 9B31 3A AD 89         ld a,(Ctrl_0)
 185+ 9B34 CB 77            bit 6,a
 186+ 9B36 28 0A            jr z,11F
 187+ 9B38
 188+ 9B38              ; 	Dispara Amadeus.
 189+ 9B38
 190+ 9B38 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9B3A CD BB 92         call PreviousScan
 192+ 9B3D CD BB 92         call PreviousScan
 193+ 9B40
 194+ 9B40              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9B40              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9B40              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9B40              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9B40
 199+ 9B40 18 11            jr 13F
 200+ 9B42
 201+ 9B42              ; 	Dispara Entidad.
 202+ 9B42
 203+ 9B42 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9B45              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9B45
 206+ 9B45              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9B45              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9B45
 209+ 9B45 C5               push bc
 210+ 9B46 06 10            ld b,16
 211+ 9B48 CD AC 92     12 call NextScan
 212+ 9B4B 10 FB            djnz 12B
 213+ 9B4D C1               pop bc
 214+ 9B4E
 215+ 9B4E CD 81 9B         call Ajusta_disparo_parte_derecha
 216+ 9B51 18 06            jr 18F
 217+ 9B53
 218+ 9B53              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9B53              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9B53              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9B53              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9B53
 223+ 9B53 CD 81 9B     13 call Ajusta_disparo_parte_derecha
 224+ 9B56 CD FD 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9B59              ;                                                       ; _al generar el disparo.
 226+ 9B59
 227+ 9B59              ; LLegados a este punto tendremos:
 228+ 9B59              ;
 229+ 9B59              ;       Puntero_objeto_disparo en IY.
 230+ 9B59              ;       Rutinas_de_impresion en IX.
 231+ 9B59              ;       Puntero_de_impresion en HL.
 232+ 9B59              ;       Impacto/Dirección en BC.
 233+ 9B59
 234+ 9B59 CD 90 9B     18 call Almacena_disparo
 235+ 9B5C 18 22            jr 6F                                               ; RET.
 236+ 9B5E
 237+ 9B5E              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9B5E
 239+ 9B5E 28 11        3 jr z,5F
 240+ 9B60
 241+ 9B60              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9B60              ;
 243+ 9B60              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9B60              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9B60              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9B60              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9B60
 248+ 9B60              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9B60              ;	   ""        ""       "f9", B="1"
 250+ 9B60              ;	   ""        ""       "fb", B="2"
 251+ 9B60              ; 	   ""        ""       "fb", B="3"
 252+ 9B60
 253+ 9B60 2A 8D 89     	ld hl,(Posicion_actual)
 254+ 9B63 CD AC 92     	call NextScan
 255+ 9B66
 256+ 9B66              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9B66              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9B66              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9B66              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9B66
 261+ 9B66 CD 88 9B         call Ajusta_disparo_parte_izquierda
 262+ 9B69
 263+ 9B69              ; 	No se produce impacto. B="$80"
 264+ 9B69              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9B69
 266+ 9B69 01 80 80         ld bc,$8080
 267+ 9B6C
 268+ 9B6C              ; 	LLegados a este punto tendremos:
 269+ 9B6C              ;
 270+ 9B6C              ;       Puntero_objeto_disparo en IY.
 271+ 9B6C              ;       Rutinas_de_impresion en IX.
 272+ 9B6C              ;       Puntero_de_impresion en HL.
 273+ 9B6C              ;       Impacto/Dirección en BC.
 274+ 9B6C
 275+ 9B6C CD 90 9B         call Almacena_disparo
 276+ 9B6F 18 0F            jr 6F                                           ; RET.
 277+ 9B71
 278+ 9B71              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9B71              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9B71              ;
 281+ 9B71              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9B71              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9B71              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9B71              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9B71
 286+ 9B71 2A 8D 89     5 ld hl,(Posicion_actual)
 287+ 9B74 CD AC 92     	call NextScan
 288+ 9B77
 289+ 9B77              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9B77              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9B77              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9B77              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9B77
 294+ 9B77 CD 81 9B         call Ajusta_disparo_parte_derecha
 295+ 9B7A
 296+ 9B7A              ; 	No se produce impacto. B="$80"
 297+ 9B7A              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9B7A
 299+ 9B7A 01 80 80     15 ld bc,$8080
 300+ 9B7D
 301+ 9B7D              ; 	LLegados a este punto tendremos:
 302+ 9B7D              ;
 303+ 9B7D              ;       Puntero_objeto_disparo en IY.
 304+ 9B7D              ;       Rutinas_de_impresion en IX.
 305+ 9B7D              ;       Puntero_de_impresion en HL.
 306+ 9B7D              ;       Impacto/Dirección en BC.
 307+ 9B7D
 308+ 9B7D CD 90 9B         call Almacena_disparo
 309+ 9B80
 310+ 9B80 C9           6 ret
 311+ 9B81
 312+ 9B81              ; ----------------------------------------------------------------
 313+ 9B81              ;
 314+ 9B81              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9B81              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9B81              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9B81
 318+ 9B81 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9B82 FE 02            cp 2
 320+ 9B84 38 01            jr c,1F
 321+ 9B86 23               inc hl
 322+ 9B87 C9           1 ret
 323+ 9B88
 324+ 9B88 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9B89 FE 01        	cp 1
 326+ 9B8B 20 01        	jr nz,1F
 327+ 9B8D 2B           	dec hl
 328+ 9B8E 2B           1 dec hl
 329+ 9B8F C9               ret
 330+ 9B90
 331+ 9B90              ; ----------------------------------------------------------------
 332+ 9B90              ;
 333+ 9B90              ;   25/02/23
 334+ 9B90              ;
 335+ 9B90              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9B90              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9B90              ;
 338+ 9B90              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9B90              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9B90
 341+ 9B90              Almacena_disparo
 342+ 9B90
 343+ 9B90 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9B91 F1               pop af
 345+ 9B92 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9B93
 347+ 9B93 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9B94 E6 01            and 1
 349+ 9B96 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9B98              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9B98              ; 	Dispara AMADEUS.
 352+ 9B98
 353+ 9B98              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9B98              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9B98              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9B98              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9B98
 358+ 9B98 C5               push bc
 359+ 9B99 01 68 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9B9C 2A F6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9B9F A7               and a
 362+ 9BA0 ED 42            sbc hl,bc
 363+ 9BA2 CC FC 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9BA5 C1               pop bc
 365+ 9BA6 28 54            jr z,4F
 366+ 9BA8
 367+ 9BA8 2A F6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9BAB 23               inc hl
 369+ 9BAC 23               inc hl
 370+ 9BAD 22 F6 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9BB0              ;                                                   ; _ Disparo_(+1).
 372+ 9BB0 18 18            jr 2F
 373+ 9BB2
 374+ 9BB2              ; Dispara una entidad.
 375+ 9BB2
 376+ 9BB2 C5           1 push bc
 377+ 9BB3 01 90 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9BB6 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9BB9 A7               and a
 380+ 9BBA ED 42            sbc hl,bc
 381+ 9BBC CC F5 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9BBF C1               pop bc
 383+ 9BC0 28 3A            jr z,4F
 384+ 9BC2
 385+ 9BC2 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9BC5 23               inc hl
 387+ 9BC6 23               inc hl
 388+ 9BC7 22 F4 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9BCA              ;                                                   ; _ Disparo_(+1).
 390+ 9BCA CD 77 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9BCD              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9BCD              ;
 393+ 9BCD              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9BCD              ;                                                     Rutinas_de_impresion en IX.
 395+ 9BCD              ;                                                     Puntero_de_impresion en HL.
 396+ 9BCD              ;                                                     Impacto/Dirección en BC.
 397+ 9BCD
 398+ 9BCD 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9BCE 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9BCF 23               inc hl                                          ; _ al siguiente.
 401+ 9BD0 A7               and a
 402+ 9BD1 20 C0            jr nz,3B
 403+ 9BD3
 404+ 9BD3 08               ex af,af
 405+ 9BD4 ED 73 E3 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9BD8 F9               ld sp,hl
 407+ 9BD9
 408+ 9BD9 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9BDB F5               push af                                         ; Puntero de impresión.
 410+ 9BDC FD E5            push iy                                         ; Puntero objeto.
 411+ 9BDE C5               push bc                                         ; Control.
 412+ 9BDF
 413+ 9BDF ED 7B E3 89      ld sp,(Stack)
 414+ 9BE3
 415+ 9BE3              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9BE3
 417+ 9BE3 21 D2 89     	ld hl,Ctrl_1
 418+ 9BE6 CB C6        	set 0,(hl)
 419+ 9BE8
 420+ 9BE8 DD E5        	push ix
 421+ 9BEA E1               pop hl
 422+ 9BEB F5               push af
 423+ 9BEC DD E1            pop ix
 424+ 9BEE
 425+ 9BEE CD BF 80     	call Guarda_foto_registros
 426+ 9BF1
 427+ 9BF1 21 D2 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9BF4 CB 86        	res 0,(hl)
 429+ 9BF6
 430+ 9BF6              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9BF6              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9BF6
 433+ 9BF6 CD FC 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9BF9 CD F5 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9BFC
 436+ 9BFC C9           4 ret
 437+ 9BFD
 438+ 9BFD              ; ----------------------------------------------------------------
 439+ 9BFD              ;
 440+ 9BFD              ;   4/3/23
 441+ 9BFD              ;
 442+ 9BFD              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9BFD              ;   _ al generarse el disparo.
 444+ 9BFD              ;
 445+ 9BFD              ;       "$80" ..... No se produce colisión.
 446+ 9BFD              ;       "$81" ..... Se produce colisión.
 447+ 9BFD              ;
 448+ 9BFD              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9BFD              ;         _ que forman el disparo.
 450+ 9BFD
 451+ 9BFD
 452+ 9BFD              Comprueba_Colision
 453+ 9BFD
 454+ 9BFD              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9BFD
 456+ 9BFD FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9BFF E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9C00
 459+ 9C00 CD 36 9C         call Modifica_H_Velocidad_disparo
 460+ 9C03
 461+ 9C03 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9C04 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9C06 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9C08
 465+ 9C08 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9C0A CD 26 9C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9C0D
 468+ 9C0D 7B               ld a,e
 469+ 9C0E E6 01            and 1
 470+ 9C10 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9C12              ;                                                  ; _ para activar IMPACTO.
 472+ 9C12 E1               pop hl
 473+ 9C13 E5               push hl
 474+ 9C14 CD AC 92         call NextScan
 475+ 9C17
 476+ 9C17 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9C18 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9C1A 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9C1C              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9C1C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9C1E CD 26 9C         call Bucle_2
 482+ 9C21
 483+ 9C21 43           1 ld b,e
 484+ 9C22 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9C23 FD E1            pop iy
 486+ 9C25 C9               ret
 487+ 9C26
 488+ 9C26              ; ---------- ----------
 489+ 9C26
 490+ 9C26 06 02        Bucle_2 ld b,2
 491+ 9C28 FD 7E 00     2 ld a,(iy)
 492+ 9C2B A6               and (hl)
 493+ 9C2C 28 02            jr z,1F
 494+ 9C2E 1E 81            ld e,$81
 495+ 9C30 23           1 inc hl
 496+ 9C31 FD 23            inc iy
 497+ 9C33 10 F3            djnz 2B
 498+ 9C35 C9               ret
 499+ 9C36
 500+ 9C36              ; ---------- ----------
 501+ 9C36              ;
 502+ 9C36              ;   21/7/23
 503+ 9C36
 504+ 9C36              Modifica_H_Velocidad_disparo
 505+ 9C36
 506+ 9C36 3A 03 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9C39 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9C3B D0               ret nc                                         ; _ incrementamos H.
 509+ 9C3C 24               inc h
 510+ 9C3D
 511+ 9C3D C9               ret
 512+ 9C3E
 513+ 9C3E              ; -------------------------------------------------------------------------------------------------------------
 514+ 9C3E              ;
 515+ 9C3E              ;   04/12/23
 516+ 9C3E              ;
 517+ 9C3E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9C3E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9C3E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9C3E              ;
 521+ 9C3E              ;   MODIFICA: HL,DE,B y A.
 522+ 9C3E
 523+ 9C3E              Genera_coordenadas_X
 524+ 9C3E
 525+ 9C3E              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9C3E              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9C3E
 528+ 9C3E              ;   Limpiamos almacenes.
 529+ 9C3E
 530+ 9C3E CD 6F 9C         call Limpia_Coordenadas_X
 531+ 9C41
 532+ 9C41              ;   Almacenamos coordenadas X.
 533+ 9C41
 534+ 9C41              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9C41
 536+ 9C41 2A A7 89         ld hl,(Puntero_de_impresion)
 537+ 9C44 11 00 8A         ld de,Coordenadas_X_Entidad
 538+ 9C47 06 02            ld b,2
 539+ 9C49
 540+ 9C49 3A 93 89         ld a,(CTRL_DESPLZ)
 541+ 9C4C A7               and a
 542+ 9C4D 28 01            jr z,1F
 543+ 9C4F 04               inc b
 544+ 9C50
 545+ 9C50 CD 66 9C     1 call Guarda_coordenadas_X
 546+ 9C53
 547+ 9C53              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9C53
 549+ 9C53 2A 13 87         ld hl,(p.imp.amadeus)
 550+ 9C56 11 FD 89         ld de,Coordenadas_X_Amadeus
 551+ 9C59 06 02            ld b,2
 552+ 9C5B
 553+ 9C5B 3A FF 86         ld a,(ctrl_desplz_amadeus)
 554+ 9C5E A7               and a
 555+ 9C5F 28 01            jr z,2F
 556+ 9C61 04               inc b
 557+ 9C62
 558+ 9C62 CD 66 9C     2 call Guarda_coordenadas_X
 559+ 9C65
 560+ 9C65              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9C65
 562+ 9C65 C9               ret
 563+ 9C66
 564+ 9C66              ; ----- ----- ----- ----- -----
 565+ 9C66
 566+ 9C66 7D           Guarda_coordenadas_X  ld a,l
 567+ 9C67 E6 1F            and $1f
 568+ 9C69 12           1 ld (de),a
 569+ 9C6A 3C               inc a
 570+ 9C6B 13               inc de
 571+ 9C6C 10 FB            djnz 1B
 572+ 9C6E C9               ret
 573+ 9C6F
 574+ 9C6F AF           Limpia_Coordenadas_X xor a
 575+ 9C70 06 06            ld b,6
 576+ 9C72 21 FD 89         ld hl,Coordenadas_X_Amadeus
 577+ 9C75 77           1 ld (hl),a
 578+ 9C76 23               inc hl
 579+ 9C77 10 FC            djnz 1B
 580+ 9C79 C9               ret
 581+ 9C7A
 582+ 9C7A              ; ----- ----- ----- ----- -----
 583+ 9C7A
 584+ 9C7A              Compara_coordenadas_X
 585+ 9C7A
 586+ 9C7A 06 03            ld b,3
 587+ 9C7C 11 02 8A         ld de,Coordenadas_X_Entidad+2
 588+ 9C7F
 589+ 9C7F 1A               ld a,(de)
 590+ 9C80 A7               and a
 591+ 9C81 20 01            jr nz,2F
 592+ 9C83 05               dec b
 593+ 9C84
 594+ 9C84 1B           2 dec de
 595+ 9C85 1B               dec de
 596+ 9C86 21 FD 89         ld hl,Coordenadas_X_Amadeus
 597+ 9C89
 598+ 9C89 D5           1 push de
 599+ 9C8A E5               push hl
 600+ 9C8B C5               push bc
 601+ 9C8C
 602+ 9C8C CD 96 9C         call Comparando
 603+ 9C8F
 604+ 9C8F C1               pop bc
 605+ 9C90 E1               pop hl
 606+ 9C91 D1               pop de
 607+ 9C92
 608+ 9C92 13               inc de
 609+ 9C93 10 F4            djnz 1B
 610+ 9C95
 611+ 9C95 C9               ret
 612+ 9C96
 613+ 9C96              ; ----- ----- ----- ----- -----
 614+ 9C96              ;
 615+ 9C96              ;   4/12/23
 616+ 9C96              ;
 617+ 9C96              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9C96
 619+ 9C96 06 03        Comparando ld b,3
 620+ 9C98 1A               ld a,(de)
 621+ 9C99 4E           2 ld c,(hl)
 622+ 9C9A B9               cp c
 623+ 9C9B 28 04            jr z,1F
 624+ 9C9D 23               inc hl
 625+ 9C9E 10 F9            djnz 2B
 626+ 9CA0 C9               ret
 627+ 9CA1
 628+ 9CA1 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9CA3 32 A0 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9CA6 21 F8 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9CA9 CB D6            set 2,(hl)
 632+ 9CAB C9               ret
 633+ 9CAC
 634+ 9CAC              ; -----------------------------------------------------------------------
 635+ 9CAC              ;
 636+ 9CAC              ;   7/12/23
 637+ 9CAC              ;
 638+ 9CAC
 639+ 9CAC              Detecta_colision_nave_entidad
 640+ 9CAC
 641+ 9CAC              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9CAC
 643+ 9CAC FD 2A 8F 89      ld iy,(Puntero_objeto)
 644+ 9CB0 2A A7 89         ld hl,(Puntero_de_impresion)
 645+ 9CB3
 646+ 9CB3 E5               push hl
 647+ 9CB4
 648+ 9CB4              ; ----- ----- -----
 649+ 9CB4 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9CB6 06 0A            ld b,10
 651+ 9CB8 CD E8 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9CBB 7B               ld a,e
 653+ 9CBC FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9CBE 38 0E            jr c,3F
 655+ 9CC0
 656+ 9CC0              ; LLegados a este punto:
 657+ 9CC0              ;
 658+ 9CC0              ;   HAY COLISIÓN !!!!!.
 659+ 9CC0              ;
 660+ 9CC0              ;   .db (Impacto) de Amadeus a "1".
 661+ 9CC0              ;   SET el bit3 de (Impacto2).
 662+ 9CC0              ;
 663+ 9CC0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9CC0
 665+ 9CC0 21 A0 89         ld hl,Impacto
 666+ 9CC3 36 01            ld (hl),1
 667+ 9CC5 21 F8 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9CC8 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9CCA CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9CCC
 671+ 9CCC 18 18            jr 1F
 672+ 9CCE
 673+ 9CCE              ; -----
 674+ 9CCE
 675+ 9CCE E1           3 pop hl
 676+ 9CCF CD AC 92         call NextScan
 677+ 9CD2 E5               push hl
 678+ 9CD3 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9CD4 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9CD6 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9CD8 30 0C            jr nc,1F
 682+ 9CDA              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9CDA 10 DC            djnz 2B
 684+ 9CDC
 685+ 9CDC              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9CDC
 687+ 9CDC              ; LLegados a este punto:
 688+ 9CDC              ;
 689+ 9CDC              ;   NO HAY COLISIÓN !!!!!.
 690+ 9CDC              ;
 691+ 9CDC              ;   .db (Impacto) de Amadeus a "0".
 692+ 9CDC              ;   RES el bit2 de (Impacto2).
 693+ 9CDC              ;
 694+ 9CDC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9CDC              ;   Lo colocamos a "0".
 696+ 9CDC
 697+ 9CDC 21 F8 89         ld hl,Impacto2
 698+ 9CDF CB 96            res 2,(hl)
 699+ 9CE1 2A F9 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9CE4 36 00            ld (hl),0
 701+ 9CE6
 702+ 9CE6 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9CE7 C9               ret
 704+ 9CE8
 705+ 9CE8               ; ---------- ----------
 706+ 9CE8
 707+ 9CE8 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9CE9 3A 8C 89         ld a,(Columns)
 709+ 9CEC 47               ld b,a
 710+ 9CED FD 7E 00     2 ld a,(iy)
 711+ 9CF0 BE               cp (hl)
 712+ 9CF1 28 01            jr z,1F
 713+ 9CF3
 714+ 9CF3 1C               inc e
 715+ 9CF4
 716+ 9CF4 23           1 inc hl
 717+ 9CF5 FD 23            inc iy
 718+ 9CF7 10 F4            djnz 2B
 719+ 9CF9 C1               pop bc
 720+ 9CFA C9               ret
 721+ 9CFB
 722+ 9CFB              ; -------------------------------------------------------------------------------------------------------------
 723+ 9CFB              ;
 724+ 9CFB              ;   13/03/23
 725+ 9CFB              ;
 726+ 9CFB              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9CFB              ;
 728+ 9CFB              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9CFB
 730+ 9CFB 21 AC 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9CFE 7E               ld a,(hl)
 732+ 9CFF A7               and a
 733+ 9D00 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9D01
 735+ 9D01 44               ld b,h
 736+ 9D02 4D               ld c,l
 737+ 9D03 2A EB 89         ld hl,(Stack_snapshot_disparos)
 738+ 9D06 E5               push hl
 739+ 9D07 A7               and a
 740+ 9D08 ED 42            sbc hl,bc
 741+ 9D0A E5               push hl
 742+ 9D0B C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9D0C
 744+ 9D0C E1               pop hl
 745+ 9D0D 54               ld d,h
 746+ 9D0E 5D               ld e,l
 747+ 9D0F 1B               dec de
 748+ 9D10 ED B8            lddr                                                ; Limpiamos.
 749+ 9D12
 750+ 9D12 21 AC 80         ld hl,Album_de_fotos_disparos
 751+ 9D15 22 EB 89         ld (Stack_snapshot_disparos),hl
 752+ 9D18
 753+ 9D18 C9               ret
 754+ 9D19
 755+ 9D19              ; -------------------------------------------------------------------------------------------------------------
 756+ 9D19              ;
 757+ 9D19              ;   18/07/23
 758+ 9D19              ;
 759+ 9D19
 760+ 9D19              Motor_de_disparos
 761+ 9D19
 762+ 9D19              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9D19
 764+ 9D19 01 7A 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9D1C 2A F6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9D1F
 767+ 9D1F CD 77 8C     2 call Extrae_address
 768+ 9D22 7E               ld a,(hl)
 769+ 9D23 A7               and a
 770+ 9D24 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9D26
 772+ 9D26              ; ----- ----- ----- ----- ----- -----
 773+ 9D26
 774+ 9D26 C5               push bc
 775+ 9D27 CD EB 9D         call foto_disparo_a_borrar
 776+ 9D2A
 777+ 9D2A              ; Existe colisión con este disparo???
 778+ 9D2A
 779+ 9D2A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9D2B 7E               ld a,(hl)
 781+ 9D2C 2B               dec hl
 782+ 9D2D E6 01            and 1
 783+ 9D2F 28 1D            jr z,9F
 784+ 9D31
 785+ 9D31              ;   En este punto:
 786+ 9D31              ;
 787+ 9D31              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9D31              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9D31              ;   _con la entidad).
 790+ 9D31              ;
 791+ 9D31              ;   Disparo_2A defw 0                                ; Control.
 792+ 9D31              ;    defw 0                                          ; Puntero objeto.
 793+ 9D31              ;    defw 0                                          ; Puntero de impresión.
 794+ 9D31              ;    defw 0                                          ; Rutina de impresión.
 795+ 9D31
 796+ 9D31 E5               push hl
 797+ 9D32
 798+ 9D32 06 04            ld b,4
 799+ 9D34 23           19 inc hl
 800+ 9D35 10 FD            djnz 19B
 801+ 9D37
 802+ 9D37 CD 77 8C         call Extrae_address
 803+ 9D3A CD CE 9F         call Genera_coordenadas_disparo
 804+ 9D3D
 805+ 9D3D              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9D3D
 807+ 9D3D 21 FB 89         ld hl,Coordenadas_disparo_certero
 808+ 9D40 72               ld (hl),d
 809+ 9D41 23               inc hl
 810+ 9D42 73               ld (hl),e
 811+ 9D43
 812+ 9D43              ; Elimino el disparo de la base de datos.
 813+ 9D43
 814+ 9D43 E1               pop hl
 815+ 9D44 CD 6A 9E         call Elimina_disparo_de_base_de_datos
 816+ 9D47 21 F8 89         ld hl,Impacto2
 817+ 9D4A CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9D4C
 819+ 9D4C 18 06            jr 11F
 820+ 9D4E
 821+ 9D4E CD 14 9E     9 call Mueve_disparo
 822+ 9D51 CD EB 9D         call foto_disparo_a_borrar
 823+ 9D54
 824+ 9D54 C1           11 pop bc
 825+ 9D55 18 04            jr 7F
 826+ 9D57
 827+ 9D57              ; ----- ----- ----- ----- ----- -----
 828+ 9D57
 829+ 9D57 ED 42        1 sbc hl,bc
 830+ 9D59 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9D5B
 832+ 9D5B 2A F6 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9D5E 23               inc hl
 834+ 9D5F 23               inc hl
 835+ 9D60 22 F6 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9D63 18 BA            jr 2B
 837+ 9D65
 838+ 9D65 CD FC 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9D68              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9D68
 841+ 9D68              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9D68
 843+ 9D68 01 E2 86         ld bc,Disparo_11
 844+ 9D6B 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9D6E
 846+ 9D6E CD 77 8C     5 call Extrae_address
 847+ 9D71 7E               ld a,(hl)
 848+ 9D72 A7               and a
 849+ 9D73 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9D75
 851+ 9D75              ; ----- ----- ----- ----- ----- -----
 852+ 9D75
 853+ 9D75 C5               push bc
 854+ 9D76 CD EB 9D         call foto_disparo_a_borrar
 855+ 9D79
 856+ 9D79              ; Existe colisión con este disparo???
 857+ 9D79
 858+ 9D79 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9D7A 7E               ld a,(hl)
 860+ 9D7B 2B               dec hl
 861+ 9D7C E6 01            and 1
 862+ 9D7E 28 4D            jr z,10F
 863+ 9D80
 864+ 9D80              ;! La colisión se produce con Amadeus???
 865+ 9D80              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9D80
 867+ 9D80 E5               push hl
 868+ 9D81
 869+ 9D81 06 04            ld b,4
 870+ 9D83 23           16 inc hl
 871+ 9D84 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9D86
 873+ 9D86 CD 77 8C         call Extrae_address
 874+ 9D89 CD CE 9F         call Genera_coordenadas_disparo
 875+ 9D8C
 876+ 9D8C 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9D8D FE 16            cp $16
 878+ 9D8F 38 2A            jr c,15F
 879+ 9D91
 880+ 9D91
 881+ 9D91              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9D91
 883+ 9D91 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9D92
 885+ 9D92              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9D92
 887+ 9D92 2A 13 87         ld hl,(p.imp.amadeus)
 888+ 9D95
 889+ 9D95              ; Coordenada X de Amadeus en D.
 890+ 9D95
 891+ 9D95 7D               ld a,l
 892+ 9D96 E6 1F            and $1F
 893+ 9D98 57               ld d,a
 894+ 9D99
 895+ 9D99 21 FE 86         ld hl,Amadeus_db+8
 896+ 9D9C 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9D9D
 898+ 9D9D 21 FD 89         ld hl,Coordenadas_X_Amadeus
 899+ 9DA0 CD 66 9C         call Guarda_coordenadas_X
 900+ 9DA3
 901+ 9DA3 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9DA4
 903+ 9DA4              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9DA4
 905+ 9DA4 06 02            ld b,2
 906+ 9DA6 C5           20 push bc
 907+ 9DA7
 908+ 9DA7 06 03            ld b,3
 909+ 9DA9 21 FD 89         ld hl,Coordenadas_X_Amadeus
 910+ 9DAC 7E           18 ld a,(hl)
 911+ 9DAD BA               cp d
 912+ 9DAE 20 04            jr nz,17F
 913+ 9DB0
 914+ 9DB0              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9DB0
 916+ 9DB0 C1               pop bc
 917+ 9DB1 E1               pop hl
 918+ 9DB2 18 0D            jr 14F
 919+ 9DB4
 920+ 9DB4 23           17 inc hl
 921+ 9DB5 10 F5            djnz 18B
 922+ 9DB7
 923+ 9DB7 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9DB8
 925+ 9DB8 C1               pop bc
 926+ 9DB9 10 EB            djnz 20B
 927+ 9DBB
 928+ 9DBB
 929+ 9DBB              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9DBB              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9DBB
 932+ 9DBB E1           15 pop hl
 933+ 9DBC 23               inc hl
 934+ 9DBD 35               dec (hl)
 935+ 9DBE 2B               dec hl
 936+ 9DBF 18 0C            jr 10F
 937+ 9DC1
 938+ 9DC1              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9DC1              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9DC1
 941+ 9DC1 E5           14 push hl
 942+ 9DC2 CD 6A 9E         call Elimina_disparo_de_base_de_datos
 943+ 9DC5 21 F8 89         ld hl,Impacto2
 944+ 9DC8 CB CE            set 1,(hl)
 945+ 9DCA E1               pop hl
 946+ 9DCB 18 06            jr 12F
 947+ 9DCD
 948+ 9DCD              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9DCD
 950+ 9DCD CD 14 9E     10 call Mueve_disparo
 951+ 9DD0 CD EB 9D         call foto_disparo_a_borrar
 952+ 9DD3 C1           12 pop bc
 953+ 9DD4
 954+ 9DD4 18 04            jr 8F
 955+ 9DD6
 956+ 9DD6              ; ----- ----- ----- ----- ----- -----
 957+ 9DD6
 958+ 9DD6 ED 42        4 sbc hl,bc
 959+ 9DD8 28 0A            jr z,6F
 960+ 9DDA
 961+ 9DDA 2A F4 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9DDD 23               inc hl
 963+ 9DDE 23               inc hl
 964+ 9DDF 22 F4 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9DE2 18 8A            jr 5B
 966+ 9DE4
 967+ 9DE4 CD F5 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9DE7 CD 6F 9C         call Limpia_Coordenadas_X
 969+ 9DEA C9               ret
 970+ 9DEB
 971+ 9DEB              ; ------------------------------------------------------------------
 972+ 9DEB
 973+ 9DEB              foto_disparo_a_borrar
 974+ 9DEB
 975+ 9DEB 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9DEC A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9DED C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9DEE
 979+ 9DEE E5               push hl
 980+ 9DEF 23               inc hl
 981+ 9DF0 23               inc hl
 982+ 9DF1 ED 73 E3 89      ld (Stack),sp
 983+ 9DF5 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9DF6 FD E1            pop iy
 985+ 9DF8 DD E1            pop ix
 986+ 9DFA E1               pop hl
 987+ 9DFB ED 7B E3 89      ld sp,(Stack)
 988+ 9DFF 3A D2 89         ld a,(Ctrl_1)
 989+ 9E02 CB C7            set 0,a
 990+ 9E04 32 D2 89         ld (Ctrl_1),a
 991+ 9E07 CD BF 80         call Guarda_foto_registros
 992+ 9E0A 3A D2 89         ld a,(Ctrl_1)
 993+ 9E0D CB 87            res 0,a
 994+ 9E0F 32 D2 89         ld (Ctrl_1),a
 995+ 9E12 E1               pop hl
 996+ 9E13 C9               ret
 997+ 9E14
 998+ 9E14              ;---------------------------------------------------
 999+ 9E14              ;
1000+ 9E14              ;   18/07/23
1001+ 9E14              ;
1002+ 9E14
1003+ 9E14              Mueve_disparo
1004+ 9E14
1005+ 9E14              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9E14              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9E14              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9E14
1009+ 9E14 E5               push hl
1010+ 9E15
1011+ 9E15 7E               ld a,(hl)
1012+ 9E16
1013+ 9E16 06 04            ld b,4
1014+ 9E18 23           1 inc hl
1015+ 9E19 10 FD            djnz 1B
1016+ 9E1B
1017+ 9E1B              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9E1B
1019+ 9E1B CD 77 8C         call Extrae_address
1020+ 9E1E
1021+ 9E1E E6 01            and 1
1022+ 9E20 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9E22
1024+ 9E22              ; Disparo hacia arriba, (Amadeus).
1025+ 9E22
1026+ 9E22              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9E22              ; _ de la dificultad.
1028+ 9E22
1029+ 9E22 CD BB 92         call PreviousScan
1030+ 9E25 CD BB 92         call PreviousScan
1031+ 9E28 CD BB 92         call PreviousScan
1032+ 9E2B CD BB 92         call PreviousScan
1033+ 9E2E
1034+ 9E2E              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9E2E
1036+ 9E2E 7C               ld a,h
1037+ 9E2F FE 40            cp $40
1038+ 9E31 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9E33
1040+ 9E33              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9E33
1042+ 9E33 EB               ex de,hl
1043+ 9E34 06 04            ld b,4
1044+ 9E36 2B           6 dec hl
1045+ 9E37 10 FD            djnz 6B
1046+ 9E39
1047+ 9E39 CD 6A 9E         call Elimina_disparo_de_base_de_datos
1048+ 9E3C E1               pop hl
1049+ 9E3D 18 10            jr 7F
1050+ 9E3F
1051+ 9E3F              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9E3F              ; HL contiene el puntero de impresión del disparo.
1053+ 9E3F              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9E3F
1055+ 9E3F D5           3 push de
1056+ 9E40 C5               push bc
1057+ 9E41
1058+ 9E41 CD FD 9B         call Comprueba_Colision
1059+ 9E44
1060+ 9E44              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9E44
1062+ 9E44 78               ld a,b
1063+ 9E45
1064+ 9E45 C1               pop bc
1065+ 9E46 D1               pop de
1066+ 9E47
1067+ 9E47 EB               ex de,hl
1068+ 9E48
1069+ 9E48 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9E49 23               inc hl                                      ; _ movimiento.
1071+ 9E4A 72               ld (hl),d
1072+ 9E4B
1073+ 9E4B E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9E4C
1075+ 9E4C 23               inc hl                                      ; _ en curso.
1076+ 9E4D 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9E4E 2B               dec hl
1078+ 9E4F
1079+ 9E4F C9           7 ret
1080+ 9E50
1081+ 9E50              ; Disparo hacia abajo, (Entidad).
1082+ 9E50
1083+ 9E50 3A 03 8A     2 ld a,(Velocidad_disparo_entidades)
1084+ 9E53 47               ld b,a
1085+ 9E54
1086+ 9E54 CD AC 92     4 call NextScan
1087+ 9E57 10 FB            djnz 4B
1088+ 9E59
1089+ 9E59              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9E59
1091+ 9E59 7C               ld a,h
1092+ 9E5A FE 58            cp $58
1093+ 9E5C 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9E5E
1095+ 9E5E EB               ex de,hl
1096+ 9E5F 06 04            ld b,4
1097+ 9E61 2B           5 dec hl
1098+ 9E62 10 FD            djnz 5B
1099+ 9E64
1100+ 9E64 CD 6A 9E         call Elimina_disparo_de_base_de_datos
1101+ 9E67 E1               pop hl
1102+ 9E68 18 E5            jr 7B
1103+ 9E6A
1104+ 9E6A              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9E6A
1106+ 9E6A 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9E6D AF               xor a
1108+ 9E6E 77               ld (hl),a
1109+ 9E6F 54               ld d,h
1110+ 9E70 5D               ld e,l
1111+ 9E71 13               inc de
1112+ 9E72 ED B0            ldir
1113+ 9E74 C9               ret
1114+ 9E75
1115+ 9E75              ; -----------------------------------------------------------------
1116+ 9E75              ;
1117+ 9E75              ;   7/12/23
1118+ 9E75              ;
1119+ 9E75
1120+ 9E75 3A F8 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9E78 A7               and a
1122+ 9E79 C8               ret z
1123+ 9E7A
1124+ 9E7A              ; Analizamos si hay impacto por disparos.
1125+ 9E7A
1126+ 9E7A              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9E7A
1128+ 9E7A CB 4F            bit 1,a
1129+ 9E7C 28 07            jr z,1F
1130+ 9E7E
1131+ 9E7E 21 0F 87         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9E81 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9E83 18 08            jr 2F
1134+ 9E85
1135+ 9E85 CB 47        1 bit 0,a
1136+ 9E87 C8               ret z
1137+ 9E88
1138+ 9E88              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9E88
1140+ 9E88 21 D2 89         ld hl,Ctrl_1
1141+ 9E8B CB D6            set 2,(hl)
1142+ 9E8D
1143+ 9E8D C9           2 ret
1144+ 9E8E
1145+ 9E8E              ; -----------------------------------------------------------------
1146+ 9E8E              ;
1147+ 9E8E              ;   25/04/23
1148+ 9E8E              ;
1149+ 9E8E
1150+ 9E8E              Determina_resultado_comparativa
1151+ 9E8E
1152+ 9E8E              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9E8E              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9E8E              ;
1155+ 9E8E              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9E8E              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9E8E              ;
1158+ 9E8E              ;   SBC HL,DE
1159+ 9E8E
1160+ 9E8E              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9E8E              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9E8E
1163+ 9E8E              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9E8E              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9E8E
1166+ 9E8E
1167+ 9E8E 3A 9F 89         ld a,(Cuad_objeto)
1168+ 9E91 FE 02            cp 2
1169+ 9E93 28 26            jr z,2F
1170+ 9E95 38 24            jr c,2F
1171+ 9E97
1172+ 9E97              ; Cuadrantes 3º y 4º
1173+ 9E97
1174+ 9E97 E6 01            and 1
1175+ 9E99 28 10            jr z,4F
1176+ 9E9B
1177+ 9E9B              ; Cuadrante 3º
1178+ 9E9B
1179+ 9E9B 7C               ld a,h
1180+ 9E9C 06 00            ld b,0
1181+ 9E9E
1182+ 9E9E CD 29 9F         call Compara_cositas_H3
1183+ 9EA1
1184+ 9EA1 04               inc b
1185+ 9EA2 05               dec b
1186+ 9EA3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9EA4
1188+ 9EA4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9EA5 06 00            ld b,0
1190+ 9EA7
1191+ 9EA7 CD 3B 9F         call Compara_cositas_L3
1192+ 9EAA C9               ret
1193+ 9EAB
1194+ 9EAB              ; Cuadrante 4º
1195+ 9EAB
1196+ 9EAB 7C           4 ld a,h
1197+ 9EAC 06 00            ld b,0
1198+ 9EAE
1199+ 9EAE CD 4D 9F         call Compara_cositas_H4
1200+ 9EB1
1201+ 9EB1 04               inc b
1202+ 9EB2 05               dec b
1203+ 9EB3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9EB4
1205+ 9EB4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9EB5 06 00            ld b,0
1207+ 9EB7
1208+ 9EB7 CD 63 9F         call Compara_cositas_L4
1209+ 9EBA C9               ret
1210+ 9EBB
1211+ 9EBB              ; Cuadrantes 1º y 2º.
1212+ 9EBB
1213+ 9EBB 28 10        2 jr z,3F
1214+ 9EBD
1215+ 9EBD              ; 1er Cuadrante
1216+ 9EBD
1217+ 9EBD 7C               ld a,h
1218+ 9EBE 06 00            ld b,0
1219+ 9EC0
1220+ 9EC0 CD 01 9F         call Compara_cositas_H1
1221+ 9EC3
1222+ 9EC3 04               inc b
1223+ 9EC4 05               dec b
1224+ 9EC5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9EC6
1226+ 9EC6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9EC7 06 00            ld b,0
1228+ 9EC9
1229+ 9EC9 CD 17 9F         call Compara_cositas_L1
1230+ 9ECC C9               ret
1231+ 9ECD
1232+ 9ECD
1233+ 9ECD              ; 2º Cuadrante
1234+ 9ECD
1235+ 9ECD 7C           3 ld a,h
1236+ 9ECE 06 00            ld b,0
1237+ 9ED0
1238+ 9ED0 CD DD 9E         call Compara_cositas_H2
1239+ 9ED3
1240+ 9ED3 04               inc b
1241+ 9ED4 05               dec b
1242+ 9ED5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9ED6
1244+ 9ED6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9ED7 06 00            ld b,0
1246+ 9ED9
1247+ 9ED9 CD EF 9E         call Compara_cositas_L2
1248+ 9EDC C9               ret
1249+ 9EDD
1250+ 9EDD A7           Compara_cositas_H2 and a
1251+ 9EDE 28 0D            jr z,1F
1252+ 9EE0              ;    cp $fd
1253+ 9EE0              ;    jr z,1F
1254+ 9EE0              ;    cp $fe
1255+ 9EE0              ;    jr z,1F
1256+ 9EE0 FE FF            cp $ff
1257+ 9EE2 28 09            jr z,1F
1258+ 9EE4 FE 01            cp $01
1259+ 9EE6 28 05            jr z,1F
1260+ 9EE8 FE 02            cp $02
1261+ 9EEA 28 01            jr z,1F
1262+ 9EEC C0               ret nz
1263+ 9EED 04           1 inc b
1264+ 9EEE C9               ret
1265+ 9EEF
1266+ 9EEF A7           Compara_cositas_L2 and a
1267+ 9EF0 28 0D            jr z,1F
1268+ 9EF2              ;    cp $fd
1269+ 9EF2              ;    jr z,1F
1270+ 9EF2 FE FE            cp $fe
1271+ 9EF4 28 09            jr z,1F
1272+ 9EF6 FE FF            cp $ff
1273+ 9EF8 28 05            jr z,1F
1274+ 9EFA FE 01            cp $01
1275+ 9EFC 28 01            jr z,1F
1276+ 9EFE              ;    cp $02
1277+ 9EFE              ;    jr z,1F
1278+ 9EFE C0               ret nz
1279+ 9EFF 04           1 inc b
1280+ 9F00 C9               ret
1281+ 9F01
1282+ 9F01 A7           Compara_cositas_H1 and a
1283+ 9F02 28 11            jr z,1F
1284+ 9F04              ;    cp $fd
1285+ 9F04              ;    jr z,1F
1286+ 9F04              ;    cp $fe
1287+ 9F04              ;    jr z,1F
1288+ 9F04 FE FF            cp $ff
1289+ 9F06 28 0D            jr z,1F
1290+ 9F08 FE 01            cp $01
1291+ 9F0A 28 09            jr z,1F
1292+ 9F0C FE 02            cp $02
1293+ 9F0E 28 05            jr z,1F
1294+ 9F10 FE 03            cp $03
1295+ 9F12 28 01            jr z,1F
1296+ 9F14 C0               ret nz
1297+ 9F15 04           1 inc b
1298+ 9F16 C9               ret
1299+ 9F17
1300+ 9F17 A7           Compara_cositas_L1 and a
1301+ 9F18 28 0D            jr z,1F
1302+ 9F1A              ;    cp $fd
1303+ 9F1A              ;    jr z,1F
1304+ 9F1A              ;    cp $fe
1305+ 9F1A              ;    jr z,1F
1306+ 9F1A              ;    cp $ff
1307+ 9F1A              ;    jr z,1F
1308+ 9F1A FE 01            cp $01
1309+ 9F1C 28 09            jr z,1F
1310+ 9F1E FE 02            cp $02
1311+ 9F20 28 05            jr z,1F
1312+ 9F22 FE 03            cp $03
1313+ 9F24 28 01            jr z,1F
1314+ 9F26 C0               ret nz
1315+ 9F27 04           1 inc b
1316+ 9F28 C9               ret
1317+ 9F29
1318+ 9F29 A7           Compara_cositas_H3 and a
1319+ 9F2A 28 0D            jr z,1F
1320+ 9F2C              ;    cp $fd
1321+ 9F2C              ;    jr z,1F
1322+ 9F2C FE FE            cp $fe
1323+ 9F2E 28 09            jr z,1F
1324+ 9F30 FE FF            cp $ff
1325+ 9F32 28 05            jr z,1F
1326+ 9F34 FE 01            cp $01
1327+ 9F36 28 01            jr z,1F
1328+ 9F38              ;    cp $02
1329+ 9F38              ;    jr z,1F
1330+ 9F38              ;    cp $03
1331+ 9F38              ;    jr z,1F
1332+ 9F38 C0               ret nz
1333+ 9F39 04           1 inc b
1334+ 9F3A C9               ret
1335+ 9F3B
1336+ 9F3B A7           Compara_cositas_L3 and a
1337+ 9F3C 28 0D            jr z,1F
1338+ 9F3E              ;    cp $fd
1339+ 9F3E              ;    jr z,1F
1340+ 9F3E              ;    cp $fe
1341+ 9F3E              ;    jr z,1F
1342+ 9F3E              ;    cp $ff
1343+ 9F3E              ;    jr z,1F
1344+ 9F3E FE 01            cp $01
1345+ 9F40 28 09            jr z,1F
1346+ 9F42 FE 02            cp $02
1347+ 9F44 28 05            jr z,1F
1348+ 9F46 FE 03            cp $03
1349+ 9F48 28 01            jr z,1F
1350+ 9F4A C0               ret nz
1351+ 9F4B 04           1 inc b
1352+ 9F4C C9               ret
1353+ 9F4D
1354+ 9F4D A7           Compara_cositas_H4 and a
1355+ 9F4E 28 11            jr z,1F
1356+ 9F50 FE FD            cp $fd
1357+ 9F52 28 0D            jr z,1F
1358+ 9F54 FE FE            cp $fe
1359+ 9F56 28 09            jr z,1F
1360+ 9F58 FE FF            cp $ff
1361+ 9F5A 28 05            jr z,1F
1362+ 9F5C FE 01            cp $01
1363+ 9F5E 28 01            jr z,1F
1364+ 9F60              ;    cp $02
1365+ 9F60              ;    jr z,1F
1366+ 9F60              ;    cp $03
1367+ 9F60              ;    jr z,1F
1368+ 9F60 C0               ret nz
1369+ 9F61 04           1 inc b
1370+ 9F62 C9               ret
1371+ 9F63
1372+ 9F63 A7           Compara_cositas_L4 and a
1373+ 9F64 28 0D            jr z,1F
1374+ 9F66              ;    cp $fd
1375+ 9F66              ;    jr z,1F
1376+ 9F66 FE FE            cp $fe
1377+ 9F68 28 09            jr z,1F
1378+ 9F6A FE FF            cp $ff
1379+ 9F6C 28 05            jr z,1F
1380+ 9F6E FE 01            cp $01
1381+ 9F70 28 01            jr z,1F
1382+ 9F72              ;    cp $02
1383+ 9F72              ;    jr z,1F
1384+ 9F72              ;    cp $03
1385+ 9F72              ;    jr z,1F
1386+ 9F72 C0               ret nz
1387+ 9F73 04           1 inc b
1388+ 9F74 C9               ret
# file closed: Disparo.asm
1879  9F75              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F75              ; Relojes y temporizaciones.
   2+ 9F75
   3+ 9F75              ; ------------------------------------------------------
   4+ 9F75              ;
   5+ 9F75              ;	16/7/23
   6+ 9F75              ;
   7+ 9F75              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9F75              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F75              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F75              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F75              ;
  12+ 9F75              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F75              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F75
  15+ 9F75              ; Disparo_entidad db 1
  16+ 9F75              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9F75              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9F75
  19+ 9F75              Habilita_disparos
  20+ 9F75
  21+ 9F75 7E           	ld a,(hl)
  22+ 9F76 A7           	and a
  23+ 9F77 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9F78
  25+ 9F78 EB           	ex de,hl
  26+ 9F79
  27+ 9F79 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9F7A C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9F7B
  30+ 9F7B              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9F7B
  32+ 9F7B 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9F7C 7E           	ld a,(hl)
  34+ 9F7D 23           	inc hl
  35+ 9F7E 77           	ld (hl),a
  36+ 9F7F
  37+ 9F7F EB           	ex de,hl						; Habilitamos disparo.
  38+ 9F80 3E 01        	ld a,1
  39+ 9F82 77           	ld (hl),a
  40+ 9F83 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1880  9F84              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9F84              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9F84              ;
   3+ 9F84              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9F84              ;
   5+ 9F84              ; *****************************************************************************************************************************************************************************************
   6+ 9F84              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9F84
   8+ 9F84 7C           calcula_tercio ld a,h
   9+ 9F85 E6 18        	and $18
  10+ 9F87 CB 2F        	sra a
  11+ 9F89 CB 2F        	sra a
  12+ 9F8B CB 2F        	sra a
  13+ 9F8D C9           	ret
  14+ 9F8E
# file closed: calcula_tercio.asm
1881  9F8E              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9F8E              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9F8E              ;
   3+ 9F8E              ;
   4+ 9F8E              ;	CLS.
   5+ 9F8E              ;
   6+ 9F8E              ;	Limpia la pantalla y define sus atributos.
   7+ 9F8E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9F8E              ;
   9+ 9F8E              ;	COLORES: 0 ..... NEGRO
  10+ 9F8E              ;    		 1 ..... AZUL
  11+ 9F8E              ; 			 2 ..... ROJO
  12+ 9F8E              ;			 3 ..... MAGENTA
  13+ 9F8E              ; 			 4 ..... VERDE
  14+ 9F8E              ; 			 5 ..... CIAN
  15+ 9F8E              ;			 6 ..... AMARILLO
  16+ 9F8E              ; 			 7 ..... BLANCO
  17+ 9F8E              ;
  18+ 9F8E              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9F8E              ;
  20+ 9F8E              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9F8E
  22+ 9F8E
  23+ 9F8E 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9F91 11 01 40     	LD DE,$4001
  25+ 9F94 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9F97 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9F99 ED B0        	LDIR
  28+ 9F9B 01 FF 02     	LD BC,767
  29+ 9F9E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9F9F ED B0        	LDIR
  31+ 9FA1 C9           	ret
  32+ 9FA2
# file closed: Cls.asm
1882  9FA2              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9FA2              ; ------------------------------------------------------------------------
   2+ 9FA2              ;
   3+ 9FA2              ;	30/1/24
   4+ 9FA2              ;
   5+ 9FA2              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9FA2              ;	Fila superior "0", Columna izquierda "0".
   7+ 9FA2              ;
   8+ 9FA2              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9FA2              ;
  10+ 9FA2              ;	Modifica: A,BC y DE.
  11+ 9FA2
  12+ 9FA2 7D           Genera_coordenadas ld a,l
  13+ 9FA3 E6 1F        	and $1f
  14+ 9FA5 32 91 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9FA8
  16+ 9FA8 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9FA9 FE 40        	cp $40
  18+ 9FAB 38 1C        	jr c,4F
  19+ 9FAD
  20+ 9FAD CD 84 9F     	call calcula_tercio
  21+ 9FB0 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9FB1
  23+ 9FB1 1E 00        	ld e,0
  24+ 9FB3 7D           	ld a,l
  25+ 9FB4 E6 E0        	and $e0
  26+ 9FB6 28 01        	jr z,1F
  27+ 9FB8 04           	inc b
  28+ 9FB9
  29+ 9FB9 04           1 inc b
  30+ 9FBA 05           	dec b
  31+ 9FBB 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9FBD              ;														; _ , salimos.
  33+ 9FBD 1C           3 inc e
  34+ 9FBE D6 20        	sub 32
  35+ 9FC0 20 FB        	jr nz,3B
  36+ 9FC2 10 F5        	djnz 1B
  37+ 9FC4
  38+ 9FC4 7B           2 ld a,e
  39+ 9FC5 32 92 89     	ld (Coordenada_y),a
  40+ 9FC8 C9           	ret
  41+ 9FC9
  42+ 9FC9 AF           4 xor a
  43+ 9FCA 32 92 89     	ld (Coordenada_y),a
  44+ 9FCD C9           	ret
  45+ 9FCE
  46+ 9FCE              ; ------------------------------------------------------------------------
  47+ 9FCE              ;	28/05/23
  48+ 9FCE              ;
  49+ 9FCE              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9FCE              ;	Fila superior "0", Columna izquierda "0".
  51+ 9FCE              ;
  52+ 9FCE              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9FCE              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9FCE              ;
  55+ 9FCE              ;		DE="$120d"
  56+ 9FCE              ;
  57+ 9FCE              ;		D, (Coordenada_X), Columnas, $12
  58+ 9FCE              ;		E, (Coordenada_y), Filas, $0d
  59+ 9FCE              ;
  60+ 9FCE              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9FCE
  62+ 9FCE              ;	Modifica: A,BC y DE.
  63+ 9FCE
  64+ 9FCE
  65+ 9FCE              Genera_coordenadas_disparo
  66+ 9FCE
  67+ 9FCE              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9FCE
  69+ 9FCE 7D           	ld a,l
  70+ 9FCF E6 1F        	and $1f
  71+ 9FD1 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9FD2 CD 84 9F     	call calcula_tercio
  73+ 9FD5 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9FD6 1E 00        	ld e,0
  75+ 9FD8 7D           	ld a,l
  76+ 9FD9 E6 E0        	and $e0
  77+ 9FDB 28 01        	jr z,1F
  78+ 9FDD 04           	inc b
  79+ 9FDE 1C           1 inc e
  80+ 9FDF D6 20        	sub 32
  81+ 9FE1 20 FB        	jr nz,1B
  82+ 9FE3 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9FE5 C9           	ret
  84+ 9FE6
# file closed: Genera_coordenadas.asm
1883  9FE6              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FE6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FE6              ;
   3+ 9FE6              ;	12/12/23
   4+ 9FE6              ;
   5+ 9FE6              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FE6
   7+ 9FE6              ;	ADC HL,SP	LD (addr),SP
   8+ 9FE6              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FE6              ;	ADD IX,SP	LD SP,nn
  10+ 9FE6              ; 	ADD IY,SP	LD SP,HL
  11+ 9FE6              ;				LD SP,IX
  12+ 9FE6              ;	DEC SP		LD SP,IY
  13+ 9FE6
  14+ 9FE6              ;	EX (SP),HL
  15+ 9FE6              ;	EX (SP),IX
  16+ 9FE6              ;	EX (SP),IY
  17+ 9FE6
  18+ 9FE6              ;	INC SP
  19+ 9FE6
  20+ 9FE6                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 E3 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3              ;    ld sp,Variables_de_borrado+6
  39+ 80C3
  40+ 80C3              ;    push hl
  41+ 80C3              ;    push ix
  42+ 80C3              ;    push iy
  43+ 80C3
  44+ 80C3 31 A9 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80C6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80C8              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80C8
  48+ 80C8 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80CB
  50+ 80CB E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80CC DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80CE FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D0
  54+ 80D0              ; Disparo o entidad?
  55+ 80D0
  56+ 80D0 3A D2 89         ld a,(Ctrl_1)
  57+ 80D3 CB 47            bit 0,a
  58+ 80D5 28 05            jr z,2F
  59+ 80D7
  60+ 80D7 2A EB 89         ld hl,(Stack_snapshot_disparos)
  61+ 80DA 18 0F            jr 4F
  62+ 80DC
  63+ 80DC              ; No es disparo. Entidad/Amadeus ????
  64+ 80DC
  65+ 80DC 3A AD 89     2 ld a,(Ctrl_0)
  66+ 80DF CB 77            bit 6,a
  67+ 80E1 28 05            jr z,7F
  68+ 80E3
  69+ 80E3              ; Guardamos foto de Amadeus.
  70+ 80E3
  71+ 80E3 2A EF 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80E6 18 03            jr 4F
  73+ 80E8
  74+ 80E8 2A E9 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80EB
  76+ 80EB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80ED
  78+ 80ED D1           1 pop de
  79+ 80EE 73               ld (hl),e
  80+ 80EF 23               inc hl
  81+ 80F0 72               ld (hl),d
  82+ 80F1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80F2 10 F9            djnz 1B
  84+ 80F4
  85+ 80F4              ; Disparo o entidad ?
  86+ 80F4
  87+ 80F4 3A D2 89         ld a,(Ctrl_1)
  88+ 80F7 CB 47            bit 0,a
  89+ 80F9 28 05            jr z,5F
  90+ 80FB
  91+ 80FB 22 EB 89         ld (Stack_snapshot_disparos),hl
  92+ 80FE 18 12            jr 6F
  93+ 8100
  94+ 8100              ; Entidad o Amadeus ?
  95+ 8100
  96+ 8100 3A AD 89     5 ld a,(Ctrl_0)
  97+ 8103 CB 77            bit 6,a
  98+ 8105 28 08            jr z,8F
  99+ 8107
 100+ 8107 22 EF 89         ld (End_Snapshot_Amadeus),hl
 101+ 810A ED 7B E3 89      ld sp,(Stack)
 102+ 810E C9               ret
 103+ 810F
 104+ 810F 22 E9 89     8 ld (Stack_snapshot),hl
 105+ 8112 ED 7B E3 89  6 ld sp,(Stack)
 106+ 8116
 107+ 8116 C9               ret
 108+ 8117
 109+ 8117              ; -----------------------------------------------------------------------------
 110+ 8117              ;
 111+ 8117              ;   21/11/23
 112+ 8117
 113+ 8117              Limpia_y_reinicia_Stack_Snapshot
 114+ 8117
 115+ 8117              ;   Limpia Album_de_fotos.
 116+ 8117
 117+ 8117 2A E9 89         ld hl,(Stack_snapshot)
 118+ 811A 7D               ld a,l
 119+ 811B A7               and a
 120+ 811C C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 811D
 122+ 811D 47               ld b,a
 123+ 811E 04               inc b
 124+ 811F
 125+ 811F 36 00        1 ld (hl),0
 126+ 8121 2D               dec l
 127+ 8122 10 FB            djnz 1B
 128+ 8124
 129+ 8124              ;   Reinicializa (Stack_snapshot).
 130+ 8124
 131+ 8124 21 00 80         ld hl,Album_de_fotos
 132+ 8127 22 E9 89         ld (Stack_snapshot),hl
 133+ 812A
 134+ 812A C9               ret
# file closed: Guarda_foto_registros.asm
1884  812B
1885  812B              	SAVESNA "Pruebas.sna", START
1886  812B
1887  812B
1888  812B
1889  812B
# file closed: Banco_de_pruebas.asm
