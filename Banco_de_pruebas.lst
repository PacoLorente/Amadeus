# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              FRAME
  14  AA01
  15  AA01 08           	ex af,af'
  16  AA02 F5           	push af	;af'
  17  AA03 D9           	exx
  18  AA04 E5           	push hl	;hl'
  19  AA05 D5           	push de	;de'
  20  AA06 C5           	push bc	;bc'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl
  23  AA09 D5           	push de	;de
  24  AA0A C5           	push bc	;bc
  25  AA0B 08           	ex af,af'
  26  AA0C F5           	push af	;af
  27  AA0D DD E5        	push ix
  28  AA0F FD E5        	push iy
  29  AA11
  30  AA11 3E 02        	ld a,2
  31  AA13 D3 FE        	out ($fe),a
  32  AA15
  33  AA15 3A 12 8A     	ld a,(Ctrl_3)
  34  AA18 CB 47        	bit 0,a
  35  AA1A 28 2C        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  36  AA1C CB 57        	bit 2,a
  37  AA1E 28 28        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  38  AA20
  39  AA20              Borrando
  40  AA20
  41  AA20 2A 0C 8A     	ld hl,(Scanlines_album_SP)
  42  AA23 CD 45 8D     	call Extrae_address
  43  AA26
  44  AA26 24           	inc h
  45  AA27 25           	dec h
  46  AA28 28 05        	jr z,Pintando
  47  AA2A
  48  AA2A CD 19 91     	call Pinta_Sprites
  49  AA2D
  50  AA2D 18 F1        	jr Borrando
  51  AA2F
  52  AA2F              Pintando
  53  AA2F
  54  AA2F 2A 0E 8A     	ld hl,(India_SP)
  55  AA32 2C           	inc l
  56  AA33 CD 45 8D     	call Extrae_address
  57  AA36
  58  AA36 24           	inc h
  59  AA37 25           	dec h
  60  AA38 28 0E        	jr z,1F
  61  AA3A
  62  AA3A 1C           	inc e
  63  AA3B 1C           	inc e
  64  AA3C
  65  AA3C ED 53 0E 8A  	ld (India_SP),de
  66  AA40
  67  AA40 CD 45 8D     	call Extrae_address
  68  AA43
  69  AA43 CD 19 91     	call Pinta_Sprites
  70  AA46
  71  AA46 18 E7        	jr Pintando
  72  AA48
  73  AA48              ; Posible colisión Entidad-Amadeus ???
  74  AA48
  75  AA48              ;	ld a,(Impacto2)
  76  AA48              ;	bit 2,a
  77  AA48              ;	jr z,1F
  78  AA48
  79  AA48              ;	call Detecta_colision_nave_entidad
  80  AA48
  81  AA48              ;1 ld a,4
  82  AA48              ;	out ($fe),a
  83  AA48              ;	call Gestiona_Amadeus
  84  AA48
  85  AA48              ;	ld a,7
  86  AA48              ;	out ($fe),a											; Borde blanco.
  87  AA48              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  88  AA48              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  89  AA48
  90  AA48              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  91  AA48
  92  AA48              ;	call Recupera_parametros_DRAW
  93  AA48
  94  AA48 3A 12 8A     1 ld a,(Ctrl_3)
  95  AA4B CB 47        	bit 0,a
  96  AA4D 28 03        	jr z,2F 											; No actualizamos FRAMES si el último cuadro no se completó.
  97  AA4F
  98  AA4F CD 38 00     	call ROM_keyboard									; Actualiza FRAMES y ejecuta las rutinas de teclado de la ROM.
  99  AA52
 100  AA52 21 12 8A     2 ld hl,Ctrl_3
 101  AA55 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 102  AA57 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 103  AA59
 104  AA59              ;	call Recupera_todos_los_registros
 105  AA59
 106  AA59 FD E1            pop iy
 107  AA5B DD E1        	pop ix
 108  AA5D F1           	pop af
 109  AA5E C1           	pop bc
 110  AA5F D1           	pop de
 111  AA60 E1           	pop hl
 112  AA61 D9           	exx
 113  AA62 C1           	pop bc
 114  AA63 D1           	pop de
 115  AA64 E1           	pop hl
 116  AA65 08           	ex af,af'
 117  AA66 F1           	pop af
 118  AA67 08           	ex af,af'
 119  AA68 D9           	exx
 120  AA69
 121  AA69 FB           	ei
 122  AA6A
 123  AA6A 3E 01        	ld a,1												; Borde azul.
 124  AA6C D3 FE        	out ($fe),a
 125  AA6E
 126  AA6E C9           	ret
 127  AA6F
 128  AA6F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 129  AA6F
 130  AA6F              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA6F              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA6F              ;
   3+ AA6F              ;	17/02/23
   4+ AA6F              ;
   5+ AA6F              ;	Sprites e índices.
   6+ AA6F
   7+ AA6F              	org $8168
   8+ 8168
   9+ 8168              ; Disparo.
  10+ 8168
  11+ 8168 70 81        Indice_disparo defw Disparo_0
  12+ 816A 76 81        	defw Disparo_f9
  13+ 816C 7C 81        	defw Disparo_fb
  14+ 816E 82 81        	defw Disparo_fd
  15+ 8170
  16+ 8170              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8170 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8174 01 80
  18+ 8176              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8176 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 817A 00 60
  20+ 817C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 817C 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8180 18 00
  22+ 8182              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8182 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8186 06 00
  24+ 8188
  25+ 8188              ; ----------------------------------------------------------------------------------------
  26+ 8188
  27+ 8188              ; Badsat_izq. 2x2.
  28+ 8188
  29+ 8188 98 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 818A 00 83        	defw Badsat_izq_fe
  31+ 818C C0 82        	defw Badsat_izq_fd
  32+ 818E 90 82        	defw Badsat_izq_fc
  33+ 8190 60 82        	defw Badsat_izq_fb
  34+ 8192 30 82        	defw Badsat_izq_fa
  35+ 8194 00 82        	defw Badsat_izq_f9
  36+ 8196 C8 81        	defw Badsat_izq_f8
  37+ 8198
  38+ 8198 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 819B 02 14 00     	DEFB 	$02,$14,$00
  40+ 819E 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 81A1 02 55 00     	DEFB 	$02,$55,$00
  42+ 81A4 02 AA 00     	DEFB	$02,$AA,$00
  43+ 81A7 02 54 00     	DEFB 	$02,$54,$00
  44+ 81AA 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 81AD 03 60 00     	DEFB 	$03,$60,$00
  46+ 81B0 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 81B3 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 81B6 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 81B9 54 40 00     	DEFB 	$54,$40,$00
  50+ 81BC AA 60 00     	DEFB	$AA,$60,$00
  51+ 81BF 54 00 00     	DEFB 	$54,$00,$00
  52+ 81C2 28 00 00     	DEFB 	$28,$00,$00
  53+ 81C5 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 81C8
  55+ 81C8 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 81CC 0A 00 01 15
  56+ 81D0 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 81D4 01 55 00 01
  57+ 81D8 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 81DC 00 01 B0 00
  58+ 81E0 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 81E4 FC 00 15 F4
  59+ 81E8 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 81EC 55 30 00 2A
  60+ 81F0 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81F4 00 08 00 00
  61+ 81F8
  62+ 81F8              	org $8200
  63+ 8200
  64+ 8200 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8204 85 00 00 8A
  65+ 8208 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 820C 00 AA 80 00
  66+ 8210 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8214 00 00 D8 00
  67+ 8218 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 821C FE 00 0A FA
  68+ 8220 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8224 2A 98 00 15
  69+ 8228 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 822C 00 04 00 00
  70+ 8230
  71+ 8230 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8234 42 80 00 45
  72+ 8238 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 823C 00 55 40 00
  73+ 8240 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8244 00 00 6C 00
  74+ 8248 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 824C FF 00 05 7D
  75+ 8250 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8254 15 4C 00 0A
  76+ 8258 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 825C 00 02 00 00
  77+ 8260
  78+ 8260 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8264 21 40 00 22
  79+ 8268 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 826C 00 2A A0 00
  80+ 8270 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8274 80 00 36 00
  81+ 8278 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 827C 7F 80 02 BE
  82+ 8280 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8284 0A A6 00 05
  83+ 8288 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 828C 00 01 00 00
  84+ 8290
  85+ 8290 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8294 10 A0 00 11
  86+ 8298 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 829C 00 15 50 00
  87+ 82A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 82A4 40 00 1B 00
  88+ 82A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 82AC BF C0 01 5F
  89+ 82B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 82B4 05 53 00 02
  90+ 82B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 82BC 00 00 80 00
  91+ 82C0
  92+ 82C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 82C4 08 50 00 08
  93+ 82C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 82CC 00 0A A8 00
  94+ 82D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 82D4 A0 00 0D 80
  95+ 82D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 82DC 5F F8 00 AF
  96+ 82E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 82E4 02 A9 00 01
  97+ 82E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 82EC 00 00 40 00
  98+ 82F0
  99+ 82F0              	org $8300
 100+ 8300
 101+ 8300 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8304 04 28 00 04
 102+ 8308 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 830C 00 05 54 00
 103+ 8310 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8314 D0 00 06 C0
 104+ 8318 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 831C 2F FC 00 57
 105+ 8320 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8324 01 54 80 00
 106+ 8328 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 832C 00 00 20 00
 107+ 8330
 108+ 8330
 109+ 8330 40 83        Indice_Badsat_der defw Badsat_derecha
 110+ 8332 70 83        	defw Badsat_der_f8
 111+ 8334 A0 83        	defw Badsat_der_f9
 112+ 8336 D0 83        	defw Badsat_der_fa
 113+ 8338 00 84        	defw Badsat_der_fb
 114+ 833A 00 84        	defw Badsat_der_fc
 115+ 833C 30 84        	defw Badsat_der_fd
 116+ 833E 60 84        	defw Badsat_der_fe
 117+ 8340
 118+ 8340 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8343 28 40 00     	DEFB    $28,$40,$00
 120+ 8346 54 40 00     	DEFB	$54,$40,$00
 121+ 8349 AA 40 00     	DEFB	$AA,$40,$00
 122+ 834C 55 40 00     	DEFB	$55,$40,$00
 123+ 834F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8352 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8355 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8358 07 50 00     	DEFB	$07,$50,$00
 127+ 835B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 835E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8361 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8364 06 55 00     	DEFB	$06,$55,$00
 131+ 8367 00 2A 00     	DEFB	$00,$2A,$00
 132+ 836A 00 14 00     	DEFB	$00,$14,$00
 133+ 836D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8370
 135+ 8370 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8374 20 00 2A 20
 136+ 8378 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 837C 2A A0 00 15
 137+ 8380 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8384 00 03 60 00
 138+ 8388 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 838C F4 00 0B EA
 139+ 8390 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8394 03 2A 80 00
 140+ 8398 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 839C 00 00 04 00
 141+ 83A0
 142+ 83A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 83A4 10 00 15 10
 143+ 83A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 83AC 15 50 00 0A
 144+ 83B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 83B4 80 01 B0 00
 145+ 83B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 83BC FA 00 05 F5
 146+ 83C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 83C4 01 95 40 00
 147+ 83C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 83CC 00 00 02 00
 148+ 83D0
 149+ 83D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 83D4 08 00 0A 88
 150+ 83D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 83DC 0A A8 00 05
 151+ 83E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 83E4 C0 00 D8 00
 152+ 83E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 83EC FD 00 02 FA
 153+ 83F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 83F4 00 CA A0 00
 154+ 83F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 83FC 80 00 01 00
 155+ 8400
 156+ 8400 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8404 84 00 05 44
 157+ 8408 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 840C 05 54 00 02
 158+ 8410 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8414 E0 00 6C 00
 159+ 8418 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 841C FE 80 01 7D
 160+ 8420 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8424 00 65 50 00
 161+ 8428 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 842C 40 00 00 80
 162+ 8430
 163+ 8430              ;! 16 bytes libres aquí !!!!!
 164+ 8430
 165+ 8430              	org $8400
 166+ 8400
 167+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 167+ 8404 42 00 02 A2
 168+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 168+ 840C 02 AA 00 01
 169+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 169+ 8414 F0 00 36 00
 170+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 170+ 841C FF 40 00 BE
 171+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 171+ 8424 00 32 A8 00
 172+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 172+ 842C A0 00 00 40
 173+ 8430
 174+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 174+ 8434 A1 00 01 51
 175+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 175+ 843C 01 55 00 00
 176+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 176+ 8444 F8 00 1B 00
 177+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 177+ 844C FF A0 00 1F
 178+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 178+ 8454 00 09 54 00
 179+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 179+ 845C 50 00 00 20
 180+ 8460
 181+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 181+ 8464 50 80 00 A8
 182+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 182+ 846C 00 AA 80 00
 183+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 183+ 8474 FC 00 0D 80
 184+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 184+ 847C FF D0 00 0F
 185+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 185+ 8484 00 04 AA 00
 186+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 186+ 848C 28 00 00 10
 187+ 8490
 188+ 8490              ; ----------------------------------------------------------------------------------------
 189+ 8490
 190+ 8490              ; Amadeus. 2x2.
 191+ 8490
 192+ 8490              ;	org $8119
 193+ 8490
 194+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 195+ 8492 00 00        	defw 0
 196+ 8494 00 85        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 8496 00 00        	defw 0
 198+ 8498 30 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 849A 00 00        	defw 0
 200+ 849C 60 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 849E 00 00        	defw 0	 								; (Fín de índice).
 202+ 84A0
 203+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 204+ 84A2 00 00        	defw 0
 205+ 84A4 60 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 84A6 00 00        	defw 0
 207+ 84A8 30 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 84AA 00 00        	defw 0
 209+ 84AC 00 85        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 211+ 84B0
 212+ 84B0 01 80 00     Amadeus DEFB $01,$80,0
 213+ 84B3 23 C4 00     	DEFB	$23,$C4,0
 214+ 84B6 26 64 00     	DEFB	$26,$64,0
 215+ 84B9 24 24 00     	DEFB	$24,$24,0
 216+ 84BC 2C 34 00     	DEFB	$2C,$34,0
 217+ 84BF 6D B6 00     	DEFB	$6D,$B6,0
 218+ 84C2 6F F6 00     	DEFB	$6F,$F6,0
 219+ 84C5 67 E6 00     	DEFB	$67,$E6,0
 220+ 84C8 E7 E7 00     	DEFB	$E7,$E7,0
 221+ 84CB F3 CF 00     	DEFB	$F3,$CF,0
 222+ 84CE F7 EF 00     	DEFB	$F7,$EF,0
 223+ 84D1 FF FF 00     	DEFB	$FF,$FF,0
 224+ 84D4 FB DF 00     	DEFB	$FB,$DF,0
 225+ 84D7 FB DF 00     	DEFB	$FB,$DF,0
 226+ 84DA 8B D1 00     	DEFB	$8B,$D1,0
 227+ 84DD 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 228+ 84E0
 229+ 84E0              	org $8500
 230+ 8500
 231+ 8500 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8504 F1 00 09 99
 232+ 8508 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 850C 0B 0D 00 1B
 233+ 8510 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8514 80 19 F9 80
 234+ 8518 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 851C F3 C0 3D FB
 235+ 8520 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8524 3E F7 C0 3E
 236+ 8528 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 852C 40 1C 63 80
 237+ 8530
 238+ 8530 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8534 3C 40 02 66
 239+ 8538 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 853C 02 C3 40 06
 240+ 8540 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8544 60 06 7E 60
 241+ 8548 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 854C 3C F0 0F 7E
 242+ 8550 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8554 0F BD F0 0F
 243+ 8558 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 855C 10 07 18 E0
 244+ 8560
 245+ 8560 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8564 8F 10 00 99
 246+ 8568 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 856C 00 B0 D0 01
 247+ 8570 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 8574 D8 01 9F 98
 248+ 8578 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 857C CF 3C 03 DF
 249+ 8580 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 8584 03 EF 7C 03
 250+ 8588 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 858C 44 01 C6 38
 251+ 8590
 252+ 8590              ; ----------------------------------------------------------------------------------------
 253+ 8590
 254+ 8590              ;	org $8690
 255+ 8590
 256+ 8590 96 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 257+ 8592 C6 85        	defw Explosion_2x3_2
 258+ 8594 00 86        	defw Explosion_2x3_3
 259+ 8596
 260+ 8596 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 260+ 859A 10 00 04 38
 261+ 859E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 261+ 85A2 02 E6 80 01
 262+ 85A6 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 262+ 85AA 00 03 DD 80
 263+ 85AE 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 263+ 85B2 3B 80 01 9D
 264+ 85B6 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 264+ 85BA 02 FD 80 03
 265+ 85BE 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 265+ 85C2 00 08 00 00
 266+ 85C6
 267+ 85C6 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 267+ 85CA 38 10 03 BC
 268+ 85CE 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 268+ 85D2 04 06 C0 00
 269+ 85D6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 269+ 85DA 00 03 DD 80
 270+ 85DE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 270+ 85E2 3A 70 01 9C
 271+ 85E6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 271+ 85EA 04 F8 80 06
 272+ 85EE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 272+ 85F2 00 00 00 00
 273+ 85F6
 274+ 85F6              	org $8600
 275+ 8600
 276+ 8600 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 276+ 8604 00 20 08 00
 277+ 8608 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 277+ 860C 00 06 00 00
 278+ 8610 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 278+ 8614 00 00 14 30
 279+ 8618 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 279+ 861C 38 00 01 08
 280+ 8620 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 280+ 8624 00 80 00 04
 281+ 8628 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 281+ 862C 10 08 00 20
 282+ 8630
 283+ 8630              ; ------------------------------------------
 284+ 8630
 285+ 8630 36 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 286+ 8632 56 86        	defw Explosion_2x2_2
 287+ 8634 76 86        	defw Explosion_2x2_3
 288+ 8636
 289+ 8636 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 289+ 863A 43 84 37 D8
 290+ 863E 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 290+ 8642 17 F0 3D D8
 291+ 8646 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 291+ 864A 19 D0 1F 60
 292+ 864E 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 292+ 8652 40 00 80 00
 293+ 8656
 294+ 8656
 295+ 8656 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 295+ 865A 3B C2 60 0C
 296+ 865E 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 296+ 8662 07 F0 3D D8
 297+ 8666 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 297+ 866A 19 C6 1F 64
 298+ 866E 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 298+ 8672 80 00 00 00
 299+ 8676
 300+ 8676 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 300+ 867A 88 04 10 0C
 301+ 867E 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 301+ 8682 81 E0 01 43
 302+ 8686 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 302+ 868A 10 80 18 00
 303+ 868E 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 303+ 8692 60 01 80 02
 304+ 8696
 305+ 8696
 306+ 8696
 307+ 8696
 308+ 8696
# file closed: Sprites_e_indices.asm
 131  8696              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8696              ; ---------------------------------------------------------------------
   2+ 8696              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8696              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8696              ; ---------------------------------------------------------------------
   5+ 8696
   6+ 8696              ; 30/05/24
   7+ 8696              ;
   8+ 8696              ;	En esta tabla iremos almacenando:
   9+ 8696              ;
  10+ 8696              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 8696              ;
  12+ 8696              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 8696
  14+ 8696 00 00 00...  Numeros_aleatorios ds 7
  15+ 869D
  16+ 869D 00 00 00...  Tabla_de_pintado ds 27
  17+ 86B8
  18+ 86B8              ;	db 0, defw 0
  19+ 86B8              ;	db 0, defw 0
  20+ 86B8              ;	db 0, defw 0
  21+ 86B8              ;	db 0, defw 0
  22+ 86B8              ;	db 0, defw 0
  23+ 86B8              ;	db 0, defw 0
  24+ 86B8              ;	db 0, defw 0
  25+ 86B8
  26+ 86B8 EA 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  27+ 86BA              ;	defw ...
  28+ 86BA              ; 	defw ...
  29+ 86BA 00 00        	defw 0
  30+ 86BC
  31+ 86BC              ; Control. %00000001 00000001
  32+ 86BC              ;
  33+ 86BC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  34+ 86BC              ;                    _ hacen las entidades hacia abajo.
  35+ 86BC              ;
  36+ 86BC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  37+ 86BC
  38+ 86BC C2 86        Indice_de_disparos_Amadeus defw Disparo_1A
  39+ 86BE CA 86        	defw Disparo_2A
  40+ 86C0 D2 86        	defw Disparo_3A
  41+ 86C2
  42+ 86C2 00 00        Disparo_1A defw 0									; Control.
  43+ 86C4 00 00        	defw 0											; Puntero objeto.
  44+ 86C6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  45+ 86C8 00 00        	defw 0											; Rutina de impresión.
  46+ 86CA
  47+ 86CA 00 00        Disparo_2A defw 0									; Control.
  48+ 86CC 00 00        	defw 0											; Puntero objeto.
  49+ 86CE 00 00        	defw 0											; Puntero de impresión.
  50+ 86D0 00 00        	defw 0											; Rutina de impresión.
  51+ 86D2
  52+ 86D2 00 00        Disparo_3A defw 0
  53+ 86D4
  54+ 86D4 EA 86        Indice_de_disparos_entidades defw Disparo_1
  55+ 86D6 F2 86        	defw Disparo_2
  56+ 86D8 FA 86        	defw Disparo_3
  57+ 86DA 02 87        	defw Disparo_4
  58+ 86DC 0A 87        	defw Disparo_5
  59+ 86DE 12 87        	defw Disparo_6
  60+ 86E0 1A 87        	defw Disparo_7
  61+ 86E2 22 87        	defw Disparo_8
  62+ 86E4 2A 87        	defw Disparo_9
  63+ 86E6 32 87        	defw Disparo_10
  64+ 86E8 3A 87        	defw Disparo_11
  65+ 86EA
  66+ 86EA 00 00        Disparo_1 defw 0									; Control.
  67+ 86EC 00 00        	defw 0											; Puntero objeto.
  68+ 86EE 00 00        	defw 0											; Puntero de impresión.
  69+ 86F0 00 00        	defw 0											; Rutina de impresión.
  70+ 86F2
  71+ 86F2 00 00        Disparo_2 defw 0									; Control.
  72+ 86F4 00 00        	defw 0											; Puntero objeto.
  73+ 86F6 00 00        	defw 0											; Puntero de impresión.
  74+ 86F8 00 00        	defw 0											; Rutina de impresión.
  75+ 86FA
  76+ 86FA 00 00        Disparo_3 defw 0									; Control.
  77+ 86FC 00 00        	defw 0											; Puntero objeto.
  78+ 86FE 00 00        	defw 0											; Puntero de impresión.
  79+ 8700 00 00        	defw 0											; Rutina de impresión.
  80+ 8702
  81+ 8702 00 00        Disparo_4 defw 0									; Control.
  82+ 8704 00 00        	defw 0											; Puntero objeto.
  83+ 8706 00 00        	defw 0											; Puntero de impresión.
  84+ 8708 00 00        	defw 0											; Rutina de impresión.
  85+ 870A
  86+ 870A 00 00        Disparo_5 defw 0									; Control.
  87+ 870C 00 00        	defw 0											; Puntero objeto.
  88+ 870E 00 00        	defw 0											; Puntero de impresión.
  89+ 8710 00 00        	defw 0											; Rutina de impresión.
  90+ 8712
  91+ 8712 00 00        Disparo_6 defw 0									; Control.
  92+ 8714 00 00        	defw 0											; Puntero objeto.
  93+ 8716 00 00        	defw 0											; Puntero de impresión.
  94+ 8718 00 00        	defw 0											; Rutina de impresión.
  95+ 871A
  96+ 871A 00 00        Disparo_7 defw 0									; Control.
  97+ 871C 00 00        	defw 0											; Puntero objeto.
  98+ 871E 00 00        	defw 0											; Puntero de impresión.
  99+ 8720 00 00        	defw 0											; Rutina de impresión.
 100+ 8722
 101+ 8722 00 00        Disparo_8 defw 0									; Control.
 102+ 8724 00 00        	defw 0											; Puntero objeto.
 103+ 8726 00 00        	defw 0											; Puntero de impresión.
 104+ 8728 00 00        	defw 0											; Rutina de impresión.
 105+ 872A
 106+ 872A 00 00        Disparo_9 defw 0									; Control.
 107+ 872C 00 00        	defw 0											; Puntero objeto.
 108+ 872E 00 00        	defw 0											; Puntero de impresión.
 109+ 8730 00 00        	defw 0											; Rutina de impresión.
 110+ 8732
 111+ 8732 00 00        Disparo_10 defw 0									; Control.
 112+ 8734 00 00        	defw 0											; Puntero objeto.
 113+ 8736 00 00        	defw 0											; Puntero de impresión.
 114+ 8738 00 00        	defw 0											; Rutina de impresión.
 115+ 873A
 116+ 873A 00 00        Disparo_11 defw 0
 117+ 873C
 118+ 873C              ; -------------------------------------------------------------------------------------
 119+ 873C              ;
 120+ 873C              ;	Índice de cajas de entidades.
 121+ 873C              ;
 122+ 873C              ;	18/1/24
 123+ 873C              ;
 124+ 873C
 125+ 873C              Indice_de_cajas_de_entidades
 126+ 873C
 127+ 873C 5D 87        	defw Caja_1
 128+ 873E 6B 87        	defw Caja_2
 129+ 8740 79 87        	defw Caja_3
 130+ 8742 87 87        	defw Caja_4
 131+ 8744 95 87        	defw Caja_5
 132+ 8746 A3 87        	defw Caja_6
 133+ 8748 B1 87        	defw Caja_7
 134+ 874A
 135+ 874A 00 00        	defw 0
 136+ 874C 00 00        	defw 0
 137+ 874E
 138+ 874E              ; -------------------------
 139+ 874E
 140+ 874E              ; Relleno para que no se corrompa el movimiento. ?????
 141+ 874E
 142+ 874E 00           	db 0
 143+ 874F
 144+ 874F              ; ---------- ---------- ---------- ---------- ----------
 145+ 874F              ;
 146+ 874F              ;	28/05/24
 147+ 874F              ;
 148+ 874F              ; 	Cada caja tiene 14 bytes !!!
 149+ 874F              ;
 150+ 874F              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante_
 151+ 874F              ;	_para otra función.
 152+ 874F
 153+ 874F 00 00 00     Amadeus_BOX db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 8752 00           	db 0												; (Contador_de_vueltas).
 155+ 8753 00           	db 0												; (Impacto).
 156+ 8754 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 8756 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 8758 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 875A 00           	db 0												; (Ctrl_0).
 160+ 875B 00           	db 0												; (Ctrl_2).
 161+ 875C 00           	db 0												; (Velocidad).
 162+ 875D
 163+ 875D              ; ---------- ---------- ---------- ---------- ----------
 164+ 875D              ;
 165+ 875D              ;	22/01/24
 166+ 875D              ;
 167+ 875D              ; 	Cada caja tiene 14 bytes !!!
 168+ 875D
 169+ 875D 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 8760 00           	db 0												; (Contador_de_vueltas).
 171+ 8761 00           	db 0												; (Impacto).
 172+ 8762 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 8764 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 8766 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 8768 00           	db 0												; (Ctrl_0).
 176+ 8769 00           	db 0												; (Ctrl_2).
 177+ 876A 00           	db 0												; (Velocidad).
 178+ 876B
 179+ 876B              ; ---------- ---------- ---------- ---------- ----------
 180+ 876B
 181+ 876B 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 182+ 876E 00           	db 0 												; (Contador_de_vueltas).
 183+ 876F 00           	db 0												; (Impacto).
 184+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 185+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 186+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 187+ 8776 00           	db 0												; (Ctrl_0).
 188+ 8777 00           	db 0												; (Ctrl_2).
 189+ 8778 00           	db 0												; (Velocidad).
 190+ 8779
 191+ 8779              ; ---------- ---------- ---------- ---------- ----------
 192+ 8779
 193+ 8779 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 877C 00           	db 0 												; (Contador_de_vueltas).
 195+ 877D 00           	db 0												; (Impacto).
 196+ 877E 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 8780 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 8782 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 8784 00           	db 0												; (Ctrl_0).
 200+ 8785 00           	db 0												; (Ctrl_2).
 201+ 8786 00           	db 0												; (Velocidad).
 202+ 8787
 203+ 8787              ; ---------- ---------- ---------- ---------- ----------
 204+ 8787
 205+ 8787 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 206+ 878A 00           	db 0 												; (Contador_de_vueltas).
 207+ 878B 00           	db 0												; (Impacto).
 208+ 878C 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 878E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 8790 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 8792 00           	db 0												; (Ctrl_0).
 212+ 8793 00           	db 0												; (Ctrl_2).
 213+ 8794 00           	db 0												; (Velocidad).
 214+ 8795
 215+ 8795              ; ---------- ---------- ---------- ---------- ----------
 216+ 8795
 217+ 8795 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 218+ 8798 00           	db 0 												; (Contador_de_vueltas).
 219+ 8799 00           	db 0												; (Impacto).
 220+ 879A 00 00        	defw 0												; (Puntero_de_impresion).
 221+ 879C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 222+ 879E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 223+ 87A0 00           	db 0												; (Ctrl_0).
 224+ 87A1 00           	db 0												; (Ctrl_2).
 225+ 87A2 00           	db 0												; (Velocidad).
 226+ 87A3
 227+ 87A3              ; ---------- ---------- ---------- ---------- ----------
 228+ 87A3
 229+ 87A3 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 230+ 87A6 00           	db 0 												; (Contador_de_vueltas).
 231+ 87A7 00           	db 0												; (Impacto).
 232+ 87A8 00 00        	defw 0												; (Puntero_de_impresion).
 233+ 87AA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 234+ 87AC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 235+ 87AE 00           	db 0												; (Ctrl_0).
 236+ 87AF 00           	db 0												; (Ctrl_2).
 237+ 87B0 00           	db 0												; (Velocidad).
 238+ 87B1
 239+ 87B1              ; ---------- ---------- ---------- ---------- ----------
 240+ 87B1
 241+ 87B1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 242+ 87B4 00           	db 0 												; (Contador_de_vueltas).
 243+ 87B5 00           	db 0												; (Impacto).
 244+ 87B6 00 00        	defw 0												; (Puntero_de_impresion).
 245+ 87B8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 246+ 87BA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 247+ 87BC 00           	db 0												; (Ctrl_0).
 248+ 87BD 00           	db 0												; (Ctrl_2).
 249+ 87BE 00           	db 0												; (Velocidad).
 250+ 87BF
 251+ 87BF              ; -------------------------------------------------------------------------------------
 252+ 87BF              ;
 253+ 87BF              ;	11/1/24
 254+ 87BF              ;
 255+ 87BF              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 256+ 87BF              ;
 257+ 87BF              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 258+ 87BF              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 259+ 87BF              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 260+ 87BF              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 261+ 87BF
 262+ 87BF              Indice_de_definiciones_de_entidades
 263+ 87BF
 264+ 87BF C3 87        	defw Entidad_1
 265+ 87C1 D0 87        	defw Entidad_2
 266+ 87C3
 267+ 87C3              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 268+ 87C3
 269+ 87C3              ;	BADSAT, (Satélite malvado).
 270+ 87C3
 271+ 87C3 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 272+ 87C6 01           	db 1												; (Contador_de_vueltas).
 273+ 87C7 30 83        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 274+ 87C9 88 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 275+ 87CB 03 40        	defw $4003	                                     	; (Posicion_inicio).
 276+ 87CD 01           	db 1												; (Cuad_objeto).
 277+ 87CE 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 278+ 87D0
 279+ 87D0 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 280+ 87D3 01           	db 1												; (Contador_de_vueltas).
 281+ 87D4 30 83        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 282+ 87D6 88 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 283+ 87D8 40 50        	defw $5040                                      	; (Posicion_inicio).
 284+ 87DA 01           	db 1												; (Cuad_objeto).
 285+ 87DB 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 286+ 87DD
 287+ 87DD              ; -------------------------------------------------------------------------------------
 288+ 87DD              ;
 289+ 87DD              ;	28/05/24
 290+ 87DD              ;
 291+ 87DD              ;	Definición de Amadeus.
 292+ 87DD              ;
 293+ 87DD              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 294+ 87DD              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 295+ 87DD
 296+ 87DD 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 297+ 87E0 00           	db 0												; (Contador_de_vueltas).
 298+ 87E1 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 299+ 87E3 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 300+ 87E5 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 301+ 87E7 03           	db 3												; (Cuad_objeto).
 302+ 87E8 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 132  87EA              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87EA
   2+ 87EA
   3+ 87EA              ;   07/07/23
   4+ 87EA              ;
   5+ 87EA              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87EA              ;
   7+ 87EA              ;   Codificación:
   8+ 87EA              ;
   9+ 87EA              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87EA              ;
  11+ 87EA              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87EA              ;
  13+ 87EA              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87EA              ;
  15+ 87EA              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87EA              ;
  17+ 87EA              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87EA              ;                               ..... %01000010 Vel_up 4
  19+ 87EA              ;                                               Vel_down 2
  20+ 87EA              ;                               ..... $42
  21+ 87EA              ;
  22+ 87EA              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87EA              ;
  24+ 87EA              ;                               ..... %01000010 Vel_left 4
  25+ 87EA              ;                                               Vel_right 2
  26+ 87EA              ;                               ..... $42
  27+ 87EA              ;
  28+ 87EA              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87EA              ;
  30+ 87EA              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87EA              ;
  32+ 87EA              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87EA              ;
  34+ 87EA              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87EA              ;                                     $53
  36+ 87EA              ;
  37+ 87EA              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87EA              ;
  39+ 87EA              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87EA              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87EA              ;
  42+ 87EA              ;                       Arriba ..... $81
  43+ 87EA              ;                       Arriba - izquierda ..... $a1
  44+ 87EA              ;                       Arriba - derecha ..... $91
  45+ 87EA              ;
  46+ 87EA              ;                       Abajo ..... $41
  47+ 87EA              ;                       Abajo - izquierda ..... $61
  48+ 87EA              ;                       Abajo - derecha ..... $51
  49+ 87EA              ;
  50+ 87EA              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87EA              ;
  52+ 87EA              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87EA              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87EA              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87EA              ;
  56+ 87EA              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87EA              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87EA              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87EA              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87EA              ;
  61+ 87EA              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87EA              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87EA              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87EA              ;
  65+ 87EA              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87EA              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87EA              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87EA              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87EA
  70+ 87EA              ; ----- ----- ----- ----- -----
  71+ 87EA
  72+ 87EA 16 88        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87EC 1E 88            defw F_1
  74+ 87EE 28 88            defw F_2
  75+ 87F0 32 88            defw Codo_abajo_derecha
  76+ 87F2 66 88            defw Derecha_y_subiendo
  77+ 87F4 70 88            defw Derecha_y_subiendo_1
  78+ 87F6 7A 88            defw F_3
  79+ 87F8 84 88            defw F_4
  80+ 87FA 8E 88            defw Derecha_y_bajando
  81+ 87FC 98 88            defw Derecha_y_bajando_1
  82+ 87FE A2 88            defw Derecha_y_bajando_2
  83+ 8800 AC 88            defw Codo_derecha_abajo
  84+ 8802 DC 88            defw Codo_abajo_izq.
  85+ 8804 10 89            defw Izquierda_y_subiendo
  86+ 8806 1A 89            defw Izquierda_y_subiendo_1
  87+ 8808 24 89            defw F_5
  88+ 880A 2E 89            defw F_6
  89+ 880C 38 89            defw Izquierda_y_bajando
  90+ 880E 42 89            defw Izquierda_y_bajando_1
  91+ 8810 4C 89            defw Izquierda_y_bajando_2
  92+ 8812 56 89            defw Codo_izquierda_abajo
  93+ 8814 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8816
  95+ 8816 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 881A 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 881E
  98+ 881E 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8822 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8826 08 00
 100+ 8828
 101+ 8828 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 882C 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8830 0F FE
 103+ 8832
 104+ 8832 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8836 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 883A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 883E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8842 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8846 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 884A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 884E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8852 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8856 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 885A 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 885E 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8862 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8866
 118+ 8866 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 886A 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 886E 06 00
 120+ 8870
 121+ 8870 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8874 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8878 02 00
 123+ 887A
 124+ 887A 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 887E 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8882 04 00
 126+ 8884
 127+ 8884 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8888 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 888C 08 00
 129+ 888E
 130+ 888E 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8892 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8896 02 00
 132+ 8898
 133+ 8898 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 889C 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 88A0 06 00
 135+ 88A2
 136+ 88A2 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 88A6 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 88AA 06 00
 138+ 88AC
 139+ 88AC              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 88AC
 141+ 88AC 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 88B0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 88B4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 88B8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88BC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88C0 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88C4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88C8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88CC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88D0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88D4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88D8 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88DC
 154+ 88DC 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88E0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88E4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88E8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88EC 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88F0 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88F4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88F8 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88FC 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8900 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8904 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8908 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 890C 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8910
 168+ 8910 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8914 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8918 06 00
 170+ 891A
 171+ 891A 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 891E 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8922 02 00
 173+ 8924
 174+ 8924 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8928 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 892C 04 00
 176+ 892E
 177+ 892E 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8932 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8936 08 00
 179+ 8938
 180+ 8938 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 893C 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8940 02 00
 182+ 8942
 183+ 8942 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8946 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 894A 06 00
 185+ 894C
 186+ 894C 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8950 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8954 06 00
 188+ 8956
 189+ 8956 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 895A 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 895E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8962 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8966 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 896A 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 896E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8972 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8976 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 897A 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 897E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8982 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8986
 202+ 8986
 203+ 8986
 204+ 8986
 205+ 8986
 206+ 8986
 207+ 8986
 208+ 8986
 209+ 8986
 210+ 8986
# file closed: Patrones_de_mov.asm
 133  8986              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8986              ; 19/1/24
   2+ 8986
   3+ 8986              Indice_de_niveles
   4+ 8986
   5+ 8986 8E 89        	defw Nivel_1
   6+ 8988 9A 89        	defw Nivel_2
   7+ 898A
   8+ 898A              ;	...
   9+ 898A              ;	...
  10+ 898A              ;	+ Niveles ...
  11+ 898A
  12+ 898A 00 00        	defw 0
  13+ 898C 00 00        	defw 0
  14+ 898E
  15+ 898E 07           Nivel_1 db 7									; Nº de entidades.
  16+ 898F 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8993 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8997 01 01 01
  18+ 899A
  19+ 899A 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 899B 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 899F 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 89A3 01 02
  22+ 89A5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 89A9 01 02
  23+ 89AB
# file closed: Niveles.asm
 134  89AB
 135  89AB              ; ******************************************************************************************************************************************************************************************
 136  89AB              ; Constantes.
 137  89AB              ; ******************************************************************************************************************************************************************************************
 138  89AB              ;
 139  89AB              ; 09/03/24
 140  89AB
 141  89AB              ;
 142  89AB              ; Constantes.
 143  89AB              ;
 144  89AB
 145  89AB              ROM_keyboard equ $0038 									; Rutina de ROM. Actualiza FRAMES y escanea el teclado.
 146  89AB              FRAMES equ $5c78										; Variable de 16 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
 147  89AB
 148  89AB              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
 149  89AB
 150  89AB              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 151  89AB              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 152  89AB              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 153  89AB              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 154  89AB
 155  89AB              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb20 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 156  89AB              Almacen_de_movimientos_masticados_Amadeus equ $e000		; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
 157  89AB
 158  89AB              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
 159  89AB              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
 160  89AB              Amadeus_scanlines_album equ $8120	;	($8120 - $8142)
 161  89AB              Amadeus_scanlines_album_2 equ $8143	;	($8143 - $8166)
 162  89AB
 163  89AB              ;                                                       ; 35 bytes por entidad.
 164  89AB              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 165  89AB              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 166  89AB              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 167  89AB              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 168  89AB
 169  89AB
 170  89AB              ; ******************************************************************************************************************************************************************************************
 171  89AB              ; Variables.
 172  89AB              ; ******************************************************************************************************************************************************************************************
 173  89AB
 174  89AB              ;
 175  89AB              ; 12/05/24
 176  89AB              ;
 177  89AB              ; Variables de DRAW. (Motor principal).	44 Bytes.
 178  89AB              ;
 179  89AB
 180  89AB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 181  89AB
 182  89AB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 183  89AC              ;															- Patrón de movimiento.
 184  89AC              ;															- Aspecto
 185  89AC 00           Filas db 0												; Filas. [DRAW]
 186  89AD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 187  89AE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 188  89B0 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 189  89B2 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 190  89B3 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 191  89B4
 192  89B4              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 193  89B4
 194  89B4 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 195  89B5              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 196  89B5              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 197  89B5 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 198  89B6              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 199  89B6
 200  89B6              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 201  89B6              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 202  89B6              ; Ejemplos.
 203  89B6
 204  89B6              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 205  89B6              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 206  89B6              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 207  89B6              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 208  89B6              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 209  89B6
 210  89B6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 211  89B6
 212  89B6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 213  89B6              ;
 214  89B6              ;	COLORES: 0 ..... NEGRO
 215  89B6              ;    		 1 ..... AZUL
 216  89B6              ; 			 2 ..... ROJO
 217  89B6              ;			 3 ..... MAGENTA
 218  89B6              ; 			 4 ..... VERDE
 219  89B6              ; 			 5 ..... CIAN
 220  89B6              ;			 6 ..... AMARILLO
 221  89B6              ; 			 7 ..... BLANCO
 222  89B6
 223  89B6 00 00        Indice_Sprite_der defw 0
 224  89B8 00 00        Indice_Sprite_izq defw 0
 225  89BA 00 00        Puntero_DESPLZ_der defw 0
 226  89BC 00 00        Puntero_DESPLZ_izq defw 0
 227  89BE
 228  89BE 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 229  89C0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 230  89C1
 231  89C1              ; Variables de objeto. (Características).
 232  89C1
 233  89C1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 234  89C2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 235  89C2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 236  89C2              ; Variables_de_borrado ds 6
 237  89C2
 238  89C2 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 239  89C4              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 240  89C4
 241  89C4 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 242  89C6
 243  89C6              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 244  89C6              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 245  89C6
 246  89C6 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 247  89C8              ;														; _palabras que componen el "movimiento_masticado".
 248  89C8
 249  89C8              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 250  89C8
 251  89C8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 252  89C9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 253  89C9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 254  89C9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 255  89C9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 256  89C9              ;
 257  89C9              ; 														DESCRIPCIÖN:
 258  89C9              ;
 259  89C9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 260  89C9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 261  89C9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 262  89C9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 263  89C9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 264  89C9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 265  89C9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 266  89C9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 267  89C9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 268  89C9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 269  89C9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 270  89C9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 271  89C9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 272  89C9              ;
 273  89C9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 274  89C9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 275  89C9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 276  89C9
 277  89C9              ; Variables de funcionamiento. [DRAW].
 278  89C9
 279  89C9 00           Columnas db 0
 280  89CA 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 281  89CC              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 282  89CC 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 283  89CD
 284  89CD              ; variables de control general.
 285  89CD
 286  89CD 00           Ctrl_2 db 0
 287  89CE              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 288  89CE              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 289  89CE              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 290  89CE              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 291  89CE              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 292  89CE              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 293  89CE              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 294  89CE              ;
 295  89CE              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 296  89CE              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 297  89CE              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 298  89CE              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 299  89CE              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 300  89CE              ;														BIT 4, ???
 301  89CE              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 302  89CE
 303  89CE 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 304  89CF              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 305  89CF              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 306  89CF              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 307  89CF              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 308  89CF
 309  89CF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 310  89D0
 311  89D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 312  89D0
 313  89D0              ;					         		---------;      ;---------
 314  89D0
 315  89D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 316  89D0
 317  89D0              Perfiles_de_velocidad
 318  89D0
 319  89D0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 320  89D1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 321  89D2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 322  89D3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 323  89D4
 324  89D4              ; Contadores de 16 bits.
 325  89D4
 326  89D4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 327  89D6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 328  89D8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 329  89DA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 330  89DC
 331  89DC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 332  89DC
 333  89DC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 334  89DE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 335  89E0 00 00        Puntero_indice_mov_bucle defw 0							;
 336  89E2              ;
 337  89E2              ;
 338  89E2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 339  89E3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 340  89E3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 341  89E3 00           Incrementa_puntero_backup db 0
 342  89E4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 343  89E5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 344  89E5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 345  89E6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 346  89E7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 347  89E8              ;
 348  89E8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 349  89E8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 350  89E8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 351  89E8              ;
 352  89E8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 353  89E8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 354  89E8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 355  89E8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 356  89E8              ;
 357  89E8              ;														;	"$ff" ..... Bucle infinito de repetición.
 358  89E8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 359  89E8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 360  89E8              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 361  89E8
 362  89E8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 363  89E9
 364  89E9              ;														DESCRIPCIÓN:
 365  89E9              ;
 366  89E9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 367  89E9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 368  89E9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 369  89E9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 370  89E9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 371  89E9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 372  89E9
 373  89E9              ;														BIT 3, Recarga de nueva oleada.
 374  89E9              ;														BIT 4, Recarga de nueva oleada.
 375  89E9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 376  89E9              ;														BIT 6, **** Frame completo.
 377  89E9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 378  89E9
 379  89E9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 380  89EB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 381  89EB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 382  89EB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 383  89EB
 384  89EB              ; Gestión de ENTIDADES y CAJAS.
 385  89EB
 386  89EB 00 00        Puntero_store_caja defw 0
 387  89ED 00 00        Puntero_restore_caja defw 0
 388  89EF 00 00        Indice_restore_caja defw 0
 389  89F1 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 390  89F2 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 391  89F3 00           Entidades_en_curso db 0									; ..... ..... .....
 392  89F4 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 393  89F5              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 394  89F5              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 395  89F5              ;														; _ (Numero_de_malotes)="0".
 396  89F5 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 397  89F7 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 398  89F9              ;														; _ puntero (Indice_entidades).
 399  89F9
 400  89F9              ;---------------------------------------------------------------------------------------------------------------
 401  89F9              ;
 402  89F9              ;	11/01/24
 403  89F9              ;
 404  89F9              ;	Álbumes.
 405  89F9
 406  89F9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 407  89FB              ;														; _variable para almacenar lo posición del puntero_
 408  89FB              ; 														; _de pila, SP.
 409  89FB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 410  89FD              ;														; La utiliza la rutina [Extrae_foto_registros].
 411  89FD
 412  89FD              ; Impresión. ----------------------------------------------------------------------------------------------------
 413  89FD
 414  89FD 00 00        Album_de_pintado defw 0
 415  89FF 00 00        Album_de_borrado defw 0
 416  8A01 00 00        Album_de_pintado_Amadeus defw 0
 417  8A03 00 00        Album_de_borrado_Amadeus defw 0
 418  8A05 00 00        Techo_Scanlines_album defw 0
 419  8A07 00 00        Techo_Scanlines_album_2 defw 0
 420  8A09 00           Switch db 0
 421  8A0A 00 00        Techo defw 0
 422  8A0C 00 00        Scanlines_album_SP defw 0
 423  8A0E 9D 86        India_SP defw Tabla_de_pintado
 424  8A10 A0 86        India_2_SP defw Tabla_de_pintado+3
 425  8A12
 426  8A12 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 427  8A13              ;
 428  8A13              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 429  8A13              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 430  8A13              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 431  8A13              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 432  8A13              ;																Habilita el borrado/pintado de sprites.
 433  8A13              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 434  8A13              ;																_ a la baja.
 435  8A13              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 436  8A13
 437  8A13
 438  8A13
 439  8A13 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 440  8A14              ;
 441  8A14              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 442  8A14              ;
 443  8A14              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 444  8A14              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 445  8A14              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 446  8A14              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 447  8A14              ;
 448  8A14              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 449  8A14              ;															_ masticados ya generados.
 450  8A14              ;
 451  8A14              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 452  8A14              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 453  8A14              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 454  8A14              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 455  8A14
 456  8A14
 457  8A14              ; Gestión de Disparos.
 458  8A14
 459  8A14              ;;Numero_de_disparotes db 0
 460  8A14              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 461  8A14              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 462  8A14              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 463  8A14              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 464  8A14              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 465  8A14              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 466  8A14              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 467  8A14              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 468  8A14              ;														; _produzca colisión.
 469  8A14              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 470  8A14              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 471  8A14              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 472  8A14              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 473  8A14 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 474  8A17              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 475  8A17              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 476  8A17
 477  8A17              ;---------------------------------------------------------------------------------------------------------------
 478  8A17
 479  8A17              ; Relojes y temporizaciones.
 480  8A17
 481  8A17              ;Clock_explosion db 4
 482  8A17
 483  8A17 96 86        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 484  8A19
 485  8A19 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 486  8A1B 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 487  8A1C              ;														; Repite la oleada de entidades.
 488  8A1C              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 489  8A1C              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 490  8A1C              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 491  8A1C
 492  8A1C              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 493  8A1C              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 494  8A1C              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 495  8A1C
 496  8A1C              ;---------------------------------------------------------------------------------------------------------------
 497  8A1C
 498  8A1C              ; Gestión de NIVELES.
 499  8A1C
 500  8A1C 00           Nivel db 0												; Nivel actual del juego.
 501  8A1D 00 00        Puntero_indice_NIVELES defw 0
 502  8A1F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 503  8A21              ; 														; _ que definen el NIVEL.
 504  8A21              ; Y todo comienza aquí .....
 505  8A21              ;
 506  8A21              ; 	INICIO  *************************************************************************************************************************************************************************
 507  8A21              ;
 508  8A21              ;	5/1/24
 509  8A21
 510  8A21              START
 511  8A21
 512  8A21 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 513  8A24 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 514  8A26 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 515  8A28 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 516  8A2A F3           	DI
 517  8A2B
 518  8A2B              ;	ld a,%00000111
 519  8A2B              ;	call Cls
 520  8A2B CD BB 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 521  8A2E
 522  8A2E              ; INICIALIZACIÓN.
 523  8A2E
 524  8A2E 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 525  8A30 CD 7F AA     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 526  8A33 CD 3F 8B     	call Extrae_numero_aleatorio_y_avanza
 527  8A36
 528  8A36 6F           	ld l,a
 529  8A37 26 00        	ld h,0
 530  8A39 22 19 8A     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 531  8A3C
 532  8A3C              ;	Inicializa 1er Nivel.
 533  8A3C
 534  8A3C 21 86 89     	ld hl,Indice_de_niveles
 535  8A3F 22 1D 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 536  8A42 CD AF AA     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 537  8A45              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 538  8A45              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 539  8A45              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 540  8A45              	;	Provisional, (para desarrollo).
 541  8A45              	;-
 542  8A45              ;	ld hl,Numero_parcial_de_entidades
 543  8A45              ;	ld b,(hl)
 544  8A45              ;	inc b
 545  8A45              ;	dec b
 546  8A45              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 547  8A45
 548  8A45 CD 13 8D     	call Inicia_albumes_de_lineas						 ; (Album_de_pintado) contiene $8000
 549  8A48              ;														 ; (Album_de_borrado) contiene $9000
 550  8A48
 551  8A48 CD F4 AA     4 call Inicia_Entidades
 552  8A4B CD 57 AB     	call Inicia_Amadeus
 553  8A4E
 554  8A4E              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 555  8A4E              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 556  8A4E              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 557  8A4E
 558  8A4E 11 4F 87     	ld de,Amadeus_BOX
 559  8A51 CD 99 AC     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 560  8A54
 561  8A54 CD A7 AB     	call Limpiamos_bandeja_DRAW
 562  8A57
 563  8A57              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 564  8A57
 565  8A57 CD 2F 8D     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 566  8A5A              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 567  8A5A              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 568  8A5A              ; (Esto se dá cuando se inicia una nueva oleada).
 569  8A5A
 570  8A5A              ;	ld a,(Ctrl_1)
 571  8A5A              ;	bit 3,a
 572  8A5A              ;	jr nz,5F											 ; Loop
 573  8A5A
 574  8A5A              ;	ld de,Amadeus_db
 575  8A5A              ;	call Store_Amadeus
 576  8A5A
 577  8A5A              ; 	INICIA DISPAROS !!!!!
 578  8A5A
 579  8A5A              ;	call Inicia_Puntero_Disparo_Entidades
 580  8A5A              ;	call Inicia_Puntero_Disparo_Amadeus
 581  8A5A
 582  8A5A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 583  8A5A
 584  8A5A              ;5 call Inicia_punteros_de_cajas
 585  8A5A              ;	call Restore_entidad
 586  8A5A
 587  8A5A              ;	ld a,(Ctrl_1)
 588  8A5A              ;	bit 3,a
 589  8A5A              ;	jr z,6F
 590  8A5A
 591  8A5A              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 592  8A5A
 593  8A5A              ;	ld hl,Ctrl_1
 594  8A5A              ;	res 3,(hl)
 595  8A5A              ;	jr Main
 596  8A5A
 597  8A5A              ; Damos por concluida la construcción del FRAME.
 598  8A5A              ;
 599  8A5A
 600  8A5A 2A 0C 8A     6 ld hl,(Scanlines_album_SP)
 601  8A5D 22 05 8A     	ld (Techo_Scanlines_album),hl
 602  8A60
 603  8A60 2A FF 89     	ld hl,(Album_de_borrado)
 604  8A63 22 0C 8A     	ld (Scanlines_album_SP),hl
 605  8A66
 606  8A66 21 9D 86     	ld hl,Tabla_de_pintado
 607  8A69 22 0E 8A     	ld (India_SP),hl
 608  8A6C
 609  8A6C 21 12 8A     	ld hl,Ctrl_3
 610  8A6F CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 611  8A71 CB D6        	set 2,(hl)
 612  8A73
 613  8A73 FB           	ei
 614  8A74
 615  8A74 76           	halt
 616  8A75
 617  8A75              ; ------------------------------------
 618  8A75
 619  8A75              Main
 620  8A75              ;
 621  8A75              ; 13/05/24
 622  8A75
 623  8A75              ; Aparece nueva entidad ???
 624  8A75
 625  8A75              ; 														; (Clock_next_entity) define cuando aparecen las entidades en pantalla.
 626  8A75              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 627  8A75              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializará _;
 628  8A75              ;														; _un 2º bloque.
 629  8A75
 630  8A75 2A 19 8A     	ld hl,(Clock_next_entity)
 631  8A78 ED 4B 78 5C  	ld bc,(FRAMES)
 632  8A7C A7           	and a
 633  8A7D ED 42        	sbc hl,bc
 634  8A7F 20 16        	jr nz,13F
 635  8A81
 636  8A81              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 637  8A81              ; _ (Clock_next_entity) para la siguiente entidad.
 638  8A81
 639  8A81 3A F2 89     21 ld a,(Numero_parcial_de_entidades)
 640  8A84 47           	ld b,a
 641  8A85 3A F3 89     	ld a,(Entidades_en_curso)
 642  8A88 B8           	cp b
 643  8A89 28 0C        	jr z,13F
 644  8A8B 30 0A        	jr nc,13F
 645  8A8D
 646  8A8D 3C           	inc a
 647  8A8E 32 F3 89     	ld (Entidades_en_curso),a
 648  8A91
 649  8A91              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 650  8A91
 651  8A91 CD 3F 8B     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 652  8A94 CD 5B 8B     	call Define_Clock_next_entity
 653  8A97
 654  8A97              ; -------------------------------------------------------------------------------------------------------------
 655  8A97
 656  8A97              ; Habilita disparos.
 657  8A97
 658  8A97              13
 659  8A97
 660  8A97              ;	ld hl,Disparo_Amadeus
 661  8A97              ;	ld de,CLOCK_repone_disparo_Amadeus
 662  8A97              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 663  8A97
 664  8A97              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 665  8A97              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 666  8A97              ;	call Habilita_disparos
 667  8A97
 668  8A97              ; COLISIONES.
 669  8A97
 670  8A97              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 671  8A97
 672  8A97              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 673  8A97              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 674  8A97              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 675  8A97
 676  8A97              ;	xor a
 677  8A97              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 678  8A97
 679  8A97              ;	call Inicia_punteros_de_cajas
 680  8A97              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 681  8A97              ; 														; _ en DRAW.
 682  8A97
 683  8A97              ;	ld a,(Filas)
 684  8A97              ;	and a
 685  8A97              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 686  8A97              ;	call Incrementa_punteros_de_cajas
 687  8A97              ;	jr 12B
 688  8A97
 689  8A97              ; ---------------------------------------------------------------------------------------
 690  8A97
 691  8A97 3A F2 89     10 ld a,(Numero_parcial_de_entidades)
 692  8A9A 47               ld b,a
 693  8A9B A7           	and a
 694  8A9C 20 00        	jr nz,11F
 695  8A9E
 696  8A9E              ;	ld hl,Ctrl_1;
 697  8A9E              ;	bit 4,(hl)
 698  8A9E              ;	jp nz,16F
 699  8A9E
 700  8A9E              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 701  8A9E
 702  8A9E              ;	ld hl,Ctrl_1
 703  8A9E              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 704  8A9E
 705  8A9E              ;	ld a,(Contador_de_frames)
 706  8A9E              ;	inc a
 707  8A9E              ;	ld (Activa_recarga_cajas),a
 708  8A9E
 709  8A9E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 710  8A9E
 711  8A9E 3A F3 89     11 ld a,(Entidades_en_curso)
 712  8AA1 A7           	and a
 713  8AA2 28 49        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 714  8AA4 47           	ld b,a												; No hay entidades que gestionar.
 715  8AA5
 716  8AA5              ; ( Código que ejecutamos con cada entidad: ).
 717  8AA5
 718  8AA5              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 719  8AA5              ;
 720  8AA5              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 721  8AA5
 722  8AA5 21 9D 86     	ld hl,Tabla_de_pintado
 723  8AA8 22 0E 8A     	ld (India_SP),hl
 724  8AAB
 725  8AAB 21 12 8A     	ld hl,Ctrl_3
 726  8AAE CB D6        	set 2,(hl)
 727  8AB0 CD 24 8B     	call Change
 728  8AB3
 729  8AB3 C5           15 push bc 												; Nº de entidades en curso.
 730  8AB4
 731  8AB4 CD 80 8D     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 732  8AB7
 733  8AB7 ED 5B 0C 8A  	ld de,(Scanlines_album_SP)
 734  8ABB CD 9F 8B     	call Recauda_informacion_de_entidad_en_curso		; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 735  8ABE
 736  8ABE              ; Existe "Entidad_guía" ???.
 737  8ABE              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 738  8ABE
 739  8ABE              ;	ld a,(Ctrl_3)
 740  8ABE              ;	bit 1,a
 741  8ABE              ;	jr nz,22F
 742  8ABE
 743  8ABE              ; Almacén de "Movimientos_masticados" lleno ???
 744  8ABE              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 745  8ABE              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 746  8ABE
 747  8ABE              ;;	ld a,(Ctrl_3)
 748  8ABE              ;;	bit 3,a
 749  8ABE              ;;	jr nz,22F
 750  8ABE
 751  8ABE              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 752  8ABE
 753  8ABE              ;	ld hl,Ctrl_2
 754  8ABE              ;	set 5,(hl)
 755  8ABE              ;	ld hl,Ctrl_3
 756  8ABE              ;	set 1,(hl)
 757  8ABE
 758  8ABE              ; Impacto ???
 759  8ABE
 760  8ABE              ;22 ld a,(Impacto)
 761  8ABE              ;	and a
 762  8ABE              ;	jr z,8F
 763  8ABE
 764  8ABE              ; Hay Impacto en esta entidad.
 765  8ABE
 766  8ABE              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 767  8ABE              ;	dec (hl)
 768  8ABE              ;	jp nz,17F
 769  8ABE
 770  8ABE              ;! Velocidad de la animación de la explosión.
 771  8ABE
 772  8ABE              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 773  8ABE              ;														; _,(velocidad de la explosión).
 774  8ABE              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 775  8ABE
 776  8ABE              ;	call Repone_datos_de_borrado
 777  8ABE              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 778  8ABE
 779  8ABE              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 780  8ABE
 781  8ABE              ;	ld a,(Ctrl_2)
 782  8ABE              ;	bit 1,a
 783  8ABE              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 784  8ABE
 785  8ABE              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 786  8ABE
 787  8ABE              ;	ld a,(CTRL_DESPLZ)
 788  8ABE              ;	and a
 789  8ABE              ;	jr nz,18F
 790  8ABE
 791  8ABE              ;	ld hl,Indice_Explosion_2x2-2
 792  8ABE              ;	ld (Puntero_DESPLZ_der),hl
 793  8ABE              ;	jr 19F
 794  8ABE
 795  8ABE              ;18 ld hl,Indice_Explosion_2x3-2
 796  8ABE              ;	ld (Puntero_DESPLZ_der),hl
 797  8ABE
 798  8ABE              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 799  8ABE              ;	set 1,(hl)
 800  8ABE              ;	jr 7F
 801  8ABE
 802  8ABE              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 803  8ABE              ; _con las coordenadas de la entidad almacenada en DRAW.
 804  8ABE
 805  8ABE              ;8 ld a,(Ctrl_1)
 806  8ABE              ;	bit 2,a
 807  8ABE              ;	jr z,7F
 808  8ABE
 809  8ABE              ;	ld hl,(Coordenadas_disparo_certero)
 810  8ABE              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 811  8ABE              ;														; E contiene la coordenada_X del disparo.
 812  8ABE              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 813  8ABE              ;														; H FILA, (Coordenada_y de la entidad).
 814  8ABE              ;	and a
 815  8ABE              ;	sbc hl,de
 816  8ABE
 817  8ABE              ;	call Determina_resultado_comparativa
 818  8ABE
 819  8ABE              ;	ld a,b
 820  8ABE              ;	and a
 821  8ABE              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 822  8ABE
 823  8ABE              ; ----- ----- -----
 824  8ABE
 825  8ABE              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 826  8ABE              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 827  8ABE
 828  8ABE              ;	ld hl,Ctrl_1
 829  8ABE              ;	res 2,(hl)
 830  8ABE
 831  8ABE              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 832  8ABE
 833  8ABE              ;	ld a,(Ctrl_0)
 834  8ABE              ;	bit 4,a
 835  8ABE              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 836  8ABE
 837  8ABE              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 838  8ABE              ; [[[
 839  8ABE              ;	call Detecta_disparo_entidad
 840  8ABE              ; ]]]
 841  8ABE
 842  8ABE              ; -------------------------------------------
 843  8ABE
 844  8ABE CD 04 8B     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 845  8AC1 CD 8B 8C     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 846  8AC4 CD 4A AD     	call Genera_datos_de_impresion
 847  8AC7              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 848  8AC7              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 849  8AC7              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 850  8AC7              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 851  8AC7
 852  8AC7 CD B2 AB     	call Decrementa_Contador_de_mov_masticados
 853  8ACA
 854  8ACA              ; -------------------------------------------
 855  8ACA
 856  8ACA              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 857  8ACA
 858  8ACA 2A C2 89     	ld hl,(Puntero_de_impresion)
 859  8ACD CD F7 AC     	call Genera_coordenadas
 860  8AD0
 861  8AD0              ;	ld hl,Ctrl_0
 862  8AD0              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 863  8AD0
 864  8AD0 CD 99 AB     17 call Store_Restore_cajas
 865  8AD3
 866  8AD3 C1           	pop bc
 867  8AD4
 868  8AD4 10 DD        	djnz 15B
 869  8AD6
 870  8AD6              ; Hemos terminado de gestionar TODAS las ENTIDADES.
 871  8AD6              ;! GESTIONA AMADEUS !!!!!!!!!!
 872  8AD6
 873  8AD6              ;	Existe movimiento ?????
 874  8AD6
 875  8AD6
 876  8AD6
 877  8AD6
 878  8AD6
 879  8AD6
 880  8AD6
 881  8AD6
 882  8AD6
 883  8AD6
 884  8AD6
 885  8AD6
 886  8AD6
 887  8AD6
 888  8AD6
 889  8AD6
 890  8AD6
 891  8AD6
 892  8AD6
 893  8AD6 CD AF 8B     	call Inicializa_India_y_limpia_Tabla_de_impresion 	; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 894  8AD9 CD C6 8B     	call Ordena_tabla_de_impresion
 895  8ADC CD 2F 8D     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 896  8ADF
 897  8ADF              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 898  8ADF              ; Hemos gestionado todas las unidades.
 899  8ADF              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 900  8ADF
 901  8ADF              ;	ld hl,Ctrl_1
 902  8ADF              ;	res 2,(hl)
 903  8ADF
 904  8ADF CD 70 8B     	call Borra_diferencia
 905  8AE2
 906  8AE2 3A 12 8A     	ld a,(Ctrl_3)
 907  8AE5 CB 5F        	bit 3,a
 908  8AE7 20 04        	jr nz,16F
 909  8AE9
 910  8AE9 EB           	ex de,hl
 911  8AEA 71           	ld (hl),c
 912  8AEB 2C           	inc l
 913  8AEC 70           	ld (hl),b											; Nuevo techo, mayor que el anterior.
 914  8AED
 915  8AED              ; Aquí situaremos la rutina que ordena el índice Masa.
 916  8AED
 917  8AED 2A FF 89     16 ld hl,(Album_de_borrado)
 918  8AF0 22 0C 8A     	ld (Scanlines_album_SP),hl
 919  8AF3
 920  8AF3 21 12 8A     	ld hl,Ctrl_3
 921  8AF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 922  8AF8
 923  8AF8 CB 9E        	res 3,(hl)
 924  8AFA CB A6        	res 4,(hl)
 925  8AFC
 926  8AFC AF           	xor a
 927  8AFD D3 FE        	out ($fe),a
 928  8AFF 76           	halt
 929  8B00
 930  8B00              ; ----------------------------------------
 931  8B00
 932  8B00              ;	ld a,(Ctrl_1) 										; Existe Loop?
 933  8B00              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 934  8B00 CA 75 8A     	jp z,Main
 935  8B03
 936  8B03              ; RECARGA DE NUEVA OLEADA.
 937  8B03
 938  8B03              ;	ld a,(Contador_de_frames)
 939  8B03              ;	ld b,a
 940  8B03              ;	ld a,(Activa_recarga_cajas)
 941  8B03              ;	cp b
 942  8B03              ;	jr z,20F
 943  8B03
 944  8B03              ;	ld hl,Ctrl_1
 945  8B03              ;	set 4,(hl)
 946  8B03              ;	jp Main
 947  8B03
 948  8B03              ;20 ld hl,Ctrl_1
 949  8B03              ;	res 4,(hl)
 950  8B03
 951  8B03              ;	ld a,(Contador_de_frames)
 952  8B03
 953  8B03              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 954  8B03              ;! _ IMPREDECIBLE !!!!
 955  8B03
 956  8B03              ;	add 10
 957  8B03              ;	ld (Clock_next_entity),a
 958  8B03
 959  8B03              ;	jp 4B
 960  8B03
 961  8B03 C9           	ret
 962  8B04
 963  8B04              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 964  8B04              ;
 965  8B04              ;	16/11/23
 966  8B04
 967  8B04              ;;Gestiona_Amadeus
 968  8B04
 969  8B04              ;! Activa/desactiva impacto con Amadeus.
 970  8B04
 971  8B04              ;	ld a,(Impacto)
 972  8B04              ;	and a
 973  8B04              ;	jr nz,2F
 974  8B04
 975  8B04              ;;	call Mov_Amadeus
 976  8B04
 977  8B04              ;;2 ld a,(Ctrl_0)
 978  8B04              ;;	bit 4,a
 979  8B04              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 980  8B04
 981  8B04              ;;	call Guarda_foto_entidad_a_pintar
 982  8B04              ;;	call Guarda_datos_de_borrado_Amadeus
 983  8B04
 984  8B04              ;;1 ld hl,Ctrl_0
 985  8B04              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 986  8B04
 987  8B04              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 988  8B04
 989  8B04              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 990  8B04
 991  8B04              ;	call Calcula_numero_de_disparotes
 992  8B04
 993  8B04              ;;	ret
 994  8B04
 995  8B04              ; -----------------------------
 996  8B04              ;
 997  8B04              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 998  8B04              ;
 999  8B04              ;	INPUTS: B a de estar a "0".
1000  8B04
1001  8B04              ;Prepara_Borra_sprites
1002  8B04
1003  8B04              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1004  8B04              ;	ld a,l
1005  8B04              ;	ret z
1006  8B04
1007  8B04              ;	srl a
1008  8B04
1009  8B04              ;2 sub 16
1010  8B04              ;	jr z,1F
1011  8B04              ;	inc b
1012  8B04              ;	jr 2B
1013  8B04
1014  8B04              ;1 inc b
1015  8B04
1016  8B04              ;	exx
1017  8B04              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1018  8B04              ;	exx
1019  8B04
1020  8B04              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1021  8B04              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1022  8B04
1023  8B04              ;	ret
1024  8B04
1025  8B04              ; --------------------------------------------------------------------------------------------------------------
1026  8B04              ;
1027  8B04              ;	15/12/23
1028  8B04
1029  8B04              ;Mov_obj
1030  8B04
1031  8B04              ;	ld a,(Ctrl_2)
1032  8B04              ;	bit 1,a
1033  8B04              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1034  8B04
1035  8B04              ; Explosión:
1036  8B04
1037  8B04              ;	ld a,(Frames_explosion)
1038  8B04              ;	and a
1039  8B04              ;	jr nz,4F
1040  8B04
1041  8B04              ;!  Una alimaña menos!!!!!!!!!1
1042  8B04
1043  8B04              ; Se trataba de una Entidad_guía ???
1044  8B04
1045  8B04              ;	ld a,(Ctrl_2)
1046  8B04              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1047  8B04              ;	jr z,5F
1048  8B04
1049  8B04              ;	ld hl,Ctrl_3
1050  8B04              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1051  8B04
1052  8B04              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1053  8B04              ;!! _generado puede ser distinto, (aletoriedad).
1054  8B04
1055  8B04              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1056  8B04              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1057  8B04              ;	dec (hl)
1058  8B04              ;	ld hl,Entidades_en_curso
1059  8B04              ;	dec (hl)
1060  8B04              ;	ld hl,Numero_de_entidades
1061  8B04              ;	dec (hl)
1062  8B04              ;	jr 3F
1063  8B04
1064  8B04              ; -----
1065  8B04
1066  8B04              ;	`Movemos´ la explosión.
1067  8B04
1068  8B04              ;4 ld hl,(Puntero_DESPLZ_der)
1069  8B04              ;	inc hl
1070  8B04              ;	inc hl
1071  8B04              ;	call Extrae_address
1072  8B04              ;;	ld (Puntero_objeto),hl
1073  8B04
1074  8B04              ;;	ld hl,Frames_explosion
1075  8B04              ;;	dec (hl)
1076  8B04
1077  8B04              ;;	ld hl,Ctrl_0
1078  8B04              ;;	set 4,(hl);;
1079  8B04
1080  8B04              ;;	jr 3F
1081  8B04
1082  8B04              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1083  8B04
1084  8B04              ;2 xor a
1085  8B04              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1086  8B04
1087  8B04              ; Movemos Entidades malignas.
1088  8B04              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1089  8B04
1090  8B04              ;	ld a,(Ctrl_2)
1091  8B04              ;	bit 5,a
1092  8B04              ;	jr nz,8F
1093  8B04
1094  8B04              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1095  8B04              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1096  8B04              ;	jr 7F
1097  8B04
1098  8B04              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1099  8B04
1100  8B04              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1101  8B04              ;	bit 4,a
1102  8B04              ;	ret z
1103  8B04
1104  8B04              ; Ha habido desplazamiento de la entidad maligna.
1105  8B04              ; Ha llegado a zona de AMADEUS ???
1106  8B04
1107  8B04              ;7 ld a,(Coordenada_y)
1108  8B04              ;	cp $14
1109  8B04              ;	jr c,1F
1110  8B04
1111  8B04              ; ---------
1112  8B04
1113  8B04              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1114  8B04              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1115  8B04
1116  8B04              ;	di
1117  8B04              ;	call Genera_coordenadas_X
1118  8B04              ;	call Compara_coordenadas_X
1119  8B04              ;	ei
1120  8B04
1121  8B04              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1122  8B04
1123  8B04              ; ---------
1124  8B04
1125  8B04              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1126  8B04              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1127  8B04              ;	call Limpia_Variables_de_borrado
1128  8B04
1129  8B04              ;3 ret
1130  8B04
1131  8B04              ; --------------------------------------------------------------------------------------------------------------
1132  8B04              ;
1133  8B04              ;	29/1/23
1134  8B04
1135  8B04              ;Mov_Amadeus
1136  8B04
1137  8B04              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1138  8B04
1139  8B04              ;	call Mov_right
1140  8B04
1141  8B04              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1142  8B04              ;	bit 4,a
1143  8B04              ;	ret z
1144  8B04
1145  8B04              ; ---------
1146  8B04
1147  8B04              ;   call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1148  8B04              ;	call Repone_datos_de_borrado_Amadeus
1149  8B04              ;	call Limpia_Variables_de_borrado
1150  8B04
1151  8B04              ;	ret
1152  8B04
1153  8B04              ; --------------------------------------------------------------------------------------------------------------
1154  8B04              ;
1155  8B04              ;	12/05/24
1156  8B04
1157  8B04 3A CE 89     Ajusta_velocidad_entidad ld a,(Velocidad)
1158  8B07 CB 27        	sla a
1159  8B09 32 CE 89     	ld (Velocidad),a
1160  8B0C E6 10        	and $10
1161  8B0E C8           	ret z
1162  8B0F
1163  8B0F              ; Restaura (Velocidad) a razón del nº de vueltas.
1164  8B0F
1165  8B0F 3A B5 89     	ld a,(Contador_de_vueltas)
1166  8B12 CB 2F        	sra a
1167  8B14 CB 2F        	sra a
1168  8B16 32 CE 89     	ld (Velocidad),a
1169  8B19
1170  8B19 2A C4 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1171  8B1C 23           	inc hl
1172  8B1D 23           	inc hl
1173  8B1E 23           	inc hl
1174  8B1F 23           	inc hl
1175  8B20 22 C4 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1176  8B23
1177  8B23 C9           	ret
1178  8B24
1179  8B24              ; --------------------------------------------------------------------------------------------------------------
1180  8B24              ;
1181  8B24              ;	17/3/24
1182  8B24
1183  8B24              Change
1184  8B24
1185  8B24 3A 09 8A     	ld a,(Switch)
1186  8B27 EE 01        	xor 1
1187  8B29 32 09 8A     	ld (Switch),a
1188  8B2C
1189  8B2C 2A FD 89     	ld hl,(Album_de_pintado)
1190  8B2F ED 5B FF 89  	ld de,(Album_de_borrado)
1191  8B33 EB           	ex de,hl
1192  8B34 22 FD 89     	ld (Album_de_pintado),hl
1193  8B37 22 0C 8A     	ld (Scanlines_album_SP),hl
1194  8B3A
1195  8B3A ED 53 FF 89  	ld (Album_de_borrado),de
1196  8B3E
1197  8B3E C9           	ret
1198  8B3F
1199  8B3F              ; ------------------------------------
1200  8B3F              ;
1201  8B3F              ; 1/05/24
1202  8B3F
1203  8B3F              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1204  8B3F              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1205  8B3F
1206  8B3F              ;	DESTRUYE: HL,DE,A
1207  8B3F              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1208  8B3F
1209  8B3F              ;	Variables implicadas: (RND_SP).
1210  8B3F
1211  8B3F              Extrae_numero_aleatorio_y_avanza
1212  8B3F
1213  8B3F 21 9D 86     	ld hl,Tabla_de_pintado
1214  8B42 EB           	ex de,hl
1215  8B43 2A 17 8A     	ld hl,(RND_SP)
1216  8B46 EB           	ex de,hl
1217  8B47 A7           	and a
1218  8B48 ED 52        	sbc hl,de
1219  8B4A
1220  8B4A 2A 17 8A     	ld hl,(RND_SP)
1221  8B4D 20 06        	jr nz,1F
1222  8B4F
1223  8B4F              ; Sitúa HL al principio de la tabla de nº aleatorios.
1224  8B4F
1225  8B4F 21 96 86     	ld hl,Numeros_aleatorios
1226  8B52 22 17 8A     	ld (RND_SP),HL
1227  8B55
1228  8B55              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1229  8B55
1230  8B55 7E           1 ld a,(hl)
1231  8B56 23           	inc hl
1232  8B57 22 17 8A     	ld (RND_SP),hl
1233  8B5A C9           	ret
1234  8B5B
1235  8B5B              ; ------------------------------------
1236  8B5B              ;
1237  8B5B              ; 1/05/24
1238  8B5B
1239  8B5B              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1240  8B5B              ; (1 a 4 segundos).
1241  8B5B              ; Actualizamos (Clock_next_entity) con A.
1242  8B5B
1243  8B5B              ;	DESTRUYE: A y B.
1244  8B5B              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1245  8B5B              ;			 Actualiza (Clock_next_entity) con A.
1246  8B5B
1247  8B5B              ;	Variables implicadas: (Clock_next_entity).
1248  8B5B
1249  8B5B              ; Notas:
1250  8B5B
1251  8B5B              ; 	$32 1 seg.
1252  8B5B              ; 	$64 2 seg.
1253  8B5B              ; 	$96 3 seg.
1254  8B5B              ; 	$c8 4 seg.
1255  8B5B              ; 	$fa 5 seg.
1256  8B5B
1257  8B5B              ; $ffff 1310,7 seg, 22 minutos.
1258  8B5B
1259  8B5B              ;	$0100  5 seg. aproximadamente.
1260  8B5B              ;	$0200 10 seg. aproximadamente.
1261  8B5B              ;	$0300 15 seg. aproximadamente.
1262  8B5B              ;	$0400 20 seg. aproximadamente.
1263  8B5B              ;	$0500 25 seg. aproximadamente.
1264  8B5B              ;	$0600 30 seg. aproximadamente.
1265  8B5B
1266  8B5B              Define_Clock_next_entity
1267  8B5B
1268  8B5B FE 34        	cp $34
1269  8B5D 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1270  8B5F
1271  8B5F              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1272  8B5F
1273  8B5F 4F           3 ld c,a
1274  8B60 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1275  8B62 2A 78 5C     	ld hl,(FRAMES)
1276  8B65 A7           	and a
1277  8B66 ED 4A        	adc hl,bc
1278  8B68 22 19 8A     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1279  8B6B C9           	ret
1280  8B6C
1281  8B6C 3E 34        1 ld a,$34
1282  8B6E 18 EF        	jr 3B
1283  8B70
1284  8B70              ; ------------------------------------
1285  8B70              ;
1286  8B70              ; 18/03/24
1287  8B70
1288  8B70              Borra_diferencia
1289  8B70
1290  8B70 ED 4B 0C 8A  	ld bc,(Scanlines_album_SP)
1291  8B74
1292  8B74 3A 09 8A     	ld a,(Switch)
1293  8B77 A7           	and a
1294  8B78 28 08        	jr z,2F
1295  8B7A
1296  8B7A 2A 07 8A     	ld hl,(Techo_Scanlines_album_2)
1297  8B7D 11 07 8A     	ld de,Techo_Scanlines_album_2
1298  8B80 18 06        	jr 3F
1299  8B82
1300  8B82 2A 05 8A     2 ld hl,(Techo_Scanlines_album)
1301  8B85 11 05 8A     	ld de,Techo_Scanlines_album
1302  8B88
1303  8B88              ; Diferencia.
1304  8B88
1305  8B88 ED 42        3 sbc hl,bc
1306  8B8A
1307  8B8A C8           	ret z
1308  8B8B D8           	ret c
1309  8B8C
1310  8B8C              ; Nuevo techo, (más bajo que el anterior).
1311  8B8C              ; Fijamos nuevo techo y borramos bytes sobrantes.
1312  8B8C
1313  8B8C EB           	ex de,hl
1314  8B8D
1315  8B8D 71           	ld (hl),c
1316  8B8E 2C           	inc l
1317  8B8F 70           	ld (hl),b
1318  8B90
1319  8B90 AF           	xor a
1320  8B91 43           	ld b,e
1321  8B92
1322  8B92 2A 0C 8A     	ld hl,(Scanlines_album_SP)
1323  8B95
1324  8B95 77           1 ld (hl),a
1325  8B96 23           	inc hl
1326  8B97 10 FC        	djnz 1B
1327  8B99
1328  8B99              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1329  8B99
1330  8B99 21 12 8A     	ld hl,Ctrl_3
1331  8B9C CB DE        	set 3,(hl)
1332  8B9E
1333  8B9E C9           	ret
1334  8B9F
1335  8B9F              ; --------------------------------------------------------------------------------------------------------------
1336  8B9F              ;
1337  8B9F              ;	26/3/24
1338  8B9F
1339  8B9F              Recauda_informacion_de_entidad_en_curso
1340  8B9F
1341  8B9F              ; Almacena la Coordenada Y de la entidad en curso.
1342  8B9F
1343  8B9F              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1344  8B9F
1345  8B9F 3A B3 89     	ld a,(Coordenada_y)
1346  8BA2 2A 0E 8A     	ld hl,(India_SP)
1347  8BA5 77           	ld (hl),a
1348  8BA6 2C           	inc l
1349  8BA7
1350  8BA7              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1351  8BA7
1352  8BA7              ;	ld de,(Scanlines_album_SP)
1353  8BA7
1354  8BA7 73           	ld (hl),e
1355  8BA8 2C           	inc l
1356  8BA9 72           	ld (hl),d
1357  8BAA 2C           	inc l
1358  8BAB
1359  8BAB 22 0E 8A     	ld (India_SP),hl
1360  8BAE
1361  8BAE C9           	ret
1362  8BAF
1363  8BAF              ; --------------------------------------------------------------------------------------------------------------
1364  8BAF              ;
1365  8BAF              ;	27/03/24
1366  8BAF              ;
1367  8BAF
1368  8BAF              Inicializa_India_y_limpia_Tabla_de_impresion
1369  8BAF
1370  8BAF 2A 0E 8A     	ld hl,(India_SP)
1371  8BB2 01 B5 86     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1372  8BB5
1373  8BB5 79           	ld a,c
1374  8BB6 95           	sub l
1375  8BB7 28 06        	jr z,2F
1376  8BB9 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1377  8BBA              ;														; _ y pasamos a inicializar (India_SP).
1378  8BBA AF           	xor a
1379  8BBB
1380  8BBB 77           1 ld (hl),a
1381  8BBC 2C           	inc l
1382  8BBD 10 FC        	djnz 1B												; Limpia Tabla.
1383  8BBF
1384  8BBF 21 9D 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1385  8BC2 22 0E 8A     	ld (India_SP),hl
1386  8BC5
1387  8BC5 C9           	ret
1388  8BC6
1389  8BC6              ; --------------------------------------------------------------------------------------------------------------
1390  8BC6              ;
1391  8BC6              ;	31/3/24
1392  8BC6
1393  8BC6              Ordena_tabla_de_impresion
1394  8BC6
1395  8BC6              ; 5794 T/states.
1396  8BC6              ; 6278 T/states.
1397  8BC6              ; 5310 T/states.
1398  8BC6
1399  8BC6              ; Inicializamos punteros (India_SP) e (India_2_SP).
1400  8BC6              ; Inicializamos contador de comparaciones, [C].
1401  8BC6              ; Cargamos los registros A y B para efectuar comparación.
1402  8BC6
1403  8BC6 FD 2E 00     	ld iyl,0
1404  8BC9
1405  8BC9 3A F3 89     	ld a,(Entidades_en_curso)
1406  8BCC FE 04        	cp 4 	;	4
1407  8BCE D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1408  8BCF
1409  8BCF 3D           	dec a
1410  8BD0 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1411  8BD1 51           	ld d,c 										; Copia de respaldo.
1412  8BD2
1413  8BD2 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1414  8BD3
1415  8BD3 21 A0 86     	ld hl,Tabla_de_pintado+3
1416  8BD6 46           	ld b,(hl)
1417  8BD7 22 10 8A     	ld (India_2_SP),hl
1418  8BDA
1419  8BDA B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1420  8BDB DC 03 8C     	call c, Avanza_India_2_SP
1421  8BDE CC 03 8C     	call z, Avanza_India_2_SP
1422  8BE1
1423  8BE1 FD 2D        	dec iyl
1424  8BE3 28 18        	jr z,2F
1425  8BE5
1426  8BE5
1427  8BE5              ; --------------------------------------------------------------------------------------------------------------
1428  8BE5              ;
1429  8BE5              ;	7/4/24
1430  8BE5
1431  8BE5              Trueque
1432  8BE5
1433  8BE5              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1434  8BE5              ;  			A contiene en nº de fila de (India_SP).
1435  8BE5              ;			HL contiene (India_2_SP).
1436  8BE5
1437  8BE5 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1438  8BE6 E5           	push hl										; Preservo (India_2_SP).
1439  8BE7
1440  8BE7 ED 5B 0E 8A  	ld de,(India_SP)
1441  8BEB EB           	ex de,hl
1442  8BEC 70           	ld (hl),b
1443  8BED 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1444  8BEE
1445  8BEE CD 2F 8C     	call Intercambia_1_byte
1446  8BF1 CD 2F 8C     	call Intercambia_1_byte
1447  8BF4
1448  8BF4
1449  8BF4              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1450  8BF4              ; Recuperamos (India_2_SP) en HL.
1451  8BF4
1452  8BF4 2A 0E 8A     	ld hl,(India_SP)
1453  8BF7 7E           	ld a,(hl)
1454  8BF8
1455  8BF8 E1           	pop hl
1456  8BF9 D1           	pop de
1457  8BFA
1458  8BFA              ; --------------------------------------------------------------------------------------------------------------
1459  8BFA
1460  8BFA CD 03 8C     	call Avanza_India_2_SP
1461  8BFD
1462  8BFD 14           2 inc d
1463  8BFE 15           	dec d
1464  8BFF C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1465  8C00 18 D8        	jr 1B
1466  8C02
1467  8C02 C9           	ret
1468  8C03
1469  8C03              ; ----- ----- ----- ----- -----
1470  8C03
1471  8C03              Avanza_India_2_SP
1472  8C03
1473  8C03 0D           	dec c
1474  8C04 28 0A        	jr z,Avanza_punteros_indios
1475  8C06
1476  8C06 FD 2C        	inc iyl
1477  8C08
1478  8C08 2C           	inc l
1479  8C09 2C           	inc l
1480  8C0A 2C           	inc l
1481  8C0B
1482  8C0B 46           	ld b,(hl)
1483  8C0C 22 10 8A     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1484  8C0F
1485  8C0F C9           	ret
1486  8C10
1487  8C10              ; ----- ----- ----- ----- -----
1488  8C10
1489  8C10              Avanza_punteros_indios
1490  8C10
1491  8C10 15           	dec d
1492  8C11 28 15        	jr z,Prepara_salida
1493  8C13
1494  8C13 4A           	ld c,d
1495  8C14
1496  8C14 2A 0E 8A     	ld hl,(India_SP)
1497  8C17 2C           	inc l
1498  8C18 2C           	inc l
1499  8C19 2C           	inc l
1500  8C1A 7E           	ld a,(hl)
1501  8C1B 22 0E 8A     	ld (India_SP),hl
1502  8C1E
1503  8C1E 2C           	inc l
1504  8C1F 2C           	inc l
1505  8C20 2C           	inc l
1506  8C21 46           	ld b,(hl)
1507  8C22 22 10 8A     	ld (India_2_SP),hl
1508  8C25
1509  8C25 FD 2C        	inc iyl
1510  8C27
1511  8C27 C9           	ret
1512  8C28
1513  8C28              Prepara_salida
1514  8C28
1515  8C28 21 9D 86     	ld hl,Tabla_de_pintado
1516  8C2B 22 0E 8A     	ld (India_SP),hl
1517  8C2E C9           	ret
1518  8C2F
1519  8C2F
1520  8C2F 2C           Intercambia_1_byte inc l
1521  8C30 1C           	inc e
1522  8C31 46           	ld b,(hl)
1523  8C32 1A           	ld a,(de)
1524  8C33 EB           	ex de,hl
1525  8C34 70           	ld (hl),b
1526  8C35 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1527  8C36 C9           	ret
1528  8C37
1529  8C37              ; -----------------------------------------------------------------------------------
1530  8C37              ;
1531  8C37              ;	20/01/24
1532  8C37              ;
1533  8C37              ;
1534  8C37
1535  8C37              Construye_movimientos_masticados_entidad
1536  8C37
1537  8C37 2A C4 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1538  8C3A E5           	push hl
1539  8C3B CD 7E 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1540  8C3E              ;															; _ el (Contador_de_mov_masticados).
1541  8C3E CD 4B 8D     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1542  8C41              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1543  8C41 CD 0C 95     	call Recompone_posicion_inicio
1544  8C44
1545  8C44 CD 3C 92     1 call Draw
1546  8C47 CD 63 8C     	call Guarda_movimiento_masticado
1547  8C4A
1548  8C4A CD A1 98     	call Movimiento
1549  8C4D
1550  8C4D 3A 12 8A     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1551  8C50 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1552  8C52 28 F0        	jr z,1B
1553  8C54
1554  8C54              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1555  8C54              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1556  8C54
1557  8C54 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1558  8C55 22 C4 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1559  8C58
1560  8C58              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1561  8C58
1562  8C58 CD 05 9A     	call Situa_en_contador_general_de_mov_masticados
1563  8C5B
1564  8C5B              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1565  8C5B              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1566  8C5B
1567  8C5B ED 4B C6 89  	ld bc,(Contador_de_mov_masticados)
1568  8C5F
1569  8C5F 71           	ld (hl),c
1570  8C60 23           	inc hl
1571  8C61 70           	ld (hl),b
1572  8C62
1573  8C62 C9           	ret
1574  8C63
1575  8C63              ; -----------------------------------------------------------------------------------
1576  8C63              ;
1577  8C63              ;	28/12/23
1578  8C63              ;
1579  8C63              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1580  8C63              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1581  8C63
1582  8C63              Guarda_movimiento_masticado
1583  8C63
1584  8C63 ED 73 F9 89  	ld (Stack),sp
1585  8C67 ED 7B C4 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1586  8C6B
1587  8C6B              ;	push hl
1588  8C6B DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1589  8C6D FD E5            push iy 												; Pushea Puntero_objeto.
1590  8C6F
1591  8C6F ED 7B F9 89      ld sp,(Stack)
1592  8C73
1593  8C73 2A C6 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1594  8C76 23           	inc hl
1595  8C77 22 C6 89     	ld (Contador_de_mov_masticados),hl
1596  8C7A
1597  8C7A CD 7E 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1598  8C7D              ;															; _ el (Contador_de_mov_masticados).
1599  8C7D C9               ret
1600  8C7E
1601  8C7E              ; --------------------------------------------------------------------------------------------------------------
1602  8C7E              ;
1603  8C7E              ;	12/1/24
1604  8C7E              ;
1605  8C7E              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1606  8C7E
1607  8C7E              Actualiza_Puntero_de_almacen_de_mov_masticados
1608  8C7E
1609  8C7E 2A C4 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1610  8C81 01 04 00     	ld bc,4
1611  8C84 A7           	and a
1612  8C85 ED 4A        	adc hl,bc
1613  8C87 22 C4 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1614  8C8A C9           	ret
1615  8C8B
1616  8C8B              ; --------------------------------------------------------------------------------------------------------------
1617  8C8B              ;
1618  8C8B              ;	24/03/24
1619  8C8B              ;
1620  8C8B              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1621  8C8B              ;
1622  8C8B              ;	IX contiene el puntero de impresión.
1623  8C8B              ;	DE contiene (Puntero_objeto).
1624  8C8B
1625  8C8B
1626  8C8B              Cargamos_registros_con_mov_masticado
1627  8C8B
1628  8C8B ED 73 F9 89  	ld (Stack),sp
1629  8C8F ED 7B C4 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1630  8C93
1631  8C93 D1           	pop de 															; DE contiene Puntero_objeto
1632  8C94 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1633  8C96
1634  8C96 ED 73 C4 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1635  8C9A ED 7B F9 89  	ld sp,(Stack)
1636  8C9E
1637  8C9E 7B           	ld a,e
1638  8C9F 82           	add d															; Comprueba si ya no hay datos en el almacén.
1639  8CA0
1640  8CA0 CC BA AB     	call z,Reinicia_entidad_maliciosa
1641  8CA3
1642  8CA3 C9           	ret
1643  8CA4
1644  8CA4              ; --------------------------------------------------------------------------------------------------------------
1645  8CA4              ;
1646  8CA4              ;	27/5/24
1647  8CA4              ;
1648  8CA4              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1649  8CA4              ;
1650  8CA4              ;	IX contiene el puntero de impresión.
1651  8CA4              ;	DE contiene (Puntero_objeto).
1652  8CA4
1653  8CA4
1654  8CA4              Cargamos_registros_con_mov_masticado_Amadeus
1655  8CA4
1656  8CA4 ED 73 F9 89  	ld (Stack),sp
1657  8CA8 ED 7B C4 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1658  8CAC D1           	pop de 															; DE contiene Puntero_objeto
1659  8CAD DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1660  8CAF ED 7B F9 89  	ld sp,(Stack)
1661  8CB3 C9           	ret
1662  8CB4
1663  8CB4              ; --------------------------------------------------------------------------------------------------------------
1664  8CB4              ;
1665  8CB4              ;	28/12/23
1666  8CB4              ;
1667  8CB4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1668  8CB4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1669  8CB4
1670  8CB4              Guarda_foto_entidad_a_pintar
1671  8CB4
1672  8CB4 3A C8 89     	ld a,(Ctrl_0)
1673  8CB7 CB 77        	bit 6,a
1674  8CB9 28 04        	jr z,5F
1675  8CBB
1676  8CBB              ;	Guarda la foto de Amadeus.
1677  8CBB
1678  8CBB              ;	call Draw
1679  8CBB              ;	call Guarda_movimiento_masticado	;! Provisional
1680  8CBB CD 4A AD     	call Genera_datos_de_impresion
1681  8CBE C9           	ret
1682  8CBF
1683  8CBF              ; ENTIDADES!
1684  8CBF              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1685  8CBF
1686  8CBF 3A 12 8A     5 ld a,(Ctrl_3)
1687  8CC2 CB 5F        	bit 3,a
1688  8CC4 28 01        	jr z,1F
1689  8CC6
1690  8CC6              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1691  8CC6
1692  8CC6              4
1693  8CC6              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1694  8CC6 C9           	ret
1695  8CC7
1696  8CC7              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1697  8CC7
1698  8CC7 3A 12 8A     1 ld a,(Ctrl_3)
1699  8CCA CB 57        	bit 2,a
1700  8CCC 20 10        	jr nz,6F
1701  8CCE
1702  8CCE              ; Entidad guía o fantasma ???
1703  8CCE
1704  8CCE 3A CD 89     	ld a,(Ctrl_2)
1705  8CD1 CB 6F        	bit 5,a
1706  8CD3 20 10        	jr nz,3F
1707  8CD5
1708  8CD5              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1709  8CD5
1710  8CD5 18 EF        	jr 4B
1711  8CD7
1712  8CD7              ; ENTIDAD_GUÍA:
1713  8CD7              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1714  8CD7              ; _guardando "movimientos_masticados".
1715  8CD7
1716  8CD7 3A 12 8A     2 ld a,(Ctrl_3)
1717  8CDA CB 57        	bit 2,a
1718  8CDC 28 07        	jr z,3F
1719  8CDE
1720  8CDE              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1721  8CDE              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1722  8CDE
1723  8CDE CB 97        6 res 2,a
1724  8CE0 CB DF        	set 3,a
1725  8CE2 32 12 8A     	ld (Ctrl_3),a
1726  8CE5
1727  8CE5
1728  8CE5              ;	Esto sólo lo ejecuta una entidad guía.
1729  8CE5
1730  8CE5 CD 3C 92     3 	call Draw
1731  8CE8 CD 63 8C     	call Guarda_movimiento_masticado
1732  8CEB CD 4A AD     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1733  8CEE
1734  8CEE              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1735  8CEE              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1736  8CEE
1737  8CEE              ;	call Convierte_guia_en_fantasma
1738  8CEE C9           	ret
1739  8CEF
1740  8CEF              ; ---------------------------------------------------------------------------------------------------------------------
1741  8CEF              ;
1742  8CEF              ;	30/05/24
1743  8CEF              ;
1744  8CEF
1745  8CEF              Genera_datos_de_impresion_Amadeus
1746  8CEF
1747  8CEF CD A4 8C     	call Cargamos_registros_con_mov_masticado_Amadeus
1748  8CF2
1749  8CF2 DD E5        	push ix
1750  8CF4 E1           	pop hl 																; (Puntero_de_impresion) en HL.
1751  8CF5
1752  8CF5 D5           	push de
1753  8CF6 CD F7 AC     	call Genera_coordenadas
1754  8CF9
1755  8CF9 ED 5B 01 8A  	ld de,(Album_de_pintado_Amadeus)
1756  8CFD CD 9F 8B     	call Recauda_informacion_de_entidad_en_curso						; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
1757  8D00 D1           	pop de
1758  8D01
1759  8D01 2A 0C 8A     	ld hl,(Scanlines_album_SP)
1760  8D04 E5           	push hl
1761  8D05
1762  8D05 2A 01 8A     	ld hl,(Album_de_pintado_Amadeus)
1763  8D08 22 0C 8A     	ld (Scanlines_album_SP),hl
1764  8D0B
1765  8D0B CD 4A AD     	call Genera_datos_de_impresion
1766  8D0E
1767  8D0E E1           	pop hl
1768  8D0F 22 0C 8A     	ld (Scanlines_album_SP),hl
1769  8D12
1770  8D12 C9           	ret
1771  8D13
1772  8D13              ; ---------------------------------------------------------------------------------------------------------------------
1773  8D13              ;
1774  8D13              ;	13/03/24
1775  8D13              ;
1776  8D13
1777  8D13              Inicia_albumes_de_lineas
1778  8D13
1779  8D13              ;	Entidades.
1780  8D13
1781  8D13 21 00 80     	ld hl,Scanlines_album
1782  8D16 22 FD 89     	ld (Album_de_pintado),hl
1783  8D19 22 0C 8A     	ld (Scanlines_album_SP),hl
1784  8D1C
1785  8D1C 21 00 90     	ld hl,Scanlines_album_2
1786  8D1F 22 FF 89     	ld (Album_de_borrado),hl
1787  8D22
1788  8D22              ;	Amadeus.
1789  8D22
1790  8D22 21 20 81     	ld hl,Amadeus_scanlines_album
1791  8D25 22 01 8A     	ld (Album_de_pintado_Amadeus),hl
1792  8D28 21 43 81     	ld hl,Amadeus_scanlines_album_2
1793  8D2B 22 03 8A     	ld (Album_de_borrado_Amadeus),hl
1794  8D2E
1795  8D2E C9           	ret
1796  8D2F
1797  8D2F
1798  8D2F
1799  8D2F              ; ---------------------------------------------------------------------------------------------------------------------
1800  8D2F              ;
1801  8D2F              ; 8/1/23
1802  8D2F              ;
1803  8D2F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1804  8D2F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1805  8D2F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1806  8D2F
1807  8D2F              ; Destruye HL y DE !!!!!
1808  8D2F
1809  8D2F              Inicia_punteros_de_cajas
1810  8D2F
1811  8D2F 21 3C 87     	ld hl,Indice_de_cajas_de_entidades
1812  8D32 CD 45 8D         call Extrae_address
1813  8D35 22 EB 89         ld (Puntero_store_caja),hl
1814  8D38 21 3E 87     	ld hl,Indice_de_cajas_de_entidades+2
1815  8D3B 22 EF 89     	ld (Indice_restore_caja),hl
1816  8D3E CD 45 8D     	call Extrae_address
1817  8D41 22 ED 89     	ld (Puntero_restore_caja),hl
1818  8D44 C9               ret
1819  8D45
1820  8D45              ; *************************************************************************************************************************************************************
1821  8D45              ;
1822  8D45              ; 8/1/23
1823  8D45              ;
1824  8D45              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1825  8D45
1826  8D45              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1827  8D45              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1828  8D45              ;	ret
1829  8D45              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1830  8D45              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1831  8D45              ;	ret
1832  8D45
1833  8D45              ; -------------------------------------------------------------------------------------------------------------
1834  8D45              ;
1835  8D45              ; 21/9/23
1836  8D45              ;
1837  8D45
1838  8D45              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1839  8D45
1840  8D45              ;;Limpia_album_Amadeus
1841  8D45              ;
1842  8D45              ;;	ld hl,Scanlines_album_Amadeus
1843  8D45              ;;	ld a,(hl)
1844  8D45              ;;	and a
1845  8D45              ;;	ret z
1846  8D45
1847  8D45              ;;	ld hl,Scanlines_album_Amadeus;
1848  8D45              ;;	ld de,Scanlines_album_Amadeus+1
1849  8D45              ;;	ld bc,11
1850  8D45              ;;	xor a
1851  8D45              ;;	ld (hl),a
1852  8D45              ;;	ldir
1853  8D45
1854  8D45              ;;	ld hl,Scanlines_album_Amadeus
1855  8D45              ;;	ld (End_Snapshot_Amadeus),hl
1856  8D45
1857  8D45              ;;	ret
1858  8D45
1859  8D45              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1860  8D45              ;	ld de,Variables_de_borrado+1
1861  8D45              ;	ld bc,5
1862  8D45              ;	xor a
1863  8D45              ;	ld (hl),a
1864  8D45              ;	ldir
1865  8D45              ;	ret
1866  8D45
1867  8D45              ; *************************************************************************************************************************************************************
1868  8D45              ;
1869  8D45              ; 20/10/22
1870  8D45              ;
1871  8D45              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1872  8D45              ;
1873  8D45              ; Destruye el puntero y DE !!!!!
1874  8D45
1875  8D45 5E           Extrae_address ld e,(hl)
1876  8D46 23           	inc hl
1877  8D47 56           	ld d,(hl)
1878  8D48 2B           	dec hl
1879  8D49 EB           	ex de,hl
1880  8D4A C9           	ret
1881  8D4B
1882  8D4B              ; *************************************************************************************************************************************************************
1883  8D4B              ;
1884  8D4B              ;	20/1/24
1885  8D4B              ;
1886  8D4B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1887  8D4B              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1888  8D4B              ;
1889  8D4B              ;   Destruye HL y BC !!!!!,
1890  8D4B              ;
1891  8D4B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1892  8D4B              ;					"0" ..... Izquierda.
1893  8D4B
1894  8D4B              Inicia_Puntero_objeto
1895  8D4B
1896  8D4B 3A C0 89     	ld a,(Cuad_objeto)
1897  8D4E E6 01        	and 1
1898  8D50 F5           	push af
1899  8D51 CC 6D 8D     	call z,Inicia_puntero_objeto_izq
1900  8D54 F1           	pop af
1901  8D55 C8           	ret z
1902  8D56 CD 5A 8D     	call Inicia_puntero_objeto_der
1903  8D59 C9           	ret
1904  8D5A
1905  8D5A              ; Arrancamos desde la parte izquierda de la pantalla.
1906  8D5A              ; Iniciamos (Indice_Sprite_der).
1907  8D5A
1908  8D5A 2A B6 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1909  8D5D 22 BA 89     	ld (Puntero_DESPLZ_der),hl
1910  8D60 CD 45 8D     	call Extrae_address
1911  8D63 22 B0 89     	ld (Puntero_objeto),hl
1912  8D66
1913  8D66 2A B8 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1914  8D69 22 BC 89     	ld (Puntero_DESPLZ_izq),hl
1915  8D6C C9           	ret
1916  8D6D
1917  8D6D              ; Arrancamos desde la parte derecha de la pantalla.
1918  8D6D              ; Iniciamos (Indice_Sprite_izq).
1919  8D6D
1920  8D6D 2A B8 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1921  8D70 22 BC 89     	ld (Puntero_DESPLZ_izq),hl
1922  8D73 CD 45 8D     	call Extrae_address
1923  8D76 22 B0 89     	ld (Puntero_objeto),hl
1924  8D79
1925  8D79 2A B6 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1926  8D7C 22 BA 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1927  8D7F C9           	ret
1928  8D80
1929  8D80              ; **************************************************************************************************
1930  8D80              ;
1931  8D80              ;	12/5/24
1932  8D80              ;
1933  8D80              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1934  8D80
1935  8D80              Restore_entidad
1936  8D80
1937  8D80 2A EB 89     	ld hl,(Puntero_store_caja)
1938  8D83 11 AB 89     	ld de,Bandeja_DRAW
1939  8D86 7E           	ld a,(hl)
1940  8D87 12           	ld (de),a
1941  8D88 23           	inc hl 											; (Tipo).
1942  8D89
1943  8D89 11 B2 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1944  8D8C 01 02 00     	ld bc,2
1945  8D8F ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1946  8D91
1947  8D91 13           	inc de
1948  8D92 7E           	ld a,(hl)
1949  8D93 12           	ld (de),a 										; Transferimos (Contador_de_vueltas).
1950  8D94 23           	inc hl
1951  8D95
1952  8D95 11 C1 89     	ld de,Impacto
1953  8D98 01 08 00     	ld bc,8
1954  8D9B ED B0        	ldir 											; Transferimos (Impacto), (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1955  8D9D              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1956  8D9D 11 CD 89     	ld de,Ctrl_2
1957  8DA0 01 02 00     	ld bc,2
1958  8DA3 ED B0        	ldir											; Transferimos (Ctrl_2) y (Velocidad).
1959  8DA5
1960  8DA5 C9           	ret
1961  8DA6
1962  8DA6              ; **************************************************************************************************
1963  8DA6              ;
1964  8DA6              ;	08/05/23
1965  8DA6              ;
1966  8DA6              ;	Incrementamos los dos punteros de entidades. (+1).
1967  8DA6
1968  8DA6              Incrementa_punteros_de_cajas
1969  8DA6
1970  8DA6 2A ED 89     	ld hl,(Puntero_restore_caja)
1971  8DA9 22 EB 89     	ld (Puntero_store_caja),hl
1972  8DAC 2A EF 89     	ld hl,(Indice_restore_caja)
1973  8DAF 23           	inc hl
1974  8DB0 23           	inc hl
1975  8DB1 22 EF 89     	ld (Indice_restore_caja),hl
1976  8DB4 CD 45 8D         call Extrae_address
1977  8DB7 22 ED 89         ld (Puntero_restore_caja),hl
1978  8DBA C9               ret
1979  8DBB
1980  8DBB              ; **************************************************************************************************
1981  8DBB              ;
1982  8DBB              ;	21/12/23
1983  8DBB              ;
1984  8DBB              ;	Restore_Amadeus
1985  8DBB              ;
1986  8DBB              ;	Cargamos en DRAW los parámetros de Amadeus.
1987  8DBB              ;
1988  8DBB
1989  8DBB              ;Restore_Amadeus	push hl
1990  8DBB              ;	push de
1991  8DBB              ; 	push bc
1992  8DBB              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1993  8DBB              ;	ld de,Bandeja_DRAW
1994  8DBB              ;	ld bc,42
1995  8DBB              ;	ldir
1996  8DBB              ;	pop bc
1997  8DBB              ;	pop de
1998  8DBB              ;	pop hl
1999  8DBB              ;	ret
2000  8DBB
2001  8DBB              ; *************************************************************************************************************************************************************
2002  8DBB              ;
2003  8DBB              ;	21/12/23
2004  8DBB              ;
2005  8DBB              ;	Store_Amadeus
2006  8DBB              ;
2007  8DBB              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
2008  8DBB              ;
2009  8DBB              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
2010  8DBB              ;
2011  8DBB              ;	DESTRUYE: HL y BC y DE.
2012  8DBB
2013  8DBB              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
2014  8DBB              ;	ld bc,42
2015  8DBB              ;	ldir
2016  8DBB              ;	ret
2017  8DBB
2018  8DBB              ; -----------------------------------------------------------
2019  8DBB              ;
2020  8DBB              ;	21/12/23
2021  8DBB              ;
2022  8DBB              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
2023  8DBB              ;
2024  8DBB              ;	Destruye: HL,BC,DE,A
2025  8DBB
2026  8DBB              ;Borra_datos_entidad ld hl,Bandeja_DRAW
2027  8DBB              ;	ld bc,41
2028  8DBB              ;	xor a
2029  8DBB              ;	ld (hl),a;
2030  8DBB              ;	ld de,Bandeja_DRAW+1
2031  8DBB              ;	ldir
2032  8DBB              ;	ret
2033  8DBB
2034  8DBB              ; -----------------------------------------------------------
2035  8DBB
2036  8DBB              ; Teclado.
2037  8DBB
2038  8DBB 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
2039  8DBD DB FE        	in a,($fe)
2040  8DBF E6 01        	and $01
2041  8DC1 28 02        	jr z,1f
2042  8DC3 18 F6        	jr Pulsa_ENTER
2043  8DC5 C9           1 ret
2044  8DC6
2045  8DC6              ; **************************************************************************************************
2046  8DC6              ;
2047  8DC6              ; Temporización.
2048  8DC6
2049  8DC6              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
2050  8DC6              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
2051  8DC6              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
2052  8DC6              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
2053  8DC6
2054  8DC6              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
2055  8DC6              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
2056  8DC6              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
2057  8DC6
2058  8DC6              ; A partir de $4f61 no hace falta DELAY.
2059  8DC6
2060  8DC6              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
2061  8DC6
2062  8DC6 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2063  8DC9 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2064  8DCA 78           	LD A,B
2065  8DCB A7           	AND A
2066  8DCC 20 FB        	JR NZ,wait
2067  8DCE C9           	RET
2068  8DCF
2069  8DCF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2070  8DCF              ;
2071  8DCF              ;	5/3/23
2072  8DCF              ;
2073  8DCF              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
2074  8DCF
2075  8DCF              ;Movimiento_Amadeus
2076  8DCF
2077  8DCF              ; Disparo.
2078  8DCF
2079  8DCF              ;	ld a,(Disparo_Amadeus)
2080  8DCF              ;	and a
2081  8DCF              ;	jr nz,1F
2082  8DCF              ;	jr 2F
2083  8DCF
2084  8DCF              ;1 ld a,$f7													; "5" para disparar.
2085  8DCF              ;	in a,($fe)
2086  8DCF              ;	and $10
2087  8DCF
2088  8DCF              ;	push af
2089  8DCF              ;	call z,Genera_disparo
2090  8DCF              ;	pop af
2091  8DCF              ;	jr nz,2F
2092  8DCF
2093  8DCF              ;	ld a,(Disparo_Amadeus)
2094  8DCF              ;	xor 1
2095  8DCF              ;	ld (Disparo_Amadeus),a
2096  8DCF              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2097  8DCF              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2098  8DCF              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2099  8DCF              ;    call z,Amadeus_a_izquierda
2100  8DCF
2101  8DCF              ;	ld a,$f7
2102  8DCF              ;	in a,($fe)
2103  8DCF              ;	and $01
2104  8DCF              ;	ret z
2105  8DCF
2106  8DCF              ;	ld a,$f7
2107  8DCF              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2108  8DCF              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2109  8DCF              ;	call z,Amadeus_a_derecha
2110  8DCF              ;	ret
2111  8DCF
2112  8DCF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2113  8DCF              ;
2114  8DCF              ;	Rutina provisional para que los malotes cagen balas.
2115  8DCF
2116  8DCF              ;Detecta_disparo_entidad
2117  8DCF
2118  8DCF              ;	ld a,(Disparo_entidad)
2119  8DCF              ;	and a
2120  8DCF              ;	ret z
2121  8DCF
2122  8DCF              ;! Aquí hemos de implementar la rutina/s que generan disparo...
2123  8DCF
2124  8DCF              ;	ld a,$7f				; Detecta SPACE.
2125  8DCF              ;	in a,($fe)
2126  8DCF              ;	and 1
2127  8DCF              ;	ret nz
2128  8DCF
2129  8DCF              ;	call Genera_disparo
2130  8DCF              ;	ret
2131  8DCF
2132  8DCF              ; ---------------------------------------------------------------
2133  8DCF
2134  8DCF              	org $aa7f
2135  AA7F
2136  AA7F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ AA7F              ; ******************************************************************************************************************************************************************************************
   2+ AA7F              ;
   3+ AA7F              ;   21/04/24
   4+ AA7F              ;
   5+ AA7F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ AA7F              ;   (XOR) bit a bit.
   7+ AA7F              ;
   8+ AA7F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ AA7F
  10+ AA7F              Derivando_RND
  11+ AA7F
  12+ AA7F 21 96 86         ld hl,Numeros_aleatorios
  13+ AA82
  14+ AA82 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ AA84 C5               push bc
  16+ AA85              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ AA85 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ AA88              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ AA88
  20+ AA88 A7           6 and a                                 ; Carry a "0".
  21+ AA89 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ AA8B 30 02            jr nc,1F
  23+ AA8D
  24+ AA8D CB C1            set 0,c
  25+ AA8F
  26+ AA8F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ AA90 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ AA92 5F               ld e,a
  29+ AA93
  30+ AA93 7A               ld a,d
  31+ AA94 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ AA96 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ AA98
  34+ AA98 CB 3F            srl a
  35+ AA9A
  36+ AA9A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ AA9B
  38+ AA9B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ AA9C 28 04            jr z,4F
  40+ AA9E
  41+ AA9E CB FF            set 7,a
  42+ AAA0 18 02            jr 5F
  43+ AAA2
  44+ AAA2 CB BF        4 res 7,a
  45+ AAA4
  46+ AAA4 CB 21        5 sla c
  47+ AAA6 10 E0            djnz 6B
  48+ AAA8
  49+ AAA8 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ AAA9
  51+ AAA9 77               ld (hl),a
  52+ AAAA 23               inc hl
  53+ AAAB C1               pop bc
  54+ AAAC 10 D4            djnz 3B
  55+ AAAE
  56+ AAAE C9               ret
  57+ AAAF
  58+ AAAF
  59+ AAAF
# file closed: RND_Derivando.asm
2137  AAAF              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ AAAF              ;---------------------------------------------------------------------------------------------------------------
   2+ AAAF              ;
   3+ AAAF              ;   8/3/24
   4+ AAAF              ;
   5+ AAAF              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ AAAF              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ AAAF              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ AAAF              ;	_ de la 1ª entidad del Nivel.
   9+ AAAF              ;
  10+ AAAF              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ AAAF
  12+ AAAF              ;	MODIFICA: HL,DE y A.
  13+ AAAF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ AAAF
  15+ AAAF              Inicializa_Nivel
  16+ AAAF
  17+ AAAF 2A 1D 8A     	ld hl,(Puntero_indice_NIVELES)
  18+ AAB2 CD 45 8D     	call Extrae_address
  19+ AAB5 7E           	ld a,(hl)
  20+ AAB6 32 F1 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ AAB9 23           	inc hl
  22+ AABA CD C7 AA     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ AABD 22 1F 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ AAC0 CD D0 AA     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ AAC3
  26+ AAC3 CD E1 AA     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ AAC6 C9           	ret
  28+ AAC7
  29+ AAC7              ; ----------------------
  30+ AAC7
  31+ AAC7 11 D0 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ AACA 01 04 00     	ld bc,4
  33+ AACD ED B0        	ldir
  34+ AACF C9           	ret
  35+ AAD0
  36+ AAD0 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ AAD1 CD 60 AC         call Calcula_salto_en_BC
  38+ AAD4 21 B8 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ AAD7 A7               and a
  40+ AAD8 ED 4A            adc hl,bc
  41+ AADA CD 45 8D         call Extrae_address
  42+ AADD 22 DC 89         ld (Puntero_indice_mov),hl
  43+ AAE0 C9               ret
  44+ AAE1
  45+ AAE1 3A AB 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ AAE4 CD 60 AC     	call Calcula_salto_en_BC
  47+ AAE7 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ AAEA A7               and a
  49+ AAEB ED 4A            adc hl,bc
  50+ AAED CD 45 8D         call Extrae_address
  51+ AAF0 22 C4 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ AAF3 C9           	ret
  53+ AAF4
  54+ AAF4              ;---------------------------------------------------------------------------------------------------------------
  55+ AAF4              ;
  56+ AAF4              ;   5/1/24
  57+ AAF4              ;
  58+ AAF4              ;	Destruye A,BC,HL,DE
  59+ AAF4
  60+ AAF4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ AAF4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ AAF4
  63+ AAF4              Inicia_Entidades
  64+ AAF4
  65+ AAF4              ; Preparamos los punteros de las cajas de entidades:
  66+ AAF4
  67+ AAF4 CD 2F 8D     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ AAF7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ AAF7 CD BC AC     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ AAFA
  71+ AAFA 2A 1F 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ AAFD
  73+ AAFD 22 1F 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ AB00
  75+ AB00 CD 0E AC     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ AB03
  77+ AB03 2A 1F 8A     	ld hl,(Datos_de_nivel)
  78+ AB06
  79+ AB06              ; En este punto:
  80+ AB06              ;
  81+ AB06              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ AB06              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ AB06
  84+ AB06 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ AB07
  86+ AB07 7E           	ld a,(hl)
  87+ AB08 CD 8F AB     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ AB0B
  89+ AB0B CD 72 AC     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ AB0E
  91+ AB0E              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ AB0E
  93+ AB0E CD 30 AC     	call Busca_mov_masticados_segun_tipo
  94+ AB11
  95+ AB11 A7           	and a
  96+ AB12 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ AB14
  98+ AB14              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ AB14
 100+ AB14              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ AB14              ;	_ de este tipo de entidad.
 102+ AB14
 103+ AB14 CD 05 9A     	call Situa_en_contador_general_de_mov_masticados
 104+ AB17 CD 12 9A     	call Transfiere_datos_de_contadores
 105+ AB1A
 106+ AB1A 18 06        	jr 4F
 107+ AB1C
 108+ AB1C CD 37 8C     3 call Construye_movimientos_masticados_entidad
 109+ AB1F
 110+ AB1F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ AB1F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ AB1F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ AB1F              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ AB1F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ AB1F
 116+ AB1F CD EE AB     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ AB22              ;																; _ Mov_masticados ya generados.
 118+ AB22
 119+ AB22 CD 8B 8C     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ AB25
 121+ AB25 DD E5        	push ix
 122+ AB27 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ AB28
 124+ AB28 D5           	push de
 125+ AB29 CD F7 AC     	call Genera_coordenadas
 126+ AB2C
 127+ AB2C ED 5B 0C 8A  	ld de,(Scanlines_album_SP)
 128+ AB30 CD 9F 8B     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ AB33 D1           	pop de
 130+ AB34
 131+ AB34 CD 4A AD     	call Genera_datos_de_impresion
 132+ AB37              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ AB37              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ AB37              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ AB37              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ AB37
 137+ AB37 CD B2 AB     	call Decrementa_Contador_de_mov_masticados
 138+ AB3A
 139+ AB3A              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ AB3A
 141+ AB3A ED 5B EB 89  	ld de,(Puntero_store_caja)
 142+ AB3E CD 99 AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ AB41
 144+ AB41 CD A7 AB     	call Limpiamos_bandeja_DRAW
 145+ AB44 CD A6 8D     	call Incrementa_punteros_de_cajas
 146+ AB47
 147+ AB47              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ AB47              ; _ entidad del Nivel.
 149+ AB47
 150+ AB47 3A 13 8A     	ld a,(Ctrl_4)
 151+ AB4A E6 F0        	and $f0
 152+ AB4C 32 13 8A     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ AB4F
 154+ AB4F              ; Siguiente entidad del Nivel.
 155+ AB4F
 156+ AB4F 2A 1F 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ AB52 23           	inc hl 														; _ entidad del Nivel.
 158+ AB53
 159+ AB53 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ AB54
 161+ AB54 10 A7        	djnz 2B
 162+ AB56
 163+ AB56 C9           	ret
 164+ AB57
 165+ AB57              ; -------------------------------------------------------------------------------------------------------------------
 166+ AB57              ;
 167+ AB57              ;	27/5/24
 168+ AB57              ;
 169+ AB57              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ AB57              ;
 171+ AB57
 172+ AB57              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ AB57              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ AB57
 175+ AB57 21 DD 87     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ AB5A CD 72 AC     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ AB5D
 178+ AB5D
 179+ AB5D              Construye_movimientos_masticados_Amadeus
 180+ AB5D
 181+ AB5D 2A C4 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ AB60 CD 7E 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ AB63              ;															; _ el (Contador_de_mov_masticados).
 184+ AB63 CD 4B 8D     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ AB66              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ AB66
 187+ AB66              ; Generamos movimientos masticados de Amadeus.
 188+ AB66
 189+ AB66 06 79        	ld b,121												; $0079, 121d.
 190+ AB68
 191+ AB68 C5           1 push bc
 192+ AB69 CD 3C 92     	call Draw
 193+ AB6C CD 63 8C     	call Guarda_movimiento_masticado
 194+ AB6F
 195+ AB6F CD B0 95     	call Mov_right
 196+ AB72 CD B0 95     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ AB75
 198+ AB75 C1           	pop bc
 199+ AB76 10 F0        	djnz 1B
 200+ AB78
 201+ AB78              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ AB78
 203+ AB78              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ AB78              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ AB78
 206+ AB78 2A C4 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ AB7B 01 08 00     	ld bc,8
 208+ AB7E A7           	and a
 209+ AB7F ED 42        	sbc hl,bc
 210+ AB81 22 C4 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ AB84
 212+ AB84              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 213+ AB84
 214+ AB84 06 3C        	ld b,60
 215+ AB86 CD 86 98     2 call Amadeus_a_izquierda
 216+ AB89 10 FB        	djnz 2B
 217+ AB8B
 218+ AB8B CD EF 8C     	call Genera_datos_de_impresion_Amadeus
 219+ AB8E
 220+ AB8E C9           	ret
 221+ AB8F
 222+ AB8F              ; ---------------------------------------------------------------------
 223+ AB8F              ;
 224+ AB8F              ;	10/02/24
 225+ AB8F              ;
 226+ AB8F              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 227+ AB8F              ;
 228+ AB8F              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 229+ AB8F
 230+ AB8F              Definicion_segun_tipo
 231+ AB8F
 232+ AB8F CD 60 AC     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 233+ AB92 21 BF 87     	ld hl,Indice_de_definiciones_de_entidades
 234+ AB95 CD 68 AC     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 235+ AB98 C9           	ret
 236+ AB99
 237+ AB99              ; ---------------------------------------------------------------------
 238+ AB99              ;
 239+ AB99              ;	27/03/24
 240+ AB99
 241+ AB99
 242+ AB99              Store_Restore_cajas
 243+ AB99
 244+ AB99 ED 5B EB 89  	ld de,(Puntero_store_caja)
 245+ AB9D CD 99 AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 246+ ABA0
 247+ ABA0 CD A7 AB     	call Limpiamos_bandeja_DRAW
 248+ ABA3
 249+ ABA3              ; 	Entidad_sospechosa. 20/4/23
 250+ ABA3
 251+ ABA3              ;	ld a,(Impacto)
 252+ ABA3              ;	and a
 253+ ABA3              ;	jr z,1F
 254+ ABA3
 255+ ABA3              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 256+ ABA3              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 257+ ABA3              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 258+ ABA3              ;	adc hl,bc 											; _ "0" más adelante.
 259+ ABA3              ;	ld (Entidad_sospechosa_de_colision),hl
 260+ ABA3
 261+ ABA3
 262+ ABA3              ;1 ld hl,(Puntero_restore_caja)
 263+ ABA3              ;	ld a,(hl)
 264+ ABA3              ;	and a
 265+ ABA3              ;	push af
 266+ ABA3              ;	jr z,2F
 267+ ABA3
 268+ ABA3              ;	di
 269+ ABA3              ;	ld de,Bandeja_DRAW
 270+ ABA3              ;	ld bc,42
 271+ ABA3              ;	ldir
 272+ ABA3              ;	ei
 273+ ABA3
 274+ ABA3 CD A6 8D     2 call Incrementa_punteros_de_cajas
 275+ ABA6 C9           	ret
 276+ ABA7
 277+ ABA7              ; ---------------------------------------------------------------------
 278+ ABA7              ;
 279+ ABA7              ;	12/05/24
 280+ ABA7
 281+ ABA7 21 AB 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 282+ ABAA 06 25        	ld b,37
 283+ ABAC AF           	xor a
 284+ ABAD 77           1 ld (hl),a
 285+ ABAE 23           	inc hl
 286+ ABAF 10 FC        	djnz 1B
 287+ ABB1 C9           	ret
 288+ ABB2
 289+ ABB2              ; ---------------------------------------------------------------------
 290+ ABB2              ;
 291+ ABB2              ;	24/03/24
 292+ ABB2
 293+ ABB2 2A C6 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 294+ ABB5 2B           	dec hl
 295+ ABB6
 296+ ABB6              ; debug 6/5/24
 297+ ABB6
 298+ ABB6
 299+ ABB6 22 C6 89     	ld (Contador_de_mov_masticados),hl
 300+ ABB9 C9           	ret
 301+ ABBA
 302+ ABBA              ; ---------------------------------------------------------------------
 303+ ABBA              ;
 304+ ABBA              ;	8/5/24
 305+ ABBA
 306+ ABBA              Reinicia_entidad_maliciosa
 307+ ABBA
 308+ ABBA              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 309+ ABBA
 310+ ABBA CD 05 9A     	call Situa_en_contador_general_de_mov_masticados
 311+ ABBD CD 12 9A     	call Transfiere_datos_de_contadores
 312+ ABC0
 313+ ABC0              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 314+ ABC0
 315+ ABC0 3A AB 89     	ld a,(Tipo)
 316+ ABC3 CD 8F AB     	call Definicion_segun_tipo
 317+ ABC6
 318+ ABC6 E5           	push hl
 319+ ABC7 DD E1        	pop ix
 320+ ABC9
 321+ ABC9 DD 6E 0B     	ld l,(ix+11)
 322+ ABCC DD 66 0C     	ld h,(ix+12)
 323+ ABCF
 324+ ABCF 22 C4 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 325+ ABD2
 326+ ABD2 CD 8B 8C     	call Cargamos_registros_con_mov_masticado
 327+ ABD5
 328+ ABD5              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 329+ ABD5              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 330+ ABD5              ; Ejemplos.
 331+ ABD5
 332+ ABD5              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 333+ ABD5              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 334+ ABD5              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 335+ ABD5              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 336+ ABD5              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 337+ ABD5
 338+ ABD5 21 B5 89     	ld hl,Contador_de_vueltas
 339+ ABD8 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 340+ ABDA
 341+ ABDA 7E           	ld a,(hl)
 342+ ABDB CB 2F        	sra a
 343+ ABDD CB 2F        	sra a
 344+ ABDF
 345+ ABDF 32 CE 89     	ld (Velocidad),a
 346+ ABE2
 347+ ABE2 3E 40        	ld a,$40
 348+ ABE4 BE           	cp (hl)
 349+ ABE5 C0           	ret nz
 350+ ABE6
 351+ ABE6              ; Límitador.
 352+ ABE6
 353+ ABE6              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 354+ ABE6
 355+ ABE6 CB 2E        	sra (hl)
 356+ ABE8 21 CE 89     	ld hl,Velocidad
 357+ ABEB CB 2E        	sra (hl)
 358+ ABED
 359+ ABED C9           	ret
 360+ ABEE
 361+ ABEE              ; ---------------------------------------------------------------------
 362+ ABEE              ;
 363+ ABEE              ;	22/01/24
 364+ ABEE
 365+ ABEE 21 13 8A     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 366+ ABF1 CB 46        	bit 0,(hl)
 367+ ABF3 20 0D        	jr nz,1F
 368+ ABF5 CB 4E        	bit 1,(hl)
 369+ ABF7 20 0C        	jr nz,2F
 370+ ABF9 CB 56        	bit 2,(hl)
 371+ ABFB 20 0B        	jr nz,3F
 372+ ABFD CB 5E        	bit 3,(hl)
 373+ ABFF 20 0A        	jr nz,4F
 374+ AC01 C9           	ret
 375+ AC02
 376+ AC02 CB E6        1 set 4,(hl)
 377+ AC04 C9           	ret
 378+ AC05 CB EE        2 set 5,(hl)
 379+ AC07 C9           	ret
 380+ AC08 CB F6        3 set 6,(hl)
 381+ AC0A C9           	ret
 382+ AC0B CB FE        4 set 7,(hl)
 383+ AC0D C9           	ret
 384+ AC0E
 385+ AC0E              ; ---------------------------------------------------------------------
 386+ AC0E              ;
 387+ AC0E              ;	23/01/24
 388+ AC0E              ;
 389+ AC0E              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 390+ AC0E              ;
 391+ AC0E              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 392+ AC0E              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 393+ AC0E              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 394+ AC0E              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 395+ AC0E
 396+ AC0E              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 397+ AC0E
 398+ AC0E 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 399+ AC0F 3D           	dec a
 400+ AC10 20 06        	jr nz,1F
 401+ AC12
 402+ AC12              ; --- Tipo_1
 403+ AC12
 404+ AC12 21 13 8A     	ld hl,Ctrl_4
 405+ AC15 CB C6        	set 0,(hl)
 406+ AC17 C9           	ret
 407+ AC18
 408+ AC18 3D           1 dec a
 409+ AC19 20 06        	jr nz,2F
 410+ AC1B
 411+ AC1B              ; --- Tipo_2
 412+ AC1B
 413+ AC1B 21 13 8A     	ld hl,Ctrl_4
 414+ AC1E CB CE        	set 1,(hl)
 415+ AC20 C9           	ret
 416+ AC21
 417+ AC21 3D           2 dec a
 418+ AC22 20 06        	jr nz,3F
 419+ AC24
 420+ AC24              ; --- Tipo_3
 421+ AC24
 422+ AC24 21 13 8A     	ld hl,Ctrl_4
 423+ AC27 CB D6        	set 2,(hl)
 424+ AC29 C9           	ret
 425+ AC2A
 426+ AC2A              ; --- Tipo_3
 427+ AC2A
 428+ AC2A 21 13 8A     3 ld hl,Ctrl_4
 429+ AC2D CB D6        	set 2,(hl)
 430+ AC2F C9           	ret
 431+ AC30
 432+ AC30              ; ---------------------------------------------------------------------
 433+ AC30              ;
 434+ AC30              ;	22/01/24
 435+ AC30
 436+ AC30 21 13 8A     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 437+ AC33 CB 46        	bit 0,(hl)
 438+ AC35 20 0E        	jr nz,1F
 439+ AC37
 440+ AC37 CB 4E        	bit 1,(hl)
 441+ AC39 20 10        	jr nz,2F
 442+ AC3B
 443+ AC3B CB 56        	bit 2,(hl)
 444+ AC3D 20 12        	jr nz,3F
 445+ AC3F
 446+ AC3F CB 5E        	bit 3,(hl)
 447+ AC41 20 14        	jr nz,4F
 448+ AC43 18 19        	jr 6F
 449+ AC45
 450+ AC45              ; Entidad_de_Tipo_1.
 451+ AC45
 452+ AC45 CB 66        1 bit 4,(hl)
 453+ AC47 28 15        	jr z,6F
 454+ AC49 18 10        	jr 5F
 455+ AC4B
 456+ AC4B              ; Entidad_de_Tipo_2.
 457+ AC4B
 458+ AC4B CB 6E        2 bit 5,(hl)
 459+ AC4D 28 0F        	jr z,6F
 460+ AC4F 18 0A        	jr 5F
 461+ AC51
 462+ AC51              ; Entidad_de_Tipo_3.
 463+ AC51
 464+ AC51 CB 76        3 bit 6,(hl)
 465+ AC53 28 09        	jr z,6F
 466+ AC55 18 04        	jr 5F
 467+ AC57
 468+ AC57              ; Entidad_de_Tipo_4.
 469+ AC57
 470+ AC57 CB 7E        4 bit 7,(hl)
 471+ AC59 28 03        	jr z,6F
 472+ AC5B
 473+ AC5B              ; Esta entidad TIENE MOV_MASTICADOS.
 474+ AC5B
 475+ AC5B AF           5 xor a
 476+ AC5C 3C           	inc a
 477+ AC5D C9           	ret
 478+ AC5E
 479+ AC5E              ; Esta entidad NO TIENE MOV_MASTICADOS.
 480+ AC5E
 481+ AC5E AF           6 xor a
 482+ AC5F C9           	ret
 483+ AC60
 484+ AC60              ;	------------------------------------------------------------------------------------
 485+ AC60              ;
 486+ AC60              ;	12/01/24
 487+ AC60              ;
 488+ AC60              ;	INPUTS:	A contiene el (Tipo) de entidad.
 489+ AC60              ;
 490+ AC60              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 491+ AC60              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 492+ AC60
 493+ AC60 CB 27        Calcula_salto_en_BC sla a
 494+ AC62 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 495+ AC64 4F           	ld c,a
 496+ AC65 06 00        	ld b,0
 497+ AC67 C9           	ret
 498+ AC68
 499+ AC68              ; ------------------------------------------------------------------
 500+ AC68              ;
 501+ AC68              ;	19/1/24
 502+ AC68              ;
 503+ AC68              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 504+ AC68              ;	Actualiza (Datos_de_entidad) con esa dirección.
 505+ AC68
 506+ AC68 A7           Situa_en_datos_de_definicion and a
 507+ AC69 ED 4A        	adc hl,bc
 508+ AC6B CD 45 8D     	call Extrae_address
 509+ AC6E 22 F7 89         ld (Datos_de_entidad),hl
 510+ AC71 C9           	ret
 511+ AC72
 512+ AC72              ; ------------------------------------------------------------------
 513+ AC72
 514+ AC72              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 515+ AC72              ; 	inc de
 516+ AC72              ; 	inc de
 517+ AC72              ; 	ex de,hl
 518+ AC72              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 519+ AC72              ; 	ret
 520+ AC72
 521+ AC72              ; ----------------------------------------------------------------------------------------------------------
 522+ AC72              ;
 523+ AC72              ;	12/05/24
 524+ AC72              ;
 525+ AC72              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 526+ AC72              ;	_ de entidad.
 527+ AC72              ;
 528+ AC72              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 529+ AC72              ;
 530+ AC72              ;
 531+ AC72              ;	MODIFICA: HL,DE y BC
 532+ AC72
 533+ AC72
 534+ AC72              Definicion_de_entidad_a_bandeja_DRAW
 535+ AC72
 536+ AC72 11 AB 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 537+ AC75 01 03 00     	ld bc,3
 538+ AC78 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 539+ AC7A              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 540+ AC7A 11 B5 89     	ld de,Contador_de_vueltas					; DE en (Attr).
 541+ AC7D 01 05 00     	ld bc,5
 542+ AC80 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 543+ AC82              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 544+ AC82 11 BE 89     	ld de,Posicion_inicio
 545+ AC85 01 03 00     	ld bc,3
 546+ AC88 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 547+ AC8A              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 548+ AC8A 11 C4 89     	ld de,Puntero_de_almacen_de_mov_masticados
 549+ AC8D 01 02 00     	ld bc,2
 550+ AC90 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 551+ AC92
 552+ AC92 11 CF 89     	ld de,Frames_explosion
 553+ AC95 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 554+ AC97 12           	ld (de),a 									; Vuelco (Frames_explosion).
 555+ AC98
 556+ AC98 C9           	ret
 557+ AC99
 558+ AC99              ; ----------------------------------------------------------------------------------------------------------
 559+ AC99              ;
 560+ AC99              ;	12/5/24
 561+ AC99              ;
 562+ AC99              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 563+ AC99              ;
 564+ AC99              ;	Las cajas contienen entidades iniciadas:
 565+ AC99              ;
 566+ AC99              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 567+ AC99              ;
 568+ AC99              ;	INPUT:  DE debe contener la dirección del 1er byte de almacenamiento de la caja correspondiente:
 569+ AC99              ;
 570+ AC99              ;			- (Puntero_store_caja).
 571+ AC99              ;			_ Amadeus_BOX.
 572+ AC99
 573+ AC99              ;	OUTPUT: HL apunta al .db (Frames_explosion) de la bandeja DRAW.
 574+ AC99              ;			DE apunta al 1er .db (Tipo) de la siguiente caja de entidades.
 575+ AC99              ;
 576+ AC99              ;	MODIFICA: HL,DE y BC
 577+ AC99
 578+ AC99              Parametros_de_bandeja_DRAW_a_caja
 579+ AC99
 580+ AC99 21 AB 89     	ld hl,Bandeja_DRAW
 581+ AC9C 7E           	ld a,(hl)
 582+ AC9D 12           	ld (de),a
 583+ AC9E 13           	inc de 													; (Tipo).
 584+ AC9F
 585+ AC9F 21 B2 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 586+ ACA2 01 02 00     	ld bc,2
 587+ ACA5 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 588+ ACA7              ;															; DE apunta ahora a (Contador_de_vueltas) de la caja de entidades. Hemos de recolocar HL.
 589+ ACA7 23           	inc hl
 590+ ACA8 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Contador_de_vueltas).
 591+ ACA9 12           	ld (de),a
 592+ ACAA 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 593+ ACAB
 594+ ACAB 21 C1 89     	ld hl,Impacto
 595+ ACAE 01 08 00     	ld bc,8
 596+ ACB1 ED B0        	ldir													; Hemos volcado (Impacto), (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 597+ ACB3              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 598+ ACB3              ;															; HL apunta ahora a (Columnas).
 599+ ACB3 21 CD 89     	ld hl,Ctrl_2
 600+ ACB6 01 02 00     	ld bc,2
 601+ ACB9 ED B0        	ldir													; Hemos volcado (Ctrl_2) y (Velocidad).
 602+ ACBB
 603+ ACBB C9           	ret
 604+ ACBC
 605+ ACBC              ;---------------------------------------------------------------------------------------------------------------
 606+ ACBC              ;
 607+ ACBC              ;	5/1/24
 608+ ACBC              ;
 609+ ACBC              ;	INICIALIZA (Numero_parcial_de_entidades).
 610+ ACBC              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 611+ ACBC              ;
 612+ ACBC              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 613+ ACBC              ;
 614+ ACBC              ;	(Numero_parcial_de_entidades)="7".
 615+ ACBC              ;
 616+ ACBC              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 617+ ACBC              ;
 618+ ACBC              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 619+ ACBC              ;
 620+ ACBC              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 621+ ACBC              ;	MODIFICA: A y B.
 622+ ACBC              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 623+ ACBC
 624+ ACBC              Inicializa_Numero_parcial_de_entidades
 625+ ACBC
 626+ ACBC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 627+ ACBC
 628+ ACBC 3A F1 89     	ld a,(Numero_de_entidades)
 629+ ACBF A7           	and a
 630+ ACC0
 631+ ACC0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 632+ ACC0              ;	jr z,$
 633+ ACC0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 634+ ACC0
 635+ ACC0 20 03        	jr nz,3F
 636+ ACC2
 637+ ACC2              ; ---------- ---------- ----------
 638+ ACC2
 639+ ACC2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 640+ ACC2              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 641+ ACC2
 642+ ACC2 CD AF AA     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 643+ ACC5
 644+ ACC5              ; ---------- ---------- ----------
 645+ ACC5
 646+ ACC5 3A F1 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 647+ ACC8 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 648+ ACCA 38 08        	jr c,1F
 649+ ACCC
 650+ ACCC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 651+ ACCC              ; Actualizamos variables.
 652+ ACCC
 653+ ACCC 3E 07        	ld a,7
 654+ ACCE 32 F2 89     	ld (Numero_parcial_de_entidades),a
 655+ ACD1 47           	ld b,a
 656+ ACD2 18 04        	jr 2F
 657+ ACD4
 658+ ACD4              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 659+ ACD4              ; (Numero_de_entidades)="0".
 660+ ACD4
 661+ ACD4 32 F2 89     1 ld (Numero_parcial_de_entidades),a
 662+ ACD7 47           	ld b,a
 663+ ACD8 C9           2 ret
 664+ ACD9
# file closed: Rutinas_de_inicio_y_niveles.asm
2138  ACD9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ ACD9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ ACD9              ;
   3+ ACD9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ ACD9              ;
   5+ ACD9              ; *****************************************************************************************************************************************************************************************
   6+ ACD9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ ACD9
   8+ ACD9 7C           calcula_tercio ld a,h
   9+ ACDA E6 18        	and $18
  10+ ACDC CB 2F        	sra a
  11+ ACDE CB 2F        	sra a
  12+ ACE0 CB 2F        	sra a
  13+ ACE2 C9           	ret
  14+ ACE3
# file closed: calcula_tercio.asm
2139  ACE3              	include "Cls.asm"
# file opened: Cls.asm
   1+ ACE3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ ACE3              ;
   3+ ACE3              ;
   4+ ACE3              ;	CLS.
   5+ ACE3              ;
   6+ ACE3              ;	Limpia la pantalla y define sus atributos.
   7+ ACE3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ ACE3              ;
   9+ ACE3              ;	COLORES: 0 ..... NEGRO
  10+ ACE3              ;    		 1 ..... AZUL
  11+ ACE3              ; 			 2 ..... ROJO
  12+ ACE3              ;			 3 ..... MAGENTA
  13+ ACE3              ; 			 4 ..... VERDE
  14+ ACE3              ; 			 5 ..... CIAN
  15+ ACE3              ;			 6 ..... AMARILLO
  16+ ACE3              ; 			 7 ..... BLANCO
  17+ ACE3              ;
  18+ ACE3              ;	INPUT: A contiene los atributos de pantalla.
  19+ ACE3              ;
  20+ ACE3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ ACE3
  22+ ACE3
  23+ ACE3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ ACE6 11 01 40     	LD DE,$4001
  25+ ACE9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ ACEC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ ACEE ED B0        	LDIR
  28+ ACF0 01 FF 02     	LD BC,767
  29+ ACF3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ ACF4 ED B0        	LDIR
  31+ ACF6 C9           	ret
  32+ ACF7
# file closed: Cls.asm
2140  ACF7              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ ACF7              ; ------------------------------------------------------------------------
   2+ ACF7              ;
   3+ ACF7              ;	30/1/24
   4+ ACF7              ;
   5+ ACF7              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ ACF7              ;	Fila superior "0", Columna izquierda "0".
   7+ ACF7              ;
   8+ ACF7              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ ACF7              ;
  10+ ACF7              ;	Modifica: A,BC y DE.
  11+ ACF7
  12+ ACF7 7D           Genera_coordenadas ld a,l
  13+ ACF8 E6 1F        	and $1f
  14+ ACFA 32 B2 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ ACFD
  16+ ACFD 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ ACFE FE 40        	cp $40
  18+ AD00 38 1C        	jr c,4F
  19+ AD02
  20+ AD02 CD D9 AC     	call calcula_tercio
  21+ AD05 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ AD06
  23+ AD06 1E 00        	ld e,0
  24+ AD08 7D           	ld a,l
  25+ AD09 E6 E0        	and $e0
  26+ AD0B 28 01        	jr z,1F
  27+ AD0D 04           	inc b
  28+ AD0E
  29+ AD0E 04           1 inc b
  30+ AD0F 05           	dec b
  31+ AD10 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ AD12              ;														; _ , salimos.
  33+ AD12 1C           3 inc e
  34+ AD13 D6 20        	sub 32
  35+ AD15 20 FB        	jr nz,3B
  36+ AD17 10 F5        	djnz 1B
  37+ AD19
  38+ AD19 7B           2 ld a,e
  39+ AD1A 32 B3 89     	ld (Coordenada_y),a
  40+ AD1D C9           	ret
  41+ AD1E
  42+ AD1E AF           4 xor a
  43+ AD1F 32 B3 89     	ld (Coordenada_y),a
  44+ AD22 C9           	ret
  45+ AD23
  46+ AD23              ; ------------------------------------------------------------------------
  47+ AD23              ;	28/05/23
  48+ AD23              ;
  49+ AD23              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ AD23              ;	Fila superior "0", Columna izquierda "0".
  51+ AD23              ;
  52+ AD23              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ AD23              ;	Output: DE contendrá las coordenadas del disparo:
  54+ AD23              ;
  55+ AD23              ;		DE="$120d"
  56+ AD23              ;
  57+ AD23              ;		D, (Coordenada_X), Columnas, $12
  58+ AD23              ;		E, (Coordenada_y), Filas, $0d
  59+ AD23              ;
  60+ AD23              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ AD23
  62+ AD23              ;	Modifica: A,BC y DE.
  63+ AD23
  64+ AD23
  65+ AD23              Genera_coordenadas_disparo
  66+ AD23
  67+ AD23              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ AD23
  69+ AD23 7D           	ld a,l
  70+ AD24 E6 1F        	and $1f
  71+ AD26 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ AD27 CD D9 AC     	call calcula_tercio
  73+ AD2A 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ AD2B 1E 00        	ld e,0
  75+ AD2D 7D           	ld a,l
  76+ AD2E E6 E0        	and $e0
  77+ AD30 28 01        	jr z,1F
  78+ AD32 04           	inc b
  79+ AD33 1C           1 inc e
  80+ AD34 D6 20        	sub 32
  81+ AD36 20 FB        	jr nz,1B
  82+ AD38 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ AD3A C9           	ret
  84+ AD3B
# file closed: Genera_coordenadas.asm
2141  AD3B              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ AD3B              ; Relojes y temporizaciones.
   2+ AD3B
   3+ AD3B              ; ------------------------------------------------------
   4+ AD3B              ;
   5+ AD3B              ;	16/7/23
   6+ AD3B              ;
   7+ AD3B              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ AD3B              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ AD3B              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ AD3B              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ AD3B              ;
  12+ AD3B              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ AD3B              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ AD3B
  15+ AD3B              ; Disparo_entidad db 1
  16+ AD3B              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ AD3B              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ AD3B
  19+ AD3B              Habilita_disparos
  20+ AD3B
  21+ AD3B 7E           	ld a,(hl)
  22+ AD3C A7           	and a
  23+ AD3D C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ AD3E
  25+ AD3E EB           	ex de,hl
  26+ AD3F
  27+ AD3F 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ AD40 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ AD41
  30+ AD41              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ AD41
  32+ AD41 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ AD42 7E           	ld a,(hl)
  34+ AD43 23           	inc hl
  35+ AD44 77           	ld (hl),a
  36+ AD45
  37+ AD45 EB           	ex de,hl						; Habilitamos disparo.
  38+ AD46 3E 01        	ld a,1
  39+ AD48 77           	ld (hl),a
  40+ AD49 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
2142  AD4A              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ AD4A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AD4A              ;
   3+ AD4A              ;	11/03/24
   4+ AD4A              ;
   5+ AD4A              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ AD4A              ;   DE contiene Puntero_objeto.
   7+ AD4A              ;   IX contiene el Puntero de impresión.
   8+ AD4A
   9+ AD4A              Genera_datos_de_impresion
  10+ AD4A
  11+ AD4A ED 73 F9 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ AD4E 31 C4 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ AD51 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ AD53
  15+ AD53 2A 0C 8A         ld hl,(Scanlines_album_SP)
  16+ AD56
  17+ AD56 3E 05            ld a,5
  18+ AD58 85               add l
  19+ AD59 6F               ld l,a
  20+ AD5A
  21+ AD5A F9               ld sp,hl
  22+ AD5B 22 0C 8A         ld (Scanlines_album_SP),hl
  23+ AD5E
  24+ AD5E 21 00 00         ld hl,0
  25+ AD61
  26+ AD61 DD E5            push ix
  27+ AD63 3B               dec sp
  28+ AD64 ED 7A            adc hl,sp
  29+ AD66 D5               push de
  30+ AD67
  31+ AD67              ; Recuperamos SP.
  32+ AD67
  33+ AD67 ED 7B F9 89      ld sp,(Stack)
  34+ AD6B
  35+ AD6B E5               push hl
  36+ AD6C F1               pop af
  37+ AD6D 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ AD6E
  39+ AD6E              ; Tenemos el encabezado listo.
  40+ AD6E              ; Preparamos registros para generar los scanlines.
  41+ AD6E
  42+ AD6E DD E5            push ix
  43+ AD70 E1               pop hl                                          ; 1er scanline en HL.
  44+ AD71
  45+ AD71 ED 5B 0C 8A      ld de,(Scanlines_album_SP)
  46+ AD75
  47+ AD75              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ AD75              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ AD75
  50+ AD75 7C               ld a,h
  51+ AD76 FE 50            cp $50
  52+ AD78 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ AD7A
  54+ AD7A 20 05            jr nz,2F
  55+ AD7C
  56+ AD7C 7D               ld a,l
  57+ AD7D FE E0            cp $e0
  58+ AD7F 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ AD81
  60+ AD81 7D           2 ld a,l
  61+ AD82 FE C0            cp $c0
  62+ AD84 D2 16 AE         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ AD87
  64+ AD87              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ AD87
  66+ AD87 CD EE 94         call NextScan
  67+ AD8A EB               ex de,hl
  68+ AD8B
  69+ AD8B 73               ld (hl),e
  70+ AD8C 23               inc hl
  71+ AD8D 72               ld (hl),d
  72+ AD8E 23               inc hl
  73+ AD8F
  74+ AD8F EB               ex de,hl
  75+ AD90
  76+ AD90 CD EE 94         call NextScan
  77+ AD93 EB               ex de,hl
  78+ AD94
  79+ AD94 73               ld (hl),e
  80+ AD95 23               inc hl
  81+ AD96 72               ld (hl),d
  82+ AD97 23               inc hl
  83+ AD98
  84+ AD98 EB               ex de,hl
  85+ AD99
  86+ AD99 CD EE 94         call NextScan
  87+ AD9C EB               ex de,hl
  88+ AD9D
  89+ AD9D 73               ld (hl),e
  90+ AD9E 23               inc hl
  91+ AD9F 72               ld (hl),d
  92+ ADA0 23               inc hl
  93+ ADA1
  94+ ADA1 EB               ex de,hl
  95+ ADA2
  96+ ADA2 CD EE 94         call NextScan
  97+ ADA5 EB               ex de,hl
  98+ ADA6
  99+ ADA6 73               ld (hl),e
 100+ ADA7 23               inc hl
 101+ ADA8 72               ld (hl),d
 102+ ADA9 23               inc hl
 103+ ADAA
 104+ ADAA EB               ex de,hl
 105+ ADAB
 106+ ADAB CD EE 94         call NextScan
 107+ ADAE EB               ex de,hl
 108+ ADAF
 109+ ADAF 73               ld (hl),e
 110+ ADB0 23               inc hl
 111+ ADB1 72               ld (hl),d
 112+ ADB2 23               inc hl
 113+ ADB3
 114+ ADB3 EB               ex de,hl
 115+ ADB4
 116+ ADB4 CD EE 94         call NextScan
 117+ ADB7 EB               ex de,hl
 118+ ADB8
 119+ ADB8 73               ld (hl),e
 120+ ADB9 23               inc hl
 121+ ADBA 72               ld (hl),d
 122+ ADBB 23               inc hl
 123+ ADBC
 124+ ADBC EB               ex de,hl
 125+ ADBD
 126+ ADBD CD EE 94         call NextScan
 127+ ADC0 EB               ex de,hl
 128+ ADC1
 129+ ADC1 73               ld (hl),e
 130+ ADC2 23               inc hl
 131+ ADC3 72               ld (hl),d
 132+ ADC4 23               inc hl
 133+ ADC5
 134+ ADC5 EB               ex de,hl
 135+ ADC6
 136+ ADC6 CD EE 94         call NextScan
 137+ ADC9 EB               ex de,hl
 138+ ADCA
 139+ ADCA 73               ld (hl),e
 140+ ADCB 23               inc hl
 141+ ADCC 72               ld (hl),d
 142+ ADCD 23               inc hl
 143+ ADCE
 144+ ADCE EB               ex de,hl
 145+ ADCF
 146+ ADCF CD EE 94         call NextScan
 147+ ADD2 EB               ex de,hl
 148+ ADD3
 149+ ADD3 73               ld (hl),e
 150+ ADD4 23               inc hl
 151+ ADD5 72               ld (hl),d
 152+ ADD6 23               inc hl
 153+ ADD7
 154+ ADD7 EB               ex de,hl
 155+ ADD8
 156+ ADD8 CD EE 94         call NextScan
 157+ ADDB EB               ex de,hl
 158+ ADDC
 159+ ADDC 73               ld (hl),e
 160+ ADDD 23               inc hl
 161+ ADDE 72               ld (hl),d
 162+ ADDF 23               inc hl
 163+ ADE0
 164+ ADE0 EB               ex de,hl
 165+ ADE1
 166+ ADE1 CD EE 94         call NextScan
 167+ ADE4 EB               ex de,hl
 168+ ADE5
 169+ ADE5 73               ld (hl),e
 170+ ADE6 23               inc hl
 171+ ADE7 72               ld (hl),d
 172+ ADE8 23               inc hl
 173+ ADE9
 174+ ADE9 EB               ex de,hl
 175+ ADEA
 176+ ADEA CD EE 94         call NextScan
 177+ ADED EB               ex de,hl
 178+ ADEE
 179+ ADEE 73               ld (hl),e
 180+ ADEF 23               inc hl
 181+ ADF0 72               ld (hl),d
 182+ ADF1 23               inc hl
 183+ ADF2
 184+ ADF2 EB               ex de,hl
 185+ ADF3
 186+ ADF3 CD EE 94         call NextScan
 187+ ADF6 EB               ex de,hl
 188+ ADF7
 189+ ADF7 73               ld (hl),e
 190+ ADF8 23               inc hl
 191+ ADF9 72               ld (hl),d
 192+ ADFA 23               inc hl
 193+ ADFB
 194+ ADFB EB               ex de,hl
 195+ ADFC
 196+ ADFC CD EE 94         call NextScan
 197+ ADFF EB               ex de,hl
 198+ AE00
 199+ AE00 73               ld (hl),e
 200+ AE01 23               inc hl
 201+ AE02 72               ld (hl),d
 202+ AE03 23               inc hl
 203+ AE04
 204+ AE04 EB               ex de,hl
 205+ AE05
 206+ AE05 CD EE 94         call NextScan
 207+ AE08 EB               ex de,hl
 208+ AE09
 209+ AE09 73               ld (hl),e
 210+ AE0A 23               inc hl
 211+ AE0B 72               ld (hl),d
 212+ AE0C 23               inc hl
 213+ AE0D
 214+ AE0D              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ AE0D
 216+ AE0D 22 0C 8A         ld (Scanlines_album_SP),hl
 217+ AE10
 218+ AE10              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ AE10
 220+ AE10 08               ex af,af
 221+ AE11
 222+ AE11 F5               push af
 223+ AE12 E1               pop hl
 224+ AE13
 225+ AE13 36 10            ld (hl),16
 226+ AE15
 227+ AE15 C9               ret
 228+ AE16
 229+ AE16              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ AE16
 231+ AE16              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ AE16
 233+ AE16 3E 57            ld a,$57
 234+ AE18 94               sub h
 235+ AE19 47               ld b,a
 236+ AE1A
 237+ AE1A 3E DF            ld a,$df
 238+ AE1C BD               cp l
 239+ AE1D 38 04            jr c,1F
 240+ AE1F
 241+ AE1F 3E 08            ld a,8
 242+ AE21 80               add b
 243+ AE22 47               ld b,a
 244+ AE23
 245+ AE23              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 246+ AE23              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 247+ AE23
 248+ AE23 48           1 ld c,b
 249+ AE24 0C               inc c
 250+ AE25
 251+ AE25 04               inc b
 252+ AE26 05               dec b
 253+ AE27 20 02            jr nz,3F
 254+ AE29
 255+ AE29 18 0B            jr 6F
 256+ AE2B
 257+ AE2B CD EE 94     3 call NextScan
 258+ AE2E EB               ex de,hl
 259+ AE2F
 260+ AE2F 73               ld (hl),e
 261+ AE30 23               inc hl
 262+ AE31 72               ld (hl),d
 263+ AE32 23               inc hl
 264+ AE33
 265+ AE33 EB               ex de,hl
 266+ AE34 10 F5            djnz 3B
 267+ AE36
 268+ AE36 ED 53 0C 8A  6 ld (Scanlines_album_SP),de
 269+ AE3A
 270+ AE3A 08           5 ex af,af
 271+ AE3B F5               push af
 272+ AE3C E1               pop hl
 273+ AE3D
 274+ AE3D 71               ld (hl),c
 275+ AE3E
 276+ AE3E C9               ret
 277+ AE3F
# file closed: Genera_datos_de_impresion.asm
2143  AE3F
2144  AE3F              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ AE3F              ; -----------------------------------------------------------------------------
   2+ AE3F              ;
   3+ AE3F              ;   11/03/24
   4+ AE3F              ;
   5+ AE3F
   6+ AE3F                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 F9 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 22 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 73 0C 8A      ld (Scanlines_album_SP),sp
 312+ 921D ED 7B F9 89      ld sp,(Stack)
 313+ 9221 C9               ret
 314+ 9222
 315+ 9222              Pinta_lento
 316+ 9222
 317+ 9222 E1           1 pop hl
 318+ 9223
 319+ 9223 1A               ld a,(de)
 320+ 9224 AE               xor (hl)
 321+ 9225 77               ld (hl),a
 322+ 9226 2C               inc l
 323+ 9227 1C               inc e
 324+ 9228 1A               ld a,(de)
 325+ 9229 AE               xor (hl)
 326+ 922A 77               ld (hl),a
 327+ 922B 2C               inc l
 328+ 922C 1C               inc e
 329+ 922D 1A               ld a,(de)
 330+ 922E AE               xor (hl)
 331+ 922F 77               ld (hl),a
 332+ 9230 13               inc de
 333+ 9231
 334+ 9231 10 EF            djnz 1B
 335+ 9233
 336+ 9233 ED 73 0C 8A      ld (Scanlines_album_SP),sp
 337+ 9237 ED 7B F9 89      ld sp,(Stack)
 338+ 923B C9               ret
# file closed: Pinta_Sprites.asm
2145  923C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ; 26/06/23
   4+ 923C              ;
   5+ 923C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 923C
   7+ 923C              Draw
   8+ 923C
   9+ 923C CD E2 94     	call Prepara_draw
  10+ 923F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9240 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9241 28 05        	jr z,2F
  13+ 9243
  14+ 9243 3A C0 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9246 18 0C        	jr 1F
  16+ 9248
  17+ 9248 2A BE 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924B 22 AE 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 924E CD DA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9251              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9251
  22+ 9251 CD 69 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9254
  24+ 9254 3A C8 89     1 ld a,(Ctrl_0)
  25+ 9257 CB 6F        	bit 5,a
  26+ 9259 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925B
  28+ 925B CD 70 92     	call Comprueba_limite_horizontal
  29+ 925E CD 00 93     	call Comprueba_limite_vertical
  30+ 9261
  31+ 9261              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9261              ; -----------------------
  33+ 9261              ; -----------------------
  34+ 9261              ; -----------------------
  35+ 9261
  36+ 9261 CD 56 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9264 CD 8D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9267
  39+ 9267 3A C8 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 926C 32 C8 89     	ld (Ctrl_0),a
  42+ 926F
  43+ 926F C9           	ret
  44+ 9270
  45+ 9270              ; *******************************************************************************************************************************************************************************************
  46+ 9270              ;	21/01/23
  47+ 9270              ;
  48+ 9270              ; 	Comprueba_limite_horizontal.
  49+ 9270              ;
  50+ 9270              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9270              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9270              ;
  53+ 9270              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9270              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9270              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9270              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9270
  58+ 9270
  59+ 9270
  60+ 9270 3A C8 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9273 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9275 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9277 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9279 32 C8 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 927C 18 09            jr 6F
  66+ 927E CB 5F        1 bit 3,a
  67+ 9280 28 0A            jr z,2F
  68+ 9282 E6 F7            and $f7
  69+ 9284 32 C8 89         ld (Ctrl_0),a
  70+ 9287 CD DA 93     6 call Inicializacion
  71+ 928A 18 5B            jr 5F
  72+ 928C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 928D
  74+ 928D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 928D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 928D
  77+ 928D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 928E 2A CA 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9291 CD D9 AC     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9294 67           	ld h,a
  81+ 9295 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9296 CD D9 AC     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9299 67           	ld h,a
  84+ 929A A7           	and a
  85+ 929B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 929D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 929E 3A C0 89     	ld a,(Cuad_objeto)
  88+ 92A1 FE 02        	cp 2
  89+ 92A3 38 1E        	jr c,3F
  90+ 92A5 28 1C        	jr z,3F
  91+ 92A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A8 28 23            jr z,7F
  93+ 92AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92AE E1           	pop hl
  96+ 92AF
  97+ 92AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92AF              ; _para indicar con E="2" en caso necesario.
  99+ 92AF
 100+ 92AF E5               push hl
 101+ 92B0 C5               push bc
 102+ 92B1 CD D9 AC     	call calcula_tercio
 103+ 92B4 FE 01        	cp 1
 104+ 92B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B8 CD E8 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BB 28 26            jr z,9F
 107+ 92BD 38 24            jr c,9F
 108+ 92BF 1E 00        11 ld e,0
 109+ 92C1 18 22            jr 8F
 110+ 92C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C4 28 07        	jr z, 7F
 112+ 92C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C8 1E 00         	ld e,0
 114+ 92CA E1           	pop hl
 115+ 92CB 18 04        	jr 4F
 116+ 92CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92CF 18 15            jr 10F
 118+ 92D1
 119+ 92D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D1              ; _para indicar con E="2" en caso necesario.
 121+ 92D1
 122+ 92D1 E5           4 push hl
 123+ 92D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D3 CD D9 AC     	call calcula_tercio
 125+ 92D6 FE 01        	cp 1
 126+ 92D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DA CD E8 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92DD 28 04            jr z,9F
 129+ 92DF 30 02            jr nc,9F
 130+ 92E1 18 02        	jr 8F
 131+ 92E3 1E 02        9 ld e,2
 132+ 92E5 C1           8 pop bc
 133+ 92E6 E1           10 pop hl
 134+ 92E7 C9           5 ret
 135+ 92E8
 136+ 92E8              ; --------------------
 137+ 92E8              ;
 138+ 92E8              ; 25/08/22
 139+ 92E8
 140+ 92E8 CD D9 AC     Comprueba_centro call calcula_tercio
 141+ 92EB 67               ld h,a
 142+ 92EC 08           	ex af,af
 143+ 92ED FE 02        	cp 2
 144+ 92EF 38 07        	jr c,1F
 145+ 92F1 28 05        	jr z,1F
 146+ 92F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92F6 18 03        	jr 2F
 148+ 92F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FB 08           2 ex af,af
 150+ 92FC A7               and a
 151+ 92FD ED 42            sbc hl,bc
 152+ 92FF C9               ret
 153+ 9300
 154+ 9300              ; *********************************************************************************************************************************************************************************************
 155+ 9300              ;
 156+ 9300              ;   16/8/22
 157+ 9300              ;
 158+ 9300              ;	Comprueba_limite_vertical
 159+ 9300              ;
 160+ 9300              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9300              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9300              ;
 163+ 9300
 164+ 9300 2A AE 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9303 7D           	ld a,l
 166+ 9304 E6 1F        	and $1F
 167+ 9306 57           	ld d,a
 168+ 9307 3A CC 89     	ld a,(Limite_vertical)
 169+ 930A BA           	cp d 											; Límite - Posición.
 170+ 930B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 930C 3A C0 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 930F CB 47        	bit 0,a
 173+ 9311 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9313
 175+ 9313              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9313
 177+ 9313 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9314 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9316
 180+ 9316              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9316              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9316
 183+ 9316 3A B2 89         ld a,(Coordenada_X)
 184+ 9319 16 0F            ld d,Centro_izquierda
 185+ 931B A7               and a
 186+ 931C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 931D 28 1E            jr z,3F
 188+ 931F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9321              ;                                                    ; _salimos sin modificar nada.
 190+ 9321 18 0E            jr 2F
 191+ 9323 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9324 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9326
 194+ 9326              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9326              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9326
 197+ 9326 3A B2 89         ld a,(Coordenada_X)
 198+ 9329 16 10            ld d,Centro_derecha
 199+ 932B A7               and a
 200+ 932C 92               sub d
 201+ 932D 28 0E            jr z,3F
 202+ 932F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9331              ;                                                    ; _salimos sin modificar nada.
 204+ 9331 CB 43        2 bit 0,e
 205+ 9333 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9335 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9336 CD CA 93         call Modificaccionne
 208+ 9339 C1           	pop bc
 209+ 933A CD DA 93         call Inicializacion
 210+ 933D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 933E
 212+ 933E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 933E
 214+ 933E C5           4 push bc
 215+ 933F 01 AD 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9342 0A           	ld a,(bc)
 217+ 9343 3D           	dec a
 218+ 9344 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9345 7D           	ld a,l
 220+ 9346 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9347 CB 47        	bit 0,a
 222+ 9349 28 03        	jr z,5F
 223+ 934B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 934C 18 2E        	jr 7F
 225+ 934E
 226+ 934E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 934E
 228+ 934E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 934F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9350 3A C8 89     	ld a,(Ctrl_0)
 231+ 9353 CB 4F        	bit 1,a
 232+ 9355 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9357 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9358
 235+ 9358              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9358
 237+ 9358 1C               inc e
 238+ 9359 1D               dec e
 239+ 935A 20 07            jr nz,12F
 240+ 935C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 935D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 935E 22 AE 89     	ld (Posicion_actual),hl
 243+ 9361 18 44        13 jr 9F
 244+ 9363 CB 43        12 bit 0,e
 245+ 9365 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9367              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9367 C1           	pop bc
 248+ 9368 18 D3        	jr 3B
 249+ 936A 80           14 add b
 250+ 936B 6F               ld l,a
 251+ 936C 22 AE 89     	ld (Posicion_actual),hl
 252+ 936F CD CA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9372 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9374 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9376 32 C8 89         ld (Ctrl_0),a
 256+ 9379 F1           	pop af
 257+ 937A 18 2B        	jr 9F
 258+ 937C
 259+ 937C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 937C
 261+ 937C F5           7 push af
 262+ 937D 3A C8 89     	ld a,(Ctrl_0)
 263+ 9380 CB 47        	bit 0,a
 264+ 9382 20 1D        	jr nz,8F
 265+ 9384 F1           	pop af
 266+ 9385
 267+ 9385              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9385
 269+ 9385 1C           	inc e
 270+ 9386 1D               dec e
 271+ 9387 20 07            jr nz,10F
 272+ 9389 90           	sub b
 273+ 938A 6F               ld l,a
 274+ 938B 22 AE 89     	ld (Posicion_actual),hl
 275+ 938E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9390              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9390 CB 43        10 bit 0,e
 278+ 9392 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9394              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9394 C1           	pop bc
 281+ 9395 18 A6        	jr 3B
 282+ 9397 90           16 sub b
 283+ 9398 6F               ld l,a
 284+ 9399 22 AE 89     	ld (Posicion_actual),hl
 285+ 939C CD CA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 939F 18 06            jr 9F
 287+ 93A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A3 32 C8 89         ld (Ctrl_0),a
 289+ 93A6 F1           	pop af
 290+ 93A7 C1           9 pop bc
 291+ 93A8 1E 00        	ld e,0
 292+ 93AA CD DA 93         call Inicializacion
 293+ 93AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93AE 08           	ex af,af
 295+ 93AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B0 18 8B            jr 3B
 297+ 93B2
 298+ 93B2              ; --------------------
 299+ 93B2
 300+ 93B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B4 CD FD 94     1 call PreviousScan
 302+ 93B7 10 FB            djnz 1B
 303+ 93B9 22 AE 89     	ld (Posicion_actual),hl
 304+ 93BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93BD C9           	ret
 306+ 93BE
 307+ 93BE              ; --------------------
 308+ 93BE
 309+ 93BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C0 CD EE 94     1 call NextScan
 311+ 93C3 10 FB            djnz 1B
 312+ 93C5 22 AE 89     	ld (Posicion_actual),hl
 313+ 93C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C9 C9           	ret
 315+ 93CA
 316+ 93CA              ; --------------------
 317+ 93CA              ;
 318+ 93CA              ;	22/01/23
 319+ 93CA              ;
 320+ 93CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CA
 324+ 93CA
 325+ 93CA              Modificaccionne
 326+ 93CA
 327+ 93CA 3A C0 89     	ld a,(Cuad_objeto)
 328+ 93CD FE 02        	cp 2
 329+ 93CF CC B2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D2 DC B2 93         call c,Modifica_Pos_actual
 331+ 93D5 C8           	ret z
 332+ 93D6 CD BE 93         call Modifica_Pos_actual2
 333+ 93D9 C9               ret
 334+ 93DA
 335+ 93DA              ; *************************************************************************************************************************************************************************************************
 336+ 93DA              ;
 337+ 93DA              ;	13/8/22
 338+ 93DA              ;
 339+ 93DA              ;	Inicializacion
 340+ 93DA              ;
 341+ 93DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DA              ;
 345+ 93DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DA              ;	_ desaparece/aparece.
 348+ 93DA
 349+ 93DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DA              ;
 352+ 93DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DA              ; 		   [E] ="0"
 355+ 93DA
 356+ 93DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DA
 358+ 93DA CD D9 AC     Inicializacion call calcula_tercio
 359+ 93DD 28 36        	jr z,primit
 360+ 93DF E6 02        	and 2
 361+ 93E1 20 07        	jr nz,segmit
 362+ 93E3 7D           	ld a,l
 363+ 93E4 FE 7F        	cp $7f
 364+ 93E6 38 2D        	jr c,primit
 365+ 93E8 28 2B        	jr z,primit
 366+ 93EA CD 50 94     segmit call column
 367+ 93ED 38 13        	jr c,tercuad
 368+ 93EF 3E 04        cuarcuad ld a,4
 369+ 93F1 32 C0 89     	ld (Cuad_objeto),a
 370+ 93F4 21 20 48     	ld hl,$4820
 371+ 93F7 22 CA 89     	ld (Limite_horizontal),hl
 372+ 93FA 21 CC 89     	ld hl,Limite_vertical
 373+ 93FD 36 0D        	ld (hl),$0d
 374+ 93FF 08           	ex af,af
 375+ 9400 18 3C        	jr 1F
 376+ 9402              tercuad
 377+ 9402 3E 03        	ld a,3
 378+ 9404 32 C0 89     	ld (Cuad_objeto),a
 379+ 9407 21 20 48     	ld hl,$4820
 380+ 940A 22 CA 89     	ld (Limite_horizontal),hl
 381+ 940D 21 CC 89     	ld hl,Limite_vertical
 382+ 9410 36 12        	ld (hl),$12
 383+ 9412 08           	ex af,af
 384+ 9413 18 29        	jr 1F
 385+ 9415 CD 50 94     primit call column
 386+ 9418 38 13        	jr c, primcuad
 387+ 941A              segcuad
 388+ 941A 3E 02        	ld a,2
 389+ 941C 32 C0 89     	ld (Cuad_objeto),a
 390+ 941F 21 C0 4F     	ld hl,$4fc0
 391+ 9422 22 CA 89     	ld (Limite_horizontal),hl
 392+ 9425 21 CC 89     	ld hl,Limite_vertical
 393+ 9428 36 0D        	ld (hl),$0d
 394+ 942A 08           	ex af,af
 395+ 942B 18 11        	jr 1F
 396+ 942D              primcuad
 397+ 942D 3E 01        	ld a,1
 398+ 942F 32 C0 89     	ld (Cuad_objeto),a
 399+ 9432 21 C0 4F     	ld hl,$4fc0
 400+ 9435 22 CA 89     	ld (Limite_horizontal),hl
 401+ 9438 21 CC 89     	ld hl,Limite_vertical
 402+ 943B 36 12        	ld (hl),$12
 403+ 943D 08           	ex af,af
 404+ 943E
 405+ 943E C5           1 push bc
 406+ 943F E5           	push hl
 407+ 9440 D5           	push de
 408+ 9441
 409+ 9441 2A AE 89     	ld hl,(Posicion_actual)
 410+ 9444 CD F7 AC     	call Genera_coordenadas
 411+ 9447
 412+ 9447 D1           	pop de
 413+ 9448 E1           	pop hl
 414+ 9449 C1           	pop bc
 415+ 944A
 416+ 944A 21 C8 89     	ld hl,Ctrl_0
 417+ 944D CB EE        	set 5,(hl)
 418+ 944F C9           	ret
 419+ 9450
 420+ 9450              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9450
 422+ 9450              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9450              ;
 424+ 9450              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9450
 426+ 9450 7D           column ld a,l
 427+ 9451 E6 1F        	and $1f
 428+ 9453 FE 10         	cp $10
 429+ 9455 C9            	ret
 430+ 9456
 431+ 9456              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9456              ;
 433+ 9456              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9456              ;
 435+ 9456              ; 14/12/22
 436+ 9456              ;
 437+ 9456              ;	Modifica: A y BC.
 438+ 9456
 439+ 9456 3A C0 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9459 E6 01        	and 1
 441+ 945B 28 17        	jr z,1F
 442+ 945D
 443+ 945D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 945D
 445+ 945D 3A B2 89     	ld a,(Coordenada_X)
 446+ 9460 47           	ld b,a
 447+ 9461 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9462 79           	ld a,c
 449+ 9463 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9464 38 08        	jr c,2F
 451+ 9466 47           	ld b,a
 452+ 9467 79           	ld a,c
 453+ 9468 90           	sub b
 454+ 9469 32 C9 89     	ld (Columnas),a
 455+ 946C 18 1B        	jr 4F
 456+ 946E 79           2 ld a,c
 457+ 946F 32 C9 89     	ld (Columnas),a
 458+ 9472 18 15        	jr 4F
 459+ 9474
 460+ 9474              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9474
 462+ 9474 3A B2 89     1 ld a,(Coordenada_X)
 463+ 9477 81           	add c
 464+ 9478 3D           	dec a
 465+ 9479 D6 1F        	sub $1f
 466+ 947B 38 08        	jr c,3F
 467+ 947D 47           	ld b,a
 468+ 947E 79           	ld a,c
 469+ 947F 90           	sub b
 470+ 9480 32 C9 89     	ld (Columnas),a
 471+ 9483 18 04        	jr 4F
 472+ 9485 79           3 ld a,c
 473+ 9486 32 C9 89     	ld (Columnas),a
 474+ 9489 D9           4 exx
 475+ 948A 4F           	ld c,a
 476+ 948B D9           	exx
 477+ 948C C9            ret
 478+ 948D
 479+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 948D              ;
 481+ 948D              ;   19/7/23
 482+ 948D              ;
 483+ 948D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 948D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 948D              ;
 486+ 948D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 948D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 948D              ;
 489+ 948D              ;	DESTRUYE: HL,B Y A.
 490+ 948D
 491+ 948D 3A C0 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9490 FE 02        	cp 2
 493+ 9492 38 18        	jr c,1F
 494+ 9494 28 16        	jr z,1F
 495+ 9496 E6 01        	and 1
 496+ 9498 28 0D        	jr z,3F
 497+ 949A
 498+ 949A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949A
 500+ 949A CD D6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 949D
 502+ 949D 7D           9 ld a,l
 503+ 949E E6 1F        	and $1f
 504+ 94A0 28 2A        	jr z,7F
 505+ 94A2 2B           	dec hl
 506+ 94A3 10 F8        	djnz 9B
 507+ 94A5 18 25        	jr 7F
 508+ 94A7
 509+ 94A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94A7
 511+ 94A7 2A AE 89     3 ld hl,(Posicion_actual)
 512+ 94AA 18 20        	jr 7F
 513+ 94AC
 514+ 94AC 28 14        1 jr z,2F
 515+ 94AE
 516+ 94AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94AE
 518+ 94AE CD D6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B1
 520+ 94B1 7D           4 ld a,l
 521+ 94B2 E6 1F        	and $1f
 522+ 94B4 28 03        	jr z,6F
 523+ 94B6 2B           	dec hl
 524+ 94B7 10 F8        	djnz 4B
 525+ 94B9 06 0F        6 ld b,15
 526+ 94BB CD FD 94     5 call PreviousScan
 527+ 94BE 10 FB        	djnz 5B
 528+ 94C0 18 0A        	jr 7F
 529+ 94C2
 530+ 94C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C2
 532+ 94C2 CD D6 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C5 06 0F        	ld b,15
 534+ 94C7 CD FD 94     8 call PreviousScan
 535+ 94CA 10 FB        	djnz 8B
 536+ 94CC
 537+ 94CC E5           7 push hl
 538+ 94CD DD E1        	pop ix
 539+ 94CF
 540+ 94CF 2A B0 89     	ld hl,(Puntero_objeto)
 541+ 94D2 E5           	push hl
 542+ 94D3 FD E1        	pop iy
 543+ 94D5
 544+ 94D5 C9           	ret
 545+ 94D6
 546+ 94D6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 94D6              ;
 548+ 94D6              ;	2/1/23
 549+ 94D6              ;
 550+ 94D6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 94D6              ;
 552+ 94D6              ;	Tras esta rutina tenemos:
 553+ 94D6              ;
 554+ 94D6              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 94D6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 94D6              ;
 557+ 94D6              ;	DESTRUYE!!!!! HL,B y A.
 558+ 94D6
 559+ 94D6 2A AE 89     Operandos ld hl,(Posicion_actual)
 560+ 94D9 3A C9 89     	ld a,(Columnas)
 561+ 94DC 3D           	dec a
 562+ 94DD 20 01        	jr nz,1F
 563+ 94DF 3C           	inc a
 564+ 94E0 47           1 ld b,a
 565+ 94E1 C9           	ret
 566+ 94E2
 567+ 94E2              ; --------------------------------------------------------------------------------------------------------------------
 568+ 94E2              ;
 569+ 94E2              ;	Prepara_draw
 570+ 94E2              ;
 571+ 94E2              ;	Es una rutina de carga.
 572+ 94E2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 94E2              ;
 574+ 94E2              ;	FUNCIONAMIENTO:
 575+ 94E2              ;
 576+ 94E2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 94E2              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 94E2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 94E2              ;
 580+ 94E2              ;	DESTRUYE:
 581+ 94E2              ;
 582+ 94E2              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 94E2
 584+ 94E2 21 AC 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 94E5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 94E6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 94E7 4E           	ld c,(hl)
 588+ 94E8 2A AE 89     	ld hl,(Posicion_actual)
 589+ 94EB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 94ED C9           	ret
 591+ 94EE
 592+ 94EE              ;----------------------------------------------------------------------------------------------------------------
 593+ 94EE              ;
 594+ 94EE              ;	5/08/22
 595+ 94EE              ;
 596+ 94EE              ;   NextScan.
 597+ 94EE              ;
 598+ 94EE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 94EE              ;
 600+ 94EE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 94EE              ;
 602+ 94EE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 94EE              ;
 604+ 94EE              ;       DESTRUIDOS: AF y HL !!!
 605+ 94EE              ;
 606+ 94EE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 94EE              ;
 608+ 94EE
 609+ 94EE 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 94EF 7C               ld a,h
 611+ 94F0 E6 07            and 7
 612+ 94F2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 94F3
 614+ 94F3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 94F4 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 94F6 6F               ld l,a
 617+ 94F7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 94F8
 619+ 94F8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 94F9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 94FB 67               ld h,a
 622+ 94FC C9               ret
 623+ 94FD
 624+ 94FD              ;----------------------------------------------------------------------------------------------------------------
 625+ 94FD              ;
 626+ 94FD              ;	5/08/22
 627+ 94FD              ;
 628+ 94FD              ;   PreviousScan.
 629+ 94FD              ;
 630+ 94FD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 94FD              ;
 632+ 94FD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 94FD              ;
 634+ 94FD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 94FD              ;
 636+ 94FD              ;       DESTRUIDOS: AF y HL !!!
 637+ 94FD              ;
 638+ 94FD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 94FD              ;
 640+ 94FD
 641+ 94FD 7C           PreviousScan ld a,h
 642+ 94FE 25               dec h               ; Dec H.
 643+ 94FF E6 07            and 7
 644+ 9501 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9502
 646+ 9502 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9503 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9505 6F               ld l,a
 649+ 9506 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9507
 651+ 9507 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9508 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 950A 67               ld h,a
 654+ 950B C9               ret
 655+ 950C
 656+ 950C
 657+ 950C
 658+ 950C
 659+ 950C
 660+ 950C
 661+ 950C
 662+ 950C
 663+ 950C
 664+ 950C
 665+ 950C
 666+ 950C
# file closed: Draw_XOR.asm
2146  950C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 950C
   2+ 950C              ; ******************************************************************************************************************************************************************************************
   3+ 950C              ;
   4+ 950C              ;   20/05/23
   5+ 950C              ;
   6+ 950C              ;	Recompone_posicion_inicio
   7+ 950C              ;
   8+ 950C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 950C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 950C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 950C              ;	_ a una u otra rutina.
  12+ 950C
  13+ 950C              Recompone_posicion_inicio
  14+ 950C
  15+ 950C 2A BE 89     	ld hl,(Posicion_inicio)
  16+ 950F 7D           	ld a,l
  17+ 9510 E6 1F        	and $1f
  18+ 9512 28 16        	jr z,1F
  19+ 9514
  20+ 9514 FE 1F        	cp $1f
  21+ 9516 28 0D        	jr z,3F
  22+ 9518
  23+ 9518 21 CD 89     	ld hl,Ctrl_2
  24+ 951B CB C6        	set 0,(hl)
  25+ 951D 2A B0 89     	ld hl,(Puntero_objeto)
  26+ 9520 22 E9 89     	ld (Repone_puntero_objeto),hl
  27+ 9523 18 08        	jr 2F
  28+ 9525
  29+ 9525 CD D3 96     3 call Mov_left
  30+ 9528 18 03        	jr 2F
  31+ 952A
  32+ 952A CD B0 95     1 call Mov_right
  33+ 952D 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9530 22 B0 89     	ld (Puntero_objeto),hl
  35+ 9533 C9           	ret
  36+ 9534
  37+ 9534              ; ******************************************************************************************************************************************************************************************
  38+ 9534              ;
  39+ 9534              ;   27/05/23
  40+ 9534              ;
  41+ 9534              ;	Mov_down
  42+ 9534              ;
  43+ 9534              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9534              ;
  45+ 9534              ;
  46+ 9534              Mov_down
  47+ 9534
  48+ 9534 CD 9E 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9537              ;																	; _ repone (Puntero_objeto).
  50+ 9537 21 C8 89     	ld hl,Ctrl_0
  51+ 953A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 953C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 953C              ; 																	; _ en el caso de que no lo haya.
  54+ 953C 3A D3 89     	ld a,(Vel_down)
  55+ 953F 47           	ld b,a
  56+ 9540 2A AE 89         ld hl,(Posicion_actual)
  57+ 9543 CD D9 AC     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9546 E6 02        	and 2
  59+ 9548 28 17        	jr z,1F
  60+ 954A
  61+ 954A              ; Nos encontramos en el último tercio de pantalla.
  62+ 954A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 954A
  64+ 954A 7C           	ld a,h
  65+ 954B FE 57        	cp $57
  66+ 954D 20 12        	jr nz,1F
  67+ 954F
  68+ 954F 7D           	ld a,l
  69+ 9550 C6 20        	add $20
  70+ 9552 30 0D        	jr nc,1F
  71+ 9554
  72+ 9554              ; ------------------------------
  73+ 9554              ;
  74+ 9554              ;	12/01/24
  75+ 9554
  76+ 9554              ;	call Reaparece_arriba
  77+ 9554 CD 60 98     	call Reinicio
  78+ 9557
  79+ 9557              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9557
  81+ 9557 3A 12 8A     	ld a,(Ctrl_3)
  82+ 955A CB CF        	set 1,a
  83+ 955C 32 12 8A     	ld (Ctrl_3),a
  84+ 955F
  85+ 955F 18 08        	jr 3F
  86+ 9561              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9561              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9561              ; ------------------------------
  89+ 9561
  90+ 9561 CD EE 94     1 call NextScan
  91+ 9564 22 AE 89     	ld (Posicion_actual),hl
  92+ 9567 10 DA            djnz 2B
  93+ 9569 CD F7 AC     3 call Genera_coordenadas
  94+ 956C C9           	ret
  95+ 956D
  96+ 956D              ; ******************************************************************************************************************************************************************************************
  97+ 956D              ;
  98+ 956D              ;   27/05/23
  99+ 956D              ;
 100+ 956D              ;	Mov_up
 101+ 956D              ;
 102+ 956D              ; 	Mueve el Sprite hacia arriba.
 103+ 956D              ;
 104+ 956D              ;
 105+ 956D              Mov_up
 106+ 956D
 107+ 956D CD 9E 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9570              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9570 21 C8 89     	ld hl,Ctrl_0
 110+ 9573 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9575              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9575              ; 																		; _ en el caso de que no lo haya.
 113+ 9575 3A D2 89     	ld a,(Vel_up)
 114+ 9578 47           	ld b,a
 115+ 9579 2A AE 89     	ld hl,(Posicion_actual)
 116+ 957C CD D9 AC     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 957F A7           	and a
 118+ 9580 20 10        	jr nz,1F
 119+ 9582
 120+ 9582              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9582              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9582
 123+ 9582 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9583 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9585 20 0B            jr nz,1F
 126+ 9587 7D               ld a,l
 127+ 9588 D6 20            sub $20
 128+ 958A 30 06            jr nc,1F
 129+ 958C 25               dec h
 130+ 958D
 131+ 958D              ; -----------------------------
 132+ 958D CD 41 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9590              ;	call Reinicio
 134+ 9590              ; -----------------------------
 135+ 9590
 136+ 9590 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9592 CD FD 94     1 call PreviousScan
 138+ 9595 22 AE 89     	ld (Posicion_actual),hl
 139+ 9598 10 E2            djnz 3B
 140+ 959A CD F7 AC     2 call Genera_coordenadas
 141+ 959D C9           	ret
 142+ 959E
 143+ 959E              ; -----------------------------
 144+ 959E              ;
 145+ 959E              ;	27/5/23
 146+ 959E              ;
 147+ 959E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 959E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 959E              ;
 150+ 959E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 959E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 959E              ;
 153+ 959E              ;	Modifica: A y (Puntero_objeto).
 154+ 959E
 155+ 959E 3A CD 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95A1 CB 47        	bit 0,a
 157+ 95A3 C8           	ret z
 158+ 95A4 CB 87        	res 0,a
 159+ 95A6 32 CD 89     	ld (Ctrl_2),a
 160+ 95A9 2A E9 89     	ld hl,(Repone_puntero_objeto)
 161+ 95AC 22 B0 89     	ld (Puntero_objeto),hl
 162+ 95AF C9           	ret
 163+ 95B0
 164+ 95B0              ; ******************************************************************************************************************************************************************************************
 165+ 95B0              ;
 166+ 95B0              ;	19/10/22
 167+ 95B0              ;
 168+ 95B0              ;	Mov_right.
 169+ 95B0              ;
 170+ 95B0              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95B0              ;
 172+ 95B0
 173+ 95B0 3A C8 89     Mov_right ld a,(Ctrl_0)
 174+ 95B3 CB 77        	bit 6,a
 175+ 95B5 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95B7
 177+ 95B7 CD EF 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95BA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95BB
 180+ 95BB 21 C8 89     	ld hl,Ctrl_0
 181+ 95BE CB E6        	set 4,(hl)
 182+ 95C0 18 52        	jr 8F
 183+ 95C2
 184+ 95C2 21 C8 89     10 ld hl,Ctrl_0
 185+ 95C5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95C7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95C7              ; 																	; _ en el caso de que no lo haya.
 188+ 95C7 3A B2 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95CA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95CC 20 46        	jr nz,8F
 191+ 95CE
 192+ 95CE 3A B4 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95D1 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95D2 28 40        	jr z,8F
 195+ 95D4
 196+ 95D4              ; ---------- ---------- ----------
 197+ 95D4              ;
 198+ 95D4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95D4
 200+ 95D4 3A D1 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95D7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95D9 28 11        	jr z,1F
 203+ 95DB 38 06        	jr c,6F
 204+ 95DD FE 04        	cp 4
 205+ 95DF 28 14        	jr z,7F
 206+ 95E1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95E3
 208+ 95E3              ; ---------- ---------- ----------
 209+ 95E3              ;
 210+ 95E3              ; Perfiles de velocidad
 211+ 95E3              ;
 212+ 95E3
 213+ 95E3 3A B4 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95E6 FE FE        	cp $fe
 215+ 95E8 20 2A        	jr nz,8F
 216+ 95EA 18 10        	jr 3F
 217+ 95EC 3A B4 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95EF FE FD        	cp $fd
 219+ 95F1 20 21        	jr nz,8F
 220+ 95F3 18 07        	jr 3F
 221+ 95F5 3A B4 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 95F8 FE FB        	cp $fb
 223+ 95FA 20 18        	jr nz,8F
 224+ 95FC
 225+ 95FC              ; ---------- ---------- ----------
 226+ 95FC
 227+ 95FC              3
 228+ 95FC CD 2F 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 95FF              ;	call Reinicio
 230+ 95FF
 231+ 95FF              ; ---------- ---------- ----------
 232+ 95FF              ;
 233+ 95FF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 95FF
 235+ 95FF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9601 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9602 CD 1B 96     	call DESPLZ_DER
 238+ 9605 C1           	pop bc
 239+ 9606 10 F9        	djnz 5B
 240+ 9608 2A AE 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 960B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 960C 22 AE 89     	ld (Posicion_actual),hl
 243+ 960F CD F7 AC     	call Genera_coordenadas
 244+ 9612 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9614
 246+ 9614              ; ---------- ---------- ----------
 247+ 9614
 248+ 9614 2A AE 89     8 ld hl,(Posicion_actual)
 249+ 9617 CD 1B 96     	call DESPLZ_DER
 250+ 961A C9           2 ret
 251+ 961B
 252+ 961B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 961B              ;
 254+ 961B              ;	22/9/22
 255+ 961B              ;
 256+ 961B
 257+ 961B CD 2A 96     DESPLZ_DER call Desplaza_derecha
 258+ 961E CD 76 96         call modifica_parametros_1er_DESPLZ_2
 259+ 9621 CD 9F 96         call Ciclo_completo
 260+ 9624 21 C8 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9627 CB FE        	set 7,(hl)
 262+ 9629 C9           	ret
 263+ 962A
 264+ 962A              ; ******************************************************************************************************************************************************************************************
 265+ 962A              ;	15/02/23
 266+ 962A              ;
 267+ 962A
 268+ 962A 3A D1 89     Desplaza_derecha ld a,(Vel_right)
 269+ 962D 47           	ld b,a
 270+ 962E 2A BA 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9631 23           1 inc hl
 272+ 9632 23           	inc hl
 273+ 9633 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9635 22 BA 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9638 CD 45 8D     	call Extrae_address
 276+ 963B 22 B0 89     	ld (Puntero_objeto),hl
 277+ 963E
 278+ 963E              ; Modifica (Puntero_DESPLZ_izq).
 279+ 963E
 280+ 963E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 963E              ; Cuántos movimientos hemos hecho ??
 282+ 963E              ; DE contiene (Puntero_DESPLZ_der).
 283+ 963E
 284+ 963E 2A B6 89     7 ld hl,(Indice_Sprite_der)
 285+ 9641 EB           	ex de,hl
 286+ 9642 A7           	and a
 287+ 9643 ED 52        	sbc hl,de
 288+ 9645 CB 3D        	srl l
 289+ 9647 3E 08        6 ld a,8
 290+ 9649 95           	sub l
 291+ 964A 30 1E        	jr nc,3F
 292+ 964C
 293+ 964C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 964C              ; B="0".
 295+ 964C
 296+ 964C 04           4 inc b
 297+ 964D 3C           	inc a
 298+ 964E 20 FC        	jr nz,4B
 299+ 9650 78           	ld a,b
 300+ 9651 08           	ex af,af
 301+ 9652 2A B6 89     	ld hl,(Indice_Sprite_der)
 302+ 9655 23           5 inc hl
 303+ 9656 23           	inc hl
 304+ 9657 10 FC        	djnz 5B
 305+ 9659 22 BA 89     	ld (Puntero_DESPLZ_der),hl
 306+ 965C CD 45 8D     	call Extrae_address
 307+ 965F 22 B0 89     	ld (Puntero_objeto),hl
 308+ 9662
 309+ 9662              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9662              ; _(Posicion_actual).
 311+ 9662
 312+ 9662 21 AE 89     	ld hl,Posicion_actual
 313+ 9665 34           	inc (hl)
 314+ 9666 08               ex af,af
 315+ 9667 6F           	ld l,a
 316+ 9668 18 DD        	jr 6B
 317+ 966A
 318+ 966A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 966A
 320+ 966A 47           3 ld b,a
 321+ 966B 2A B8 89     	ld hl,(Indice_Sprite_izq)
 322+ 966E 23           2 inc hl
 323+ 966F 23           	inc hl
 324+ 9670 10 FC        	djnz 2B
 325+ 9672 22 BC 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9675 C9           8 ret
 327+ 9676
 328+ 9676              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9676              ;
 330+ 9676              ;	24/7/22
 331+ 9676              ;
 332+ 9676              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9676              ;
 334+ 9676              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9676              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9676              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9676
 338+ 9676 3A B4 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9679 A7           	and a
 340+ 967A 20 1F        	jr nz,1F
 341+ 967C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 967E 32 B4 89         ld (CTRL_DESPLZ),a
 343+ 9681
 344+ 9681 21 AD 89     	ld hl,Columns
 345+ 9684 34           	inc (hl)
 346+ 9685 3A C0 89     	ld a,(Cuad_objeto)
 347+ 9688 E6 01        	and 1
 348+ 968A 28 0F        	jr z,1F
 349+ 968C 2A AE 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 968F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9690 22 AE 89     	ld (Posicion_actual),hl
 352+ 9693 CD F7 AC     	call Genera_coordenadas
 353+ 9696 CD FB 97     	call Inc_CTRL_DESPLZ
 354+ 9699 18 03        	jr 2F
 355+ 969B CD FB 97     1 call Inc_CTRL_DESPLZ
 356+ 969E C9           2 ret
 357+ 969F
 358+ 969F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 969F              ;
 360+ 969F              ;	24/7/22
 361+ 969F              ;
 362+ 969F              ;	Ciclo_completo.
 363+ 969F              ;
 364+ 969F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 969F              ;
 366+ 969F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 969F              ; 	Decrementamos (Columns).
 368+ 969F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 969F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 969F
 371+ 969F
 372+ 969F 3A B4 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96A2 FE FF        	cp $ff
 374+ 96A4 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96A6 E6 F0        	and $f0
 376+ 96A8 20 28        	jr nz,3F
 377+ 96AA
 378+ 96AA              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96AA
 380+ 96AA 3A B4 89     	ld a,(CTRL_DESPLZ)
 381+ 96AD 47           	ld b,a
 382+ 96AE 3E F8        	ld a,$f8
 383+ 96B0 80           	add b
 384+ 96B1 32 B4 89     	ld (CTRL_DESPLZ),a
 385+ 96B4 18 1C        	jr 3F
 386+ 96B6 21 AD 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96B9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96BA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96BB 32 B4 89     	ld (CTRL_DESPLZ),a
 390+ 96BE 3A C0 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96C1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96C3 20 0A        	jr nz,2F
 393+ 96C5 2A AE 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96C8 23           	inc hl
 395+ 96C9 22 AE 89     	ld (Posicion_actual),hl
 396+ 96CC CD F7 AC     	call Genera_coordenadas
 397+ 96CF
 398+ 96CF              ; Inicia el puntero de Sprite.
 399+ 96CF
 400+ 96CF CD 5A 8D     2 call Inicia_puntero_objeto_der
 401+ 96D2 C9           3 ret
 402+ 96D3
 403+ 96D3              ; ******************************************************************************************************************************************************************************************
 404+ 96D3              ;
 405+ 96D3              ;	15/02/23
 406+ 96D3              ;
 407+ 96D3              ;	Mov_left.
 408+ 96D3              ;
 409+ 96D3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96D3              ;
 411+ 96D3              Mov_left
 412+ 96D3
 413+ 96D3 21 C8 89     	ld hl,Ctrl_0
 414+ 96D6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96D8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96D8              ; 																	; _ en el caso de que no lo haya.
 417+ 96D8 3A C8 89     	ld a,(Ctrl_0)
 418+ 96DB CB 77        	bit 6,a
 419+ 96DD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96DF
 421+ 96DF CD F5 97     	call Stop_Amadeus_left
 422+ 96E2 C8           	ret z
 423+ 96E3 20 4A        	jr nz,8F
 424+ 96E5
 425+ 96E5 3A B2 89     11 ld a,(Coordenada_X)
 426+ 96E8 A7           	and a
 427+ 96E9 20 44        	jr nz,8F
 428+ 96EB
 429+ 96EB 3A B4 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96EE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96EF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96F1
 433+ 96F1              ; ---------- ---------- ----------
 434+ 96F1
 435+ 96F1 3A D0 89     	ld a,(Vel_left)
 436+ 96F4 FE 02        	cp 2
 437+ 96F6 28 0F        	jr z,1F
 438+ 96F8 38 04        	jr c,6F
 439+ 96FA FE 04        	cp 4
 440+ 96FC 28 12        	jr z,7F
 441+ 96FE
 442+ 96FE              ; ---------- ---------- ----------
 443+ 96FE
 444+ 96FE 3A B4 89     6 ld a,(CTRL_DESPLZ)
 445+ 9701 FE F8        	cp $f8
 446+ 9703 20 2A        	jr nz,8F
 447+ 9705 18 10        	jr 4F
 448+ 9707 3A B4 89     1 ld a,(CTRL_DESPLZ)
 449+ 970A FE F9        	cp $f9
 450+ 970C 20 21        	jr nz,8F
 451+ 970E 18 07        	jr 4F
 452+ 9710 3A B4 89     7 ld a,(CTRL_DESPLZ)
 453+ 9713 FE FB        	cp $fb
 454+ 9715 20 18        	jr nz,8F
 455+ 9717
 456+ 9717              ; ---------- ---------- ----------
 457+ 9717
 458+ 9717              4
 459+ 9717 CD 1D 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 971A              ;	call Reinicio
 461+ 971A
 462+ 971A              ; ---------- ---------- ----------
 463+ 971A
 464+ 971A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 971C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 971D
 467+ 971D              ;	ld hl,(Indice_Sprite_izq)
 468+ 971D              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 971D
 470+ 971D CD 36 97     	call DESPLZ_IZQ
 471+ 9720 C1           	pop bc
 472+ 9721 10 F9        	djnz 5B
 473+ 9723 2A AE 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9726 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9727 22 AE 89     	ld (Posicion_actual),hl
 476+ 972A CD F7 AC     	call Genera_coordenadas
 477+ 972D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 972F
 479+ 972F              ; ---------- ---------- ----------
 480+ 972F
 481+ 972F              ; Movemos, no hay recolocación.
 482+ 972F
 483+ 972F 2A AE 89     8 ld hl,(Posicion_actual)
 484+ 9732 CD 36 97     	call DESPLZ_IZQ
 485+ 9735 C9           2 ret
 486+ 9736
 487+ 9736              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9736              ;
 489+ 9736              ;	22/9/22
 490+ 9736
 491+ 9736              DESPLZ_IZQ
 492+ 9736
 493+ 9736 CD 45 97     	call Desplaza_izquierda
 494+ 9739 CD 91 97         call modifica_parametros_1er_DESPLZ
 495+ 973C CD B9 97     	call Ciclo_completo_2
 496+ 973F 21 C8 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9742 CB BE        	res 7,(hl)
 498+ 9744 C9           	ret
 499+ 9745
 500+ 9745              Desplaza_izquierda
 501+ 9745
 502+ 9745 3A D0 89     	ld a,(Vel_left)
 503+ 9748 47           	ld b,a
 504+ 9749 2A BC 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 974C 23           1 inc hl
 506+ 974D 23           	inc hl
 507+ 974E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9750 22 BC 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9753 CD 45 8D     	call Extrae_address
 510+ 9756 22 B0 89     	ld (Puntero_objeto),hl
 511+ 9759
 512+ 9759              ; Modifica (Puntero_DESPLZ_der).
 513+ 9759
 514+ 9759              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9759              ; Cuántos movimientos hemos hecho ??
 516+ 9759              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9759
 518+ 9759 2A B8 89     7 ld hl,(Indice_Sprite_izq)
 519+ 975C EB           	ex de,hl
 520+ 975D A7           	and a
 521+ 975E ED 52        	sbc hl,de
 522+ 9760 CB 3D        	srl l
 523+ 9762 3E 08        6 ld a,8
 524+ 9764 95           	sub l
 525+ 9765 30 1E        	jr nc,3F
 526+ 9767
 527+ 9767              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9767              ; B="0".
 529+ 9767
 530+ 9767 04           4 inc b
 531+ 9768 3C           	inc a
 532+ 9769 20 FC        	jr nz,4B
 533+ 976B 78           	ld a,b
 534+ 976C 08           	ex af,af
 535+ 976D 2A B8 89     	ld hl,(Indice_Sprite_izq)
 536+ 9770 23           5 inc hl
 537+ 9771 23           	inc hl
 538+ 9772 10 FC        	djnz 5B
 539+ 9774 22 BC 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9777 CD 45 8D     	call Extrae_address
 541+ 977A 22 B0 89     	ld (Puntero_objeto),hl
 542+ 977D
 543+ 977D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 977D              ; _(Posicion_actual).
 545+ 977D
 546+ 977D 21 AE 89     	ld hl,Posicion_actual
 547+ 9780 35           	dec (hl)
 548+ 9781 08           	ex af,af
 549+ 9782 6F           	ld l,a
 550+ 9783 18 DD        	jr 6B
 551+ 9785
 552+ 9785              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9785
 554+ 9785 47           3 ld b,a
 555+ 9786 2A B6 89     	ld hl,(Indice_Sprite_der)
 556+ 9789 23           2 inc hl
 557+ 978A 23           	inc hl
 558+ 978B 10 FC        	djnz 2B
 559+ 978D 22 BA 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9790 C9           8 ret
 561+ 9791
 562+ 9791              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9791              ;
 564+ 9791              ;	modifica_parametros_1er_DESPLZ
 565+ 9791              ;
 566+ 9791              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9791              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9791              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9791
 570+ 9791 3A B4 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9794 A7           	and a
 572+ 9795 20 1E        	jr nz,1F
 573+ 9797 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9798 32 B4 89         ld (CTRL_DESPLZ),a
 575+ 979B 21 AD 89     	ld hl,Columns
 576+ 979E 34           	inc (hl)
 577+ 979F 3A C0 89     	ld a,(Cuad_objeto)
 578+ 97A2 E6 01        	and 1
 579+ 97A4 20 0F        	jr nz,1F
 580+ 97A6 2A AE 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97A9 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97AA 22 AE 89     	ld (Posicion_actual),hl
 583+ 97AD CD F7 AC     	call Genera_coordenadas
 584+ 97B0 CD 0C 98     	call Dec_CTRL_DESPLZ
 585+ 97B3 18 03        	jr 2F
 586+ 97B5 CD 0C 98     1 call Dec_CTRL_DESPLZ
 587+ 97B8 C9           2 ret
 588+ 97B9
 589+ 97B9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97B9
 591+ 97B9 3A B4 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97BC FE F7        	cp $f7
 593+ 97BE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97C0 30 2C        	jr nc,3F
 595+ 97C2
 596+ 97C2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97C2
 598+ 97C2 06 00        	ld b,0
 599+ 97C4 04           4 inc b
 600+ 97C5 3C           	inc a
 601+ 97C6 FE F7        	cp $f7
 602+ 97C8 20 FA        	jr nz,4B
 603+ 97CA 3E FF        	ld a,$ff
 604+ 97CC 90           	sub b
 605+ 97CD 32 B4 89     	ld (CTRL_DESPLZ),a
 606+ 97D0 18 1C        	jr 3F
 607+ 97D2
 608+ 97D2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97D2
 610+ 97D2 21 AD 89     1 ld hl,Columns
 611+ 97D5 35           	dec (hl)
 612+ 97D6 AF           	xor a
 613+ 97D7 32 B4 89     	ld (CTRL_DESPLZ),a
 614+ 97DA 3A C0 89     	ld a,(Cuad_objeto)
 615+ 97DD E6 01        	and 1
 616+ 97DF 28 0A        	jr z,2F
 617+ 97E1 2A AE 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97E4 2B           	dec hl
 619+ 97E5 22 AE 89     	ld (Posicion_actual),hl
 620+ 97E8 CD F7 AC     	call Genera_coordenadas
 621+ 97EB
 622+ 97EB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97EB
 624+ 97EB CD 6D 8D     2 call Inicia_puntero_objeto_izq
 625+ 97EE C9           3 ret
 626+ 97EF
 627+ 97EF              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97EF              ;
 629+ 97EF              ;	19/10/22
 630+ 97EF              ;
 631+ 97EF              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97EF              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97EF
 634+ 97EF 3A B2 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97F2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97F4 C9           	ret
 637+ 97F5
 638+ 97F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97F5              ;
 640+ 97F5              ;	19/10/22
 641+ 97F5              ;
 642+ 97F5              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97F5              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97F5
 645+ 97F5 3A B2 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 97F8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 97FA C9           	ret
 648+ 97FB
 649+ 97FB              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 97FB              ;
 651+ 97FB              ;	24/7/22
 652+ 97FB              ;
 653+ 97FB              ;	Inc_CTRL_DESPLZ
 654+ 97FB              ;
 655+ 97FB              ;
 656+ 97FB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 97FB
 658+ 97FB 21 B4 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 97FE 3A D1 89     	ld a,(Vel_right)
 660+ 9801 A7           	and a
 661+ 9802 28 06        	jr z,1F
 662+ 9804 47           	ld b,a
 663+ 9805 34           3 inc (hl)
 664+ 9806 10 FD        	djnz 3B
 665+ 9808 18 01        	jr 2F
 666+ 980A 34           1 inc (hl)
 667+ 980B C9           2 ret
 668+ 980C
 669+ 980C              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 980C              ;
 671+ 980C              ;	5/2/23
 672+ 980C              ;
 673+ 980C              ;	Dec_CTRL_DESPLZ
 674+ 980C              ;
 675+ 980C              ;
 676+ 980C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 980C
 678+ 980C 21 B4 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 980F 3A D0 89     	ld a,(Vel_left)
 680+ 9812 A7           	and a
 681+ 9813 28 06        	jr z,1F
 682+ 9815 47           	ld b,a
 683+ 9816 35           3 dec (hl)
 684+ 9817 10 FD        	djnz 3B
 685+ 9819 18 01        	jr 2F
 686+ 981B 35           1 dec (hl)
 687+ 981C C9           2 ret
 688+ 981D
 689+ 981D              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 981D
 691+ 981D 2A AE 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9820 01 1F 00     	ld bc,31
 693+ 9823 A7           	and a
 694+ 9824 ED 4A        	adc hl,bc
 695+ 9826 22 AE 89     	ld (Posicion_actual),hl
 696+ 9829 21 C8 89     	ld hl,Ctrl_0														; $xxx1
 697+ 982C CB C6        	set 0,(hl)
 698+ 982E C9           	ret
 699+ 982F
 700+ 982F              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 982F
 702+ 982F 2A AE 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9832 01 1F 00     	ld bc,31
 704+ 9835 A7           	and a
 705+ 9836 ED 42        	sbc hl,bc
 706+ 9838 22 AE 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 983B 21 C8 89     	ld hl,Ctrl_0
 708+ 983E CB CE        	set 1,(hl)
 709+ 9840 C9           	ret
 710+ 9841
 711+ 9841              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9841
 713+ 9841 24           Reaparece_abajo inc h
 714+ 9842 01 E0 17     	ld bc,$17e0
 715+ 9845 A7           	and a
 716+ 9846 ED 4A        	adc hl,bc
 717+ 9848 22 AE 89     	ld (Posicion_actual),hl
 718+ 984B 21 C8 89     	ld hl,Ctrl_0
 719+ 984E CB D6        	set 2,(hl)
 720+ 9850 C9           	ret
 721+ 9851
 722+ 9851              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9851
 724+ 9851 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9854 A7           	and a
 726+ 9855 ED 42        	sbc hl,bc
 727+ 9857 22 AE 89     	ld (Posicion_actual),hl
 728+ 985A 21 C8 89     	ld hl,Ctrl_0
 729+ 985D CB DE        	set 3,(hl)
 730+ 985F C9           	ret
 731+ 9860
 732+ 9860              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9860              ;
 734+ 9860              ;	15/07/23
 735+ 9860
 736+ 9860              Reinicio
 737+ 9860
 738+ 9860              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9860
 740+ 9860 AF           	xor a
 741+ 9861 21 E0 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9864 CD 82 98     	call Limpia_contenido_hl
 743+ 9867
 744+ 9867 21 AE 89     	ld hl,Posicion_actual
 745+ 986A CD 82 98     	call Limpia_contenido_hl
 746+ 986D
 747+ 986D CD D0 AA     	call Inicializa_Puntero_indice_mov
 748+ 9870 CD 69 99     	call Inicia_Puntero_mov
 749+ 9873
 750+ 9873 21 E2 89     	ld hl,Incrementa_puntero
 751+ 9876 06 05        	ld b,5
 752+ 9878 77           1 ld (hl),a
 753+ 9879 23           	inc hl
 754+ 987A 10 FC        	djnz 1B
 755+ 987C
 756+ 987C 21 CD 89     	ld hl,Ctrl_2
 757+ 987F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9881
 759+ 9881 C9           	ret
 760+ 9882
 761+ 9882 77           Limpia_contenido_hl	ld (hl),a
 762+ 9883 23           	inc hl
 763+ 9884 77           	ld (hl),a
 764+ 9885 C9           	ret
 765+ 9886
 766+ 9886              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9886              ;
 768+ 9886              ;	27/5/24
 769+ 9886              ;
 770+ 9886
 771+ 9886              ;	Actualiza movimiento.
 772+ 9886
 773+ 9886              Amadeus_a_izquierda
 774+ 9886
 775+ 9886 2A C4 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)					;	Actualiza variable de 16 bits.
 776+ 9889 2B           	dec hl
 777+ 988A 2B           	dec hl
 778+ 988B 2B           	dec hl
 779+ 988C 2B           	dec hl
 780+ 988D 22 C4 89     	ld (Puntero_de_almacen_de_mov_masticados),hl					;	Actualiza variable de 8 bits.
 781+ 9890
 782+ 9890              ;	Actualiza contador de movimientos.
 783+ 9890
 784+ 9890 21 C6 89     	ld hl,Contador_de_mov_masticados
 785+ 9893 35           	dec (hl)
 786+ 9894
 787+ 9894 C9           	ret
 788+ 9895
 789+ 9895              ; ----------------------------------------------------------------------------------------------------------------
 790+ 9895              ;
 791+ 9895              ;	27/5/24
 792+ 9895              ;
 793+ 9895
 794+ 9895              Amadeus_a_derecha
 795+ 9895
 796+ 9895 21 C4 89     	ld hl,Puntero_de_almacen_de_mov_masticados
 797+ 9898 34           	inc (hl)
 798+ 9899 34           	inc (hl)
 799+ 989A 34           	inc (hl)
 800+ 989B 34           	inc (hl)
 801+ 989C
 802+ 989C 21 C6 89     	ld hl,Contador_de_mov_masticados
 803+ 989F 34           	inc (hl)
 804+ 98A0
 805+ 98A0 C9           	ret
 806+ 98A1
# file closed: Direcciones.asm
2147  98A1              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 98A1              ; ----- ----- ----- ----- -----
   2+ 98A1              ;
   3+ 98A1              ;   28/12/23
   4+ 98A1
   5+ 98A1              Movimiento
   6+ 98A1
   7+ 98A1              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 98A1
   9+ 98A1 3A CD 89         ld a,(Ctrl_2)
  10+ 98A4 CB 57            bit 2,a
  11+ 98A6 20 1B            jr nz, Desplazamiento_iniciado
  12+ 98A8
  13+ 98A8 2A DE 89         ld hl,(Puntero_mov)
  14+ 98AB 7E               ld a,(hl)
  15+ 98AC
  16+ 98AC              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 98AC
  18+ 98AC              Inicia_desplazamiento.
  19+ 98AC
  20+ 98AC              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 98AC
  22+ 98AC CD 9F 99         call Ajusta_velocidad_desplazamiento
  23+ 98AF
  24+ 98AF              ; Iniciamos (Repetimos_mov).
  25+ 98AF
  26+ 98AF 7E               ld a,(hl)
  27+ 98B0 E6 0F            and $0f
  28+ 98B2 32 E4 89         ld (Repetimos_desplazamiento),a
  29+ 98B5 32 E5 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98B8
  31+ 98B8              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98B8
  33+ 98B8 23               inc hl
  34+ 98B9 7E               ld a,(hl)
  35+ 98BA 32 E7 89         ld (Cola_de_desplazamiento),a
  36+ 98BD 2B               dec hl
  37+ 98BE
  38+ 98BE 21 CD 89         ld hl,Ctrl_2
  39+ 98C1 CB D6            set 2,(hl)
  40+ 98C3
  41+ 98C3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98C3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98C3
  44+ 98C3              Desplazamiento_iniciado
  45+ 98C3
  46+ 98C3 CD 73 99         call Aplica_desplazamiento
  47+ 98C6
  48+ 98C6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98C6
  50+ 98C6 3A 12 8A         ld a,(Ctrl_3)
  51+ 98C9 CB 4F            bit 1,a
  52+ 98CB C0               ret nz
  53+ 98CC
  54+ 98CC 21 E4 89     3 ld hl,Repetimos_desplazamiento
  55+ 98CF 35               dec (hl)
  56+ 98D0 C0               ret nz
  57+ 98D1
  58+ 98D1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98D1              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98D1              ; Analiza (Cola_de_desplazamiento).
  61+ 98D1
  62+ 98D1 3A E7 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98D4 A7               and a
  64+ 98D5 CC C8 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98D8 28 30            jr z,Reinicia_el_movimiento
  66+ 98DA
  67+ 98DA FE FF            cp $ff
  68+ 98DC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98DE
  70+ 98DE FE FE            cp $fe
  71+ 98E0 CC 4D 99         call z,Fijamos_bucle
  72+ 98E3 28 25            jr z,Reinicia_el_movimiento
  73+ 98E5
  74+ 98E5 FE FD            cp $fd
  75+ 98E7 20 11            jr nz,1F
  76+ 98E9
  77+ 98E9              ; ---
  78+ 98E9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98E9
  80+ 98E9 3A CD 89         ld a,(Ctrl_2)
  81+ 98EC CB 5F            bit 3,a
  82+ 98EE 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98F0
  84+ 98F0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98F0
  86+ 98F0 21 CD 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98F3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98F5
  89+ 98F5 CD 5E 99         call Inicia_Repetimos_movimiento
  90+ 98F8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98FA              ; ---
  92+ 98FA
  93+ 98FA FE 01        1 cp 1
  94+ 98FC CA 37 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98FF
  96+ 98FF 3D               dec a
  97+ 9900 32 E7 89         ld (Cola_de_desplazamiento),a
  98+ 9903
  99+ 9903 3A E5 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9906 32 E4 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9909              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9909 C9               ret
 103+ 990A
 104+ 990A              Reinicia_el_movimiento
 105+ 990A
 106+ 990A 3A CD 89         ld a,(Ctrl_2)
 107+ 990D CB 5F            bit 3,a
 108+ 990F 28 1B            jr z,2F
 109+ 9911
 110+ 9911              ; (Cola_de_desplazamiento)="254".
 111+ 9911
 112+ 9911 21 E6 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9914 35               dec (hl)
 114+ 9915 20 15            jr nz,2F
 115+ 9917
 116+ 9917              ; Fin de las repeticiones del último movimiento.
 117+ 9917
 118+ 9917 21 CD 89         ld hl,Ctrl_2
 119+ 991A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 991C
 121+ 991C 2A DE 89         ld hl,(Puntero_mov)
 122+ 991F 23               inc hl
 123+ 9920 23               inc hl
 124+ 9921 23               inc hl
 125+ 9922 22 DE 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9925              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9925 7E               ld a,(hl)
 128+ 9926 32 E7 89         ld (Cola_de_desplazamiento),a
 129+ 9929
 130+ 9929 C3 D1 98         jp Cola
 131+ 992C
 132+ 992C CD 69 99     2 call Inicia_Puntero_mov
 133+ 992F
 134+ 992F 21 CD 89         ld hl,Ctrl_2
 135+ 9932 CB 96            res 2,(hl)
 136+ 9934
 137+ 9934 C3 A1 98         jp Movimiento
 138+ 9937
 139+ 9937              Siguiente_desplazamiento
 140+ 9937
 141+ 9937              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9937              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9937
 144+ 9937 21 CD 89         ld hl,Ctrl_2
 145+ 993A CB 96            res 2,(hl)
 146+ 993C
 147+ 993C 2A DE 89         ld hl,(Puntero_mov)
 148+ 993F 23               inc hl
 149+ 9940 23               inc hl
 150+ 9941 22 DE 89         ld (Puntero_mov),hl
 151+ 9944
 152+ 9944 7E               ld a,(hl)
 153+ 9945 A7               and a
 154+ 9946 CC C8 99         call z,Incrementa_Puntero_indice_mov
 155+ 9949 CA 0A 99         jp z,Reinicia_el_movimiento
 156+ 994C
 157+ 994C C9               ret
 158+ 994D
 159+ 994D              ; Subrutinas -----------------------------------------
 160+ 994D              ; ---------- --------- --------- ---------- ----------
 161+ 994D              ;
 162+ 994D              ;   24/07/23
 163+ 994D              ;
 164+ 994D              ;   Fijamos_bucle
 165+ 994D              ;
 166+ 994D              ;
 167+ 994D
 168+ 994D              Fijamos_bucle
 169+ 994D
 170+ 994D 3A E2 89         ld a,(Incrementa_puntero)
 171+ 9950 3C               inc a
 172+ 9951 32 E3 89         ld (Incrementa_puntero_backup),a
 173+ 9954
 174+ 9954 CD C8 99         call Incrementa_Puntero_indice_mov
 175+ 9957 2A DC 89         ld hl,(Puntero_indice_mov)
 176+ 995A 22 E0 89         ld (Puntero_indice_mov_bucle),hl
 177+ 995D C9               ret
 178+ 995E
 179+ 995E              ; ---------- --------- --------- ---------- ----------
 180+ 995E              ;
 181+ 995E              ;   07/7/23
 182+ 995E              ;
 183+ 995E              ;   Inicia_Repetimos_movimiento
 184+ 995E              ;
 185+ 995E              ;
 186+ 995E
 187+ 995E              Inicia_Repetimos_movimiento
 188+ 995E
 189+ 995E              ; Iniciamos (Repetimos_movimiento).
 190+ 995E
 191+ 995E DD 2A DE 89      ld ix,(Puntero_mov)
 192+ 9962 DD 7E 02         ld a,(ix+2)
 193+ 9965 32 E6 89         ld (Repetimos_movimiento),a
 194+ 9968
 195+ 9968 C9               ret
 196+ 9969
 197+ 9969              ; ---------- --------- --------- ---------- ----------
 198+ 9969              ;
 199+ 9969              ;   26/6/23
 200+ 9969              ;
 201+ 9969              ;   Inicia_Puntero_mov
 202+ 9969              ;
 203+ 9969              ;
 204+ 9969
 205+ 9969 2A DC 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 996C CD 45 8D         call Extrae_address
 207+ 996F 22 DE 89         ld (Puntero_mov),hl
 208+ 9972 C9               ret
 209+ 9973
 210+ 9973              ; ---------- --------- --------- ---------- ----------
 211+ 9973              ;
 212+ 9973              ;   27/06/23
 213+ 9973              ;
 214+ 9973              ;   Aplica_movimiento.
 215+ 9973
 216+ 9973              Aplica_desplazamiento
 217+ 9973
 218+ 9973              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9973
 220+ 9973 2A DE 89         ld hl, (Puntero_mov)
 221+ 9976
 222+ 9976 7E               ld a,(hl)
 223+ 9977 E6 F0            and $f0
 224+ 9979 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 997A
 226+ 997A CB 7E            bit 7,(hl)
 227+ 997C 28 03            jr z,1F
 228+ 997E CD 6D 95         call Mov_up
 229+ 9981 2A DE 89     1 ld hl, (Puntero_mov)
 230+ 9984 CB 76            bit 6,(hl)
 231+ 9986 28 03            jr z,2F
 232+ 9988 CD 34 95         call Mov_down
 233+ 998B
 234+ 998B              ; Se ha aplicado reinicio ???
 235+ 998B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 998B
 237+ 998B              ;    ld a,(Ctrl_3)
 238+ 998B              ;    bit 1,a
 239+ 998B              ;    ret nz
 240+ 998B
 241+ 998B 2A DE 89     2 ld hl, (Puntero_mov)
 242+ 998E CB 6E            bit 5,(hl)
 243+ 9990 28 03            jr z,3F
 244+ 9992 CD D3 96         call Mov_left
 245+ 9995 2A DE 89     3 ld hl, (Puntero_mov)
 246+ 9998 CB 66            bit 4,(hl)
 247+ 999A C8               ret z
 248+ 999B CD B0 95         call Mov_right
 249+ 999E C9               ret
 250+ 999F
 251+ 999F              ; ---------- --------- --------- ---------- ----------
 252+ 999F              ;
 253+ 999F              ;   26/06/23
 254+ 999F              ;
 255+ 999F              ;   Ajusta_velocidad_desplazamiento.
 256+ 999F
 257+ 999F              Ajusta_velocidad_desplazamiento
 258+ 999F
 259+ 999F              ; 1er byte de la cadena de movimiento.
 260+ 999F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 999F
 262+ 999F CD BD 99         call Extrae_nibble_alto
 263+ 99A2
 264+ 99A2 32 D2 89         ld (Vel_up),a
 265+ 99A5 79               ld a,c
 266+ 99A6 E6 0F            and $0f
 267+ 99A8 32 D3 89         ld (Vel_down),a
 268+ 99AB
 269+ 99AB              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 99AB              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 99AB
 272+ 99AB 23               inc hl
 273+ 99AC CD BD 99         call Extrae_nibble_alto
 274+ 99AF
 275+ 99AF 32 D0 89         ld (Vel_left),a
 276+ 99B2 79               ld a,c
 277+ 99B3 E6 0F            and $0f
 278+ 99B5 32 D1 89         ld (Vel_right),a
 279+ 99B8
 280+ 99B8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99B8
 282+ 99B8 23               inc hl
 283+ 99B9 22 DE 89         ld (Puntero_mov),hl
 284+ 99BC C9               ret
 285+ 99BD
 286+ 99BD 06 04        Extrae_nibble_alto ld b,4
 287+ 99BF 7E               ld a,(hl)
 288+ 99C0 4F               ld c,a
 289+ 99C1 E6 F0            and $f0
 290+ 99C3 CB 3F        1 srl a
 291+ 99C5 10 FC            djnz 1B
 292+ 99C7 C9               ret
 293+ 99C8
 294+ 99C8              ; ---------- --------- --------- ---------- ----------
 295+ 99C8              ;
 296+ 99C8              ;   5/7/23
 297+ 99C8              ;
 298+ 99C8              ;   Incrementa_Puntero_indice_mov
 299+ 99C8
 300+ 99C8              Incrementa_Puntero_indice_mov
 301+ 99C8
 302+ 99C8 21 E2 89         ld hl,Incrementa_puntero
 303+ 99CB 34               inc (hl)
 304+ 99CC
 305+ 99CC 2A DC 89         ld hl,(Puntero_indice_mov)
 306+ 99CF 01 02 00         ld bc,2
 307+ 99D2 A7               and a
 308+ 99D3 09               add hl,bc
 309+ 99D4 22 DC 89         ld (Puntero_indice_mov),hl
 310+ 99D7
 311+ 99D7 7E               ld a,(hl)
 312+ 99D8 A7               and a
 313+ 99D9
 314+ 99D9              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99D9
 316+ 99D9              ;    jr z,$
 317+ 99D9
 318+ 99D9              ;! Reinicia el Patrón de movimiento.
 319+ 99D9
 320+ 99D9 CC DE 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99DC
 322+ 99DC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99DD
 324+ 99DD C9               ret
 325+ 99DE
 326+ 99DE              ; ---------- --------- --------- ---------- ----------
 327+ 99DE              ;
 328+ 99DE              ;   15/01/24
 329+ 99DE              ;
 330+ 99DE              ;   Inicializa_Puntero_indice_mov
 331+ 99DE
 332+ 99DE              Inicializa_Puntero_indice_mov_2
 333+ 99DE
 334+ 99DE              ; Existe etiqueta de bucle principal???
 335+ 99DE
 336+ 99DE 2A E0 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99E1 24               inc h
 338+ 99E2 25               dec h
 339+ 99E3 28 05            jr z,2F
 340+ 99E5
 341+ 99E5 22 DC 89         ld (Puntero_indice_mov),hl
 342+ 99E8 18 14            jr 3F
 343+ 99EA
 344+ 99EA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99EA
 346+ 99EA 3A E2 89     2 ld a,(Incrementa_puntero)
 347+ 99ED 47               ld b,a
 348+ 99EE
 349+ 99EE 2A DC 89         ld hl,(Puntero_indice_mov)
 350+ 99F1 2B           1 dec hl
 351+ 99F2 2B               dec hl
 352+ 99F3 10 FC            djnz 1B
 353+ 99F5 22 DC 89         ld (Puntero_indice_mov),hl
 354+ 99F8
 355+ 99F8 AF               xor a
 356+ 99F9 32 E2 89         ld (Incrementa_puntero),a
 357+ 99FC 18 06            jr 4F
 358+ 99FE
 359+ 99FE 3A E3 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9A01 32 E2 89         ld (Incrementa_puntero),a
 361+ 9A04 C9           4 ret
 362+ 9A05
 363+ 9A05              ; ----------------------------------------------------------------------
 364+ 9A05              ;
 365+ 9A05              ;   30/01/24
 366+ 9A05              ;
 367+ 9A05              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9A05
 369+ 9A05 3A AB 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9A08 CD 60 AC         call Calcula_salto_en_BC
 371+ 9A0B 21 D4 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A0E A7               and a
 373+ 9A0F ED 4A            adc hl,bc
 374+ 9A11 C9               ret
 375+ 9A12
 376+ 9A12              ; ----------------------------------------------------------------------
 377+ 9A12              ;
 378+ 9A12              ;   30/01/24
 379+ 9A12              ;
 380+ 9A12              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A12              ;
 382+ 9A12              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A12
 384+ 9A12 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A13 23               inc hl
 386+ 9A14 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A15 69               ld l,c
 388+ 9A16 60               ld h,b
 389+ 9A17 22 C6 89         ld (Contador_de_mov_masticados),hl
 390+ 9A1A C9               ret
 391+ 9A1B
# file closed: Movimiento.asm
2148  9A1B
2149  9A1B
2150  9A1B              ;	include "Disparo.asm"
2151  9A1B
2152  9A1B
2153  9A1B              	SAVESNA "Pruebas.sna", START
2154  9A1B
2155  9A1B
2156  9A1B
2157  9A1B
# file closed: Banco_de_pruebas.asm
