# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 55 8A     	call Frame
  15  A104
  16  A104 3A 81 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8 EE 83        Indice_Explosion_3x3 defw Explosion_3x3_1
 206+ 83EA 1E 84        	defw Explosion_3x3_2
 207+ 83EC 4E 84        	defw Explosion_3x3_3
 208+ 83EE
 209+ 83EE 0D ED E0 0D  Explosion_3x3_1 DEFB $0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 209+ 83F2 ED E0 0D ED
 210+ 83F6 E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 210+ 83FA 0D ED E0 0D
 211+ 83FE ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 211+ 8402 E0 0D ED E0
 212+ 8406 0D ED E0 0D  	DEFB	$0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 212+ 840A ED E0 0D ED
 213+ 840E E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 213+ 8412 0D ED E0 0D
 214+ 8416 ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 214+ 841A E0 0D ED E0
 215+ 841E
 216+ 841E 01 8F 80 01  Explosion_3x3_2 DEFB $01,$8f,$80,$01,$8f,$80,$01,$8f
 216+ 8422 8F 80 01 8F
 217+ 8426 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 217+ 842A 01 8F 80 01
 218+ 842E 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 218+ 8432 80 01 8F 80
 219+ 8436 01 8F 80 01  	DEFB	$01,$8f,$80,$01,$8f,$80,$01,$8f
 219+ 843A 8F 80 01 8F
 220+ 843E 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 220+ 8442 01 8F 80 01
 221+ 8446 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 221+ 844A 80 01 8F 80
 222+ 844E
 223+ 844E 01 11 10 01  Explosion_3x3_3 DEFB $01,$11,$10,$01,$11,$10,$01,$11
 223+ 8452 11 10 01 11
 224+ 8456 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 224+ 845A 01 11 10 01
 225+ 845E 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 225+ 8462 10 01 11 10
 226+ 8466 01 11 10 01  	DEFB	$01,$11,$10,$01,$11,$10,$01,$11
 226+ 846A 11 10 01 11
 227+ 846E 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 227+ 8472 01 11 10 01
 228+ 8476 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 228+ 847A 10 01 11 10
 229+ 847E
 230+ 847E
 231+ 847E DE DE DE DE  Explosion_2x2 DEFB $de,$de,$de,$de,$de,$de,$de,$de
 231+ 8482 DE DE DE DE
 232+ 8486 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 232+ 848A DE DE DE DE
 233+ 848E DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 233+ 8492 DE DE DE DE
 234+ 8496 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 234+ 849A DE DE DE DE
# file closed: Sprites_e_indices.asm
  23  849E              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 849E
   2+ 849E              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 849E
   4+ 849E              ; 13/05/23
   5+ 849E
   6+ 849E              ; Control. %00000001 00000001
   7+ 849E              ;
   8+ 849E              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 849E              ;                    _ hacen las entidades hacia abajo.
  10+ 849E              ;
  11+ 849E              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 849E
  13+ 849E A4 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84A0 AC 84        	defw Disparo_2A
  15+ 84A2 B4 84        	defw Disparo_3A
  16+ 84A4
  17+ 84A4 00 00        Disparo_1A defw 0									; Control.
  18+ 84A6 00 00        	defw 0											; Puntero objeto.
  19+ 84A8 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84AA 00 00        	defw 0											; Rutina de impresión.
  21+ 84AC
  22+ 84AC 00 00        Disparo_2A defw 0									; Control.
  23+ 84AE 00 00        	defw 0											; Puntero objeto.
  24+ 84B0 00 00        	defw 0											; Puntero de impresión.
  25+ 84B2 00 00        	defw 0											; Rutina de impresión.
  26+ 84B4
  27+ 84B4 00 00        Disparo_3A defw 0
  28+ 84B6
  29+ 84B6 CC 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 84B8 D4 84        	defw Disparo_2
  31+ 84BA DC 84        	defw Disparo_3
  32+ 84BC E4 84        	defw Disparo_4
  33+ 84BE EC 84        	defw Disparo_5
  34+ 84C0 F4 84        	defw Disparo_6
  35+ 84C2 FC 84        	defw Disparo_7
  36+ 84C4 04 85        	defw Disparo_8
  37+ 84C6 0C 85        	defw Disparo_9
  38+ 84C8 14 85        	defw Disparo_10
  39+ 84CA 1C 85        	defw Disparo_11
  40+ 84CC
  41+ 84CC 00 00        Disparo_1 defw 0									; Control.
  42+ 84CE 00 00        	defw 0											; Puntero objeto.
  43+ 84D0 00 00        	defw 0											; Puntero de impresión.
  44+ 84D2 00 00        	defw 0											; Rutina de impresión.
  45+ 84D4
  46+ 84D4 00 00        Disparo_2 defw 0									; Control.
  47+ 84D6 00 00        	defw 0											; Puntero objeto.
  48+ 84D8 00 00        	defw 0											; Puntero de impresión.
  49+ 84DA 00 00        	defw 0											; Rutina de impresión.
  50+ 84DC
  51+ 84DC 00 00        Disparo_3 defw 0									; Control.
  52+ 84DE 00 00        	defw 0											; Puntero objeto.
  53+ 84E0 00 00        	defw 0											; Puntero de impresión.
  54+ 84E2 00 00        	defw 0											; Rutina de impresión.
  55+ 84E4
  56+ 84E4 00 00        Disparo_4 defw 0									; Control.
  57+ 84E6 00 00        	defw 0											; Puntero objeto.
  58+ 84E8 00 00        	defw 0											; Puntero de impresión.
  59+ 84EA 00 00        	defw 0											; Rutina de impresión.
  60+ 84EC
  61+ 84EC 00 00        Disparo_5 defw 0									; Control.
  62+ 84EE 00 00        	defw 0											; Puntero objeto.
  63+ 84F0 00 00        	defw 0											; Puntero de impresión.
  64+ 84F2 00 00        	defw 0											; Rutina de impresión.
  65+ 84F4
  66+ 84F4 00 00        Disparo_6 defw 0									; Control.
  67+ 84F6 00 00        	defw 0											; Puntero objeto.
  68+ 84F8 00 00        	defw 0											; Puntero de impresión.
  69+ 84FA 00 00        	defw 0											; Rutina de impresión.
  70+ 84FC
  71+ 84FC 00 00        Disparo_7 defw 0									; Control.
  72+ 84FE 00 00        	defw 0											; Puntero objeto.
  73+ 8500 00 00        	defw 0											; Puntero de impresión.
  74+ 8502 00 00        	defw 0											; Rutina de impresión.
  75+ 8504
  76+ 8504 00 00        Disparo_8 defw 0									; Control.
  77+ 8506 00 00        	defw 0											; Puntero objeto.
  78+ 8508 00 00        	defw 0											; Puntero de impresión.
  79+ 850A 00 00        	defw 0											; Rutina de impresión.
  80+ 850C
  81+ 850C 00 00        Disparo_9 defw 0									; Control.
  82+ 850E 00 00        	defw 0											; Puntero objeto.
  83+ 8510 00 00        	defw 0											; Puntero de impresión.
  84+ 8512 00 00        	defw 0											; Rutina de impresión.
  85+ 8514
  86+ 8514 00 00        Disparo_10 defw 0									; Control.
  87+ 8516 00 00        	defw 0											; Puntero objeto.
  88+ 8518 00 00        	defw 0											; Puntero de impresión.
  89+ 851A 00 00        	defw 0											; Rutina de impresión.
  90+ 851C
  91+ 851C 00 00        Disparo_11 defw 0
  92+ 851E
  93+ 851E              ; -------------------------------------------------------------------------------------
  94+ 851E
  95+ 851E              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 851E
  97+ 851E 74 85        	defw Caja_1
  98+ 8520 B2 85        	defw Caja_2
  99+ 8522 F0 85        	defw Caja_3
 100+ 8524 2E 86        	defw Caja_4
 101+ 8526 6C 86        	defw Caja_5
 102+ 8528 AA 86        	defw Caja_6
 103+ 852A E8 86        	defw Caja_7
 104+ 852C 26 87        	defw Caja_8
 105+ 852E 64 87        	defw Caja_9
 106+ 8530 A2 87        	defw Caja_10
 107+ 8532              ;	...
 108+ 8532              ;	...
 109+ 8532              ;	+ entidades ...
 110+ 8532 00 00        	defw 0
 111+ 8534 00 00        	defw 0
 112+ 8536
 113+ 8536              ; ---------- ---------- ---------- ---------- ----------
 114+ 8536
 115+ 8536 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8538 00 00        	defw 0		 									; (Posicion_actual).
 117+ 853A 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 853C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 853F
 120+ 853F 05           	db %00000101									; (Attr).
 121+ 8540 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8542 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8544
 124+ 8544 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8546 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8548
 127+ 8548 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 854A 04           	db 4 											; (Cuad_objeto).
 129+ 854B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 854F
 131+ 854F 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 132+ 8550
 133+ 8550 00 00        	db 0,0											; Variables_de_borrado
 134+ 8552 00 00        	defw 0											;	" " " " " " "
 135+ 8554 00 00        	defw 0											;	" " " " " " "
 136+ 8556 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 855A
 138+ 855A 00 00        	db 0,0											; Variables_de_pintado
 139+ 855C 00 00        	defw 0											;	" " " " " " "
 140+ 855E 00 00        	defw 0											;	" " " " " " "
 141+ 8560 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 8564
 143+ 8564 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 8567
 145+ 8567 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 856B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 856E
 148+ 856E 00           	db 0 											; (Columnas).
 149+ 856F 00 00        	defw 0											; (Limite_horizontal).
 150+ 8571 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2).
 151+ 8574
 152+ 8574              ; ---------- ---------- ---------- ---------- ----------
 153+ 8574
 154+ 8574 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 8576 00 00        	defw 0											; (Posicion_actual).
 156+ 8578 00 00        	defw 0 											; (Puntero_objeto).
 157+ 857A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 857D
 159+ 857D 00           	db %00000000 									; (Attr).
 160+ 857E
 161+ 857E 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 8580 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 8582 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 8584 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 8586
 166+ 8586 00 00        	defw 0											; (Posicion_inicio).
 167+ 8588 00           	db 0											; (Cuad_objeto).
 168+ 8589
 169+ 8589 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 858D
 171+ 858D 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 172+ 858E
 173+ 858E 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 8590 00 00        	defw 0											;	" " " " " " "
 175+ 8592 00 00        	defw 0											;	" " " " " " "
 176+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 8598
 178+ 8598 00 00        	db 0,0											; Variables_de_pintado
 179+ 859A 00 00        	defw 0											;	" " " " " " "
 180+ 859C 00 00        	defw 0											;	" " " " " " "
 181+ 859E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85A2
 183+ 85A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85A5
 185+ 85A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85AC
 188+ 85AC 00           	db 0 											; (Columnas).
 189+ 85AD 00 00        	defw 0											; (Limite_horizontal).
 190+ 85AF 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 191+ 85B2
 192+ 85B2              ; ---------- ---------- ---------- ---------- ----------
 193+ 85B2
 194+ 85B2 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85B4 00 00        	defw 0											; (Posicion_actual).
 196+ 85B6 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 85BB
 199+ 85BB 00           	db %00000000 									; (Attr).
 200+ 85BC
 201+ 85BC 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 85BE 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 85C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 85C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 85C4
 206+ 85C4 00 00        	defw 0											; (Posicion_inicio).
 207+ 85C6 00           	db 0											; (Cuad_objeto).
 208+ 85C7
 209+ 85C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 85CB
 211+ 85CB 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 212+ 85CC
 213+ 85CC 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 85CE 00 00        	defw 0											;	" " " " " " "
 215+ 85D0 00 00        	defw 0											;	" " " " " " "
 216+ 85D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 85D6
 218+ 85D6 00 00        	db 0,0											; Variables_de_pintado
 219+ 85D8 00 00        	defw 0											;	" " " " " " "
 220+ 85DA 00 00        	defw 0											;	" " " " " " "
 221+ 85DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 85E0
 223+ 85E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 85E3
 225+ 85E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 85E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 85EA
 228+ 85EA 00           	db 0 											; (Columnas).
 229+ 85EB 00 00        	defw 0											; (Limite_horizontal).
 230+ 85ED 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 231+ 85F0
 232+ 85F0              ; ---------- ---------- ---------- ---------- ----------
 233+ 85F0
 234+ 85F0 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 85F2 00 00        	defw 0											; (Posicion_actual).
 236+ 85F4 00 00        	defw 0 											; (Puntero_objeto).
 237+ 85F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 85F9
 239+ 85F9 00           	db %00000000 									; (Attr).
 240+ 85FA
 241+ 85FA 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 85FC 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 85FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8600 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8602
 246+ 8602 00 00        	defw 0											; (Posicion_inicio).
 247+ 8604 00           	db 0											; (Cuad_objeto).
 248+ 8605
 249+ 8605 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8609
 251+ 8609 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 252+ 860A
 253+ 860A 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 860C 00 00        	defw 0											;	" " " " " " "
 255+ 860E 00 00        	defw 0											;	" " " " " " "
 256+ 8610 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8614
 258+ 8614 00 00        	db 0,0											; Variables_de_pintado
 259+ 8616 00 00        	defw 0											;	" " " " " " "
 260+ 8618 00 00        	defw 0											;	" " " " " " "
 261+ 861A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 861E
 263+ 861E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8621
 265+ 8621 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 8625 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 8628
 268+ 8628 00           	db 0 											; (Columnas).
 269+ 8629 00 00        	defw 0											; (Limite_horizontal).
 270+ 862B 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 271+ 862E
 272+ 862E              ; ---------- ---------- ---------- ---------- ----------
 273+ 862E
 274+ 862E 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8630 00 00        	defw 0											; (Posicion_actual).
 276+ 8632 00 00        	defw 0 											; (Puntero_objeto).
 277+ 8634 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 8637
 279+ 8637 00           	db %00000000 									; (Attr).
 280+ 8638
 281+ 8638 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 863A 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 863C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 863E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8640
 286+ 8640 00 00        	defw 0											; (Posicion_inicio).
 287+ 8642 00           	db 0											; (Cuad_objeto).
 288+ 8643
 289+ 8643 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 8647
 291+ 8647 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 292+ 8648
 293+ 8648 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 864A 00 00        	defw 0											;	" " " " " " "
 295+ 864C 00 00        	defw 0											;	" " " " " " "
 296+ 864E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8652
 298+ 8652 00 00        	db 0,0											; Variables_de_pintado
 299+ 8654 00 00        	defw 0											;	" " " " " " "
 300+ 8656 00 00        	defw 0											;	" " " " " " "
 301+ 8658 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 865C
 303+ 865C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 865F
 305+ 865F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 8663 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 8666
 308+ 8666 00           	db 0 											; (Columnas).
 309+ 8667 00 00        	defw 0											; (Limite_horizontal).
 310+ 8669 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 311+ 866C
 312+ 866C              ; ---------- ---------- ---------- ---------- ----------
 313+ 866C
 314+ 866C 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 866E 00 00        	defw 0											; (Posicion_actual).
 316+ 8670 00 00        	defw 0 											; (Puntero_objeto).
 317+ 8672 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 8675
 319+ 8675 00           	db %00000000 									; (Attr).
 320+ 8676
 321+ 8676 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 8678 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 867A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 867C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 867E
 326+ 867E 00 00        	defw 0											; (Posicion_inicio).
 327+ 8680 00           	db 0											; (Cuad_objeto).
 328+ 8681
 329+ 8681 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 8685
 331+ 8685 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 332+ 8686
 333+ 8686 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 8688 00 00        	defw 0											;	" " " " " " "
 335+ 868A 00 00        	defw 0											;	" " " " " " "
 336+ 868C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 8690
 338+ 8690 00 00        	db 0,0											; Variables_de_pintado
 339+ 8692 00 00        	defw 0											;	" " " " " " "
 340+ 8694 00 00        	defw 0											;	" " " " " " "
 341+ 8696 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 869A
 343+ 869A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 869D
 345+ 869D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86A4
 348+ 86A4 00           	db 0 											; (Columnas).
 349+ 86A5 00 00        	defw 0											; (Limite_horizontal).
 350+ 86A7 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 351+ 86AA
 352+ 86AA              ; ---------- ---------- ---------- ---------- ----------
 353+ 86AA
 354+ 86AA 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86AC 00 00        	defw 0											; (Posicion_actual).
 356+ 86AE 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86B3
 359+ 86B3 00           	db %00000000 									; (Attr).
 360+ 86B4
 361+ 86B4 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86B6 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 86BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 86BC
 366+ 86BC 00 00        	defw 0											; (Posicion_inicio).
 367+ 86BE 00           	db 0											; (Cuad_objeto).
 368+ 86BF
 369+ 86BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 86C3
 371+ 86C3 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 372+ 86C4
 373+ 86C4 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 86C6 00 00        	defw 0											;	" " " " " " "
 375+ 86C8 00 00        	defw 0											;	" " " " " " "
 376+ 86CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 86CE
 378+ 86CE 00 00        	db 0,0											; Variables_de_pintado
 379+ 86D0 00 00        	defw 0											;	" " " " " " "
 380+ 86D2 00 00        	defw 0											;	" " " " " " "
 381+ 86D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 86D8
 383+ 86D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 86DB
 385+ 86DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 86DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 86E2
 388+ 86E2 00           	db 0 											; (Columnas).
 389+ 86E3 00 00        	defw 0											; (Limite_horizontal).
 390+ 86E5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 391+ 86E8
 392+ 86E8              ; ---------- ---------- ---------- ---------- ----------
 393+ 86E8
 394+ 86E8 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 86EA 00 00        	defw 0											; (Posicion_actual).
 396+ 86EC 00 00        	defw 0 											; (Puntero_objeto).
 397+ 86EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 86F1
 399+ 86F1 00           	db %00000000 									; (Attr).
 400+ 86F2
 401+ 86F2 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 86F4 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 86F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 86F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 86FA
 406+ 86FA 00 00        	defw 0											; (Posicion_inicio).
 407+ 86FC 00           	db 0											; (Cuad_objeto).
 408+ 86FD
 409+ 86FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8701
 411+ 8701 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 412+ 8702
 413+ 8702 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 8704 00 00        	defw 0											;	" " " " " " "
 415+ 8706 00 00        	defw 0											;	" " " " " " "
 416+ 8708 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 870C
 418+ 870C 00 00        	db 0,0											; Variables_de_pintado
 419+ 870E 00 00        	defw 0											;	" " " " " " "
 420+ 8710 00 00        	defw 0											;	" " " " " " "
 421+ 8712 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 8716
 423+ 8716 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 8719
 425+ 8719 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 871D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8720
 428+ 8720 00           	db 0 											; (Columnas).
 429+ 8721 00 00        	defw 0											; (Limite_horizontal).
 430+ 8723 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 431+ 8726
 432+ 8726              ; ---------- ---------- ---------- ---------- ----------
 433+ 8726
 434+ 8726 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 8728 00 00        	defw 0											; (Posicion_actual).
 436+ 872A 00 00        	defw 0 											; (Puntero_objeto).
 437+ 872C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 872F
 439+ 872F 00           	db %00000000 									; (Attr).
 440+ 8730
 441+ 8730 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8732 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 8734 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 8736 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 8738
 446+ 8738 00 00        	defw 0											; (Posicion_inicio).
 447+ 873A 00           	db 0											; (Cuad_objeto).
 448+ 873B
 449+ 873B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 873F
 451+ 873F 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 452+ 8740
 453+ 8740 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8742 00 00        	defw 0											;	" " " " " " "
 455+ 8744 00 00        	defw 0											;	" " " " " " "
 456+ 8746 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 874A
 458+ 874A 00 00        	db 0,0											; Variables_de_pintado
 459+ 874C 00 00        	defw 0											;	" " " " " " "
 460+ 874E 00 00        	defw 0											;	" " " " " " "
 461+ 8750 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 8754
 463+ 8754 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 8757
 465+ 8757 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 875B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 875E
 468+ 875E 00           	db 0 											; (Columnas).
 469+ 875F 00 00        	defw 0											; (Limite_horizontal).
 470+ 8761 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 471+ 8764
 472+ 8764              ; ---------- ---------- ---------- ---------- ----------
 473+ 8764
 474+ 8764 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 8766 00 00        	defw 0											; (Posicion_actual).
 476+ 8768 00 00        	defw 0 											; (Puntero_objeto).
 477+ 876A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 876D
 479+ 876D 00           	db %00000000 									; (Attr).
 480+ 876E
 481+ 876E 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 8770 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 8772 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 8774 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 8776
 486+ 8776 00 00        	defw 0											; (Posicion_inicio).
 487+ 8778 00           	db 0											; (Cuad_objeto).
 488+ 8779
 489+ 8779 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 877D
 491+ 877D 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 492+ 877E
 493+ 877E 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 8780 00 00        	defw 0											;	" " " " " " "
 495+ 8782 00 00        	defw 0											;	" " " " " " "
 496+ 8784 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 8788
 498+ 8788 00 00        	db 0,0											; Variables_de_pintado
 499+ 878A 00 00        	defw 0											;	" " " " " " "
 500+ 878C 00 00        	defw 0											;	" " " " " " "
 501+ 878E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 8792
 503+ 8792 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 8795
 505+ 8795 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 8799 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 879C
 508+ 879C 00           	db 0 											; (Columnas).
 509+ 879D 00 00        	defw 0											; (Limite_horizontal).
 510+ 879F 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 511+ 87A2
 512+ 87A2              ; ---------- ---------- ---------- ---------- ----------
 513+ 87A2
 514+ 87A2 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87A4 00 00        	defw 0											; (Posicion_actual).
 516+ 87A6 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87A8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87AB
 519+ 87AB 00           	db %00000000 									; (Attr).
 520+ 87AC
 521+ 87AC 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87AE 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87B0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87B2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87B4
 526+ 87B4 00 00        	defw 0											; (Posicion_inicio).
 527+ 87B6 00           	db 0											; (Cuad_objeto).
 528+ 87B7
 529+ 87B7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 87BB
 531+ 87BB 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 532+ 87BC
 533+ 87BC 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 87BE 00 00        	defw 0											;	" " " " " " "
 535+ 87C0 00 00        	defw 0											;	" " " " " " "
 536+ 87C2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 87C6
 538+ 87C6 00 00        	db 0,0											; Variables_de_pintado
 539+ 87C8 00 00        	defw 0											;	" " " " " " "
 540+ 87CA 00 00        	defw 0											;	" " " " " " "
 541+ 87CC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 87D0
 543+ 87D0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 87D3
 545+ 87D3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 87D7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 87DA
 548+ 87DA 00           	db 0 											; (Columnas).
 549+ 87DB 00 00        	defw 0											; (Limite_horizontal).
 550+ 87DD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2).
 551+ 87E0
 552+ 87E0              ; -------------------------------------------------------------------------------------
 553+ 87E0              ;
 554+ 87E0              ;	20/05/23
 555+ 87E0              ;
 556+ 87E0              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 87E0              ;
 558+ 87E0              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 87E0              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 87E0              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 87E0              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 87E0
 563+ 87E0              Indice_de_entidades
 564+ 87E0
 565+ 87E0 EA 87        	defw Entidad_1
 566+ 87E2 FA 87        	defw Entidad_2
 567+ 87E4 0A 88        	defw Entidad_3
 568+ 87E6 1A 88        	defw Entidad_4
 569+ 87E8 2A 88        	defw Entidad_5
 570+ 87EA
 571+ 87EA              ;	BADSAT, (Satélite malvado).
 572+ 87EA
 573+ 87EA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 87EC 04           	db %00000100									; (Attr).
 575+ 87ED 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 87EF 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 87F1 60 47        	defw $4760	                             	    ; (Posicion_inicio).
 578+ 87F3 01           	db 1											; (Cuad_objeto).
 579+ 87F4 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 87F8 D8 9B        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 581+ 87FA
 582+ 87FA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 87FC 02           	db %00000010									; (Attr).
 584+ 87FD 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 87FF 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8801 5F 48        	defw $485f                                      ; (Posicion_inicio).
 587+ 8803 01           	db 1											; (Cuad_objeto).
 588+ 8804 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 8808 D6 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 590+ 880A
 591+ 880A 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 880C 04           	db %00000100									; (Attr).
 593+ 880D 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 880F 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8811 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8813 01           	db 1											; (Cuad_objeto).
 597+ 8814 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 8818 CA 9B        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 599+ 881A
 600+ 881A 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 881C 01           	db %00000001									; (Attr).
 602+ 881D 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 881F 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8821 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8823 01           	db 1											; (Cuad_objeto).
 606+ 8824 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 8828 D6 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 882A
 609+ 882A 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 882C 01           	db %00000001									; (Attr).
 611+ 882D 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 882F 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8831 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8833 01           	db 1											; (Cuad_objeto).
 615+ 8834 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 8838 CC 9B        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
 617+ 883A
# file closed: Cajas_y_disparos.asm
  24  883A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 883A              ; 13/05/23
   2+ 883A
   3+ 883A              Indice_de_niveles
   4+ 883A
   5+ 883A 48 88        	defw Nivel_1
   6+ 883C 53 88        	defw Nivel_2
   7+ 883E 60 88        	defw Nivel_3
   8+ 8840 70 88        	defw Nivel_4
   9+ 8842 82 88        	defw Nivel_5
  10+ 8844
  11+ 8844              ;	...
  12+ 8844              ;	...
  13+ 8844              ;	+ Niveles ...
  14+ 8844
  15+ 8844 00 00        	defw 0
  16+ 8846 00 00        	defw 0
  17+ 8848
  18+ 8848 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 8849 01 02 01 02  	db 1,2,1,2,1								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 884D 01
  20+ 884E 01 02 01 02  	db 1,2,1,2,1
  20+ 8852 01
  21+ 8853 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 8854 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 8858 01 02
  23+ 885A 02 01 01 01  	db 2,1,1,1,1,2
  23+ 885E 01 02
  24+ 8860 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 8861 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 8865 01
  26+ 8866 03 01 01 01  	db 3,1,1,1,1
  26+ 886A 01
  27+ 886B 03 01 01 01  	db 3,1,1,1,1
  27+ 886F 01
  28+ 8870 11           Nivel_4 db 17									; Nº de entidades.
  29+ 8871 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 8875 01
  30+ 8876 04 01 01 01  	db 4,1,1,1,1
  30+ 887A 01
  31+ 887B 04 01 01 01  	db 4,1,1,1,1
  31+ 887F 01
  32+ 8880 02 03        	db 2,3
  33+ 8882 14           Nivel_5 db 20									; Nº de entidades.
  34+ 8883 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 8887 01
  35+ 8888 05 01 01 01  	db 5,1,1,1,1
  35+ 888C 01
  36+ 888D 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 8891 01
  37+ 8892 05 01 01 01  	db 5,1,1,1,1
  37+ 8896 01
  38+ 8897
  39+ 8897              ;---------------------------------------------------------------------------------------------------------------
  40+ 8897              ;
  41+ 8897              ;   21/5/23
  42+ 8897              ;
  43+ 8897              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 8897              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 8897              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 8897              ;	_en la caja DRAW correspondiente.
  47+ 8897              ;
  48+ 8897              ;	MODIFICA: HL,DE y A.
  49+ 8897              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 8897
  51+ 8897              Inicializa_Punteros_de_nivel
  52+ 8897
  53+ 8897 21 3A 88     	ld hl,Indice_de_niveles
  54+ 889A 22 B7 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 889D CD AB 8C     	call Extrae_address
  56+ 88A0 7E           	ld a,(hl)
  57+ 88A1 32 8A 89     	ld (Numero_de_entidades),a
  58+ 88A4 23           	inc hl
  59+ 88A5 22 B9 89     	ld (Datos_de_nivel),hl
  60+ 88A8 C9           	ret
  61+ 88A9
  62+ 88A9              ;---------------------------------------------------------------------------------------------------------------
  63+ 88A9              ;
  64+ 88A9              ;   13/5/23
  65+ 88A9              ;
  66+ 88A9              ;	Destruye A,BC,HL,DE
  67+ 88A9
  68+ 88A9              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 88A9              ;	_del juego.
  70+ 88A9
  71+ 88A9              Prepara_cajas
  72+ 88A9
  73+ 88A9              ; Preparamos los punteros de las cajas.
  74+ 88A9
  75+ 88A9 21 1E 85     	ld hl,Indice_de_cajas
  76+ 88AC CD AB 8C     	call Extrae_address
  77+ 88AF CD EC 88     	call Avanza_caja
  78+ 88B2
  79+ 88B2 CD 27 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 88B5
  81+ 88B5 2A B9 89     	ld hl,(Datos_de_nivel)
  82+ 88B8
  83+ 88B8              ; HL está en los datos del nivel correspondiente.
  84+ 88B8              ; B actuará como contador de cajas.
  85+ 88B8
  86+ 88B8 C5           1 push bc
  87+ 88B9
  88+ 88B9 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 88BA CD DD 88     	call PreparaBC
  90+ 88BD
  91+ 88BD 21 E0 87     	ld hl,Indice_de_entidades
  92+ 88C0 CD E5 88     	call SBC_HL_con_BC_y_Extrae
  93+ 88C3 22 90 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 88C6
  95+ 88C6 CD F6 88     	call Datos_de_entidad_a_caja
  96+ 88C9
  97+ 88C9 2A 88 89     	ld hl,(Indice_restore_caja)
  98+ 88CC CD AB 8C     	call Extrae_address
  99+ 88CF CD EC 88     	call Avanza_caja
 100+ 88D2
 101+ 88D2 2A B9 89     	ld hl,(Datos_de_nivel)
 102+ 88D5 23           	inc hl
 103+ 88D6 22 B9 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 88D9
 105+ 88D9 C1           	pop bc
 106+ 88DA 10 DC        	djnz 1B
 107+ 88DC C9           	ret
 108+ 88DD
 109+ 88DD CB 27        PreparaBC sla a
 110+ 88DF D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 88E1 4F           	ld c,a
 112+ 88E2 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 88E4 C9           	ret
 114+ 88E5
 115+ 88E5 A7           SBC_HL_con_BC_y_Extrae and a
 116+ 88E6 ED 4A        	adc hl,bc
 117+ 88E8 CD AB 8C     	call Extrae_address
 118+ 88EB C9           	ret
 119+ 88EC
 120+ 88EC 22 84 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 88EF 13           	inc de
 122+ 88F0 13           	inc de
 123+ 88F1 EB           	ex de,hl
 124+ 88F2 22 88 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 88F5 C9           	ret
 126+ 88F6
 127+ 88F6              Datos_de_entidad_a_caja
 128+ 88F6
 129+ 88F6              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 88F6
 131+ 88F6 ED 5B 84 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 88FA
 133+ 88FA 01 02 00     	ld bc,2
 134+ 88FD ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 88FF
 136+ 88FF 01 07 00     	ld bc,7
 137+ 8902 CD 21 89     	call Situa_DE
 138+ 8905
 139+ 8905 01 05 00     	ld bc,5
 140+ 8908 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 890A
 142+ 890A 01 04 00     	ld bc,4
 143+ 890D CD 21 89     	call Situa_DE
 144+ 8910
 145+ 8910 01 07 00     	ld bc,7
 146+ 8913 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8915
 148+ 8915 01 18 00     	ld bc,24
 149+ 8918 CD 21 89     	call Situa_DE
 150+ 891B
 151+ 891B 01 02 00     	ld bc,2
 152+ 891E ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8920
 154+ 8920 C9           	ret
 155+ 8921
 156+ 8921 EB           Situa_DE ex de,hl
 157+ 8922 A7           	and a
 158+ 8923 ED 4A        	adc hl,bc
 159+ 8925 EB           	ex de,hl
 160+ 8926 C9           	ret
 161+ 8927
 162+ 8927              ;---------------------------------------------------------------------------------------------------------------
 163+ 8927              ;
 164+ 8927              ;	21/5/23
 165+ 8927              ;
 166+ 8927              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 167+ 8927              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 168+ 8927              ;
 169+ 8927              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 170+ 8927              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 171+ 8927              ;	_ total de entidades que contiene (Numero_de_entidades).
 172+ 8927              ;
 173+ 8927              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 174+ 8927              ;	MODIFICA: A y B.
 175+ 8927              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 176+ 8927
 177+ 8927              Admin_num_entidades
 178+ 8927
 179+ 8927              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 180+ 8927
 181+ 8927 3A 8A 89     	ld a,(Numero_de_entidades)
 182+ 892A A7           	and a
 183+ 892B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 184+ 892B 28 FE        	jr z,$
 185+ 892D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 186+ 892D
 187+ 892D 3E 0A        	ld a,10
 188+ 892F 32 8A 89     	ld (Numero_de_entidades),a
 189+ 8932
 190+ 8932 FE 0A        	cp 10
 191+ 8934 38 08        	jr c,1F
 192+ 8936
 193+ 8936              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 194+ 8936              ; Actualizamos variables.
 195+ 8936
 196+ 8936 3E 0A        	ld a,10
 197+ 8938 32 8B 89     	ld (Numero_parcial_de_entidades),a
 198+ 893B 47           	ld b,a
 199+ 893C 18 04        	jr 2F
 200+ 893E
 201+ 893E              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 202+ 893E              ; (Numero_de_entidades)="0".
 203+ 893E
 204+ 893E 32 8B 89     1 ld (Numero_parcial_de_entidades),a
 205+ 8941 47           	ld b,a
 206+ 8942 C9           2 ret
# file closed: Niveles.asm
  25  8943
  26  8943              ; ******************************************************************************************************************************************************************************************
  27  8943              ; Constantes.
  28  8943              ; ******************************************************************************************************************************************************************************************
  29  8943              ;
  30  8943              ; 25/05/23
  31  8943              ;
  32  8943              ; Constantes generales.
  33  8943              ;
  34  8943
  35  8943              Sprite_vacio equ $f000
  36  8943              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  8943              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  8943              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  8943              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  8943
  41  8943              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  8943              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  8943              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  8943              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  8943              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  8943              ;                               				        ; De momento situamos este almacén en $7060.
  47  8943
  48  8943              ; ******************************************************************************************************************************************************************************************
  49  8943              ; Variables.
  50  8943              ; ******************************************************************************************************************************************************************************************
  51  8943              ;
  52  8943              ; 10/11/22
  53  8943              ;
  54  8943              ; Variables de DRAW. (Motor principal).
  55  8943              ;
  56  8943              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  8943
  58  8943 00           Filas db 0												; Filas. [DRAW]
  59  8944 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  8945 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  8947 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  8949 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  894A 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  894B
  65  894B              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  894B
  67  894B 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  894C              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  894C              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  894C 00           Attr db 0												; Atributos de la entidad:
  71  894D
  72  894D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  894D              ;
  74  894D              ;	COLORES: 0 ..... NEGRO
  75  894D              ;    		 1 ..... AZUL
  76  894D              ; 			 2 ..... ROJO
  77  894D              ;			 3 ..... MAGENTA
  78  894D              ; 			 4 ..... VERDE
  79  894D              ; 			 5 ..... CIAN
  80  894D              ;			 6 ..... AMARILLO
  81  894D              ; 			 7 ..... BLANCO
  82  894D
  83  894D 00 00        Indice_Sprite_der defw 0
  84  894F 00 00        Indice_Sprite_izq defw 0
  85  8951 00 00        Puntero_DESPLZ_der defw 0
  86  8953 00 00        Puntero_DESPLZ_izq defw 0
  87  8955
  88  8955 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  8957 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  8958
  91  8958              ; Variables de objeto. (Características).
  92  8958
  93  8958 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  8959 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  895A 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  895B 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  895C
  98  895C 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  895D              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  895D              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  895D
 102  895D 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  895F 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  8961 00 00        	defw 0
 105  8963 00 00 00 00  	db 0,0,0,0
 106  8967
 107  8967 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  8969 00 00        	defw 0
 109  896B 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  896D 00 00 00 00  	db 0,0,0,0
 111  8971
 112  8971              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  8971
 114  8971 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  8972              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  8972              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  8972              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  8972              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  8972              ;
 120  8972              ; 														DESCRIPCIÖN:
 121  8972              ;
 122  8972              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  8972              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  8972              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  8972              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  8972              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  8972              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  8972              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  8972              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  8972              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  8972              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  8972              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  8972              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  8972              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  8972              ;
 136  8972              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  8972              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  8972              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  8972
 140  8972 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  8973
 142  8973              ; Movimiento.
 143  8973
 144  8973 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  8974 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  8976 00 00        Puntero_mov defw 0
 147  8978 00           Contador_db_mov db 0
 148  8979 00           Incrementa_puntero db 0
 149  897A 00           Repetimos_db db 0
 150  897B
 151  897B              ; Variables de funcionamiento. [DRAW].
 152  897B
 153  897B 00           Columnas db 0
 154  897C 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  897E              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  897E 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  897F
 158  897F              ; variables de control general.
 159  897F
 160  897F 00           Ctrl_2 db 0
 161  8980              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  8980              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  8980              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  8980              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  8980              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  8980              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  8980              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  8980
 169  8980 00           Frames_explosion db 0
 170  8981
 171  8981              ; 62 Bytes por entidad.
 172  8981              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 173  8981              ;					         		---------;      ;---------
 174  8981
 175  8981
 176  8981              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 177  8981
 178  8981 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 179  8982
 180  8982              ;														DESCRIPCIÓN:
 181  8982              ;
 182  8982              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 183  8982              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 184  8982              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 185  8982              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 186  8982              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 187  8982              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 188  8982              ;														BIT 3, .............
 189  8982              ;														BIT 4, .............
 190  8982
 191  8982 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 192  8984              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 193  8984              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 194  8984              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 195  8984
 196  8984
 197  8984
 198  8984              ; Gestión de ENTIDADES y CAJAS.
 199  8984
 200  8984              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 201  8984 00 00        Puntero_store_caja defw 0
 202  8986 00 00        Puntero_restore_caja defw 0
 203  8988 00 00        Indice_restore_caja defw 0
 204  898A 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 205  898B 00           Numero_parcial_de_entidades db 0
 206  898C 00           Entidades_en_curso db 0									; ..... ..... .....
 207  898D 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 208  898E              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 209  898E              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 210  898E              ;														; _ (Numero_de_malotes)="0".
 211  898E 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 212  8990 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 213  8992              ;														; _ puntero (Indice_entidades).
 214  8992
 215  8992
 216  8992              ;---------------------------------------------------------------------------------------------------------------
 217  8992              ;
 218  8992              ; Sirven para PINTAR.
 219  8992
 220  8992 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 221  8994              ;														; _variable para almacenar lo posición del puntero_
 222  8994              ; 														; _de pila, SP.
 223  8994 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 224  8996              ;														; La utiliza la rutina [Extrae_foto_registros].
 225  8996 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 226  8998              ;														; _el snapshot de los registros de la siguiente entidad.
 227  8998              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 228  8998 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 229  899A              ;														; _el snapshot de los registros del siguiente disparo.
 230  899A              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 231  899A
 232  899A              ;---------------------------------------------------------------------------------------------------------------
 233  899A
 234  899A              ; Gestión de Disparos.
 235  899A
 236  899A 00           Numero_de_disparotes db 0
 237  899B 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 238  899D 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 239  899F 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 240  89A0              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 241  89A0              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 242  89A0 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 243  89A2              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 244  89A2              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 245  89A2              ;														; _produzca colisión.
 246  89A2 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 247  89A4              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 248  89A4 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 249  89A7              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 250  89A7 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89AA              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 252  89AA
 253  89AA              ;---------------------------------------------------------------------------------------------------------------
 254  89AA
 255  89AA              ; Relojes y temporizaciones.
 256  89AA
 257  89AA 00           Contador_de_frames db 0
 258  89AB 00           Secundero db 0
 259  89AC 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 260  89AD              ;														; Repite la oleada de entidades.
 261  89AD 01           Habilita_disparo_Amadeus db 1
 262  89AE 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 263  89AF 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 264  89B0
 265  89B0 01           Habilita_disparo_entidad db 1
 266  89B1 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 267  89B2 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 268  89B3
 269  89B3              ;---------------------------------------------------------------------------------------------------------------
 270  89B3
 271  89B3              ; Gestión de FRAMES.
 272  89B3
 273  89B3 00           Switch db 0
 274  89B4
 275  89B4              ; Variables de Raster y localización en pantalla.
 276  89B4
 277  89B4 00 FF        Temp_Raster defw $ff00
 278  89B6
 279  89B6              ;---------------------------------------------------------------------------------------------------------------
 280  89B6
 281  89B6              ; Gestión de NIVELES.
 282  89B6
 283  89B6 00           Nivel db 0												 ; Nivel actual del juego.
 284  89B7 00 00        Puntero_indice_NIVELES defw 0
 285  89B9 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 286  89BB              ; 														 ; _ que definen el NIVEL.
 287  89BB
 288  89BB
 289  89BB              ; Y todo comienza aquí .....
 290  89BB              ;
 291  89BB              ; Rutina principal *************************************************************************************************************************************************************************
 292  89BB              ;
 293  89BB              ;	14/11/22
 294  89BB
 295  89BB              START
 296  89BB
 297  89BB 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 298  89BE 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 299  89C0 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 300  89C2 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 301  89C4 F3           	DI
 302  89C5
 303  89C5 3E 07        	ld a,%00000111
 304  89C7 CD AC 97     	call Cls
 305  89CA
 306  89CA              ;	call Pinta_marco
 307  89CA
 308  89CA CD 97 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 309  89CD CD 84 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 310  89D0
 311  89D0 CD A9 88     4 call Prepara_cajas
 312  89D3
 313  89D3 CD 57 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 314  89D6              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 315  89D6 CD 34 8D     	call Restore_entidad
 316  89D9
 317  89D9 21 8B 89     	ld hl,Numero_parcial_de_entidades
 318  89DC 46           	ld b,(hl)
 319  89DD 04           	inc b
 320  89DE 05           	dec b
 321  89DF 28 1F        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 322  89E1
 323  89E1              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 324  89E1              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 325  89E1              ;	Pintamos el resto de entidades:
 326  89E1
 327  89E1              ;	INICIA ENTIDADES !!!!!
 328  89E1
 329  89E1 C5           1 push bc  												; Guardo el contador de entidades.
 330  89E2 CD B1 8C     	call Inicia_Puntero_objeto
 331  89E5
 332  89E5 3E 03        	ld a,3
 333  89E7 32 80 89     	ld (Frames_explosion),a
 334  89EA
 335  89EA CD C0 97     	call Recompone_posicion_inicio
 336  89ED CD FC 91     	call Draw
 337  89F0 CD A0 7F     	call Guarda_foto_registros
 338  89F3 CD F9 8C      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 339  89F6 C1           	pop bc
 340  89F7 10 E8        	djnz 1B  											; Decremento el contador de entidades.
 341  89F9
 342  89F9              ;	call Pinta_marco
 343  89F9
 344  89F9              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 345  89F9
 346  89F9 3A 81 89     	ld a,(Ctrl_1)
 347  89FC CB 5F        	bit 3,a
 348  89FE 20 18        	jr nz,5F											; Loop
 349  8A00
 350  8A00              ; 	INICIA AMADEUS !!!!!
 351  8A00
 352  8A00 CD 5B 8D     3 call Restore_Amadeus
 353  8A03 CD B1 8C     	call Inicia_Puntero_objeto
 354  8A06 CD FC 91     	call Draw
 355  8A09 CD A0 7F     	call Guarda_foto_registros
 356  8A0C 11 36 85     	ld de,Amadeus_db
 357  8A0F CD 6D 8D     	call Store_Amadeus
 358  8A12
 359  8A12              ; 	INICIA DISPAROS !!!!!
 360  8A12
 361  8A12 CD 6D 8C     	call Inicia_Puntero_Disparo_Entidades
 362  8A15 CD 74 8C     	call Inicia_Puntero_Disparo_Amadeus
 363  8A18
 364  8A18              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 365  8A18
 366  8A18 CD 57 8C     5 call Inicia_punteros_de_cajas
 367  8A1B CD 34 8D     	call Restore_entidad
 368  8A1E
 369  8A1E 3A 81 89     	ld a,(Ctrl_1)
 370  8A21 CB 5F        	bit 3,a
 371  8A23 28 0A        	jr z,6F
 372  8A25
 373  8A25              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 374  8A25
 375  8A25 21 81 89     	ld hl,Ctrl_1
 376  8A28 CB 9E        	res 3,(hl)
 377  8A2A CD 7B 8C     	call Calcula_numero_de_malotes
 378  8A2D 18 07        	jr 7F
 379  8A2F
 380  8A2F              ; ----------
 381  8A2F
 382  8A2F 3A 8B 89     6 ld a,(Numero_parcial_de_entidades)
 383  8A32 3C           	inc a
 384  8A33 32 8D 89     	ld (Numero_de_malotes),a
 385  8A36
 386  8A36 AF           7 xor a
 387  8A37 FB           2 ei
 388  8A38 28 FD        	jr z,2B
 389  8A3A
 390  8A3A 3A AB 89     	ld a,(Secundero)
 391  8A3D 47           	ld b,a
 392  8A3E 3A AC 89     	ld a,(Activa_recarga_cajas)
 393  8A41 B8           	cp b
 394  8A42 28 08        	jr z,8F
 395  8A44
 396  8A44 21 81 89     	ld hl,Ctrl_1
 397  8A47 CB E6        	set 4,(hl)
 398  8A49 AF           	xor a
 399  8A4A 18 EB        	jr 2B
 400  8A4C
 401  8A4C 21 81 89     8 ld hl,Ctrl_1
 402  8A4F CB A6        	res 4,(hl)
 403  8A51 F3           	di
 404  8A52
 405  8A52 C3 D0 89     	jp 4B
 406  8A55
 407  8A55              ; -----------------------------------------------------------------------------------
 408  8A55
 409  8A55              Frame
 410  8A55
 411  8A55              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 412  8A55              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 413  8A55
 414  8A55              ; PINTAMOS.
 415  8A55
 416  8A55 3E 02            ld a,2
 417  8A57 D3 FE            out ($fe),a
 418  8A59 CD 00 95     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 419  8A5C CD 39 95     	call Extrae_foto_disparos
 420  8A5F 3E 01            ld a,1
 421  8A61 D3 FE            out ($fe),a
 422  8A63
 423  8A63              ; ----------------------------------------------------------------------
 424  8A63
 425  8A63              ; RELOJES.
 426  8A63
 427  8A63 21 AA 89     	ld hl,Contador_de_frames
 428  8A66 34           	inc (hl)											; 0 - 255
 429  8A67
 430  8A67 3E 3C        	ld a,60
 431  8A69 BE           	cp (hl)
 432  8A6A 20 22        	jr nz,13F
 433  8A6C
 434  8A6C 36 00        	ld (hl),0
 435  8A6E
 436  8A6E 21 AB 89     	ld hl,Secundero
 437  8A71 34           	inc (hl)
 438  8A72
 439  8A72 7E           	ld a,(hl)
 440  8A73 E6 01        	and %00000001
 441  8A75 20 10        	jr nz,20F
 442  8A77
 443  8A77 3A 8B 89     	ld a,(Numero_parcial_de_entidades)
 444  8A7A 47           	ld b,a
 445  8A7B 3A 8C 89     	ld a,(Entidades_en_curso)
 446  8A7E B8           	cp b
 447  8A7F 28 06        	jr z,20F
 448  8A81 30 04        	jr nc,20F
 449  8A83
 450  8A83 3C           	inc a
 451  8A84 32 8C 89     	ld (Entidades_en_curso),a
 452  8A87
 453  8A87 3E 3C        20 ld a,60
 454  8A89 BE           	cp (hl)
 455  8A8A 20 02        	jr nz,13F
 456  8A8C
 457  8A8C 36 00        	ld (hl),0
 458  8A8E
 459  8A8E 21 AD 89     13 ld hl,Habilita_disparo_Amadeus
 460  8A91 11 AF 89     	ld de,Temporiza_disparo_Amadeus
 461  8A94 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 462  8A97
 463  8A97 21 B0 89     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 464  8A9A 11 B2 89     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 465  8A9D CD D5 7F     	call Habilita_disparos
 466  8AA0
 467  8AA0              ; COLISIONES.
 468  8AA0
 469  8AA0 CD 96 91     	call Selector_de_impactos
 470  8AA3
 471  8AA3              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 472  8AA3              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 473  8AA3              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 474  8AA3
 475  8AA3 AF           	xor a
 476  8AA4 32 9F 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 477  8AA7
 478  8AA7 CD 57 8C     	call Inicia_punteros_de_cajas
 479  8AAA CD 34 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 480  8AAD              ; 														; _ en DRAW.
 481  8AAD 3A 43 89     	ld a,(Filas)
 482  8AB0 A7           	and a
 483  8AB1 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 484  8AB3 CD 46 8D     	call Incrementa_punteros_de_cajas
 485  8AB6 18 F2        	jr 12B
 486  8AB8
 487  8AB8              ; ---------------------------------------------------------------------------------------
 488  8AB8
 489  8AB8 CD 14 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 490  8ABB 21 00 70     	ld hl,Album_de_fotos
 491  8ABE 22 96 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 492  8AC1              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 493  8AC1 3A 8B 89     	ld a,(Numero_parcial_de_entidades)
 494  8AC4 47               ld b,a
 495  8AC5 A7           	and a
 496  8AC6 20 16        	jr nz,2F
 497  8AC8
 498  8AC8 21 81 89     	ld hl,Ctrl_1
 499  8ACB CB 66        	bit 4,(hl)
 500  8ACD C2 57 8B     	jp nz,4F
 501  8AD0
 502  8AD0 21 81 89     	ld hl,Ctrl_1
 503  8AD3 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 504  8AD5 3A AB 89     	ld a,(Secundero)
 505  8AD8 3C           	inc a
 506  8AD9 32 AC 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 507  8ADC
 508  8ADC 18 79        	jr 4F
 509  8ADE
 510  8ADE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 511  8ADE
 512  8ADE              ; Código que ejecutamos con cada entidad:
 513  8ADE
 514  8ADE              ; Impacto ???
 515  8ADE
 516  8ADE 3A 8C 89     2 ld a,(Entidades_en_curso)
 517  8AE1 A7           	and a
 518  8AE2 28 73        	jr z,4F
 519  8AE4 47           	ld b,a
 520  8AE5
 521  8AE5 C5           15 push bc 												; Nº de entidades en curso.
 522  8AE6
 523  8AE6 3A 5C 89     	ld a,(Impacto)
 524  8AE9 A7           	and a
 525  8AEA 28 25        	jr z,8F
 526  8AEC
 527  8AEC              ; Hay Impacto en esta entidad.
 528  8AEC
 529  8AEC CD 0E 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 530  8AEF
 531  8AEF              ;!!!!!! DEBUGGIN Desintegración/Explosión!!!!!!!!!!!
 532  8AEF
 533  8AEF 3A 7F 89     	ld a,(Ctrl_2)
 534  8AF2 CB 4F        	bit 1,a
 535  8AF4 20 42        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 536  8AF6 3A 4B 89     	ld a,(CTRL_DESPLZ)
 537  8AF9 A7           	and a
 538  8AFA 20 08        	jr nz,21F
 539  8AFC 21 7E 84     	ld hl,Explosion_2x2
 540  8AFF 22 47 89     	ld (Puntero_objeto),hl
 541  8B02 18 06        	jr 22F
 542  8B04 21 E6 83     21 ld hl,Indice_Explosion_3x3-2
 543  8B07 22 51 89     	ld (Puntero_DESPLZ_der),hl
 544  8B0A 21 7F 89     22 ld hl,Ctrl_2
 545  8B0D CB CE        	set 1,(hl)
 546  8B0F 18 27        	jr 7F
 547  8B11
 548  8B11              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 549  8B11              ; _con las coordenadas de la entidad almacenada en DRAW.
 550  8B11
 551  8B11 3A 81 89     8 ld a,(Ctrl_1)
 552  8B14 CB 57        	bit 2,a
 553  8B16 28 20        	jr z,7F
 554  8B18
 555  8B18 2A A2 89     	ld hl,(Coordenadas_disparo_certero)
 556  8B1B EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 557  8B1C              ;														; E contiene la coordenada_X del disparo.
 558  8B1C 2A 49 89     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 559  8B1F              ;														; H Coordenado_y de la entidad.
 560  8B1F A7           	and a
 561  8B20 ED 52        	sbc hl,de
 562  8B22
 563  8B22 CD CD 91     	call Determina_resultado_comparativa
 564  8B25 04           	inc b
 565  8B26 05           	dec b
 566  8B27
 567  8B27              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 568  8B27              ;	jr z,$
 569  8B27              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 570  8B27
 571  8B27 28 0F        	jr z,7F
 572  8B29
 573  8B29              ; ----- ----- -----
 574  8B29
 575  8B29 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 576  8B2B 32 5C 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 577  8B2E 21 81 89     	ld hl,Ctrl_1
 578  8B31 CB 96        	res 2,(hl)
 579  8B33 21 A2 89     	ld hl,Coordenadas_disparo_certero
 580  8B36 36 00        	ld (hl),0
 581  8B38
 582  8B38 CD 8A 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 583  8B3B
 584  8B3B 3A 71 89     	ld a,(Ctrl_0)
 585  8B3E CB 67        	bit 4,a
 586  8B40 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 587  8B42
 588  8B42              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 589  8B42              ; [[[
 590  8B42 CD CF 8D     	call Detecta_disparo_entidad
 591  8B45              ; ]]]
 592  8B45 CD 1E 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 593  8B48
 594  8B48 21 71 89     	ld hl,Ctrl_0
 595  8B4B CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 596  8B4D AF           	xor a
 597  8B4E 32 72 89     	ld (Obj_dibujado),a
 598  8B51
 599  8B51 CD F9 8C     6 call Store_Restore_cajas
 600  8B54
 601  8B54 C1           	pop bc
 602  8B55 10 8E        	djnz 15B
 603  8B57
 604  8B57              ; Tras la gestión de las entidades, ... AMADEUS.
 605  8B57
 606  8B57 CD 5B 8D     4 call Restore_Amadeus
 607  8B5A
 608  8B5A 3A 5C 89     	ld a,(Impacto)
 609  8B5D A7           	and a
 610  8B5E 20 FE        	jr nz,$
 611  8B60
 612  8B60              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 613  8B60
 614  8B60 CD EF 8B     	call Mov_Amadeus
 615  8B63
 616  8B63 3A 71 89     	ld a,(Ctrl_0)
 617  8B66 CB 67        	bit 4,a
 618  8B68 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 619  8B6A
 620  8B6A CD 1E 8C     	call Guarda_foto_entidad_a_pintar
 621  8B6D
 622  8B6D 21 71 89     3 ld hl,Ctrl_0
 623  8B70 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 624  8B72 AF           	xor a
 625  8B73 32 72 89     	ld (Obj_dibujado),a
 626  8B76
 627  8B76 11 36 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 628  8B79 CD 6D 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 629  8B7C
 630  8B7C CD 32 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 631  8B7F
 632  8B7F              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 633  8B7F
 634  8B7F CD 93 8C     	call Calcula_numero_de_disparotes
 635  8B82 CD 7B 8C     9 call Calcula_numero_de_malotes
 636  8B85
 637  8B85 3E 04        	ld a,4
 638  8B87 D3 FE        	out ($fe),a
 639  8B89
 640  8B89 C9           	ret
 641  8B8A
 642  8B8A              ; --------------------------------------------------------------------------------------------------------------
 643  8B8A              ;
 644  8B8A              ;	27/05/23
 645  8B8A
 646  8B8A              Mov_obj
 647  8B8A
 648  8B8A              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 649  8B8A
 650  8B8A 3A 7F 89     	ld a,(Ctrl_2)
 651  8B8D CB 4F        	bit 1,a
 652  8B8F 28 2E        	jr z,2F
 653  8B91
 654  8B91              ; Explosión:
 655  8B91
 656  8B91 3A 80 89     	ld a,(Frames_explosion)
 657  8B94 A7           	and a
 658  8B95 20 11        	jr nz,4F
 659  8B97
 660  8B97              ; Una alimaña menos!!!!!!!!!1
 661  8B97
 662  8B97 CD 76 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 663  8B9A 21 8B 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 664  8B9D 35           	dec (hl)
 665  8B9E 21 8C 89     	ld hl,Entidades_en_curso
 666  8BA1 35           	dec (hl)
 667  8BA2 21 8A 89     	ld hl,Numero_de_entidades
 668  8BA5 35           	dec (hl)
 669  8BA6 18 46        	jr 3F
 670  8BA8
 671  8BA8              ; -----
 672  8BA8
 673  8BA8 2A 51 89     4 ld hl,(Puntero_DESPLZ_der)
 674  8BAB 23           	inc hl
 675  8BAC 23           	inc hl
 676  8BAD 22 51 89     	ld (Puntero_DESPLZ_der),hl
 677  8BB0 CD AB 8C     	call Extrae_address
 678  8BB3 22 47 89     	ld (Puntero_objeto),hl
 679  8BB6
 680  8BB6 21 80 89     	ld hl,Frames_explosion
 681  8BB9 35           	dec (hl)
 682  8BBA
 683  8BBA CD 0E 8C     	call Guarda_foto_entidad_a_borrar
 684  8BBD 18 2F        	jr 3F
 685  8BBF
 686  8BBF AF           2 xor a
 687  8BC0 32 72 89     	ld (Obj_dibujado),a
 688  8BC3 32 71 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 689  8BC6              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 690  8BC6              ; 														; _de la entidad.
 691  8BC6 CD 28 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 692  8BC9              ;														; Obj_dibujado="0".
 693  8BC9              ; Movemos Entidades malignas.
 694  8BC9
 695  8BC9 21 74 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 696  8BCC 34           	inc (hl)
 697  8BCD 35           	dec (hl)                                            ; Salimos de la rutina.
 698  8BCE C8           	ret z
 699  8BCF
 700  8BCF CD DA 9B     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 701  8BD2
 702  8BD2 3A 71 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 703  8BD5 CB 67        	bit 4,a
 704  8BD7 C8           	ret z
 705  8BD8
 706  8BD8              ; Ha habido desplazamiento de la entidad maligna.
 707  8BD8              ; Ha llegado a zona de AMADEUS ???
 708  8BD8
 709  8BD8 3A 4A 89     	ld a,(Coordenada_y)
 710  8BDB FE 14        	cp $14
 711  8BDD D4 63 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 712  8BE0              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 713  8BE0              ; ---------
 714  8BE0
 715  8BE0 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 716  8BE2 32 72 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 717  8BE5 CD 28 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 718  8BE8 CD 3F 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 719  8BEB CD 0E 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 720  8BEE C9           3 ret													; _de la misma.
 721  8BEF
 722  8BEF              ; --------------------------------------------------------------------------------------------------------------
 723  8BEF              ;
 724  8BEF              ;	29/1/23
 725  8BEF
 726  8BEF              Mov_Amadeus
 727  8BEF
 728  8BEF AF           	xor a
 729  8BF0 32 72 89     	ld (Obj_dibujado),a
 730  8BF3 CD 28 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 731  8BF6              ;														; Obj_dibujado="0".
 732  8BF6              ; Movemos Amadeus.
 733  8BF6
 734  8BF6 CD 98 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 735  8BF9 3A 71 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 736  8BFC CB 67        	bit 4,a
 737  8BFE C8           	ret z
 738  8BFF
 739  8BFF              ; ---------
 740  8BFF
 741  8BFF 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 742  8C01 32 72 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 743  8C04 CD 28 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 744  8C07 CD 3F 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 745  8C0A CD 0E 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 746  8C0D C9           	ret													; _de la nave.
 747  8C0E
 748  8C0E              ; --------------------------------------------------------------------------------------------------------------
 749  8C0E              ;
 750  8C0E              ;	31/01/23
 751  8C0E              ;
 752  8C0E              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 753  8C0E
 754  8C0E              Guarda_foto_entidad_a_borrar
 755  8C0E
 756  8C0E CD D6 94     	call Prepara_draw
 757  8C11 CD 10 94     	call calcula_CColumnass
 758  8C14 CD 47 94     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 759  8C17 CD 9C 94     	call Define_rutina_de_impresion
 760  8C1A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 761  8C1D C9           	ret
 762  8C1E
 763  8C1E              ; --------------------------------------------------------------------------------------------------------------
 764  8C1E              ;
 765  8C1E              ;	31/01/23
 766  8C1E              ;
 767  8C1E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 768  8C1E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 769  8C1E
 770  8C1E              Guarda_foto_entidad_a_pintar
 771  8C1E
 772  8C1E CD 4B 8C     	call Repone_pintar
 773  8C21 CD FC 91     	call Draw
 774  8C24 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 775  8C27 C9           	ret
 776  8C28
 777  8C28              ; --------------------------------------------------------------------------------------------------------------
 778  8C28              ;
 779  8C28              ;
 780  8C28
 781  8C28 21 43 89     Prepara_var_pintado_borrado	ld hl,Filas
 782  8C2B 3A 72 89     	ld a,(Obj_dibujado)
 783  8C2E A7           	and a
 784  8C2F 28 05        	jr z,1F
 785  8C31 11 67 89     	ld de,Variables_de_pintado
 786  8C34 18 03        	jr 2F
 787  8C36 11 5D 89     1 ld de,Variables_de_borrado
 788  8C39 01 08 00     2 ld bc,8
 789  8C3C ED B0        	ldir
 790  8C3E C9           	ret
 791  8C3F
 792  8C3F              ; --------------------------------------------------------------------------------------------------------------
 793  8C3F
 794  8C3F 21 5D 89     Repone_borrar ld hl,Variables_de_borrado
 795  8C42 11 43 89     	ld de,Filas
 796  8C45 01 08 00     	ld bc,8
 797  8C48 ED B0        	ldir
 798  8C4A C9           	ret
 799  8C4B
 800  8C4B 21 67 89     Repone_pintar ld hl,Variables_de_pintado
 801  8C4E 11 43 89     	ld de,Filas
 802  8C51 01 08 00     	ld bc,8
 803  8C54 ED B0        	ldir
 804  8C56 C9           	ret
 805  8C57
 806  8C57              ; *************************************************************************************************************************************************************
 807  8C57              ;
 808  8C57              ; 8/1/23
 809  8C57              ;
 810  8C57              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 811  8C57              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 812  8C57              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 813  8C57
 814  8C57              ; Destruye HL y DE !!!!!
 815  8C57
 816  8C57              Inicia_punteros_de_cajas
 817  8C57
 818  8C57 21 1E 85     	ld hl,Indice_de_cajas
 819  8C5A CD AB 8C         call Extrae_address
 820  8C5D 22 84 89         ld (Puntero_store_caja),hl
 821  8C60 21 20 85     	ld hl,Indice_de_cajas+2
 822  8C63 22 88 89     	ld (Indice_restore_caja),hl
 823  8C66 CD AB 8C     	call Extrae_address
 824  8C69 22 86 89     	ld (Puntero_restore_caja),hl
 825  8C6C C9               ret
 826  8C6D
 827  8C6D              ; *************************************************************************************************************************************************************
 828  8C6D              ;
 829  8C6D              ; 8/1/23
 830  8C6D              ;
 831  8C6D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 832  8C6D
 833  8C6D 21 B6 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 834  8C70 22 9B 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 835  8C73 C9           	ret
 836  8C74 21 9E 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 837  8C77 22 9D 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 838  8C7A C9           	ret
 839  8C7B
 840  8C7B              ; -------------------------------------------------------------------------------------------------------------
 841  8C7B              ;
 842  8C7B              ; 28/2/23
 843  8C7B              ;
 844  8C7B
 845  8C7B              Calcula_numero_de_malotes
 846  8C7B
 847  8C7B 21 00 70     	ld hl,Album_de_fotos
 848  8C7E EB           	ex de,hl
 849  8C7F 2A 96 89     	ld hl,(Stack_snapshot)
 850  8C82
 851  8C82 06 00        	ld b,0
 852  8C84 7D           	ld a,l
 853  8C85 93           	sub e
 854  8C86 28 07        	jr z,1F
 855  8C88
 856  8C88              ; Nº de malotes no es "0".
 857  8C88
 858  8C88 D6 06        2 sub 6
 859  8C8A 04           	inc b
 860  8C8B A7           	and a
 861  8C8C 20 FA        	jr nz,2B
 862  8C8E 78           	ld a,b
 863  8C8F
 864  8C8F 32 8D 89     1 ld (Numero_de_malotes),a
 865  8C92 C9           	ret
 866  8C93
 867  8C93              ; -------------------------------------------------------------------------------------------------------------
 868  8C93              ;
 869  8C93              ; 28/2/23
 870  8C93              ;
 871  8C93
 872  8C93              Calcula_numero_de_disparotes
 873  8C93
 874  8C93 21 85 70     	ld hl,Album_de_fotos_disparos
 875  8C96 EB           	ex de,hl
 876  8C97 2A 98 89     	ld hl,(Stack_snapshot_disparos)
 877  8C9A
 878  8C9A 06 00        	ld b,0
 879  8C9C 7D           	ld a,l
 880  8C9D 93           	sub e
 881  8C9E 28 07        	jr z,1F
 882  8CA0
 883  8CA0              ; Nº de malotes no es "0".
 884  8CA0
 885  8CA0 D6 06        2 sub 6
 886  8CA2 04           	inc b
 887  8CA3 A7           	and a
 888  8CA4 20 FA        	jr nz,2B
 889  8CA6 78           	ld a,b
 890  8CA7
 891  8CA7 32 9A 89     1 ld (Numero_de_disparotes),a
 892  8CAA C9           	ret
 893  8CAB              ; *************************************************************************************************************************************************************
 894  8CAB              ;
 895  8CAB              ; 20/10/22
 896  8CAB              ;
 897  8CAB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 898  8CAB              ;
 899  8CAB              ; Destruye el puntero y DE !!!!!
 900  8CAB
 901  8CAB 5E           Extrae_address ld e,(hl)
 902  8CAC 23           	inc hl
 903  8CAD 56           	ld d,(hl)
 904  8CAE 2B           	dec hl
 905  8CAF EB           	ex de,hl
 906  8CB0 C9           	ret
 907  8CB1
 908  8CB1              ; *************************************************************************************************************************************************************
 909  8CB1              ;
 910  8CB1              ;	7/2/23
 911  8CB1              ;
 912  8CB1              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 913  8CB1              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 914  8CB1              ;
 915  8CB1              ;   Destruye HL y BC !!!!!,
 916  8CB1              ;
 917  8CB1              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 918  8CB1              ;					"0" ..... Izquierda.
 919  8CB1
 920  8CB1              Inicia_Puntero_objeto
 921  8CB1
 922  8CB1 3A 57 89     	ld a,(Cuad_objeto)
 923  8CB4 E6 01        	and 1
 924  8CB6 F5           	push af
 925  8CB7 CC D5 8C     	call z,Inicia_puntero_objeto_izq
 926  8CBA F1           	pop af
 927  8CBB 28 2B        	jr z,1F
 928  8CBD CD C2 8C     	call Inicia_puntero_objeto_der
 929  8CC0 18 26        	jr 1F
 930  8CC2
 931  8CC2              ; Arrancamos desde la parte izquierda de la pantalla.
 932  8CC2              ; Iniciamos (Indice_Sprite_der).
 933  8CC2
 934  8CC2 2A 4D 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 935  8CC5 22 51 89     	ld (Puntero_DESPLZ_der),hl
 936  8CC8 CD AB 8C     	call Extrae_address
 937  8CCB 22 47 89     	ld (Puntero_objeto),hl
 938  8CCE
 939  8CCE 2A 4F 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 940  8CD1 22 53 89     	ld (Puntero_DESPLZ_izq),hl
 941  8CD4 C9           	ret
 942  8CD5
 943  8CD5              ; Arrancamos desde la parte derecha de la pantalla.
 944  8CD5              ; Iniciamos (Indice_Sprite_izq).
 945  8CD5
 946  8CD5 2A 4F 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 947  8CD8 22 53 89     	ld (Puntero_DESPLZ_izq),hl
 948  8CDB CD AB 8C     	call Extrae_address
 949  8CDE 22 47 89     	ld (Puntero_objeto),hl
 950  8CE1
 951  8CE1 2A 4D 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 952  8CE4 22 51 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 953  8CE7 C9           	ret
 954  8CE8
 955  8CE8              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 956  8CE8
 957  8CE8 21 38 83     1 ld hl,Amadeus
 958  8CEB ED 4B 47 89  	ld bc,(Puntero_objeto)
 959  8CEF B7 ED 42     	sub hl,bc
 960  8CF2 C0           	ret nz
 961  8CF3 21 71 89     	ld hl,Ctrl_0
 962  8CF6 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 963  8CF8 C9           	ret 												; _de nuestra nave en los extremos.
 964  8CF9
 965  8CF9              ; *************************************************************************************************************************************************************
 966  8CF9              ;
 967  8CF9              ;	14/5/23
 968  8CF9              ;
 969  8CF9              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 970  8CF9              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 971  8CF9
 972  8CF9              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 973  8CF9              ;	_de la 2ª y 3ª entidad respectivamente.
 974  8CF9
 975  8CF9              Store_Restore_cajas
 976  8CF9
 977  8CF9 E5           	push hl
 978  8CFA D5           	push de
 979  8CFB C5            	push bc
 980  8CFC
 981  8CFC              ;	STORE !!!!!
 982  8CFC              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 983  8CFC
 984  8CFC 21 43 89     	ld hl,Filas
 985  8CFF ED 5B 84 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 986  8D03 01 3E 00     	ld bc,62
 987  8D06 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 988  8D08
 989  8D08              ; 	Entidad_sospechosa. 20/4/23
 990  8D08
 991  8D08 3A 5C 89     	ld a,(Impacto)
 992  8D0B A7           	and a
 993  8D0C 28 0C        	jr z,1F
 994  8D0E
 995  8D0E 2A 84 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 996  8D11 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 997  8D14 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 998  8D15 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 999  8D17 22 A0 89     	ld (Entidad_sospechosa_de_colision),hl
1000  8D1A
1001  8D1A              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1002  8D1A
1003  8D1A 2A 86 89     1 ld hl,(Puntero_restore_caja)
1004  8D1D 7E           	ld a,(hl)
1005  8D1E A7           	and a
1006  8D1F F5           	push af
1007  8D20 28 08        	jr z,2F
1008  8D22
1009  8D22 11 43 89     	ld de,Filas
1010  8D25 01 3E 00     	ld bc,62
1011  8D28 ED B0        	ldir
1012  8D2A
1013  8D2A CD 46 8D     2 call Incrementa_punteros_de_cajas
1014  8D2D F1           	pop af
1015  8D2E 28 EA        	jr z,1B
1016  8D30
1017  8D30 C1           	pop bc
1018  8D31 D1           	pop de
1019  8D32 E1           	pop hl
1020  8D33
1021  8D33 C9           	ret
1022  8D34
1023  8D34              ; **************************************************************************************************
1024  8D34              ;
1025  8D34              ;	12/05/23
1026  8D34              ;
1027  8D34              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1028  8D34
1029  8D34 E5           Restore_entidad push hl
1030  8D35 D5           	push de
1031  8D36 C5            	push bc
1032  8D37
1033  8D37 2A 84 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1034  8D3A 11 43 89     	ld de,Filas
1035  8D3D 01 3E 00     	ld bc,62
1036  8D40 ED B0        	ldir
1037  8D42
1038  8D42 C1           	pop bc
1039  8D43 D1           	pop de
1040  8D44 E1           	pop hl
1041  8D45 C9           	ret
1042  8D46
1043  8D46
1044  8D46              ; **************************************************************************************************
1045  8D46              ;
1046  8D46              ;	08/05/23
1047  8D46              ;
1048  8D46              ;	Incrementamos los dos punteros de entidades. (+1).
1049  8D46
1050  8D46 2A 86 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1051  8D49 22 84 89     	ld (Puntero_store_caja),hl
1052  8D4C 2A 88 89     	ld hl,(Indice_restore_caja)
1053  8D4F 23           	inc hl
1054  8D50 23           	inc hl
1055  8D51 22 88 89     	ld (Indice_restore_caja),hl
1056  8D54 CD AB 8C         call Extrae_address
1057  8D57 22 86 89         ld (Puntero_restore_caja),hl
1058  8D5A C9               ret
1059  8D5B
1060  8D5B              ; **************************************************************************************************
1061  8D5B              ;
1062  8D5B              ;	25/01/23
1063  8D5B              ;
1064  8D5B              ;	Restore_Amadeus
1065  8D5B              ;
1066  8D5B              ;	Cargamos en DRAW los parámetros de Amadeus.
1067  8D5B              ;
1068  8D5B
1069  8D5B E5           Restore_Amadeus	push hl
1070  8D5C D5           	push de
1071  8D5D C5            	push bc
1072  8D5E 21 36 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1073  8D61 11 43 89     	ld de,Filas
1074  8D64 01 3E 00     	ld bc,62
1075  8D67 ED B0        	ldir
1076  8D69 C1           	pop bc
1077  8D6A D1           	pop de
1078  8D6B E1           	pop hl
1079  8D6C C9           	ret
1080  8D6D
1081  8D6D              ; *************************************************************************************************************************************************************
1082  8D6D              ;
1083  8D6D              ;	29/04/23
1084  8D6D              ;
1085  8D6D              ;	Store_Amadeus
1086  8D6D              ;
1087  8D6D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1088  8D6D              ;
1089  8D6D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1090  8D6D              ;
1091  8D6D              ;	DESTRUYE: HL y BC y DE.
1092  8D6D
1093  8D6D 21 43 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1094  8D70 01 3E 00     	ld bc,62
1095  8D73 ED B0        	ldir
1096  8D75 C9           	ret
1097  8D76
1098  8D76              ; -----------------------------------------------------------
1099  8D76              ;
1100  8D76              ;	27/04/23
1101  8D76              ;
1102  8D76              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1103  8D76              ;
1104  8D76              ;	Destruye: HL,BC,DE,A
1105  8D76
1106  8D76 21 43 89     Borra_datos_entidad ld hl,Filas
1107  8D79 01 3D 00     	ld bc,61
1108  8D7C AF           	xor a
1109  8D7D 77           	ld (hl),a
1110  8D7E 11 44 89     	ld de,Filas+1
1111  8D81 ED B0        	ldir
1112  8D83 C9           	ret
1113  8D84
1114  8D84              ; -----------------------------------------------------------
1115  8D84
1116  8D84              ; Teclado.
1117  8D84
1118  8D84 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1119  8D86 DB FE        	in a,($fe)
1120  8D88 E6 01        	and $01
1121  8D8A 28 02        	jr z,1f
1122  8D8C 18 F6        	jr Pulsa_ENTER
1123  8D8E C9           1 ret
1124  8D8F
1125  8D8F              ; **************************************************************************************************
1126  8D8F              ;
1127  8D8F              ; Temporización.
1128  8D8F
1129  8D8F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1130  8D8F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1131  8D8F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1132  8D8F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1133  8D8F
1134  8D8F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1135  8D8F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1136  8D8F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1137  8D8F
1138  8D8F              ; A partir de $4f61 no hace falta DELAY.
1139  8D8F
1140  8D8F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1141  8D8F
1142  8D8F 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1143  8D92 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1144  8D93 78           	LD A,B
1145  8D94 A7           	AND A
1146  8D95 20 FB        	JR NZ,wait
1147  8D97 C9           	RET
1148  8D98
1149  8D98              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1150  8D98              ;
1151  8D98              ;	5/3/23
1152  8D98              ;
1153  8D98              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1154  8D98
1155  8D98              Movimiento_Amadeus
1156  8D98
1157  8D98              ; Disparo.
1158  8D98
1159  8D98 3A AD 89     	ld a,(Habilita_disparo_Amadeus)
1160  8D9B A7           	and a
1161  8D9C 20 02        	jr nz,1F
1162  8D9E 18 15        	jr 2F
1163  8DA0
1164  8DA0 3E F7        1 ld a,$f7													; "5" para disparar.
1165  8DA2 DB FE        	in a,($fe)
1166  8DA4 E6 10        	and $10
1167  8DA6
1168  8DA6 F5           	push af
1169  8DA7 CC DF 8D     	call z,Genera_disparo
1170  8DAA F1           	pop af
1171  8DAB 20 08        	jr nz,2F
1172  8DAD
1173  8DAD 3A AD 89     	ld a,(Habilita_disparo_Amadeus)
1174  8DB0 EE 01        	xor 1
1175  8DB2 32 AD 89     	ld (Habilita_disparo_Amadeus),a
1176  8DB5
1177  8DB5 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1178  8DB7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1179  8DB9 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1180  8DBB CC 7A 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1181  8DBE 3E F7        	ld a,$f7
1182  8DC0 DB FE        	in a,($fe)
1183  8DC2 E6 01        	and $01
1184  8DC4 C8           	ret z
1185  8DC5
1186  8DC5 3E F7        	ld a,$f7
1187  8DC7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1188  8DC9 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1189  8DCB CC 5C 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1190  8DCE C9           	ret
1191  8DCF
1192  8DCF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1193  8DCF              ;
1194  8DCF              ;	Rutina provisional para que los malotes cagen balas.
1195  8DCF
1196  8DCF              Detecta_disparo_entidad
1197  8DCF
1198  8DCF 3A B0 89     	ld a,(Habilita_disparo_entidad)
1199  8DD2 A7           	and a
1200  8DD3 C8           	ret z
1201  8DD4 3E 7F        	ld a,$7f
1202  8DD6 DB FE        	in a,($fe)
1203  8DD8 E6 01        	and 1
1204  8DDA C0           	ret nz
1205  8DDB CD DF 8D     	call Genera_disparo
1206  8DDE C9           	ret
1207  8DDF
1208  8DDF              ; ---------------------------------------------------------------
1209  8DDF
1210  8DDF              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DDF              ; ******************************************************************************************************************************************************************************************
   2+ 8DDF              ;
   3+ 8DDF              ;   17/04/23
   4+ 8DDF              ;
   5+ 8DDF              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DDF              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DDF              ;
   8+ 8DDF              ;
   9+ 8DDF              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DDF              ;
  11+ 8DDF              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DDF              ;               _ hacen las entidades hacia abajo.
  13+ 8DDF              ;
  14+ 8DDF              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DDF              ;
  16+ 8DDF              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DDF              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DDF              ;
  19+ 8DDF              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DDF              ;           _ la bala.
  21+ 8DDF              ;
  22+ 8DDF              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DDF              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DDF              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DDF              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DDF              ;           _ en el momento de generarse la bala)).
  27+ 8DDF
  28+ 8DDF              Genera_disparo
  29+ 8DDF
  30+ 8DDF              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DDF              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DDF              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DDF              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DDF              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DDF              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DDF              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DDF
  38+ 8DDF              ; Exclusiones:
  39+ 8DDF
  40+ 8DDF 3A 7B 89         ld a,(Columnas)
  41+ 8DE2 47               ld b,a
  42+ 8DE3 3A 44 89         ld a,(Columns)
  43+ 8DE6 B8               cp b
  44+ 8DE7 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8DE8
  46+ 8DE8              ; ----- ----- -----
  47+ 8DE8
  48+ 8DE8 3A 71 89         ld a,(Ctrl_0)
  49+ 8DEB CB 77            bit 6,a
  50+ 8DED 20 06            jr nz,14F
  51+ 8DEF
  52+ 8DEF 3A 4A 89         ld a,(Coordenada_y)
  53+ 8DF2 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8DF4 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8DF5
  56+ 8DF5 21 00 80     14 ld hl,Indice_disparo
  57+ 8DF8 3A 4B 89         ld a,(CTRL_DESPLZ)
  58+ 8DFB 4F               ld c,a
  59+ 8DFC 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8DFE              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8DFE              ;                                            ""        ""       "f9", B="1"
  62+ 8DFE              ;                                            ""        ""       "fb", B="2"
  63+ 8DFE              ;                                            ""        ""       "fb", B="3"
  64+ 8DFE A7               and a
  65+ 8DFF 28 10            jr z,1F
  66+ 8E01 E6 01            and 1
  67+ 8E03 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E04
  69+ 8E04 79               ld a,c
  70+ 8E05 16 F9            ld d,$f9
  71+ 8E07 23           2 inc hl
  72+ 8E08 23               inc hl
  73+ 8E09 04               inc b
  74+ 8E0A BA               cp d
  75+ 8E0B 28 04            jr z,1F
  76+ 8E0D 14               inc d
  77+ 8E0E 14               inc d
  78+ 8E0F 18 F6            jr 2B
  79+ 8E11
  80+ 8E11 CD AB 8C     1 call Extrae_address
  81+ 8E14 E5               push hl
  82+ 8E15 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E17 DD 21 75 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E1B
  85+ 8E1B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E1B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E1B
  88+ 8E1B 3A 71 89         ld a,(Ctrl_0)
  89+ 8E1E CB 77            bit 6,a
  90+ 8E20 20 04            jr nz,19F
  91+ 8E22
  92+ 8E22 AF               xor a
  93+ 8E23 32 B0 89         ld (Habilita_disparo_entidad),a
  94+ 8E26
  95+ 8E26 3A 57 89     19 ld a,(Cuad_objeto)
  96+ 8E29 FE 02            cp 2
  97+ 8E2B 38 66            jr c,3F
  98+ 8E2D 28 64            jr z,3F
  99+ 8E2F
 100+ 8E2F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E2F
 102+ 8E2F E6 01            and 1
 103+ 8E31 28 30            jr z,4F
 104+ 8E33
 105+ 8E33              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E33              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E33              ;
 108+ 8E33              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E33              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E33              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E33
 112+ 8E33 2A 45 89     	ld hl,(Posicion_actual)
 113+ 8E36
 114+ 8E36              ;   Amadeus o entidad ???.
 115+ 8E36
 116+ 8E36 3A 71 89         ld a,(Ctrl_0)
 117+ 8E39 CB 77            bit 6,a
 118+ 8E3B 28 0A            jr z,8F
 119+ 8E3D
 120+ 8E3D              ; 	Dispara Amadeus.
 121+ 8E3D
 122+ 8E3D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E3F CD F1 94         call PreviousScan
 124+ 8E42 CD F1 94         call PreviousScan
 125+ 8E45
 126+ 8E45              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E45              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E45              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E45              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E45
 131+ 8E45 18 11            jr 10F
 132+ 8E47
 133+ 8E47              ; 	Dispara Entidad.
 134+ 8E47
 135+ 8E47 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E4A              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E4A
 138+ 8E4A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E4A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E4A
 141+ 8E4A C5               push bc
 142+ 8E4B 06 10            ld b,16
 143+ 8E4D CD E2 94     9 call NextScan
 144+ 8E50 10 FB            djnz 9B
 145+ 8E52 C1               pop bc
 146+ 8E53 CD BD 8E         call Ajusta_disparo_parte_izquierda
 147+ 8E56 18 06            jr 17F
 148+ 8E58
 149+ 8E58              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8E58              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8E58              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8E58              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8E58
 154+ 8E58 CD BD 8E     10 call Ajusta_disparo_parte_izquierda
 155+ 8E5B CD 32 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8E5E              ;                                                      ; _al generar el disparo.
 157+ 8E5E
 158+ 8E5E              ; 	LLegados a este punto tendremos:
 159+ 8E5E              ;
 160+ 8E5E              ;       Puntero_objeto_disparo en IY.
 161+ 8E5E              ;       Rutinas_de_impresion en IX.
 162+ 8E5E              ;       Puntero_de_impresion en HL.
 163+ 8E5E              ;       Impacto/Dirección en BC.
 164+ 8E5E
 165+ 8E5E CD C5 8E     17 call Almacena_disparo
 166+ 8E61 18 52            jr 6F                                             ; RET.
 167+ 8E63
 168+ 8E63              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8E63              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8E63              ;
 171+ 8E63              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8E63              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8E63              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8E63
 175+ 8E63 2A 45 89     4 ld hl,(Posicion_actual)
 176+ 8E66
 177+ 8E66              ;   Amadeus o entidad ???.
 178+ 8E66
 179+ 8E66 3A 71 89         ld a,(Ctrl_0)
 180+ 8E69 CB 77            bit 6,a
 181+ 8E6B 28 0A            jr z,11F
 182+ 8E6D
 183+ 8E6D              ; 	Dispara Amadeus.
 184+ 8E6D
 185+ 8E6D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8E6F CD F1 94         call PreviousScan
 187+ 8E72 CD F1 94         call PreviousScan
 188+ 8E75
 189+ 8E75              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8E75              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8E75              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8E75              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8E75
 194+ 8E75 18 11            jr 13F
 195+ 8E77
 196+ 8E77              ; 	Dispara Entidad.
 197+ 8E77
 198+ 8E77 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8E7A              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8E7A
 201+ 8E7A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8E7A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8E7A
 204+ 8E7A C5               push bc
 205+ 8E7B 06 10            ld b,16
 206+ 8E7D CD E2 94     12 call NextScan
 207+ 8E80 10 FB            djnz 12B
 208+ 8E82 C1               pop bc
 209+ 8E83
 210+ 8E83 CD B6 8E         call Ajusta_disparo_parte_derecha
 211+ 8E86 18 06            jr 18F
 212+ 8E88
 213+ 8E88              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8E88              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8E88              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8E88              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8E88
 218+ 8E88 CD B6 8E     13 call Ajusta_disparo_parte_derecha
 219+ 8E8B CD 32 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8E8E              ;                                                       ; _al generar el disparo.
 221+ 8E8E
 222+ 8E8E              ; LLegados a este punto tendremos:
 223+ 8E8E              ;
 224+ 8E8E              ;       Puntero_objeto_disparo en IY.
 225+ 8E8E              ;       Rutinas_de_impresion en IX.
 226+ 8E8E              ;       Puntero_de_impresion en HL.
 227+ 8E8E              ;       Impacto/Dirección en BC.
 228+ 8E8E
 229+ 8E8E CD C5 8E     18 call Almacena_disparo
 230+ 8E91 18 22            jr 6F                                               ; RET.
 231+ 8E93
 232+ 8E93              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8E93
 234+ 8E93 28 11        3 jr z,5F
 235+ 8E95
 236+ 8E95              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8E95              ;
 238+ 8E95              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8E95              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8E95              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8E95              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8E95
 243+ 8E95              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8E95              ;	   ""        ""       "f9", B="1"
 245+ 8E95              ;	   ""        ""       "fb", B="2"
 246+ 8E95              ; 	   ""        ""       "fb", B="3"
 247+ 8E95
 248+ 8E95 2A 45 89     	ld hl,(Posicion_actual)
 249+ 8E98 CD E2 94     	call NextScan
 250+ 8E9B
 251+ 8E9B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8E9B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8E9B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8E9B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8E9B
 256+ 8E9B CD BD 8E         call Ajusta_disparo_parte_izquierda
 257+ 8E9E
 258+ 8E9E              ; 	No se produce impacto. B="$80"
 259+ 8E9E              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8E9E
 261+ 8E9E 01 80 80         ld bc,$8080
 262+ 8EA1
 263+ 8EA1              ; 	LLegados a este punto tendremos:
 264+ 8EA1              ;
 265+ 8EA1              ;       Puntero_objeto_disparo en IY.
 266+ 8EA1              ;       Rutinas_de_impresion en IX.
 267+ 8EA1              ;       Puntero_de_impresion en HL.
 268+ 8EA1              ;       Impacto/Dirección en BC.
 269+ 8EA1
 270+ 8EA1 CD C5 8E         call Almacena_disparo
 271+ 8EA4 18 0F            jr 6F                                           ; RET.
 272+ 8EA6
 273+ 8EA6              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EA6              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EA6              ;
 276+ 8EA6              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EA6              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EA6              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EA6              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EA6
 281+ 8EA6 2A 45 89     5 ld hl,(Posicion_actual)
 282+ 8EA9 CD E2 94     	call NextScan
 283+ 8EAC
 284+ 8EAC              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8EAC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8EAC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8EAC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8EAC
 289+ 8EAC CD B6 8E         call Ajusta_disparo_parte_derecha
 290+ 8EAF
 291+ 8EAF              ; 	No se produce impacto. B="$80"
 292+ 8EAF              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8EAF
 294+ 8EAF 01 80 80     15 ld bc,$8080
 295+ 8EB2
 296+ 8EB2              ; 	LLegados a este punto tendremos:
 297+ 8EB2              ;
 298+ 8EB2              ;       Puntero_objeto_disparo en IY.
 299+ 8EB2              ;       Rutinas_de_impresion en IX.
 300+ 8EB2              ;       Puntero_de_impresion en HL.
 301+ 8EB2              ;       Impacto/Dirección en BC.
 302+ 8EB2
 303+ 8EB2 CD C5 8E         call Almacena_disparo
 304+ 8EB5
 305+ 8EB5 C9           6 ret
 306+ 8EB6
 307+ 8EB6              ; ----------------------------------------------------------------
 308+ 8EB6              ;
 309+ 8EB6              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8EB6              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8EB6              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8EB6
 313+ 8EB6 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8EB7 FE 02            cp 2
 315+ 8EB9 38 01            jr c,1F
 316+ 8EBB 23               inc hl
 317+ 8EBC C9           1 ret
 318+ 8EBD
 319+ 8EBD 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8EBE FE 01        	cp 1
 321+ 8EC0 20 01        	jr nz,1F
 322+ 8EC2 2B           	dec hl
 323+ 8EC3 2B           1 dec hl
 324+ 8EC4 C9               ret
 325+ 8EC5
 326+ 8EC5              ; ----------------------------------------------------------------
 327+ 8EC5              ;
 328+ 8EC5              ;   25/02/23
 329+ 8EC5              ;
 330+ 8EC5              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8EC5              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8EC5              ;
 333+ 8EC5              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8EC5              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8EC5
 336+ 8EC5              Almacena_disparo
 337+ 8EC5
 338+ 8EC5 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8EC6 F1               pop af
 340+ 8EC7 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8EC8
 342+ 8EC8 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8EC9 E6 01            and 1
 344+ 8ECB 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8ECD              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8ECD              ; 	Dispara AMADEUS.
 347+ 8ECD
 348+ 8ECD              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8ECD              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8ECD              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8ECD              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8ECD
 353+ 8ECD C5               push bc
 354+ 8ECE 01 A2 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8ED1 2A 9D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8ED4 A7               and a
 357+ 8ED5 ED 42            sbc hl,bc
 358+ 8ED7 CC 74 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8EDA C1               pop bc
 360+ 8EDB 28 54            jr z,4F
 361+ 8EDD
 362+ 8EDD 2A 9D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8EE0 23               inc hl
 364+ 8EE1 23               inc hl
 365+ 8EE2 22 9D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8EE5              ;                                                   ; _ Disparo_(+1).
 367+ 8EE5 18 18            jr 2F
 368+ 8EE7
 369+ 8EE7              ; Dispara una entidad.
 370+ 8EE7
 371+ 8EE7 C5           1 push bc
 372+ 8EE8 01 CA 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8EEB 2A 9B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8EEE A7               and a
 375+ 8EEF ED 42            sbc hl,bc
 376+ 8EF1 CC 6D 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8EF4 C1               pop bc
 378+ 8EF5 28 3A            jr z,4F
 379+ 8EF7
 380+ 8EF7 2A 9B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8EFA 23               inc hl
 382+ 8EFB 23               inc hl
 383+ 8EFC 22 9B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8EFF              ;                                                   ; _ Disparo_(+1).
 385+ 8EFF CD AB 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F02              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F02              ;
 388+ 8F02              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F02              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F02              ;                                                     Puntero_de_impresion en HL.
 391+ 8F02              ;                                                     Impacto/Dirección en BC.
 392+ 8F02
 393+ 8F02 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F03 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F04 23               inc hl                                          ; _ al siguiente.
 396+ 8F05 A7               and a
 397+ 8F06 20 C0            jr nz,3B
 398+ 8F08
 399+ 8F08 08               ex af,af
 400+ 8F09 ED 73 92 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F0D F9               ld sp,hl
 402+ 8F0E
 403+ 8F0E DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F10 F5               push af                                         ; Puntero de impresión.
 405+ 8F11 FD E5            push iy                                         ; Puntero objeto.
 406+ 8F13 C5               push bc                                         ; Control.
 407+ 8F14
 408+ 8F14 ED 7B 92 89      ld sp,(Stack)
 409+ 8F18
 410+ 8F18              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F18
 412+ 8F18 21 81 89     	ld hl,Ctrl_1
 413+ 8F1B CB C6        	set 0,(hl)
 414+ 8F1D
 415+ 8F1D DD E5        	push ix
 416+ 8F1F E1               pop hl
 417+ 8F20 F5               push af
 418+ 8F21 DD E1            pop ix
 419+ 8F23
 420+ 8F23 CD A0 7F     	call Guarda_foto_registros
 421+ 8F26
 422+ 8F26 21 81 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F29 CB 86        	res 0,(hl)
 424+ 8F2B
 425+ 8F2B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F2B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F2B
 428+ 8F2B CD 74 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F2E CD 6D 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F31
 431+ 8F31 C9           4 ret
 432+ 8F32
 433+ 8F32              ; ----------------------------------------------------------------
 434+ 8F32              ;
 435+ 8F32              ;   4/3/23
 436+ 8F32              ;
 437+ 8F32              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F32              ;   _ al generarse el disparo.
 439+ 8F32              ;
 440+ 8F32              ;       "$80" ..... No se produce colisión.
 441+ 8F32              ;       "$81" ..... Se produce colisión.
 442+ 8F32
 443+ 8F32              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F32              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F32
 446+ 8F32
 447+ 8F32 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F34 E5               push hl                                        ; Puntero de impresión.
 449+ 8F35
 450+ 8F35 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F37 CD 53 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F3A
 453+ 8F3A 7B               ld a,e
 454+ 8F3B E6 01            and 1
 455+ 8F3D 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F3F
 457+ 8F3F E1               pop hl
 458+ 8F40 E5               push hl
 459+ 8F41 CD E2 94         call NextScan
 460+ 8F44
 461+ 8F44 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F45 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F47 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F49              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F49 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8F4B CD 53 8F         call Bucle_2
 467+ 8F4E
 468+ 8F4E 43           2 ld b,e
 469+ 8F4F E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8F50 FD E1            pop iy
 471+ 8F52 C9               ret
 472+ 8F53
 473+ 8F53               ; ---------- ----------
 474+ 8F53
 475+ 8F53 06 02        Bucle_2 ld b,2
 476+ 8F55 FD 7E 00     2 ld a,(iy)
 477+ 8F58 A6               and (hl)
 478+ 8F59 28 02            jr z,1F
 479+ 8F5B 1E 81            ld e,$81
 480+ 8F5D 23           1 inc hl
 481+ 8F5E FD 23            inc iy
 482+ 8F60 10 F3            djnz 2B
 483+ 8F62 C9               ret
 484+ 8F63
 485+ 8F63              ; -------------------------------------------------------------------------------------------------------------
 486+ 8F63              ;
 487+ 8F63              ;   11/04/23
 488+ 8F63              ;
 489+ 8F63              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8F63              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8F63              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8F63              ;
 493+ 8F63              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8F63
 495+ 8F63              Compara_coordenadas_X
 496+ 8F63
 497+ 8F63              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8F63              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8F63
 500+ 8F63              ; Preparamos registros:
 501+ 8F63
 502+ 8F63 21 49 89         ld hl,Filas+6
 503+ 8F66 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8F67 23               inc hl
 505+ 8F68 23               inc hl
 506+ 8F69 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8F6A 43               ld b,e
 508+ 8F6B 21 57 89         ld hl,Filas+20
 509+ 8F6E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8F6F 21 A7 89         ld hl,Coordenadas_X_Entidad
 511+ 8F72 CD 83 91         call Guarda_coordenadas_X
 512+ 8F75
 513+ 8F75              ; Preparamos registros:
 514+ 8F75
 515+ 8F75 21 3C 85         ld hl,Amadeus_db+6
 516+ 8F78 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8F79 23               inc hl
 518+ 8F7A 23               inc hl
 519+ 8F7B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8F7C 7B               ld a,e
 521+ 8F7D 08               ex af,af'
 522+ 8F7E 21 4A 85         ld hl,Amadeus_db+20
 523+ 8F81 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8F82 21 A4 89         ld hl,Coordenadas_X_Amadeus
 525+ 8F85 CD 83 91         call Guarda_coordenadas_X
 526+ 8F88
 527+ 8F88              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8F88              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8F88
 530+ 8F88 04               inc b
 531+ 8F89 05               dec b
 532+ 8F8A 28 04            jr z,1F
 533+ 8F8C 06 03            ld b,3
 534+ 8F8E 18 02            jr 2F
 535+ 8F90 06 02        1 ld b,2
 536+ 8F92 08           2 ex af,af'
 537+ 8F93 3C               inc a
 538+ 8F94 3D               dec a
 539+ 8F95 28 04            jr z,5F
 540+ 8F97 0E 03            ld c,3
 541+ 8F99 18 02            jr 6F
 542+ 8F9B 0E 02        5 ld c,2
 543+ 8F9D 79           6 ld a,c
 544+ 8F9E 08               ex af,af'
 545+ 8F9F 11 A7 89         ld de,Coordenadas_X_Entidad
 546+ 8FA2 1A           4 ld a,(de)
 547+ 8FA3 21 A4 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FA6 BE           3 cp (hl)
 549+ 8FA7 28 0E            jr z,7F
 550+ 8FA9 23               inc hl
 551+ 8FAA 0D               dec c
 552+ 8FAB 20 F9            jr nz,3B
 553+ 8FAD 13               inc de
 554+ 8FAE 08               ex af,af'
 555+ 8FAF 4F               ld c,a
 556+ 8FB0 08               ex af,af'
 557+ 8FB1 10 EF            djnz 4B
 558+ 8FB3
 559+ 8FB3              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8FB3
 561+ 8FB3 CD C2 91     8 call Limpia_Coordenadas_X
 562+ 8FB6 C9               ret
 563+ 8FB7
 564+ 8FB7              7
 565+ 8FB7 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8FB9 32 5C 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8FBC 21 9F 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8FBF CB D6            set 2,(hl)
 569+ 8FC1 18 F0            jr 8B
 570+ 8FC3
 571+ 8FC3              ; -----------------------------------------------------------------------
 572+ 8FC3              ;
 573+ 8FC3              ;   17/04/23
 574+ 8FC3              ;
 575+ 8FC3
 576+ 8FC3              Detecta_colision_nave_entidad
 577+ 8FC3
 578+ 8FC3              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8FC3
 580+ 8FC3 2A 45 89         ld hl,(Posicion_actual)
 581+ 8FC6 CD 47 94         call Calcula_puntero_de_impresion
 582+ 8FC9
 583+ 8FC9              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8FC9              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8FC9
 586+ 8FC9 DD E5            push ix
 587+ 8FCB E1               pop hl
 588+ 8FCC E5               push hl
 589+ 8FCD
 590+ 8FCD              ; ----- ----- -----
 591+ 8FCD 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8FCF 06 0A            ld b,10
 593+ 8FD1 CD 01 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8FD4 7B               ld a,e
 595+ 8FD5 FE 05            cp 5
 596+ 8FD7 38 0E            jr c,3F
 597+ 8FD9
 598+ 8FD9              ; LLegados a este punto:
 599+ 8FD9              ;
 600+ 8FD9              ;   HAY COLISIÓN !!!!!.
 601+ 8FD9              ;
 602+ 8FD9              ;   .db (Impacto) de Amadeus a "1".
 603+ 8FD9              ;   SET el bit3 de (Impacto2).
 604+ 8FD9              ;
 605+ 8FD9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8FD9
 607+ 8FD9 21 4F 85         ld hl,Amadeus_db+25
 608+ 8FDC 36 01            ld (hl),1
 609+ 8FDE 21 9F 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8FE1 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8FE3 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8FE5 18 18            jr 1F
 613+ 8FE7
 614+ 8FE7              ; -----
 615+ 8FE7
 616+ 8FE7 E1           3 pop hl
 617+ 8FE8 CD E2 94         call NextScan
 618+ 8FEB E5               push hl
 619+ 8FEC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8FED FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8FEF 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8FF1 30 0C            jr nc,1F
 623+ 8FF3              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8FF3 10 DC            djnz 2B
 625+ 8FF5
 626+ 8FF5              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8FF5
 628+ 8FF5              ; LLegados a este punto:
 629+ 8FF5              ;
 630+ 8FF5              ;   NO HAY COLISIÓN !!!!!.
 631+ 8FF5              ;
 632+ 8FF5              ;   .db (Impacto) de Amadeus a "0".
 633+ 8FF5              ;   RES el bit2 de (Impacto2).
 634+ 8FF5              ;
 635+ 8FF5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8FF5              ;   Lo colocamos a "0".
 637+ 8FF5
 638+ 8FF5 21 9F 89         ld hl,Impacto2
 639+ 8FF8 CB 96            res 2,(hl)
 640+ 8FFA 2A A0 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8FFD 36 00            ld (hl),0
 642+ 8FFF
 643+ 8FFF E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 9000 C9               ret
 645+ 9001
 646+ 9001               ; ---------- ----------
 647+ 9001
 648+ 9001 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 9002 3A 44 89         ld a,(Columns)
 650+ 9005 47               ld b,a
 651+ 9006 FD 7E 00     2 ld a,(iy)
 652+ 9009 BE               cp (hl)
 653+ 900A 28 01            jr z,1F
 654+ 900C
 655+ 900C 1C               inc e
 656+ 900D
 657+ 900D 23           1 inc hl
 658+ 900E FD 23            inc iy
 659+ 9010 10 F4            djnz 2B
 660+ 9012 C1               pop bc
 661+ 9013 C9               ret
 662+ 9014
 663+ 9014              ; -------------------------------------------------------------------------------------------------------------
 664+ 9014              ;
 665+ 9014              ;   13/03/23
 666+ 9014              ;
 667+ 9014              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9014              ;
 669+ 9014              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9014
 671+ 9014 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9017 7E               ld a,(hl)
 673+ 9018 A7               and a
 674+ 9019 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 901A
 676+ 901A 44               ld b,h
 677+ 901B 4D               ld c,l
 678+ 901C 2A 98 89         ld hl,(Stack_snapshot_disparos)
 679+ 901F E5               push hl
 680+ 9020 A7               and a
 681+ 9021 ED 42            sbc hl,bc
 682+ 9023 E5               push hl
 683+ 9024 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 9025
 685+ 9025 E1               pop hl
 686+ 9026 54               ld d,h
 687+ 9027 5D               ld e,l
 688+ 9028 1B               dec de
 689+ 9029 ED B8            lddr                                                ; Limpiamos.
 690+ 902B
 691+ 902B 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 902E 22 98 89         ld (Stack_snapshot_disparos),hl
 693+ 9031
 694+ 9031 C9               ret
 695+ 9032
 696+ 9032              ; -------------------------------------------------------------------------------------------------------------
 697+ 9032              ;
 698+ 9032              ;   28/03/23
 699+ 9032              ;
 700+ 9032
 701+ 9032 01 B4 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 9035 2A 9D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9038
 704+ 9038 CD AB 8C     2 call Extrae_address
 705+ 903B 7E               ld a,(hl)
 706+ 903C A7               and a
 707+ 903D 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 903F
 709+ 903F              ; ----- ----- ----- ----- ----- -----
 710+ 903F
 711+ 903F C5               push bc
 712+ 9040 CD FC 90         call foto_disparo_a_borrar
 713+ 9043
 714+ 9043              ; Existe colisión con este disparo???
 715+ 9043
 716+ 9043 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 9044 7E               ld a,(hl)
 718+ 9045 2B               dec hl
 719+ 9046 E6 01            and 1
 720+ 9048 28 1D            jr z,9F
 721+ 904A
 722+ 904A              ;   En este punto:
 723+ 904A              ;
 724+ 904A              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 904A              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 904A              ;   _con la entidad).
 727+ 904A              ;
 728+ 904A              ;   Disparo_2A defw 0                                ; Control.
 729+ 904A              ;    defw 0                                          ; Puntero objeto.
 730+ 904A              ;    defw 0                                          ; Puntero de impresión.
 731+ 904A              ;    defw 0                                          ; Rutina de impresión.
 732+ 904A
 733+ 904A E5               push hl
 734+ 904B
 735+ 904B 06 04            ld b,4
 736+ 904D 23           19 inc hl
 737+ 904E 10 FD            djnz 19B
 738+ 9050
 739+ 9050 CD AB 8C         call Extrae_address
 740+ 9053 CD 39 9B         call Genera_coordenadas_disparo
 741+ 9056
 742+ 9056              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 9056
 744+ 9056 21 A2 89         ld hl,Coordenadas_disparo_certero
 745+ 9059 72               ld (hl),d
 746+ 905A 23               inc hl
 747+ 905B 73               ld (hl),e
 748+ 905C
 749+ 905C              ; Elimino el disparo de la base de datos.
 750+ 905C
 751+ 905C E1               pop hl
 752+ 905D CD 78 91         call Elimina_disparo_de_base_de_datos
 753+ 9060 21 9F 89         ld hl,Impacto2
 754+ 9063 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 9065
 756+ 9065 18 06            jr 11F
 757+ 9067
 758+ 9067 CD 25 91     9 call Mueve_disparo
 759+ 906A CD FC 90         call foto_disparo_a_borrar
 760+ 906D
 761+ 906D C1           11 pop bc
 762+ 906E 18 04            jr 7F
 763+ 9070
 764+ 9070              ; ----- ----- ----- ----- ----- -----
 765+ 9070
 766+ 9070 ED 42        1 sbc hl,bc
 767+ 9072 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 9074 2A 9D 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 9077 23               inc hl
 770+ 9078 23               inc hl
 771+ 9079 22 9D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 907C 18 BA            jr 2B
 773+ 907E CD 74 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 9081
 775+ 9081 01 1C 85         ld bc,Disparo_11
 776+ 9084 2A 9B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 9087
 778+ 9087 CD AB 8C     5 call Extrae_address
 779+ 908A 7E               ld a,(hl)
 780+ 908B A7               and a
 781+ 908C 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 908E
 783+ 908E              ; ----- ----- ----- ----- ----- -----
 784+ 908E
 785+ 908E C5               push bc
 786+ 908F CD FC 90         call foto_disparo_a_borrar
 787+ 9092
 788+ 9092              ; Existe colisión con este disparo???
 789+ 9092
 790+ 9092 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 9093 7E               ld a,(hl)
 792+ 9094 2B               dec hl
 793+ 9095 E6 01            and 1
 794+ 9097 28 48            jr z,10F
 795+ 9099
 796+ 9099              ; La colisión se produce con Amadeus???
 797+ 9099              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 9099
 799+ 9099 E5               push hl
 800+ 909A
 801+ 909A 06 04            ld b,4
 802+ 909C 23           16 inc hl
 803+ 909D 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 909F CD AB 8C         call Extrae_address
 805+ 90A2 CD 39 9B         call Genera_coordenadas_disparo
 806+ 90A5
 807+ 90A5 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90A6 FE 16            cp $16
 809+ 90A8 38 22            jr c,15F
 810+ 90AA
 811+ 90AA              ; (Colisiones en filas 16 y 17).
 812+ 90AA
 813+ 90AA D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 90AB
 815+ 90AB              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 90AB
 817+ 90AB 21 3C 85         ld hl,Amadeus_db+6
 818+ 90AE 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 90AF 23               inc hl
 820+ 90B0 23               inc hl
 821+ 90B1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 90B2 21 4A 85         ld hl,Amadeus_db+20
 823+ 90B5 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 90B6 21 A4 89         ld hl,Coordenadas_X_Amadeus
 825+ 90B9 CD 83 91         call Guarda_coordenadas_X
 826+ 90BC
 827+ 90BC D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 90BD
 829+ 90BD              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 90BD
 831+ 90BD 06 03            ld b,3
 832+ 90BF 21 A4 89         ld hl,Coordenadas_X_Amadeus
 833+ 90C2 7E           18 ld a,(hl)
 834+ 90C3 BA               cp d
 835+ 90C4 20 03            jr nz,17F
 836+ 90C6
 837+ 90C6              ; Colisión Amadeus !!!!!!!!!!
 838+ 90C6
 839+ 90C6 E1               pop hl
 840+ 90C7 18 09            jr 14F
 841+ 90C9
 842+ 90C9 23           17 inc hl
 843+ 90CA 10 F6            djnz 18B
 844+ 90CC
 845+ 90CC              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 90CC              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 90CC
 848+ 90CC E1           15 pop hl
 849+ 90CD 23               inc hl
 850+ 90CE 35               dec (hl)
 851+ 90CF 2B               dec hl
 852+ 90D0 18 0F            jr 10F
 853+ 90D2
 854+ 90D2              ; -----------------------debug
 855+ 90D2
 856+ 90D2              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 90D2              ; _ almacén de coordenadas_X de Amadeus.
 858+ 90D2
 859+ 90D2 E5           14 push hl
 860+ 90D3 CD 78 91         call Elimina_disparo_de_base_de_datos
 861+ 90D6 21 9F 89         ld hl,Impacto2
 862+ 90D9 CB CE            set 1,(hl)
 863+ 90DB CD C2 91         call Limpia_Coordenadas_X
 864+ 90DE
 865+ 90DE E1               pop hl
 866+ 90DF 18 06            jr 12F
 867+ 90E1
 868+ 90E1 CD 25 91     10 call Mueve_disparo
 869+ 90E4 CD FC 90         call foto_disparo_a_borrar
 870+ 90E7 C1           12 pop bc
 871+ 90E8
 872+ 90E8 18 04            jr 8F
 873+ 90EA
 874+ 90EA              ; ----- ----- ----- ----- ----- -----
 875+ 90EA
 876+ 90EA ED 42        4 sbc hl,bc
 877+ 90EC 28 0A            jr z,6F
 878+ 90EE
 879+ 90EE 2A 9B 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 90F1 23               inc hl
 881+ 90F2 23               inc hl
 882+ 90F3 22 9B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 90F6 18 8F            jr 5B
 884+ 90F8
 885+ 90F8 CD 6D 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 90FB C9               ret
 887+ 90FC
 888+ 90FC              ; ------------------------------------------------------------------
 889+ 90FC
 890+ 90FC              foto_disparo_a_borrar
 891+ 90FC
 892+ 90FC 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 90FD A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 90FE C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 90FF
 896+ 90FF E5               push hl
 897+ 9100 23               inc hl
 898+ 9101 23               inc hl
 899+ 9102 ED 73 92 89      ld (Stack),sp
 900+ 9106 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9107 FD E1            pop iy
 902+ 9109 DD E1            pop ix
 903+ 910B E1               pop hl
 904+ 910C ED 7B 92 89      ld sp,(Stack)
 905+ 9110 3A 81 89         ld a,(Ctrl_1)
 906+ 9113 CB C7            set 0,a
 907+ 9115 32 81 89         ld (Ctrl_1),a
 908+ 9118 CD A0 7F         call Guarda_foto_registros
 909+ 911B 3A 81 89         ld a,(Ctrl_1)
 910+ 911E CB 87            res 0,a
 911+ 9120 32 81 89         ld (Ctrl_1),a
 912+ 9123 E1               pop hl
 913+ 9124 C9               ret
 914+ 9125
 915+ 9125 E5           Mueve_disparo push hl
 916+ 9126 7E               ld a,(hl)
 917+ 9127 06 04            ld b,4
 918+ 9129 23           1 inc hl
 919+ 912A 10 FD            djnz 1B
 920+ 912C
 921+ 912C              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 912C
 923+ 912C CD AB 8C         call Extrae_address
 924+ 912F
 925+ 912F E6 01            and 1
 926+ 9131 28 2B            jr z,2F
 927+ 9133
 928+ 9133              ; Disparo hacia arriba, (Amadeus).
 929+ 9133
 930+ 9133              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 9133              ; _ de la dificultad.
 932+ 9133
 933+ 9133 CD F1 94         call PreviousScan
 934+ 9136 CD F1 94         call PreviousScan
 935+ 9139 CD F1 94         call PreviousScan
 936+ 913C
 937+ 913C              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 913C
 939+ 913C 7C               ld a,h
 940+ 913D FE 40            cp $40
 941+ 913F 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 9141
 943+ 9141              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 9141
 945+ 9141 EB               ex de,hl
 946+ 9142 06 04            ld b,4
 947+ 9144 2B           6 dec hl
 948+ 9145 10 FD            djnz 6B
 949+ 9147
 950+ 9147 CD 78 91         call Elimina_disparo_de_base_de_datos
 951+ 914A E1               pop hl
 952+ 914B 18 10            jr 7F
 953+ 914D
 954+ 914D              ; Se ha desplazado la bala, compruebo colisión.
 955+ 914D
 956+ 914D D5           3 push de
 957+ 914E C5               push bc
 958+ 914F
 959+ 914F CD 32 8F         call Comprueba_Colision
 960+ 9152
 961+ 9152              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 9152
 963+ 9152 78               ld a,b
 964+ 9153
 965+ 9153 C1               pop bc
 966+ 9154 D1               pop de
 967+ 9155
 968+ 9155 EB               ex de,hl
 969+ 9156
 970+ 9156 73               ld (hl),e
 971+ 9157 23               inc hl
 972+ 9158 72               ld (hl),d
 973+ 9159
 974+ 9159 E1           4 pop hl
 975+ 915A 23               inc hl
 976+ 915B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 915C 2B               dec hl
 978+ 915D C9           7 ret
 979+ 915E
 980+ 915E              ; Disparo hacia abajo, (Entidad).
 981+ 915E
 982+ 915E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 915E              ; _ de la dificultad.
 984+ 915E
 985+ 915E CD E2 94     2 call NextScan
 986+ 9161 CD E2 94         call NextScan
 987+ 9164 CD E2 94         call NextScan
 988+ 9167
 989+ 9167              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 9167
 991+ 9167 7C               ld a,h
 992+ 9168 FE 58            cp $58
 993+ 916A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 916C
 995+ 916C EB               ex de,hl
 996+ 916D 06 04            ld b,4
 997+ 916F 2B           5 dec hl
 998+ 9170 10 FD            djnz 5B
 999+ 9172
1000+ 9172 CD 78 91         call Elimina_disparo_de_base_de_datos
1001+ 9175 E1               pop hl
1002+ 9176 18 E5            jr 7B
1003+ 9178
1004+ 9178              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 9178
1006+ 9178 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 917B AF               xor a
1008+ 917C 77               ld (hl),a
1009+ 917D 54               ld d,h
1010+ 917E 5D               ld e,l
1011+ 917F 13               inc de
1012+ 9180 ED B0            ldir
1013+ 9182 C9               ret
1014+ 9183
1015+ 9183              ; -----------------------------------------------------------------
1016+ 9183              ;
1017+ 9183              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 9183              ;
1019+ 9183              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 9183              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 9183              ;
1022+ 9183              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 9183              ;
1024+ 9183              ;   INPUTS:
1025+ 9183              ;
1026+ 9183              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 9183              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 9183              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 9183
1030+ 9183              ;   MODIFICA: A, HL, DE y C
1031+ 9183
1032+ 9183 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 9184 79               ld a,c
1034+ 9185 E6 01            and 1
1035+ 9187 20 03            jr nz,1F
1036+ 9189 14               inc d
1037+ 918A 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 918C
1039+ 918C              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 918C              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 918C
1042+ 918C 15           1 dec d
1043+ 918D 23           2 inc hl
1044+ 918E 72               ld (hl),d
1045+ 918F
1046+ 918F 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 9190 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 9191 C8               ret z
1049+ 9192
1050+ 9192 AF               xor a
1051+ 9193 5F               ld e,a
1052+ 9194 18 ED            jr Guarda_coordenadas_X
1053+ 9196
1054+ 9196              ; -----------------------------------------------------------------
1055+ 9196              ;
1056+ 9196              ;   12/04/23
1057+ 9196              ;
1058+ 9196
1059+ 9196 3A 9F 89     Selector_de_impactos ld a,(Impacto2)
1060+ 9199 A7               and a
1061+ 919A C8               ret z
1062+ 919B
1063+ 919B FE 04            cp 4
1064+ 919D 20 09            jr nz,1F
1065+ 919F
1066+ 919F
1067+ 919F              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 919F
1069+ 919F CD C3 8F         call Detecta_colision_nave_entidad
1070+ 91A2
1071+ 91A2 21 9F 89         ld hl,Impacto2
1072+ 91A5 CB 5E            bit 3,(hl)
1073+ 91A7 C0               ret nz                                               ; Existe colisión, RET.
1074+ 91A8
1075+ 91A8              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 91A8              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 91A8
1078+ 91A8 21 9F 89     1 ld hl,Impacto2
1079+ 91AB CB 4E            bit 1,(hl)
1080+ 91AD 28 07            jr z,2F
1081+ 91AF
1082+ 91AF 21 4F 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 91B2 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 91B4 18 0B            jr 3F
1085+ 91B6
1086+ 91B6 21 9F 89     2 ld hl,Impacto2
1087+ 91B9 CB 46            bit 0,(hl)
1088+ 91BB C8               ret z
1089+ 91BC
1090+ 91BC              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 91BC
1092+ 91BC 21 81 89         ld hl,Ctrl_1
1093+ 91BF CB D6            set 2,(hl)
1094+ 91C1
1095+ 91C1 C9           3 ret
1096+ 91C2
1097+ 91C2              ; -----------------------------------------------------------------
1098+ 91C2              ;
1099+ 91C2              ;   16/04/23
1100+ 91C2              ;
1101+ 91C2
1102+ 91C2 AF           Limpia_Coordenadas_X xor a
1103+ 91C3 06 06            ld b,6
1104+ 91C5 21 A4 89         ld hl,Coordenadas_X_Amadeus
1105+ 91C8 77           1 ld (hl),a
1106+ 91C9 23               inc hl
1107+ 91CA 10 FC            djnz 1B
1108+ 91CC C9               ret
1109+ 91CD
1110+ 91CD              ; -----------------------------------------------------------------
1111+ 91CD              ;
1112+ 91CD              ;   25/04/23
1113+ 91CD              ;
1114+ 91CD
1115+ 91CD              Determina_resultado_comparativa
1116+ 91CD
1117+ 91CD              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 91CD              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 91CD              ;
1120+ 91CD              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 91CD              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 91CD              ;
1123+ 91CD              ;   SBC HL,DE
1124+ 91CD
1125+ 91CD 7C               ld a,h
1126+ 91CE 06 00            ld b,0
1127+ 91D0
1128+ 91D0 CD E0 91         call Compara_cositas
1129+ 91D3
1130+ 91D3 04               inc b
1131+ 91D4 05               dec b
1132+ 91D5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 91D6
1134+ 91D6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 91D7 06 00            ld b,0
1136+ 91D9
1137+ 91D9 CD E0 91         call Compara_cositas
1138+ 91DC 18 01            jr 2F
1139+ 91DE
1140+ 91DE 04           1 inc b
1141+ 91DF C9           2 ret
1142+ 91E0
1143+ 91E0 A7           Compara_cositas and a
1144+ 91E1 28 17            jr z,1F
1145+ 91E3
1146+ 91E3 FE FD            cp $fd
1147+ 91E5 28 13            jr z,1F
1148+ 91E7 FE FE            cp $fe
1149+ 91E9 28 0F            jr z,1F
1150+ 91EB FE FF            cp $ff
1151+ 91ED 28 0B            jr z,1F
1152+ 91EF FE 01            cp $01
1153+ 91F1 28 07            jr z,1F
1154+ 91F3 FE 02            cp $02
1155+ 91F5 28 03            jr z,1F
1156+ 91F7 FE 03            cp $03
1157+ 91F9 C0               ret nz
1158+ 91FA
1159+ 91FA 04           1 inc b
1160+ 91FB C9               ret
1161+ 91FC
# file closed: Disparo.asm
1211  91FC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91FC              ; ******************************************************************************************************************************************************************************************
   2+ 91FC              ;
   3+ 91FC              ; 01/23
   4+ 91FC              ;
   5+ 91FC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91FC
   7+ 91FC CD D6 94     Draw call Prepara_draw
   8+ 91FF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9200 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9201 28 05        	jr z,2F
  11+ 9203
  12+ 9203 3A 57 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9206 18 0C        	jr 1F
  14+ 9208 2A 55 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 920B 22 45 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 920E CD 9D 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9211              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9211 CD 5C 9C     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9214 3A 71 89     1 ld a,(Ctrl_0)
  20+ 9217 CB 6F        	bit 5,a
  21+ 9219 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 921B
  23+ 921B CD 33 92     	call Comprueba_limite_horizontal
  24+ 921E CD C3 92     	call Comprueba_limite_vertical
  25+ 9221
  26+ 9221              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9221
  28+ 9221 CD 10 94     3 call calcula_CColumnass
  29+ 9224 CD 47 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9227 CD 9C 94     	call Define_rutina_de_impresion
  31+ 922A
  32+ 922A 3A 71 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 922D CB AF        	res 5,a											; _a ser de utilidad.
  34+ 922F 32 71 89     	ld (Ctrl_0),a
  35+ 9232
  36+ 9232 C9           	ret
  37+ 9233
  38+ 9233              ; *******************************************************************************************************************************************************************************************
  39+ 9233              ;	21/01/23
  40+ 9233              ;
  41+ 9233              ; 	Comprueba_limite_horizontal.
  42+ 9233              ;
  43+ 9233              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9233              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9233              ;
  46+ 9233              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9233              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9233              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9233              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9233
  51+ 9233
  52+ 9233
  53+ 9233 3A 71 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9236 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9238 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 923A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 923C 32 71 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 923F 18 09            jr 6F
  59+ 9241 CB 5F        1 bit 3,a
  60+ 9243 28 0A            jr z,2F
  61+ 9245 E6 F7            and $f7
  62+ 9247 32 71 89         ld (Ctrl_0),a
  63+ 924A CD 9D 93     6 call Inicializacion
  64+ 924D 18 5B            jr 5F
  65+ 924F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9250
  67+ 9250              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9250              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9250
  70+ 9250 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9251 2A 7C 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9254 CD A2 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9257 67           	ld h,a
  74+ 9258 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9259 CD A2 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 925C 67           	ld h,a
  77+ 925D A7           	and a
  78+ 925E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9260 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9261 3A 57 89     	ld a,(Cuad_objeto)
  81+ 9264 FE 02        	cp 2
  82+ 9266 38 1E        	jr c,3F
  83+ 9268 28 1C        	jr z,3F
  84+ 926A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 926B 28 23            jr z,7F
  86+ 926D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 926F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9271 E1           	pop hl
  89+ 9272
  90+ 9272              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9272              ; _para indicar con E="2" en caso necesario.
  92+ 9272
  93+ 9272 E5               push hl
  94+ 9273 C5               push bc
  95+ 9274 CD A2 97     	call calcula_tercio
  96+ 9277 FE 01        	cp 1
  97+ 9279 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 927B CD AB 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 927E 28 26            jr z,9F
 100+ 9280 38 24            jr c,9F
 101+ 9282 1E 00        11 ld e,0
 102+ 9284 18 22            jr 8F
 103+ 9286 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 9287 28 07        	jr z, 7F
 105+ 9289 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 928B 1E 00         	ld e,0
 107+ 928D E1           	pop hl
 108+ 928E 18 04        	jr 4F
 109+ 9290 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9292 18 15            jr 10F
 111+ 9294
 112+ 9294              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 9294              ; _para indicar con E="2" en caso necesario.
 114+ 9294
 115+ 9294 E5           4 push hl
 116+ 9295 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 9296 CD A2 97     	call calcula_tercio
 118+ 9299 FE 01        	cp 1
 119+ 929B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 929D CD AB 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 92A0 28 04            jr z,9F
 122+ 92A2 30 02            jr nc,9F
 123+ 92A4 18 02        	jr 8F
 124+ 92A6 1E 02        9 ld e,2
 125+ 92A8 C1           8 pop bc
 126+ 92A9 E1           10 pop hl
 127+ 92AA C9           5 ret
 128+ 92AB
 129+ 92AB              ; --------------------
 130+ 92AB              ;
 131+ 92AB              ; 25/08/22
 132+ 92AB
 133+ 92AB CD A2 97     Comprueba_centro call calcula_tercio
 134+ 92AE 67               ld h,a
 135+ 92AF 08           	ex af,af
 136+ 92B0 FE 02        	cp 2
 137+ 92B2 38 07        	jr c,1F
 138+ 92B4 28 05        	jr z,1F
 139+ 92B6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 92B9 18 03        	jr 2F
 141+ 92BB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 92BE 08           2 ex af,af
 143+ 92BF A7               and a
 144+ 92C0 ED 42            sbc hl,bc
 145+ 92C2 C9               ret
 146+ 92C3
 147+ 92C3              ; *********************************************************************************************************************************************************************************************
 148+ 92C3              ;
 149+ 92C3              ;   16/8/22
 150+ 92C3              ;
 151+ 92C3              ;	Comprueba_limite_vertical
 152+ 92C3              ;
 153+ 92C3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 92C3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 92C3              ;
 156+ 92C3
 157+ 92C3 2A 45 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 92C6 7D           	ld a,l
 159+ 92C7 E6 1F        	and $1F
 160+ 92C9 57           	ld d,a
 161+ 92CA 3A 7E 89     	ld a,(Limite_vertical)
 162+ 92CD BA           	cp d 											; Límite - Posición.
 163+ 92CE 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 92CF 3A 57 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 92D2 CB 47        	bit 0,a
 166+ 92D4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 92D6
 168+ 92D6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 92D6
 170+ 92D6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 92D7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 92D9
 173+ 92D9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 92D9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 92D9
 176+ 92D9 3A 49 89         ld a,(Coordenada_X)
 177+ 92DC 16 0F            ld d,Centro_izquierda
 178+ 92DE A7               and a
 179+ 92DF 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 92E0 28 1E            jr z,3F
 181+ 92E2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 92E4              ;                                                    ; _salimos sin modificar nada.
 183+ 92E4 18 0E            jr 2F
 184+ 92E6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 92E7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 92E9
 187+ 92E9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 92E9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 92E9
 190+ 92E9 3A 49 89         ld a,(Coordenada_X)
 191+ 92EC 16 10            ld d,Centro_derecha
 192+ 92EE A7               and a
 193+ 92EF 92               sub d
 194+ 92F0 28 0E            jr z,3F
 195+ 92F2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 92F4              ;                                                    ; _salimos sin modificar nada.
 197+ 92F4 CB 43        2 bit 0,e
 198+ 92F6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 92F8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 92F9 CD 8D 93         call Modificaccionne
 201+ 92FC C1           	pop bc
 202+ 92FD CD 9D 93         call Inicializacion
 203+ 9300 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9301
 205+ 9301              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9301
 207+ 9301 C5           4 push bc
 208+ 9302 01 44 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9305 0A           	ld a,(bc)
 210+ 9306 3D           	dec a
 211+ 9307 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9308 7D           	ld a,l
 213+ 9309 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 930A CB 47        	bit 0,a
 215+ 930C 28 03        	jr z,5F
 216+ 930E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 930F 18 2E        	jr 7F
 218+ 9311
 219+ 9311              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9311
 221+ 9311 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9312 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9313 3A 71 89     	ld a,(Ctrl_0)
 224+ 9316 CB 4F        	bit 1,a
 225+ 9318 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 931A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 931B
 228+ 931B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 931B
 230+ 931B 1C               inc e
 231+ 931C 1D               dec e
 232+ 931D 20 07            jr nz,12F
 233+ 931F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9320 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9321 22 45 89     	ld (Posicion_actual),hl
 236+ 9324 18 44        13 jr 9F
 237+ 9326 CB 43        12 bit 0,e
 238+ 9328 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 932A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 932A C1           	pop bc
 241+ 932B 18 D3        	jr 3B
 242+ 932D 80           14 add b
 243+ 932E 6F               ld l,a
 244+ 932F 22 45 89     	ld (Posicion_actual),hl
 245+ 9332 CD 8D 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9335 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9337 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9339 32 71 89         ld (Ctrl_0),a
 249+ 933C F1           	pop af
 250+ 933D 18 2B        	jr 9F
 251+ 933F
 252+ 933F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 933F
 254+ 933F F5           7 push af
 255+ 9340 3A 71 89     	ld a,(Ctrl_0)
 256+ 9343 CB 47        	bit 0,a
 257+ 9345 20 1D        	jr nz,8F
 258+ 9347 F1           	pop af
 259+ 9348
 260+ 9348              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9348
 262+ 9348 1C           	inc e
 263+ 9349 1D               dec e
 264+ 934A 20 07            jr nz,10F
 265+ 934C 90           	sub b
 266+ 934D 6F               ld l,a
 267+ 934E 22 45 89     	ld (Posicion_actual),hl
 268+ 9351 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9353              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9353 CB 43        10 bit 0,e
 271+ 9355 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9357              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9357 C1           	pop bc
 274+ 9358 18 A6        	jr 3B
 275+ 935A 90           16 sub b
 276+ 935B 6F               ld l,a
 277+ 935C 22 45 89     	ld (Posicion_actual),hl
 278+ 935F CD 8D 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9362 18 06            jr 9F
 280+ 9364 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9366 32 71 89         ld (Ctrl_0),a
 282+ 9369 F1           	pop af
 283+ 936A C1           9 pop bc
 284+ 936B 1E 00        	ld e,0
 285+ 936D CD 9D 93         call Inicializacion
 286+ 9370 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9371 08           	ex af,af
 288+ 9372 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9373 18 8B            jr 3B
 290+ 9375
 291+ 9375              ; --------------------
 292+ 9375
 293+ 9375 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9377 CD F1 94     1 call PreviousScan
 295+ 937A 10 FB            djnz 1B
 296+ 937C 22 45 89     	ld (Posicion_actual),hl
 297+ 937F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9380 C9           	ret
 299+ 9381
 300+ 9381              ; --------------------
 301+ 9381
 302+ 9381 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9383 CD E2 94     1 call NextScan
 304+ 9386 10 FB            djnz 1B
 305+ 9388 22 45 89     	ld (Posicion_actual),hl
 306+ 938B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 938C C9           	ret
 308+ 938D
 309+ 938D              ; --------------------
 310+ 938D              ;
 311+ 938D              ;	22/01/23
 312+ 938D              ;
 313+ 938D              ;	E="1". Hemos cambiado de cuadrante.
 314+ 938D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 938D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 938D
 317+ 938D
 318+ 938D              Modificaccionne
 319+ 938D
 320+ 938D 3A 57 89     	ld a,(Cuad_objeto)
 321+ 9390 FE 02        	cp 2
 322+ 9392 CC 75 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 9395 DC 75 93         call c,Modifica_Pos_actual
 324+ 9398 C8           	ret z
 325+ 9399 CD 81 93         call Modifica_Pos_actual2
 326+ 939C C9               ret
 327+ 939D
 328+ 939D              ; *************************************************************************************************************************************************************************************************
 329+ 939D              ;
 330+ 939D              ;	13/8/22
 331+ 939D              ;
 332+ 939D              ;	Inicializacion
 333+ 939D              ;
 334+ 939D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 939D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 939D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 939D              ;
 338+ 939D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 939D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 939D              ;	_ desaparece/aparece.
 341+ 939D
 342+ 939D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 939D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 939D              ;
 345+ 939D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 939D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 939D              ; 		   [E] ="0"
 348+ 939D
 349+ 939D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 939D
 351+ 939D CD A2 97     Inicializacion call calcula_tercio
 352+ 93A0 28 36        	jr z,primit
 353+ 93A2 E6 02        	and 2
 354+ 93A4 20 07        	jr nz,segmit
 355+ 93A6 7D           	ld a,l
 356+ 93A7 FE 7F        	cp $7f
 357+ 93A9 38 2D        	jr c,primit
 358+ 93AB 28 2B        	jr z,primit
 359+ 93AD CD 0A 94     segmit call column
 360+ 93B0 38 13        	jr c,tercuad
 361+ 93B2 3E 04        cuarcuad ld a,4
 362+ 93B4 32 57 89     	ld (Cuad_objeto),a
 363+ 93B7 21 20 48     	ld hl,$4820
 364+ 93BA 22 7C 89     	ld (Limite_horizontal),hl
 365+ 93BD 21 7E 89     	ld hl,Limite_vertical
 366+ 93C0 36 0D        	ld (hl),$0d
 367+ 93C2 08           	ex af,af
 368+ 93C3 18 3C        	jr 1F
 369+ 93C5              tercuad
 370+ 93C5 3E 03        	ld a,3
 371+ 93C7 32 57 89     	ld (Cuad_objeto),a
 372+ 93CA 21 20 48     	ld hl,$4820
 373+ 93CD 22 7C 89     	ld (Limite_horizontal),hl
 374+ 93D0 21 7E 89     	ld hl,Limite_vertical
 375+ 93D3 36 12        	ld (hl),$12
 376+ 93D5 08           	ex af,af
 377+ 93D6 18 29        	jr 1F
 378+ 93D8 CD 0A 94     primit call column
 379+ 93DB 38 13        	jr c, primcuad
 380+ 93DD              segcuad
 381+ 93DD 3E 02        	ld a,2
 382+ 93DF 32 57 89     	ld (Cuad_objeto),a
 383+ 93E2 21 C0 4F     	ld hl,$4fc0
 384+ 93E5 22 7C 89     	ld (Limite_horizontal),hl
 385+ 93E8 21 7E 89     	ld hl,Limite_vertical
 386+ 93EB 36 0D        	ld (hl),$0d
 387+ 93ED 08           	ex af,af
 388+ 93EE 18 11        	jr 1F
 389+ 93F0              primcuad
 390+ 93F0 3E 01        	ld a,1
 391+ 93F2 32 57 89     	ld (Cuad_objeto),a
 392+ 93F5 21 C0 4F     	ld hl,$4fc0
 393+ 93F8 22 7C 89     	ld (Limite_horizontal),hl
 394+ 93FB 21 7E 89     	ld hl,Limite_vertical
 395+ 93FE 36 12        	ld (hl),$12
 396+ 9400 08           	ex af,af
 397+ 9401 CD 0E 9B     1 call Genera_coordenadas
 398+ 9404 21 71 89     	ld hl,Ctrl_0
 399+ 9407 CB EE        	set 5,(hl)
 400+ 9409 C9           	ret
 401+ 940A
 402+ 940A              ; ------------------------------------------------------------------------------------------------------------------
 403+ 940A
 404+ 940A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 940A              ;
 406+ 940A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 940A
 408+ 940A 7D           column ld a,l
 409+ 940B E6 1F        	and $1f
 410+ 940D FE 10         	cp $10
 411+ 940F C9            	ret
 412+ 9410
 413+ 9410              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9410              ;
 415+ 9410              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9410              ;
 417+ 9410              ; 14/12/22
 418+ 9410              ;
 419+ 9410              ;	Modifica: A y BC.
 420+ 9410
 421+ 9410 3A 57 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9413 E6 01        	and 1
 423+ 9415 28 17        	jr z,1F
 424+ 9417
 425+ 9417              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9417
 427+ 9417 3A 49 89     	ld a,(Coordenada_X)
 428+ 941A 47           	ld b,a
 429+ 941B 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 941C 79           	ld a,c
 431+ 941D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 941E 38 08        	jr c,2F
 433+ 9420 47           	ld b,a
 434+ 9421 79           	ld a,c
 435+ 9422 90           	sub b
 436+ 9423 32 7B 89     	ld (Columnas),a
 437+ 9426 18 1B        	jr 4F
 438+ 9428 79           2 ld a,c
 439+ 9429 32 7B 89     	ld (Columnas),a
 440+ 942C 18 15        	jr 4F
 441+ 942E
 442+ 942E              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 942E
 444+ 942E 3A 49 89     1 ld a,(Coordenada_X)
 445+ 9431 81           	add c
 446+ 9432 3D           	dec a
 447+ 9433 D6 1F        	sub $1f
 448+ 9435 38 08        	jr c,3F
 449+ 9437 47           	ld b,a
 450+ 9438 79           	ld a,c
 451+ 9439 90           	sub b
 452+ 943A 32 7B 89     	ld (Columnas),a
 453+ 943D 18 04        	jr 4F
 454+ 943F 79           3 ld a,c
 455+ 9440 32 7B 89     	ld (Columnas),a
 456+ 9443 D9           4 exx
 457+ 9444 4F           	ld c,a
 458+ 9445 D9           	exx
 459+ 9446 C9            ret
 460+ 9447
 461+ 9447              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9447              ;
 463+ 9447              ; 7/1/23
 464+ 9447              ;
 465+ 9447              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9447              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9447              ;
 468+ 9447              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9447              ;	DESTRUYE: HL,B Y A.
 470+ 9447
 471+ 9447 3A 57 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 944A FE 02        	cp 2
 473+ 944C 38 18        	jr c,1F
 474+ 944E 28 16        	jr z,1F
 475+ 9450 E6 01        	and 1
 476+ 9452 28 0D        	jr z,3F
 477+ 9454
 478+ 9454              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9454
 480+ 9454 CD 90 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9457
 482+ 9457 7D           9 ld a,l
 483+ 9458 E6 1F        	and $1f
 484+ 945A 28 2A        	jr z,7F
 485+ 945C 2B           	dec hl
 486+ 945D 10 F8        	djnz 9B
 487+ 945F 18 25        	jr 7F
 488+ 9461
 489+ 9461              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9461
 491+ 9461 2A 45 89     3 ld hl,(Posicion_actual)
 492+ 9464 18 20        	jr 7F
 493+ 9466
 494+ 9466 28 14        1 jr z,2F
 495+ 9468
 496+ 9468              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9468
 498+ 9468 CD 90 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 946B 7D           4 ld a,l
 500+ 946C E6 1F        	and $1f
 501+ 946E 28 03        	jr z,6F
 502+ 9470 2B           	dec hl
 503+ 9471 10 F8        	djnz 4B
 504+ 9473 06 0F        6 ld b,15
 505+ 9475 CD F1 94     5 call PreviousScan
 506+ 9478 10 FB        	djnz 5B
 507+ 947A 18 0A        	jr 7F
 508+ 947C
 509+ 947C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 947C
 511+ 947C CD 90 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 947F 06 0F        	ld b,15
 513+ 9481 CD F1 94     8 call PreviousScan
 514+ 9484 10 FB        	djnz 8B
 515+ 9486
 516+ 9486 E5           7 push hl
 517+ 9487 DD E1        	pop ix
 518+ 9489
 519+ 9489 2A 47 89     	ld hl,(Puntero_objeto)
 520+ 948C E5           	push hl
 521+ 948D FD E1        	pop iy
 522+ 948F
 523+ 948F C9           	ret
 524+ 9490
 525+ 9490              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9490              ;
 527+ 9490              ;	2/1/23
 528+ 9490              ;
 529+ 9490              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9490              ;
 531+ 9490              ;	Tras esta rutina tenemos:
 532+ 9490              ;
 533+ 9490              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9490              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9490              ;
 536+ 9490              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9490
 538+ 9490 2A 45 89     Operandos ld hl,(Posicion_actual)
 539+ 9493 3A 7B 89     	ld a,(Columnas)
 540+ 9496 3D           	dec a
 541+ 9497 20 01        	jr nz,1F
 542+ 9499 3C           	inc a
 543+ 949A 47           1 ld b,a
 544+ 949B C9           	ret
 545+ 949C
 546+ 949C              ; --------------------------------------------------------------------------------------------------------------------
 547+ 949C              ;
 548+ 949C              ;	3/1/23
 549+ 949C              ;
 550+ 949C              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 949C              ;
 552+ 949C              ;	Destruye: A,B,HL y DE.
 553+ 949C
 554+ 949C              Define_rutina_de_impresion
 555+ 949C
 556+ 949C 3A 44 89     	ld a,(Columns)
 557+ 949F 47           	ld b,a
 558+ 94A0 3A 7B 89     	ld a,(Columnas)
 559+ 94A3 B8           	cp b
 560+ 94A4 20 0D        	jr nz,2f
 561+ 94A6
 562+ 94A6              ;	La entidad se imprime entera.
 563+ 94A6
 564+ 94A6 21 72 95     	ld hl, Indice_entidades_completas
 565+ 94A9 E6 01        	and 1
 566+ 94AB 28 02        	jr z,1F
 567+ 94AD
 568+ 94AD 23           	inc hl
 569+ 94AE 23           	inc hl
 570+ 94AF
 571+ 94AF CD AB 8C     1 call Extrae_address
 572+ 94B2 C9           	ret		;	ret
 573+ 94B3
 574+ 94B3              ;	La entidad no se imprime entera en pantalla.
 575+ 94B3
 576+ 94B3 3A 57 89     2 ld a,(Cuad_objeto)
 577+ 94B6 E6 01        	and 1
 578+ 94B8 28 17        	jr z,3F
 579+ 94BA
 580+ 94BA              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 94BA
 582+ 94BA 21 76 95     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 94BD 3A 44 89     4 ld a,(Columns)
 584+ 94C0 E6 01        	and 1
 585+ 94C2 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 94C4
 587+ 94C4 23           	inc hl
 588+ 94C5 23           	inc hl
 589+ 94C6
 590+ 94C6 3A 7B 89     	ld a,(Columnas)
 591+ 94C9 E6 01        	and 1
 592+ 94CB 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 94CD
 594+ 94CD 23           	inc hl
 595+ 94CE 23           	inc hl
 596+ 94CF
 597+ 94CF 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 94D1
 599+ 94D1 21 7C 95     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 94D4 18 E7        	jr 4B
 601+ 94D6
 602+ 94D6              ; --------------------------------------------------------------------------------------------------------------------
 603+ 94D6              ;
 604+ 94D6              ;	Prepara_draw
 605+ 94D6              ;
 606+ 94D6              ;	Es una rutina de carga.
 607+ 94D6              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 94D6              ;
 609+ 94D6              ;	FUNCIONAMIENTO:
 610+ 94D6              ;
 611+ 94D6              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 94D6              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 94D6              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 94D6              ;
 615+ 94D6              ;	DESTRUYE:
 616+ 94D6              ;
 617+ 94D6              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 94D6
 619+ 94D6 21 43 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 94D9 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 94DA 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 94DB 4E           	ld c,(hl)
 623+ 94DC 2A 45 89     	ld hl,(Posicion_actual)
 624+ 94DF 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 94E1 C9           	ret
 626+ 94E2
 627+ 94E2              ;----------------------------------------------------------------------------------------------------------------
 628+ 94E2              ;
 629+ 94E2              ;	5/08/22
 630+ 94E2              ;
 631+ 94E2              ;   NextScan.
 632+ 94E2              ;
 633+ 94E2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 94E2              ;
 635+ 94E2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 94E2              ;
 637+ 94E2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 94E2              ;
 639+ 94E2              ;       DESTRUIDOS: AF y HL !!!
 640+ 94E2              ;
 641+ 94E2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 94E2              ;
 643+ 94E2
 644+ 94E2 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 94E3 7C               ld a,h
 646+ 94E4 E6 07            and 7
 647+ 94E6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 94E7
 649+ 94E7 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 94E8 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 94EA 6F               ld l,a
 652+ 94EB D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 94EC
 654+ 94EC 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 94ED D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 94EF 67               ld h,a
 657+ 94F0 C9               ret
 658+ 94F1
 659+ 94F1              ;----------------------------------------------------------------------------------------------------------------
 660+ 94F1              ;
 661+ 94F1              ;	5/08/22
 662+ 94F1              ;
 663+ 94F1              ;   PreviousScan.
 664+ 94F1              ;
 665+ 94F1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 94F1              ;
 667+ 94F1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 94F1              ;
 669+ 94F1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 94F1              ;
 671+ 94F1              ;       DESTRUIDOS: AF y HL !!!
 672+ 94F1              ;
 673+ 94F1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 94F1              ;
 675+ 94F1
 676+ 94F1 7C           PreviousScan ld a,h
 677+ 94F2 25               dec h               ; Dec H.
 678+ 94F3 E6 07            and 7
 679+ 94F5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 94F6
 681+ 94F6 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 94F7 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 94F9 6F               ld l,a
 684+ 94FA D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 94FB
 686+ 94FB 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 94FC C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 94FE 67               ld h,a
 689+ 94FF C9               ret
 690+ 9500
 691+ 9500              ; -----------------------------------------------------------------------------------
 692+ 9500              ;
 693+ 9500              ;	28/2/23
 694+ 9500              ;
 695+ 9500              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9500              ;	Extrae fotos de Album_de_fotos.
 697+ 9500
 698+ 9500 3A 8D 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 9503 A7           	and a
 700+ 9504 C8           	ret z
 701+ 9505 ED 73 92 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 9509 31 00 70     	ld sp,Album_de_fotos
 703+ 950C
 704+ 950C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 950E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 950F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 9510
 708+ 9510 ED 73 94 89  	ld (Stack_2),sp
 709+ 9514 ED 7B 92 89  	ld sp,(Stack)
 710+ 9518
 711+ 9518              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 9518
 713+ 9518 3E CD        	ld a,$cd
 714+ 951A 32 22 95     	ld (Imprime),a
 715+ 951D EB           	ex de,hl
 716+ 951E 22 23 95     	ld (Imprime+1),hl
 717+ 9521 EB           	ex de,hl
 718+ 9522
 719+ 9522              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 9522
 721+ 9522 00 00 00     Imprime db 0,0,0
 722+ 9525
 723+ 9525 3A 8D 89     	ld a,(Numero_de_malotes)
 724+ 9528 3D           	dec a
 725+ 9529 28 09        	jr z,1F
 726+ 952B 32 8D 89      	ld (Numero_de_malotes),a
 727+ 952E
 728+ 952E ED 7B 94 89   	ld sp,(Stack_2)
 729+ 9532 18 D8        	jr 2B
 730+ 9534
 731+ 9534 AF           1 xor a
 732+ 9535 32 94 89     	ld (Stack_2),a
 733+ 9538 C9           	ret
 734+ 9539
 735+ 9539              ; -----------------------------------------------------------------------------------
 736+ 9539              ;
 737+ 9539              ;	28/2/23
 738+ 9539              ;
 739+ 9539              ;	Pinta los disparos generados.
 740+ 9539
 741+ 9539              Extrae_foto_disparos
 742+ 9539
 743+ 9539 3A 9A 89     	ld a,(Numero_de_disparotes)
 744+ 953C A7           	and a
 745+ 953D C8           	ret z
 746+ 953E ED 73 92 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9542 31 85 70     	ld sp,Album_de_fotos_disparos
 748+ 9545
 749+ 9545 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9547 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9548 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9549
 753+ 9549 ED 73 94 89  	ld (Stack_2),sp
 754+ 954D ED 7B 92 89  	ld sp,(Stack)
 755+ 9551
 756+ 9551              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9551
 758+ 9551 3E CD        	ld a,$cd
 759+ 9553 32 5B 95     	ld (Imprime2),a
 760+ 9556 EB           	ex de,hl
 761+ 9557 22 5C 95     	ld (Imprime2+1),hl
 762+ 955A EB           	ex de,hl
 763+ 955B
 764+ 955B              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 955B
 766+ 955B 00 00 00     Imprime2 db 0,0,0
 767+ 955E
 768+ 955E 3A 9A 89     	ld a,(Numero_de_disparotes)
 769+ 9561 3D           	dec a
 770+ 9562 28 09        	jr z,1F
 771+ 9564 32 9A 89      	ld (Numero_de_disparotes),a
 772+ 9567
 773+ 9567 ED 7B 94 89  	ld sp,(Stack_2)
 774+ 956B 18 D8        	jr 2B
 775+ 956D
 776+ 956D AF           1 xor a
 777+ 956E 32 94 89     	ld (Stack_2),a
 778+ 9571 C9           	ret
 779+ 9572
# file closed: Draw_XOR.asm
1212  9572              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9572              ;   índices de Rutinas de impresión.
   2+ 9572
   3+ 9572 82 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9574 AF 95            defw Pinta_Amadeus_3x2
   5+ 9576
   6+ 9576 05 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9578 A5 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 957A 59 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 957C
  10+ 957C 2F 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 957E 33 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9580 E7 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9582
  14+ 9582
  15+ 9582              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9582              ;
  17+ 9582              ;   12/12/22
  18+ 9582              ;
  19+ 9582              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9582              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9582              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9582              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9582              ;
  24+ 9582              ;   Modifica: DE y HL.
  25+ 9582
  26+ 9582 ED 73 92 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9586 FD F9        	ld sp,iy
  28+ 9588 06 10            ld b,16
  29+ 958A D1           1 pop de
  30+ 958B 7B               ld a,e
  31+ 958C AE               xor (hl)
  32+ 958D 77           	ld (hl),a
  33+ 958E 23           	inc hl
  34+ 958F 7A               ld a,d
  35+ 9590 AE               xor (hl)
  36+ 9591 77           	ld (hl),a
  37+ 9592 2B           	dec hl
  38+ 9593 24           	inc h
  39+ 9594 7C               ld a,h
  40+ 9595 E6 07            and 7
  41+ 9597 20 0A            jr nz,2F
  42+ 9599 7D               ld a,l
  43+ 959A C6 20            add a,$20
  44+ 959C 6F               ld l,a
  45+ 959D 38 04            jr c,2F
  46+ 959F 7C               ld a,h
  47+ 95A0 D6 08            sub 8
  48+ 95A2 67               ld h,a
  49+ 95A3 7C           2 ld a,h
  50+ 95A4 FE 58            cp $58
  51+ 95A6 28 02            jr z,3F
  52+ 95A8 10 E0            djnz 1B
  53+ 95AA ED 7B 92 89  3 ld sp,(Stack)
  54+ 95AE C9           	ret
  55+ 95AF
  56+ 95AF ED 73 92 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95B3 FD F9        	ld sp,iy
  58+ 95B5 06 08            ld b,8
  59+ 95B7 D1           1 pop de
  60+ 95B8 7B               ld a,e
  61+ 95B9 AE               xor (hl)
  62+ 95BA 77           	ld (hl),a
  63+ 95BB 23           	inc hl
  64+ 95BC 7A               ld a,d
  65+ 95BD AE               xor (hl)
  66+ 95BE 77           	ld (hl),a
  67+ 95BF 23           	inc hl
  68+ 95C0 D1           	pop de
  69+ 95C1 7B               ld a,e
  70+ 95C2 AE               xor (hl)
  71+ 95C3 77           	ld (hl),a
  72+ 95C4 2B           	dec hl
  73+ 95C5 2B           	dec hl
  74+ 95C6 24           	inc h
  75+ 95C7 7C               ld a,h
  76+ 95C8 E6 07            and 7
  77+ 95CA 20 0A            jr nz,2F
  78+ 95CC 7D               ld a,l
  79+ 95CD C6 20            add a,$20
  80+ 95CF 6F               ld l,a
  81+ 95D0 38 04            jr c,2F
  82+ 95D2 7C               ld a,h
  83+ 95D3 D6 08            sub 8
  84+ 95D5 67               ld h,a
  85+ 95D6 7C           2 ld a,h
  86+ 95D7 FE 58            cp $58
  87+ 95D9 28 25            jr z,4F
  88+ 95DB 7A               ld a,d
  89+ 95DC AE               xor (hl)
  90+ 95DD 77               ld (hl),a
  91+ 95DE D1           	pop de
  92+ 95DF 23           	inc hl
  93+ 95E0 7B               ld a,e
  94+ 95E1 AE               xor (hl)
  95+ 95E2 77           	ld (hl),a
  96+ 95E3 23           	inc hl
  97+ 95E4 7A               ld a,d
  98+ 95E5 AE               xor (hl)
  99+ 95E6 77           	ld (hl),a
 100+ 95E7 2B           	dec hl
 101+ 95E8 2B           	dec hl
 102+ 95E9 24           	inc h
 103+ 95EA 7C               ld a,h
 104+ 95EB E6 07            and 7
 105+ 95ED 20 0A            jr nz,3F
 106+ 95EF 7D               ld a,l
 107+ 95F0 C6 20            add a,$20
 108+ 95F2 6F               ld l,a
 109+ 95F3 38 04            jr c,3F
 110+ 95F5 7C               ld a,h
 111+ 95F6 D6 08            sub 8
 112+ 95F8 67               ld h,a
 113+ 95F9 7C           3 ld a,h
 114+ 95FA FE 58            cp $58
 115+ 95FC 28 02            jr z,4F
 116+ 95FE 10 B7            djnz 1B
 117+ 9600 ED 7B 92 89  4 ld sp,(Stack)
 118+ 9604 C9           	ret
 119+ 9605
 120+ 9605              ; ---------------------------------------------------
 121+ 9605
 122+ 9605 ED 73 92 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9609 FD F9        	ld sp,iy
 124+ 960B
 125+ 960B              ; >>>
 126+ 960B
 127+ 960B 06 10            ld b,16
 128+ 960D D1           1 pop de
 129+ 960E 7A           	ld a,d
 130+ 960F AE           	xor (hl)
 131+ 9610 77           	ld (hl),a
 132+ 9611 24           	inc h
 133+ 9612 7C               ld a,h
 134+ 9613 E6 07            and 7
 135+ 9615 20 0C            jr nz,2F
 136+ 9617 7D               ld a,l
 137+ 9618 C6 20            add a,$20
 138+ 961A 6F               ld l,a
 139+ 961B 38 06            jr c,2F
 140+ 961D 7C               ld a,h
 141+ 961E D6 08            sub 8
 142+ 9620 67               ld h,a
 143+ 9621 18 00            jr 2F
 144+ 9623 7C           2 ld a,h
 145+ 9624 FE 58            cp $58
 146+ 9626 28 02            jr z,3F
 147+ 9628 10 E3            djnz 1B
 148+ 962A ED 7B 92 89  3 ld sp,(Stack)
 149+ 962E C9           	ret
 150+ 962F
 151+ 962F ED 73 92 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9633 FD F9        	ld sp,iy
 153+ 9635
 154+ 9635              ; >>>
 155+ 9635
 156+ 9635 06 10            ld b,16
 157+ 9637 D1           1 pop de
 158+ 9638 7B           	ld a,e
 159+ 9639 AE           	xor (hl)
 160+ 963A 77           	ld (hl),a
 161+ 963B 24           	inc h
 162+ 963C 7C               ld a,h
 163+ 963D E6 07            and 7
 164+ 963F 20 0C            jr nz,2F
 165+ 9641 7D               ld a,l
 166+ 9642 C6 20            add a,$20
 167+ 9644 6F               ld l,a
 168+ 9645 38 06            jr c,2F
 169+ 9647 7C               ld a,h
 170+ 9648 D6 08            sub 8
 171+ 964A 67               ld h,a
 172+ 964B 18 00            jr 2F
 173+ 964D 7C           2 ld a,h
 174+ 964E FE 58            cp $58
 175+ 9650 28 02            jr z,3F
 176+ 9652 10 E3            djnz 1B
 177+ 9654 ED 7B 92 89  3 ld sp,(Stack)
 178+ 9658 C9           	ret
 179+ 9659
 180+ 9659              ; ---------------------------------------------------
 181+ 9659
 182+ 9659 ED 73 92 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 965D FD F9        	ld sp,iy
 184+ 965F 06 08            ld b,8
 185+ 9661 D1           1 pop de
 186+ 9662 7A           	ld a,d
 187+ 9663 AE           	xor (hl)
 188+ 9664 77           	ld (hl),a
 189+ 9665 23           	inc hl
 190+ 9666 D1           	pop de
 191+ 9667 7B           	ld a,e
 192+ 9668 AE           	xor (hl)
 193+ 9669 77           	ld (hl),a
 194+ 966A 2B           	dec hl
 195+ 966B 24            	inc h
 196+ 966C 7C               ld a,h
 197+ 966D E6 07            and 7
 198+ 966F 20 0A            jr nz,2F
 199+ 9671 7D               ld a,l
 200+ 9672 C6 20            add a,$20
 201+ 9674 6F               ld l,a
 202+ 9675 38 04            jr c,2F
 203+ 9677 7C               ld a,h
 204+ 9678 D6 08            sub 8
 205+ 967A 67               ld h,a
 206+ 967B 7C           2 ld a,h
 207+ 967C FE 58            cp $58
 208+ 967E 28 20            jr z,4F
 209+ 9680 D1               pop de
 210+ 9681 7B           	ld a,e
 211+ 9682 AE           	xor (hl)
 212+ 9683 77           	ld (hl),a
 213+ 9684 23           	inc hl
 214+ 9685 7A           	ld a,d
 215+ 9686 AE           	xor (hl)
 216+ 9687 77           	ld (hl),a
 217+ 9688 2B           	dec hl
 218+ 9689 24           	inc h
 219+ 968A 7C               ld a,h
 220+ 968B E6 07            and 7
 221+ 968D 20 0A            jr nz,3F
 222+ 968F 7D               ld a,l
 223+ 9690 C6 20            add a,$20
 224+ 9692 6F               ld l,a
 225+ 9693 38 04            jr c,3F
 226+ 9695 7C               ld a,h
 227+ 9696 D6 08            sub 8
 228+ 9698 67               ld h,a
 229+ 9699 7C           3 ld a,h
 230+ 969A FE 58            cp $58
 231+ 969C 28 02            jr z,4F
 232+ 969E 10 C1            djnz 1B
 233+ 96A0 ED 7B 92 89  4 ld sp,(Stack)
 234+ 96A4 C9           	ret
 235+ 96A5
 236+ 96A5 ED 73 92 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96A9 FD F9        	ld sp,iy
 238+ 96AB 06 08            ld b,8
 239+ 96AD D1           1 pop de
 240+ 96AE D1           	pop de
 241+ 96AF 7B           	ld a,e
 242+ 96B0 AE           	xor (hl)
 243+ 96B1 77           	ld (hl),a
 244+ 96B2 24            	inc h
 245+ 96B3 7C               ld a,h
 246+ 96B4 E6 07            and 7
 247+ 96B6 20 0A            jr nz,2F
 248+ 96B8 7D               ld a,l
 249+ 96B9 C6 20            add a,$20
 250+ 96BB 6F               ld l,a
 251+ 96BC 38 04            jr c,2F
 252+ 96BE 7C               ld a,h
 253+ 96BF D6 08            sub 8
 254+ 96C1 67               ld h,a
 255+ 96C2 7C           2 ld a,h
 256+ 96C3 FE 58            cp $58
 257+ 96C5 28 1B            jr z,4F
 258+ 96C7 D1               pop de
 259+ 96C8 7A           	ld a,d
 260+ 96C9 AE           	xor (hl)
 261+ 96CA 77           	ld (hl),a
 262+ 96CB 24           	inc h
 263+ 96CC 7C               ld a,h
 264+ 96CD E6 07            and 7
 265+ 96CF 20 0A            jr nz,3F
 266+ 96D1 7D               ld a,l
 267+ 96D2 C6 20            add a,$20
 268+ 96D4 6F               ld l,a
 269+ 96D5 38 04            jr c,3F
 270+ 96D7 7C               ld a,h
 271+ 96D8 D6 08            sub 8
 272+ 96DA 67               ld h,a
 273+ 96DB 7C           3 ld a,h
 274+ 96DC FE 58            cp $58
 275+ 96DE 28 02            jr z,4F
 276+ 96E0 10 CB            djnz 1B
 277+ 96E2 ED 7B 92 89  4 ld sp,(Stack)
 278+ 96E6 C9           	ret
 279+ 96E7
 280+ 96E7 ED 73 92 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 96EB FD F9        	ld sp,iy
 282+ 96ED 06 08            ld b,8
 283+ 96EF D1           1 pop de
 284+ 96F0 7B           	ld a,e
 285+ 96F1 AE           	xor (hl)
 286+ 96F2 77           	ld (hl),a
 287+ 96F3 23           	inc hl
 288+ 96F4 7A           	ld a,d
 289+ 96F5 AE           	xor (hl)
 290+ 96F6 77           	ld (hl),a
 291+ 96F7 2B           	dec hl
 292+ 96F8 24             	inc h
 293+ 96F9 7C               ld a,h
 294+ 96FA E6 07            and 7
 295+ 96FC 20 0A            jr nz,2F
 296+ 96FE 7D               ld a,l
 297+ 96FF C6 20            add a,$20
 298+ 9701 6F               ld l,a
 299+ 9702 38 04            jr c,2F
 300+ 9704 7C               ld a,h
 301+ 9705 D6 08            sub 8
 302+ 9707 67               ld h,a
 303+ 9708 7C           2 ld a,h
 304+ 9709 FE 58            cp $58
 305+ 970B 28 21            jr z,4F
 306+ 970D D1               pop de
 307+ 970E 7A           	ld a,d
 308+ 970F AE           	xor (hl)
 309+ 9710 77           	ld (hl),a
 310+ 9711 23           	inc hl
 311+ 9712 D1               pop de
 312+ 9713 7B           	ld a,e
 313+ 9714 AE           	xor (hl)
 314+ 9715 77           	ld (hl),a
 315+ 9716 2B           	dec hl
 316+ 9717 24           	inc h
 317+ 9718 7C               ld a,h
 318+ 9719 E6 07            and 7
 319+ 971B 20 0A            jr nz,3F
 320+ 971D 7D               ld a,l
 321+ 971E C6 20            add a,$20
 322+ 9720 6F               ld l,a
 323+ 9721 38 04            jr c,3F
 324+ 9723 7C               ld a,h
 325+ 9724 D6 08            sub 8
 326+ 9726 67               ld h,a
 327+ 9727 7C           3 ld a,h
 328+ 9728 FE 58            cp $58
 329+ 972A 28 02            jr z,4F
 330+ 972C 10 C1            djnz 1B
 331+ 972E ED 7B 92 89  4 ld sp,(Stack)
 332+ 9732 C9           	ret
 333+ 9733
 334+ 9733 ED 73 92 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9737 FD F9        	ld sp,iy
 336+ 9739 06 08            ld b,8
 337+ 973B D1           1 pop de
 338+ 973C 7B           	ld a,e
 339+ 973D AE           	xor (hl)
 340+ 973E 77           	ld (hl),a
 341+ 973F 24            	inc h
 342+ 9740 7C               ld a,h
 343+ 9741 E6 07            and 7
 344+ 9743 20 0A            jr nz,2F
 345+ 9745 7D               ld a,l
 346+ 9746 C6 20            add a,$20
 347+ 9748 6F               ld l,a
 348+ 9749 38 04            jr c,2F
 349+ 974B 7C               ld a,h
 350+ 974C D6 08            sub 8
 351+ 974E 67               ld h,a
 352+ 974F 7C           2 ld a,h
 353+ 9750 FE 58            cp $58
 354+ 9752 28 1C            jr z,4F
 355+ 9754 D1               pop de
 356+ 9755 7A           	ld a,d
 357+ 9756 AE           	xor (hl)
 358+ 9757 77           	ld (hl),a
 359+ 9758 24           	inc h
 360+ 9759 7C               ld a,h
 361+ 975A E6 07            and 7
 362+ 975C 20 0A            jr nz,3F
 363+ 975E 7D               ld a,l
 364+ 975F C6 20            add a,$20
 365+ 9761 6F               ld l,a
 366+ 9762 38 04            jr c,3F
 367+ 9764 7C               ld a,h
 368+ 9765 D6 08            sub 8
 369+ 9767 67               ld h,a
 370+ 9768 7C           3 ld a,h
 371+ 9769 FE 58            cp $58
 372+ 976B 28 03            jr z,4F
 373+ 976D D1               pop de
 374+ 976E 10 CB            djnz 1B
 375+ 9770 ED 7B 92 89  4 ld sp,(Stack)
 376+ 9774 C9           	ret
 377+ 9775
 378+ 9775              ; ---------------------------------------------------
 379+ 9775              ;
 380+ 9775              ;   27/02/23
 381+ 9775              ;
 382+ 9775              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9775              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9775              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9775
 386+ 9775 ED 73 92 89  Pinta_Disparo ld (Stack),sp
 387+ 9779 FD F9            ld sp,iy
 388+ 977B 06 02            ld b,2
 389+ 977D D1           1 pop de
 390+ 977E 7B               ld a,e
 391+ 977F AE               xor (hl)
 392+ 9780 77               ld (hl),a
 393+ 9781 23               inc hl
 394+ 9782 7A               ld a,d
 395+ 9783 AE               xor (hl)
 396+ 9784 77               ld (hl),a
 397+ 9785 2B               dec hl
 398+ 9786
 399+ 9786 24               inc h
 400+ 9787 7C               ld a,h
 401+ 9788 E6 07            and 7
 402+ 978A 20 0A            jr nz,2F
 403+ 978C 7D               ld a,l
 404+ 978D C6 20            add a,$20
 405+ 978F 6F               ld l,a
 406+ 9790 38 04            jr c,2F
 407+ 9792 7C               ld a,h
 408+ 9793 D6 08            sub 8
 409+ 9795 67               ld h,a
 410+ 9796 7C           2 ld a,h
 411+ 9797 FE 58            cp $58
 412+ 9799 28 02            jr z,3F
 413+ 979B
 414+ 979B 10 E0            djnz 1B
 415+ 979D ED 7B 92 89  3 ld sp,(Stack)
 416+ 97A1 C9               ret
 417+ 97A2
# file closed: Rutinas_de_impresion_sprites.asm
1213  97A2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97A2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97A2              ;
   3+ 97A2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97A2              ;
   5+ 97A2              ; *****************************************************************************************************************************************************************************************
   6+ 97A2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97A2
   8+ 97A2 7C           calcula_tercio ld a,h
   9+ 97A3 E6 18        	and $18
  10+ 97A5 CB 2F        	sra a
  11+ 97A7 CB 2F        	sra a
  12+ 97A9 CB 2F        	sra a
  13+ 97AB C9           	ret
  14+ 97AC
# file closed: calcula_tercio.asm
1214  97AC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97AC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97AC              ;
   3+ 97AC              ;
   4+ 97AC              ;	CLS.
   5+ 97AC              ;
   6+ 97AC              ;	Limpia la pantalla y define sus atributos.
   7+ 97AC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97AC              ;
   9+ 97AC              ;	COLORES: 0 ..... NEGRO
  10+ 97AC              ;    		 1 ..... AZUL
  11+ 97AC              ; 			 2 ..... ROJO
  12+ 97AC              ;			 3 ..... MAGENTA
  13+ 97AC              ; 			 4 ..... VERDE
  14+ 97AC              ; 			 5 ..... CIAN
  15+ 97AC              ;			 6 ..... AMARILLO
  16+ 97AC              ; 			 7 ..... BLANCO
  17+ 97AC              ;
  18+ 97AC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97AC              ;
  20+ 97AC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97AC
  22+ 97AC
  23+ 97AC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97AF 11 01 40     	LD DE,$4001
  25+ 97B2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97B5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 97B7 ED B0        	LDIR
  28+ 97B9 01 FF 02     	LD BC,767
  29+ 97BC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 97BD ED B0        	LDIR
  31+ 97BF C9           	ret
  32+ 97C0
# file closed: Cls.asm
1215  97C0              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 97C0              ; ******************************************************************************************************************************************************************************************
   2+ 97C0              ;
   3+ 97C0              ;   20/05/23
   4+ 97C0              ;
   5+ 97C0              ;	Recompone_posicion_inicio
   6+ 97C0              ;
   7+ 97C0              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 97C0              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 97C0              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 97C0              ;	_ a una u otra rutina.
  11+ 97C0
  12+ 97C0              Recompone_posicion_inicio
  13+ 97C0
  14+ 97C0 2A 55 89     	ld hl,(Posicion_inicio)
  15+ 97C3 7D           	ld a,l
  16+ 97C4 E6 1F        	and $1f
  17+ 97C6 28 16        	jr z,1F
  18+ 97C8
  19+ 97C8 FE 1F        	cp $1f
  20+ 97CA 28 0D        	jr z,3F
  21+ 97CC
  22+ 97CC 21 7F 89     	ld hl,Ctrl_2
  23+ 97CF CB CE        	set 1,(hl)
  24+ 97D1 2A 47 89     	ld hl,(Puntero_objeto)
  25+ 97D4 22 82 89     	ld (Repone_puntero_objeto),hl
  26+ 97D7 18 08        	jr 2F
  27+ 97D9
  28+ 97D9 CD 7A 99     3 call Mov_left
  29+ 97DC 18 03        	jr 2F
  30+ 97DE
  31+ 97DE CD 5C 98     1 call Mov_right
  32+ 97E1 21 00 F0     2 ld hl,Sprite_vacio
  33+ 97E4 22 47 89     	ld (Puntero_objeto),hl
  34+ 97E7 C9           	ret
  35+ 97E8
  36+ 97E8              ; ******************************************************************************************************************************************************************************************
  37+ 97E8              ;
  38+ 97E8              ;   27/05/23
  39+ 97E8              ;
  40+ 97E8              ;	Mov_down
  41+ 97E8              ;
  42+ 97E8              ; 	Mueve el Sprite X px hacia abajo.
  43+ 97E8              ;
  44+ 97E8              ;
  45+ 97E8              Mov_down
  46+ 97E8
  47+ 97E8 CD 4A 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 97EB              ;																	; _ repone (Puntero_objeto).
  49+ 97EB 21 71 89     	ld hl,Ctrl_0
  50+ 97EE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 97F0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 97F0              ; 																	; _ en el caso de que no lo haya.
  53+ 97F0 3A 5B 89     	ld a,(Vel_down)
  54+ 97F3 47           	ld b,a
  55+ 97F4 2A 45 89         ld hl,(Posicion_actual)
  56+ 97F7 CD A2 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 97FA E6 02        	and 2
  58+ 97FC 28 0F        	jr z,1F
  59+ 97FE
  60+ 97FE              ; Nos encontramos en el último tercio de pantalla.
  61+ 97FE              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 97FE
  63+ 97FE 7C           	ld a,h
  64+ 97FF FE 57        	cp $57
  65+ 9801 20 0A        	jr nz,1F
  66+ 9803 7D           	ld a,l
  67+ 9804 C6 20        	add $20
  68+ 9806 30 05        	jr nc,1F
  69+ 9808
  70+ 9808              ; ------------------------------
  71+ 9808 CD F8 9A     	call Reaparece_arriba
  72+ 980B              ;	call Reinicio
  73+ 980B              ; ------------------------------
  74+ 980B
  75+ 980B 18 08        	jr 3F
  76+ 980D CD E2 94     1 call NextScan
  77+ 9810 22 45 89     	ld (Posicion_actual),hl
  78+ 9813 10 E2            djnz 2B
  79+ 9815 CD 0E 9B     3 call Genera_coordenadas
  80+ 9818 C9           	ret
  81+ 9819
  82+ 9819              ; ******************************************************************************************************************************************************************************************
  83+ 9819              ;
  84+ 9819              ;   27/05/23
  85+ 9819              ;
  86+ 9819              ;	Mov_up
  87+ 9819              ;
  88+ 9819              ; 	Mueve el Sprite hacia arriba.
  89+ 9819              ;
  90+ 9819              ;
  91+ 9819              Mov_up
  92+ 9819
  93+ 9819 CD 4A 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 981C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 981C 21 71 89     	ld hl,Ctrl_0
  96+ 981F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9821              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9821              ; 																		; _ en el caso de que no lo haya.
  99+ 9821 3A 5A 89     	ld a,(Vel_up)
 100+ 9824 47           	ld b,a
 101+ 9825 2A 45 89     	ld hl,(Posicion_actual)
 102+ 9828 CD A2 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 982B A7           	and a
 104+ 982C 20 10        	jr nz,1F
 105+ 982E
 106+ 982E              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 982E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 982E
 109+ 982E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 982F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9831 20 0B            jr nz,1F
 112+ 9833 7D               ld a,l
 113+ 9834 D6 20            sub $20
 114+ 9836 30 06            jr nc,1F
 115+ 9838 25               dec h
 116+ 9839
 117+ 9839              ; -----------------------------
 118+ 9839 CD E8 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 983C              ;	call Reinicio
 120+ 983C              ; -----------------------------
 121+ 983C
 122+ 983C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 983E CD F1 94     1 call PreviousScan
 124+ 9841 22 45 89     	ld (Posicion_actual),hl
 125+ 9844 10 E2            djnz 3B
 126+ 9846 CD 0E 9B     2 call Genera_coordenadas
 127+ 9849 C9           	ret
 128+ 984A
 129+ 984A              ; -----------------------------
 130+ 984A              ;
 131+ 984A              ;	27/5/23
 132+ 984A              ;
 133+ 984A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 984A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 984A              ;
 136+ 984A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 984A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 984A              ;
 139+ 984A              ;	Modifica: A y (Puntero_objeto).
 140+ 984A
 141+ 984A 3A 7F 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 984D CB 4F        	bit 1,a
 143+ 984F C8           	ret z
 144+ 9850 CB 8F        	res 1,a
 145+ 9852 32 7F 89     	ld (Ctrl_2),a
 146+ 9855 2A 82 89     	ld hl,(Repone_puntero_objeto)
 147+ 9858 22 47 89     	ld (Puntero_objeto),hl
 148+ 985B C9           	ret
 149+ 985C
 150+ 985C              ; ******************************************************************************************************************************************************************************************
 151+ 985C              ;
 152+ 985C              ;	19/10/22
 153+ 985C              ;
 154+ 985C              ;	Mov_right.
 155+ 985C              ;
 156+ 985C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 985C              ;
 158+ 985C
 159+ 985C 21 71 89     Mov_right ld hl,Ctrl_0
 160+ 985F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9861              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9861              ; 																	; _ en el caso de que no lo haya.
 163+ 9861 3A 71 89     	ld a,(Ctrl_0)
 164+ 9864 CB 77        	bit 6,a
 165+ 9866 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 9868
 167+ 9868 CD 96 9A     	call Stop_Amadeus_right
 168+ 986B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 986C 18 4D        	jr 8F
 170+ 986E
 171+ 986E 3A 49 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 9871 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 9873 20 46        	jr nz,8F
 174+ 9875
 175+ 9875 3A 4B 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 9878 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 9879 28 40        	jr z,8F
 178+ 987B
 179+ 987B              ; ---------- ---------- ----------
 180+ 987B              ;
 181+ 987B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 987B
 183+ 987B 3A 59 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 987E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 9880 28 11        	jr z,1F
 186+ 9882 38 06        	jr c,6F
 187+ 9884 FE 04        	cp 4
 188+ 9886 28 14        	jr z,7F
 189+ 9888 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 988A
 191+ 988A              ; ---------- ---------- ----------
 192+ 988A              ;
 193+ 988A              ; Perfiles de velocidad
 194+ 988A              ;
 195+ 988A
 196+ 988A 3A 4B 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 988D FE FE        	cp $fe
 198+ 988F 20 2A        	jr nz,8F
 199+ 9891 18 10        	jr 3F
 200+ 9893 3A 4B 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 9896 FE FD        	cp $fd
 202+ 9898 20 21        	jr nz,8F
 203+ 989A 18 07        	jr 3F
 204+ 989C 3A 4B 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 989F FE FB        	cp $fb
 206+ 98A1 20 18        	jr nz,8F
 207+ 98A3
 208+ 98A3              ; ---------- ---------- ----------
 209+ 98A3
 210+ 98A3              3
 211+ 98A3 CD D6 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 98A6              ;	call Reinicio
 213+ 98A6
 214+ 98A6              ; ---------- ---------- ----------
 215+ 98A6              ;
 216+ 98A6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 98A6
 218+ 98A6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 98A8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 98A9 CD C2 98     	call DESPLZ_DER
 221+ 98AC C1           	pop bc
 222+ 98AD 10 F9        	djnz 5B
 223+ 98AF 2A 45 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 98B2 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 98B3 22 45 89     	ld (Posicion_actual),hl
 226+ 98B6 CD 0E 9B     	call Genera_coordenadas
 227+ 98B9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 98BB
 229+ 98BB              ; ---------- ---------- ----------
 230+ 98BB
 231+ 98BB 2A 45 89     8 ld hl,(Posicion_actual)
 232+ 98BE CD C2 98     	call DESPLZ_DER
 233+ 98C1 C9           2 ret
 234+ 98C2
 235+ 98C2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 98C2              ;
 237+ 98C2              ;	22/9/22
 238+ 98C2              ;
 239+ 98C2
 240+ 98C2 CD D1 98     DESPLZ_DER call Desplaza_derecha
 241+ 98C5 CD 1D 99         call modifica_parametros_1er_DESPLZ_2
 242+ 98C8 CD 46 99         call Ciclo_completo
 243+ 98CB 21 71 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 98CE CB FE        	set 7,(hl)
 245+ 98D0 C9           	ret
 246+ 98D1
 247+ 98D1              ; ******************************************************************************************************************************************************************************************
 248+ 98D1              ;	15/02/23
 249+ 98D1              ;
 250+ 98D1
 251+ 98D1 3A 59 89     Desplaza_derecha ld a,(Vel_right)
 252+ 98D4 47           	ld b,a
 253+ 98D5 2A 51 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 98D8 23           1 inc hl
 255+ 98D9 23           	inc hl
 256+ 98DA 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 98DC 22 51 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 98DF CD AB 8C     	call Extrae_address
 259+ 98E2 22 47 89     	ld (Puntero_objeto),hl
 260+ 98E5
 261+ 98E5              ; Modifica (Puntero_DESPLZ_izq).
 262+ 98E5
 263+ 98E5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 98E5              ; Cuántos movimientos hemos hecho ??
 265+ 98E5              ; DE contiene (Puntero_DESPLZ_der).
 266+ 98E5
 267+ 98E5 2A 4D 89     7 ld hl,(Indice_Sprite_der)
 268+ 98E8 EB           	ex de,hl
 269+ 98E9 A7           	and a
 270+ 98EA ED 52        	sbc hl,de
 271+ 98EC CB 3D        	srl l
 272+ 98EE 3E 08        6 ld a,8
 273+ 98F0 95           	sub l
 274+ 98F1 30 1E        	jr nc,3F
 275+ 98F3
 276+ 98F3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 98F3              ; B="0".
 278+ 98F3
 279+ 98F3 04           4 inc b
 280+ 98F4 3C           	inc a
 281+ 98F5 20 FC        	jr nz,4B
 282+ 98F7 78           	ld a,b
 283+ 98F8 08           	ex af,af
 284+ 98F9 2A 4D 89     	ld hl,(Indice_Sprite_der)
 285+ 98FC 23           5 inc hl
 286+ 98FD 23           	inc hl
 287+ 98FE 10 FC        	djnz 5B
 288+ 9900 22 51 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9903 CD AB 8C     	call Extrae_address
 290+ 9906 22 47 89     	ld (Puntero_objeto),hl
 291+ 9909
 292+ 9909              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9909              ; _(Posicion_actual).
 294+ 9909
 295+ 9909 21 45 89     	ld hl,Posicion_actual
 296+ 990C 34           	inc (hl)
 297+ 990D 08               ex af,af
 298+ 990E 6F           	ld l,a
 299+ 990F 18 DD        	jr 6B
 300+ 9911
 301+ 9911              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9911
 303+ 9911 47           3 ld b,a
 304+ 9912 2A 4F 89     	ld hl,(Indice_Sprite_izq)
 305+ 9915 23           2 inc hl
 306+ 9916 23           	inc hl
 307+ 9917 10 FC        	djnz 2B
 308+ 9919 22 53 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 991C C9           8 ret
 310+ 991D
 311+ 991D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 991D              ;
 313+ 991D              ;	24/7/22
 314+ 991D              ;
 315+ 991D              ;	modifica_parametros_1er_DESPLZ_2
 316+ 991D              ;
 317+ 991D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 991D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 991D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 991D
 321+ 991D 3A 4B 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9920 A7           	and a
 323+ 9921 20 1F        	jr nz,1F
 324+ 9923 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9925 32 4B 89         ld (CTRL_DESPLZ),a
 326+ 9928
 327+ 9928 21 44 89     	ld hl,Columns
 328+ 992B 34           	inc (hl)
 329+ 992C 3A 57 89     	ld a,(Cuad_objeto)
 330+ 992F E6 01        	and 1
 331+ 9931 28 0F        	jr z,1F
 332+ 9933 2A 45 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9936 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9937 22 45 89     	ld (Posicion_actual),hl
 335+ 993A CD 0E 9B     	call Genera_coordenadas
 336+ 993D CD A2 9A     	call Inc_CTRL_DESPLZ
 337+ 9940 18 03        	jr 2F
 338+ 9942 CD A2 9A     1 call Inc_CTRL_DESPLZ
 339+ 9945 C9           2 ret
 340+ 9946
 341+ 9946              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9946              ;
 343+ 9946              ;	24/7/22
 344+ 9946              ;
 345+ 9946              ;	Ciclo_completo.
 346+ 9946              ;
 347+ 9946              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9946              ;
 349+ 9946              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9946              ; 	Decrementamos (Columns).
 351+ 9946              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9946              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9946
 354+ 9946
 355+ 9946 3A 4B 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9949 FE FF        	cp $ff
 357+ 994B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 994D E6 F0        	and $f0
 359+ 994F 20 28        	jr nz,3F
 360+ 9951
 361+ 9951              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9951
 363+ 9951 3A 4B 89     	ld a,(CTRL_DESPLZ)
 364+ 9954 47           	ld b,a
 365+ 9955 3E F8        	ld a,$f8
 366+ 9957 80           	add b
 367+ 9958 32 4B 89     	ld (CTRL_DESPLZ),a
 368+ 995B 18 1C        	jr 3F
 369+ 995D 21 44 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9960 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9961 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9962 32 4B 89     	ld (CTRL_DESPLZ),a
 373+ 9965 3A 57 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9968 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 996A 20 0A        	jr nz,2F
 376+ 996C 2A 45 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 996F 23           	inc hl
 378+ 9970 22 45 89     	ld (Posicion_actual),hl
 379+ 9973 CD 0E 9B     	call Genera_coordenadas
 380+ 9976
 381+ 9976              ; Inicia el puntero de Sprite.
 382+ 9976
 383+ 9976 CD C2 8C     2 call Inicia_puntero_objeto_der
 384+ 9979 C9           3 ret
 385+ 997A
 386+ 997A              ; ******************************************************************************************************************************************************************************************
 387+ 997A              ;
 388+ 997A              ;	15/02/23
 389+ 997A              ;
 390+ 997A              ;	Mov_left.
 391+ 997A              ;
 392+ 997A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 997A              ;
 394+ 997A 21 71 89     Mov_left ld hl,Ctrl_0
 395+ 997D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 997F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 997F              ; 																	; _ en el caso de que no lo haya.
 398+ 997F 3A 71 89     	ld a,(Ctrl_0)
 399+ 9982 CB 77        	bit 6,a
 400+ 9984 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9986
 402+ 9986 CD 9C 9A     	call Stop_Amadeus_left
 403+ 9989 C8           	ret z
 404+ 998A 20 4A        	jr nz,8F
 405+ 998C
 406+ 998C 3A 49 89     11 ld a,(Coordenada_X)
 407+ 998F A7           	and a
 408+ 9990 20 44        	jr nz,8F
 409+ 9992
 410+ 9992 3A 4B 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9995 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9996 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9998
 414+ 9998              ; ---------- ---------- ----------
 415+ 9998
 416+ 9998 3A 58 89     	ld a,(Vel_left)
 417+ 999B FE 02        	cp 2
 418+ 999D 28 0F        	jr z,1F
 419+ 999F 38 04        	jr c,6F
 420+ 99A1 FE 04        	cp 4
 421+ 99A3 28 12        	jr z,7F
 422+ 99A5
 423+ 99A5              ; ---------- ---------- ----------
 424+ 99A5
 425+ 99A5 3A 4B 89     6 ld a,(CTRL_DESPLZ)
 426+ 99A8 FE F8        	cp $f8
 427+ 99AA 20 2A        	jr nz,8F
 428+ 99AC 18 10        	jr 4F
 429+ 99AE 3A 4B 89     1 ld a,(CTRL_DESPLZ)
 430+ 99B1 FE F9        	cp $f9
 431+ 99B3 20 21        	jr nz,8F
 432+ 99B5 18 07        	jr 4F
 433+ 99B7 3A 4B 89     7 ld a,(CTRL_DESPLZ)
 434+ 99BA FE FB        	cp $fb
 435+ 99BC 20 18        	jr nz,8F
 436+ 99BE
 437+ 99BE              ; ---------- ---------- ----------
 438+ 99BE
 439+ 99BE              4
 440+ 99BE CD C4 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 99C1              ;	call Reinicio
 442+ 99C1
 443+ 99C1              ; ---------- ---------- ----------
 444+ 99C1
 445+ 99C1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 99C3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 99C4
 448+ 99C4              ;	ld hl,(Indice_Sprite_izq)
 449+ 99C4              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 99C4
 451+ 99C4 CD DD 99     	call DESPLZ_IZQ
 452+ 99C7 C1           	pop bc
 453+ 99C8 10 F9        	djnz 5B
 454+ 99CA 2A 45 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 99CD 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 99CE 22 45 89     	ld (Posicion_actual),hl
 457+ 99D1 CD 0E 9B     	call Genera_coordenadas
 458+ 99D4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 99D6
 460+ 99D6              ; ---------- ---------- ----------
 461+ 99D6
 462+ 99D6              ; Movemos, no hay recolocación.
 463+ 99D6
 464+ 99D6 2A 45 89     8 ld hl,(Posicion_actual)
 465+ 99D9 CD DD 99     	call DESPLZ_IZQ
 466+ 99DC C9           2 ret
 467+ 99DD
 468+ 99DD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 99DD              ;
 470+ 99DD              ;	22/9/22
 471+ 99DD
 472+ 99DD              DESPLZ_IZQ
 473+ 99DD
 474+ 99DD CD EC 99     	call Desplaza_izquierda
 475+ 99E0 CD 38 9A         call modifica_parametros_1er_DESPLZ
 476+ 99E3 CD 60 9A     	call Ciclo_completo_2
 477+ 99E6 21 71 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 99E9 CB BE        	res 7,(hl)
 479+ 99EB C9           	ret
 480+ 99EC
 481+ 99EC              Desplaza_izquierda
 482+ 99EC
 483+ 99EC 3A 58 89     	ld a,(Vel_left)
 484+ 99EF 47           	ld b,a
 485+ 99F0 2A 53 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 99F3 23           1 inc hl
 487+ 99F4 23           	inc hl
 488+ 99F5 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 99F7 22 53 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 99FA CD AB 8C     	call Extrae_address
 491+ 99FD 22 47 89     	ld (Puntero_objeto),hl
 492+ 9A00
 493+ 9A00              ; Modifica (Puntero_DESPLZ_der).
 494+ 9A00
 495+ 9A00              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9A00              ; Cuántos movimientos hemos hecho ??
 497+ 9A00              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9A00
 499+ 9A00 2A 4F 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9A03 EB           	ex de,hl
 501+ 9A04 A7           	and a
 502+ 9A05 ED 52        	sbc hl,de
 503+ 9A07 CB 3D        	srl l
 504+ 9A09 3E 08        6 ld a,8
 505+ 9A0B 95           	sub l
 506+ 9A0C 30 1E        	jr nc,3F
 507+ 9A0E
 508+ 9A0E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9A0E              ; B="0".
 510+ 9A0E
 511+ 9A0E 04           4 inc b
 512+ 9A0F 3C           	inc a
 513+ 9A10 20 FC        	jr nz,4B
 514+ 9A12 78           	ld a,b
 515+ 9A13 08           	ex af,af
 516+ 9A14 2A 4F 89     	ld hl,(Indice_Sprite_izq)
 517+ 9A17 23           5 inc hl
 518+ 9A18 23           	inc hl
 519+ 9A19 10 FC        	djnz 5B
 520+ 9A1B 22 53 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9A1E CD AB 8C     	call Extrae_address
 522+ 9A21 22 47 89     	ld (Puntero_objeto),hl
 523+ 9A24
 524+ 9A24              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9A24              ; _(Posicion_actual).
 526+ 9A24
 527+ 9A24 21 45 89     	ld hl,Posicion_actual
 528+ 9A27 35           	dec (hl)
 529+ 9A28 08           	ex af,af
 530+ 9A29 6F           	ld l,a
 531+ 9A2A 18 DD        	jr 6B
 532+ 9A2C
 533+ 9A2C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9A2C
 535+ 9A2C 47           3 ld b,a
 536+ 9A2D 2A 4D 89     	ld hl,(Indice_Sprite_der)
 537+ 9A30 23           2 inc hl
 538+ 9A31 23           	inc hl
 539+ 9A32 10 FC        	djnz 2B
 540+ 9A34 22 51 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9A37 C9           8 ret
 542+ 9A38
 543+ 9A38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9A38              ;
 545+ 9A38              ;	modifica_parametros_1er_DESPLZ
 546+ 9A38              ;
 547+ 9A38              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9A38              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9A38              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9A38
 551+ 9A38 3A 4B 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9A3B A7           	and a
 553+ 9A3C 20 1E        	jr nz,1F
 554+ 9A3E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9A3F 32 4B 89         ld (CTRL_DESPLZ),a
 556+ 9A42 21 44 89     	ld hl,Columns
 557+ 9A45 34           	inc (hl)
 558+ 9A46 3A 57 89     	ld a,(Cuad_objeto)
 559+ 9A49 E6 01        	and 1
 560+ 9A4B 20 0F        	jr nz,1F
 561+ 9A4D 2A 45 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9A50 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9A51 22 45 89     	ld (Posicion_actual),hl
 564+ 9A54 CD 0E 9B     	call Genera_coordenadas
 565+ 9A57 CD B3 9A     	call Dec_CTRL_DESPLZ
 566+ 9A5A 18 03        	jr 2F
 567+ 9A5C CD B3 9A     1 call Dec_CTRL_DESPLZ
 568+ 9A5F C9           2 ret
 569+ 9A60
 570+ 9A60              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9A60
 572+ 9A60 3A 4B 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9A63 FE F7        	cp $f7
 574+ 9A65 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9A67 30 2C        	jr nc,3F
 576+ 9A69
 577+ 9A69              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9A69
 579+ 9A69 06 00        	ld b,0
 580+ 9A6B 04           4 inc b
 581+ 9A6C 3C           	inc a
 582+ 9A6D FE F7        	cp $f7
 583+ 9A6F 20 FA        	jr nz,4B
 584+ 9A71 3E FF        	ld a,$ff
 585+ 9A73 90           	sub b
 586+ 9A74 32 4B 89     	ld (CTRL_DESPLZ),a
 587+ 9A77 18 1C        	jr 3F
 588+ 9A79
 589+ 9A79              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9A79
 591+ 9A79 21 44 89     1 ld hl,Columns
 592+ 9A7C 35           	dec (hl)
 593+ 9A7D AF           	xor a
 594+ 9A7E 32 4B 89     	ld (CTRL_DESPLZ),a
 595+ 9A81 3A 57 89     	ld a,(Cuad_objeto)
 596+ 9A84 E6 01        	and 1
 597+ 9A86 28 0A        	jr z,2F
 598+ 9A88 2A 45 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9A8B 2B           	dec hl
 600+ 9A8C 22 45 89     	ld (Posicion_actual),hl
 601+ 9A8F CD 0E 9B     	call Genera_coordenadas
 602+ 9A92
 603+ 9A92              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9A92
 605+ 9A92 CD D5 8C     2 call Inicia_puntero_objeto_izq
 606+ 9A95 C9           3 ret
 607+ 9A96
 608+ 9A96              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9A96              ;
 610+ 9A96              ;	19/10/22
 611+ 9A96              ;
 612+ 9A96              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9A96              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9A96
 615+ 9A96 3A 49 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9A99 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9A9B C9           	ret
 618+ 9A9C
 619+ 9A9C              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9A9C              ;
 621+ 9A9C              ;	19/10/22
 622+ 9A9C              ;
 623+ 9A9C              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9A9C              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9A9C
 626+ 9A9C 3A 49 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9A9F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9AA1 C9           	ret
 629+ 9AA2
 630+ 9AA2              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9AA2              ;
 632+ 9AA2              ;	24/7/22
 633+ 9AA2              ;
 634+ 9AA2              ;	Inc_CTRL_DESPLZ
 635+ 9AA2              ;
 636+ 9AA2              ;
 637+ 9AA2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9AA2
 639+ 9AA2 21 4B 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9AA5 3A 59 89     	ld a,(Vel_right)
 641+ 9AA8 A7           	and a
 642+ 9AA9 28 06        	jr z,1F
 643+ 9AAB 47           	ld b,a
 644+ 9AAC 34           3 inc (hl)
 645+ 9AAD 10 FD        	djnz 3B
 646+ 9AAF 18 01        	jr 2F
 647+ 9AB1 34           1 inc (hl)
 648+ 9AB2 C9           2 ret
 649+ 9AB3
 650+ 9AB3              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9AB3              ;
 652+ 9AB3              ;	5/2/23
 653+ 9AB3              ;
 654+ 9AB3              ;	Dec_CTRL_DESPLZ
 655+ 9AB3              ;
 656+ 9AB3              ;
 657+ 9AB3              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9AB3
 659+ 9AB3 21 4B 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9AB6 3A 58 89     	ld a,(Vel_left)
 661+ 9AB9 A7           	and a
 662+ 9ABA 28 06        	jr z,1F
 663+ 9ABC 47           	ld b,a
 664+ 9ABD 35           3 dec (hl)
 665+ 9ABE 10 FD        	djnz 3B
 666+ 9AC0 18 01        	jr 2F
 667+ 9AC2 35           1 dec (hl)
 668+ 9AC3 C9           2 ret
 669+ 9AC4
 670+ 9AC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9AC4
 672+ 9AC4 2A 45 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9AC7 01 1F 00     	ld bc,31
 674+ 9ACA A7           	and a
 675+ 9ACB ED 4A        	adc hl,bc
 676+ 9ACD 22 45 89     	ld (Posicion_actual),hl
 677+ 9AD0 21 71 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9AD3 CB C6        	set 0,(hl)
 679+ 9AD5 C9           	ret
 680+ 9AD6
 681+ 9AD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9AD6
 683+ 9AD6 2A 45 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9AD9 01 1F 00     	ld bc,31
 685+ 9ADC A7           	and a
 686+ 9ADD ED 42        	sbc hl,bc
 687+ 9ADF 22 45 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9AE2 21 71 89     	ld hl,Ctrl_0
 689+ 9AE5 CB CE        	set 1,(hl)
 690+ 9AE7 C9           	ret
 691+ 9AE8
 692+ 9AE8              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9AE8
 694+ 9AE8 24           Reaparece_abajo inc h
 695+ 9AE9 01 E0 17     	ld bc,$17e0
 696+ 9AEC A7           	and a
 697+ 9AED ED 4A        	adc hl,bc
 698+ 9AEF 22 45 89     	ld (Posicion_actual),hl
 699+ 9AF2 21 71 89     	ld hl,Ctrl_0
 700+ 9AF5 CB D6        	set 2,(hl)
 701+ 9AF7 C9           	ret
 702+ 9AF8
 703+ 9AF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9AF8
 705+ 9AF8 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9AFB A7           	and a
 707+ 9AFC ED 42        	sbc hl,bc
 708+ 9AFE 22 45 89     	ld (Posicion_actual),hl
 709+ 9B01 21 71 89     	ld hl,Ctrl_0
 710+ 9B04 CB DE        	set 3,(hl)
 711+ 9B06 C9           	ret
 712+ 9B07
 713+ 9B07              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9B07
 715+ 9B07 2A 55 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9B0A 22 45 89     	ld (Posicion_actual),hl
 717+ 9B0D C9           	ret
# file closed: Direcciones.asm
1216  9B0E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B0E              ; ------------------------------------------------------------------------
   2+ 9B0E              ;
   3+ 9B0E              ;	02/04/23
   4+ 9B0E              ;
   5+ 9B0E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B0E              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B0E              ;
   8+ 9B0E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B0E              ;
  10+ 9B0E              ;	Modifica: A,BC y DE.
  11+ 9B0E
  12+ 9B0E C5           Genera_coordenadas push bc
  13+ 9B0F E5           	push hl
  14+ 9B10 D5           	push de
  15+ 9B11
  16+ 9B11 2A 45 89     	ld hl,(Posicion_actual)
  17+ 9B14
  18+ 9B14 7D           	ld a,l
  19+ 9B15 E6 1F        	and $1f
  20+ 9B17 32 49 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9B1A
  22+ 9B1A CD A2 97     	call calcula_tercio
  23+ 9B1D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9B1E
  25+ 9B1E 1E 00        	ld e,0
  26+ 9B20 7D           	ld a,l
  27+ 9B21 E6 E0        	and $e0
  28+ 9B23 28 01        	jr z,1F
  29+ 9B25 04           	inc b
  30+ 9B26
  31+ 9B26 04           1 inc b
  32+ 9B27 05           	dec b
  33+ 9B28 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9B2A              ;														; _ , salimos.
  35+ 9B2A 1C           3 inc e
  36+ 9B2B D6 20        	sub 32
  37+ 9B2D 20 FB        	jr nz,3B
  38+ 9B2F 10 F5        	djnz 1B
  39+ 9B31
  40+ 9B31 7B           2 ld a,e
  41+ 9B32 32 4A 89     	ld (Coordenada_y),a
  42+ 9B35
  43+ 9B35 D1           	pop de
  44+ 9B36 E1           	pop hl
  45+ 9B37 C1           	pop bc
  46+ 9B38
  47+ 9B38 C9           	ret
  48+ 9B39
  49+ 9B39              ; ------------------------------------------------------------------------
  50+ 9B39              ;	28/05/23
  51+ 9B39              ;
  52+ 9B39              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9B39              ;	Fila superior "0", Columna izquierda "0".
  54+ 9B39              ;
  55+ 9B39              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9B39              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9B39              ;
  58+ 9B39              ;		DE="$120d"
  59+ 9B39              ;
  60+ 9B39              ;		D, (Coordenada_X), Columnas, $12
  61+ 9B39              ;		E, (Coordenada_y), Filas, $0d
  62+ 9B39              ;
  63+ 9B39              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9B39
  65+ 9B39              ;	Modifica: A,BC y DE.
  66+ 9B39
  67+ 9B39
  68+ 9B39              Genera_coordenadas_disparo
  69+ 9B39
  70+ 9B39              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9B39
  72+ 9B39 7D           	ld a,l
  73+ 9B3A E6 1F        	and $1f
  74+ 9B3C 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9B3D CD A2 97     	call calcula_tercio
  76+ 9B40 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9B41 1E 00        	ld e,0
  78+ 9B43 7D           	ld a,l
  79+ 9B44 E6 E0        	and $e0
  80+ 9B46 28 01        	jr z,1F
  81+ 9B48 04           	inc b
  82+ 9B49 1C           1 inc e
  83+ 9B4A D6 20        	sub 32
  84+ 9B4C 20 FB        	jr nz,1B
  85+ 9B4E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9B50 C9           	ret
  87+ 9B51
# file closed: Genera_coordenadas.asm
1217  9B51              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9B51
   2+ 9B51
   3+ 9B51              ;   11/8/22
   4+ 9B51              ;
   5+ 9B51              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9B51              ;
   7+ 9B51              ;   Mov_obj.asm
   8+ 9B51              ;
   9+ 9B51              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9B51              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9B51              ;
  12+ 9B51              ;   Codificación:
  13+ 9B51              ;
  14+ 9B51              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9B51
  16+ 9B51              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9B51
  18+ 9B51 02 40 00     Arriba db 2,%01000000,0
  19+ 9B54 02 80 00     Abajo db 2,%10000000,0
  20+ 9B57 02 20 00     Derecha db 2,%00100000,0
  21+ 9B5A 02 10 00     Izquierda db 2,%00010000,0
  22+ 9B5D 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9B61 60 42 60 40
  22+ 9B65 63
  23+ 9B66 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9B6A 22 A3 80 A0
  24+ 9B6E 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9B72 84 A0 83 A0
  25+ 9B76 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9B7A 80 A3 22 A0
  26+ 9B7E 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9B82 40 60 42 60
  27+ 9B86 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9B8A
  29+ 9B8A 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9B8E 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9B92 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9B96 84 00
  32+ 9B98 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9B9C 84 00
  33+ 9B9E 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9BA2 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9BA6 1F 1F 1F 1F
  35+ 9BAA 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9BAE 1F 1F 1F 1F
  35+ 9BB2 1F
  36+ 9BB3 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9BB7 2F 2F 2F 2F
  36+ 9BBB 2F 2F
  37+ 9BBD 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9BC1 2F 2F 00
  38+ 9BC4
  39+ 9BC4              ; ----- ----- ----- ----- -----
  40+ 9BC4
  41+ 9BC4 A2 9B        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9BC6 9E 9B        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9BC8 5A 9B        Indice_mov_Izquierda defw Izquierda
  44+ 9BCA 57 9B        Indice_mov_Derecha defw Derecha
  45+ 9BCC 54 9B        Indice_mov_Abajo defw Abajo
  46+ 9BCE 51 9B        Indice_mov_Arriba defw Arriba
  47+ 9BD0 8E 9B        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9BD2 92 9B        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9BD4 8A 9B        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9BD6 98 9B        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9BD8 5D 9B        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9BDA              ; ----- ----- ----- ----- -----
  53+ 9BDA
  54+ 9BDA 3A 78 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9BDD A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9BDE 28 02            jr z,1F
  57+ 9BE0 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9BE2 3A 79 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9BE5 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9BE7 32 79 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9BEA              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9BEA 2A 76 89         ld hl,(Puntero_mov)
  63+ 9BED 7E               ld a,(hl)
  64+ 9BEE 32 78 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9BF1 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9BF2 22 76 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9BF5
  68+ 9BF5 3A 7A 89     Decoder ld a,(Repetimos_db)
  69+ 9BF8 A7               and a
  70+ 9BF9 20 0C            jr nz,12F
  71+ 9BFB 2A 76 89         ld hl,(Puntero_mov)
  72+ 9BFE 7E               ld a,(hl)
  73+ 9BFF A7               and a
  74+ 9C00 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9C02 E6 0F            and $0f
  76+ 9C04 32 7A 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9C07              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9C07 2A 76 89     12 ld hl,(Puntero_mov)
  79+ 9C0A CB 7E            bit 7,(hl)
  80+ 9C0C 28 03            jr z,2F
  81+ 9C0E CD E8 97         call Mov_down
  82+ 9C11 2A 76 89     2 ld hl, (Puntero_mov)
  83+ 9C14 CB 76            bit 6,(hl)
  84+ 9C16 28 03            jr z,3F
  85+ 9C18 CD 19 98         call Mov_up
  86+ 9C1B 2A 76 89     3 ld hl, (Puntero_mov)
  87+ 9C1E CB 6E            bit 5,(hl)
  88+ 9C20 28 03            jr z,4F
  89+ 9C22 CD 5C 98         call Mov_right
  90+ 9C25 2A 76 89     4 ld hl, (Puntero_mov)
  91+ 9C28 CB 66            bit 4,(hl)
  92+ 9C2A 28 03            jr z,5F
  93+ 9C2C CD 7A 99         call Mov_left
  94+ 9C2F
  95+ 9C2F              ; ---------- --------- --------- ---------- ----------
  96+ 9C2F
  97+ 9C2F 3A 7A 89     5 ld a,(Repetimos_db)
  98+ 9C32 A7               and a
  99+ 9C33 28 07            jr z,6F
 100+ 9C35 3D               dec a
 101+ 9C36 32 7A 89         ld (Repetimos_db),a
 102+ 9C39 28 01            jr z,6f
 103+ 9C3B C9           11 ret
 104+ 9C3C 21 78 89     6 ld hl,Contador_db_mov
 105+ 9C3F 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9C40 2A 76 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9C43 23               inc hl
 108+ 9C44 22 76 89         ld (Puntero_mov),hl
 109+ 9C47 18 F2            jr 11B
 110+ 9C49 2A 74 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9C4C 3A 79 89         ld a,(Incrementa_puntero)
 112+ 9C4F 47               ld b,a
 113+ 9C50 23           8 inc hl
 114+ 9C51 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9C53 5E               ld e,(hl)
 116+ 9C54 23               inc hl
 117+ 9C55 56               ld d,(hl)
 118+ 9C56 EB               ex de,hl
 119+ 9C57 22 76 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9C5A 18 DF            jr 11B
 121+ 9C5C
 122+ 9C5C              ; ---------- --------- --------- ---------- ----------
 123+ 9C5C              ;
 124+ 9C5C              ;   11/8/22
 125+ 9C5C              ;
 126+ 9C5C              ;   Prepara_Puntero_mov
 127+ 9C5C
 128+ 9C5C E5           Prepara_Puntero_mov push hl
 129+ 9C5D D5               push de
 130+ 9C5E 2A 74 89         ld hl,(Puntero_indice_mov)
 131+ 9C61 5E               ld e,(hl)
 132+ 9C62 23               inc hl
 133+ 9C63 56               ld d,(hl)
 134+ 9C64 EB               ex de,hl
 135+ 9C65 22 76 89         ld (Puntero_mov),hl
 136+ 9C68 D1               pop de
 137+ 9C69 E1               pop hl
 138+ 9C6A C9               ret
 139+ 9C6B
 140+ 9C6B              ; ---------- --------- --------- ---------- ----------
 141+ 9C6B              ;
 142+ 9C6B              ;   11/8/22
 143+ 9C6B              ;
 144+ 9C6B              ;   Reinicia_el_movimiento
 145+ 9C6B
 146+ 9C6B CD 5C 9C     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9C6E AF               xor a
 148+ 9C6F 32 78 89         ld (Contador_db_mov),a
 149+ 9C72 32 79 89         ld (Incrementa_puntero),a
 150+ 9C75 C3 DA 9B         jp Movimiento
 151+ 9C78 C9               ret
 152+ 9C79              ; ---------- --------- --------- ---------- ----------
 153+ 9C79
 154+ 9C79
 155+ 9C79
 156+ 9C79
 157+ 9C79
 158+ 9C79
 159+ 9C79
 160+ 9C79
 161+ 9C79
 162+ 9C79
 163+ 9C79
 164+ 9C79
 165+ 9C79
 166+ 9C79
 167+ 9C79
 168+ 9C79
 169+ 9C79
 170+ 9C79
# file closed: Patrones_de_mov.asm
1218  9C79              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9C79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9C79              ;
   3+ 9C79              ;	3/1/23
   4+ 9C79              ;
   5+ 9C79              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9C79
   7+ 9C79              ;	ADC HL,SP	LD (addr),SP
   8+ 9C79              ;	ADD HL,SP	LD SP,(addr)
   9+ 9C79              ;	ADD IX,SP	LD SP,nn
  10+ 9C79              ; 	ADD IY,SP	LD SP,HL
  11+ 9C79              ;				LD SP,IX
  12+ 9C79              ;	DEC SP		LD SP,IY
  13+ 9C79
  14+ 9C79              ;	EX (SP),HL
  15+ 9C79              ;	EX (SP),IX
  16+ 9C79              ;	EX (SP),IY
  17+ 9C79
  18+ 9C79              ;	INC SP
  19+ 9C79
  20+ 9C79
  21+ 9C79                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 92 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 81 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 98 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 96 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 98 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 96 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 92 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1219  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1220  7FE6
1221  7FE6              	SAVESNA "Pruebas.sna", START
1222  7FE6
1223  7FE6
1224  7FE6
1225  7FE6
# file closed: Banco_de_pruebas.asm
