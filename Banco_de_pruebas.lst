# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E7 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A F1 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 03        	jr z,1F
  42  AA20
  43  AA20 CD CA 92     	call Extrae_foto_entidades
  44  AA23
  45  AA23              ;	ld a,6
  46  AA23              ;	out ($fe),a
  47  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  48  AA23
  49  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  50  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  51  AA23
  52  AA23              ;	ld a,7
  53  AA23              ;	out ($fe),a												; Borde blanco.
  54  AA23              ;	call Guarda_parametros_DRAW
  55  AA23              ;	call Restore_Amadeus
  56  AA23
  57  AA23              ; Posible colisión Entidad-Amadeus ???
  58  AA23
  59  AA23              ;	ld a,(Impacto2)
  60  AA23              ;	bit 2,a
  61  AA23              ;	jr z,1F
  62  AA23
  63  AA23              ;	call Detecta_colision_nave_entidad
  64  AA23
  65  AA23              ;1 ld a,4
  66  AA23              ;	out ($fe),a
  67  AA23              ;	call Gestiona_Amadeus
  68  AA23
  69  AA23              ;	ld a,7
  70  AA23              ;	out ($fe),a											; Borde blanco.
  71  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  72  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  73  AA23
  74  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  75  AA23
  76  AA23              ;	call Recupera_parametros_DRAW
  77  AA23
  78  AA23 CD A8 8D     1 call Actualiza_relojes
  79  AA26
  80  AA26 21 F1 89     	ld hl,Ctrl_3
  81  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  82  AA2B
  83  AA2B FD E1        	pop iy
  84  AA2D DD E1        	pop ix
  85  AA2F F1           	pop af
  86  AA30 C1           	pop bc
  87  AA31 D1           	pop de
  88  AA32 E1           	pop hl
  89  AA33 D9           	exx
  90  AA34 C1           	pop bc
  91  AA35 D1           	pop de
  92  AA36 E1           	pop hl
  93  AA37 08           	ex af,af'
  94  AA38 F1           	pop af
  95  AA39 08           	ex af,af'
  96  AA3A D9           	exx
  97  AA3B
  98  AA3B ED 7B E7 89  	ld sp,(Stack_3)
  99  AA3F
 100  AA3F FB           	ei
 101  AA40
 102  AA40 3E 01        	ld a,1												; Borde azul.
 103  AA42 D3 FE        	out ($fe),a
 104  AA44
 105  AA44 C9           	ret
 106  AA45
 107  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 108  AA45
 109  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 20 83        	defw Badsat_der_f8
  97+ 82F4 50 83        	defw Badsat_der_f9
  98+ 82F6 80 83        	defw Badsat_der_fa
  99+ 82F8 B0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 104+ 8304 54 40 AA 40
 105+ 8308 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 105+ 830C 17 FE 06 C0
 106+ 8310 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 106+ 8314 17 D4 02 2A
 107+ 8318 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 107+ 831C 00 14 00 08
 108+ 8320
 109+ 8320 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 109+ 8324 20 00 2A 20
 110+ 8328 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 110+ 832C 2A A0 00 15
 111+ 8330 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 111+ 8334 00 03 60 00
 112+ 8338 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 112+ 833C F4 00 0B EA
 113+ 8340 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 113+ 8344 03 2A 80 00
 114+ 8348 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 114+ 834C 00 00 04 00
 115+ 8350
 116+ 8350 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 116+ 8354 10 00 15 10
 117+ 8358 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 117+ 835C 15 50 00 0A
 118+ 8360 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 118+ 8364 80 01 B0 00
 119+ 8368 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 119+ 836C FA 00 05 F5
 120+ 8370 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 120+ 8374 01 95 40 00
 121+ 8378 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 121+ 837C 00 00 02 00
 122+ 8380
 123+ 8380 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 123+ 8384 08 00 0A 88
 124+ 8388 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 124+ 838C 0A A8 00 05
 125+ 8390 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 125+ 8394 C0 00 D8 00
 126+ 8398 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 126+ 839C FD 00 02 FA
 127+ 83A0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 127+ 83A4 00 CA A0 00
 128+ 83A8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 128+ 83AC 80 00 01 00
 129+ 83B0
 130+ 83B0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 130+ 83B4 84 00 05 44
 131+ 83B8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 131+ 83BC 05 54 00 02
 132+ 83C0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 132+ 83C4 E0 00 6C 00
 133+ 83C8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 133+ 83CC FE 80 01 7D
 134+ 83D0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 134+ 83D4 00 65 50 00
 135+ 83D8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 135+ 83DC 40 00 00 80
 136+ 83E0
 137+ 83E0              	org $8400
 138+ 8400
 139+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 139+ 8404 42 00 02 A2
 140+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 140+ 840C 02 AA 00 01
 141+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 141+ 8414 F0 00 36 00
 142+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 142+ 841C FF 40 00 BE
 143+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 143+ 8424 00 32 A8 00
 144+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 144+ 842C A0 00 00 40
 145+ 8430
 146+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 146+ 8434 A1 00 01 51
 147+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 147+ 843C 01 55 00 00
 148+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 148+ 8444 F8 00 1B 00
 149+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 149+ 844C FF A0 00 1F
 150+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 150+ 8454 00 09 54 00
 151+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 151+ 845C 50 00 00 20
 152+ 8460
 153+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 153+ 8464 50 80 00 A8
 154+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 154+ 846C 00 AA 80 00
 155+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 155+ 8474 FC 00 0D 80
 156+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 156+ 847C FF D0 00 0F
 157+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 157+ 8484 00 04 AA 00
 158+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 158+ 848C 28 00 00 10
 159+ 8490
 160+ 8490              ; ----------------------------------------------------------------------------------------
 161+ 8490
 162+ 8490              ; Amadeus. 2x2.
 163+ 8490
 164+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 165+ 8492 00 00        	defw 0
 166+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 167+ 8496 00 00        	defw 0
 168+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 169+ 849A 00 00        	defw 0
 170+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 171+ 849E 00 00        	defw 0	 								; (Fín de índice).
 172+ 84A0
 173+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 174+ 84A2 00 00        	defw 0
 175+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 176+ 84A6 00 00        	defw 0
 177+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 178+ 84AA 00 00        	defw 0
 179+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 180+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 181+ 84B0
 182+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 182+ 84B4 26 64 24 24
 183+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 183+ 84BC 6F F6 67 E6
 184+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 184+ 84C4 F7 EF FF FF
 185+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 185+ 84CC 8B D1 71 8E
 186+ 84D0
 187+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 187+ 84D4 F1 00 09 99
 188+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 188+ 84DC 0B 0D 00 1B
 189+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 189+ 84E4 80 19 F9 80
 190+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 190+ 84EC F3 C0 3D FB
 191+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 191+ 84F4 3E F7 C0 3E
 192+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 192+ 84FC 40 1C 63 80
 193+ 8500
 194+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 194+ 8504 3C 40 02 66
 195+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 195+ 850C 02 C3 40 06
 196+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 196+ 8514 60 06 7E 60
 197+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 197+ 851C 3C F0 0F 7E
 198+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 198+ 8524 0F BD F0 0F
 199+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 199+ 852C 10 07 18 E0
 200+ 8530
 201+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 201+ 8534 8F 10 00 99
 202+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 202+ 853C 00 B0 D0 01
 203+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 203+ 8544 D8 01 9F 98
 204+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 204+ 854C CF 3C 03 DF
 205+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 205+ 8554 03 EF 7C 03
 206+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 206+ 855C 44 01 C6 38
 207+ 8560
 208+ 8560              ; ----------------------------------------------------------------------------------------
 209+ 8560
 210+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 211+ 8562 96 85        	defw Explosion_2x3_2
 212+ 8564 C6 85        	defw Explosion_2x3_3
 213+ 8566
 214+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 214+ 856A 10 00 04 38
 215+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 215+ 8572 02 E6 80 01
 216+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 216+ 857A 00 03 DD 80
 217+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 217+ 8582 3B 80 01 9D
 218+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 218+ 858A 02 FD 80 03
 219+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 219+ 8592 00 08 00 00
 220+ 8596
 221+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 221+ 859A 38 10 03 BC
 222+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 222+ 85A2 04 06 C0 00
 223+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 223+ 85AA 00 03 DD 80
 224+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 224+ 85B2 3A 70 01 9C
 225+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 225+ 85BA 04 F8 80 06
 226+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 226+ 85C2 00 00 00 00
 227+ 85C6
 228+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 228+ 85CA 00 20 08 00
 229+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 229+ 85D2 00 06 00 00
 230+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 230+ 85DA 00 00 14 30
 231+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 231+ 85E2 38 00 01 08
 232+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 232+ 85EA 00 80 00 04
 233+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 233+ 85F2 10 08 00 20
 234+ 85F6
 235+ 85F6              ; ------------------------------------------
 236+ 85F6
 237+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 238+ 85F8 20 86        	defw Explosion_2x2_2
 239+ 85FA 40 86        	defw Explosion_2x2_3
 240+ 85FC
 241+ 85FC              	org $8600
 242+ 8600
 243+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 243+ 8604 43 84 37 D8
 244+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 244+ 860C 17 F0 3D D8
 245+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 245+ 8614 19 D0 1F 60
 246+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 246+ 861C 40 00 80 00
 247+ 8620
 248+ 8620
 249+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 249+ 8624 3B C2 60 0C
 250+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 250+ 862C 07 F0 3D D8
 251+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 251+ 8634 19 C6 1F 64
 252+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 252+ 863C 80 00 00 00
 253+ 8640
 254+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 254+ 8644 88 04 10 0C
 255+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 255+ 864C 81 E0 01 43
 256+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 256+ 8654 10 80 18 00
 257+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 257+ 865C 60 01 80 02
 258+ 8660
 259+ 8660
 260+ 8660
 261+ 8660
 262+ 8660
# file closed: Sprites_e_indices.asm
 110  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 8719 40           	db $40												; (Ctrl_0).
 142+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 871E 00 00
 143+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 146+ 8726 00           	db 0 												; (Columnas).
 147+ 8727 00 00        	defw 0												; (Limite_horizontal).
 148+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 872C
 150+ 872C              ; ---------- ---------- ---------- ---------- ----------
 151+ 872C              ;
 152+ 872C              ;	22/01/24
 153+ 872C              ;
 154+ 872C              ; 	Cada caja tiene 19 bytes !!!
 155+ 872C
 156+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 872F 00           	db %00000000										; (Attr).
 158+ 8730              ;	db 0												; (Cuad_objeto).
 159+ 8730 00           	db 0												; (Impacto).
 160+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 873D 00           	db 0												; (Ctrl_0).
 165+ 873E 00           	db 0												; (Ctrl_2).
 166+ 873F
 167+ 873F              ; ---------- ---------- ---------- ---------- ----------
 168+ 873F
 169+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 8742 00           	db %00000000										; (Attr).
 171+ 8743              ;	db 0												; (Cuad_objeto).
 172+ 8743 00           	db 0												; (Impacto).
 173+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 8750 00           	db 0												; (Ctrl_0).
 178+ 8751 00           	db 0												; (Ctrl_2).
 179+ 8752
 180+ 8752              ; ---------- ---------- ---------- ---------- ----------
 181+ 8752
 182+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8755 00           	db %00000000										; (Attr).
 184+ 8756              ;	db 0												; (Cuad_objeto).
 185+ 8756 00           	db 0												; (Impacto).
 186+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8763 00           	db 0												; (Ctrl_0).
 191+ 8764 00           	db 0												; (Ctrl_2).
 192+ 8765
 193+ 8765              ; ---------- ---------- ---------- ---------- ----------
 194+ 8765
 195+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8768 00           	db %00000000										; (Attr).
 197+ 8769              ;	db 0												; (Cuad_objeto).
 198+ 8769 00           	db 0												; (Impacto).
 199+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8776 00           	db 0												; (Ctrl_0).
 204+ 8777 00           	db 0												; (Ctrl_2).
 205+ 8778
 206+ 8778              ; ---------- ---------- ---------- ---------- ----------
 207+ 8778
 208+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 877B 00           	db %00000000										; (Attr).
 210+ 877C              ;	db 0												; (Cuad_objeto).
 211+ 877C 00           	db 0												; (Impacto).
 212+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8789 00           	db 0												; (Ctrl_0).
 217+ 878A 00           	db 0												; (Ctrl_2).
 218+ 878B
 219+ 878B              ; ---------- ---------- ---------- ---------- ----------
 220+ 878B
 221+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 878E 00           	db %00000000										; (Attr).
 223+ 878F              ;	db 0												; (Cuad_objeto).
 224+ 878F 00           	db 0												; (Impacto).
 225+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 879C 00           	db 0												; (Ctrl_0).
 230+ 879D 00           	db 0												; (Ctrl_2).
 231+ 879E
 232+ 879E              ; ---------- ---------- ---------- ---------- ----------
 233+ 879E
 234+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 87A1 00           	db %00000000										; (Attr).
 236+ 87A2              ;	db 0												; (Cuad_objeto).
 237+ 87A2 00           	db 0												; (Impacto).
 238+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 87AF 00           	db 0												; (Ctrl_0).
 243+ 87B0 00           	db 0												; (Ctrl_2).
 244+ 87B1
 245+ 87B1              ; -------------------------------------------------------------------------------------
 246+ 87B1              ;
 247+ 87B1              ;	11/1/24
 248+ 87B1              ;
 249+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 87B1              ;
 251+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 87B1
 256+ 87B1              Indice_de_definiciones_de_entidades
 257+ 87B1
 258+ 87B1 B5 87        	defw Entidad_1
 259+ 87B3 C2 87        	defw Entidad_2
 260+ 87B5
 261+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 87B5
 263+ 87B5              ;	BADSAT, (Satélite malvado).
 264+ 87B5
 265+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 87B8 04           	db %00000100										; (Attr).
 267+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 270+ 87BF 01           	db 1												; (Cuad_objeto).
 271+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 87C2
 273+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 87C5 02           	db %00000010										; (Attr).
 275+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 87CC 01           	db 1												; (Cuad_objeto).
 279+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 87CF
# file closed: Cajas_y_disparos.asm
 111  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 112  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
# file closed: Niveles.asm
 113  898A
 114  898A              ; ******************************************************************************************************************************************************************************************
 115  898A              ; Constantes.
 116  898A              ; ******************************************************************************************************************************************************************************************
 117  898A              ;
 118  898A              ; 25/12/23
 119  898A
 120  898A              ;
 121  898A              ; Constantes.
 122  898A              ;
 123  898A
 124  898A              Sprite_vacio equ $eae0
 125  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 126  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 127  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 128  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 129  898A
 130  898A              Almacen_de_scanlines_masticados_a_borrar equ $e8de
 131  898A              Almacen_de_scanlines_masticados equ $e9df
 132  898A
 133  898A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 134  898A
 135  898A              Almacen_de_movimientos_masticados_Amadeus equ $e700
 136  898A              ;
 137  898A              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 138  898A              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 139  898A              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 140  898A              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 141  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 142  898A              ;														; 55 Bytes.
 143  898A
 144  898A              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 145  898A              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 146  898A
 147  898A              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 148  898A
 149  898A              ; ******************************************************************************************************************************************************************************************
 150  898A              ; Variables.
 151  898A              ; ******************************************************************************************************************************************************************************************
 152  898A              ;
 153  898A              ; 18/01/24
 154  898A              ;
 155  898A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 156  898A              ;
 157  898A
 158  898A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  898A
 160  898A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  898B              ;															- Patrón de movimiento.
 162  898B              ;															- Aspecto
 163  898B 00           Filas db 0												; Filas. [DRAW]
 164  898C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 165  898D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 166  898F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 167  8991 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 168  8992 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 169  8993
 170  8993              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 171  8993
 172  8993 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 173  8994              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 174  8994              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 175  8994 00           Attr db 0												; Atributos de la entidad:
 176  8995
 177  8995              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 178  8995              ;
 179  8995              ;	COLORES: 0 ..... NEGRO
 180  8995              ;    		 1 ..... AZUL
 181  8995              ; 			 2 ..... ROJO
 182  8995              ;			 3 ..... MAGENTA
 183  8995              ; 			 4 ..... VERDE
 184  8995              ; 			 5 ..... CIAN
 185  8995              ;			 6 ..... AMARILLO
 186  8995              ; 			 7 ..... BLANCO
 187  8995
 188  8995 00 00        Indice_Sprite_der defw 0
 189  8997 00 00        Indice_Sprite_izq defw 0
 190  8999 00 00        Puntero_DESPLZ_der defw 0
 191  899B 00 00        Puntero_DESPLZ_izq defw 0
 192  899D
 193  899D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 194  899F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 195  89A0
 196  89A0              ; Variables de objeto. (Características).
 197  89A0
 198  89A0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 199  89A1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 200  89A1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 201  89A1 00 00 00...  Variables_de_borrado ds 6
 202  89A7
 203  89A7 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 204  89A9              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 205  89A9
 206  89A9 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 207  89AB
 208  89AB              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 209  89AB              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 210  89AB
 211  89AB 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 212  89AD              ;														; _palabras que componen el "movimiento_masticado".
 213  89AD
 214  89AD              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 215  89AD
 216  89AD 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  89AE              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  89AE              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  89AE              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  89AE              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  89AE              ;
 222  89AE              ; 														DESCRIPCIÖN:
 223  89AE              ;
 224  89AE              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  89AE              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  89AE              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  89AE              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  89AE              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  89AE              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  89AE              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  89AE              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  89AE              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  89AE              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  89AE              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  89AE              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  89AE              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  89AE              ;
 238  89AE              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  89AE              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  89AE              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  89AE
 242  89AE              ; Variables de funcionamiento. [DRAW].
 243  89AE
 244  89AE 00           Columnas db 0
 245  89AF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 246  89B1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 247  89B1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 248  89B2
 249  89B2              ; variables de control general.
 250  89B2
 251  89B2 00           Ctrl_2 db 0
 252  89B3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 253  89B3              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 254  89B3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 255  89B3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 256  89B3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 257  89B3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 258  89B3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 259  89B3              ;
 260  89B3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 261  89B3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 262  89B3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 263  89B3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 264  89B3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 265  89B3              ;														BIT 4, ???
 266  89B3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 267  89B3
 268  89B3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 269  89B4
 270  89B4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 271  89B4
 272  89B4              ;					         		---------;      ;---------
 273  89B4
 274  89B4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 275  89B4
 276  89B4              Perfiles_de_velocidad
 277  89B4
 278  89B4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 279  89B5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 280  89B6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 281  89B7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 282  89B8
 283  89B8              ; Contadores de 16 bits.
 284  89B8
 285  89B8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 286  89BA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 287  89BC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 288  89BE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 289  89C0
 290  89C0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 291  89C0
 292  89C0 DF E9        Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 293  89C2 DE E8        Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 294  89C4
 295  89C4 02 80        Puntero_de_scanlines_en_album defw Album_de_fotos+2
 296  89C6
 297  89C6 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  89C8 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  89CA 00 00        Puntero_indice_mov_bucle defw 0							;
 300  89CC              ;
 301  89CC              ;
 302  89CC 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  89CD              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  89CD              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  89CD 00           Incrementa_puntero_backup db 0
 306  89CE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  89CF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  89CF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  89D0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  89D1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  89D2              ;
 312  89D2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  89D2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  89D2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  89D2              ;
 316  89D2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  89D2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  89D2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  89D2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  89D2              ;
 321  89D2              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  89D2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  89D2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  89D2              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 325  89D2
 326  89D2 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  89D3
 328  89D3              ;														DESCRIPCIÓN:
 329  89D3              ;
 330  89D3              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  89D3              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  89D3              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 333  89D3              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  89D3              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  89D3              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  89D3
 337  89D3              ;														BIT 3, Recarga de nueva oleada.
 338  89D3              ;														BIT 4, Recarga de nueva oleada.
 339  89D3              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  89D3              ;														BIT 6, **** Frame completo.
 341  89D3              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  89D3
 343  89D3 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  89D5              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  89D5              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  89D5              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  89D5
 348  89D5              ; Gestión de ENTIDADES y CAJAS.
 349  89D5
 350  89D5 00 00        Puntero_store_caja defw 0
 351  89D7 00 00        Puntero_restore_caja defw 0
 352  89D9 00 00        Indice_restore_caja defw 0
 353  89DB 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  89DC 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  89DD 00           Entidades_en_curso db 0									; ..... ..... .....
 356  89DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 357  89DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 358  89DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 359  89DF              ;														; _ (Numero_de_malotes)="0".
 360  89DF 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 361  89E1 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 362  89E3              ;														; _ puntero (Indice_entidades).
 363  89E3
 364  89E3              ;---------------------------------------------------------------------------------------------------------------
 365  89E3              ;
 366  89E3              ;	11/01/24
 367  89E3              ;
 368  89E3              ;	Álbumes.
 369  89E3
 370  89E3 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 371  89E5              ;														; _variable para almacenar lo posición del puntero_
 372  89E5              ; 														; _de pila, SP.
 373  89E5 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 374  89E7              ;														; La utiliza la rutina [Extrae_foto_registros].
 375  89E7 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 376  89E9 00 80        Stack_snapshot defw Album_de_fotos
 377  89EB 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 378  89ED
 379  89ED              ;End_Snapshot defw Album_de_fotos
 380  89ED              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 381  89ED 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 382  89EF              ;														; _el snapshot de los registros del siguiente disparo.
 383  89EF              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 384  89EF AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 385  89F1
 386  89F1 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 387  89F2              ;
 388  89F2              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 389  89F2              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 390  89F2              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 391  89F2
 392  89F2 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 393  89F3              ;
 394  89F3              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 395  89F3              ;
 396  89F3              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 397  89F3              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 398  89F3              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 399  89F3              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 400  89F3              ;
 401  89F3              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 402  89F3              ;															_ masticados ya generados.
 403  89F3              ;
 404  89F3              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 405  89F3              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 406  89F3              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 407  89F3              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 408  89F3
 409  89F3
 410  89F3              ; Gestión de Disparos.
 411  89F3
 412  89F3 00           Numero_de_disparotes db 0
 413  89F4 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 414  89F6 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 415  89F8 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 416  89F9              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 417  89F9              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 418  89F9 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 419  89FB              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 420  89FB              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 421  89FB              ;														; _produzca colisión.
 422  89FB 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 423  89FD              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 424  89FD 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 425  8A00              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 426  8A00 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 427  8A03              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 428  8A03 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 429  8A04
 430  8A04              ;---------------------------------------------------------------------------------------------------------------
 431  8A04
 432  8A04              ; Relojes y temporizaciones.
 433  8A04
 434  8A04 00           Contador_de_frames db 0
 435  8A05 00           Contador_de_frames_2 db 0
 436  8A06
 437  8A06 04           Clock_explosion db 4
 438  8A07 14           Clock_Entidades_en_curso db 20
 439  8A08 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 440  8A09              ;														; Repite la oleada de entidades.
 441  8A09 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 442  8A0A 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 443  8A0B 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 444  8A0C
 445  8A0C 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 446  8A0D 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 447  8A0E 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 448  8A0F
 449  8A0F              ;---------------------------------------------------------------------------------------------------------------
 450  8A0F
 451  8A0F              ; Gestión de NIVELES.
 452  8A0F
 453  8A0F 00           Nivel db 0												; Nivel actual del juego.
 454  8A10 00 00        Puntero_indice_NIVELES defw 0
 455  8A12 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 456  8A14              ; 														; _ que definen el NIVEL.
 457  8A14              ; Y todo comienza aquí .....
 458  8A14              ;
 459  8A14              ; 	INICIO  *************************************************************************************************************************************************************************
 460  8A14              ;
 461  8A14              ;	5/1/24
 462  8A14
 463  8A14              START
 464  8A14
 465  8A14 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 466  8A17 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 467  8A19 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 468  8A1B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 469  8A1D F3           	DI
 470  8A1E
 471  8A1E              ;	ld a,%00000111
 472  8A1E              ;	call Cls
 473  8A1E CD 19 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 474  8A21
 475  8A21              ; INICIALIZACIÓN.
 476  8A21
 477  8A21              ;	Inicializa 1er Nivel.
 478  8A21
 479  8A21 21 6B 89     	ld hl,Indice_de_niveles
 480  8A24 22 10 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 481  8A27 CD BA 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 482  8A2A              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 483  8A2A              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 484  8A2A              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 485  8A2A
 486  8A2A              ;	Provisional, (para desarrollo).
 487  8A2A
 488  8A2A              	;-
 489  8A2A              ;	ld hl,Numero_parcial_de_entidades
 490  8A2A              ;	ld b,(hl)
 491  8A2A              ;	inc b
 492  8A2A              ;	dec b
 493  8A2A              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 494  8A2A
 495  8A2A CD FF 8D     4 call Inicia_Entidades
 496  8A2D
 497  8A2D CD DC 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 498  8A30
 499  8A30              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 500  8A30              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 501  8A30              ; (Esto se dá cuando se inicia una nueva oleada).
 502  8A30
 503  8A30              ;	ld a,(Ctrl_1)
 504  8A30              ;	bit 3,a
 505  8A30              ;	jr nz,5F											; Loop
 506  8A30
 507  8A30              ; 	INICIA AMADEUS !!!!!
 508  8A30
 509  8A30              ;3 call Restore_Amadeus
 510  8A30              ;	call Inicia_Puntero_objeto
 511  8A30              ;	call Draw
 512  8A30
 513  8A30              ;	call Guarda_movimiento_masticado	;! Provisional
 514  8A30
 515  8A30              ;	call Guarda_foto_registros
 516  8A30              ;	call Guarda_datos_de_borrado_Amadeus
 517  8A30
 518  8A30              ;	ld de,Amadeus_db
 519  8A30              ;	call Store_Amadeus
 520  8A30
 521  8A30              ; 	INICIA DISPAROS !!!!!
 522  8A30
 523  8A30              ;	call Inicia_Puntero_Disparo_Entidades
 524  8A30              ;	call Inicia_Puntero_Disparo_Amadeus
 525  8A30
 526  8A30              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 527  8A30
 528  8A30              ;5 call Inicia_punteros_de_cajas
 529  8A30              ;	call Restore_entidad
 530  8A30
 531  8A30              ;	ld a,(Ctrl_1)
 532  8A30              ;	bit 3,a
 533  8A30              ;	jr z,6F
 534  8A30
 535  8A30              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 536  8A30
 537  8A30              ;	ld hl,Ctrl_1
 538  8A30              ;	res 3,(hl)
 539  8A30              ;	jr Main
 540  8A30
 541  8A30              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 542  8A30
 543  8A30 CD 28 8C     6 call Calcula_numero_de_malotes
 544  8A33
 545  8A33 21 F1 89     	ld hl,Ctrl_3
 546  8A36 CB C6        	set 0,(hl)											; Frame completo.
 547  8A38 FB           	ei
 548  8A39 76           	halt
 549  8A3A
 550  8A3A              ; ------------------------------------
 551  8A3A
 552  8A3A              Main
 553  8A3A              ;
 554  8A3A              ;	11/12/23
 555  8A3A
 556  8A3A              ; Aparece nueva entidad ???
 557  8A3A
 558  8A3A              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 559  8A3A              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 560  8A3A              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 561  8A3A              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 562  8A3A              ;														; _un 2º bloque.
 563  8A3A
 564  8A3A              ;	ld a,1
 565  8A3A              ;	out ($fe),a
 566  8A3A
 567  8A3A
 568  8A3A F3           	di
 569  8A3B 18 FE        	jr $
 570  8A3D FB           	ei
 571  8A3E
 572  8A3E CD 43 8B     	call Limpia_Almacen_de_scanlines
 573  8A41 CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 574  8A44              ; 													 	; _(Stack_snapshot).
 575  8A44
 576  8A44 3A 07 8A     	ld a,(Clock_Entidades_en_curso)
 577  8A47 47           	ld b,a
 578  8A48 3A 04 8A     	ld a,(Contador_de_frames)
 579  8A4B B8           	cp b
 580  8A4C 20 18        	jr nz,13F
 581  8A4E
 582  8A4E              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 583  8A4E              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 584  8A4E
 585  8A4E 3A DC 89     21 ld a,(Numero_parcial_de_entidades)
 586  8A51 47           	ld b,a
 587  8A52 3A DD 89     	ld a,(Entidades_en_curso)
 588  8A55 B8           	cp b
 589  8A56 28 0E        	jr z,13F
 590  8A58 30 0C        	jr nc,13F
 591  8A5A
 592  8A5A 3C           	inc a
 593  8A5B 32 DD 89     	ld (Entidades_en_curso),a
 594  8A5E
 595  8A5E              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 596  8A5E
 597  8A5E 3A 07 8A     	ld a,(Clock_Entidades_en_curso)
 598  8A61              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 599  8A61              ;! _ IMPREDECIBLE !!!!
 600  8A61 C6 64        	add 100
 601  8A63 32 07 8A     	ld (Clock_Entidades_en_curso),a
 602  8A66
 603  8A66              ; -------------------------------------------------------------------------------------------------------------
 604  8A66
 605  8A66              ; Habilita disparos.
 606  8A66
 607  8A66              13
 608  8A66
 609  8A66              ;	ld hl,Disparo_Amadeus
 610  8A66              ;	ld de,CLOCK_repone_disparo_Amadeus
 611  8A66              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 612  8A66
 613  8A66              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 614  8A66              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 615  8A66              ;	call Habilita_disparos
 616  8A66
 617  8A66              ; COLISIONES.
 618  8A66
 619  8A66              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 620  8A66
 621  8A66              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 622  8A66              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 623  8A66              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 624  8A66
 625  8A66              ;	xor a
 626  8A66              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 627  8A66
 628  8A66              ;	call Inicia_punteros_de_cajas
 629  8A66              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 630  8A66              ; 														; _ en DRAW.
 631  8A66
 632  8A66              ;	ld a,(Filas)
 633  8A66              ;	and a
 634  8A66              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 635  8A66              ;	call Incrementa_punteros_de_cajas
 636  8A66              ;	jr 12B
 637  8A66
 638  8A66              ; ---------------------------------------------------------------------------------------
 639  8A66
 640  8A66 3A DC 89     10 ld a,(Numero_parcial_de_entidades)
 641  8A69 47               ld b,a
 642  8A6A A7           	and a
 643  8A6B 20 00        	jr nz,11F
 644  8A6D
 645  8A6D              ;	ld hl,Ctrl_1;
 646  8A6D              ;	bit 4,(hl)
 647  8A6D              ;	jp nz,16F
 648  8A6D
 649  8A6D              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 650  8A6D
 651  8A6D              ;	ld hl,Ctrl_1
 652  8A6D              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 653  8A6D
 654  8A6D              ;	ld a,(Contador_de_frames)
 655  8A6D              ;	inc a
 656  8A6D              ;	ld (Activa_recarga_cajas),a
 657  8A6D
 658  8A6D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 659  8A6D
 660  8A6D 3A DD 89     11 ld a,(Entidades_en_curso)
 661  8A70 A7           	and a
 662  8A71 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 663  8A73 47           	ld b,a												; No hay entidades que gestionar.
 664  8A74
 665  8A74              ; ( Código que ejecutamos con cada entidad: ).
 666  8A74
 667  8A74              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 668  8A74
 669  8A74 C5           15 push bc 												; Nº de entidades en curso.
 670  8A75
 671  8A75 CD AF 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 672  8A78
 673  8A78 3A F1 89     	ld a,(Ctrl_3)
 674  8A7B CB 57        	bit 2,a
 675  8A7D F3           	di
 676  8A7E 20 FE        	jr nz,$
 677  8A80 FB           	ei
 678  8A81
 679  8A81              ; Existe "Entidad_guía" ???.
 680  8A81              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 681  8A81
 682  8A81              ;	ld a,(Ctrl_3)
 683  8A81              ;	bit 1,a
 684  8A81              ;	jr nz,22F
 685  8A81
 686  8A81              ; Almacén de "Movimientos_masticados" lleno ???
 687  8A81              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 688  8A81              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 689  8A81
 690  8A81              ;;	ld a,(Ctrl_3)
 691  8A81              ;;	bit 3,a
 692  8A81              ;;	jr nz,22F
 693  8A81
 694  8A81              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 695  8A81
 696  8A81              ;	ld hl,Ctrl_2
 697  8A81              ;	set 5,(hl)
 698  8A81              ;	ld hl,Ctrl_3
 699  8A81              ;	set 1,(hl)
 700  8A81
 701  8A81              ; Impacto ???
 702  8A81
 703  8A81              ;22 ld a,(Impacto)
 704  8A81              ;	and a
 705  8A81              ;	jr z,8F
 706  8A81
 707  8A81              ; Hay Impacto en esta entidad.
 708  8A81
 709  8A81              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 710  8A81              ;	dec (hl)
 711  8A81              ;	jp nz,17F
 712  8A81
 713  8A81              ;! Velocidad de la animación de la explosión.
 714  8A81
 715  8A81              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 716  8A81              ;														; _,(velocidad de la explosión).
 717  8A81              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 718  8A81
 719  8A81              ;	call Repone_datos_de_borrado
 720  8A81              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 721  8A81
 722  8A81              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 723  8A81
 724  8A81              ;	ld a,(Ctrl_2)
 725  8A81              ;	bit 1,a
 726  8A81              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 727  8A81
 728  8A81              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 729  8A81
 730  8A81              ;	ld a,(CTRL_DESPLZ)
 731  8A81              ;	and a
 732  8A81              ;	jr nz,18F
 733  8A81
 734  8A81              ;	ld hl,Indice_Explosion_2x2-2
 735  8A81              ;	ld (Puntero_DESPLZ_der),hl
 736  8A81              ;	jr 19F
 737  8A81
 738  8A81              ;18 ld hl,Indice_Explosion_2x3-2
 739  8A81              ;	ld (Puntero_DESPLZ_der),hl
 740  8A81
 741  8A81              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 742  8A81              ;	set 1,(hl)
 743  8A81              ;	jr 7F
 744  8A81
 745  8A81              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 746  8A81              ; _con las coordenadas de la entidad almacenada en DRAW.
 747  8A81
 748  8A81              ;8 ld a,(Ctrl_1)
 749  8A81              ;	bit 2,a
 750  8A81              ;	jr z,7F
 751  8A81
 752  8A81              ;	ld hl,(Coordenadas_disparo_certero)
 753  8A81              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 754  8A81              ;														; E contiene la coordenada_X del disparo.
 755  8A81              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 756  8A81              ;														; H FILA, (Coordenada_y de la entidad).
 757  8A81              ;	and a
 758  8A81              ;	sbc hl,de
 759  8A81
 760  8A81              ;	call Determina_resultado_comparativa
 761  8A81
 762  8A81              ;	ld a,b
 763  8A81              ;	and a
 764  8A81              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 765  8A81
 766  8A81              ; ----- ----- -----
 767  8A81
 768  8A81              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 769  8A81              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 770  8A81
 771  8A81              ;	ld hl,Ctrl_1
 772  8A81              ;	res 2,(hl)
 773  8A81
 774  8A81 CD A3 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 775  8A84
 776  8A84              ;	ld a,(Ctrl_0)
 777  8A84              ;	bit 4,a
 778  8A84              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 779  8A84
 780  8A84              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 781  8A84              ; [[[
 782  8A84              ;	call Detecta_disparo_entidad
 783  8A84              ; ]]]
 784  8A84
 785  8A84 CD 6C 8E     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 786  8A87
 787  8A87              ;	ld hl,Ctrl_0
 788  8A87              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 789  8A87
 790  8A87 CD 5C 8E     17 call Store_Restore_cajas
 791  8A8A
 792  8A8A C1           	pop bc
 793  8A8B
 794  8A8B 10 E7        	djnz 15B
 795  8A8D
 796  8A8D CD DC 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 797  8A90
 798  8A90              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 799  8A90              ; Hemos gestionado todas las unidades.
 800  8A90              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 801  8A90
 802  8A90              ;	ld hl,Ctrl_1
 803  8A90              ;	res 2,(hl)
 804  8A90
 805  8A90              16
 806  8A90
 807  8A90 CD 28 8C     	call Calcula_numero_de_malotes
 808  8A93 CD E3 8A     	call Genera_scanlines_masticados
 809  8A96
 810  8A96 21 F1 89     	ld hl,Ctrl_3
 811  8A99 CB C6        	set 0,(hl)											; Frame completo.
 812  8A9B
 813  8A9B AF           	xor a
 814  8A9C D3 FE        	out ($fe),a
 815  8A9E 76           	halt
 816  8A9F
 817  8A9F              ; ----------------------------------------
 818  8A9F
 819  8A9F              ;	ld a,(Ctrl_1) 										; Existe Loop?
 820  8A9F              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 821  8A9F CA 3A 8A     	jp z,Main
 822  8AA2
 823  8AA2              ; RECARGA DE NUEVA OLEADA.
 824  8AA2
 825  8AA2              ;	ld a,(Contador_de_frames)
 826  8AA2              ;	ld b,a
 827  8AA2              ;	ld a,(Activa_recarga_cajas)
 828  8AA2              ;	cp b
 829  8AA2              ;	jr z,20F
 830  8AA2
 831  8AA2              ;	ld hl,Ctrl_1
 832  8AA2              ;	set 4,(hl)
 833  8AA2              ;	jp Main
 834  8AA2
 835  8AA2              ;20 ld hl,Ctrl_1
 836  8AA2              ;	res 4,(hl)
 837  8AA2
 838  8AA2              ;	ld a,(Contador_de_frames)
 839  8AA2
 840  8AA2              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 841  8AA2              ;! _ IMPREDECIBLE !!!!
 842  8AA2
 843  8AA2              ;	add 10
 844  8AA2              ;	ld (Clock_Entidades_en_curso),a
 845  8AA2
 846  8AA2              ;	jp 4B
 847  8AA2
 848  8AA2 C9           	ret
 849  8AA3
 850  8AA3              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 851  8AA3              ;
 852  8AA3              ;	16/11/23
 853  8AA3
 854  8AA3              ;;Gestiona_Amadeus
 855  8AA3
 856  8AA3              ;! Activa/desactiva impacto con Amadeus.
 857  8AA3
 858  8AA3              ;	ld a,(Impacto)
 859  8AA3              ;	and a
 860  8AA3              ;	jr nz,2F
 861  8AA3
 862  8AA3              ;;	call Mov_Amadeus
 863  8AA3
 864  8AA3              ;;2 ld a,(Ctrl_0)
 865  8AA3              ;;	bit 4,a
 866  8AA3              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 867  8AA3
 868  8AA3              ;;	call Guarda_foto_entidad_a_pintar
 869  8AA3              ;;	call Guarda_datos_de_borrado_Amadeus
 870  8AA3
 871  8AA3              ;;1 ld hl,Ctrl_0
 872  8AA3              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 873  8AA3
 874  8AA3              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 875  8AA3
 876  8AA3              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 877  8AA3
 878  8AA3              ;	call Calcula_numero_de_disparotes
 879  8AA3
 880  8AA3              ;;	ret
 881  8AA3
 882  8AA3              ; --------------------------------------------------------------------------------------------------------------
 883  8AA3              ;
 884  8AA3              ;	15/12/23
 885  8AA3
 886  8AA3              Mov_obj
 887  8AA3
 888  8AA3              ;	ld a,(Ctrl_2)
 889  8AA3              ;	bit 1,a
 890  8AA3              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 891  8AA3
 892  8AA3              ; Explosión:
 893  8AA3
 894  8AA3              ;	ld a,(Frames_explosion)
 895  8AA3              ;	and a
 896  8AA3              ;	jr nz,4F
 897  8AA3
 898  8AA3              ;!  Una alimaña menos!!!!!!!!!1
 899  8AA3
 900  8AA3              ; Se trataba de una Entidad_guía ???
 901  8AA3
 902  8AA3              ;	ld a,(Ctrl_2)
 903  8AA3              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 904  8AA3              ;	jr z,5F
 905  8AA3
 906  8AA3              ;	ld hl,Ctrl_3
 907  8AA3              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 908  8AA3
 909  8AA3              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 910  8AA3              ;!! _generado puede ser distinto, (aletoriedad).
 911  8AA3
 912  8AA3              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 913  8AA3              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 914  8AA3              ;	dec (hl)
 915  8AA3              ;	ld hl,Entidades_en_curso
 916  8AA3              ;	dec (hl)
 917  8AA3              ;	ld hl,Numero_de_entidades
 918  8AA3              ;	dec (hl)
 919  8AA3              ;	jr 3F
 920  8AA3
 921  8AA3              ; -----
 922  8AA3
 923  8AA3              ;	`Movemos´ la explosión.
 924  8AA3
 925  8AA3              ;4 ld hl,(Puntero_DESPLZ_der)
 926  8AA3              ;	inc hl
 927  8AA3              ;	inc hl
 928  8AA3              ;	call Extrae_address
 929  8AA3              ;;	ld (Puntero_objeto),hl
 930  8AA3
 931  8AA3              ;;	ld hl,Frames_explosion
 932  8AA3              ;;	dec (hl)
 933  8AA3
 934  8AA3              ;;	ld hl,Ctrl_0
 935  8AA3              ;;	set 4,(hl);;
 936  8AA3
 937  8AA3              ;;	jr 3F
 938  8AA3
 939  8AA3              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 940  8AA3
 941  8AA3              ;2 xor a
 942  8AA3              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 943  8AA3
 944  8AA3              ; Movemos Entidades malignas.
 945  8AA3              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 946  8AA3
 947  8AA3              ;	ld a,(Ctrl_2)
 948  8AA3              ;	bit 5,a
 949  8AA3              ;	jr nz,8F
 950  8AA3
 951  8AA3              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 952  8AA3              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 953  8AA3              ;	jr 7F
 954  8AA3
 955  8AA3              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 956  8AA3
 957  8AA3              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 958  8AA3              ;	bit 4,a
 959  8AA3              ;	ret z
 960  8AA3
 961  8AA3              ; Ha habido desplazamiento de la entidad maligna.
 962  8AA3              ; Ha llegado a zona de AMADEUS ???
 963  8AA3
 964  8AA3              ;7 ld a,(Coordenada_y)
 965  8AA3              ;	cp $14
 966  8AA3              ;	jr c,1F
 967  8AA3
 968  8AA3              ; ---------
 969  8AA3
 970  8AA3              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 971  8AA3              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 972  8AA3
 973  8AA3              ;	di
 974  8AA3              ;	call Genera_coordenadas_X
 975  8AA3              ;	call Compara_coordenadas_X
 976  8AA3              ;	ei
 977  8AA3
 978  8AA3              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 979  8AA3
 980  8AA3              ; ---------
 981  8AA3
 982  8AA3              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 983  8AA3 CD 8D 8D     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 984  8AA6 CD 1A 8C     	call Limpia_Variables_de_borrado
 985  8AA9
 986  8AA9 C9           3 ret
 987  8AAA
 988  8AAA              ; --------------------------------------------------------------------------------------------------------------
 989  8AAA              ;
 990  8AAA              ;	29/1/23
 991  8AAA
 992  8AAA              Mov_Amadeus
 993  8AAA
 994  8AAA              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 995  8AAA
 996  8AAA CD 4F 96     	call Mov_right
 997  8AAD
 998  8AAD 3A AD 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 999  8AB0 CB 67        	bit 4,a
1000  8AB2 C8           	ret z
1001  8AB3
1002  8AB3              ; ---------
1003  8AB3
1004  8AB3              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1005  8AB3 CD 7D 8D     	call Repone_datos_de_borrado_Amadeus
1006  8AB6 CD 1A 8C     	call Limpia_Variables_de_borrado
1007  8AB9
1008  8AB9 C9           	ret
1009  8ABA
1010  8ABA              ; -----------------------------------------------------------------------------------
1011  8ABA              ;
1012  8ABA              ;	20/01/24
1013  8ABA              ;
1014  8ABA              ;
1015  8ABA
1016  8ABA              Construye_movimientos_masticados_entidad
1017  8ABA
1018  8ABA 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1019  8ABD E5           	push hl
1020  8ABE CD 7E 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1021  8AC1              ;															; _ el (Contador_de_mov_masticados).
1022  8AC1 CD 7A 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1023  8AC4              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1024  8AC4              ;	call Recompone_posicion_inicio
1025  8AC4
1026  8AC4 CD B3 8F     1 call Draw
1027  8AC7 CD 62 8B     	call Guarda_movimiento_masticado
1028  8ACA
1029  8ACA CD 25 99     	call Movimiento
1030  8ACD
1031  8ACD 3A F1 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1032  8AD0 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1033  8AD2 28 F0        	jr z,1B
1034  8AD4
1035  8AD4              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1036  8AD4              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1037  8AD4
1038  8AD4 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1039  8AD5 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1040  8AD8
1041  8AD8              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1042  8AD8
1043  8AD8 CD 89 9A     	call Situa_en_contador_general_de_mov_masticados
1044  8ADB
1045  8ADB              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1046  8ADB              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1047  8ADB
1048  8ADB ED 4B AB 89  	ld bc,(Contador_de_mov_masticados)
1049  8ADF 71           	ld (hl),c
1050  8AE0 23           	inc hl
1051  8AE1 70           	ld (hl),b
1052  8AE2
1053  8AE2 C9           	ret
1054  8AE3
1055  8AE3              ; -----------------------------------------------------------------------------------
1056  8AE3              ;
1057  8AE3              ;	24/02/24
1058  8AE3              ;
1059  8AE3
1060  8AE3              Genera_scanlines_masticados
1061  8AE3
1062  8AE3 2A C4 89     	ld hl,(Puntero_de_scanlines_en_album) 				; Dirección donde se encuentra el puntero de impresión.
1063  8AE6 ED 5B C0 89  	ld de,(Puntero_de_scanlines_masticados)
1064  8AEA
1065  8AEA 7E           	ld a,(hl)
1066  8AEB 12           	ld (de),a
1067  8AEC 73           	ld (hl),e
1068  8AED
1069  8AED 23           	inc hl
1070  8AEE 7E           	ld a,(hl)
1071  8AEF 72           	ld (hl),d
1072  8AF0
1073  8AF0 13           	inc de
1074  8AF1 12           	ld (de),a 											; 1er scanline, (Puntero_de_impresion) en el Almacén de scanlines masticados.
1075  8AF2              ;				                                        ; La dirección donde se encuentra el (Puntero_de_impresion) dentro del almacén de scanlines_masticados_
1076  8AF2              ; 														; _sustituye al (Puntero_de_impresion) dentro del Album_de_fotos.
1077  8AF2 D5           	push de
1078  8AF3 CD 1A 8B     	call Construimos_scanlines
1079  8AF6 D1           	pop de
1080  8AF7 1B           	dec de
1081  8AF8
1082  8AF8 E5           	push hl
1083  8AF9 EB           	ex de,hl
1084  8AFA ED 5B C2 89  	ld de,(Puntero_de_scanlines_masticados_a_borrar)
1085  8AFE
1086  8AFE 01 A3 89     	ld bc,Variables_de_borrado+2
1087  8B01 7B           	ld a,e
1088  8B02 02           	ld (bc),a
1089  8B03 03           	inc bc
1090  8B04 7A           	ld a,d
1091  8B05 02           	ld (bc),a 											; Modificamos las variables de borrado.
1092  8B06
1093  8B06 01 20 00     	ld bc,32
1094  8B09 ED B0        	ldir
1095  8B0B ED 53 C2 89  	ld (Puntero_de_scanlines_masticados_a_borrar),de
1096  8B0F
1097  8B0F E1           	pop hl
1098  8B10
1099  8B10              ; Actualizamos (Puntero_de_scanlines_en_album). Nos situamos en el Puntero_de_impresion de la siguiente entidad.
1100  8B10
1101  8B10 01 05 00     	ld bc,5
1102  8B13 A7           	and a
1103  8B14 ED 4A        	adc hl,bc
1104  8B16 22 C4 89     	ld (Puntero_de_scanlines_en_album),hl
1105  8B19
1106  8B19 C9           	ret
1107  8B1A
1108  8B1A              ; --------------------------------------------------------
1109  8B1A
1110  8B1A E5           Construimos_scanlines push hl
1111  8B1B C5           	push bc
1112  8B1C
1113  8B1C 06 0F        	ld b,15
1114  8B1E 1B           	dec de
1115  8B1F
1116  8B1F 1A           	ld a,(de)
1117  8B20 6F           	ld l,a
1118  8B21 13           	inc de
1119  8B22 1A           	ld a,(de)
1120  8B23 67           	ld h,a 												; Puntero_de_impresión en HL.
1121  8B24
1122  8B24 13           	inc de
1123  8B25
1124  8B25 CD AC 92     1 call NextScan
1125  8B28
1126  8B28              ; Entramos en memoria de attr.???
1127  8B28
1128  8B28              ; Si es así, decrementamos H. (Repetimos el último scancline).
1129  8B28
1130  8B28 7C           	ld a,h
1131  8B29 FE 58        	cp $58
1132  8B2B 20 03        	jr nz,2F
1133  8B2D
1134  8B2D 21 00 00     	ld hl,0 											; Scanline NO IMPRIMIBLE, "0".
1135  8B30
1136  8B30 7D           2 ld a,l
1137  8B31 12           	ld (de),a
1138  8B32 13           	inc de
1139  8B33 7C           	ld a,h
1140  8B34 12           	ld (de),a
1141  8B35
1142  8B35 13           	inc de
1143  8B36
1144  8B36 24           	inc h
1145  8B37 25           	dec h
1146  8B38 28 02        	jr z,3F  											; No generamos más escanlines si hemos entrado en memoria de attr.
1147  8B3A
1148  8B3A 10 E9        	djnz 1B 											; 16 scanlines generados.
1149  8B3C
1150  8B3C ED 53 C0 89  3 ld (Puntero_de_scanlines_masticados),de 				; Actualizamos puntero.
1151  8B40
1152  8B40 C1           	pop bc
1153  8B41 E1           	pop hl
1154  8B42
1155  8B42 C9           	ret
1156  8B43
1157  8B43              ; -----------------------------------------------------------------------------------
1158  8B43              ;
1159  8B43              ;	24/2/24
1160  8B43              ;
1161  8B43              ;	MODIFICA: AF,HL,BC,DE
1162  8B43
1163  8B43
1164  8B43              ;	Limpia el Almacén de los scanlines masticados y reinicializa los punteros (Puntero_de_scanlines_masticados) y_
1165  8B43              ;	_ (Puntero_de_scanlines_en_album).
1166  8B43
1167  8B43 2A C0 89     Limpia_Almacen_de_scanlines ld hl,(Puntero_de_scanlines_masticados)
1168  8B46 E5           	push hl
1169  8B47 01 DF E9     	ld bc,Almacen_de_scanlines_masticados
1170  8B4A A7           	and a
1171  8B4B ED 42        	sbc hl,bc 																; Calcula bytes a borrar.
1172  8B4D
1173  8B4D 45           	ld b,l
1174  8B4E
1175  8B4E E1           	pop hl
1176  8B4F 2B           	dec hl
1177  8B50
1178  8B50 AF           1 xor a
1179  8B51 77           	ld (hl),a
1180  8B52 2B           	dec hl
1181  8B53
1182  8B53 10 FB        	djnz 1B
1183  8B55
1184  8B55 21 DF E9     	ld hl,Almacen_de_scanlines_masticados
1185  8B58 22 C0 89     	ld (Puntero_de_scanlines_masticados),hl
1186  8B5B
1187  8B5B 21 02 80     	ld hl,Album_de_fotos+2
1188  8B5E 22 C4 89     	ld (Puntero_de_scanlines_en_album),hl
1189  8B61
1190  8B61 C9           	ret
1191  8B62
1192  8B62              ; -----------------------------------------------------------------------------------
1193  8B62              ;
1194  8B62              ;	28/12/23
1195  8B62              ;
1196  8B62              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1197  8B62              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1198  8B62
1199  8B62              Guarda_movimiento_masticado
1200  8B62
1201  8B62 ED 73 E3 89  	ld (Stack),sp
1202  8B66 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1203  8B6A
1204  8B6A E5           	push hl
1205  8B6B DD E5            push ix
1206  8B6D FD E5            push iy
1207  8B6F
1208  8B6F ED 7B E3 89      ld sp,(Stack)
1209  8B73
1210  8B73 2A AB 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1211  8B76 23           	inc hl
1212  8B77 22 AB 89     	ld (Contador_de_mov_masticados),hl
1213  8B7A
1214  8B7A CD 7E 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1215  8B7D              ;															; _ el (Contador_de_mov_masticados).
1216  8B7D C9               ret
1217  8B7E
1218  8B7E              ; --------------------------------------------------------------------------------------------------------------
1219  8B7E              ;
1220  8B7E              ;	12/1/24
1221  8B7E              ;
1222  8B7E              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1223  8B7E
1224  8B7E              Actualiza_Puntero_de_almacen_de_mov_masticados
1225  8B7E
1226  8B7E 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1227  8B81 01 06 00     	ld bc,6
1228  8B84 A7           	and a
1229  8B85 ED 4A        	adc hl,bc
1230  8B87 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1231  8B8A C9           	ret
1232  8B8B
1233  8B8B              ; --------------------------------------------------------------------------------------------------------------
1234  8B8B              ;
1235  8B8B              ;	15/01/24
1236  8B8B              ;
1237  8B8B              ;	Cargamos los registros_
1238  8B8B              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1239  8B8B              ;
1240  8B8B              ;	HL contiene la dirección de la rutina de impresión.
1241  8B8B              ;	IX contiene el puntero de impresión.
1242  8B8B              ;	IY contiene (Puntero_objeto).
1243  8B8B
1244  8B8B
1245  8B8B ED 73 E3 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1246  8B8F ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1247  8B93
1248  8B93 FD E1        	pop iy
1249  8B95 DD E1        	pop ix
1250  8B97 E1           	pop hl
1251  8B98
1252  8B98 ED 73 A9 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1253  8B9C
1254  8B9C ED 7B E3 89  	ld sp,(Stack)
1255  8BA0
1256  8BA0 C9           	ret
1257  8BA1
1258  8BA1              ; --------------------------------------------------------------------------------------------------------------
1259  8BA1              ;
1260  8BA1              ;	28/12/23
1261  8BA1              ;
1262  8BA1              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1263  8BA1              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1264  8BA1
1265  8BA1              Guarda_foto_entidad_a_pintar
1266  8BA1
1267  8BA1 3A AD 89     	ld a,(Ctrl_0)
1268  8BA4 CB 77        	bit 6,a
1269  8BA6 28 04        	jr z,5F
1270  8BA8
1271  8BA8              ;	Guarda la foto de Amadeus.
1272  8BA8
1273  8BA8              ;	call Draw
1274  8BA8              ;	call Guarda_movimiento_masticado	;! Provisional
1275  8BA8 CD BF 80     	call Guarda_foto_registros
1276  8BAB C9           	ret
1277  8BAC
1278  8BAC              ; ENTIDADES!
1279  8BAC              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1280  8BAC
1281  8BAC 3A F1 89     5 ld a,(Ctrl_3)
1282  8BAF CB 5F        	bit 3,a
1283  8BB1 28 01        	jr z,1F
1284  8BB3
1285  8BB3              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1286  8BB3
1287  8BB3              4
1288  8BB3              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1289  8BB3 C9           	ret
1290  8BB4
1291  8BB4              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1292  8BB4
1293  8BB4 3A F1 89     1 ld a,(Ctrl_3)
1294  8BB7 CB 57        	bit 2,a
1295  8BB9 20 10        	jr nz,6F
1296  8BBB
1297  8BBB              ; Entidad guía o fantasma ???
1298  8BBB
1299  8BBB 3A B2 89     	ld a,(Ctrl_2)
1300  8BBE CB 6F        	bit 5,a
1301  8BC0 20 10        	jr nz,3F
1302  8BC2
1303  8BC2              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1304  8BC2
1305  8BC2 18 EF        	jr 4B
1306  8BC4
1307  8BC4              ; ENTIDAD_GUÍA:
1308  8BC4              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1309  8BC4              ; _guardando "movimientos_masticados".
1310  8BC4
1311  8BC4 3A F1 89     2 ld a,(Ctrl_3)
1312  8BC7 CB 57        	bit 2,a
1313  8BC9 28 07        	jr z,3F
1314  8BCB
1315  8BCB              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1316  8BCB              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1317  8BCB
1318  8BCB CB 97        6 res 2,a
1319  8BCD CB DF        	set 3,a
1320  8BCF 32 F1 89     	ld (Ctrl_3),a
1321  8BD2
1322  8BD2
1323  8BD2              ;	Esto sólo lo ejecuta una entidad guía.
1324  8BD2
1325  8BD2 CD B3 8F     3 	call Draw
1326  8BD5 CD 62 8B     	call Guarda_movimiento_masticado
1327  8BD8 CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1328  8BDB
1329  8BDB              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1330  8BDB              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1331  8BDB
1332  8BDB              ;	call Convierte_guia_en_fantasma
1333  8BDB C9           	ret
1334  8BDC
1335  8BDC              ; *************************************************************************************************************************************************************
1336  8BDC              ;
1337  8BDC              ; 8/1/23
1338  8BDC              ;
1339  8BDC              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1340  8BDC              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1341  8BDC              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1342  8BDC
1343  8BDC              ; Destruye HL y DE !!!!!
1344  8BDC
1345  8BDC              Inicia_punteros_de_cajas
1346  8BDC
1347  8BDC 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1348  8BDF CD 74 8C         call Extrae_address
1349  8BE2 22 D5 89         ld (Puntero_store_caja),hl
1350  8BE5 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1351  8BE8 22 D9 89     	ld (Indice_restore_caja),hl
1352  8BEB CD 74 8C     	call Extrae_address
1353  8BEE 22 D7 89     	ld (Puntero_restore_caja),hl
1354  8BF1 C9               ret
1355  8BF2
1356  8BF2              ; *************************************************************************************************************************************************************
1357  8BF2              ;
1358  8BF2              ; 8/1/23
1359  8BF2              ;
1360  8BF2              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1361  8BF2
1362  8BF2 21 7C 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1363  8BF5 22 F4 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1364  8BF8 C9           	ret
1365  8BF9 21 64 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1366  8BFC 22 F6 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1367  8BFF C9           	ret
1368  8C00
1369  8C00              ; -------------------------------------------------------------------------------------------------------------
1370  8C00              ;
1371  8C00              ; 21/9/23
1372  8C00              ;
1373  8C00
1374  8C00              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1375  8C00
1376  8C00              Limpia_album_Amadeus
1377  8C00
1378  8C00 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1379  8C03 7E           	ld a,(hl)
1380  8C04 A7           	and a
1381  8C05 C8           	ret z
1382  8C06
1383  8C06 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1384  8C09 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1385  8C0C 01 0B 00     	ld bc,11
1386  8C0F AF           	xor a
1387  8C10 77           	ld (hl),a
1388  8C11 ED B0        	ldir
1389  8C13
1390  8C13 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1391  8C16 22 EF 89     	ld (End_Snapshot_Amadeus),hl
1392  8C19
1393  8C19 C9           	ret
1394  8C1A
1395  8C1A 21 A1 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1396  8C1D 11 A2 89     	ld de,Variables_de_borrado+1
1397  8C20 01 05 00     	ld bc,5
1398  8C23 AF           	xor a
1399  8C24 77           	ld (hl),a
1400  8C25 ED B0        	ldir
1401  8C27 C9           	ret
1402  8C28
1403  8C28              ; -------------------------------------------------------------------------------------------------------------
1404  8C28              ;
1405  8C28              ; 	21/02/24
1406  8C28              ;
1407  8C28              ;	MODIFICA: AF,HL,BC,DE
1408  8C28              ;
1409  8C28              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1410  8C28              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1411  8C28
1412  8C28              Calcula_numero_de_malotes
1413  8C28
1414  8C28 21 00 80     	ld hl,Album_de_fotos
1415  8C2B EB           	ex de,hl
1416  8C2C 2A E9 89     	ld hl,(Stack_snapshot)
1417  8C2F
1418  8C2F 06 00        	ld b,0
1419  8C31 7D           	ld a,l
1420  8C32 93           	sub e
1421  8C33 28 07        	jr z,1F
1422  8C35
1423  8C35              ; Nº de malotes no es "0".
1424  8C35
1425  8C35 D6 06        2 sub 6
1426  8C37 04           	inc b
1427  8C38 A7           	and a
1428  8C39 20 FA        	jr nz,2B
1429  8C3B 78           	ld a,b
1430  8C3C
1431  8C3C 32 DE 89     1 ld (Numero_de_malotes),a
1432  8C3F C9           	ret
1433  8C40
1434  8C40              ; -------------------------------------------------------------------------------------------------------------
1435  8C40              ;
1436  8C40              ; 8/9/23
1437  8C40              ;
1438  8C40
1439  8C40              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1440  8C40              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1441  8C40
1442  8C40              Calcula_malotes_Amadeus
1443  8C40
1444  8C40 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1445  8C43 EB           	ex de,hl
1446  8C44 2A EF 89     	ld hl,(End_Snapshot_Amadeus)
1447  8C47
1448  8C47 7C           	ld a,h
1449  8C48 A7           	and a
1450  8C49 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1451  8C4B
1452  8C4B 06 00        	ld b,0
1453  8C4D 7D           	ld a,l
1454  8C4E 93           	sub e
1455  8C4F 28 07        	jr z,1F
1456  8C51
1457  8C51              ; Nº de malotes no es "0".
1458  8C51
1459  8C51 D6 06        2 sub 6
1460  8C53 04           	inc b
1461  8C54 A7           	and a
1462  8C55 20 FA        	jr nz,2B
1463  8C57 78           	ld a,b
1464  8C58
1465  8C58 32 DE 89     1 ld (Numero_de_malotes),a
1466  8C5B C9           	ret
1467  8C5C
1468  8C5C              ; -------------------------------------------------------------------------------------------------------------
1469  8C5C              ;
1470  8C5C              ; 28/2/23
1471  8C5C              ;
1472  8C5C
1473  8C5C              Calcula_numero_de_disparotes
1474  8C5C
1475  8C5C 21 56 80     	ld hl,Album_de_fotos_disparos
1476  8C5F EB           	ex de,hl
1477  8C60 2A ED 89     	ld hl,(End_Snapshot_disparos)
1478  8C63
1479  8C63 06 00        	ld b,0
1480  8C65 7D           	ld a,l
1481  8C66 93           	sub e
1482  8C67 28 07        	jr z,1F
1483  8C69
1484  8C69              ; Nº de malotes no es "0".
1485  8C69
1486  8C69 D6 06        2 sub 6
1487  8C6B 04           	inc b
1488  8C6C A7           	and a
1489  8C6D 20 FA        	jr nz,2B
1490  8C6F 78           	ld a,b
1491  8C70
1492  8C70 32 F3 89     1 ld (Numero_de_disparotes),a
1493  8C73 C9           	ret
1494  8C74
1495  8C74              ; *************************************************************************************************************************************************************
1496  8C74              ;
1497  8C74              ; 20/10/22
1498  8C74              ;
1499  8C74              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1500  8C74              ;
1501  8C74              ; Destruye el puntero y DE !!!!!
1502  8C74
1503  8C74 5E           Extrae_address ld e,(hl)
1504  8C75 23           	inc hl
1505  8C76 56           	ld d,(hl)
1506  8C77 2B           	dec hl
1507  8C78 EB           	ex de,hl
1508  8C79 C9           	ret
1509  8C7A
1510  8C7A              ; *************************************************************************************************************************************************************
1511  8C7A              ;
1512  8C7A              ;	20/1/24
1513  8C7A              ;
1514  8C7A              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1515  8C7A              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1516  8C7A              ;
1517  8C7A              ;   Destruye HL y BC !!!!!,
1518  8C7A              ;
1519  8C7A              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1520  8C7A              ;					"0" ..... Izquierda.
1521  8C7A
1522  8C7A              Inicia_Puntero_objeto
1523  8C7A
1524  8C7A 3A 9F 89     	ld a,(Cuad_objeto)
1525  8C7D E6 01        	and 1
1526  8C7F F5           	push af
1527  8C80 CC 9C 8C     	call z,Inicia_puntero_objeto_izq
1528  8C83 F1           	pop af
1529  8C84 C8           	ret z
1530  8C85 CD 89 8C     	call Inicia_puntero_objeto_der
1531  8C88 C9           	ret
1532  8C89
1533  8C89              ; Arrancamos desde la parte izquierda de la pantalla.
1534  8C89              ; Iniciamos (Indice_Sprite_der).
1535  8C89
1536  8C89 2A 95 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1537  8C8C 22 99 89     	ld (Puntero_DESPLZ_der),hl
1538  8C8F CD 74 8C     	call Extrae_address
1539  8C92 22 8F 89     	ld (Puntero_objeto),hl
1540  8C95
1541  8C95 2A 97 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1542  8C98 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1543  8C9B C9           	ret
1544  8C9C
1545  8C9C              ; Arrancamos desde la parte derecha de la pantalla.
1546  8C9C              ; Iniciamos (Indice_Sprite_izq).
1547  8C9C
1548  8C9C 2A 97 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1549  8C9F 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1550  8CA2 CD 74 8C     	call Extrae_address
1551  8CA5 22 8F 89     	ld (Puntero_objeto),hl
1552  8CA8
1553  8CA8 2A 95 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1554  8CAB 22 99 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1555  8CAE C9           	ret
1556  8CAF
1557  8CAF              ; **************************************************************************************************
1558  8CAF              ;
1559  8CAF              ;	31/01/24
1560  8CAF              ;
1561  8CAF              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1562  8CAF
1563  8CAF              Restore_entidad
1564  8CAF
1565  8CAF 2A D5 89     	ld hl,(Puntero_store_caja)
1566  8CB2 11 8A 89     	ld de,Bandeja_DRAW
1567  8CB5 7E           	ld a,(hl)
1568  8CB6 12           	ld (de),a
1569  8CB7 23           	inc hl 											; (Tipo).
1570  8CB8
1571  8CB8 11 91 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1572  8CBB 01 02 00     	ld bc,2
1573  8CBE ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1574  8CC0
1575  8CC0 13           	inc de
1576  8CC1 7E           	ld a,(hl)
1577  8CC2 12           	ld (de),a 										; Transferimos (Attr).
1578  8CC3 23           	inc hl
1579  8CC4
1580  8CC4 11 A0 89     	ld de,Impacto
1581  8CC7
1582  8CC7 7E           	ld a,(hl)
1583  8CC8 12           	ld (de),a 										; Transferimos (Impacto).
1584  8CC9 23           	inc hl
1585  8CCA
1586  8CCA 13           	inc de
1587  8CCB
1588  8CCB 01 06 00     	ld bc,6
1589  8CCE ED B0        	ldir
1590  8CD0
1591  8CD0 01 07 00     	ld bc,7
1592  8CD3 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1593  8CD5              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1594  8CD5 11 B2 89     	ld de,Ctrl_2
1595  8CD8
1596  8CD8 7E           	ld a,(hl)
1597  8CD9 12           	ld (de),a 										; Transferimos (Ctrl_2).
1598  8CDA
1599  8CDA C9           	ret
1600  8CDB
1601  8CDB              ; **************************************************************************************************
1602  8CDB              ;
1603  8CDB              ;	08/05/23
1604  8CDB              ;
1605  8CDB              ;	Incrementamos los dos punteros de entidades. (+1).
1606  8CDB
1607  8CDB              Incrementa_punteros_de_cajas
1608  8CDB
1609  8CDB 2A D7 89     	ld hl,(Puntero_restore_caja)
1610  8CDE 22 D5 89     	ld (Puntero_store_caja),hl
1611  8CE1 2A D9 89     	ld hl,(Indice_restore_caja)
1612  8CE4 23           	inc hl
1613  8CE5 23           	inc hl
1614  8CE6 22 D9 89     	ld (Indice_restore_caja),hl
1615  8CE9 CD 74 8C         call Extrae_address
1616  8CEC 22 D7 89         ld (Puntero_restore_caja),hl
1617  8CEF C9               ret
1618  8CF0
1619  8CF0              ; **************************************************************************************************
1620  8CF0              ;
1621  8CF0              ;	21/12/23
1622  8CF0              ;
1623  8CF0              ;	Restore_Amadeus
1624  8CF0              ;
1625  8CF0              ;	Cargamos en DRAW los parámetros de Amadeus.
1626  8CF0              ;
1627  8CF0
1628  8CF0 E5           Restore_Amadeus	push hl
1629  8CF1 D5           	push de
1630  8CF2 C5            	push bc
1631  8CF3 21 F6 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1632  8CF6 11 8A 89     	ld de,Bandeja_DRAW
1633  8CF9 01 2A 00     	ld bc,42
1634  8CFC ED B0        	ldir
1635  8CFE C1           	pop bc
1636  8CFF D1           	pop de
1637  8D00 E1           	pop hl
1638  8D01 C9           	ret
1639  8D02
1640  8D02              ; *************************************************************************************************************************************************************
1641  8D02              ;
1642  8D02              ;	21/12/23
1643  8D02              ;
1644  8D02              ;	Store_Amadeus
1645  8D02              ;
1646  8D02              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1647  8D02              ;
1648  8D02              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1649  8D02              ;
1650  8D02              ;	DESTRUYE: HL y BC y DE.
1651  8D02
1652  8D02 21 8A 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1653  8D05 01 2A 00     	ld bc,42
1654  8D08 ED B0        	ldir
1655  8D0A C9           	ret
1656  8D0B
1657  8D0B              ; -----------------------------------------------------------
1658  8D0B              ;
1659  8D0B              ;	21/12/23
1660  8D0B              ;
1661  8D0B              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1662  8D0B              ;
1663  8D0B              ;	Destruye: HL,BC,DE,A
1664  8D0B
1665  8D0B 21 8A 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1666  8D0E 01 29 00     	ld bc,41
1667  8D11 AF           	xor a
1668  8D12 77           	ld (hl),a
1669  8D13 11 8B 89     	ld de,Bandeja_DRAW+1
1670  8D16 ED B0        	ldir
1671  8D18 C9           	ret
1672  8D19
1673  8D19              ; -----------------------------------------------------------
1674  8D19
1675  8D19              ; Teclado.
1676  8D19
1677  8D19 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1678  8D1B DB FE        	in a,($fe)
1679  8D1D E6 01        	and $01
1680  8D1F 28 02        	jr z,1f
1681  8D21 18 F6        	jr Pulsa_ENTER
1682  8D23 C9           1 ret
1683  8D24
1684  8D24              ; **************************************************************************************************
1685  8D24              ;
1686  8D24              ; Temporización.
1687  8D24
1688  8D24              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1689  8D24              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1690  8D24              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1691  8D24              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1692  8D24
1693  8D24              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1694  8D24              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1695  8D24              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1696  8D24
1697  8D24              ; A partir de $4f61 no hace falta DELAY.
1698  8D24
1699  8D24              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1700  8D24
1701  8D24 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1702  8D27 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1703  8D28 78           	LD A,B
1704  8D29 A7           	AND A
1705  8D2A 20 FB        	JR NZ,wait
1706  8D2C C9           	RET
1707  8D2D
1708  8D2D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1709  8D2D              ;
1710  8D2D              ;	5/3/23
1711  8D2D              ;
1712  8D2D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1713  8D2D
1714  8D2D              Movimiento_Amadeus
1715  8D2D
1716  8D2D              ; Disparo.
1717  8D2D
1718  8D2D 3A 09 8A     	ld a,(Disparo_Amadeus)
1719  8D30 A7           	and a
1720  8D31 20 02        	jr nz,1F
1721  8D33 18 15        	jr 2F
1722  8D35
1723  8D35 3E F7        1 ld a,$f7													; "5" para disparar.
1724  8D37 DB FE        	in a,($fe)
1725  8D39 E6 10        	and $10
1726  8D3B
1727  8D3B F5           	push af
1728  8D3C CC 9F 9A     	call z,Genera_disparo
1729  8D3F F1           	pop af
1730  8D40 20 08        	jr nz,2F
1731  8D42
1732  8D42 3A 09 8A     	ld a,(Disparo_Amadeus)
1733  8D45 EE 01        	xor 1
1734  8D47 32 09 8A     	ld (Disparo_Amadeus),a
1735  8D4A 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1736  8D4C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1737  8D4E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1738  8D50 CC 72 97         call z,Mov_left											;			"			"			"			"			"			"			"			"
1739  8D53
1740  8D53 3E F7        	ld a,$f7
1741  8D55 DB FE        	in a,($fe)
1742  8D57 E6 01        	and $01
1743  8D59 C8           	ret z
1744  8D5A
1745  8D5A 3E F7        	ld a,$f7
1746  8D5C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1747  8D5E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1748  8D60 CC 4F 96     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1749  8D63 C9           	ret
1750  8D64
1751  8D64              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1752  8D64              ;
1753  8D64              ;	Rutina provisional para que los malotes cagen balas.
1754  8D64
1755  8D64              Detecta_disparo_entidad
1756  8D64
1757  8D64 3A 0C 8A     	ld a,(Disparo_entidad)
1758  8D67 A7           	and a
1759  8D68 C8           	ret z
1760  8D69
1761  8D69              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1762  8D69
1763  8D69              ;	ld a,$7f				; Detecta SPACE.
1764  8D69              ;	in a,($fe)
1765  8D69              ;	and 1
1766  8D69              ;	ret nz
1767  8D69
1768  8D69 CD 9F 9A     	call Genera_disparo
1769  8D6C C9           	ret
1770  8D6D
1771  8D6D              ; ----------------------------------------------------------------------
1772  8D6D              ;
1773  8D6D              ;	8/9/23
1774  8D6D
1775  8D6D 2A EF 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1776  8D70 2B            	dec hl
1777  8D71 7E           	ld a,(hl)
1778  8D72 A7           	and a
1779  8D73 C8           	ret z										; Salimos si es álbum está vacío.
1780  8D74
1781  8D74 11 A6 89     	ld de,Variables_de_borrado+5
1782  8D77 01 06 00     	ld bc,6
1783  8D7A ED B8        	lddr
1784  8D7C C9           	ret
1785  8D7D
1786  8D7D              ; ----------------------------------------------------------------------
1787  8D7D              ;
1788  8D7D              ;	9/9/23
1789  8D7D
1790  8D7D              Repone_datos_de_borrado_Amadeus
1791  8D7D
1792  8D7D 21 A1 89     	ld hl,Variables_de_borrado
1793  8D80 11 AC 80     	ld de,Album_de_fotos_Amadeus
1794  8D83 01 06 00     	ld bc,6
1795  8D86 ED B0        	ldir
1796  8D88
1797  8D88 EB           	ex de,hl
1798  8D89 22 EF 89     	ld (End_Snapshot_Amadeus),hl
1799  8D8C
1800  8D8C C9           	ret
1801  8D8D
1802  8D8D              ; ----------------------------------------------------------------------
1803  8D8D              ;
1804  8D8D              ;	27/10/23
1805  8D8D              ;
1806  8D8D
1807  8D8D              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1808  8D8D              ;	_ Album_de_fotos correspondiente.
1809  8D8D
1810  8D8D              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1811  8D8D              ;	_ durante el proceso de escritura.
1812  8D8D
1813  8D8D              Repone_datos_de_borrado
1814  8D8D
1815  8D8D ED 5B E9 89  	ld de,(Stack_snapshot)
1816  8D91 21 A1 89     	ld hl,Variables_de_borrado
1817  8D94 01 06 00     	ld bc,6
1818  8D97 ED B0        	ldir
1819  8D99
1820  8D99 EB           	ex de,hl
1821  8D9A 22 E9 89     	ld (Stack_snapshot),hl
1822  8D9D
1823  8D9D C9           	ret
1824  8D9E
1825  8D9E              ; --------------------------------------------------------------------------------------
1826  8D9E
1827  8D9E              Pinta_Amadeus
1828  8D9E
1829  8D9E CD 40 8C        	call Calcula_malotes_Amadeus
1830  8DA1 CD 4C 93     	call Extrae_foto_Amadeus
1831  8DA4 CD 00 8C     	call Limpia_album_Amadeus
1832  8DA7
1833  8DA7 C9           	ret
1834  8DA8
1835  8DA8              ; -----------------------------------------------------------------------------------
1836  8DA8              ;
1837  8DA8              ;	10/12/23
1838  8DA8              ;
1839  8DA8              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1840  8DA8
1841  8DA8              Actualiza_relojes
1842  8DA8
1843  8DA8 3A F1 89     	ld a,(Ctrl_3)
1844  8DAB CB 47        	bit 0,a
1845  8DAD C8           	ret z 						;	Salimos si no hemos pintado unidades.
1846  8DAE
1847  8DAE 21 04 8A     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1848  8DB1 34           	inc (hl)
1849  8DB2
1850  8DB2 34           	inc (hl)
1851  8DB3 35           	dec (hl)
1852  8DB4 C0           	ret nz
1853  8DB5
1854  8DB5 21 05 8A     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1855  8DB8 34           	inc (hl)
1856  8DB9 C9           	ret
1857  8DBA
1858  8DBA              ; ---------------------------------------------------------------
1859  8DBA
1860  8DBA              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8DBA              ;---------------------------------------------------------------------------------------------------------------
   2+ 8DBA              ;
   3+ 8DBA              ;   19/1/24
   4+ 8DBA              ;
   5+ 8DBA              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8DBA              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8DBA              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8DBA              ;	_ de la 1ª entidad del Nivel.
   9+ 8DBA              ;
  10+ 8DBA              ;	MODIFICA: HL,DE y A.
  11+ 8DBA              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8DBA
  13+ 8DBA              Inicializa_Nivel
  14+ 8DBA
  15+ 8DBA 2A 10 8A     	ld hl,(Puntero_indice_NIVELES)
  16+ 8DBD CD 74 8C     	call Extrae_address
  17+ 8DC0 7E           	ld a,(hl)
  18+ 8DC1 32 DB 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8DC4 23           	inc hl
  20+ 8DC5 CD D2 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8DC8 22 12 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8DCB CD DB 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8DCE              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8DCE CD EC 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8DD1 C9           	ret
  26+ 8DD2
  27+ 8DD2              ; ----------------------
  28+ 8DD2
  29+ 8DD2 11 B4 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8DD5 01 04 00     	ld bc,4
  31+ 8DD8 ED B0        	ldir
  32+ 8DDA C9           	ret
  33+ 8DDB
  34+ 8DDB 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8DDC CD 2F 8F         call Calcula_salto_en_BC
  36+ 8DDF 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8DE2 A7               and a
  38+ 8DE3 ED 4A            adc hl,bc
  39+ 8DE5 CD 74 8C         call Extrae_address
  40+ 8DE8 22 C6 89         ld (Puntero_indice_mov),hl
  41+ 8DEB C9               ret
  42+ 8DEC
  43+ 8DEC 3A 8A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8DEF CD 2F 8F     	call Calcula_salto_en_BC
  45+ 8DF2 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8DF5 A7               and a
  47+ 8DF6 ED 4A            adc hl,bc
  48+ 8DF8 CD 74 8C         call Extrae_address
  49+ 8DFB 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8DFE C9           	ret
  51+ 8DFF
  52+ 8DFF              ;---------------------------------------------------------------------------------------------------------------
  53+ 8DFF              ;
  54+ 8DFF              ;   5/1/24
  55+ 8DFF              ;
  56+ 8DFF              ;	Destruye A,BC,HL,DE
  57+ 8DFF
  58+ 8DFF              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8DFF              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8DFF
  61+ 8DFF              Inicia_Entidades
  62+ 8DFF
  63+ 8DFF              ; Preparamos los punteros de las cajas de entidades:
  64+ 8DFF
  65+ 8DFF CD DC 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8E02              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8E02 CD 96 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8E05
  69+ 8E05 2A 12 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8E08
  71+ 8E08 22 12 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8E0B
  73+ 8E0B CD DD 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8E0E
  75+ 8E0E 2A 12 8A     	ld hl,(Datos_de_nivel)
  76+ 8E11
  77+ 8E11              ; En este punto:
  78+ 8E11              ;
  79+ 8E11              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8E11              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8E11
  82+ 8E11 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8E12
  84+ 8E12 7E           	ld a,(hl)
  85+ 8E13 CD 52 8E     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8E16
  87+ 8E16 CD 41 8F     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8E19
  89+ 8E19              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8E19
  91+ 8E19 CD FF 8E     	call Busca_mov_masticados_segun_tipo
  92+ 8E1C
  93+ 8E1C A7           	and a
  94+ 8E1D 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8E1F
  96+ 8E1F              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8E1F
  98+ 8E1F              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8E1F              ;	_ de este tipo de entidad.
 100+ 8E1F
 101+ 8E1F CD 89 9A     	call Situa_en_contador_general_de_mov_masticados
 102+ 8E22 CD 96 9A     	call Transfiere_datos_de_contadores
 103+ 8E25
 104+ 8E25 18 06        	jr 4F
 105+ 8E27
 106+ 8E27 CD BA 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8E2A
 108+ 8E2A              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8E2A              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8E2A              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8E2A              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8E2A              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8E2A
 114+ 8E2A CD BD 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8E2D              ;																; _ Mov_masticados ya generados.
 116+ 8E2D CD 6C 8E     4 call Guarda_foto_de_mov_masticado
 117+ 8E30
 118+ 8E30              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8E30
 120+ 8E30 2A A7 89     	ld hl,(Puntero_de_impresion)
 121+ 8E33 CD A0 9F     	call Genera_coordenadas
 122+ 8E36 CD E3 8A     	call Genera_scanlines_masticados
 123+ 8E39 CD 68 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 124+ 8E3C CD 76 8E     	call Limpiamos_bandeja_DRAW
 125+ 8E3F CD DB 8C     	call Incrementa_punteros_de_cajas
 126+ 8E42
 127+ 8E42              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 128+ 8E42              ; _ entidad del Nivel.
 129+ 8E42
 130+ 8E42 3A F2 89     	ld a,(Ctrl_4)
 131+ 8E45 E6 F0        	and $f0
 132+ 8E47 32 F2 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 133+ 8E4A
 134+ 8E4A              ; Siguiente entidad del Nivel.
 135+ 8E4A
 136+ 8E4A 2A 12 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 137+ 8E4D 23           	inc hl 														; _ entidad del Nivel.
 138+ 8E4E
 139+ 8E4E C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 140+ 8E4F
 141+ 8E4F 10 B7        	djnz 2B
 142+ 8E51
 143+ 8E51 C9           	ret
 144+ 8E52
 145+ 8E52              ; ---------------------------------------------------------------------
 146+ 8E52              ;
 147+ 8E52              ;	10/02/24
 148+ 8E52              ;
 149+ 8E52              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 150+ 8E52              ;
 151+ 8E52              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 152+ 8E52
 153+ 8E52              Definicion_segun_tipo
 154+ 8E52
 155+ 8E52 CD 2F 8F     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 156+ 8E55 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 157+ 8E58 CD 37 8F     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 158+ 8E5B C9           	ret
 159+ 8E5C
 160+ 8E5C              ; ---------------------------------------------------------------------
 161+ 8E5C              ;
 162+ 8E5C              ;	30/01/24
 163+ 8E5C
 164+ 8E5C
 165+ 8E5C              Store_Restore_cajas
 166+ 8E5C
 167+ 8E5C              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 168+ 8E5C
 169+ 8E5C 2A A7 89     	ld hl,(Puntero_de_impresion)
 170+ 8E5F CD A0 9F     	call Genera_coordenadas
 171+ 8E62
 172+ 8E62 CD 68 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 173+ 8E65 CD 76 8E     	call Limpiamos_bandeja_DRAW
 174+ 8E68
 175+ 8E68              ; 	Entidad_sospechosa. 20/4/23
 176+ 8E68
 177+ 8E68              ;	ld a,(Impacto)
 178+ 8E68              ;	and a
 179+ 8E68              ;	jr z,1F
 180+ 8E68
 181+ 8E68              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 182+ 8E68              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 183+ 8E68              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 184+ 8E68              ;	adc hl,bc 											; _ "0" más adelante.
 185+ 8E68              ;	ld (Entidad_sospechosa_de_colision),hl
 186+ 8E68
 187+ 8E68
 188+ 8E68              ;1 ld hl,(Puntero_restore_caja)
 189+ 8E68              ;	ld a,(hl)
 190+ 8E68              ;	and a
 191+ 8E68              ;	push af
 192+ 8E68              ;	jr z,2F
 193+ 8E68
 194+ 8E68              ;	di
 195+ 8E68              ;	ld de,Bandeja_DRAW
 196+ 8E68              ;	ld bc,42
 197+ 8E68              ;	ldir
 198+ 8E68              ;	ei
 199+ 8E68
 200+ 8E68 CD DB 8C     2 call Incrementa_punteros_de_cajas
 201+ 8E6B C9           	ret
 202+ 8E6C
 203+ 8E6C
 204+ 8E6C              ; ---------------------------------------------------------------------
 205+ 8E6C              ;
 206+ 8E6C              ;	29/01/24
 207+ 8E6C
 208+ 8E6C CD 8B 8B     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 209+ 8E6F CD BF 80     	call Guarda_foto_registros
 210+ 8E72              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 211+ 8E72              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 212+ 8E72              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 213+ 8E72              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 214+ 8E72
 215+ 8E72 CD 81 8E     	call Decrementa_Contador_de_mov_masticados
 216+ 8E75 C9           	ret
 217+ 8E76
 218+ 8E76              ; ---------------------------------------------------------------------
 219+ 8E76              ;
 220+ 8E76              ;	25/01/24
 221+ 8E76
 222+ 8E76 21 8A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 223+ 8E79 06 2A        	ld b,42
 224+ 8E7B AF           	xor a
 225+ 8E7C
 226+ 8E7C 77           1 ld (hl),a
 227+ 8E7D 23           	inc hl
 228+ 8E7E 10 FC        	djnz 1B
 229+ 8E80
 230+ 8E80 C9           	ret
 231+ 8E81
 232+ 8E81              ; ---------------------------------------------------------------------
 233+ 8E81              ;
 234+ 8E81              ;	22/01/24
 235+ 8E81
 236+ 8E81 2A AB 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 237+ 8E84 2B           	dec hl
 238+ 8E85
 239+ 8E85 24           	inc h
 240+ 8E86 25           	dec h
 241+ 8E87
 242+ 8E87 FC 8E 8E     	call m,Reinicia_entidad_maliciosa
 243+ 8E8A
 244+ 8E8A              ;	jr nz,1F
 245+ 8E8A
 246+ 8E8A              ;	inc l
 247+ 8E8A              ;	dec l
 248+ 8E8A
 249+ 8E8A              ;	di
 250+ 8E8A              ;	jr z,$
 251+ 8E8A              ;	ei
 252+ 8E8A
 253+ 8E8A 22 AB 89     1 ld (Contador_de_mov_masticados),hl
 254+ 8E8D C9           	ret
 255+ 8E8E
 256+ 8E8E              ; ---------------------------------------------------------------------
 257+ 8E8E              ;
 258+ 8E8E              ;	10/2/24
 259+ 8E8E
 260+ 8E8E              Reinicia_entidad_maliciosa
 261+ 8E8E
 262+ 8E8E              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 263+ 8E8E
 264+ 8E8E CD 89 9A     	call Situa_en_contador_general_de_mov_masticados
 265+ 8E91 CD 96 9A     	call Transfiere_datos_de_contadores
 266+ 8E94
 267+ 8E94              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 268+ 8E94
 269+ 8E94 3A 8A 89     	ld a,(Tipo)
 270+ 8E97 CD 52 8E     	call Definicion_segun_tipo
 271+ 8E9A
 272+ 8E9A E5           	push hl
 273+ 8E9B DD E1        	pop ix
 274+ 8E9D
 275+ 8E9D DD 6E 0B     	ld l,(ix+11)
 276+ 8EA0 DD 66 0C     	ld h,(ix+12)
 277+ 8EA3
 278+ 8EA3 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 279+ 8EA6
 280+ 8EA6              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 281+ 8EA6              ;	Queremos pintar la entidad en su posición de inicio.
 282+ 8EA6
 283+ 8EA6 2A E9 89     	ld hl,(Stack_snapshot)
 284+ 8EA9 01 06 00     	ld bc,6
 285+ 8EAC A7           	and a
 286+ 8EAD ED 42        	sbc hl,bc
 287+ 8EAF 22 E9 89     	ld (Stack_snapshot),hl
 288+ 8EB2
 289+ 8EB2 CD 8B 8B     	call Cargamos_registros_con_mov_masticado
 290+ 8EB5 CD BF 80     	call Guarda_foto_registros
 291+ 8EB8
 292+ 8EB8 2A AB 89     	ld hl,(Contador_de_mov_masticados)
 293+ 8EBB 2B           	dec hl
 294+ 8EBC
 295+ 8EBC C9           	ret
 296+ 8EBD
 297+ 8EBD
 298+ 8EBD
 299+ 8EBD
 300+ 8EBD              ; ---------------------------------------------------------------------
 301+ 8EBD              ;
 302+ 8EBD              ;	22/01/24
 303+ 8EBD
 304+ 8EBD 21 F2 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 305+ 8EC0 CB 46        	bit 0,(hl)
 306+ 8EC2 20 0D        	jr nz,1F
 307+ 8EC4 CB 4E        	bit 1,(hl)
 308+ 8EC6 20 0C        	jr nz,2F
 309+ 8EC8 CB 56        	bit 2,(hl)
 310+ 8ECA 20 0B        	jr nz,3F
 311+ 8ECC CB 5E        	bit 3,(hl)
 312+ 8ECE 20 0A        	jr nz,4F
 313+ 8ED0 C9           	ret
 314+ 8ED1
 315+ 8ED1 CB E6        1 set 4,(hl)
 316+ 8ED3 C9           	ret
 317+ 8ED4 CB EE        2 set 5,(hl)
 318+ 8ED6 C9           	ret
 319+ 8ED7 CB F6        3 set 6,(hl)
 320+ 8ED9 C9           	ret
 321+ 8EDA CB FE        4 set 7,(hl)
 322+ 8EDC C9           	ret
 323+ 8EDD
 324+ 8EDD              ; ---------------------------------------------------------------------
 325+ 8EDD              ;
 326+ 8EDD              ;	23/01/24
 327+ 8EDD              ;
 328+ 8EDD              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 329+ 8EDD              ;
 330+ 8EDD              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 331+ 8EDD              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 332+ 8EDD              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 333+ 8EDD              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 334+ 8EDD
 335+ 8EDD              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 336+ 8EDD
 337+ 8EDD 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 338+ 8EDE 3D           	dec a
 339+ 8EDF 20 06        	jr nz,1F
 340+ 8EE1
 341+ 8EE1              ; --- Tipo_1
 342+ 8EE1
 343+ 8EE1 21 F2 89     	ld hl,Ctrl_4
 344+ 8EE4 CB C6        	set 0,(hl)
 345+ 8EE6 C9           	ret
 346+ 8EE7
 347+ 8EE7 3D           1 dec a
 348+ 8EE8 20 06        	jr nz,2F
 349+ 8EEA
 350+ 8EEA              ; --- Tipo_2
 351+ 8EEA
 352+ 8EEA 21 F2 89     	ld hl,Ctrl_4
 353+ 8EED CB CE        	set 1,(hl)
 354+ 8EEF C9           	ret
 355+ 8EF0
 356+ 8EF0 3D           2 dec a
 357+ 8EF1 20 06        	jr nz,3F
 358+ 8EF3
 359+ 8EF3              ; --- Tipo_3
 360+ 8EF3
 361+ 8EF3 21 F2 89     	ld hl,Ctrl_4
 362+ 8EF6 CB D6        	set 2,(hl)
 363+ 8EF8 C9           	ret
 364+ 8EF9
 365+ 8EF9              ; --- Tipo_3
 366+ 8EF9
 367+ 8EF9 21 F2 89     3 ld hl,Ctrl_4
 368+ 8EFC CB D6        	set 2,(hl)
 369+ 8EFE C9           	ret
 370+ 8EFF
 371+ 8EFF              ; ---------------------------------------------------------------------
 372+ 8EFF              ;
 373+ 8EFF              ;	22/01/24
 374+ 8EFF
 375+ 8EFF 21 F2 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 376+ 8F02 CB 46        	bit 0,(hl)
 377+ 8F04 20 0E        	jr nz,1F
 378+ 8F06
 379+ 8F06 CB 4E        	bit 1,(hl)
 380+ 8F08 20 10        	jr nz,2F
 381+ 8F0A
 382+ 8F0A CB 56        	bit 2,(hl)
 383+ 8F0C 20 12        	jr nz,3F
 384+ 8F0E
 385+ 8F0E CB 5E        	bit 3,(hl)
 386+ 8F10 20 14        	jr nz,4F
 387+ 8F12 18 19        	jr 6F
 388+ 8F14
 389+ 8F14              ; Entidad_de_Tipo_1.
 390+ 8F14
 391+ 8F14 CB 66        1 bit 4,(hl)
 392+ 8F16 28 15        	jr z,6F
 393+ 8F18 18 10        	jr 5F
 394+ 8F1A
 395+ 8F1A              ; Entidad_de_Tipo_2.
 396+ 8F1A
 397+ 8F1A CB 6E        2 bit 5,(hl)
 398+ 8F1C 28 0F        	jr z,6F
 399+ 8F1E 18 0A        	jr 5F
 400+ 8F20
 401+ 8F20              ; Entidad_de_Tipo_3.
 402+ 8F20
 403+ 8F20 CB 76        3 bit 6,(hl)
 404+ 8F22 28 09        	jr z,6F
 405+ 8F24 18 04        	jr 5F
 406+ 8F26
 407+ 8F26              ; Entidad_de_Tipo_4.
 408+ 8F26
 409+ 8F26 CB 7E        4 bit 7,(hl)
 410+ 8F28 28 03        	jr z,6F
 411+ 8F2A
 412+ 8F2A              ; Esta entidad TIENE MOV_MASTICADOS.
 413+ 8F2A
 414+ 8F2A AF           5 xor a
 415+ 8F2B 3C           	inc a
 416+ 8F2C C9           	ret
 417+ 8F2D
 418+ 8F2D              ; Esta entidad NO TIENE MOV_MASTICADOS.
 419+ 8F2D
 420+ 8F2D AF           6 xor a
 421+ 8F2E C9           	ret
 422+ 8F2F
 423+ 8F2F              ;	------------------------------------------------------------------------------------
 424+ 8F2F              ;
 425+ 8F2F              ;	12/01/24
 426+ 8F2F              ;
 427+ 8F2F              ;	INPUTS:	A contiene el (Tipo) de entidad.
 428+ 8F2F              ;
 429+ 8F2F              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 430+ 8F2F              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 431+ 8F2F
 432+ 8F2F CB 27        Calcula_salto_en_BC sla a
 433+ 8F31 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 434+ 8F33 4F           	ld c,a
 435+ 8F34 06 00        	ld b,0
 436+ 8F36 C9           	ret
 437+ 8F37
 438+ 8F37              ; ------------------------------------------------------------------
 439+ 8F37              ;
 440+ 8F37              ;	19/1/24
 441+ 8F37              ;
 442+ 8F37              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 443+ 8F37              ;	Actualiza (Datos_de_entidad) con esa dirección.
 444+ 8F37
 445+ 8F37 A7           Situa_en_datos_de_definicion and a
 446+ 8F38 ED 4A        	adc hl,bc
 447+ 8F3A CD 74 8C     	call Extrae_address
 448+ 8F3D 22 E1 89         ld (Datos_de_entidad),hl
 449+ 8F40 C9           	ret
 450+ 8F41
 451+ 8F41              ; ------------------------------------------------------------------
 452+ 8F41
 453+ 8F41              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 454+ 8F41              ; 	inc de
 455+ 8F41              ; 	inc de
 456+ 8F41              ; 	ex de,hl
 457+ 8F41              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 458+ 8F41              ; 	ret
 459+ 8F41
 460+ 8F41              ; ----------------------------------------------------------------------------------------------------------
 461+ 8F41              ;
 462+ 8F41              ;	31/1/24
 463+ 8F41              ;
 464+ 8F41              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 465+ 8F41              ;	_ de entidad.
 466+ 8F41              ;
 467+ 8F41              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 468+ 8F41              ;
 469+ 8F41              ;
 470+ 8F41              ;	MODIFICA: HL,DE y BC
 471+ 8F41
 472+ 8F41
 473+ 8F41              Definicion_de_entidad_a_bandeja_DRAW
 474+ 8F41
 475+ 8F41 11 8A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 476+ 8F44 01 03 00     	ld bc,3
 477+ 8F47 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 478+ 8F49              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 479+ 8F49 11 94 89     	ld de,Attr									; DE en (Attr).
 480+ 8F4C 01 05 00     	ld bc,5
 481+ 8F4F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 482+ 8F51              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 483+ 8F51 11 9D 89     	ld de,Posicion_inicio
 484+ 8F54 01 03 00     	ld bc,3
 485+ 8F57 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 486+ 8F59              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 487+ 8F59 11 A9 89     	ld de,Puntero_de_almacen_de_mov_masticados
 488+ 8F5C 01 02 00     	ld bc,2
 489+ 8F5F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 490+ 8F61
 491+ 8F61 11 B3 89     	ld de,Frames_explosion
 492+ 8F64 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 493+ 8F66 12           	ld (de),a 									; Vuelco (Frames_explosion).
 494+ 8F67
 495+ 8F67 C9           	ret
 496+ 8F68
 497+ 8F68              ; ----------------------------------------------------------------------------------------------------------
 498+ 8F68              ;
 499+ 8F68              ;	22/01/24
 500+ 8F68              ;
 501+ 8F68              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 502+ 8F68              ;
 503+ 8F68              ;	Las cajas contienen entidades iniciadas:
 504+ 8F68              ;
 505+ 8F68              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 506+ 8F68              ;
 507+ 8F68              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 508+ 8F68              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 509+ 8F68              ;
 510+ 8F68              ;	MODIFICA: HL,DE y BC
 511+ 8F68
 512+ 8F68 21 8A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 513+ 8F6B ED 5B D5 89  	ld de,(Puntero_store_caja)
 514+ 8F6F 7E           	ld a,(hl)
 515+ 8F70 12           	ld (de),a
 516+ 8F71 13           	inc de 													; (Tipo).
 517+ 8F72
 518+ 8F72 21 91 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 519+ 8F75 01 02 00     	ld bc,2
 520+ 8F78 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 521+ 8F7A              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 522+ 8F7A 23           	inc hl
 523+ 8F7B 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 524+ 8F7C 12           	ld (de),a
 525+ 8F7D 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 526+ 8F7E
 527+ 8F7E 21 A0 89     	ld hl,Impacto
 528+ 8F81 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 529+ 8F82 12           	ld (de),a
 530+ 8F83 13           	inc de 													; (Impacto), volcado a la caja.
 531+ 8F84              ;															; DE situado ahora en (Variables_de_borrado).
 532+ 8F84 23           	inc hl
 533+ 8F85 01 06 00     	ld bc,6
 534+ 8F88 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 535+ 8F8A              ; 															; DE situado ahora en (Puntero_de_impresión).
 536+ 8F8A 01 07 00     	ld bc,7
 537+ 8F8D ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 538+ 8F8F              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 539+ 8F8F              ;															; HL apunta ahora a (Columnas).
 540+ 8F8F 21 B2 89     	ld hl,Ctrl_2
 541+ 8F92 7E           	ld a,(hl)
 542+ 8F93 12           	ld (de),a 												; Volcamos (Ctrl_2).
 543+ 8F94 13           	inc de
 544+ 8F95
 545+ 8F95 C9           	ret
 546+ 8F96
 547+ 8F96              ;---------------------------------------------------------------------------------------------------------------
 548+ 8F96              ;
 549+ 8F96              ;	5/1/24
 550+ 8F96              ;
 551+ 8F96              ;	INICIALIZA (Numero_parcial_de_entidades).
 552+ 8F96              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 553+ 8F96              ;
 554+ 8F96              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 555+ 8F96              ;
 556+ 8F96              ;	(Numero_parcial_de_entidades)="7".
 557+ 8F96              ;
 558+ 8F96              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 559+ 8F96              ;
 560+ 8F96              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 561+ 8F96              ;
 562+ 8F96              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 563+ 8F96              ;	MODIFICA: A y B.
 564+ 8F96              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 565+ 8F96
 566+ 8F96              Inicializa_Numero_parcial_de_entidades
 567+ 8F96
 568+ 8F96              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 569+ 8F96
 570+ 8F96 3A DB 89     	ld a,(Numero_de_entidades)
 571+ 8F99 A7           	and a
 572+ 8F9A
 573+ 8F9A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 574+ 8F9A              ;	jr z,$
 575+ 8F9A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 576+ 8F9A
 577+ 8F9A 20 03        	jr nz,3F
 578+ 8F9C
 579+ 8F9C              ; ---------- ---------- ----------
 580+ 8F9C
 581+ 8F9C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 582+ 8F9C              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 583+ 8F9C
 584+ 8F9C CD BA 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 585+ 8F9F
 586+ 8F9F              ; ---------- ---------- ----------
 587+ 8F9F
 588+ 8F9F 3A DB 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 589+ 8FA2 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 590+ 8FA4 38 08        	jr c,1F
 591+ 8FA6
 592+ 8FA6              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 593+ 8FA6              ; Actualizamos variables.
 594+ 8FA6
 595+ 8FA6 3E 07        	ld a,7
 596+ 8FA8 32 DC 89     	ld (Numero_parcial_de_entidades),a
 597+ 8FAB 47           	ld b,a
 598+ 8FAC 18 04        	jr 2F
 599+ 8FAE
 600+ 8FAE              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 601+ 8FAE              ; (Numero_de_entidades)="0".
 602+ 8FAE
 603+ 8FAE 32 DC 89     1 ld (Numero_parcial_de_entidades),a
 604+ 8FB1 47           	ld b,a
 605+ 8FB2 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1861  8FB3              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8FB3              ; ******************************************************************************************************************************************************************************************
   2+ 8FB3              ;
   3+ 8FB3              ; 26/06/23
   4+ 8FB3              ;
   5+ 8FB3              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8FB3
   7+ 8FB3              Draw
   8+ 8FB3
   9+ 8FB3 CD A0 92     	call Prepara_draw
  10+ 8FB6 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8FB7 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8FB8 28 05        	jr z,2F
  13+ 8FBA
  14+ 8FBA 3A 9F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8FBD 18 0C        	jr 1F
  16+ 8FBF
  17+ 8FBF 2A 9D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8FC2 22 8D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8FC5 CD 54 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8FC8              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8FC8
  22+ 8FC8 CD ED 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8FCB
  24+ 8FCB 3A AD 89     1 ld a,(Ctrl_0)
  25+ 8FCE CB 6F        	bit 5,a
  26+ 8FD0 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8FD2
  28+ 8FD2 CD EA 8F     	call Comprueba_limite_horizontal
  29+ 8FD5 CD 7A 90     	call Comprueba_limite_vertical
  30+ 8FD8
  31+ 8FD8              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8FD8              ; -----------------------
  33+ 8FD8              ; -----------------------
  34+ 8FD8              ; -----------------------
  35+ 8FD8
  36+ 8FD8 CD D0 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8FDB CD 07 92     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8FDE CD 66 92     	call Define_rutina_de_impresion
  39+ 8FE1
  40+ 8FE1 3A AD 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8FE4 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8FE6 32 AD 89     	ld (Ctrl_0),a
  43+ 8FE9
  44+ 8FE9 C9           	ret
  45+ 8FEA
  46+ 8FEA              ; *******************************************************************************************************************************************************************************************
  47+ 8FEA              ;	21/01/23
  48+ 8FEA              ;
  49+ 8FEA              ; 	Comprueba_limite_horizontal.
  50+ 8FEA              ;
  51+ 8FEA              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8FEA              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8FEA              ;
  54+ 8FEA              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8FEA              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8FEA              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8FEA              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8FEA
  59+ 8FEA
  60+ 8FEA
  61+ 8FEA 3A AD 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8FED CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8FEF 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8FF1 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8FF3 32 AD 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8FF6 18 09            jr 6F
  67+ 8FF8 CB 5F        1 bit 3,a
  68+ 8FFA 28 0A            jr z,2F
  69+ 8FFC E6 F7            and $f7
  70+ 8FFE 32 AD 89         ld (Ctrl_0),a
  71+ 9001 CD 54 91     6 call Inicializacion
  72+ 9004 18 5B            jr 5F
  73+ 9006 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9007
  75+ 9007              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9007              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9007
  78+ 9007 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9008 2A AF 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 900B CD 82 9F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 900E 67           	ld h,a
  82+ 900F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9010 CD 82 9F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9013 67           	ld h,a
  85+ 9014 A7           	and a
  86+ 9015 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9017 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9018 3A 9F 89     	ld a,(Cuad_objeto)
  89+ 901B FE 02        	cp 2
  90+ 901D 38 1E        	jr c,3F
  91+ 901F 28 1C        	jr z,3F
  92+ 9021 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9022 28 23            jr z,7F
  94+ 9024 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9026 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9028 E1           	pop hl
  97+ 9029
  98+ 9029              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9029              ; _para indicar con E="2" en caso necesario.
 100+ 9029
 101+ 9029 E5               push hl
 102+ 902A C5               push bc
 103+ 902B CD 82 9F     	call calcula_tercio
 104+ 902E FE 01        	cp 1
 105+ 9030 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9032 CD 62 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9035 28 26            jr z,9F
 108+ 9037 38 24            jr c,9F
 109+ 9039 1E 00        11 ld e,0
 110+ 903B 18 22            jr 8F
 111+ 903D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 903E 28 07        	jr z, 7F
 113+ 9040 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9042 1E 00         	ld e,0
 115+ 9044 E1           	pop hl
 116+ 9045 18 04        	jr 4F
 117+ 9047 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9049 18 15            jr 10F
 119+ 904B
 120+ 904B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 904B              ; _para indicar con E="2" en caso necesario.
 122+ 904B
 123+ 904B E5           4 push hl
 124+ 904C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 904D CD 82 9F     	call calcula_tercio
 126+ 9050 FE 01        	cp 1
 127+ 9052 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9054 CD 62 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9057 28 04            jr z,9F
 130+ 9059 30 02            jr nc,9F
 131+ 905B 18 02        	jr 8F
 132+ 905D 1E 02        9 ld e,2
 133+ 905F C1           8 pop bc
 134+ 9060 E1           10 pop hl
 135+ 9061 C9           5 ret
 136+ 9062
 137+ 9062              ; --------------------
 138+ 9062              ;
 139+ 9062              ; 25/08/22
 140+ 9062
 141+ 9062 CD 82 9F     Comprueba_centro call calcula_tercio
 142+ 9065 67               ld h,a
 143+ 9066 08           	ex af,af
 144+ 9067 FE 02        	cp 2
 145+ 9069 38 07        	jr c,1F
 146+ 906B 28 05        	jr z,1F
 147+ 906D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9070 18 03        	jr 2F
 149+ 9072 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9075 08           2 ex af,af
 151+ 9076 A7               and a
 152+ 9077 ED 42            sbc hl,bc
 153+ 9079 C9               ret
 154+ 907A
 155+ 907A              ; *********************************************************************************************************************************************************************************************
 156+ 907A              ;
 157+ 907A              ;   16/8/22
 158+ 907A              ;
 159+ 907A              ;	Comprueba_limite_vertical
 160+ 907A              ;
 161+ 907A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 907A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 907A              ;
 164+ 907A
 165+ 907A 2A 8D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 907D 7D           	ld a,l
 167+ 907E E6 1F        	and $1F
 168+ 9080 57           	ld d,a
 169+ 9081 3A B1 89     	ld a,(Limite_vertical)
 170+ 9084 BA           	cp d 											; Límite - Posición.
 171+ 9085 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9086 3A 9F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 9089 CB 47        	bit 0,a
 174+ 908B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 908D
 176+ 908D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 908D
 178+ 908D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 908E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9090
 181+ 9090              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9090              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9090
 184+ 9090 3A 91 89         ld a,(Coordenada_X)
 185+ 9093 16 0F            ld d,Centro_izquierda
 186+ 9095 A7               and a
 187+ 9096 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 9097 28 1E            jr z,3F
 189+ 9099 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 909B              ;                                                    ; _salimos sin modificar nada.
 191+ 909B 18 0E            jr 2F
 192+ 909D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 909E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 90A0
 195+ 90A0              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 90A0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 90A0
 198+ 90A0 3A 91 89         ld a,(Coordenada_X)
 199+ 90A3 16 10            ld d,Centro_derecha
 200+ 90A5 A7               and a
 201+ 90A6 92               sub d
 202+ 90A7 28 0E            jr z,3F
 203+ 90A9 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 90AB              ;                                                    ; _salimos sin modificar nada.
 205+ 90AB CB 43        2 bit 0,e
 206+ 90AD 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 90AF C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 90B0 CD 44 91         call Modificaccionne
 209+ 90B3 C1           	pop bc
 210+ 90B4 CD 54 91         call Inicializacion
 211+ 90B7 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 90B8
 213+ 90B8              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 90B8
 215+ 90B8 C5           4 push bc
 216+ 90B9 01 8C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 90BC 0A           	ld a,(bc)
 218+ 90BD 3D           	dec a
 219+ 90BE 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 90BF 7D           	ld a,l
 221+ 90C0 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 90C1 CB 47        	bit 0,a
 223+ 90C3 28 03        	jr z,5F
 224+ 90C5 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 90C6 18 2E        	jr 7F
 226+ 90C8
 227+ 90C8              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 90C8
 229+ 90C8 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 90C9 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 90CA 3A AD 89     	ld a,(Ctrl_0)
 232+ 90CD CB 4F        	bit 1,a
 233+ 90CF 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 90D1 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 90D2
 236+ 90D2              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 90D2
 238+ 90D2 1C               inc e
 239+ 90D3 1D               dec e
 240+ 90D4 20 07            jr nz,12F
 241+ 90D6 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 90D7 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 90D8 22 8D 89     	ld (Posicion_actual),hl
 244+ 90DB 18 44        13 jr 9F
 245+ 90DD CB 43        12 bit 0,e
 246+ 90DF 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 90E1              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 90E1 C1           	pop bc
 249+ 90E2 18 D3        	jr 3B
 250+ 90E4 80           14 add b
 251+ 90E5 6F               ld l,a
 252+ 90E6 22 8D 89     	ld (Posicion_actual),hl
 253+ 90E9 CD 44 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 90EC 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 90EE E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 90F0 32 AD 89         ld (Ctrl_0),a
 257+ 90F3 F1           	pop af
 258+ 90F4 18 2B        	jr 9F
 259+ 90F6
 260+ 90F6              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 90F6
 262+ 90F6 F5           7 push af
 263+ 90F7 3A AD 89     	ld a,(Ctrl_0)
 264+ 90FA CB 47        	bit 0,a
 265+ 90FC 20 1D        	jr nz,8F
 266+ 90FE F1           	pop af
 267+ 90FF
 268+ 90FF              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 90FF
 270+ 90FF 1C           	inc e
 271+ 9100 1D               dec e
 272+ 9101 20 07            jr nz,10F
 273+ 9103 90           	sub b
 274+ 9104 6F               ld l,a
 275+ 9105 22 8D 89     	ld (Posicion_actual),hl
 276+ 9108 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 910A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 910A CB 43        10 bit 0,e
 279+ 910C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 910E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 910E C1           	pop bc
 282+ 910F 18 A6        	jr 3B
 283+ 9111 90           16 sub b
 284+ 9112 6F               ld l,a
 285+ 9113 22 8D 89     	ld (Posicion_actual),hl
 286+ 9116 CD 44 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9119 18 06            jr 9F
 288+ 911B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 911D 32 AD 89         ld (Ctrl_0),a
 290+ 9120 F1           	pop af
 291+ 9121 C1           9 pop bc
 292+ 9122 1E 00        	ld e,0
 293+ 9124 CD 54 91         call Inicializacion
 294+ 9127 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9128 08           	ex af,af
 296+ 9129 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 912A 18 8B            jr 3B
 298+ 912C
 299+ 912C              ; --------------------
 300+ 912C
 301+ 912C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 912E CD BB 92     1 call PreviousScan
 303+ 9131 10 FB            djnz 1B
 304+ 9133 22 8D 89     	ld (Posicion_actual),hl
 305+ 9136 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9137 C9           	ret
 307+ 9138
 308+ 9138              ; --------------------
 309+ 9138
 310+ 9138 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 913A CD AC 92     1 call NextScan
 312+ 913D 10 FB            djnz 1B
 313+ 913F 22 8D 89     	ld (Posicion_actual),hl
 314+ 9142 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9143 C9           	ret
 316+ 9144
 317+ 9144              ; --------------------
 318+ 9144              ;
 319+ 9144              ;	22/01/23
 320+ 9144              ;
 321+ 9144              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9144              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9144              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9144
 325+ 9144
 326+ 9144              Modificaccionne
 327+ 9144
 328+ 9144 3A 9F 89     	ld a,(Cuad_objeto)
 329+ 9147 FE 02        	cp 2
 330+ 9149 CC 2C 91         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 914C DC 2C 91         call c,Modifica_Pos_actual
 332+ 914F C8           	ret z
 333+ 9150 CD 38 91         call Modifica_Pos_actual2
 334+ 9153 C9               ret
 335+ 9154
 336+ 9154              ; *************************************************************************************************************************************************************************************************
 337+ 9154              ;
 338+ 9154              ;	13/8/22
 339+ 9154              ;
 340+ 9154              ;	Inicializacion
 341+ 9154              ;
 342+ 9154              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9154              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9154              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9154              ;
 346+ 9154              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9154              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9154              ;	_ desaparece/aparece.
 349+ 9154
 350+ 9154              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9154              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9154              ;
 353+ 9154              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9154              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9154              ; 		   [E] ="0"
 356+ 9154
 357+ 9154              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9154
 359+ 9154 CD 82 9F     Inicializacion call calcula_tercio
 360+ 9157 28 36        	jr z,primit
 361+ 9159 E6 02        	and 2
 362+ 915B 20 07        	jr nz,segmit
 363+ 915D 7D           	ld a,l
 364+ 915E FE 7F        	cp $7f
 365+ 9160 38 2D        	jr c,primit
 366+ 9162 28 2B        	jr z,primit
 367+ 9164 CD CA 91     segmit call column
 368+ 9167 38 13        	jr c,tercuad
 369+ 9169 3E 04        cuarcuad ld a,4
 370+ 916B 32 9F 89     	ld (Cuad_objeto),a
 371+ 916E 21 20 48     	ld hl,$4820
 372+ 9171 22 AF 89     	ld (Limite_horizontal),hl
 373+ 9174 21 B1 89     	ld hl,Limite_vertical
 374+ 9177 36 0D        	ld (hl),$0d
 375+ 9179 08           	ex af,af
 376+ 917A 18 3C        	jr 1F
 377+ 917C              tercuad
 378+ 917C 3E 03        	ld a,3
 379+ 917E 32 9F 89     	ld (Cuad_objeto),a
 380+ 9181 21 20 48     	ld hl,$4820
 381+ 9184 22 AF 89     	ld (Limite_horizontal),hl
 382+ 9187 21 B1 89     	ld hl,Limite_vertical
 383+ 918A 36 12        	ld (hl),$12
 384+ 918C 08           	ex af,af
 385+ 918D 18 29        	jr 1F
 386+ 918F CD CA 91     primit call column
 387+ 9192 38 13        	jr c, primcuad
 388+ 9194              segcuad
 389+ 9194 3E 02        	ld a,2
 390+ 9196 32 9F 89     	ld (Cuad_objeto),a
 391+ 9199 21 C0 4F     	ld hl,$4fc0
 392+ 919C 22 AF 89     	ld (Limite_horizontal),hl
 393+ 919F 21 B1 89     	ld hl,Limite_vertical
 394+ 91A2 36 0D        	ld (hl),$0d
 395+ 91A4 08           	ex af,af
 396+ 91A5 18 11        	jr 1F
 397+ 91A7              primcuad
 398+ 91A7 3E 01        	ld a,1
 399+ 91A9 32 9F 89     	ld (Cuad_objeto),a
 400+ 91AC 21 C0 4F     	ld hl,$4fc0
 401+ 91AF 22 AF 89     	ld (Limite_horizontal),hl
 402+ 91B2 21 B1 89     	ld hl,Limite_vertical
 403+ 91B5 36 12        	ld (hl),$12
 404+ 91B7 08           	ex af,af
 405+ 91B8
 406+ 91B8 C5           1 push bc
 407+ 91B9 E5           	push hl
 408+ 91BA D5           	push de
 409+ 91BB
 410+ 91BB 2A 8D 89     	ld hl,(Posicion_actual)
 411+ 91BE CD A0 9F     	call Genera_coordenadas
 412+ 91C1
 413+ 91C1 D1           	pop de
 414+ 91C2 E1           	pop hl
 415+ 91C3 C1           	pop bc
 416+ 91C4
 417+ 91C4 21 AD 89     	ld hl,Ctrl_0
 418+ 91C7 CB EE        	set 5,(hl)
 419+ 91C9 C9           	ret
 420+ 91CA
 421+ 91CA              ; ------------------------------------------------------------------------------------------------------------------
 422+ 91CA
 423+ 91CA              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 91CA              ;
 425+ 91CA              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 91CA
 427+ 91CA 7D           column ld a,l
 428+ 91CB E6 1F        	and $1f
 429+ 91CD FE 10         	cp $10
 430+ 91CF C9            	ret
 431+ 91D0
 432+ 91D0              ; --------------------------------------------------------------------------------------------------------------------
 433+ 91D0              ;
 434+ 91D0              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 91D0              ;
 436+ 91D0              ; 14/12/22
 437+ 91D0              ;
 438+ 91D0              ;	Modifica: A y BC.
 439+ 91D0
 440+ 91D0 3A 9F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 91D3 E6 01        	and 1
 442+ 91D5 28 17        	jr z,1F
 443+ 91D7
 444+ 91D7              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 91D7
 446+ 91D7 3A 91 89     	ld a,(Coordenada_X)
 447+ 91DA 47           	ld b,a
 448+ 91DB 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 91DC 79           	ld a,c
 450+ 91DD 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 91DE 38 08        	jr c,2F
 452+ 91E0 47           	ld b,a
 453+ 91E1 79           	ld a,c
 454+ 91E2 90           	sub b
 455+ 91E3 32 AE 89     	ld (Columnas),a
 456+ 91E6 18 1B        	jr 4F
 457+ 91E8 79           2 ld a,c
 458+ 91E9 32 AE 89     	ld (Columnas),a
 459+ 91EC 18 15        	jr 4F
 460+ 91EE
 461+ 91EE              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 91EE
 463+ 91EE 3A 91 89     1 ld a,(Coordenada_X)
 464+ 91F1 81           	add c
 465+ 91F2 3D           	dec a
 466+ 91F3 D6 1F        	sub $1f
 467+ 91F5 38 08        	jr c,3F
 468+ 91F7 47           	ld b,a
 469+ 91F8 79           	ld a,c
 470+ 91F9 90           	sub b
 471+ 91FA 32 AE 89     	ld (Columnas),a
 472+ 91FD 18 04        	jr 4F
 473+ 91FF 79           3 ld a,c
 474+ 9200 32 AE 89     	ld (Columnas),a
 475+ 9203 D9           4 exx
 476+ 9204 4F           	ld c,a
 477+ 9205 D9           	exx
 478+ 9206 C9            ret
 479+ 9207
 480+ 9207              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9207              ;
 482+ 9207              ;   19/7/23
 483+ 9207              ;
 484+ 9207              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9207              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9207              ;
 487+ 9207              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9207              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9207              ;
 490+ 9207              ;	DESTRUYE: HL,B Y A.
 491+ 9207
 492+ 9207 3A 9F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 920A FE 02        	cp 2
 494+ 920C 38 18        	jr c,1F
 495+ 920E 28 16        	jr z,1F
 496+ 9210 E6 01        	and 1
 497+ 9212 28 0D        	jr z,3F
 498+ 9214
 499+ 9214              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9214
 501+ 9214 CD 5A 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9217
 503+ 9217 7D           9 ld a,l
 504+ 9218 E6 1F        	and $1f
 505+ 921A 28 2A        	jr z,7F
 506+ 921C 2B           	dec hl
 507+ 921D 10 F8        	djnz 9B
 508+ 921F 18 25        	jr 7F
 509+ 9221
 510+ 9221              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9221
 512+ 9221 2A 8D 89     3 ld hl,(Posicion_actual)
 513+ 9224 18 20        	jr 7F
 514+ 9226
 515+ 9226 28 14        1 jr z,2F
 516+ 9228
 517+ 9228              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9228
 519+ 9228 CD 5A 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 922B
 521+ 922B 7D           4 ld a,l
 522+ 922C E6 1F        	and $1f
 523+ 922E 28 03        	jr z,6F
 524+ 9230 2B           	dec hl
 525+ 9231 10 F8        	djnz 4B
 526+ 9233 06 0F        6 ld b,15
 527+ 9235 CD BB 92     5 call PreviousScan
 528+ 9238 10 FB        	djnz 5B
 529+ 923A 18 0A        	jr 7F
 530+ 923C
 531+ 923C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 923C
 533+ 923C CD 5A 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 923F 06 0F        	ld b,15
 535+ 9241 CD BB 92     8 call PreviousScan
 536+ 9244 10 FB        	djnz 8B
 537+ 9246
 538+ 9246 E5           7 push hl
 539+ 9247 DD E1        	pop ix
 540+ 9249
 541+ 9249 2A 8F 89     	ld hl,(Puntero_objeto)
 542+ 924C E5           	push hl
 543+ 924D FD E1        	pop iy
 544+ 924F
 545+ 924F              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 924F
 547+ 924F 3A AD 89     	ld a,(Ctrl_0)
 548+ 9252 CB 77        	bit 6,a
 549+ 9254 C8           	ret z
 550+ 9255
 551+ 9255              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9255              ; _ entidad / Amadeus´.
 553+ 9255
 554+ 9255 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 9259
 556+ 9259 C9           	ret
 557+ 925A
 558+ 925A              ; --------------------------------------------------------------------------------------------------------------------
 559+ 925A              ;
 560+ 925A              ;	2/1/23
 561+ 925A              ;
 562+ 925A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 925A              ;
 564+ 925A              ;	Tras esta rutina tenemos:
 565+ 925A              ;
 566+ 925A              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 925A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 925A              ;
 569+ 925A              ;	DESTRUYE!!!!! HL,B y A.
 570+ 925A
 571+ 925A 2A 8D 89     Operandos ld hl,(Posicion_actual)
 572+ 925D 3A AE 89     	ld a,(Columnas)
 573+ 9260 3D           	dec a
 574+ 9261 20 01        	jr nz,1F
 575+ 9263 3C           	inc a
 576+ 9264 47           1 ld b,a
 577+ 9265 C9           	ret
 578+ 9266
 579+ 9266              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9266              ;
 581+ 9266              ;	3/1/23
 582+ 9266              ;
 583+ 9266              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9266              ;
 585+ 9266              ;	Destruye: A,B,HL y DE.
 586+ 9266
 587+ 9266              Define_rutina_de_impresion
 588+ 9266
 589+ 9266 3A 8C 89     	ld a,(Columns)
 590+ 9269 47           	ld b,a
 591+ 926A 3A AE 89     	ld a,(Columnas)
 592+ 926D B8           	cp b
 593+ 926E 20 0D        	jr nz,2f
 594+ 9270
 595+ 9270              ;	La entidad se imprime entera.
 596+ 9270
 597+ 9270 21 8F 93     	ld hl, Indice_entidades_completas
 598+ 9273 E6 01        	and 1
 599+ 9275 28 02        	jr z,1F
 600+ 9277
 601+ 9277 23           	inc hl
 602+ 9278 23           	inc hl
 603+ 9279
 604+ 9279 CD 74 8C     1 call Extrae_address
 605+ 927C C9           	ret		;	ret
 606+ 927D
 607+ 927D              ;	La entidad no se imprime entera en pantalla.
 608+ 927D
 609+ 927D 3A 9F 89     2 ld a,(Cuad_objeto)
 610+ 9280 E6 01        	and 1
 611+ 9282 28 17        	jr z,3F
 612+ 9284
 613+ 9284              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9284
 615+ 9284 21 93 93     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9287 3A 8C 89     4 ld a,(Columns)
 617+ 928A E6 01        	and 1
 618+ 928C 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 928E
 620+ 928E 23           	inc hl
 621+ 928F 23           	inc hl
 622+ 9290
 623+ 9290 3A AE 89     	ld a,(Columnas)
 624+ 9293 E6 01        	and 1
 625+ 9295 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 9297
 627+ 9297 23           	inc hl
 628+ 9298 23           	inc hl
 629+ 9299
 630+ 9299 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 929B
 632+ 929B 21 99 93     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 929E 18 E7        	jr 4B
 634+ 92A0
 635+ 92A0              ; --------------------------------------------------------------------------------------------------------------------
 636+ 92A0              ;
 637+ 92A0              ;	Prepara_draw
 638+ 92A0              ;
 639+ 92A0              ;	Es una rutina de carga.
 640+ 92A0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 92A0              ;
 642+ 92A0              ;	FUNCIONAMIENTO:
 643+ 92A0              ;
 644+ 92A0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 92A0              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 92A0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 92A0              ;
 648+ 92A0              ;	DESTRUYE:
 649+ 92A0              ;
 650+ 92A0              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 92A0
 652+ 92A0 21 8B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 92A3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 92A4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 92A5 4E           	ld c,(hl)
 656+ 92A6 2A 8D 89     	ld hl,(Posicion_actual)
 657+ 92A9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 92AB C9           	ret
 659+ 92AC
 660+ 92AC              ;----------------------------------------------------------------------------------------------------------------
 661+ 92AC              ;
 662+ 92AC              ;	5/08/22
 663+ 92AC              ;
 664+ 92AC              ;   NextScan.
 665+ 92AC              ;
 666+ 92AC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 92AC              ;
 668+ 92AC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 92AC              ;
 670+ 92AC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 92AC              ;
 672+ 92AC              ;       DESTRUIDOS: AF y HL !!!
 673+ 92AC              ;
 674+ 92AC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 92AC              ;
 676+ 92AC
 677+ 92AC 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 92AD 7C               ld a,h
 679+ 92AE E6 07            and 7
 680+ 92B0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 92B1
 682+ 92B1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 92B2 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 92B4 6F               ld l,a
 685+ 92B5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 92B6
 687+ 92B6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 92B7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 92B9 67               ld h,a
 690+ 92BA C9               ret
 691+ 92BB
 692+ 92BB              ;----------------------------------------------------------------------------------------------------------------
 693+ 92BB              ;
 694+ 92BB              ;	5/08/22
 695+ 92BB              ;
 696+ 92BB              ;   PreviousScan.
 697+ 92BB              ;
 698+ 92BB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 92BB              ;
 700+ 92BB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 92BB              ;
 702+ 92BB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 92BB              ;
 704+ 92BB              ;       DESTRUIDOS: AF y HL !!!
 705+ 92BB              ;
 706+ 92BB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 92BB              ;
 708+ 92BB
 709+ 92BB 7C           PreviousScan ld a,h
 710+ 92BC 25               dec h               ; Dec H.
 711+ 92BD E6 07            and 7
 712+ 92BF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 92C0
 714+ 92C0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 92C1 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 92C3 6F               ld l,a
 717+ 92C4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 92C5
 719+ 92C5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 92C6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 92C8 67               ld h,a
 722+ 92C9 C9               ret
 723+ 92CA
 724+ 92CA              ; -----------------------------------------------------------------------------------
 725+ 92CA              ;
 726+ 92CA              ;	31/7/23
 727+ 92CA              ;
 728+ 92CA              ;	Rutina principal de pintado de entidades.
 729+ 92CA              ;	Extrae la foto del frame, (entidades).
 730+ 92CA
 731+ 92CA              Extrae_foto_entidades
 732+ 92CA
 733+ 92CA 21 01 80     	ld hl,Album_de_fotos+1
 734+ 92CD 7E           	ld a,(hl)
 735+ 92CE A7           	and a
 736+ 92CF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 92D0
 738+ 92D0              ;	No hay datos, (entidades para pintar en este frame).
 739+ 92D0
 740+ 92D0 3A DE 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 92D3 A7           	and a
 742+ 92D4 C8           	ret z
 743+ 92D5
 744+ 92D5              ; -----------------------------------
 745+ 92D5
 746+ 92D5 ED 73 E3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 92D9 31 00 80     	ld sp,Album_de_fotos
 748+ 92DC
 749+ 92DC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 92DE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 92DF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 92E0
 753+ 92E0 ED 73 E5 89  	ld (Stack_2),sp
 754+ 92E4 ED 7B E3 89  	ld sp,(Stack)
 755+ 92E8
 756+ 92E8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 92E8
 758+ 92E8 3E CD        	ld a,$cd
 759+ 92EA 32 F2 92     	ld (Imprime),a
 760+ 92ED EB           	ex de,hl
 761+ 92EE 22 F3 92     	ld (Imprime+1),hl
 762+ 92F1 EB           	ex de,hl
 763+ 92F2
 764+ 92F2              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 92F2
 766+ 92F2 00 00 00     Imprime db 0,0,0
 767+ 92F5
 768+ 92F5 ED 73 E3 89  	ld (Stack),sp
 769+ 92F9
 770+ 92F9 3A DE 89     	ld a,(Numero_de_malotes)
 771+ 92FC 3D           	dec a
 772+ 92FD 28 09        	jr z,1F
 773+ 92FF 32 DE 89      	ld (Numero_de_malotes),a
 774+ 9302
 775+ 9302 ED 7B E5 89  	ld sp,(Stack_2)
 776+ 9306 18 D4        	jr 2B
 777+ 9308
 778+ 9308 AF           1 xor a
 779+ 9309 32 E5 89     	ld (Stack_2),a
 780+ 930C
 781+ 930C C9           	ret
 782+ 930D
 783+ 930D              ; -----------------------------------------------------------------------------------
 784+ 930D              ;
 785+ 930D              ;	28/2/23
 786+ 930D              ;
 787+ 930D              ;	Pinta los disparos generados.
 788+ 930D
 789+ 930D              Extrae_foto_disparos
 790+ 930D
 791+ 930D 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9310 7E               ld a,(hl)
 793+ 9311 A7               and a
 794+ 9312 C8               ret z
 795+ 9313
 796+ 9313 3A F3 89     	ld a,(Numero_de_disparotes)
 797+ 9316 A7           	and a
 798+ 9317 C8           	ret z
 799+ 9318 ED 73 E3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 931C 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 931F
 802+ 931F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9321 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9322 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9323
 806+ 9323 ED 73 E5 89  	ld (Stack_2),sp
 807+ 9327 ED 7B E3 89  	ld sp,(Stack)
 808+ 932B
 809+ 932B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 932B
 811+ 932B 3E CD        	ld a,$cd
 812+ 932D 32 35 93     	ld (Imprime2),a
 813+ 9330 EB           	ex de,hl
 814+ 9331 22 36 93     	ld (Imprime2+1),hl
 815+ 9334 EB           	ex de,hl
 816+ 9335
 817+ 9335              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9335
 819+ 9335 00 00 00     Imprime2 db 0,0,0
 820+ 9338
 821+ 9338 3A F3 89     	ld a,(Numero_de_disparotes)
 822+ 933B 3D           	dec a
 823+ 933C 28 09        	jr z,1F
 824+ 933E 32 F3 89      	ld (Numero_de_disparotes),a
 825+ 9341
 826+ 9341 ED 7B E5 89  	ld sp,(Stack_2)
 827+ 9345 18 D8        	jr 2B
 828+ 9347
 829+ 9347 AF           1 xor a
 830+ 9348 32 E5 89     	ld (Stack_2),a
 831+ 934B C9           	ret
 832+ 934C
 833+ 934C              ; -----------------------------------------------------------------------------------
 834+ 934C              ;
 835+ 934C              ;	4/9/23
 836+ 934C              ;
 837+ 934C              ;	Rutina principal de pintado de Amadeus.
 838+ 934C              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 934C
 840+ 934C 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 934F 7E           	ld a,(hl)
 842+ 9350 A7           	and a
 843+ 9351 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9352
 845+ 9352 3A DE 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9355 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9356 C8           	ret z
 848+ 9357
 849+ 9357              ; -----------------------------------
 850+ 9357
 851+ 9357 ED 73 E3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 935B 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 935E
 854+ 935E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9360 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9361 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9362
 858+ 9362 ED 73 E5 89  	ld (Stack_2),sp
 859+ 9366 ED 7B E3 89  	ld sp,(Stack)
 860+ 936A
 861+ 936A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 936A
 863+ 936A 3E CD        	ld a,$cd
 864+ 936C 32 74 93     	ld (Imprime_Amadeus),a
 865+ 936F EB           	ex de,hl
 866+ 9370 22 75 93     	ld (Imprime_Amadeus+1),hl
 867+ 9373 EB           	ex de,hl
 868+ 9374
 869+ 9374              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9374
 871+ 9374 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9377
 873+ 9377 ED 73 E3 89  	ld (Stack),sp
 874+ 937B
 875+ 937B 3A DE 89     	ld a,(Numero_de_malotes)
 876+ 937E 3D           	dec a
 877+ 937F 28 09        	jr z,1F
 878+ 9381 32 DE 89      	ld (Numero_de_malotes),a
 879+ 9384
 880+ 9384 ED 7B E5 89  	ld sp,(Stack_2)
 881+ 9388 18 D4        	jr 2B
 882+ 938A
 883+ 938A AF           1 xor a
 884+ 938B 32 E5 89     	ld (Stack_2),a
 885+ 938E
 886+ 938E C9           	ret
# file closed: Draw_XOR.asm
1862  938F              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 938F              ;   índices de Rutinas de impresión.
   2+ 938F
   3+ 938F 9F 93        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9391 B8 93            defw Pinta_Amadeus_3x2
   5+ 9393
   6+ 9393 0E 94        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9395 AE 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9397 62 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9399
  10+ 9399 38 94        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 939B 3C 95            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 939D F0 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 939F
  14+ 939F
  15+ 939F              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 939F              ;
  17+ 939F              ;   12/12/22
  18+ 939F              ;
  19+ 939F              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 939F              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 939F              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 939F              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 939F              ;
  24+ 939F              ;   Modifica: DE y HL.
  25+ 939F
  26+ 939F              Pinta_Amadeus_2x2 ; 1081 t/states
  27+ 939F
  28+ 939F FD E5            push iy
  29+ 93A1 D1               pop de
  30+ 93A2
  31+ 93A2 ED 73 E3 89      ld (Stack),sp
  32+ 93A6 F9           	ld sp,hl
  33+ 93A7 06 10            ld b,16
  34+ 93A9
  35+ 93A9 E1           1 pop hl
  36+ 93AA
  37+ 93AA 1A               ld a,(de)
  38+ 93AB 77               ld (hl),a
  39+ 93AC 1C           	inc e
  40+ 93AD 2C               inc l
  41+ 93AE 1A               ld a,(de)
  42+ 93AF 77               ld (hl),a
  43+ 93B0 1C               inc e
  44+ 93B1
  45+ 93B1 10 F6            djnz 1B
  46+ 93B3
  47+ 93B3 ED 7B E3 89      ld sp,(Stack)
  48+ 93B7
  49+ 93B7 C9           	ret
  50+ 93B8
  51+ 93B8              Pinta_Amadeus_3x2
  52+ 93B8
  53+ 93B8              ;    jr $
  54+ 93B8
  55+ 93B8 ED 73 E3 89      ld (Stack),sp
  56+ 93BC FD F9        	ld sp,iy
  57+ 93BE 06 08            ld b,8
  58+ 93C0 D1           1 pop de
  59+ 93C1 7B               ld a,e
  60+ 93C2 AE               xor (hl)
  61+ 93C3 77           	ld (hl),a
  62+ 93C4 23           	inc hl
  63+ 93C5 7A               ld a,d
  64+ 93C6 AE               xor (hl)
  65+ 93C7 77           	ld (hl),a
  66+ 93C8 23           	inc hl
  67+ 93C9 D1           	pop de
  68+ 93CA 7B               ld a,e
  69+ 93CB AE               xor (hl)
  70+ 93CC 77           	ld (hl),a
  71+ 93CD 2B           	dec hl
  72+ 93CE 2B           	dec hl
  73+ 93CF 24           	inc h
  74+ 93D0 7C               ld a,h
  75+ 93D1 E6 07            and 7
  76+ 93D3 20 0A            jr nz,2F
  77+ 93D5 7D               ld a,l
  78+ 93D6 C6 20            add a,$20
  79+ 93D8 6F               ld l,a
  80+ 93D9 38 04            jr c,2F
  81+ 93DB 7C               ld a,h
  82+ 93DC D6 08            sub 8
  83+ 93DE 67               ld h,a
  84+ 93DF 7C           2 ld a,h
  85+ 93E0 FE 58            cp $58
  86+ 93E2 28 25            jr z,4F
  87+ 93E4 7A               ld a,d
  88+ 93E5 AE               xor (hl)
  89+ 93E6 77               ld (hl),a
  90+ 93E7 D1           	pop de
  91+ 93E8 23           	inc hl
  92+ 93E9 7B               ld a,e
  93+ 93EA AE               xor (hl)
  94+ 93EB 77           	ld (hl),a
  95+ 93EC 23           	inc hl
  96+ 93ED 7A               ld a,d
  97+ 93EE AE               xor (hl)
  98+ 93EF 77           	ld (hl),a
  99+ 93F0 2B           	dec hl
 100+ 93F1 2B           	dec hl
 101+ 93F2 24           	inc h
 102+ 93F3 7C               ld a,h
 103+ 93F4 E6 07            and 7
 104+ 93F6 20 0A            jr nz,3F
 105+ 93F8 7D               ld a,l
 106+ 93F9 C6 20            add a,$20
 107+ 93FB 6F               ld l,a
 108+ 93FC 38 04            jr c,3F
 109+ 93FE 7C               ld a,h
 110+ 93FF D6 08            sub 8
 111+ 9401 67               ld h,a
 112+ 9402 7C           3 ld a,h
 113+ 9403 FE 58            cp $58
 114+ 9405 28 02            jr z,4F
 115+ 9407 10 B7            djnz 1B
 116+ 9409 ED 7B E3 89  4 ld sp,(Stack)
 117+ 940D C9           	ret
 118+ 940E
 119+ 940E              ; ---------------------------------------------------
 120+ 940E
 121+ 940E ED 73 E3 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 122+ 9412 FD F9        	ld sp,iy
 123+ 9414
 124+ 9414              ; >>>
 125+ 9414
 126+ 9414 06 10            ld b,16
 127+ 9416 D1           1 pop de
 128+ 9417 7A           	ld a,d
 129+ 9418 AE           	xor (hl)
 130+ 9419 77           	ld (hl),a
 131+ 941A 24           	inc h
 132+ 941B 7C               ld a,h
 133+ 941C E6 07            and 7
 134+ 941E 20 0C            jr nz,2F
 135+ 9420 7D               ld a,l
 136+ 9421 C6 20            add a,$20
 137+ 9423 6F               ld l,a
 138+ 9424 38 06            jr c,2F
 139+ 9426 7C               ld a,h
 140+ 9427 D6 08            sub 8
 141+ 9429 67               ld h,a
 142+ 942A 18 00            jr 2F
 143+ 942C 7C           2 ld a,h
 144+ 942D FE 58            cp $58
 145+ 942F 28 02            jr z,3F
 146+ 9431 10 E3            djnz 1B
 147+ 9433 ED 7B E3 89  3 ld sp,(Stack)
 148+ 9437 C9           	ret
 149+ 9438
 150+ 9438 ED 73 E3 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 151+ 943C FD F9        	ld sp,iy
 152+ 943E
 153+ 943E              ; >>>
 154+ 943E
 155+ 943E 06 10            ld b,16
 156+ 9440 D1           1 pop de
 157+ 9441 7B           	ld a,e
 158+ 9442 AE           	xor (hl)
 159+ 9443 77           	ld (hl),a
 160+ 9444 24           	inc h
 161+ 9445 7C               ld a,h
 162+ 9446 E6 07            and 7
 163+ 9448 20 0C            jr nz,2F
 164+ 944A 7D               ld a,l
 165+ 944B C6 20            add a,$20
 166+ 944D 6F               ld l,a
 167+ 944E 38 06            jr c,2F
 168+ 9450 7C               ld a,h
 169+ 9451 D6 08            sub 8
 170+ 9453 67               ld h,a
 171+ 9454 18 00            jr 2F
 172+ 9456 7C           2 ld a,h
 173+ 9457 FE 58            cp $58
 174+ 9459 28 02            jr z,3F
 175+ 945B 10 E3            djnz 1B
 176+ 945D ED 7B E3 89  3 ld sp,(Stack)
 177+ 9461 C9           	ret
 178+ 9462
 179+ 9462              ; ---------------------------------------------------
 180+ 9462
 181+ 9462 ED 73 E3 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 182+ 9466 FD F9        	ld sp,iy
 183+ 9468 06 08            ld b,8
 184+ 946A D1           1 pop de
 185+ 946B 7A           	ld a,d
 186+ 946C AE           	xor (hl)
 187+ 946D 77           	ld (hl),a
 188+ 946E 23           	inc hl
 189+ 946F D1           	pop de
 190+ 9470 7B           	ld a,e
 191+ 9471 AE           	xor (hl)
 192+ 9472 77           	ld (hl),a
 193+ 9473 2B           	dec hl
 194+ 9474 24            	inc h
 195+ 9475 7C               ld a,h
 196+ 9476 E6 07            and 7
 197+ 9478 20 0A            jr nz,2F
 198+ 947A 7D               ld a,l
 199+ 947B C6 20            add a,$20
 200+ 947D 6F               ld l,a
 201+ 947E 38 04            jr c,2F
 202+ 9480 7C               ld a,h
 203+ 9481 D6 08            sub 8
 204+ 9483 67               ld h,a
 205+ 9484 7C           2 ld a,h
 206+ 9485 FE 58            cp $58
 207+ 9487 28 20            jr z,4F
 208+ 9489 D1               pop de
 209+ 948A 7B           	ld a,e
 210+ 948B AE           	xor (hl)
 211+ 948C 77           	ld (hl),a
 212+ 948D 23           	inc hl
 213+ 948E 7A           	ld a,d
 214+ 948F AE           	xor (hl)
 215+ 9490 77           	ld (hl),a
 216+ 9491 2B           	dec hl
 217+ 9492 24           	inc h
 218+ 9493 7C               ld a,h
 219+ 9494 E6 07            and 7
 220+ 9496 20 0A            jr nz,3F
 221+ 9498 7D               ld a,l
 222+ 9499 C6 20            add a,$20
 223+ 949B 6F               ld l,a
 224+ 949C 38 04            jr c,3F
 225+ 949E 7C               ld a,h
 226+ 949F D6 08            sub 8
 227+ 94A1 67               ld h,a
 228+ 94A2 7C           3 ld a,h
 229+ 94A3 FE 58            cp $58
 230+ 94A5 28 02            jr z,4F
 231+ 94A7 10 C1            djnz 1B
 232+ 94A9 ED 7B E3 89  4 ld sp,(Stack)
 233+ 94AD C9           	ret
 234+ 94AE
 235+ 94AE ED 73 E3 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 236+ 94B2 FD F9        	ld sp,iy
 237+ 94B4 06 08            ld b,8
 238+ 94B6 D1           1 pop de
 239+ 94B7 D1           	pop de
 240+ 94B8 7B           	ld a,e
 241+ 94B9 AE           	xor (hl)
 242+ 94BA 77           	ld (hl),a
 243+ 94BB 24            	inc h
 244+ 94BC 7C               ld a,h
 245+ 94BD E6 07            and 7
 246+ 94BF 20 0A            jr nz,2F
 247+ 94C1 7D               ld a,l
 248+ 94C2 C6 20            add a,$20
 249+ 94C4 6F               ld l,a
 250+ 94C5 38 04            jr c,2F
 251+ 94C7 7C               ld a,h
 252+ 94C8 D6 08            sub 8
 253+ 94CA 67               ld h,a
 254+ 94CB 7C           2 ld a,h
 255+ 94CC FE 58            cp $58
 256+ 94CE 28 1B            jr z,4F
 257+ 94D0 D1               pop de
 258+ 94D1 7A           	ld a,d
 259+ 94D2 AE           	xor (hl)
 260+ 94D3 77           	ld (hl),a
 261+ 94D4 24           	inc h
 262+ 94D5 7C               ld a,h
 263+ 94D6 E6 07            and 7
 264+ 94D8 20 0A            jr nz,3F
 265+ 94DA 7D               ld a,l
 266+ 94DB C6 20            add a,$20
 267+ 94DD 6F               ld l,a
 268+ 94DE 38 04            jr c,3F
 269+ 94E0 7C               ld a,h
 270+ 94E1 D6 08            sub 8
 271+ 94E3 67               ld h,a
 272+ 94E4 7C           3 ld a,h
 273+ 94E5 FE 58            cp $58
 274+ 94E7 28 02            jr z,4F
 275+ 94E9 10 CB            djnz 1B
 276+ 94EB ED 7B E3 89  4 ld sp,(Stack)
 277+ 94EF C9           	ret
 278+ 94F0
 279+ 94F0 ED 73 E3 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 280+ 94F4 FD F9        	ld sp,iy
 281+ 94F6 06 08            ld b,8
 282+ 94F8 D1           1 pop de
 283+ 94F9 7B           	ld a,e
 284+ 94FA AE           	xor (hl)
 285+ 94FB 77           	ld (hl),a
 286+ 94FC 23           	inc hl
 287+ 94FD 7A           	ld a,d
 288+ 94FE AE           	xor (hl)
 289+ 94FF 77           	ld (hl),a
 290+ 9500 2B           	dec hl
 291+ 9501 24             	inc h
 292+ 9502 7C               ld a,h
 293+ 9503 E6 07            and 7
 294+ 9505 20 0A            jr nz,2F
 295+ 9507 7D               ld a,l
 296+ 9508 C6 20            add a,$20
 297+ 950A 6F               ld l,a
 298+ 950B 38 04            jr c,2F
 299+ 950D 7C               ld a,h
 300+ 950E D6 08            sub 8
 301+ 9510 67               ld h,a
 302+ 9511 7C           2 ld a,h
 303+ 9512 FE 58            cp $58
 304+ 9514 28 21            jr z,4F
 305+ 9516 D1               pop de
 306+ 9517 7A           	ld a,d
 307+ 9518 AE           	xor (hl)
 308+ 9519 77           	ld (hl),a
 309+ 951A 23           	inc hl
 310+ 951B D1               pop de
 311+ 951C 7B           	ld a,e
 312+ 951D AE           	xor (hl)
 313+ 951E 77           	ld (hl),a
 314+ 951F 2B           	dec hl
 315+ 9520 24           	inc h
 316+ 9521 7C               ld a,h
 317+ 9522 E6 07            and 7
 318+ 9524 20 0A            jr nz,3F
 319+ 9526 7D               ld a,l
 320+ 9527 C6 20            add a,$20
 321+ 9529 6F               ld l,a
 322+ 952A 38 04            jr c,3F
 323+ 952C 7C               ld a,h
 324+ 952D D6 08            sub 8
 325+ 952F 67               ld h,a
 326+ 9530 7C           3 ld a,h
 327+ 9531 FE 58            cp $58
 328+ 9533 28 02            jr z,4F
 329+ 9535 10 C1            djnz 1B
 330+ 9537 ED 7B E3 89  4 ld sp,(Stack)
 331+ 953B C9           	ret
 332+ 953C
 333+ 953C ED 73 E3 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 334+ 9540 FD F9        	ld sp,iy
 335+ 9542 06 08            ld b,8
 336+ 9544 D1           1 pop de
 337+ 9545 7B           	ld a,e
 338+ 9546 AE           	xor (hl)
 339+ 9547 77           	ld (hl),a
 340+ 9548 24            	inc h
 341+ 9549 7C               ld a,h
 342+ 954A E6 07            and 7
 343+ 954C 20 0A            jr nz,2F
 344+ 954E 7D               ld a,l
 345+ 954F C6 20            add a,$20
 346+ 9551 6F               ld l,a
 347+ 9552 38 04            jr c,2F
 348+ 9554 7C               ld a,h
 349+ 9555 D6 08            sub 8
 350+ 9557 67               ld h,a
 351+ 9558 7C           2 ld a,h
 352+ 9559 FE 58            cp $58
 353+ 955B 28 1C            jr z,4F
 354+ 955D D1               pop de
 355+ 955E 7A           	ld a,d
 356+ 955F AE           	xor (hl)
 357+ 9560 77           	ld (hl),a
 358+ 9561 24           	inc h
 359+ 9562 7C               ld a,h
 360+ 9563 E6 07            and 7
 361+ 9565 20 0A            jr nz,3F
 362+ 9567 7D               ld a,l
 363+ 9568 C6 20            add a,$20
 364+ 956A 6F               ld l,a
 365+ 956B 38 04            jr c,3F
 366+ 956D 7C               ld a,h
 367+ 956E D6 08            sub 8
 368+ 9570 67               ld h,a
 369+ 9571 7C           3 ld a,h
 370+ 9572 FE 58            cp $58
 371+ 9574 28 03            jr z,4F
 372+ 9576 D1               pop de
 373+ 9577 10 CB            djnz 1B
 374+ 9579 ED 7B E3 89  4 ld sp,(Stack)
 375+ 957D C9           	ret
 376+ 957E
 377+ 957E              ; ---------------------------------------------------
 378+ 957E              ;
 379+ 957E              ;   27/02/23
 380+ 957E              ;
 381+ 957E              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 382+ 957E              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 383+ 957E              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 384+ 957E
 385+ 957E ED 73 E3 89  Pinta_Disparo ld (Stack),sp
 386+ 9582 FD F9            ld sp,iy
 387+ 9584 06 03            ld b,3
 388+ 9586 D1           1 pop de
 389+ 9587 7B               ld a,e
 390+ 9588 AE               xor (hl)
 391+ 9589 77               ld (hl),a
 392+ 958A 23               inc hl
 393+ 958B 7A               ld a,d
 394+ 958C AE               xor (hl)
 395+ 958D 77               ld (hl),a
 396+ 958E 2B               dec hl
 397+ 958F
 398+ 958F 24               inc h
 399+ 9590 7C               ld a,h
 400+ 9591 E6 07            and 7
 401+ 9593 20 0A            jr nz,2F
 402+ 9595 7D               ld a,l
 403+ 9596 C6 20            add a,$20
 404+ 9598 6F               ld l,a
 405+ 9599 38 04            jr c,2F
 406+ 959B 7C               ld a,h
 407+ 959C D6 08            sub 8
 408+ 959E 67               ld h,a
 409+ 959F 7C           2 ld a,h
 410+ 95A0 FE 58            cp $58
 411+ 95A2 28 02            jr z,3F
 412+ 95A4
 413+ 95A4 10 E0            djnz 1B
 414+ 95A6 ED 7B E3 89  3 ld sp,(Stack)
 415+ 95AA C9               ret
 416+ 95AB
# file closed: Rutinas_de_impresion_sprites.asm
1863  95AB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 95AB
   2+ 95AB              ; ******************************************************************************************************************************************************************************************
   3+ 95AB              ;
   4+ 95AB              ;   20/05/23
   5+ 95AB              ;
   6+ 95AB              ;	Recompone_posicion_inicio
   7+ 95AB              ;
   8+ 95AB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 95AB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 95AB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 95AB              ;	_ a una u otra rutina.
  12+ 95AB
  13+ 95AB              Recompone_posicion_inicio
  14+ 95AB
  15+ 95AB 2A 9D 89     	ld hl,(Posicion_inicio)
  16+ 95AE 7D           	ld a,l
  17+ 95AF E6 1F        	and $1f
  18+ 95B1 28 16        	jr z,1F
  19+ 95B3
  20+ 95B3 FE 1F        	cp $1f
  21+ 95B5 28 0D        	jr z,3F
  22+ 95B7
  23+ 95B7 21 B2 89     	ld hl,Ctrl_2
  24+ 95BA CB C6        	set 0,(hl)
  25+ 95BC 2A 8F 89     	ld hl,(Puntero_objeto)
  26+ 95BF 22 D3 89     	ld (Repone_puntero_objeto),hl
  27+ 95C2 18 08        	jr 2F
  28+ 95C4
  29+ 95C4 CD 72 97     3 call Mov_left
  30+ 95C7 18 03        	jr 2F
  31+ 95C9
  32+ 95C9 CD 4F 96     1 call Mov_right
  33+ 95CC 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 95CF 22 8F 89     	ld (Puntero_objeto),hl
  35+ 95D2 C9           	ret
  36+ 95D3
  37+ 95D3              ; ******************************************************************************************************************************************************************************************
  38+ 95D3              ;
  39+ 95D3              ;   27/05/23
  40+ 95D3              ;
  41+ 95D3              ;	Mov_down
  42+ 95D3              ;
  43+ 95D3              ; 	Mueve el Sprite X px hacia abajo.
  44+ 95D3              ;
  45+ 95D3              ;
  46+ 95D3              Mov_down
  47+ 95D3
  48+ 95D3 CD 3D 96     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 95D6              ;																	; _ repone (Puntero_objeto).
  50+ 95D6 21 AD 89     	ld hl,Ctrl_0
  51+ 95D9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 95DB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 95DB              ; 																	; _ en el caso de que no lo haya.
  54+ 95DB 3A B7 89     	ld a,(Vel_down)
  55+ 95DE 47           	ld b,a
  56+ 95DF 2A 8D 89         ld hl,(Posicion_actual)
  57+ 95E2 CD 82 9F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 95E5 E6 02        	and 2
  59+ 95E7 28 17        	jr z,1F
  60+ 95E9
  61+ 95E9              ; Nos encontramos en el último tercio de pantalla.
  62+ 95E9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 95E9
  64+ 95E9 7C           	ld a,h
  65+ 95EA FE 57        	cp $57
  66+ 95EC 20 12        	jr nz,1F
  67+ 95EE
  68+ 95EE 7D           	ld a,l
  69+ 95EF C6 20        	add $20
  70+ 95F1 30 0D        	jr nc,1F
  71+ 95F3
  72+ 95F3              ; ------------------------------
  73+ 95F3              ;
  74+ 95F3              ;	12/01/24
  75+ 95F3
  76+ 95F3              ;	call Reaparece_arriba
  77+ 95F3 CD FF 98     	call Reinicio
  78+ 95F6
  79+ 95F6              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 95F6
  81+ 95F6 3A F1 89     	ld a,(Ctrl_3)
  82+ 95F9 CB CF        	set 1,a
  83+ 95FB 32 F1 89     	ld (Ctrl_3),a
  84+ 95FE
  85+ 95FE 18 08        	jr 3F
  86+ 9600              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9600              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9600              ; ------------------------------
  89+ 9600
  90+ 9600 CD AC 92     1 call NextScan
  91+ 9603 22 8D 89     	ld (Posicion_actual),hl
  92+ 9606 10 DA            djnz 2B
  93+ 9608 CD A0 9F     3 call Genera_coordenadas
  94+ 960B C9           	ret
  95+ 960C
  96+ 960C              ; ******************************************************************************************************************************************************************************************
  97+ 960C              ;
  98+ 960C              ;   27/05/23
  99+ 960C              ;
 100+ 960C              ;	Mov_up
 101+ 960C              ;
 102+ 960C              ; 	Mueve el Sprite hacia arriba.
 103+ 960C              ;
 104+ 960C              ;
 105+ 960C              Mov_up
 106+ 960C
 107+ 960C CD 3D 96     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 960F              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 960F 21 AD 89     	ld hl,Ctrl_0
 110+ 9612 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9614              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9614              ; 																		; _ en el caso de que no lo haya.
 113+ 9614 3A B6 89     	ld a,(Vel_up)
 114+ 9617 47           	ld b,a
 115+ 9618 2A 8D 89     	ld hl,(Posicion_actual)
 116+ 961B CD 82 9F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 961E A7           	and a
 118+ 961F 20 10        	jr nz,1F
 119+ 9621
 120+ 9621              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9621              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9621
 123+ 9621 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9622 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9624 20 0B            jr nz,1F
 126+ 9626 7D               ld a,l
 127+ 9627 D6 20            sub $20
 128+ 9629 30 06            jr nc,1F
 129+ 962B 25               dec h
 130+ 962C
 131+ 962C              ; -----------------------------
 132+ 962C CD E0 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 962F              ;	call Reinicio
 134+ 962F              ; -----------------------------
 135+ 962F
 136+ 962F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9631 CD BB 92     1 call PreviousScan
 138+ 9634 22 8D 89     	ld (Posicion_actual),hl
 139+ 9637 10 E2            djnz 3B
 140+ 9639 CD A0 9F     2 call Genera_coordenadas
 141+ 963C C9           	ret
 142+ 963D
 143+ 963D              ; -----------------------------
 144+ 963D              ;
 145+ 963D              ;	27/5/23
 146+ 963D              ;
 147+ 963D              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 963D              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 963D              ;
 150+ 963D              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 963D              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 963D              ;
 153+ 963D              ;	Modifica: A y (Puntero_objeto).
 154+ 963D
 155+ 963D 3A B2 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9640 CB 47        	bit 0,a
 157+ 9642 C8           	ret z
 158+ 9643 CB 87        	res 0,a
 159+ 9645 32 B2 89     	ld (Ctrl_2),a
 160+ 9648 2A D3 89     	ld hl,(Repone_puntero_objeto)
 161+ 964B 22 8F 89     	ld (Puntero_objeto),hl
 162+ 964E C9           	ret
 163+ 964F
 164+ 964F              ; ******************************************************************************************************************************************************************************************
 165+ 964F              ;
 166+ 964F              ;	19/10/22
 167+ 964F              ;
 168+ 964F              ;	Mov_right.
 169+ 964F              ;
 170+ 964F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 964F              ;
 172+ 964F
 173+ 964F 3A AD 89     Mov_right ld a,(Ctrl_0)
 174+ 9652 CB 77        	bit 6,a
 175+ 9654 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9656
 177+ 9656 CD 8E 98     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9659 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 965A
 180+ 965A 21 AD 89     	ld hl,Ctrl_0
 181+ 965D CB E6        	set 4,(hl)
 182+ 965F 18 52        	jr 8F
 183+ 9661
 184+ 9661 21 AD 89     10 ld hl,Ctrl_0
 185+ 9664 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9666              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9666              ; 																	; _ en el caso de que no lo haya.
 188+ 9666 3A 91 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9669 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 966B 20 46        	jr nz,8F
 191+ 966D
 192+ 966D 3A 93 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9670 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9671 28 40        	jr z,8F
 195+ 9673
 196+ 9673              ; ---------- ---------- ----------
 197+ 9673              ;
 198+ 9673              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9673
 200+ 9673 3A B5 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9676 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9678 28 11        	jr z,1F
 203+ 967A 38 06        	jr c,6F
 204+ 967C FE 04        	cp 4
 205+ 967E 28 14        	jr z,7F
 206+ 9680 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9682
 208+ 9682              ; ---------- ---------- ----------
 209+ 9682              ;
 210+ 9682              ; Perfiles de velocidad
 211+ 9682              ;
 212+ 9682
 213+ 9682 3A 93 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9685 FE FE        	cp $fe
 215+ 9687 20 2A        	jr nz,8F
 216+ 9689 18 10        	jr 3F
 217+ 968B 3A 93 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 968E FE FD        	cp $fd
 219+ 9690 20 21        	jr nz,8F
 220+ 9692 18 07        	jr 3F
 221+ 9694 3A 93 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9697 FE FB        	cp $fb
 223+ 9699 20 18        	jr nz,8F
 224+ 969B
 225+ 969B              ; ---------- ---------- ----------
 226+ 969B
 227+ 969B              3
 228+ 969B CD CE 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 969E              ;	call Reinicio
 230+ 969E
 231+ 969E              ; ---------- ---------- ----------
 232+ 969E              ;
 233+ 969E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 969E
 235+ 969E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 96A0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 96A1 CD BA 96     	call DESPLZ_DER
 238+ 96A4 C1           	pop bc
 239+ 96A5 10 F9        	djnz 5B
 240+ 96A7 2A 8D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 96AA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 96AB 22 8D 89     	ld (Posicion_actual),hl
 243+ 96AE CD A0 9F     	call Genera_coordenadas
 244+ 96B1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 96B3
 246+ 96B3              ; ---------- ---------- ----------
 247+ 96B3
 248+ 96B3 2A 8D 89     8 ld hl,(Posicion_actual)
 249+ 96B6 CD BA 96     	call DESPLZ_DER
 250+ 96B9 C9           2 ret
 251+ 96BA
 252+ 96BA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 96BA              ;
 254+ 96BA              ;	22/9/22
 255+ 96BA              ;
 256+ 96BA
 257+ 96BA CD C9 96     DESPLZ_DER call Desplaza_derecha
 258+ 96BD CD 15 97         call modifica_parametros_1er_DESPLZ_2
 259+ 96C0 CD 3E 97         call Ciclo_completo
 260+ 96C3 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 96C6 CB FE        	set 7,(hl)
 262+ 96C8 C9           	ret
 263+ 96C9
 264+ 96C9              ; ******************************************************************************************************************************************************************************************
 265+ 96C9              ;	15/02/23
 266+ 96C9              ;
 267+ 96C9
 268+ 96C9 3A B5 89     Desplaza_derecha ld a,(Vel_right)
 269+ 96CC 47           	ld b,a
 270+ 96CD 2A 99 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 96D0 23           1 inc hl
 272+ 96D1 23           	inc hl
 273+ 96D2 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 96D4 22 99 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 96D7 CD 74 8C     	call Extrae_address
 276+ 96DA 22 8F 89     	ld (Puntero_objeto),hl
 277+ 96DD
 278+ 96DD              ; Modifica (Puntero_DESPLZ_izq).
 279+ 96DD
 280+ 96DD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 96DD              ; Cuántos movimientos hemos hecho ??
 282+ 96DD              ; DE contiene (Puntero_DESPLZ_der).
 283+ 96DD
 284+ 96DD 2A 95 89     7 ld hl,(Indice_Sprite_der)
 285+ 96E0 EB           	ex de,hl
 286+ 96E1 A7           	and a
 287+ 96E2 ED 52        	sbc hl,de
 288+ 96E4 CB 3D        	srl l
 289+ 96E6 3E 08        6 ld a,8
 290+ 96E8 95           	sub l
 291+ 96E9 30 1E        	jr nc,3F
 292+ 96EB
 293+ 96EB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 96EB              ; B="0".
 295+ 96EB
 296+ 96EB 04           4 inc b
 297+ 96EC 3C           	inc a
 298+ 96ED 20 FC        	jr nz,4B
 299+ 96EF 78           	ld a,b
 300+ 96F0 08           	ex af,af
 301+ 96F1 2A 95 89     	ld hl,(Indice_Sprite_der)
 302+ 96F4 23           5 inc hl
 303+ 96F5 23           	inc hl
 304+ 96F6 10 FC        	djnz 5B
 305+ 96F8 22 99 89     	ld (Puntero_DESPLZ_der),hl
 306+ 96FB CD 74 8C     	call Extrae_address
 307+ 96FE 22 8F 89     	ld (Puntero_objeto),hl
 308+ 9701
 309+ 9701              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9701              ; _(Posicion_actual).
 311+ 9701
 312+ 9701 21 8D 89     	ld hl,Posicion_actual
 313+ 9704 34           	inc (hl)
 314+ 9705 08               ex af,af
 315+ 9706 6F           	ld l,a
 316+ 9707 18 DD        	jr 6B
 317+ 9709
 318+ 9709              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9709
 320+ 9709 47           3 ld b,a
 321+ 970A 2A 97 89     	ld hl,(Indice_Sprite_izq)
 322+ 970D 23           2 inc hl
 323+ 970E 23           	inc hl
 324+ 970F 10 FC        	djnz 2B
 325+ 9711 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9714 C9           8 ret
 327+ 9715
 328+ 9715              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9715              ;
 330+ 9715              ;	24/7/22
 331+ 9715              ;
 332+ 9715              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9715              ;
 334+ 9715              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9715              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9715              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9715
 338+ 9715 3A 93 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9718 A7           	and a
 340+ 9719 20 1F        	jr nz,1F
 341+ 971B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 971D 32 93 89         ld (CTRL_DESPLZ),a
 343+ 9720
 344+ 9720 21 8C 89     	ld hl,Columns
 345+ 9723 34           	inc (hl)
 346+ 9724 3A 9F 89     	ld a,(Cuad_objeto)
 347+ 9727 E6 01        	and 1
 348+ 9729 28 0F        	jr z,1F
 349+ 972B 2A 8D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 972E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 972F 22 8D 89     	ld (Posicion_actual),hl
 352+ 9732 CD A0 9F     	call Genera_coordenadas
 353+ 9735 CD 9A 98     	call Inc_CTRL_DESPLZ
 354+ 9738 18 03        	jr 2F
 355+ 973A CD 9A 98     1 call Inc_CTRL_DESPLZ
 356+ 973D C9           2 ret
 357+ 973E
 358+ 973E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 973E              ;
 360+ 973E              ;	24/7/22
 361+ 973E              ;
 362+ 973E              ;	Ciclo_completo.
 363+ 973E              ;
 364+ 973E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 973E              ;
 366+ 973E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 973E              ; 	Decrementamos (Columns).
 368+ 973E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 973E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 973E
 371+ 973E
 372+ 973E 3A 93 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9741 FE FF        	cp $ff
 374+ 9743 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9745 E6 F0        	and $f0
 376+ 9747 20 28        	jr nz,3F
 377+ 9749
 378+ 9749              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9749
 380+ 9749 3A 93 89     	ld a,(CTRL_DESPLZ)
 381+ 974C 47           	ld b,a
 382+ 974D 3E F8        	ld a,$f8
 383+ 974F 80           	add b
 384+ 9750 32 93 89     	ld (CTRL_DESPLZ),a
 385+ 9753 18 1C        	jr 3F
 386+ 9755 21 8C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9758 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9759 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 975A 32 93 89     	ld (CTRL_DESPLZ),a
 390+ 975D 3A 9F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9760 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9762 20 0A        	jr nz,2F
 393+ 9764 2A 8D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9767 23           	inc hl
 395+ 9768 22 8D 89     	ld (Posicion_actual),hl
 396+ 976B CD A0 9F     	call Genera_coordenadas
 397+ 976E
 398+ 976E              ; Inicia el puntero de Sprite.
 399+ 976E
 400+ 976E CD 89 8C     2 call Inicia_puntero_objeto_der
 401+ 9771 C9           3 ret
 402+ 9772
 403+ 9772              ; ******************************************************************************************************************************************************************************************
 404+ 9772              ;
 405+ 9772              ;	15/02/23
 406+ 9772              ;
 407+ 9772              ;	Mov_left.
 408+ 9772              ;
 409+ 9772              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9772              ;
 411+ 9772              Mov_left
 412+ 9772
 413+ 9772 21 AD 89     	ld hl,Ctrl_0
 414+ 9775 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9777              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9777              ; 																	; _ en el caso de que no lo haya.
 417+ 9777 3A AD 89     	ld a,(Ctrl_0)
 418+ 977A CB 77        	bit 6,a
 419+ 977C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 977E
 421+ 977E CD 94 98     	call Stop_Amadeus_left
 422+ 9781 C8           	ret z
 423+ 9782 20 4A        	jr nz,8F
 424+ 9784
 425+ 9784 3A 91 89     11 ld a,(Coordenada_X)
 426+ 9787 A7           	and a
 427+ 9788 20 44        	jr nz,8F
 428+ 978A
 429+ 978A 3A 93 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 978D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 978E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9790
 433+ 9790              ; ---------- ---------- ----------
 434+ 9790
 435+ 9790 3A B4 89     	ld a,(Vel_left)
 436+ 9793 FE 02        	cp 2
 437+ 9795 28 0F        	jr z,1F
 438+ 9797 38 04        	jr c,6F
 439+ 9799 FE 04        	cp 4
 440+ 979B 28 12        	jr z,7F
 441+ 979D
 442+ 979D              ; ---------- ---------- ----------
 443+ 979D
 444+ 979D 3A 93 89     6 ld a,(CTRL_DESPLZ)
 445+ 97A0 FE F8        	cp $f8
 446+ 97A2 20 2A        	jr nz,8F
 447+ 97A4 18 10        	jr 4F
 448+ 97A6 3A 93 89     1 ld a,(CTRL_DESPLZ)
 449+ 97A9 FE F9        	cp $f9
 450+ 97AB 20 21        	jr nz,8F
 451+ 97AD 18 07        	jr 4F
 452+ 97AF 3A 93 89     7 ld a,(CTRL_DESPLZ)
 453+ 97B2 FE FB        	cp $fb
 454+ 97B4 20 18        	jr nz,8F
 455+ 97B6
 456+ 97B6              ; ---------- ---------- ----------
 457+ 97B6
 458+ 97B6              4
 459+ 97B6 CD BC 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 97B9              ;	call Reinicio
 461+ 97B9
 462+ 97B9              ; ---------- ---------- ----------
 463+ 97B9
 464+ 97B9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 97BB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 97BC
 467+ 97BC              ;	ld hl,(Indice_Sprite_izq)
 468+ 97BC              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 97BC
 470+ 97BC CD D5 97     	call DESPLZ_IZQ
 471+ 97BF C1           	pop bc
 472+ 97C0 10 F9        	djnz 5B
 473+ 97C2 2A 8D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 97C5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 97C6 22 8D 89     	ld (Posicion_actual),hl
 476+ 97C9 CD A0 9F     	call Genera_coordenadas
 477+ 97CC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 97CE
 479+ 97CE              ; ---------- ---------- ----------
 480+ 97CE
 481+ 97CE              ; Movemos, no hay recolocación.
 482+ 97CE
 483+ 97CE 2A 8D 89     8 ld hl,(Posicion_actual)
 484+ 97D1 CD D5 97     	call DESPLZ_IZQ
 485+ 97D4 C9           2 ret
 486+ 97D5
 487+ 97D5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 97D5              ;
 489+ 97D5              ;	22/9/22
 490+ 97D5
 491+ 97D5              DESPLZ_IZQ
 492+ 97D5
 493+ 97D5 CD E4 97     	call Desplaza_izquierda
 494+ 97D8 CD 30 98         call modifica_parametros_1er_DESPLZ
 495+ 97DB CD 58 98     	call Ciclo_completo_2
 496+ 97DE 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 97E1 CB BE        	res 7,(hl)
 498+ 97E3 C9           	ret
 499+ 97E4
 500+ 97E4              Desplaza_izquierda
 501+ 97E4
 502+ 97E4 3A B4 89     	ld a,(Vel_left)
 503+ 97E7 47           	ld b,a
 504+ 97E8 2A 9B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 97EB 23           1 inc hl
 506+ 97EC 23           	inc hl
 507+ 97ED 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 97EF 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 97F2 CD 74 8C     	call Extrae_address
 510+ 97F5 22 8F 89     	ld (Puntero_objeto),hl
 511+ 97F8
 512+ 97F8              ; Modifica (Puntero_DESPLZ_der).
 513+ 97F8
 514+ 97F8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 97F8              ; Cuántos movimientos hemos hecho ??
 516+ 97F8              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 97F8
 518+ 97F8 2A 97 89     7 ld hl,(Indice_Sprite_izq)
 519+ 97FB EB           	ex de,hl
 520+ 97FC A7           	and a
 521+ 97FD ED 52        	sbc hl,de
 522+ 97FF CB 3D        	srl l
 523+ 9801 3E 08        6 ld a,8
 524+ 9803 95           	sub l
 525+ 9804 30 1E        	jr nc,3F
 526+ 9806
 527+ 9806              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9806              ; B="0".
 529+ 9806
 530+ 9806 04           4 inc b
 531+ 9807 3C           	inc a
 532+ 9808 20 FC        	jr nz,4B
 533+ 980A 78           	ld a,b
 534+ 980B 08           	ex af,af
 535+ 980C 2A 97 89     	ld hl,(Indice_Sprite_izq)
 536+ 980F 23           5 inc hl
 537+ 9810 23           	inc hl
 538+ 9811 10 FC        	djnz 5B
 539+ 9813 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9816 CD 74 8C     	call Extrae_address
 541+ 9819 22 8F 89     	ld (Puntero_objeto),hl
 542+ 981C
 543+ 981C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 981C              ; _(Posicion_actual).
 545+ 981C
 546+ 981C 21 8D 89     	ld hl,Posicion_actual
 547+ 981F 35           	dec (hl)
 548+ 9820 08           	ex af,af
 549+ 9821 6F           	ld l,a
 550+ 9822 18 DD        	jr 6B
 551+ 9824
 552+ 9824              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9824
 554+ 9824 47           3 ld b,a
 555+ 9825 2A 95 89     	ld hl,(Indice_Sprite_der)
 556+ 9828 23           2 inc hl
 557+ 9829 23           	inc hl
 558+ 982A 10 FC        	djnz 2B
 559+ 982C 22 99 89     	ld (Puntero_DESPLZ_der),hl
 560+ 982F C9           8 ret
 561+ 9830
 562+ 9830              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9830              ;
 564+ 9830              ;	modifica_parametros_1er_DESPLZ
 565+ 9830              ;
 566+ 9830              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9830              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9830              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9830
 570+ 9830 3A 93 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9833 A7           	and a
 572+ 9834 20 1E        	jr nz,1F
 573+ 9836 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9837 32 93 89         ld (CTRL_DESPLZ),a
 575+ 983A 21 8C 89     	ld hl,Columns
 576+ 983D 34           	inc (hl)
 577+ 983E 3A 9F 89     	ld a,(Cuad_objeto)
 578+ 9841 E6 01        	and 1
 579+ 9843 20 0F        	jr nz,1F
 580+ 9845 2A 8D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9848 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9849 22 8D 89     	ld (Posicion_actual),hl
 583+ 984C CD A0 9F     	call Genera_coordenadas
 584+ 984F CD AB 98     	call Dec_CTRL_DESPLZ
 585+ 9852 18 03        	jr 2F
 586+ 9854 CD AB 98     1 call Dec_CTRL_DESPLZ
 587+ 9857 C9           2 ret
 588+ 9858
 589+ 9858              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9858
 591+ 9858 3A 93 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 985B FE F7        	cp $f7
 593+ 985D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 985F 30 2C        	jr nc,3F
 595+ 9861
 596+ 9861              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9861
 598+ 9861 06 00        	ld b,0
 599+ 9863 04           4 inc b
 600+ 9864 3C           	inc a
 601+ 9865 FE F7        	cp $f7
 602+ 9867 20 FA        	jr nz,4B
 603+ 9869 3E FF        	ld a,$ff
 604+ 986B 90           	sub b
 605+ 986C 32 93 89     	ld (CTRL_DESPLZ),a
 606+ 986F 18 1C        	jr 3F
 607+ 9871
 608+ 9871              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9871
 610+ 9871 21 8C 89     1 ld hl,Columns
 611+ 9874 35           	dec (hl)
 612+ 9875 AF           	xor a
 613+ 9876 32 93 89     	ld (CTRL_DESPLZ),a
 614+ 9879 3A 9F 89     	ld a,(Cuad_objeto)
 615+ 987C E6 01        	and 1
 616+ 987E 28 0A        	jr z,2F
 617+ 9880 2A 8D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9883 2B           	dec hl
 619+ 9884 22 8D 89     	ld (Posicion_actual),hl
 620+ 9887 CD A0 9F     	call Genera_coordenadas
 621+ 988A
 622+ 988A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 988A
 624+ 988A CD 9C 8C     2 call Inicia_puntero_objeto_izq
 625+ 988D C9           3 ret
 626+ 988E
 627+ 988E              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 988E              ;
 629+ 988E              ;	19/10/22
 630+ 988E              ;
 631+ 988E              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 988E              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 988E
 634+ 988E 3A 91 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9891 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9893 C9           	ret
 637+ 9894
 638+ 9894              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9894              ;
 640+ 9894              ;	19/10/22
 641+ 9894              ;
 642+ 9894              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9894              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9894
 645+ 9894 3A 91 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9897 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9899 C9           	ret
 648+ 989A
 649+ 989A              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 989A              ;
 651+ 989A              ;	24/7/22
 652+ 989A              ;
 653+ 989A              ;	Inc_CTRL_DESPLZ
 654+ 989A              ;
 655+ 989A              ;
 656+ 989A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 989A
 658+ 989A 21 93 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 989D 3A B5 89     	ld a,(Vel_right)
 660+ 98A0 A7           	and a
 661+ 98A1 28 06        	jr z,1F
 662+ 98A3 47           	ld b,a
 663+ 98A4 34           3 inc (hl)
 664+ 98A5 10 FD        	djnz 3B
 665+ 98A7 18 01        	jr 2F
 666+ 98A9 34           1 inc (hl)
 667+ 98AA C9           2 ret
 668+ 98AB
 669+ 98AB              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 98AB              ;
 671+ 98AB              ;	5/2/23
 672+ 98AB              ;
 673+ 98AB              ;	Dec_CTRL_DESPLZ
 674+ 98AB              ;
 675+ 98AB              ;
 676+ 98AB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 98AB
 678+ 98AB 21 93 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 98AE 3A B4 89     	ld a,(Vel_left)
 680+ 98B1 A7           	and a
 681+ 98B2 28 06        	jr z,1F
 682+ 98B4 47           	ld b,a
 683+ 98B5 35           3 dec (hl)
 684+ 98B6 10 FD        	djnz 3B
 685+ 98B8 18 01        	jr 2F
 686+ 98BA 35           1 dec (hl)
 687+ 98BB C9           2 ret
 688+ 98BC
 689+ 98BC              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 98BC
 691+ 98BC 2A 8D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 98BF 01 1F 00     	ld bc,31
 693+ 98C2 A7           	and a
 694+ 98C3 ED 4A        	adc hl,bc
 695+ 98C5 22 8D 89     	ld (Posicion_actual),hl
 696+ 98C8 21 AD 89     	ld hl,Ctrl_0														; $xxx1
 697+ 98CB CB C6        	set 0,(hl)
 698+ 98CD C9           	ret
 699+ 98CE
 700+ 98CE              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 98CE
 702+ 98CE 2A 8D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 98D1 01 1F 00     	ld bc,31
 704+ 98D4 A7           	and a
 705+ 98D5 ED 42        	sbc hl,bc
 706+ 98D7 22 8D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 98DA 21 AD 89     	ld hl,Ctrl_0
 708+ 98DD CB CE        	set 1,(hl)
 709+ 98DF C9           	ret
 710+ 98E0
 711+ 98E0              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 98E0
 713+ 98E0 24           Reaparece_abajo inc h
 714+ 98E1 01 E0 17     	ld bc,$17e0
 715+ 98E4 A7           	and a
 716+ 98E5 ED 4A        	adc hl,bc
 717+ 98E7 22 8D 89     	ld (Posicion_actual),hl
 718+ 98EA 21 AD 89     	ld hl,Ctrl_0
 719+ 98ED CB D6        	set 2,(hl)
 720+ 98EF C9           	ret
 721+ 98F0
 722+ 98F0              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 98F0
 724+ 98F0 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 98F3 A7           	and a
 726+ 98F4 ED 42        	sbc hl,bc
 727+ 98F6 22 8D 89     	ld (Posicion_actual),hl
 728+ 98F9 21 AD 89     	ld hl,Ctrl_0
 729+ 98FC CB DE        	set 3,(hl)
 730+ 98FE C9           	ret
 731+ 98FF
 732+ 98FF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 98FF              ;
 734+ 98FF              ;	15/07/23
 735+ 98FF
 736+ 98FF              Reinicio
 737+ 98FF
 738+ 98FF              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 98FF
 740+ 98FF AF           	xor a
 741+ 9900 21 CA 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9903 CD 21 99     	call Limpia_contenido_hl
 743+ 9906
 744+ 9906 21 8D 89     	ld hl,Posicion_actual
 745+ 9909 CD 21 99     	call Limpia_contenido_hl
 746+ 990C
 747+ 990C CD DB 8D     	call Inicializa_Puntero_indice_mov
 748+ 990F CD ED 99     	call Inicia_Puntero_mov
 749+ 9912
 750+ 9912 21 CC 89     	ld hl,Incrementa_puntero
 751+ 9915 06 05        	ld b,5
 752+ 9917 77           1 ld (hl),a
 753+ 9918 23           	inc hl
 754+ 9919 10 FC        	djnz 1B
 755+ 991B
 756+ 991B 21 B2 89     	ld hl,Ctrl_2
 757+ 991E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9920
 759+ 9920 C9           	ret
 760+ 9921
 761+ 9921 77           Limpia_contenido_hl	ld (hl),a
 762+ 9922 23           	inc hl
 763+ 9923 77           	ld (hl),a
 764+ 9924 C9           	ret
 765+ 9925
 766+ 9925
# file closed: Direcciones.asm
1864  9925              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9925              ; ----- ----- ----- ----- -----
   2+ 9925              ;
   3+ 9925              ;   28/12/23
   4+ 9925
   5+ 9925              Movimiento
   6+ 9925
   7+ 9925              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9925
   9+ 9925 3A B2 89         ld a,(Ctrl_2)
  10+ 9928 CB 57            bit 2,a
  11+ 992A 20 1B            jr nz, Desplazamiento_iniciado
  12+ 992C
  13+ 992C 2A C8 89         ld hl,(Puntero_mov)
  14+ 992F 7E               ld a,(hl)
  15+ 9930
  16+ 9930              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9930
  18+ 9930              Inicia_desplazamiento.
  19+ 9930
  20+ 9930              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9930
  22+ 9930 CD 23 9A         call Ajusta_velocidad_desplazamiento
  23+ 9933
  24+ 9933              ; Iniciamos (Repetimos_mov).
  25+ 9933
  26+ 9933 7E               ld a,(hl)
  27+ 9934 E6 0F            and $0f
  28+ 9936 32 CE 89         ld (Repetimos_desplazamiento),a
  29+ 9939 32 CF 89         ld (Repetimos_desplazamiento_backup),a
  30+ 993C
  31+ 993C              ; Iniciamos (Cola_de_desplazamiento).
  32+ 993C
  33+ 993C 23               inc hl
  34+ 993D 7E               ld a,(hl)
  35+ 993E 32 D1 89         ld (Cola_de_desplazamiento),a
  36+ 9941 2B               dec hl
  37+ 9942
  38+ 9942 21 B2 89         ld hl,Ctrl_2
  39+ 9945 CB D6            set 2,(hl)
  40+ 9947
  41+ 9947              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9947              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9947
  44+ 9947              Desplazamiento_iniciado
  45+ 9947
  46+ 9947 CD F7 99         call Aplica_desplazamiento
  47+ 994A
  48+ 994A              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 994A
  50+ 994A 3A F1 89         ld a,(Ctrl_3)
  51+ 994D CB 4F            bit 1,a
  52+ 994F C0               ret nz
  53+ 9950
  54+ 9950 21 CE 89     3 ld hl,Repetimos_desplazamiento
  55+ 9953 35               dec (hl)
  56+ 9954 C0               ret nz
  57+ 9955
  58+ 9955              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9955              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9955              ; Analiza (Cola_de_desplazamiento).
  61+ 9955
  62+ 9955 3A D1 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 9958 A7               and a
  64+ 9959 CC 4C 9A         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 995C 28 30            jr z,Reinicia_el_movimiento
  66+ 995E
  67+ 995E FE FF            cp $ff
  68+ 9960 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9962
  70+ 9962 FE FE            cp $fe
  71+ 9964 CC D1 99         call z,Fijamos_bucle
  72+ 9967 28 25            jr z,Reinicia_el_movimiento
  73+ 9969
  74+ 9969 FE FD            cp $fd
  75+ 996B 20 11            jr nz,1F
  76+ 996D
  77+ 996D              ; ---
  78+ 996D              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 996D
  80+ 996D 3A B2 89         ld a,(Ctrl_2)
  81+ 9970 CB 5F            bit 3,a
  82+ 9972 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9974
  84+ 9974              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9974
  86+ 9974 21 B2 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9977 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9979
  89+ 9979 CD E2 99         call Inicia_Repetimos_movimiento
  90+ 997C 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 997E              ; ---
  92+ 997E
  93+ 997E FE 01        1 cp 1
  94+ 9980 CA BB 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9983
  96+ 9983 3D               dec a
  97+ 9984 32 D1 89         ld (Cola_de_desplazamiento),a
  98+ 9987
  99+ 9987 3A CF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 998A 32 CE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 998D              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 998D C9               ret
 103+ 998E
 104+ 998E              Reinicia_el_movimiento
 105+ 998E
 106+ 998E 3A B2 89         ld a,(Ctrl_2)
 107+ 9991 CB 5F            bit 3,a
 108+ 9993 28 1B            jr z,2F
 109+ 9995
 110+ 9995              ; (Cola_de_desplazamiento)="254".
 111+ 9995
 112+ 9995 21 D0 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9998 35               dec (hl)
 114+ 9999 20 15            jr nz,2F
 115+ 999B
 116+ 999B              ; Fin de las repeticiones del último movimiento.
 117+ 999B
 118+ 999B 21 B2 89         ld hl,Ctrl_2
 119+ 999E CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 99A0
 121+ 99A0 2A C8 89         ld hl,(Puntero_mov)
 122+ 99A3 23               inc hl
 123+ 99A4 23               inc hl
 124+ 99A5 23               inc hl
 125+ 99A6 22 C8 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 99A9              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 99A9 7E               ld a,(hl)
 128+ 99AA 32 D1 89         ld (Cola_de_desplazamiento),a
 129+ 99AD
 130+ 99AD C3 55 99         jp Cola
 131+ 99B0
 132+ 99B0 CD ED 99     2 call Inicia_Puntero_mov
 133+ 99B3
 134+ 99B3 21 B2 89         ld hl,Ctrl_2
 135+ 99B6 CB 96            res 2,(hl)
 136+ 99B8
 137+ 99B8 C3 25 99         jp Movimiento
 138+ 99BB
 139+ 99BB              Siguiente_desplazamiento
 140+ 99BB
 141+ 99BB              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 99BB              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 99BB
 144+ 99BB 21 B2 89         ld hl,Ctrl_2
 145+ 99BE CB 96            res 2,(hl)
 146+ 99C0
 147+ 99C0 2A C8 89         ld hl,(Puntero_mov)
 148+ 99C3 23               inc hl
 149+ 99C4 23               inc hl
 150+ 99C5 22 C8 89         ld (Puntero_mov),hl
 151+ 99C8
 152+ 99C8 7E               ld a,(hl)
 153+ 99C9 A7               and a
 154+ 99CA CC 4C 9A         call z,Incrementa_Puntero_indice_mov
 155+ 99CD CA 8E 99         jp z,Reinicia_el_movimiento
 156+ 99D0
 157+ 99D0 C9               ret
 158+ 99D1
 159+ 99D1              ; Subrutinas -----------------------------------------
 160+ 99D1              ; ---------- --------- --------- ---------- ----------
 161+ 99D1              ;
 162+ 99D1              ;   24/07/23
 163+ 99D1              ;
 164+ 99D1              ;   Fijamos_bucle
 165+ 99D1              ;
 166+ 99D1              ;
 167+ 99D1
 168+ 99D1              Fijamos_bucle
 169+ 99D1
 170+ 99D1 3A CC 89         ld a,(Incrementa_puntero)
 171+ 99D4 3C               inc a
 172+ 99D5 32 CD 89         ld (Incrementa_puntero_backup),a
 173+ 99D8
 174+ 99D8 CD 4C 9A         call Incrementa_Puntero_indice_mov
 175+ 99DB 2A C6 89         ld hl,(Puntero_indice_mov)
 176+ 99DE 22 CA 89         ld (Puntero_indice_mov_bucle),hl
 177+ 99E1 C9               ret
 178+ 99E2
 179+ 99E2              ; ---------- --------- --------- ---------- ----------
 180+ 99E2              ;
 181+ 99E2              ;   07/7/23
 182+ 99E2              ;
 183+ 99E2              ;   Inicia_Repetimos_movimiento
 184+ 99E2              ;
 185+ 99E2              ;
 186+ 99E2
 187+ 99E2              Inicia_Repetimos_movimiento
 188+ 99E2
 189+ 99E2              ; Iniciamos (Repetimos_movimiento).
 190+ 99E2
 191+ 99E2 DD 2A C8 89      ld ix,(Puntero_mov)
 192+ 99E6 DD 7E 02         ld a,(ix+2)
 193+ 99E9 32 D0 89         ld (Repetimos_movimiento),a
 194+ 99EC
 195+ 99EC C9               ret
 196+ 99ED
 197+ 99ED              ; ---------- --------- --------- ---------- ----------
 198+ 99ED              ;
 199+ 99ED              ;   26/6/23
 200+ 99ED              ;
 201+ 99ED              ;   Inicia_Puntero_mov
 202+ 99ED              ;
 203+ 99ED              ;
 204+ 99ED
 205+ 99ED 2A C6 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 99F0 CD 74 8C         call Extrae_address
 207+ 99F3 22 C8 89         ld (Puntero_mov),hl
 208+ 99F6 C9               ret
 209+ 99F7
 210+ 99F7              ; ---------- --------- --------- ---------- ----------
 211+ 99F7              ;
 212+ 99F7              ;   27/06/23
 213+ 99F7              ;
 214+ 99F7              ;   Aplica_movimiento.
 215+ 99F7
 216+ 99F7              Aplica_desplazamiento
 217+ 99F7
 218+ 99F7              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 99F7
 220+ 99F7 2A C8 89         ld hl, (Puntero_mov)
 221+ 99FA
 222+ 99FA 7E               ld a,(hl)
 223+ 99FB E6 F0            and $f0
 224+ 99FD C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 99FE
 226+ 99FE CB 7E            bit 7,(hl)
 227+ 9A00 28 03            jr z,1F
 228+ 9A02 CD 0C 96         call Mov_up
 229+ 9A05 2A C8 89     1 ld hl, (Puntero_mov)
 230+ 9A08 CB 76            bit 6,(hl)
 231+ 9A0A 28 03            jr z,2F
 232+ 9A0C CD D3 95         call Mov_down
 233+ 9A0F
 234+ 9A0F              ; Se ha aplicado reinicio ???
 235+ 9A0F              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9A0F
 237+ 9A0F              ;    ld a,(Ctrl_3)
 238+ 9A0F              ;    bit 1,a
 239+ 9A0F              ;    ret nz
 240+ 9A0F
 241+ 9A0F 2A C8 89     2 ld hl, (Puntero_mov)
 242+ 9A12 CB 6E            bit 5,(hl)
 243+ 9A14 28 03            jr z,3F
 244+ 9A16 CD 72 97         call Mov_left
 245+ 9A19 2A C8 89     3 ld hl, (Puntero_mov)
 246+ 9A1C CB 66            bit 4,(hl)
 247+ 9A1E C8               ret z
 248+ 9A1F CD 4F 96         call Mov_right
 249+ 9A22 C9               ret
 250+ 9A23
 251+ 9A23              ; ---------- --------- --------- ---------- ----------
 252+ 9A23              ;
 253+ 9A23              ;   26/06/23
 254+ 9A23              ;
 255+ 9A23              ;   Ajusta_velocidad_desplazamiento.
 256+ 9A23
 257+ 9A23              Ajusta_velocidad_desplazamiento
 258+ 9A23
 259+ 9A23              ; 1er byte de la cadena de movimiento.
 260+ 9A23              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9A23
 262+ 9A23 CD 41 9A         call Extrae_nibble_alto
 263+ 9A26
 264+ 9A26 32 B6 89         ld (Vel_up),a
 265+ 9A29 79               ld a,c
 266+ 9A2A E6 0F            and $0f
 267+ 9A2C 32 B7 89         ld (Vel_down),a
 268+ 9A2F
 269+ 9A2F              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9A2F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9A2F
 272+ 9A2F 23               inc hl
 273+ 9A30 CD 41 9A         call Extrae_nibble_alto
 274+ 9A33
 275+ 9A33 32 B4 89         ld (Vel_left),a
 276+ 9A36 79               ld a,c
 277+ 9A37 E6 0F            and $0f
 278+ 9A39 32 B5 89         ld (Vel_right),a
 279+ 9A3C
 280+ 9A3C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9A3C
 282+ 9A3C 23               inc hl
 283+ 9A3D 22 C8 89         ld (Puntero_mov),hl
 284+ 9A40 C9               ret
 285+ 9A41
 286+ 9A41 06 04        Extrae_nibble_alto ld b,4
 287+ 9A43 7E               ld a,(hl)
 288+ 9A44 4F               ld c,a
 289+ 9A45 E6 F0            and $f0
 290+ 9A47 CB 3F        1 srl a
 291+ 9A49 10 FC            djnz 1B
 292+ 9A4B C9               ret
 293+ 9A4C
 294+ 9A4C              ; ---------- --------- --------- ---------- ----------
 295+ 9A4C              ;
 296+ 9A4C              ;   5/7/23
 297+ 9A4C              ;
 298+ 9A4C              ;   Incrementa_Puntero_indice_mov
 299+ 9A4C
 300+ 9A4C              Incrementa_Puntero_indice_mov
 301+ 9A4C
 302+ 9A4C 21 CC 89         ld hl,Incrementa_puntero
 303+ 9A4F 34               inc (hl)
 304+ 9A50
 305+ 9A50 2A C6 89         ld hl,(Puntero_indice_mov)
 306+ 9A53 01 02 00         ld bc,2
 307+ 9A56 A7               and a
 308+ 9A57 09               add hl,bc
 309+ 9A58 22 C6 89         ld (Puntero_indice_mov),hl
 310+ 9A5B
 311+ 9A5B 7E               ld a,(hl)
 312+ 9A5C A7               and a
 313+ 9A5D
 314+ 9A5D              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9A5D
 316+ 9A5D              ;    jr z,$
 317+ 9A5D
 318+ 9A5D              ;! Reinicia el Patrón de movimiento.
 319+ 9A5D
 320+ 9A5D CC 62 9A         call z,Inicializa_Puntero_indice_mov_2
 321+ 9A60
 322+ 9A60 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9A61
 324+ 9A61 C9               ret
 325+ 9A62
 326+ 9A62              ; ---------- --------- --------- ---------- ----------
 327+ 9A62              ;
 328+ 9A62              ;   15/01/24
 329+ 9A62              ;
 330+ 9A62              ;   Inicializa_Puntero_indice_mov
 331+ 9A62
 332+ 9A62              Inicializa_Puntero_indice_mov_2
 333+ 9A62
 334+ 9A62              ; Existe etiqueta de bucle principal???
 335+ 9A62
 336+ 9A62 2A CA 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9A65 24               inc h
 338+ 9A66 25               dec h
 339+ 9A67 28 05            jr z,2F
 340+ 9A69
 341+ 9A69 22 C6 89         ld (Puntero_indice_mov),hl
 342+ 9A6C 18 14            jr 3F
 343+ 9A6E
 344+ 9A6E              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9A6E
 346+ 9A6E 3A CC 89     2 ld a,(Incrementa_puntero)
 347+ 9A71 47               ld b,a
 348+ 9A72
 349+ 9A72 2A C6 89         ld hl,(Puntero_indice_mov)
 350+ 9A75 2B           1 dec hl
 351+ 9A76 2B               dec hl
 352+ 9A77 10 FC            djnz 1B
 353+ 9A79 22 C6 89         ld (Puntero_indice_mov),hl
 354+ 9A7C
 355+ 9A7C AF               xor a
 356+ 9A7D 32 CC 89         ld (Incrementa_puntero),a
 357+ 9A80 18 06            jr 4F
 358+ 9A82
 359+ 9A82 3A CD 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9A85 32 CC 89         ld (Incrementa_puntero),a
 361+ 9A88 C9           4 ret
 362+ 9A89
 363+ 9A89              ; ----------------------------------------------------------------------
 364+ 9A89              ;
 365+ 9A89              ;   30/01/24
 366+ 9A89              ;
 367+ 9A89              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9A89
 369+ 9A89 3A 8A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9A8C CD 2F 8F         call Calcula_salto_en_BC
 371+ 9A8F 21 B8 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A92 A7               and a
 373+ 9A93 ED 4A            adc hl,bc
 374+ 9A95 C9               ret
 375+ 9A96
 376+ 9A96              ; ----------------------------------------------------------------------
 377+ 9A96              ;
 378+ 9A96              ;   30/01/24
 379+ 9A96              ;
 380+ 9A96              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A96              ;
 382+ 9A96              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A96
 384+ 9A96 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A97 23               inc hl
 386+ 9A98 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A99 69               ld l,c
 388+ 9A9A 60               ld h,b
 389+ 9A9B 22 AB 89         ld (Contador_de_mov_masticados),hl
 390+ 9A9E C9               ret
 391+ 9A9F
# file closed: Movimiento.asm
1865  9A9F              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9A9F              ; ******************************************************************************************************************************************************************************************
   2+ 9A9F              ;
   3+ 9A9F              ;   21/07/23
   4+ 9A9F              ;
   5+ 9A9F              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9A9F              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9A9F              ;
   8+ 9A9F              ;
   9+ 9A9F              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9A9F              ;
  11+ 9A9F              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9A9F              ;               _ hacen las entidades hacia abajo.
  13+ 9A9F              ;
  14+ 9A9F              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9A9F              ;
  16+ 9A9F              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9A9F              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9A9F              ;
  19+ 9A9F              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9A9F              ;           _ la bala.
  21+ 9A9F              ;
  22+ 9A9F              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9A9F              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9A9F              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9A9F              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9A9F              ;           _ en el momento de generarse la bala)).
  27+ 9A9F
  28+ 9A9F              Genera_disparo
  29+ 9A9F
  30+ 9A9F              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9A9F              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9A9F              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9A9F              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9A9F              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9A9F              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9A9F              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9A9F
  38+ 9A9F              ; Exclusiones:
  39+ 9A9F
  40+ 9A9F 3A B7 89         ld a,(Vel_down)
  41+ 9AA2 47               ld b,a
  42+ 9AA3 3A 03 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9AA6 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9AA7 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9AA8 3A AE 89         ld a,(Columnas)
  46+ 9AAB 47               ld b,a
  47+ 9AAC 3A 8C 89         ld a,(Columns)
  48+ 9AAF B8               cp b
  49+ 9AB0 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9AB1
  51+ 9AB1              ; ----- ----- -----
  52+ 9AB1
  53+ 9AB1 3A AD 89         ld a,(Ctrl_0)
  54+ 9AB4 CB 77            bit 6,a
  55+ 9AB6 20 06            jr nz,14F
  56+ 9AB8
  57+ 9AB8 3A 92 89         ld a,(Coordenada_y)
  58+ 9ABB FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9ABD D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9ABE
  61+ 9ABE 21 31 81     14 ld hl,Indice_disparo
  62+ 9AC1 3A 93 89         ld a,(CTRL_DESPLZ)
  63+ 9AC4 4F               ld c,a
  64+ 9AC5 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9AC7              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9AC7              ;                                            ""        ""       "f9", B="1"
  67+ 9AC7              ;                                            ""        ""       "fb", B="2"
  68+ 9AC7              ;                                            ""        ""       "fb", B="3"
  69+ 9AC7 A7               and a
  70+ 9AC8 28 10            jr z,1F
  71+ 9ACA E6 01            and 1
  72+ 9ACC C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9ACD
  74+ 9ACD 79               ld a,c
  75+ 9ACE 16 F9            ld d,$f9
  76+ 9AD0 23           2 inc hl
  77+ 9AD1 23               inc hl
  78+ 9AD2 04               inc b
  79+ 9AD3 BA               cp d
  80+ 9AD4 28 04            jr z,1F
  81+ 9AD6 14               inc d
  82+ 9AD7 14               inc d
  83+ 9AD8 18 F6            jr 2B
  84+ 9ADA
  85+ 9ADA CD 74 8C     1 call Extrae_address
  86+ 9ADD E5               push hl
  87+ 9ADE FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9AE0 DD 21 7E 95  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9AE4
  90+ 9AE4              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9AE4              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9AE4
  93+ 9AE4 3A AD 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9AE7 CB 77            bit 6,a
  95+ 9AE9 20 04            jr nz,19F
  96+ 9AEB
  97+ 9AEB AF               xor a
  98+ 9AEC 32 0C 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9AEF
 100+ 9AEF 3A 9F 89     19 ld a,(Cuad_objeto)
 101+ 9AF2 FE 02            cp 2
 102+ 9AF4 38 66            jr c,3F
 103+ 9AF6 28 64            jr z,3F
 104+ 9AF8
 105+ 9AF8              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9AF8
 107+ 9AF8 E6 01            and 1
 108+ 9AFA 28 30            jr z,4F
 109+ 9AFC
 110+ 9AFC              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9AFC              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9AFC              ;
 113+ 9AFC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9AFC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9AFC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9AFC
 117+ 9AFC 2A 8D 89     	ld hl,(Posicion_actual)
 118+ 9AFF
 119+ 9AFF              ;   Amadeus o entidad ???.
 120+ 9AFF
 121+ 9AFF 3A AD 89         ld a,(Ctrl_0)
 122+ 9B02 CB 77            bit 6,a
 123+ 9B04 28 0A            jr z,8F
 124+ 9B06
 125+ 9B06              ; 	Dispara Amadeus.
 126+ 9B06
 127+ 9B06 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9B08 CD BB 92         call PreviousScan
 129+ 9B0B CD BB 92         call PreviousScan
 130+ 9B0E
 131+ 9B0E              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9B0E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9B0E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9B0E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9B0E
 136+ 9B0E 18 11            jr 10F
 137+ 9B10
 138+ 9B10              ; 	Dispara Entidad.
 139+ 9B10
 140+ 9B10 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9B13              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9B13
 143+ 9B13              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9B13              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9B13
 146+ 9B13 C5               push bc
 147+ 9B14 06 10            ld b,16
 148+ 9B16 CD AC 92     9 call NextScan
 149+ 9B19 10 FB            djnz 9B
 150+ 9B1B C1               pop bc
 151+ 9B1C CD 86 9B         call Ajusta_disparo_parte_izquierda
 152+ 9B1F 18 06            jr 17F
 153+ 9B21
 154+ 9B21              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9B21              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9B21              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9B21              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9B21
 159+ 9B21 CD 86 9B     10 call Ajusta_disparo_parte_izquierda
 160+ 9B24 CD FB 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9B27              ;                                                      ; _al generar el disparo.
 162+ 9B27
 163+ 9B27              ; 	LLegados a este punto tendremos:
 164+ 9B27              ;
 165+ 9B27              ;       Puntero_objeto_disparo en IY.
 166+ 9B27              ;       Rutinas_de_impresion en IX.
 167+ 9B27              ;       Puntero_de_impresion en HL.
 168+ 9B27              ;       Impacto/Dirección en BC.
 169+ 9B27
 170+ 9B27 CD 8E 9B     17 call Almacena_disparo
 171+ 9B2A 18 52            jr 6F                                             ; RET.
 172+ 9B2C
 173+ 9B2C              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9B2C              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9B2C              ;
 176+ 9B2C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9B2C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9B2C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9B2C
 180+ 9B2C 2A 8D 89     4 ld hl,(Posicion_actual)
 181+ 9B2F
 182+ 9B2F              ;   Amadeus o entidad ???.
 183+ 9B2F
 184+ 9B2F 3A AD 89         ld a,(Ctrl_0)
 185+ 9B32 CB 77            bit 6,a
 186+ 9B34 28 0A            jr z,11F
 187+ 9B36
 188+ 9B36              ; 	Dispara Amadeus.
 189+ 9B36
 190+ 9B36 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9B38 CD BB 92         call PreviousScan
 192+ 9B3B CD BB 92         call PreviousScan
 193+ 9B3E
 194+ 9B3E              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9B3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9B3E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9B3E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9B3E
 199+ 9B3E 18 11            jr 13F
 200+ 9B40
 201+ 9B40              ; 	Dispara Entidad.
 202+ 9B40
 203+ 9B40 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9B43              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9B43
 206+ 9B43              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9B43              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9B43
 209+ 9B43 C5               push bc
 210+ 9B44 06 10            ld b,16
 211+ 9B46 CD AC 92     12 call NextScan
 212+ 9B49 10 FB            djnz 12B
 213+ 9B4B C1               pop bc
 214+ 9B4C
 215+ 9B4C CD 7F 9B         call Ajusta_disparo_parte_derecha
 216+ 9B4F 18 06            jr 18F
 217+ 9B51
 218+ 9B51              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9B51              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9B51              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9B51              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9B51
 223+ 9B51 CD 7F 9B     13 call Ajusta_disparo_parte_derecha
 224+ 9B54 CD FB 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9B57              ;                                                       ; _al generar el disparo.
 226+ 9B57
 227+ 9B57              ; LLegados a este punto tendremos:
 228+ 9B57              ;
 229+ 9B57              ;       Puntero_objeto_disparo en IY.
 230+ 9B57              ;       Rutinas_de_impresion en IX.
 231+ 9B57              ;       Puntero_de_impresion en HL.
 232+ 9B57              ;       Impacto/Dirección en BC.
 233+ 9B57
 234+ 9B57 CD 8E 9B     18 call Almacena_disparo
 235+ 9B5A 18 22            jr 6F                                               ; RET.
 236+ 9B5C
 237+ 9B5C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9B5C
 239+ 9B5C 28 11        3 jr z,5F
 240+ 9B5E
 241+ 9B5E              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9B5E              ;
 243+ 9B5E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9B5E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9B5E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9B5E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9B5E
 248+ 9B5E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9B5E              ;	   ""        ""       "f9", B="1"
 250+ 9B5E              ;	   ""        ""       "fb", B="2"
 251+ 9B5E              ; 	   ""        ""       "fb", B="3"
 252+ 9B5E
 253+ 9B5E 2A 8D 89     	ld hl,(Posicion_actual)
 254+ 9B61 CD AC 92     	call NextScan
 255+ 9B64
 256+ 9B64              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9B64              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9B64              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9B64              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9B64
 261+ 9B64 CD 86 9B         call Ajusta_disparo_parte_izquierda
 262+ 9B67
 263+ 9B67              ; 	No se produce impacto. B="$80"
 264+ 9B67              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9B67
 266+ 9B67 01 80 80         ld bc,$8080
 267+ 9B6A
 268+ 9B6A              ; 	LLegados a este punto tendremos:
 269+ 9B6A              ;
 270+ 9B6A              ;       Puntero_objeto_disparo en IY.
 271+ 9B6A              ;       Rutinas_de_impresion en IX.
 272+ 9B6A              ;       Puntero_de_impresion en HL.
 273+ 9B6A              ;       Impacto/Dirección en BC.
 274+ 9B6A
 275+ 9B6A CD 8E 9B         call Almacena_disparo
 276+ 9B6D 18 0F            jr 6F                                           ; RET.
 277+ 9B6F
 278+ 9B6F              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9B6F              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9B6F              ;
 281+ 9B6F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9B6F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9B6F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9B6F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9B6F
 286+ 9B6F 2A 8D 89     5 ld hl,(Posicion_actual)
 287+ 9B72 CD AC 92     	call NextScan
 288+ 9B75
 289+ 9B75              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9B75              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9B75              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9B75              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9B75
 294+ 9B75 CD 7F 9B         call Ajusta_disparo_parte_derecha
 295+ 9B78
 296+ 9B78              ; 	No se produce impacto. B="$80"
 297+ 9B78              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9B78
 299+ 9B78 01 80 80     15 ld bc,$8080
 300+ 9B7B
 301+ 9B7B              ; 	LLegados a este punto tendremos:
 302+ 9B7B              ;
 303+ 9B7B              ;       Puntero_objeto_disparo en IY.
 304+ 9B7B              ;       Rutinas_de_impresion en IX.
 305+ 9B7B              ;       Puntero_de_impresion en HL.
 306+ 9B7B              ;       Impacto/Dirección en BC.
 307+ 9B7B
 308+ 9B7B CD 8E 9B         call Almacena_disparo
 309+ 9B7E
 310+ 9B7E C9           6 ret
 311+ 9B7F
 312+ 9B7F              ; ----------------------------------------------------------------
 313+ 9B7F              ;
 314+ 9B7F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9B7F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9B7F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9B7F
 318+ 9B7F 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9B80 FE 02            cp 2
 320+ 9B82 38 01            jr c,1F
 321+ 9B84 23               inc hl
 322+ 9B85 C9           1 ret
 323+ 9B86
 324+ 9B86 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9B87 FE 01        	cp 1
 326+ 9B89 20 01        	jr nz,1F
 327+ 9B8B 2B           	dec hl
 328+ 9B8C 2B           1 dec hl
 329+ 9B8D C9               ret
 330+ 9B8E
 331+ 9B8E              ; ----------------------------------------------------------------
 332+ 9B8E              ;
 333+ 9B8E              ;   25/02/23
 334+ 9B8E              ;
 335+ 9B8E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9B8E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9B8E              ;
 338+ 9B8E              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9B8E              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9B8E
 341+ 9B8E              Almacena_disparo
 342+ 9B8E
 343+ 9B8E E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9B8F F1               pop af
 345+ 9B90 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9B91
 347+ 9B91 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9B92 E6 01            and 1
 349+ 9B94 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9B96              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9B96              ; 	Dispara AMADEUS.
 352+ 9B96
 353+ 9B96              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9B96              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9B96              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9B96              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9B96
 358+ 9B96 C5               push bc
 359+ 9B97 01 68 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9B9A 2A F6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9B9D A7               and a
 362+ 9B9E ED 42            sbc hl,bc
 363+ 9BA0 CC F9 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9BA3 C1               pop bc
 365+ 9BA4 28 54            jr z,4F
 366+ 9BA6
 367+ 9BA6 2A F6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9BA9 23               inc hl
 369+ 9BAA 23               inc hl
 370+ 9BAB 22 F6 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9BAE              ;                                                   ; _ Disparo_(+1).
 372+ 9BAE 18 18            jr 2F
 373+ 9BB0
 374+ 9BB0              ; Dispara una entidad.
 375+ 9BB0
 376+ 9BB0 C5           1 push bc
 377+ 9BB1 01 90 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9BB4 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9BB7 A7               and a
 380+ 9BB8 ED 42            sbc hl,bc
 381+ 9BBA CC F2 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9BBD C1               pop bc
 383+ 9BBE 28 3A            jr z,4F
 384+ 9BC0
 385+ 9BC0 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9BC3 23               inc hl
 387+ 9BC4 23               inc hl
 388+ 9BC5 22 F4 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9BC8              ;                                                   ; _ Disparo_(+1).
 390+ 9BC8 CD 74 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9BCB              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9BCB              ;
 393+ 9BCB              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9BCB              ;                                                     Rutinas_de_impresion en IX.
 395+ 9BCB              ;                                                     Puntero_de_impresion en HL.
 396+ 9BCB              ;                                                     Impacto/Dirección en BC.
 397+ 9BCB
 398+ 9BCB 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9BCC 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9BCD 23               inc hl                                          ; _ al siguiente.
 401+ 9BCE A7               and a
 402+ 9BCF 20 C0            jr nz,3B
 403+ 9BD1
 404+ 9BD1 08               ex af,af
 405+ 9BD2 ED 73 E3 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9BD6 F9               ld sp,hl
 407+ 9BD7
 408+ 9BD7 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9BD9 F5               push af                                         ; Puntero de impresión.
 410+ 9BDA FD E5            push iy                                         ; Puntero objeto.
 411+ 9BDC C5               push bc                                         ; Control.
 412+ 9BDD
 413+ 9BDD ED 7B E3 89      ld sp,(Stack)
 414+ 9BE1
 415+ 9BE1              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9BE1
 417+ 9BE1 21 D2 89     	ld hl,Ctrl_1
 418+ 9BE4 CB C6        	set 0,(hl)
 419+ 9BE6
 420+ 9BE6 DD E5        	push ix
 421+ 9BE8 E1               pop hl
 422+ 9BE9 F5               push af
 423+ 9BEA DD E1            pop ix
 424+ 9BEC
 425+ 9BEC CD BF 80     	call Guarda_foto_registros
 426+ 9BEF
 427+ 9BEF 21 D2 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9BF2 CB 86        	res 0,(hl)
 429+ 9BF4
 430+ 9BF4              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9BF4              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9BF4
 433+ 9BF4 CD F9 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9BF7 CD F2 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9BFA
 436+ 9BFA C9           4 ret
 437+ 9BFB
 438+ 9BFB              ; ----------------------------------------------------------------
 439+ 9BFB              ;
 440+ 9BFB              ;   4/3/23
 441+ 9BFB              ;
 442+ 9BFB              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9BFB              ;   _ al generarse el disparo.
 444+ 9BFB              ;
 445+ 9BFB              ;       "$80" ..... No se produce colisión.
 446+ 9BFB              ;       "$81" ..... Se produce colisión.
 447+ 9BFB              ;
 448+ 9BFB              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9BFB              ;         _ que forman el disparo.
 450+ 9BFB
 451+ 9BFB
 452+ 9BFB              Comprueba_Colision
 453+ 9BFB
 454+ 9BFB              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9BFB
 456+ 9BFB FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9BFD E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9BFE
 459+ 9BFE CD 34 9C         call Modifica_H_Velocidad_disparo
 460+ 9C01
 461+ 9C01 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9C02 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9C04 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9C06
 465+ 9C06 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9C08 CD 24 9C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9C0B
 468+ 9C0B 7B               ld a,e
 469+ 9C0C E6 01            and 1
 470+ 9C0E 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9C10              ;                                                  ; _ para activar IMPACTO.
 472+ 9C10 E1               pop hl
 473+ 9C11 E5               push hl
 474+ 9C12 CD AC 92         call NextScan
 475+ 9C15
 476+ 9C15 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9C16 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9C18 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9C1A              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9C1A 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9C1C CD 24 9C         call Bucle_2
 482+ 9C1F
 483+ 9C1F 43           1 ld b,e
 484+ 9C20 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9C21 FD E1            pop iy
 486+ 9C23 C9               ret
 487+ 9C24
 488+ 9C24              ; ---------- ----------
 489+ 9C24
 490+ 9C24 06 02        Bucle_2 ld b,2
 491+ 9C26 FD 7E 00     2 ld a,(iy)
 492+ 9C29 A6               and (hl)
 493+ 9C2A 28 02            jr z,1F
 494+ 9C2C 1E 81            ld e,$81
 495+ 9C2E 23           1 inc hl
 496+ 9C2F FD 23            inc iy
 497+ 9C31 10 F3            djnz 2B
 498+ 9C33 C9               ret
 499+ 9C34
 500+ 9C34              ; ---------- ----------
 501+ 9C34              ;
 502+ 9C34              ;   21/7/23
 503+ 9C34
 504+ 9C34              Modifica_H_Velocidad_disparo
 505+ 9C34
 506+ 9C34 3A 03 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9C37 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9C39 D0               ret nc                                         ; _ incrementamos H.
 509+ 9C3A 24               inc h
 510+ 9C3B
 511+ 9C3B C9               ret
 512+ 9C3C
 513+ 9C3C              ; -------------------------------------------------------------------------------------------------------------
 514+ 9C3C              ;
 515+ 9C3C              ;   04/12/23
 516+ 9C3C              ;
 517+ 9C3C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9C3C              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9C3C              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9C3C              ;
 521+ 9C3C              ;   MODIFICA: HL,DE,B y A.
 522+ 9C3C
 523+ 9C3C              Genera_coordenadas_X
 524+ 9C3C
 525+ 9C3C              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9C3C              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9C3C
 528+ 9C3C              ;   Limpiamos almacenes.
 529+ 9C3C
 530+ 9C3C CD 6D 9C         call Limpia_Coordenadas_X
 531+ 9C3F
 532+ 9C3F              ;   Almacenamos coordenadas X.
 533+ 9C3F
 534+ 9C3F              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9C3F
 536+ 9C3F 2A A7 89         ld hl,(Puntero_de_impresion)
 537+ 9C42 11 00 8A         ld de,Coordenadas_X_Entidad
 538+ 9C45 06 02            ld b,2
 539+ 9C47
 540+ 9C47 3A 93 89         ld a,(CTRL_DESPLZ)
 541+ 9C4A A7               and a
 542+ 9C4B 28 01            jr z,1F
 543+ 9C4D 04               inc b
 544+ 9C4E
 545+ 9C4E CD 64 9C     1 call Guarda_coordenadas_X
 546+ 9C51
 547+ 9C51              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9C51
 549+ 9C51 2A 13 87         ld hl,(p.imp.amadeus)
 550+ 9C54 11 FD 89         ld de,Coordenadas_X_Amadeus
 551+ 9C57 06 02            ld b,2
 552+ 9C59
 553+ 9C59 3A FF 86         ld a,(ctrl_desplz_amadeus)
 554+ 9C5C A7               and a
 555+ 9C5D 28 01            jr z,2F
 556+ 9C5F 04               inc b
 557+ 9C60
 558+ 9C60 CD 64 9C     2 call Guarda_coordenadas_X
 559+ 9C63
 560+ 9C63              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9C63
 562+ 9C63 C9               ret
 563+ 9C64
 564+ 9C64              ; ----- ----- ----- ----- -----
 565+ 9C64
 566+ 9C64 7D           Guarda_coordenadas_X  ld a,l
 567+ 9C65 E6 1F            and $1f
 568+ 9C67 12           1 ld (de),a
 569+ 9C68 3C               inc a
 570+ 9C69 13               inc de
 571+ 9C6A 10 FB            djnz 1B
 572+ 9C6C C9               ret
 573+ 9C6D
 574+ 9C6D AF           Limpia_Coordenadas_X xor a
 575+ 9C6E 06 06            ld b,6
 576+ 9C70 21 FD 89         ld hl,Coordenadas_X_Amadeus
 577+ 9C73 77           1 ld (hl),a
 578+ 9C74 23               inc hl
 579+ 9C75 10 FC            djnz 1B
 580+ 9C77 C9               ret
 581+ 9C78
 582+ 9C78              ; ----- ----- ----- ----- -----
 583+ 9C78
 584+ 9C78              Compara_coordenadas_X
 585+ 9C78
 586+ 9C78 06 03            ld b,3
 587+ 9C7A 11 02 8A         ld de,Coordenadas_X_Entidad+2
 588+ 9C7D
 589+ 9C7D 1A               ld a,(de)
 590+ 9C7E A7               and a
 591+ 9C7F 20 01            jr nz,2F
 592+ 9C81 05               dec b
 593+ 9C82
 594+ 9C82 1B           2 dec de
 595+ 9C83 1B               dec de
 596+ 9C84 21 FD 89         ld hl,Coordenadas_X_Amadeus
 597+ 9C87
 598+ 9C87 D5           1 push de
 599+ 9C88 E5               push hl
 600+ 9C89 C5               push bc
 601+ 9C8A
 602+ 9C8A CD 94 9C         call Comparando
 603+ 9C8D
 604+ 9C8D C1               pop bc
 605+ 9C8E E1               pop hl
 606+ 9C8F D1               pop de
 607+ 9C90
 608+ 9C90 13               inc de
 609+ 9C91 10 F4            djnz 1B
 610+ 9C93
 611+ 9C93 C9               ret
 612+ 9C94
 613+ 9C94              ; ----- ----- ----- ----- -----
 614+ 9C94              ;
 615+ 9C94              ;   4/12/23
 616+ 9C94              ;
 617+ 9C94              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9C94
 619+ 9C94 06 03        Comparando ld b,3
 620+ 9C96 1A               ld a,(de)
 621+ 9C97 4E           2 ld c,(hl)
 622+ 9C98 B9               cp c
 623+ 9C99 28 04            jr z,1F
 624+ 9C9B 23               inc hl
 625+ 9C9C 10 F9            djnz 2B
 626+ 9C9E C9               ret
 627+ 9C9F
 628+ 9C9F 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9CA1 32 A0 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9CA4 21 F8 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9CA7 CB D6            set 2,(hl)
 632+ 9CA9 C9               ret
 633+ 9CAA
 634+ 9CAA              ; -----------------------------------------------------------------------
 635+ 9CAA              ;
 636+ 9CAA              ;   7/12/23
 637+ 9CAA              ;
 638+ 9CAA
 639+ 9CAA              Detecta_colision_nave_entidad
 640+ 9CAA
 641+ 9CAA              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9CAA
 643+ 9CAA FD 2A 8F 89      ld iy,(Puntero_objeto)
 644+ 9CAE 2A A7 89         ld hl,(Puntero_de_impresion)
 645+ 9CB1
 646+ 9CB1 E5               push hl
 647+ 9CB2
 648+ 9CB2              ; ----- ----- -----
 649+ 9CB2 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9CB4 06 0A            ld b,10
 651+ 9CB6 CD E6 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9CB9 7B               ld a,e
 653+ 9CBA FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9CBC 38 0E            jr c,3F
 655+ 9CBE
 656+ 9CBE              ; LLegados a este punto:
 657+ 9CBE              ;
 658+ 9CBE              ;   HAY COLISIÓN !!!!!.
 659+ 9CBE              ;
 660+ 9CBE              ;   .db (Impacto) de Amadeus a "1".
 661+ 9CBE              ;   SET el bit3 de (Impacto2).
 662+ 9CBE              ;
 663+ 9CBE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9CBE
 665+ 9CBE 21 A0 89         ld hl,Impacto
 666+ 9CC1 36 01            ld (hl),1
 667+ 9CC3 21 F8 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9CC6 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9CC8 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9CCA
 671+ 9CCA 18 18            jr 1F
 672+ 9CCC
 673+ 9CCC              ; -----
 674+ 9CCC
 675+ 9CCC E1           3 pop hl
 676+ 9CCD CD AC 92         call NextScan
 677+ 9CD0 E5               push hl
 678+ 9CD1 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9CD2 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9CD4 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9CD6 30 0C            jr nc,1F
 682+ 9CD8              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9CD8 10 DC            djnz 2B
 684+ 9CDA
 685+ 9CDA              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9CDA
 687+ 9CDA              ; LLegados a este punto:
 688+ 9CDA              ;
 689+ 9CDA              ;   NO HAY COLISIÓN !!!!!.
 690+ 9CDA              ;
 691+ 9CDA              ;   .db (Impacto) de Amadeus a "0".
 692+ 9CDA              ;   RES el bit2 de (Impacto2).
 693+ 9CDA              ;
 694+ 9CDA              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9CDA              ;   Lo colocamos a "0".
 696+ 9CDA
 697+ 9CDA 21 F8 89         ld hl,Impacto2
 698+ 9CDD CB 96            res 2,(hl)
 699+ 9CDF 2A F9 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9CE2 36 00            ld (hl),0
 701+ 9CE4
 702+ 9CE4 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9CE5 C9               ret
 704+ 9CE6
 705+ 9CE6               ; ---------- ----------
 706+ 9CE6
 707+ 9CE6 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9CE7 3A 8C 89         ld a,(Columns)
 709+ 9CEA 47               ld b,a
 710+ 9CEB FD 7E 00     2 ld a,(iy)
 711+ 9CEE BE               cp (hl)
 712+ 9CEF 28 01            jr z,1F
 713+ 9CF1
 714+ 9CF1 1C               inc e
 715+ 9CF2
 716+ 9CF2 23           1 inc hl
 717+ 9CF3 FD 23            inc iy
 718+ 9CF5 10 F4            djnz 2B
 719+ 9CF7 C1               pop bc
 720+ 9CF8 C9               ret
 721+ 9CF9
 722+ 9CF9              ; -------------------------------------------------------------------------------------------------------------
 723+ 9CF9              ;
 724+ 9CF9              ;   13/03/23
 725+ 9CF9              ;
 726+ 9CF9              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9CF9              ;
 728+ 9CF9              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9CF9
 730+ 9CF9 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9CFC 7E               ld a,(hl)
 732+ 9CFD A7               and a
 733+ 9CFE C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9CFF
 735+ 9CFF 44               ld b,h
 736+ 9D00 4D               ld c,l
 737+ 9D01 2A EB 89         ld hl,(Stack_snapshot_disparos)
 738+ 9D04 E5               push hl
 739+ 9D05 A7               and a
 740+ 9D06 ED 42            sbc hl,bc
 741+ 9D08 E5               push hl
 742+ 9D09 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9D0A
 744+ 9D0A E1               pop hl
 745+ 9D0B 54               ld d,h
 746+ 9D0C 5D               ld e,l
 747+ 9D0D 1B               dec de
 748+ 9D0E ED B8            lddr                                                ; Limpiamos.
 749+ 9D10
 750+ 9D10 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9D13 22 EB 89         ld (Stack_snapshot_disparos),hl
 752+ 9D16
 753+ 9D16 C9               ret
 754+ 9D17
 755+ 9D17              ; -------------------------------------------------------------------------------------------------------------
 756+ 9D17              ;
 757+ 9D17              ;   18/07/23
 758+ 9D17              ;
 759+ 9D17
 760+ 9D17              Motor_de_disparos
 761+ 9D17
 762+ 9D17              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9D17
 764+ 9D17 01 7A 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9D1A 2A F6 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9D1D
 767+ 9D1D CD 74 8C     2 call Extrae_address
 768+ 9D20 7E               ld a,(hl)
 769+ 9D21 A7               and a
 770+ 9D22 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9D24
 772+ 9D24              ; ----- ----- ----- ----- ----- -----
 773+ 9D24
 774+ 9D24 C5               push bc
 775+ 9D25 CD E9 9D         call foto_disparo_a_borrar
 776+ 9D28
 777+ 9D28              ; Existe colisión con este disparo???
 778+ 9D28
 779+ 9D28 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9D29 7E               ld a,(hl)
 781+ 9D2A 2B               dec hl
 782+ 9D2B E6 01            and 1
 783+ 9D2D 28 1D            jr z,9F
 784+ 9D2F
 785+ 9D2F              ;   En este punto:
 786+ 9D2F              ;
 787+ 9D2F              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9D2F              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9D2F              ;   _con la entidad).
 790+ 9D2F              ;
 791+ 9D2F              ;   Disparo_2A defw 0                                ; Control.
 792+ 9D2F              ;    defw 0                                          ; Puntero objeto.
 793+ 9D2F              ;    defw 0                                          ; Puntero de impresión.
 794+ 9D2F              ;    defw 0                                          ; Rutina de impresión.
 795+ 9D2F
 796+ 9D2F E5               push hl
 797+ 9D30
 798+ 9D30 06 04            ld b,4
 799+ 9D32 23           19 inc hl
 800+ 9D33 10 FD            djnz 19B
 801+ 9D35
 802+ 9D35 CD 74 8C         call Extrae_address
 803+ 9D38 CD CC 9F         call Genera_coordenadas_disparo
 804+ 9D3B
 805+ 9D3B              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9D3B
 807+ 9D3B 21 FB 89         ld hl,Coordenadas_disparo_certero
 808+ 9D3E 72               ld (hl),d
 809+ 9D3F 23               inc hl
 810+ 9D40 73               ld (hl),e
 811+ 9D41
 812+ 9D41              ; Elimino el disparo de la base de datos.
 813+ 9D41
 814+ 9D41 E1               pop hl
 815+ 9D42 CD 68 9E         call Elimina_disparo_de_base_de_datos
 816+ 9D45 21 F8 89         ld hl,Impacto2
 817+ 9D48 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9D4A
 819+ 9D4A 18 06            jr 11F
 820+ 9D4C
 821+ 9D4C CD 12 9E     9 call Mueve_disparo
 822+ 9D4F CD E9 9D         call foto_disparo_a_borrar
 823+ 9D52
 824+ 9D52 C1           11 pop bc
 825+ 9D53 18 04            jr 7F
 826+ 9D55
 827+ 9D55              ; ----- ----- ----- ----- ----- -----
 828+ 9D55
 829+ 9D55 ED 42        1 sbc hl,bc
 830+ 9D57 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9D59
 832+ 9D59 2A F6 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9D5C 23               inc hl
 834+ 9D5D 23               inc hl
 835+ 9D5E 22 F6 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9D61 18 BA            jr 2B
 837+ 9D63
 838+ 9D63 CD F9 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9D66              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9D66
 841+ 9D66              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9D66
 843+ 9D66 01 E2 86         ld bc,Disparo_11
 844+ 9D69 2A F4 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9D6C
 846+ 9D6C CD 74 8C     5 call Extrae_address
 847+ 9D6F 7E               ld a,(hl)
 848+ 9D70 A7               and a
 849+ 9D71 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9D73
 851+ 9D73              ; ----- ----- ----- ----- ----- -----
 852+ 9D73
 853+ 9D73 C5               push bc
 854+ 9D74 CD E9 9D         call foto_disparo_a_borrar
 855+ 9D77
 856+ 9D77              ; Existe colisión con este disparo???
 857+ 9D77
 858+ 9D77 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9D78 7E               ld a,(hl)
 860+ 9D79 2B               dec hl
 861+ 9D7A E6 01            and 1
 862+ 9D7C 28 4D            jr z,10F
 863+ 9D7E
 864+ 9D7E              ;! La colisión se produce con Amadeus???
 865+ 9D7E              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9D7E
 867+ 9D7E E5               push hl
 868+ 9D7F
 869+ 9D7F 06 04            ld b,4
 870+ 9D81 23           16 inc hl
 871+ 9D82 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9D84
 873+ 9D84 CD 74 8C         call Extrae_address
 874+ 9D87 CD CC 9F         call Genera_coordenadas_disparo
 875+ 9D8A
 876+ 9D8A 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9D8B FE 16            cp $16
 878+ 9D8D 38 2A            jr c,15F
 879+ 9D8F
 880+ 9D8F
 881+ 9D8F              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9D8F
 883+ 9D8F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9D90
 885+ 9D90              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9D90
 887+ 9D90 2A 13 87         ld hl,(p.imp.amadeus)
 888+ 9D93
 889+ 9D93              ; Coordenada X de Amadeus en D.
 890+ 9D93
 891+ 9D93 7D               ld a,l
 892+ 9D94 E6 1F            and $1F
 893+ 9D96 57               ld d,a
 894+ 9D97
 895+ 9D97 21 FE 86         ld hl,Amadeus_db+8
 896+ 9D9A 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9D9B
 898+ 9D9B 21 FD 89         ld hl,Coordenadas_X_Amadeus
 899+ 9D9E CD 64 9C         call Guarda_coordenadas_X
 900+ 9DA1
 901+ 9DA1 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9DA2
 903+ 9DA2              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9DA2
 905+ 9DA2 06 02            ld b,2
 906+ 9DA4 C5           20 push bc
 907+ 9DA5
 908+ 9DA5 06 03            ld b,3
 909+ 9DA7 21 FD 89         ld hl,Coordenadas_X_Amadeus
 910+ 9DAA 7E           18 ld a,(hl)
 911+ 9DAB BA               cp d
 912+ 9DAC 20 04            jr nz,17F
 913+ 9DAE
 914+ 9DAE              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9DAE
 916+ 9DAE C1               pop bc
 917+ 9DAF E1               pop hl
 918+ 9DB0 18 0D            jr 14F
 919+ 9DB2
 920+ 9DB2 23           17 inc hl
 921+ 9DB3 10 F5            djnz 18B
 922+ 9DB5
 923+ 9DB5 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9DB6
 925+ 9DB6 C1               pop bc
 926+ 9DB7 10 EB            djnz 20B
 927+ 9DB9
 928+ 9DB9
 929+ 9DB9              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9DB9              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9DB9
 932+ 9DB9 E1           15 pop hl
 933+ 9DBA 23               inc hl
 934+ 9DBB 35               dec (hl)
 935+ 9DBC 2B               dec hl
 936+ 9DBD 18 0C            jr 10F
 937+ 9DBF
 938+ 9DBF              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9DBF              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9DBF
 941+ 9DBF E5           14 push hl
 942+ 9DC0 CD 68 9E         call Elimina_disparo_de_base_de_datos
 943+ 9DC3 21 F8 89         ld hl,Impacto2
 944+ 9DC6 CB CE            set 1,(hl)
 945+ 9DC8 E1               pop hl
 946+ 9DC9 18 06            jr 12F
 947+ 9DCB
 948+ 9DCB              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9DCB
 950+ 9DCB CD 12 9E     10 call Mueve_disparo
 951+ 9DCE CD E9 9D         call foto_disparo_a_borrar
 952+ 9DD1 C1           12 pop bc
 953+ 9DD2
 954+ 9DD2 18 04            jr 8F
 955+ 9DD4
 956+ 9DD4              ; ----- ----- ----- ----- ----- -----
 957+ 9DD4
 958+ 9DD4 ED 42        4 sbc hl,bc
 959+ 9DD6 28 0A            jr z,6F
 960+ 9DD8
 961+ 9DD8 2A F4 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9DDB 23               inc hl
 963+ 9DDC 23               inc hl
 964+ 9DDD 22 F4 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9DE0 18 8A            jr 5B
 966+ 9DE2
 967+ 9DE2 CD F2 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9DE5 CD 6D 9C         call Limpia_Coordenadas_X
 969+ 9DE8 C9               ret
 970+ 9DE9
 971+ 9DE9              ; ------------------------------------------------------------------
 972+ 9DE9
 973+ 9DE9              foto_disparo_a_borrar
 974+ 9DE9
 975+ 9DE9 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9DEA A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9DEB C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9DEC
 979+ 9DEC E5               push hl
 980+ 9DED 23               inc hl
 981+ 9DEE 23               inc hl
 982+ 9DEF ED 73 E3 89      ld (Stack),sp
 983+ 9DF3 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9DF4 FD E1            pop iy
 985+ 9DF6 DD E1            pop ix
 986+ 9DF8 E1               pop hl
 987+ 9DF9 ED 7B E3 89      ld sp,(Stack)
 988+ 9DFD 3A D2 89         ld a,(Ctrl_1)
 989+ 9E00 CB C7            set 0,a
 990+ 9E02 32 D2 89         ld (Ctrl_1),a
 991+ 9E05 CD BF 80         call Guarda_foto_registros
 992+ 9E08 3A D2 89         ld a,(Ctrl_1)
 993+ 9E0B CB 87            res 0,a
 994+ 9E0D 32 D2 89         ld (Ctrl_1),a
 995+ 9E10 E1               pop hl
 996+ 9E11 C9               ret
 997+ 9E12
 998+ 9E12              ;---------------------------------------------------
 999+ 9E12              ;
1000+ 9E12              ;   18/07/23
1001+ 9E12              ;
1002+ 9E12
1003+ 9E12              Mueve_disparo
1004+ 9E12
1005+ 9E12              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9E12              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9E12              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9E12
1009+ 9E12 E5               push hl
1010+ 9E13
1011+ 9E13 7E               ld a,(hl)
1012+ 9E14
1013+ 9E14 06 04            ld b,4
1014+ 9E16 23           1 inc hl
1015+ 9E17 10 FD            djnz 1B
1016+ 9E19
1017+ 9E19              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9E19
1019+ 9E19 CD 74 8C         call Extrae_address
1020+ 9E1C
1021+ 9E1C E6 01            and 1
1022+ 9E1E 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9E20
1024+ 9E20              ; Disparo hacia arriba, (Amadeus).
1025+ 9E20
1026+ 9E20              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9E20              ; _ de la dificultad.
1028+ 9E20
1029+ 9E20 CD BB 92         call PreviousScan
1030+ 9E23 CD BB 92         call PreviousScan
1031+ 9E26 CD BB 92         call PreviousScan
1032+ 9E29 CD BB 92         call PreviousScan
1033+ 9E2C
1034+ 9E2C              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9E2C
1036+ 9E2C 7C               ld a,h
1037+ 9E2D FE 40            cp $40
1038+ 9E2F 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9E31
1040+ 9E31              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9E31
1042+ 9E31 EB               ex de,hl
1043+ 9E32 06 04            ld b,4
1044+ 9E34 2B           6 dec hl
1045+ 9E35 10 FD            djnz 6B
1046+ 9E37
1047+ 9E37 CD 68 9E         call Elimina_disparo_de_base_de_datos
1048+ 9E3A E1               pop hl
1049+ 9E3B 18 10            jr 7F
1050+ 9E3D
1051+ 9E3D              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9E3D              ; HL contiene el puntero de impresión del disparo.
1053+ 9E3D              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9E3D
1055+ 9E3D D5           3 push de
1056+ 9E3E C5               push bc
1057+ 9E3F
1058+ 9E3F CD FB 9B         call Comprueba_Colision
1059+ 9E42
1060+ 9E42              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9E42
1062+ 9E42 78               ld a,b
1063+ 9E43
1064+ 9E43 C1               pop bc
1065+ 9E44 D1               pop de
1066+ 9E45
1067+ 9E45 EB               ex de,hl
1068+ 9E46
1069+ 9E46 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9E47 23               inc hl                                      ; _ movimiento.
1071+ 9E48 72               ld (hl),d
1072+ 9E49
1073+ 9E49 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9E4A
1075+ 9E4A 23               inc hl                                      ; _ en curso.
1076+ 9E4B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9E4C 2B               dec hl
1078+ 9E4D
1079+ 9E4D C9           7 ret
1080+ 9E4E
1081+ 9E4E              ; Disparo hacia abajo, (Entidad).
1082+ 9E4E
1083+ 9E4E 3A 03 8A     2 ld a,(Velocidad_disparo_entidades)
1084+ 9E51 47               ld b,a
1085+ 9E52
1086+ 9E52 CD AC 92     4 call NextScan
1087+ 9E55 10 FB            djnz 4B
1088+ 9E57
1089+ 9E57              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9E57
1091+ 9E57 7C               ld a,h
1092+ 9E58 FE 58            cp $58
1093+ 9E5A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9E5C
1095+ 9E5C EB               ex de,hl
1096+ 9E5D 06 04            ld b,4
1097+ 9E5F 2B           5 dec hl
1098+ 9E60 10 FD            djnz 5B
1099+ 9E62
1100+ 9E62 CD 68 9E         call Elimina_disparo_de_base_de_datos
1101+ 9E65 E1               pop hl
1102+ 9E66 18 E5            jr 7B
1103+ 9E68
1104+ 9E68              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9E68
1106+ 9E68 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9E6B AF               xor a
1108+ 9E6C 77               ld (hl),a
1109+ 9E6D 54               ld d,h
1110+ 9E6E 5D               ld e,l
1111+ 9E6F 13               inc de
1112+ 9E70 ED B0            ldir
1113+ 9E72 C9               ret
1114+ 9E73
1115+ 9E73              ; -----------------------------------------------------------------
1116+ 9E73              ;
1117+ 9E73              ;   7/12/23
1118+ 9E73              ;
1119+ 9E73
1120+ 9E73 3A F8 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9E76 A7               and a
1122+ 9E77 C8               ret z
1123+ 9E78
1124+ 9E78              ; Analizamos si hay impacto por disparos.
1125+ 9E78
1126+ 9E78              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9E78
1128+ 9E78 CB 4F            bit 1,a
1129+ 9E7A 28 07            jr z,1F
1130+ 9E7C
1131+ 9E7C 21 0F 87         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9E7F 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9E81 18 08            jr 2F
1134+ 9E83
1135+ 9E83 CB 47        1 bit 0,a
1136+ 9E85 C8               ret z
1137+ 9E86
1138+ 9E86              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9E86
1140+ 9E86 21 D2 89         ld hl,Ctrl_1
1141+ 9E89 CB D6            set 2,(hl)
1142+ 9E8B
1143+ 9E8B C9           2 ret
1144+ 9E8C
1145+ 9E8C              ; -----------------------------------------------------------------
1146+ 9E8C              ;
1147+ 9E8C              ;   25/04/23
1148+ 9E8C              ;
1149+ 9E8C
1150+ 9E8C              Determina_resultado_comparativa
1151+ 9E8C
1152+ 9E8C              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9E8C              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9E8C              ;
1155+ 9E8C              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9E8C              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9E8C              ;
1158+ 9E8C              ;   SBC HL,DE
1159+ 9E8C
1160+ 9E8C              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9E8C              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9E8C
1163+ 9E8C              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9E8C              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9E8C
1166+ 9E8C
1167+ 9E8C 3A 9F 89         ld a,(Cuad_objeto)
1168+ 9E8F FE 02            cp 2
1169+ 9E91 28 26            jr z,2F
1170+ 9E93 38 24            jr c,2F
1171+ 9E95
1172+ 9E95              ; Cuadrantes 3º y 4º
1173+ 9E95
1174+ 9E95 E6 01            and 1
1175+ 9E97 28 10            jr z,4F
1176+ 9E99
1177+ 9E99              ; Cuadrante 3º
1178+ 9E99
1179+ 9E99 7C               ld a,h
1180+ 9E9A 06 00            ld b,0
1181+ 9E9C
1182+ 9E9C CD 27 9F         call Compara_cositas_H3
1183+ 9E9F
1184+ 9E9F 04               inc b
1185+ 9EA0 05               dec b
1186+ 9EA1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9EA2
1188+ 9EA2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9EA3 06 00            ld b,0
1190+ 9EA5
1191+ 9EA5 CD 39 9F         call Compara_cositas_L3
1192+ 9EA8 C9               ret
1193+ 9EA9
1194+ 9EA9              ; Cuadrante 4º
1195+ 9EA9
1196+ 9EA9 7C           4 ld a,h
1197+ 9EAA 06 00            ld b,0
1198+ 9EAC
1199+ 9EAC CD 4B 9F         call Compara_cositas_H4
1200+ 9EAF
1201+ 9EAF 04               inc b
1202+ 9EB0 05               dec b
1203+ 9EB1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9EB2
1205+ 9EB2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9EB3 06 00            ld b,0
1207+ 9EB5
1208+ 9EB5 CD 61 9F         call Compara_cositas_L4
1209+ 9EB8 C9               ret
1210+ 9EB9
1211+ 9EB9              ; Cuadrantes 1º y 2º.
1212+ 9EB9
1213+ 9EB9 28 10        2 jr z,3F
1214+ 9EBB
1215+ 9EBB              ; 1er Cuadrante
1216+ 9EBB
1217+ 9EBB 7C               ld a,h
1218+ 9EBC 06 00            ld b,0
1219+ 9EBE
1220+ 9EBE CD FF 9E         call Compara_cositas_H1
1221+ 9EC1
1222+ 9EC1 04               inc b
1223+ 9EC2 05               dec b
1224+ 9EC3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9EC4
1226+ 9EC4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9EC5 06 00            ld b,0
1228+ 9EC7
1229+ 9EC7 CD 15 9F         call Compara_cositas_L1
1230+ 9ECA C9               ret
1231+ 9ECB
1232+ 9ECB
1233+ 9ECB              ; 2º Cuadrante
1234+ 9ECB
1235+ 9ECB 7C           3 ld a,h
1236+ 9ECC 06 00            ld b,0
1237+ 9ECE
1238+ 9ECE CD DB 9E         call Compara_cositas_H2
1239+ 9ED1
1240+ 9ED1 04               inc b
1241+ 9ED2 05               dec b
1242+ 9ED3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9ED4
1244+ 9ED4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9ED5 06 00            ld b,0
1246+ 9ED7
1247+ 9ED7 CD ED 9E         call Compara_cositas_L2
1248+ 9EDA C9               ret
1249+ 9EDB
1250+ 9EDB A7           Compara_cositas_H2 and a
1251+ 9EDC 28 0D            jr z,1F
1252+ 9EDE              ;    cp $fd
1253+ 9EDE              ;    jr z,1F
1254+ 9EDE              ;    cp $fe
1255+ 9EDE              ;    jr z,1F
1256+ 9EDE FE FF            cp $ff
1257+ 9EE0 28 09            jr z,1F
1258+ 9EE2 FE 01            cp $01
1259+ 9EE4 28 05            jr z,1F
1260+ 9EE6 FE 02            cp $02
1261+ 9EE8 28 01            jr z,1F
1262+ 9EEA C0               ret nz
1263+ 9EEB 04           1 inc b
1264+ 9EEC C9               ret
1265+ 9EED
1266+ 9EED A7           Compara_cositas_L2 and a
1267+ 9EEE 28 0D            jr z,1F
1268+ 9EF0              ;    cp $fd
1269+ 9EF0              ;    jr z,1F
1270+ 9EF0 FE FE            cp $fe
1271+ 9EF2 28 09            jr z,1F
1272+ 9EF4 FE FF            cp $ff
1273+ 9EF6 28 05            jr z,1F
1274+ 9EF8 FE 01            cp $01
1275+ 9EFA 28 01            jr z,1F
1276+ 9EFC              ;    cp $02
1277+ 9EFC              ;    jr z,1F
1278+ 9EFC C0               ret nz
1279+ 9EFD 04           1 inc b
1280+ 9EFE C9               ret
1281+ 9EFF
1282+ 9EFF A7           Compara_cositas_H1 and a
1283+ 9F00 28 11            jr z,1F
1284+ 9F02              ;    cp $fd
1285+ 9F02              ;    jr z,1F
1286+ 9F02              ;    cp $fe
1287+ 9F02              ;    jr z,1F
1288+ 9F02 FE FF            cp $ff
1289+ 9F04 28 0D            jr z,1F
1290+ 9F06 FE 01            cp $01
1291+ 9F08 28 09            jr z,1F
1292+ 9F0A FE 02            cp $02
1293+ 9F0C 28 05            jr z,1F
1294+ 9F0E FE 03            cp $03
1295+ 9F10 28 01            jr z,1F
1296+ 9F12 C0               ret nz
1297+ 9F13 04           1 inc b
1298+ 9F14 C9               ret
1299+ 9F15
1300+ 9F15 A7           Compara_cositas_L1 and a
1301+ 9F16 28 0D            jr z,1F
1302+ 9F18              ;    cp $fd
1303+ 9F18              ;    jr z,1F
1304+ 9F18              ;    cp $fe
1305+ 9F18              ;    jr z,1F
1306+ 9F18              ;    cp $ff
1307+ 9F18              ;    jr z,1F
1308+ 9F18 FE 01            cp $01
1309+ 9F1A 28 09            jr z,1F
1310+ 9F1C FE 02            cp $02
1311+ 9F1E 28 05            jr z,1F
1312+ 9F20 FE 03            cp $03
1313+ 9F22 28 01            jr z,1F
1314+ 9F24 C0               ret nz
1315+ 9F25 04           1 inc b
1316+ 9F26 C9               ret
1317+ 9F27
1318+ 9F27 A7           Compara_cositas_H3 and a
1319+ 9F28 28 0D            jr z,1F
1320+ 9F2A              ;    cp $fd
1321+ 9F2A              ;    jr z,1F
1322+ 9F2A FE FE            cp $fe
1323+ 9F2C 28 09            jr z,1F
1324+ 9F2E FE FF            cp $ff
1325+ 9F30 28 05            jr z,1F
1326+ 9F32 FE 01            cp $01
1327+ 9F34 28 01            jr z,1F
1328+ 9F36              ;    cp $02
1329+ 9F36              ;    jr z,1F
1330+ 9F36              ;    cp $03
1331+ 9F36              ;    jr z,1F
1332+ 9F36 C0               ret nz
1333+ 9F37 04           1 inc b
1334+ 9F38 C9               ret
1335+ 9F39
1336+ 9F39 A7           Compara_cositas_L3 and a
1337+ 9F3A 28 0D            jr z,1F
1338+ 9F3C              ;    cp $fd
1339+ 9F3C              ;    jr z,1F
1340+ 9F3C              ;    cp $fe
1341+ 9F3C              ;    jr z,1F
1342+ 9F3C              ;    cp $ff
1343+ 9F3C              ;    jr z,1F
1344+ 9F3C FE 01            cp $01
1345+ 9F3E 28 09            jr z,1F
1346+ 9F40 FE 02            cp $02
1347+ 9F42 28 05            jr z,1F
1348+ 9F44 FE 03            cp $03
1349+ 9F46 28 01            jr z,1F
1350+ 9F48 C0               ret nz
1351+ 9F49 04           1 inc b
1352+ 9F4A C9               ret
1353+ 9F4B
1354+ 9F4B A7           Compara_cositas_H4 and a
1355+ 9F4C 28 11            jr z,1F
1356+ 9F4E FE FD            cp $fd
1357+ 9F50 28 0D            jr z,1F
1358+ 9F52 FE FE            cp $fe
1359+ 9F54 28 09            jr z,1F
1360+ 9F56 FE FF            cp $ff
1361+ 9F58 28 05            jr z,1F
1362+ 9F5A FE 01            cp $01
1363+ 9F5C 28 01            jr z,1F
1364+ 9F5E              ;    cp $02
1365+ 9F5E              ;    jr z,1F
1366+ 9F5E              ;    cp $03
1367+ 9F5E              ;    jr z,1F
1368+ 9F5E C0               ret nz
1369+ 9F5F 04           1 inc b
1370+ 9F60 C9               ret
1371+ 9F61
1372+ 9F61 A7           Compara_cositas_L4 and a
1373+ 9F62 28 0D            jr z,1F
1374+ 9F64              ;    cp $fd
1375+ 9F64              ;    jr z,1F
1376+ 9F64 FE FE            cp $fe
1377+ 9F66 28 09            jr z,1F
1378+ 9F68 FE FF            cp $ff
1379+ 9F6A 28 05            jr z,1F
1380+ 9F6C FE 01            cp $01
1381+ 9F6E 28 01            jr z,1F
1382+ 9F70              ;    cp $02
1383+ 9F70              ;    jr z,1F
1384+ 9F70              ;    cp $03
1385+ 9F70              ;    jr z,1F
1386+ 9F70 C0               ret nz
1387+ 9F71 04           1 inc b
1388+ 9F72 C9               ret
# file closed: Disparo.asm
1866  9F73              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F73              ; Relojes y temporizaciones.
   2+ 9F73
   3+ 9F73              ; ------------------------------------------------------
   4+ 9F73              ;
   5+ 9F73              ;	16/7/23
   6+ 9F73              ;
   7+ 9F73              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9F73              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F73              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F73              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F73              ;
  12+ 9F73              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F73              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F73
  15+ 9F73              ; Disparo_entidad db 1
  16+ 9F73              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9F73              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9F73
  19+ 9F73              Habilita_disparos
  20+ 9F73
  21+ 9F73 7E           	ld a,(hl)
  22+ 9F74 A7           	and a
  23+ 9F75 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9F76
  25+ 9F76 EB           	ex de,hl
  26+ 9F77
  27+ 9F77 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9F78 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9F79
  30+ 9F79              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9F79
  32+ 9F79 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9F7A 7E           	ld a,(hl)
  34+ 9F7B 23           	inc hl
  35+ 9F7C 77           	ld (hl),a
  36+ 9F7D
  37+ 9F7D EB           	ex de,hl						; Habilitamos disparo.
  38+ 9F7E 3E 01        	ld a,1
  39+ 9F80 77           	ld (hl),a
  40+ 9F81 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1867  9F82              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9F82              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9F82              ;
   3+ 9F82              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9F82              ;
   5+ 9F82              ; *****************************************************************************************************************************************************************************************
   6+ 9F82              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9F82
   8+ 9F82 7C           calcula_tercio ld a,h
   9+ 9F83 E6 18        	and $18
  10+ 9F85 CB 2F        	sra a
  11+ 9F87 CB 2F        	sra a
  12+ 9F89 CB 2F        	sra a
  13+ 9F8B C9           	ret
  14+ 9F8C
# file closed: calcula_tercio.asm
1868  9F8C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9F8C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9F8C              ;
   3+ 9F8C              ;
   4+ 9F8C              ;	CLS.
   5+ 9F8C              ;
   6+ 9F8C              ;	Limpia la pantalla y define sus atributos.
   7+ 9F8C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9F8C              ;
   9+ 9F8C              ;	COLORES: 0 ..... NEGRO
  10+ 9F8C              ;    		 1 ..... AZUL
  11+ 9F8C              ; 			 2 ..... ROJO
  12+ 9F8C              ;			 3 ..... MAGENTA
  13+ 9F8C              ; 			 4 ..... VERDE
  14+ 9F8C              ; 			 5 ..... CIAN
  15+ 9F8C              ;			 6 ..... AMARILLO
  16+ 9F8C              ; 			 7 ..... BLANCO
  17+ 9F8C              ;
  18+ 9F8C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9F8C              ;
  20+ 9F8C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9F8C
  22+ 9F8C
  23+ 9F8C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9F8F 11 01 40     	LD DE,$4001
  25+ 9F92 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9F95 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9F97 ED B0        	LDIR
  28+ 9F99 01 FF 02     	LD BC,767
  29+ 9F9C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9F9D ED B0        	LDIR
  31+ 9F9F C9           	ret
  32+ 9FA0
# file closed: Cls.asm
1869  9FA0              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9FA0              ; ------------------------------------------------------------------------
   2+ 9FA0              ;
   3+ 9FA0              ;	30/1/24
   4+ 9FA0              ;
   5+ 9FA0              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9FA0              ;	Fila superior "0", Columna izquierda "0".
   7+ 9FA0              ;
   8+ 9FA0              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9FA0              ;
  10+ 9FA0              ;	Modifica: A,BC y DE.
  11+ 9FA0
  12+ 9FA0 7D           Genera_coordenadas ld a,l
  13+ 9FA1 E6 1F        	and $1f
  14+ 9FA3 32 91 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9FA6
  16+ 9FA6 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9FA7 FE 40        	cp $40
  18+ 9FA9 38 1C        	jr c,4F
  19+ 9FAB
  20+ 9FAB CD 82 9F     	call calcula_tercio
  21+ 9FAE 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9FAF
  23+ 9FAF 1E 00        	ld e,0
  24+ 9FB1 7D           	ld a,l
  25+ 9FB2 E6 E0        	and $e0
  26+ 9FB4 28 01        	jr z,1F
  27+ 9FB6 04           	inc b
  28+ 9FB7
  29+ 9FB7 04           1 inc b
  30+ 9FB8 05           	dec b
  31+ 9FB9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9FBB              ;														; _ , salimos.
  33+ 9FBB 1C           3 inc e
  34+ 9FBC D6 20        	sub 32
  35+ 9FBE 20 FB        	jr nz,3B
  36+ 9FC0 10 F5        	djnz 1B
  37+ 9FC2
  38+ 9FC2 7B           2 ld a,e
  39+ 9FC3 32 92 89     	ld (Coordenada_y),a
  40+ 9FC6 C9           	ret
  41+ 9FC7
  42+ 9FC7 AF           4 xor a
  43+ 9FC8 32 92 89     	ld (Coordenada_y),a
  44+ 9FCB C9           	ret
  45+ 9FCC
  46+ 9FCC              ; ------------------------------------------------------------------------
  47+ 9FCC              ;	28/05/23
  48+ 9FCC              ;
  49+ 9FCC              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9FCC              ;	Fila superior "0", Columna izquierda "0".
  51+ 9FCC              ;
  52+ 9FCC              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9FCC              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9FCC              ;
  55+ 9FCC              ;		DE="$120d"
  56+ 9FCC              ;
  57+ 9FCC              ;		D, (Coordenada_X), Columnas, $12
  58+ 9FCC              ;		E, (Coordenada_y), Filas, $0d
  59+ 9FCC              ;
  60+ 9FCC              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9FCC
  62+ 9FCC              ;	Modifica: A,BC y DE.
  63+ 9FCC
  64+ 9FCC
  65+ 9FCC              Genera_coordenadas_disparo
  66+ 9FCC
  67+ 9FCC              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9FCC
  69+ 9FCC 7D           	ld a,l
  70+ 9FCD E6 1F        	and $1f
  71+ 9FCF 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9FD0 CD 82 9F     	call calcula_tercio
  73+ 9FD3 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9FD4 1E 00        	ld e,0
  75+ 9FD6 7D           	ld a,l
  76+ 9FD7 E6 E0        	and $e0
  77+ 9FD9 28 01        	jr z,1F
  78+ 9FDB 04           	inc b
  79+ 9FDC 1C           1 inc e
  80+ 9FDD D6 20        	sub 32
  81+ 9FDF 20 FB        	jr nz,1B
  82+ 9FE1 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9FE3 C9           	ret
  84+ 9FE4
# file closed: Genera_coordenadas.asm
1870  9FE4              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FE4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FE4              ;
   3+ 9FE4              ;	12/12/23
   4+ 9FE4              ;
   5+ 9FE4              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FE4
   7+ 9FE4              ;	ADC HL,SP	LD (addr),SP
   8+ 9FE4              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FE4              ;	ADD IX,SP	LD SP,nn
  10+ 9FE4              ; 	ADD IY,SP	LD SP,HL
  11+ 9FE4              ;				LD SP,IX
  12+ 9FE4              ;	DEC SP		LD SP,IY
  13+ 9FE4
  14+ 9FE4              ;	EX (SP),HL
  15+ 9FE4              ;	EX (SP),IX
  16+ 9FE4              ;	EX (SP),IY
  17+ 9FE4
  18+ 9FE4              ;	INC SP
  19+ 9FE4
  20+ 9FE4                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 E3 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 A7 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 A9 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A D2 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A EB 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A AD 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A EF 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A E9 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A D2 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 EB 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A AD 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 EF 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B E3 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 E9 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B E3 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A E9 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C 21 00 80         ld hl,Album_de_fotos
 132+ 812F 22 E9 89         ld (Stack_snapshot),hl
 133+ 8132
 134+ 8132 C9               ret
# file closed: Guarda_foto_registros.asm
1871  8133
1872  8133              	SAVESNA "Pruebas.sna", START
1873  8133
1874  8133
1875  8133
1876  8133
# file closed: Banco_de_pruebas.asm
