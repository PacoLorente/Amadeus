# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01 CD EA 8D     	call Frame
  15  AA04 FB           	ei
  16  AA05 ED 4D        	reti
  17  AA07
  18  AA07              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  AA07
  20  AA07              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA07              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA07              ;
   3+ AA07              ;	17/02/23
   4+ AA07              ;
   5+ AA07              ;	Sprites e índices.
   6+ AA07
   7+ AA07              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 47 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 4B 89        	defw End_Snapshot_1
 267+ 8500 4F 89        	defw End_Snapshot_2
 268+ 8502 53 89        	defw End_Snapshot_3
 269+ 8504 49 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 4D 89        	defw End_Snapshot_disparos_1
 271+ 8508 51 89        	defw End_Snapshot_disparos_2
 272+ 850A 55 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E1 85        	defw Caja_1
  98+ 858E 24 86        	defw Caja_2
  99+ 8590 67 86        	defw Caja_3
 100+ 8592 AA 86        	defw Caja_4
 101+ 8594 ED 86        	defw Caja_5
 102+ 8596 30 87        	defw Caja_6
 103+ 8598 73 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00        	db 0,0											; Variables_de_borrado
 129+ 85BA 00 00        	defw 0											;	" " " " " " "
 130+ 85BC 00 00        	defw 0											;	" " " " " " "
 131+ 85BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 132+ 85C2
 133+ 85C2 00 00        	db 0,0											; Variables_de_pintado
 134+ 85C4 00 00        	defw 0											;	" " " " " " "
 135+ 85C6 00 00        	defw 0											;	" " " " " " "
 136+ 85C8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85CC
 138+ 85CC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 139+ 85CE
 140+ 85CE 00           	db 0											; (Autoriza_movimiento).
 141+ 85CF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 141+ 85D3 00 00
 142+ 85D5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 143+ 85D8
 144+ 85D8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85DA 00           	db 0											; (Cola_de_desplazamiento).
 146+ 85DB
 147+ 85DB 00           	db 0 											; (Columnas).
 148+ 85DC 00 00        	defw 0											; (Limite_horizontal).
 149+ 85DE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 150+ 85E1
 151+ 85E1              ; ---------- ---------- ---------- ---------- ----------
 152+ 85E1
 153+ 85E1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 154+ 85E3 00 00        	defw 0											; (Posicion_actual).
 155+ 85E5 00 00        	defw 0 											; (Puntero_objeto).
 156+ 85E7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 157+ 85EA
 158+ 85EA 00           	db %00000000 									; (Attr).
 159+ 85EB
 160+ 85EB 00 00        	defw 0											; (Indice_Sprite_der).
 161+ 85ED 00 00        	defw 0											; (Indice_Sprite_izq).
 162+ 85EF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 163+ 85F1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 164+ 85F3
 165+ 85F3 00 00        	defw 0											; (Posicion_inicio).
 166+ 85F5 00           	db 0											; (Cuad_objeto).
 167+ 85F6
 168+ 85F6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 169+ 85FA
 170+ 85FA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 171+ 85FB
 172+ 85FB 00 00        	db 0,0										    ; Variables_de_borrado
 173+ 85FD 00 00        	defw 0											;	" " " " " " "
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 176+ 8605
 177+ 8605 00 00        	db 0,0											; Variables_de_pintado
 178+ 8607 00 00        	defw 0											;	" " " " " " "
 179+ 8609 00 00        	defw 0											;	" " " " " " "
 180+ 860B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860F
 182+ 860F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 183+ 8611
 184+ 8611 00           	db 0											; (Autoriza_movimiento).
 185+ 8612 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 185+ 8616 00 00
 186+ 8618 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 187+ 861B
 188+ 861B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 189+ 861D 00           	db 0											; (Cola_de_desplazamiento).
 190+ 861E
 191+ 861E 00           	db 0 											; (Columnas).
 192+ 861F 00 00        	defw 0											; (Limite_horizontal).
 193+ 8621 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 194+ 8624
 195+ 8624              ; ---------- ---------- ---------- ---------- ----------
 196+ 8624
 197+ 8624 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 198+ 8626 00 00        	defw 0											; (Posicion_actual).
 199+ 8628 00 00        	defw 0 											; (Puntero_objeto).
 200+ 862A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 201+ 862D
 202+ 862D 00           	db %00000000 									; (Attr).
 203+ 862E
 204+ 862E 00 00        	defw 0											; (Indice_Sprite_der).
 205+ 8630 00 00        	defw 0											; (Indice_Sprite_izq).
 206+ 8632 00 00        	defw 0											; (Puntero_DESPLZ_der).
 207+ 8634 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 208+ 8636
 209+ 8636 00 00        	defw 0											; (Posicion_inicio).
 210+ 8638 00           	db 0											; (Cuad_objeto).
 211+ 8639
 212+ 8639 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 213+ 863D
 214+ 863D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 215+ 863E
 216+ 863E 00 00        	db 0,0										    ; Variables_de_borrado
 217+ 8640 00 00        	defw 0											;	" " " " " " "
 218+ 8642 00 00        	defw 0											;	" " " " " " "
 219+ 8644 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 8648
 221+ 8648 00 00        	db 0,0											; Variables_de_pintado
 222+ 864A 00 00        	defw 0											;	" " " " " " "
 223+ 864C 00 00        	defw 0											;	" " " " " " "
 224+ 864E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 8652
 226+ 8652 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 227+ 8654
 228+ 8654 00           	db 0											; (Autoriza_movimiento).
 229+ 8655 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 229+ 8659 00 00
 230+ 865B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 231+ 865E
 232+ 865E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 233+ 8660 00           	db 0											; (Cola_de_desplazamiento).
 234+ 8661
 235+ 8661 00           	db 0 											; (Columnas).
 236+ 8662 00 00        	defw 0											; (Limite_horizontal).
 237+ 8664 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 238+ 8667
 239+ 8667              ; ---------- ---------- ---------- ---------- ----------
 240+ 8667
 241+ 8667 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 242+ 8669 00 00        	defw 0											; (Posicion_actual).
 243+ 866B 00 00        	defw 0 											; (Puntero_objeto).
 244+ 866D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 245+ 8670
 246+ 8670 00           	db %00000000 									; (Attr).
 247+ 8671
 248+ 8671 00 00        	defw 0											; (Indice_Sprite_der).
 249+ 8673 00 00        	defw 0											; (Indice_Sprite_izq).
 250+ 8675 00 00        	defw 0											; (Puntero_DESPLZ_der).
 251+ 8677 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 252+ 8679
 253+ 8679 00 00        	defw 0											; (Posicion_inicio).
 254+ 867B 00           	db 0											; (Cuad_objeto).
 255+ 867C
 256+ 867C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 257+ 8680
 258+ 8680 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 259+ 8681
 260+ 8681 00 00        	db 0,0										    ; Variables_de_borrado
 261+ 8683 00 00        	defw 0											;	" " " " " " "
 262+ 8685 00 00        	defw 0											;	" " " " " " "
 263+ 8687 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 264+ 868B
 265+ 868B 00 00        	db 0,0											; Variables_de_pintado
 266+ 868D 00 00        	defw 0											;	" " " " " " "
 267+ 868F 00 00        	defw 0											;	" " " " " " "
 268+ 8691 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8695
 270+ 8695 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 271+ 8697
 272+ 8697 00           	db 0											; (Autoriza_movimiento).
 273+ 8698 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 273+ 869C 00 00
 274+ 869E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 275+ 86A1
 276+ 86A1 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 277+ 86A3 00           	db 0											; (Cola_de_desplazamiento).
 278+ 86A4
 279+ 86A4 00           	db 0 											; (Columnas).
 280+ 86A5 00 00        	defw 0											; (Limite_horizontal).
 281+ 86A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 282+ 86AA
 283+ 86AA              ; ---------- ---------- ---------- ---------- ----------
 284+ 86AA
 285+ 86AA 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 286+ 86AC 00 00        	defw 0											; (Posicion_actual).
 287+ 86AE 00 00        	defw 0 											; (Puntero_objeto).
 288+ 86B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 289+ 86B3
 290+ 86B3 00           	db %00000000 									; (Attr).
 291+ 86B4
 292+ 86B4 00 00        	defw 0											; (Indice_Sprite_der).
 293+ 86B6 00 00        	defw 0											; (Indice_Sprite_izq).
 294+ 86B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 295+ 86BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 296+ 86BC
 297+ 86BC 00 00        	defw 0											; (Posicion_inicio).
 298+ 86BE 00           	db 0											; (Cuad_objeto).
 299+ 86BF
 300+ 86BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 301+ 86C3
 302+ 86C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 303+ 86C4
 304+ 86C4 00 00        	db 0,0										    ; Variables_de_borrado
 305+ 86C6 00 00        	defw 0											;	" " " " " " "
 306+ 86C8 00 00        	defw 0											;	" " " " " " "
 307+ 86CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 308+ 86CE
 309+ 86CE 00 00        	db 0,0											; Variables_de_pintado
 310+ 86D0 00 00        	defw 0											;	" " " " " " "
 311+ 86D2 00 00        	defw 0											;	" " " " " " "
 312+ 86D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D8
 314+ 86D8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 315+ 86DA
 316+ 86DA 00           	db 0											; (Autoriza_movimiento).
 317+ 86DB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 317+ 86DF 00 00
 318+ 86E1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 319+ 86E4
 320+ 86E4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86E6 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86E7
 323+ 86E7 00           	db 0 											; (Columnas).
 324+ 86E8 00 00        	defw 0											; (Limite_horizontal).
 325+ 86EA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86ED
 327+ 86ED              ; ---------- ---------- ---------- ---------- ----------
 328+ 86ED
 329+ 86ED 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86EF 00 00        	defw 0											; (Posicion_actual).
 331+ 86F1 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86F3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86F6
 334+ 86F6 00           	db %00000000 									; (Attr).
 335+ 86F7
 336+ 86F7 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86F9 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86FB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86FD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86FF
 341+ 86FF 00 00        	defw 0											; (Posicion_inicio).
 342+ 8701 00           	db 0											; (Cuad_objeto).
 343+ 8702
 344+ 8702 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 8706
 346+ 8706 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 8707
 348+ 8707 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 8709 00 00        	defw 0											;	" " " " " " "
 350+ 870B 00 00        	defw 0											;	" " " " " " "
 351+ 870D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 8711
 353+ 8711 00 00        	db 0,0											; Variables_de_pintado
 354+ 8713 00 00        	defw 0											;	" " " " " " "
 355+ 8715 00 00        	defw 0											;	" " " " " " "
 356+ 8717 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 871B
 358+ 871B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 871D
 360+ 871D 00           	db 0											; (Autoriza_movimiento).
 361+ 871E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 8722 00 00
 362+ 8724 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 363+ 8727
 364+ 8727 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 365+ 8729 00           	db 0											; (Cola_de_desplazamiento).
 366+ 872A
 367+ 872A 00           	db 0 											; (Columnas).
 368+ 872B 00 00        	defw 0											; (Limite_horizontal).
 369+ 872D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 370+ 8730
 371+ 8730              ; ---------- ---------- ---------- ---------- ----------
 372+ 8730
 373+ 8730 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 374+ 8732 00 00        	defw 0											; (Posicion_actual).
 375+ 8734 00 00        	defw 0 											; (Puntero_objeto).
 376+ 8736 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 377+ 8739
 378+ 8739 00           	db %00000000 									; (Attr).
 379+ 873A
 380+ 873A 00 00        	defw 0											; (Indice_Sprite_der).
 381+ 873C 00 00        	defw 0											; (Indice_Sprite_izq).
 382+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 383+ 8740 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 384+ 8742
 385+ 8742 00 00        	defw 0											; (Posicion_inicio).
 386+ 8744 00           	db 0											; (Cuad_objeto).
 387+ 8745
 388+ 8745 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 389+ 8749
 390+ 8749 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 391+ 874A
 392+ 874A 00 00        	db 0,0										    ; Variables_de_borrado
 393+ 874C 00 00        	defw 0											;	" " " " " " "
 394+ 874E 00 00        	defw 0											;	" " " " " " "
 395+ 8750 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 396+ 8754
 397+ 8754 00 00        	db 0,0											; Variables_de_pintado
 398+ 8756 00 00        	defw 0											;	" " " " " " "
 399+ 8758 00 00        	defw 0											;	" " " " " " "
 400+ 875A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875E
 402+ 875E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 403+ 8760
 404+ 8760 00           	db 0											; (Autoriza_movimiento).
 405+ 8761 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 405+ 8765 00 00
 406+ 8767 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 407+ 876A
 408+ 876A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 409+ 876C 00           	db 0											; (Cola_de_desplazamiento).
 410+ 876D
 411+ 876D 00           	db 0 											; (Columnas).
 412+ 876E 00 00        	defw 0											; (Limite_horizontal).
 413+ 8770 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 414+ 8773
 415+ 8773              ; ---------- ---------- ---------- ---------- ----------
 416+ 8773
 417+ 8773 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 418+ 8775 00 00        	defw 0											; (Posicion_actual).
 419+ 8777 00 00        	defw 0 											; (Puntero_objeto).
 420+ 8779 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 421+ 877C
 422+ 877C 00           	db %00000000 									; (Attr).
 423+ 877D
 424+ 877D 00 00        	defw 0											; (Indice_Sprite_der).
 425+ 877F 00 00        	defw 0											; (Indice_Sprite_izq).
 426+ 8781 00 00        	defw 0											; (Puntero_DESPLZ_der).
 427+ 8783 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 428+ 8785
 429+ 8785 00 00        	defw 0											; (Posicion_inicio).
 430+ 8787 00           	db 0											; (Cuad_objeto).
 431+ 8788
 432+ 8788 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 433+ 878C
 434+ 878C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 435+ 878D
 436+ 878D 00 00        	db 0,0										    ; Variables_de_borrado
 437+ 878F 00 00        	defw 0											;	" " " " " " "
 438+ 8791 00 00        	defw 0											;	" " " " " " "
 439+ 8793 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 440+ 8797
 441+ 8797 00 00        	db 0,0											; Variables_de_pintado
 442+ 8799 00 00        	defw 0											;	" " " " " " "
 443+ 879B 00 00        	defw 0											;	" " " " " " "
 444+ 879D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 87A1
 446+ 87A1 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 447+ 87A3
 448+ 87A3 00           	db 0											; (Autoriza_movimiento).
 449+ 87A4 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 449+ 87A8 00 00
 450+ 87AA 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 451+ 87AD
 452+ 87AD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 453+ 87AF 00           	db 0											; (Cola_de_desplazamiento).
 454+ 87B0
 455+ 87B0 00           	db 0 											; (Columnas).
 456+ 87B1 00 00        	defw 0											; (Limite_horizontal).
 457+ 87B3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 458+ 87B6
 459+ 87B6              ; -------------------------------------------------------------------------------------
 460+ 87B6              ;
 461+ 87B6              ;	20/05/23
 462+ 87B6              ;
 463+ 87B6              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 464+ 87B6              ;
 465+ 87B6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 466+ 87B6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 467+ 87B6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 468+ 87B6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 469+ 87B6
 470+ 87B6              Indice_de_entidades
 471+ 87B6
 472+ 87B6 BA 87        	defw Entidad_1
 473+ 87B8 CA 87        	defw Entidad_2
 474+ 87BA
 475+ 87BA              ;	BADSAT, (Satélite malvado).
 476+ 87BA
 477+ 87BA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 478+ 87BC 04           	db %00000100									; (Attr).
 479+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 480+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 481+ 87C1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 482+ 87C3 01           	db 1											; (Cuad_objeto).
 483+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 484+ 87C8 08 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 485+ 87CA
 486+ 87CA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 487+ 87CC 02           	db %00000010									; (Attr).
 488+ 87CD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 489+ 87CF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 490+ 87D1 40 50        	defw $5040                                      ; (Posicion_inicio).
 491+ 87D3 01           	db 1											; (Cuad_objeto).
 492+ 87D4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 493+ 87D8 08 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 494+ 87DA
# file closed: Cajas_y_disparos.asm
  22  87DA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87DA              ; 13/05/23
   2+ 87DA
   3+ 87DA              Indice_de_niveles
   4+ 87DA
   5+ 87DA E8 87        	defw Nivel_1
   6+ 87DC EF 87        	defw Nivel_2
   7+ 87DE FC 87        	defw Nivel_3
   8+ 87E0 0C 88        	defw Nivel_4
   9+ 87E2 1E 88        	defw Nivel_5
  10+ 87E4              ;	...
  11+ 87E4              ;	...
  12+ 87E4              ;	+ Niveles ...
  13+ 87E4
  14+ 87E4 00 00        	defw 0
  15+ 87E6 00 00        	defw 0
  16+ 87E8
  17+ 87E8 06           Nivel_1 db 6	                                ; Nº de entidades.
  18+ 87E9 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  18+ 87ED 01 01
  19+ 87EF 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87F0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 87F4 01 02
  21+ 87F6 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87FA 01 02
  22+ 87FC 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87FD 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  23+ 8801 01
  24+ 8802 03 01 01 01  	db 3,1,1,1,1
  24+ 8806 01
  25+ 8807 03 01 01 01  	db 3,1,1,1,1
  25+ 880B 01
  26+ 880C 11           Nivel_4 db 17									; Nº de entidades.
  27+ 880D 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  27+ 8811 01
  28+ 8812 04 01 01 01  	db 4,1,1,1,1
  28+ 8816 01
  29+ 8817 04 01 01 01  	db 4,1,1,1,1
  29+ 881B 01
  30+ 881C 02 03        	db 2,3
  31+ 881E 14           Nivel_5 db 20									; Nº de entidades.
  32+ 881F 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  32+ 8823 01
  33+ 8824 05 01 01 01  	db 5,1,1,1,1
  33+ 8828 01
  34+ 8829 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 882D 01
  35+ 882E 05 01 01 01  	db 5,1,1,1,1
  35+ 8832 01
  36+ 8833
  37+ 8833              ;---------------------------------------------------------------------------------------------------------------
  38+ 8833              ;
  39+ 8833              ;   3/9/23
  40+ 8833              ;
  41+ 8833              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8833              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8833              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8833              ;	_en la caja DRAW correspondiente.
  45+ 8833              ;
  46+ 8833              ;	MODIFICA: HL,DE y A.
  47+ 8833              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8833
  49+ 8833              Inicializa_Punteros_de_nivel
  50+ 8833
  51+ 8833 21 DA 87     	ld hl,Indice_de_niveles
  52+ 8836 22 82 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8839 CD C0 8C     	call Extrae_address
  54+ 883C 7E           	ld a,(hl)
  55+ 883D 32 35 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8840 23           	inc hl
  57+ 8841 22 84 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8844 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8845
  60+ 8845              ;---------------------------------------------------------------------------------------------------------------
  61+ 8845              ;
  62+ 8845              ;   13/5/23
  63+ 8845              ;
  64+ 8845              ;	Destruye A,BC,HL,DE
  65+ 8845
  66+ 8845              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8845              ;	_del juego.
  68+ 8845
  69+ 8845              Prepara_cajas
  70+ 8845
  71+ 8845              ; Preparamos los punteros de las cajas.
  72+ 8845
  73+ 8845 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8848 CD C0 8C     	call Extrae_address
  75+ 884B CD 88 88     	call Avanza_caja
  76+ 884E
  77+ 884E CD CC 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 8851
  79+ 8851 2A 84 89     	ld hl,(Datos_de_nivel)
  80+ 8854
  81+ 8854              ; HL está en los datos del nivel correspondiente.
  82+ 8854              ; B actuará como contador de cajas.
  83+ 8854
  84+ 8854 C5           1 push bc
  85+ 8855
  86+ 8855 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8856 CD 79 88     	call PreparaBC
  88+ 8859
  89+ 8859 21 B6 87     	ld hl,Indice_de_entidades
  90+ 885C CD 81 88     	call SBC_HL_con_BC_y_Extrae
  91+ 885F 22 3B 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8862
  93+ 8862 CD 92 88     	call Datos_de_entidad_a_caja
  94+ 8865
  95+ 8865 2A 33 89     	ld hl,(Indice_restore_caja)
  96+ 8868 CD C0 8C     	call Extrae_address
  97+ 886B CD 88 88     	call Avanza_caja
  98+ 886E
  99+ 886E 2A 84 89     	ld hl,(Datos_de_nivel)
 100+ 8871 23           	inc hl
 101+ 8872 22 84 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8875
 103+ 8875 C1           	pop bc
 104+ 8876 10 DC        	djnz 1B
 105+ 8878 C9           	ret
 106+ 8879
 107+ 8879 CB 27        PreparaBC sla a
 108+ 887B D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 887D 4F           	ld c,a
 110+ 887E 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 8880 C9           	ret
 112+ 8881
 113+ 8881 A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8882 ED 4A        	adc hl,bc
 115+ 8884 CD C0 8C     	call Extrae_address
 116+ 8887 C9           	ret
 117+ 8888
 118+ 8888 22 2F 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 888B 13           	inc de
 120+ 888C 13           	inc de
 121+ 888D EB           	ex de,hl
 122+ 888E 22 33 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 8891 C9           	ret
 124+ 8892
 125+ 8892              Datos_de_entidad_a_caja
 126+ 8892
 127+ 8892              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8892
 129+ 8892
 130+ 8892 ED 5B 2F 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8896
 132+ 8896 01 02 00     	ld bc,2
 133+ 8899 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 889B
 135+ 889B 01 07 00     	ld bc,7
 136+ 889E CD C6 88     	call Situa_DE
 137+ 88A1
 138+ 88A1 01 05 00     	ld bc,5
 139+ 88A4 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 88A6
 141+ 88A6 01 04 00     	ld bc,4
 142+ 88A9 CD C6 88     	call Situa_DE
 143+ 88AC
 144+ 88AC 01 07 00     	ld bc,7
 145+ 88AF ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 88B1
 147+ 88B1 01 18 00     	ld bc,24
 148+ 88B4 CD C6 88     	call Situa_DE
 149+ 88B7
 150+ 88B7 01 02 00     	ld bc,2
 151+ 88BA ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88BC
 153+ 88BC              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88BC              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88BC
 156+ 88BC 01 0F 00     	ld bc,15									; *****
 157+ 88BF CD C6 88     	call Situa_DE
 158+ 88C2
 159+ 88C2 3E 03        	ld a,3
 160+ 88C4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88C5
 162+ 88C5 C9           	ret
 163+ 88C6
 164+ 88C6 EB           Situa_DE ex de,hl
 165+ 88C7 A7           	and a
 166+ 88C8 ED 4A        	adc hl,bc
 167+ 88CA EB           	ex de,hl
 168+ 88CB C9           	ret
 169+ 88CC
 170+ 88CC              ;---------------------------------------------------------------------------------------------------------------
 171+ 88CC              ;
 172+ 88CC              ;	21/5/23
 173+ 88CC              ;
 174+ 88CC              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88CC              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88CC              ;
 177+ 88CC              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88CC              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88CC              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88CC              ;
 181+ 88CC              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88CC              ;	MODIFICA: A y B.
 183+ 88CC              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88CC
 185+ 88CC              Admin_num_entidades
 186+ 88CC
 187+ 88CC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88CC
 189+ 88CC 3A 35 89     	ld a,(Numero_de_entidades)
 190+ 88CF A7           	and a
 191+ 88D0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88D0              ;	jr z,$
 193+ 88D0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88D0
 195+ 88D0 20 03        	jr nz,3F
 196+ 88D2
 197+ 88D2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88D2
 199+ 88D2 CD 33 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88D5
 201+ 88D5 3A 35 89     3 ld a,(Numero_de_entidades)
 202+ 88D8 FE 0A        	cp 10
 203+ 88DA 38 08        	jr c,1F
 204+ 88DC
 205+ 88DC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88DC              ; Actualizamos variables.
 207+ 88DC
 208+ 88DC 3E 0A        	ld a,10
 209+ 88DE 32 36 89     	ld (Numero_parcial_de_entidades),a
 210+ 88E1 47           	ld b,a
 211+ 88E2 18 04        	jr 2F
 212+ 88E4
 213+ 88E4              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88E4              ; (Numero_de_entidades)="0".
 215+ 88E4
 216+ 88E4 32 36 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88E7 47           	ld b,a
 218+ 88E8 C9           2 ret
# file closed: Niveles.asm
  23  88E9
  24  88E9              ; ******************************************************************************************************************************************************************************************
  25  88E9              ; Constantes.
  26  88E9              ; ******************************************************************************************************************************************************************************************
  27  88E9              ;
  28  88E9              ; 25/05/23
  29  88E9              ;
  30  88E9              ; Constantes generales.
  31  88E9              ;
  32  88E9
  33  88E9              Sprite_vacio equ $f000
  34  88E9              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  88E9              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  88E9              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  88E9              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  88E9
  39  88E9              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  88E9              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  88E9              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  42  88E9              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  88E9              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  88E9              ;                               				        ; De momento situamos este almacén en $7060.
  45  88E9              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  46  88E9              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  47  88E9              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  48  88E9              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  49  88E9              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  50  88E9              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  51  88E9
  52  88E9              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  53  88E9
  54  88E9              ; ******************************************************************************************************************************************************************************************
  55  88E9              ; Variables.
  56  88E9              ; ******************************************************************************************************************************************************************************************
  57  88E9              ;
  58  88E9              ; 28/07/23
  59  88E9              ;
  60  88E9              ; Variables de DRAW. (Motor principal).
  61  88E9              ;
  62  88E9              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  63  88E9
  64  88E9 00           Filas db 0												; Filas. [DRAW]
  65  88EA 00           Columns db 0  											; Nº de columnas. [DRAW]
  66  88EB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  67  88ED 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  68  88EF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  69  88F0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  70  88F1
  71  88F1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  72  88F1
  73  88F1 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  74  88F2              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  75  88F2              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  76  88F2 00           Attr db 0												; Atributos de la entidad:
  77  88F3
  78  88F3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  79  88F3              ;
  80  88F3              ;	COLORES: 0 ..... NEGRO
  81  88F3              ;    		 1 ..... AZUL
  82  88F3              ; 			 2 ..... ROJO
  83  88F3              ;			 3 ..... MAGENTA
  84  88F3              ; 			 4 ..... VERDE
  85  88F3              ; 			 5 ..... CIAN
  86  88F3              ;			 6 ..... AMARILLO
  87  88F3              ; 			 7 ..... BLANCO
  88  88F3
  89  88F3 00 00        Indice_Sprite_der defw 0
  90  88F5 00 00        Indice_Sprite_izq defw 0
  91  88F7 00 00        Puntero_DESPLZ_der defw 0
  92  88F9 00 00        Puntero_DESPLZ_izq defw 0
  93  88FB
  94  88FB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  95  88FD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  96  88FE
  97  88FE              ; Variables de objeto. (Características).
  98  88FE
  99  88FE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 100  88FF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 101  8900 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 102  8901 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 103  8902
 104  8902 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 105  8903              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 106  8903              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 107  8903 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  8905 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  8907 00 00        	defw 0
 110  8909 00 00 00 00  	db 0,0,0,0
 111  890D
 112  890D 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 113  890F 00 00        	defw 0
 114  8911 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 115  8913 00 00 00 00  	db 0,0,0,0
 116  8917
 117  8917              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 118  8917
 119  8917 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 120  8918              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 121  8918              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 122  8918              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 123  8918              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 124  8918              ;
 125  8918              ; 														DESCRIPCIÖN:
 126  8918              ;
 127  8918              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 128  8918              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 129  8918              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 130  8918              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 131  8918              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 132  8918              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 133  8918              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 134  8918              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 135  8918              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 136  8918              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 137  8918              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 138  8918              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 139  8918              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 140  8918              ;
 141  8918              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 142  8918              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 143  8918              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 144  8918
 145  8918 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 146  8919
 147  8919              ; Movimiento. ------------------------------------------------------------------------------------------------------
 148  8919
 149  8919 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 150  891A 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 151  891C 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 152  891E 00 00        Puntero_indice_mov_bucle defw 0							;
 153  8920              ;
 154  8920              ;
 155  8920 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 156  8921              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 157  8921              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 158  8921 00           Incrementa_puntero_backup db 0
 159  8922 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 160  8923              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 161  8923 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 162  8924 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 163  8925 00           Cola_de_desplazamiento db 0								; Este byte indica:
 164  8926              ;
 165  8926              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 166  8926              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 167  8926              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 168  8926              ;
 169  8926              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 170  8926              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 171  8926              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 172  8926              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 173  8926              ;
 174  8926              ;														;	"$ff" ..... Bucle infinito de repetición.
 175  8926              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 176  8926              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 177  8926
 178  8926
 179  8926              ; Variables de funcionamiento. [DRAW].
 180  8926
 181  8926 00           Columnas db 0
 182  8927 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 183  8929              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 184  8929 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  892A
 186  892A              ; variables de control general.
 187  892A
 188  892A 00           Ctrl_2 db 0
 189  892B              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 190  892B              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 191  892B              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 192  892B              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 193  892B              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 194  892B              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 195  892B              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 196  892B              ;
 197  892B              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 198  892B              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 199  892B              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 200  892B              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 201  892B              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 202  892B
 203  892B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 204  892C
 205  892C              ;! 67 Bytes por entidad.
 206  892C
 207  892C              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 208  892C              ;					         		---------;      ;---------
 209  892C
 210  892C
 211  892C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 212  892C
 213  892C 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 214  892D
 215  892D              ;														DESCRIPCIÓN:
 216  892D              ;
 217  892D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 218  892D              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 219  892D              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 220  892D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 221  892D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 222  892D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 223  892D
 224  892D              ;														BIT 3, Recarga de nueva oleada.
 225  892D              ;														BIT 4, Recarga de nueva oleada.
 226  892D              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 227  892D              ;														BIT 6, **** Frame completo.
 228  892D
 229  892D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 230  892F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 231  892F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 232  892F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 233  892F
 234  892F
 235  892F
 236  892F              ; Gestión de ENTIDADES y CAJAS.
 237  892F
 238  892F 00 00        Puntero_store_caja defw 0
 239  8931 00 00        Puntero_restore_caja defw 0
 240  8933 00 00        Indice_restore_caja defw 0
 241  8935 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 242  8936 00           Numero_parcial_de_entidades db 0
 243  8937 00           Entidades_en_curso db 0									; ..... ..... .....
 244  8938 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 245  8939              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 246  8939              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 247  8939              ;														; _ (Numero_de_malotes)="0".
 248  8939 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 249  893B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 250  893D              ;														; _ puntero (Indice_entidades).
 251  893D
 252  893D
 253  893D              ;---------------------------------------------------------------------------------------------------------------
 254  893D              ;
 255  893D              ;	2/9/23
 256  893D              ;
 257  893D              ;	Álbumes.
 258  893D
 259  893D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 260  893F              ;														; _variable para almacenar lo posición del puntero_
 261  893F              ; 														; _de pila, SP.
 262  893F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 263  8941              ;														; La utiliza la rutina [Extrae_foto_registros].
 264  8941 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 265  8943 00 00        Stack_snapshot defw 0
 266  8945 00 00        Stack_snapshot_disparos defw 0
 267  8947
 268  8947 00 00        End_Snapshot defw 0
 269  8949              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 270  8949 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 271  894B              ;														; _el snapshot de los registros del siguiente disparo.
 272  894B              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 273  894B 00 00        End_Snapshot_1 defw 0
 274  894D 00 00        End_Snapshot_disparos_1 defw 0
 275  894F 00 00        End_Snapshot_2 defw 0
 276  8951 00 00        End_Snapshot_disparos_2 defw 0
 277  8953 00 00        End_Snapshot_3 defw 0
 278  8955 00 00        End_Snapshot_disparos_3 defw 0
 279  8957
 280  8957 00 00        Puntero_indice_album_de_fotos defw 0
 281  8959 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 282  895B
 283  895B 00 00        Puntero_indice_End_Snapshot defw 0
 284  895D 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 285  895F 00 00        Puntero_de_End_Snapshot defw 0
 286  8961 00 00        Puntero_de_End_Snapshot_disparos defw 0
 287  8963
 288  8963              ;---------------------------------------------------------------------------------------------------------------
 289  8963
 290  8963              ; Gestión de Disparos.
 291  8963
 292  8963 00           Numero_de_disparotes db 0
 293  8964 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 294  8966 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 295  8968 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 296  8969              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 297  8969              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 298  8969 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 299  896B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 300  896B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 301  896B              ;														; _produzca colisión.
 302  896B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 303  896D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 304  896D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 305  8970              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 306  8970 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 307  8973              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 308  8973 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 309  8975 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 310  8976
 311  8976              ;---------------------------------------------------------------------------------------------------------------
 312  8976
 313  8976              ; Relojes y temporizaciones.
 314  8976
 315  8976 00           Contador_de_frames db 0
 316  8977 00           Contador_de_frames_2 db 0
 317  8978
 318  8978 04           Clock_explosion db 4
 319  8979 1E           Clock_Entidades_en_curso db 30
 320  897A 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 321  897B              ;														; Repite la oleada de entidades.
 322  897B 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 323  897C 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 324  897D 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 325  897E
 326  897E 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 327  897F 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 328  8980 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 329  8981
 330  8981              ;---------------------------------------------------------------------------------------------------------------
 331  8981
 332  8981              ; Gestión de NIVELES.
 333  8981
 334  8981 00           Nivel db 0												; Nivel actual del juego.
 335  8982 00 00        Puntero_indice_NIVELES defw 0
 336  8984 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 337  8986              ; 														; _ que definen el NIVEL.
 338  8986              ; Y todo comienza aquí .....
 339  8986              ;
 340  8986              ; Rutina principal *************************************************************************************************************************************************************************
 341  8986              ;
 342  8986              ;	14/11/22
 343  8986
 344  8986              START
 345  8986
 346  8986 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 347  8989 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 348  898B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 349  898D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 350  898F F3           	DI
 351  8990
 352  8990 3E 07        	ld a,%00000111
 353  8992 CD 35 99     	call Cls
 354  8995
 355  8995 CD 99 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 356  8998
 357  8998              ; INICIALIZACIÓN.
 358  8998
 359  8998 CD 33 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 360  899B
 361  899B CD 45 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 362  899E
 363  899E CD 0A 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 364  89A1              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 365  89A1 CD 20 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 366  89A4              ;													     ; _ malotes antes de guardar ninguna foto.
 367  89A4              ; ----------
 368  89A4
 369  89A4 CD 49 8D     	call Restore_entidad
 370  89A7
 371  89A7 21 36 89     	ld hl,Numero_parcial_de_entidades
 372  89AA 46           	ld b,(hl)
 373  89AB 04           	inc b
 374  89AC 05           	dec b
 375  89AD 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 376  89AF
 377  89AF              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 378  89AF              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 379  89AF              ;	Pintamos el resto de entidades:
 380  89AF
 381  89AF              ;	INICIA ENTIDADES !!!!!
 382  89AF
 383  89AF C5           1 push bc  												; Guardo el contador de entidades.
 384  89B0
 385  89B0 CD B1 8B     	call Inicia_entidad
 386  89B3
 387  89B3 C1           	pop bc
 388  89B4 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 389  89B6
 390  89B6              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 391  89B6              ; (Esto se dá cuando se inicia una nueva oleada).
 392  89B6
 393  89B6 3A 2C 89     	ld a,(Ctrl_1)
 394  89B9 CB 5F        	bit 3,a
 395  89BB 20 18        	jr nz,5F											; Loop
 396  89BD
 397  89BD              ; 	INICIA AMADEUS !!!!!
 398  89BD
 399  89BD CD 70 8D     3 call Restore_Amadeus
 400  89C0 CD C6 8C     	call Inicia_Puntero_objeto
 401  89C3 CD 6B 93     	call Draw
 402  89C6 CD A0 7F     	call Guarda_foto_registros
 403  89C9 11 9E 85     	ld de,Amadeus_db
 404  89CC CD 82 8D     	call Store_Amadeus
 405  89CF
 406  89CF              ; 	INICIA DISPAROS !!!!!
 407  89CF
 408  89CF CD 82 8C     	call Inicia_Puntero_Disparo_Entidades
 409  89D2 CD 89 8C     	call Inicia_Puntero_Disparo_Amadeus
 410  89D5
 411  89D5              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 412  89D5
 413  89D5 CD 0A 8C     5 call Inicia_punteros_de_cajas
 414  89D8 CD 49 8D     	call Restore_entidad
 415  89DB
 416  89DB 3A 2C 89     	ld a,(Ctrl_1)
 417  89DE CB 5F        	bit 3,a
 418  89E0 28 0A        	jr z,6F
 419  89E2
 420  89E2              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 421  89E2
 422  89E2 21 2C 89     	ld hl,Ctrl_1
 423  89E5 CB 9E        	res 3,(hl)
 424  89E7 CD 90 8C     	call Calcula_numero_de_malotes
 425  89EA 18 0A        	jr Main
 426  89EC
 427  89EC              ; ----------
 428  89EC
 429  89EC 3A 36 89     6 ld a,(Numero_parcial_de_entidades)
 430  89EF 3C           	inc a
 431  89F0 32 38 89     	ld (Numero_de_malotes),a
 432  89F3
 433  89F3              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 434  89F3              ; _ tenemos calculado (Numero_de_malotes).
 435  89F3              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 436  89F3              ; _ para situarnos en el siguiente album.
 437  89F3
 438  89F3 CD 51 8C     	call Avanza_puntero_de_album_de_fotos_y_malotes
 439  89F6
 440  89F6              ; ------------------------------------
 441  89F6
 442  89F6              Main
 443  89F6
 444  89F6              ;
 445  89F6              ;	3/8/23
 446  89F6
 447  89F6 FB           	ei
 448  89F7
 449  89F7 3A 79 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 450  89FA 47           	ld b,a
 451  89FB 3A 76 89     	ld a,(Contador_de_frames)
 452  89FE B8           	cp b
 453  89FF 20 18        	jr nz,13F
 454  8A01
 455  8A01 3A 36 89     	ld a,(Numero_parcial_de_entidades)
 456  8A04 47           	ld b,a
 457  8A05 3A 37 89     	ld a,(Entidades_en_curso)
 458  8A08 B8           	cp b
 459  8A09 28 0E        	jr z,13F
 460  8A0B 30 0C        	jr nc,13F
 461  8A0D
 462  8A0D 3C           	inc a
 463  8A0E 32 37 89     	ld (Entidades_en_curso),a
 464  8A11
 465  8A11 3A 79 89     	ld a,(Clock_Entidades_en_curso)
 466  8A14
 467  8A14              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 468  8A14              ;! _ IMPREDECIBLE !!!!
 469  8A14
 470  8A14 C6 64        	add 100
 471  8A16 32 79 89     	ld (Clock_Entidades_en_curso),a
 472  8A19
 473  8A19              ; Habilita disparos.
 474  8A19
 475  8A19 21 7B 89     13 ld hl,Disparo_Amadeus
 476  8A1C 11 7D 89     	ld de,CLOCK_repone_disparo_Amadeus
 477  8A1F CD F9 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 478  8A22
 479  8A22 21 7E 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 480  8A25 11 80 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 481  8A28 CD F9 9C     	call Habilita_disparos
 482  8A2B
 483  8A2B              ; COLISIONES.
 484  8A2B
 485  8A2B CD 4D 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 486  8A2E
 487  8A2E              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 488  8A2E              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 489  8A2E              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 490  8A2E
 491  8A2E AF           	xor a
 492  8A2F 32 68 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 493  8A32
 494  8A32 CD 0A 8C     	call Inicia_punteros_de_cajas
 495  8A35 CD 49 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 496  8A38              ; 														; _ en DRAW.
 497  8A38 3A E9 88     	ld a,(Filas)
 498  8A3B A7           	and a
 499  8A3C 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 500  8A3E CD 5B 8D     	call Incrementa_punteros_de_cajas
 501  8A41 18 F2        	jr 12B
 502  8A43
 503  8A43              ; ---------------------------------------------------------------------------------------
 504  8A43
 505  8A43 3A 36 89     10 ld a,(Numero_parcial_de_entidades)
 506  8A46 47               ld b,a
 507  8A47 A7           	and a
 508  8A48 20 14        	jr nz,11F
 509  8A4A
 510  8A4A 21 2C 89     	ld hl,Ctrl_1
 511  8A4D CB 66        	bit 4,(hl)
 512  8A4F C2 DB 8A     	jp nz,16F
 513  8A52
 514  8A52 21 2C 89     	ld hl,Ctrl_1
 515  8A55 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 516  8A57
 517  8A57 3A 76 89     	ld a,(Contador_de_frames)
 518  8A5A 3C           	inc a
 519  8A5B 32 7A 89     	ld (Activa_recarga_cajas),a
 520  8A5E
 521  8A5E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 522  8A5E
 523  8A5E 3A 37 89     11 ld a,(Entidades_en_curso)
 524  8A61 A7           	and a
 525  8A62 CA DB 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 526  8A65 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 527  8A66
 528  8A66              ; Código que ejecutamos con cada entidad:
 529  8A66              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 530  8A66
 531  8A66 C5           15 push bc 												; Nº de entidades en curso.
 532  8A67
 533  8A67              ; Impacto ???
 534  8A67
 535  8A67 3A 02 89     	ld a,(Impacto)
 536  8A6A A7           	and a
 537  8A6B 28 2D        	jr z,8F
 538  8A6D
 539  8A6D              ; Hay Impacto en esta entidad.
 540  8A6D
 541  8A6D 21 78 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 542  8A70 35           	dec (hl)
 543  8A71 20 62        	jr nz,17F
 544  8A73
 545  8A73              ;! Velocidad de la animación de la explosión.
 546  8A73
 547  8A73 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 548  8A75              ;														; _,(velocidad de la explosión).
 549  8A75 CD C1 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 550  8A78
 551  8A78              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 552  8A78
 553  8A78 3A 2A 89     	ld a,(Ctrl_2)
 554  8A7B CB 4F        	bit 1,a
 555  8A7D 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 556  8A7F
 557  8A7F              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 558  8A7F
 559  8A7F 3A F1 88     	ld a,(CTRL_DESPLZ)
 560  8A82 A7           	and a
 561  8A83 20 08        	jr nz,18F
 562  8A85
 563  8A85 21 84 84     	ld hl,Indice_Explosion_2x2-2
 564  8A88 22 F7 88     	ld (Puntero_DESPLZ_der),hl
 565  8A8B 18 06        	jr 19F
 566  8A8D
 567  8A8D 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 568  8A90 22 F7 88     	ld (Puntero_DESPLZ_der),hl
 569  8A93
 570  8A93 21 2A 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 571  8A96 CB CE        	set 1,(hl)
 572  8A98 18 22        	jr 7F
 573  8A9A
 574  8A9A              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 575  8A9A              ; _con las coordenadas de la entidad almacenada en DRAW.
 576  8A9A
 577  8A9A 3A 2C 89     8 ld a,(Ctrl_1)
 578  8A9D CB 57        	bit 2,a
 579  8A9F 28 1B        	jr z,7F
 580  8AA1
 581  8AA1 2A 6B 89     	ld hl,(Coordenadas_disparo_certero)
 582  8AA4 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 583  8AA5              ;														; E contiene la coordenada_X del disparo.
 584  8AA5 2A EF 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 585  8AA8              ;														; H FILA, (Coordenada_y de la entidad).
 586  8AA8 A7           	and a
 587  8AA9 ED 52        	sbc hl,de
 588  8AAB
 589  8AAB CD 84 92     	call Determina_resultado_comparativa
 590  8AAE
 591  8AAE 78           	ld a,b
 592  8AAF A7           	and a
 593  8AB0 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 594  8AB2
 595  8AB2              ; ----- ----- -----
 596  8AB2
 597  8AB2 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 598  8AB4 32 02 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 599  8AB7
 600  8AB7 21 2C 89     	ld hl,Ctrl_1
 601  8ABA CB 96        	res 2,(hl)
 602  8ABC
 603  8ABC CD 33 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 604  8ABF
 605  8ABF 3A 17 89     	ld a,(Ctrl_0)
 606  8AC2 CB 67        	bit 4,a
 607  8AC4 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 608  8AC6
 609  8AC6              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 610  8AC6              ; [[[
 611  8AC6 CD E4 8D     	call Detecta_disparo_entidad
 612  8AC9              ; ]]]
 613  8AC9 CD D1 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 614  8ACC
 615  8ACC 21 17 89     	ld hl,Ctrl_0
 616  8ACF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 617  8AD1 AF           	xor a
 618  8AD2 32 18 89     	ld (Obj_dibujado),a
 619  8AD5
 620  8AD5 CD 0E 8D     17 call Store_Restore_cajas
 621  8AD8
 622  8AD8 C1           	pop bc
 623  8AD9 10 8B        	djnz 15B
 624  8ADB
 625  8ADB              ; ------------------------------------
 626  8ADB
 627  8ADB              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 628  8ADB              ; Hemos gestionado todas las unidades.
 629  8ADB              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 630  8ADB
 631  8ADB              ;	ld hl,Ctrl_1
 632  8ADB              ;	res 2,(hl)
 633  8ADB
 634  8ADB              ; ------------------------------------
 635  8ADB
 636  8ADB              ; Tras la gestión de las entidades, ... AMADEUS.
 637  8ADB
 638  8ADB CD 70 8D     16 call Restore_Amadeus
 639  8ADE
 640  8ADE              ;! Activa/desactiva impacto con Amadeus.
 641  8ADE
 642  8ADE 3A 02 89     	ld a,(Impacto)
 643  8AE1 A7           	and a
 644  8AE2 20 FE        	jr nz,$
 645  8AE4
 646  8AE4 CD 92 8B     	call Mov_Amadeus
 647  8AE7
 648  8AE7 3A 17 89     	ld a,(Ctrl_0)
 649  8AEA CB 67        	bit 4,a
 650  8AEC 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 651  8AEE
 652  8AEE CD D1 8B     	call Guarda_foto_entidad_a_pintar
 653  8AF1
 654  8AF1 21 17 89     14 ld hl,Ctrl_0
 655  8AF4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 656  8AF6
 657  8AF6 AF           	xor a
 658  8AF7 32 18 89     	ld (Obj_dibujado),a
 659  8AFA
 660  8AFA 11 9E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 661  8AFD CD 82 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 662  8B00
 663  8B00              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 664  8B00
 665  8B00              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 666  8B00
 667  8B00              ;	call Calcula_numero_de_disparotes
 668  8B00
 669  8B00 CD 51 8C      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 670  8B03              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 671  8B03              ;														; _ interrupción.
 672  8B03 3E 04        	ld a,4
 673  8B05 D3 FE        	out ($fe),a
 674  8B07
 675  8B07              ; ----------------------------------------
 676  8B07
 677  8B07 3A 2C 89     	ld a,(Ctrl_1) 										; Existe Loop?
 678  8B0A CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 679  8B0C CA F6 89     	jp z,Main
 680  8B0F
 681  8B0F              ; -----
 682  8B0F              ;	(((
 683  8B0F
 684  8B0F 3A 76 89     	ld a,(Contador_de_frames)
 685  8B12 47           	ld b,a
 686  8B13 3A 7A 89     	ld a,(Activa_recarga_cajas)
 687  8B16 B8           	cp b
 688  8B17 28 08        	jr z,20F
 689  8B19
 690  8B19 21 2C 89     	ld hl,Ctrl_1
 691  8B1C CB E6        	set 4,(hl)
 692  8B1E C3 F6 89     	jp Main
 693  8B21
 694  8B21 21 2C 89     20 ld hl,Ctrl_1
 695  8B24 CB A6        	res 4,(hl)
 696  8B26 F3           	di
 697  8B27
 698  8B27 3A 76 89     	ld a,(Contador_de_frames)
 699  8B2A
 700  8B2A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 701  8B2A              ;! _ IMPREDECIBLE !!!!
 702  8B2A
 703  8B2A C6 0A        	add 10
 704  8B2C 32 79 89     	ld (Clock_Entidades_en_curso),a
 705  8B2F
 706  8B2F C3 9B 89     	jp 4B
 707  8B32
 708  8B32 C9           	ret
 709  8B33
 710  8B33              ; --------------------------------------------------------------------------------------------------------------
 711  8B33              ;
 712  8B33              ;	27/05/23
 713  8B33
 714  8B33              Mov_obj
 715  8B33
 716  8B33 3A 2A 89     	ld a,(Ctrl_2)
 717  8B36 CB 4F        	bit 1,a
 718  8B38 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 719  8B3A
 720  8B3A              ; Explosión:
 721  8B3A
 722  8B3A 3A 2B 89     	ld a,(Frames_explosion)
 723  8B3D A7           	and a
 724  8B3E 20 11        	jr nz,4F
 725  8B40
 726  8B40              ; Una alimaña menos!!!!!!!!!1
 727  8B40
 728  8B40 CD 8B 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 729  8B43 21 36 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 730  8B46 35           	dec (hl)
 731  8B47 21 37 89     	ld hl,Entidades_en_curso
 732  8B4A 35           	dec (hl)
 733  8B4B 21 35 89     	ld hl,Numero_de_entidades
 734  8B4E 35           	dec (hl)
 735  8B4F 18 40        	jr 3F
 736  8B51
 737  8B51              ; -----
 738  8B51
 739  8B51              ;	`Movemos´ la explosión.
 740  8B51
 741  8B51 2A F7 88     4 ld hl,(Puntero_DESPLZ_der)
 742  8B54 23           	inc hl
 743  8B55 23           	inc hl
 744  8B56 22 F7 88     	ld (Puntero_DESPLZ_der),hl
 745  8B59 CD C0 8C     	call Extrae_address
 746  8B5C 22 ED 88     	ld (Puntero_objeto),hl
 747  8B5F
 748  8B5F 21 2B 89     	ld hl,Frames_explosion
 749  8B62 35           	dec (hl)
 750  8B63
 751  8B63 CD C1 8B     	call Guarda_foto_entidad_a_borrar
 752  8B66 18 29        	jr 3F
 753  8B68
 754  8B68 AF           2 xor a
 755  8B69 32 18 89     	ld (Obj_dibujado),a
 756  8B6C 32 17 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 757  8B6F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 758  8B6F              ; 														; _de la entidad.
 759  8B6F CD DB 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 760  8B72              ;														; Obj_dibujado="0".
 761  8B72              ; Movemos Entidades malignas.
 762  8B72
 763  8B72              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 764  8B72              ;	and a 												; _a movernos. (Limitador_de_entidades).
 765  8B72              ;	ret z
 766  8B72
 767  8B72 CD A4 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 768  8B75
 769  8B75 3A 17 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 770  8B78 CB 67        	bit 4,a
 771  8B7A C8           	ret z
 772  8B7B
 773  8B7B              ; Ha habido desplazamiento de la entidad maligna.
 774  8B7B              ; Ha llegado a zona de AMADEUS ???
 775  8B7B
 776  8B7B 3A F0 88     	ld a,(Coordenada_y)
 777  8B7E FE 14        	cp $14
 778  8B80 D4 12 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 779  8B83              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 780  8B83              ; ---------
 781  8B83
 782  8B83 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 783  8B85 32 18 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 784  8B88 CD DB 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 785  8B8B CD F2 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 786  8B8E CD C1 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 787  8B91 C9           3 ret													; _de la misma.
 788  8B92
 789  8B92              ; --------------------------------------------------------------------------------------------------------------
 790  8B92              ;
 791  8B92              ;	29/1/23
 792  8B92
 793  8B92              Mov_Amadeus
 794  8B92
 795  8B92 AF           	xor a
 796  8B93 32 18 89     	ld (Obj_dibujado),a
 797  8B96 CD DB 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 798  8B99              ;														; Obj_dibujado="0".
 799  8B99              ; Movemos Amadeus.
 800  8B99
 801  8B99 CD AD 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 802  8B9C 3A 17 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 803  8B9F CB 67        	bit 4,a
 804  8BA1 C8           	ret z
 805  8BA2
 806  8BA2              ; ---------
 807  8BA2
 808  8BA2 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 809  8BA4 32 18 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 810  8BA7 CD DB 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 811  8BAA CD F2 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 812  8BAD CD C1 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 813  8BB0 C9           	ret													; _de la nave.
 814  8BB1
 815  8BB1              ; -----------------------------------------------------------------------------------
 816  8BB1
 817  8BB1 CD C6 8C     Inicia_entidad	call Inicia_Puntero_objeto
 818  8BB4 CD 49 99     	call Recompone_posicion_inicio
 819  8BB7 CD 6B 93     	call Draw
 820  8BBA CD A0 7F     	call Guarda_foto_registros
 821  8BBD CD 0E 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 822  8BC0 C9           	ret
 823  8BC1
 824  8BC1              ; --------------------------------------------------------------------------------------------------------------
 825  8BC1              ;
 826  8BC1              ;	31/8/23
 827  8BC1              ;
 828  8BC1              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 829  8BC1
 830  8BC1              Guarda_foto_entidad_a_borrar
 831  8BC1
 832  8BC1 CD 4F 96     	call Prepara_draw
 833  8BC4 CD 7F 95     	call calcula_CColumnass
 834  8BC7 CD B6 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 835  8BCA CD 15 96     	call Define_rutina_de_impresion
 836  8BCD CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 837  8BD0 C9           	ret
 838  8BD1
 839  8BD1              ; --------------------------------------------------------------------------------------------------------------
 840  8BD1              ;
 841  8BD1              ;	31/08/23
 842  8BD1              ;
 843  8BD1              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 844  8BD1              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 845  8BD1
 846  8BD1              Guarda_foto_entidad_a_pintar
 847  8BD1
 848  8BD1 CD FE 8B     	call Repone_pintar
 849  8BD4 CD 6B 93     	call Draw
 850  8BD7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 851  8BDA C9           	ret
 852  8BDB
 853  8BDB              ; --------------------------------------------------------------------------------------------------------------
 854  8BDB              ;
 855  8BDB              ;
 856  8BDB
 857  8BDB 21 E9 88     Prepara_var_pintado_borrado	ld hl,Filas
 858  8BDE 3A 18 89     	ld a,(Obj_dibujado)
 859  8BE1 A7           	and a
 860  8BE2 28 05        	jr z,1F
 861  8BE4 11 0D 89     	ld de,Variables_de_pintado
 862  8BE7 18 03        	jr 2F
 863  8BE9 11 03 89     1 ld de,Variables_de_borrado
 864  8BEC 01 08 00     2 ld bc,8
 865  8BEF ED B0        	ldir
 866  8BF1 C9           	ret
 867  8BF2
 868  8BF2              ; --------------------------------------------------------------------------------------------------------------
 869  8BF2
 870  8BF2 21 03 89     Repone_borrar ld hl,Variables_de_borrado
 871  8BF5 11 E9 88     	ld de,Filas
 872  8BF8 01 08 00     	ld bc,8
 873  8BFB ED B0        	ldir
 874  8BFD C9           	ret
 875  8BFE
 876  8BFE 21 0D 89     Repone_pintar ld hl,Variables_de_pintado
 877  8C01 11 E9 88     	ld de,Filas
 878  8C04 01 08 00     	ld bc,8
 879  8C07 ED B0        	ldir
 880  8C09 C9           	ret
 881  8C0A
 882  8C0A              ; *************************************************************************************************************************************************************
 883  8C0A              ;
 884  8C0A              ; 8/1/23
 885  8C0A              ;
 886  8C0A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 887  8C0A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 888  8C0A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 889  8C0A
 890  8C0A              ; Destruye HL y DE !!!!!
 891  8C0A
 892  8C0A              Inicia_punteros_de_cajas
 893  8C0A
 894  8C0A 21 8C 85     	ld hl,Indice_de_cajas
 895  8C0D CD C0 8C         call Extrae_address
 896  8C10 22 2F 89         ld (Puntero_store_caja),hl
 897  8C13 21 8E 85     	ld hl,Indice_de_cajas+2
 898  8C16 22 33 89     	ld (Indice_restore_caja),hl
 899  8C19 CD C0 8C     	call Extrae_address
 900  8C1C 22 31 89     	ld (Puntero_restore_caja),hl
 901  8C1F C9               ret
 902  8C20
 903  8C20              ; ---------------------------------------------------------------
 904  8C20              ;
 905  8C20              ;	9/8/23
 906  8C20              ;
 907  8C20              ;	Inicialización y gestión de álbumes de fotos y cajas.
 908  8C20
 909  8C20              Inicia_punteros_de_albumes_y_malotes
 910  8C20
 911  8C20 21 EC 84     	ld hl,Indice_album_de_fotos
 912  8C23 22 57 89     	ld (Puntero_indice_album_de_fotos),hl
 913  8C26 CD C0 8C     	call Extrae_address
 914  8C29 22 43 89     	ld (Stack_snapshot),hl
 915  8C2C
 916  8C2C 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 917  8C2F 22 59 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 918  8C32 CD C0 8C     	call Extrae_address
 919  8C35 22 45 89     	ld (Stack_snapshot_disparos),hl
 920  8C38
 921  8C38 21 FC 84     	ld hl,Indice_End_Snapshot
 922  8C3B 22 5B 89     	ld (Puntero_indice_End_Snapshot),hl
 923  8C3E CD C0 8C     	call Extrae_address
 924  8C41 22 5F 89     	ld (Puntero_de_End_Snapshot),hl
 925  8C44
 926  8C44 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 927  8C47 22 5D 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 928  8C4A CD C0 8C     	call Extrae_address
 929  8C4D 22 61 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 930  8C50
 931  8C50 C9           	ret
 932  8C51
 933  8C51              ;	2/9/23
 934  8C51
 935  8C51              Avanza_puntero_de_album_de_fotos_y_malotes
 936  8C51
 937  8C51              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 938  8C51
 939  8C51              ; Estamos en el último álbum del índice???.
 940  8C51
 941  8C51 2A 57 89     	ld hl,(Puntero_indice_album_de_fotos)
 942  8C54 01 F2 84     	ld bc,Indice_album_de_fotos+6
 943  8C57 A7           	and a
 944  8C58 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 945  8C5A 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 946  8C5C
 947  8C5C 21 2C 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 948  8C5F CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 949  8C61 76           	halt
 950  8C62 C9           	ret
 951  8C63
 952  8C63 F3           1 di
 953  8C64 2A 57 89     	ld hl,(Puntero_indice_album_de_fotos)
 954  8C67 23           	inc hl
 955  8C68 23           	inc hl
 956  8C69 22 57 89     	ld (Puntero_indice_album_de_fotos),hl
 957  8C6C CD C0 8C     	call Extrae_address
 958  8C6F 22 43 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 959  8C72
 960  8C72 2A 5B 89     	ld hl,(Puntero_indice_End_Snapshot)
 961  8C75 23           	inc hl
 962  8C76 23           	inc hl
 963  8C77 22 5B 89     	ld (Puntero_indice_End_Snapshot),hl
 964  8C7A CD C0 8C     	call Extrae_address
 965  8C7D 22 5F 89     	ld (Puntero_de_End_Snapshot),hl
 966  8C80 FB           	ei
 967  8C81
 968  8C81 C9           	ret
 969  8C82
 970  8C82              ; *************************************************************************************************************************************************************
 971  8C82              ;
 972  8C82              ; 8/1/23
 973  8C82              ;
 974  8C82              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 975  8C82
 976  8C82 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 977  8C85 22 64 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 978  8C88 C9           	ret
 979  8C89 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 980  8C8C 22 66 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 981  8C8F C9           	ret
 982  8C90
 983  8C90              ; -------------------------------------------------------------------------------------------------------------
 984  8C90              ;
 985  8C90              ; 3/8/23
 986  8C90              ;
 987  8C90
 988  8C90              Calcula_numero_de_malotes
 989  8C90
 990  8C90 21 00 70     	ld hl,Album_de_fotos
 991  8C93 EB           	ex de,hl
 992  8C94 2A 47 89     	ld hl,(End_Snapshot)
 993  8C97
 994  8C97 06 00        	ld b,0
 995  8C99 7D           	ld a,l
 996  8C9A 93           	sub e
 997  8C9B 28 07        	jr z,1F
 998  8C9D
 999  8C9D              ; Nº de malotes no es "0".
1000  8C9D
1001  8C9D D6 06        2 sub 6
1002  8C9F 04           	inc b
1003  8CA0 A7           	and a
1004  8CA1 20 FA        	jr nz,2B
1005  8CA3 78           	ld a,b
1006  8CA4
1007  8CA4 32 38 89     1 ld (Numero_de_malotes),a
1008  8CA7 C9           	ret
1009  8CA8
1010  8CA8              ; -------------------------------------------------------------------------------------------------------------
1011  8CA8              ;
1012  8CA8              ; 28/2/23
1013  8CA8              ;
1014  8CA8
1015  8CA8              Calcula_numero_de_disparotes
1016  8CA8
1017  8CA8 21 0D 72     	ld hl,Album_de_fotos_disparos
1018  8CAB EB           	ex de,hl
1019  8CAC 2A 61 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1020  8CAF
1021  8CAF 06 00        	ld b,0
1022  8CB1 7D           	ld a,l
1023  8CB2 93           	sub e
1024  8CB3 28 07        	jr z,1F
1025  8CB5
1026  8CB5              ; Nº de malotes no es "0".
1027  8CB5
1028  8CB5 D6 06        2 sub 6
1029  8CB7 04           	inc b
1030  8CB8 A7           	and a
1031  8CB9 20 FA        	jr nz,2B
1032  8CBB 78           	ld a,b
1033  8CBC
1034  8CBC 32 63 89     1 ld (Numero_de_disparotes),a
1035  8CBF C9           	ret
1036  8CC0
1037  8CC0              ; *************************************************************************************************************************************************************
1038  8CC0              ;
1039  8CC0              ; 20/10/22
1040  8CC0              ;
1041  8CC0              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1042  8CC0              ;
1043  8CC0              ; Destruye el puntero y DE !!!!!
1044  8CC0
1045  8CC0 5E           Extrae_address ld e,(hl)
1046  8CC1 23           	inc hl
1047  8CC2 56           	ld d,(hl)
1048  8CC3 2B           	dec hl
1049  8CC4 EB           	ex de,hl
1050  8CC5 C9           	ret
1051  8CC6
1052  8CC6              ; *************************************************************************************************************************************************************
1053  8CC6              ;
1054  8CC6              ;	7/2/23
1055  8CC6              ;
1056  8CC6              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1057  8CC6              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1058  8CC6              ;
1059  8CC6              ;   Destruye HL y BC !!!!!,
1060  8CC6              ;
1061  8CC6              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1062  8CC6              ;					"0" ..... Izquierda.
1063  8CC6
1064  8CC6              Inicia_Puntero_objeto
1065  8CC6
1066  8CC6 3A FD 88     	ld a,(Cuad_objeto)
1067  8CC9 E6 01        	and 1
1068  8CCB F5           	push af
1069  8CCC CC EA 8C     	call z,Inicia_puntero_objeto_izq
1070  8CCF F1           	pop af
1071  8CD0 28 2B        	jr z,1F
1072  8CD2 CD D7 8C     	call Inicia_puntero_objeto_der
1073  8CD5 18 26        	jr 1F
1074  8CD7
1075  8CD7              ; Arrancamos desde la parte izquierda de la pantalla.
1076  8CD7              ; Iniciamos (Indice_Sprite_der).
1077  8CD7
1078  8CD7 2A F3 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1079  8CDA 22 F7 88     	ld (Puntero_DESPLZ_der),hl
1080  8CDD CD C0 8C     	call Extrae_address
1081  8CE0 22 ED 88     	ld (Puntero_objeto),hl
1082  8CE3
1083  8CE3 2A F5 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1084  8CE6 22 F9 88     	ld (Puntero_DESPLZ_izq),hl
1085  8CE9 C9           	ret
1086  8CEA
1087  8CEA              ; Arrancamos desde la parte derecha de la pantalla.
1088  8CEA              ; Iniciamos (Indice_Sprite_izq).
1089  8CEA
1090  8CEA 2A F5 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1091  8CED 22 F9 88     	ld (Puntero_DESPLZ_izq),hl
1092  8CF0 CD C0 8C     	call Extrae_address
1093  8CF3 22 ED 88     	ld (Puntero_objeto),hl
1094  8CF6
1095  8CF6 2A F3 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1096  8CF9 22 F7 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1097  8CFC C9           	ret
1098  8CFD
1099  8CFD              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1100  8CFD
1101  8CFD 21 40 83     1 ld hl,Amadeus
1102  8D00 ED 4B ED 88  	ld bc,(Puntero_objeto)
1103  8D04 B7 ED 42     	sub hl,bc
1104  8D07 C0           	ret nz
1105  8D08 21 17 89     	ld hl,Ctrl_0
1106  8D0B CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1107  8D0D C9           	ret 												; _de nuestra nave en los extremos.
1108  8D0E
1109  8D0E              ; *************************************************************************************************************************************************************
1110  8D0E              ;
1111  8D0E              ;	14/5/23
1112  8D0E              ;
1113  8D0E              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1114  8D0E              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1115  8D0E
1116  8D0E              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1117  8D0E              ;	_de la 2ª y 3ª entidad respectivamente.
1118  8D0E
1119  8D0E              Store_Restore_cajas
1120  8D0E
1121  8D0E E5           	push hl
1122  8D0F D5           	push de
1123  8D10 C5            	push bc
1124  8D11
1125  8D11              ;	STORE !!!!!
1126  8D11              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1127  8D11
1128  8D11 21 E9 88     	ld hl,Filas
1129  8D14 ED 5B 2F 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1130  8D18 01 43 00     	ld bc,67
1131  8D1B ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1132  8D1D
1133  8D1D              ; 	Entidad_sospechosa. 20/4/23
1134  8D1D
1135  8D1D 3A 02 89     	ld a,(Impacto)
1136  8D20 A7           	and a
1137  8D21 28 0C        	jr z,1F
1138  8D23
1139  8D23 2A 2F 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1140  8D26 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1141  8D29 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1142  8D2A ED 4A        	adc hl,bc 											; _ "0" más adelante.
1143  8D2C 22 69 89     	ld (Entidad_sospechosa_de_colision),hl
1144  8D2F
1145  8D2F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1146  8D2F
1147  8D2F 2A 31 89     1 ld hl,(Puntero_restore_caja)
1148  8D32 7E           	ld a,(hl)
1149  8D33 A7           	and a
1150  8D34 F5           	push af
1151  8D35 28 08        	jr z,2F
1152  8D37
1153  8D37 11 E9 88     	ld de,Filas
1154  8D3A 01 43 00     	ld bc,67
1155  8D3D ED B0        	ldir
1156  8D3F
1157  8D3F CD 5B 8D     2 call Incrementa_punteros_de_cajas
1158  8D42 F1           	pop af
1159  8D43 28 EA        	jr z,1B
1160  8D45
1161  8D45 C1           	pop bc
1162  8D46 D1           	pop de
1163  8D47 E1           	pop hl
1164  8D48
1165  8D48 C9           	ret
1166  8D49
1167  8D49              ; **************************************************************************************************
1168  8D49              ;
1169  8D49              ;	12/05/23
1170  8D49              ;
1171  8D49              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1172  8D49
1173  8D49 E5           Restore_entidad push hl
1174  8D4A D5           	push de
1175  8D4B C5            	push bc
1176  8D4C
1177  8D4C 2A 2F 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1178  8D4F 11 E9 88     	ld de,Filas
1179  8D52 01 43 00     	ld bc,67
1180  8D55 ED B0        	ldir
1181  8D57
1182  8D57 C1           	pop bc
1183  8D58 D1           	pop de
1184  8D59 E1           	pop hl
1185  8D5A C9           	ret
1186  8D5B
1187  8D5B
1188  8D5B              ; **************************************************************************************************
1189  8D5B              ;
1190  8D5B              ;	08/05/23
1191  8D5B              ;
1192  8D5B              ;	Incrementamos los dos punteros de entidades. (+1).
1193  8D5B
1194  8D5B 2A 31 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1195  8D5E 22 2F 89     	ld (Puntero_store_caja),hl
1196  8D61 2A 33 89     	ld hl,(Indice_restore_caja)
1197  8D64 23           	inc hl
1198  8D65 23           	inc hl
1199  8D66 22 33 89     	ld (Indice_restore_caja),hl
1200  8D69 CD C0 8C         call Extrae_address
1201  8D6C 22 31 89         ld (Puntero_restore_caja),hl
1202  8D6F C9               ret
1203  8D70
1204  8D70              ; **************************************************************************************************
1205  8D70              ;
1206  8D70              ;	25/01/23
1207  8D70              ;
1208  8D70              ;	Restore_Amadeus
1209  8D70              ;
1210  8D70              ;	Cargamos en DRAW los parámetros de Amadeus.
1211  8D70              ;
1212  8D70
1213  8D70 E5           Restore_Amadeus	push hl
1214  8D71 D5           	push de
1215  8D72 C5            	push bc
1216  8D73 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1217  8D76 11 E9 88     	ld de,Filas
1218  8D79 01 43 00     	ld bc,67
1219  8D7C ED B0        	ldir
1220  8D7E C1           	pop bc
1221  8D7F D1           	pop de
1222  8D80 E1           	pop hl
1223  8D81 C9           	ret
1224  8D82
1225  8D82              ; *************************************************************************************************************************************************************
1226  8D82              ;
1227  8D82              ;	29/04/23
1228  8D82              ;
1229  8D82              ;	Store_Amadeus
1230  8D82              ;
1231  8D82              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1232  8D82              ;
1233  8D82              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1234  8D82              ;
1235  8D82              ;	DESTRUYE: HL y BC y DE.
1236  8D82
1237  8D82 21 E9 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1238  8D85 01 43 00     	ld bc,67
1239  8D88 ED B0        	ldir
1240  8D8A C9           	ret
1241  8D8B
1242  8D8B              ; -----------------------------------------------------------
1243  8D8B              ;
1244  8D8B              ;	27/04/23
1245  8D8B              ;
1246  8D8B              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1247  8D8B              ;
1248  8D8B              ;	Destruye: HL,BC,DE,A
1249  8D8B
1250  8D8B 21 E9 88     Borra_datos_entidad ld hl,Filas
1251  8D8E 01 42 00     	ld bc,66
1252  8D91 AF           	xor a
1253  8D92 77           	ld (hl),a
1254  8D93 11 EA 88     	ld de,Filas+1
1255  8D96 ED B0        	ldir
1256  8D98 C9           	ret
1257  8D99
1258  8D99              ; -----------------------------------------------------------
1259  8D99
1260  8D99              ; Teclado.
1261  8D99
1262  8D99 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1263  8D9B DB FE        	in a,($fe)
1264  8D9D E6 01        	and $01
1265  8D9F 28 02        	jr z,1f
1266  8DA1 18 F6        	jr Pulsa_ENTER
1267  8DA3 C9           1 ret
1268  8DA4
1269  8DA4              ; **************************************************************************************************
1270  8DA4              ;
1271  8DA4              ; Temporización.
1272  8DA4
1273  8DA4              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1274  8DA4              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1275  8DA4              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1276  8DA4              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1277  8DA4
1278  8DA4              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1279  8DA4              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1280  8DA4              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1281  8DA4
1282  8DA4              ; A partir de $4f61 no hace falta DELAY.
1283  8DA4
1284  8DA4              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1285  8DA4
1286  8DA4 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1287  8DA7 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1288  8DA8 78           	LD A,B
1289  8DA9 A7           	AND A
1290  8DAA 20 FB        	JR NZ,wait
1291  8DAC C9           	RET
1292  8DAD
1293  8DAD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1294  8DAD              ;
1295  8DAD              ;	5/3/23
1296  8DAD              ;
1297  8DAD              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1298  8DAD
1299  8DAD              Movimiento_Amadeus
1300  8DAD
1301  8DAD              ; Disparo.
1302  8DAD
1303  8DAD 3A 7B 89     	ld a,(Disparo_Amadeus)
1304  8DB0 A7           	and a
1305  8DB1 20 02        	jr nz,1F
1306  8DB3 18 15        	jr 2F
1307  8DB5
1308  8DB5 3E F7        1 ld a,$f7													; "5" para disparar.
1309  8DB7 DB FE        	in a,($fe)
1310  8DB9 E6 10        	and $10
1311  8DBB
1312  8DBB F5           	push af
1313  8DBC CC 75 8E     	call z,Genera_disparo
1314  8DBF F1           	pop af
1315  8DC0 20 08        	jr nz,2F
1316  8DC2
1317  8DC2 3A 7B 89     	ld a,(Disparo_Amadeus)
1318  8DC5 EE 01        	xor 1
1319  8DC7 32 7B 89     	ld (Disparo_Amadeus),a
1320  8DCA
1321  8DCA 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1322  8DCC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1323  8DCE E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1324  8DD0 CC 03 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1325  8DD3 3E F7        	ld a,$f7
1326  8DD5 DB FE        	in a,($fe)
1327  8DD7 E6 01        	and $01
1328  8DD9 C8           	ret z
1329  8DDA
1330  8DDA 3E F7        	ld a,$f7
1331  8DDC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1332  8DDE E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1333  8DE0 CC E5 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1334  8DE3 C9           	ret
1335  8DE4
1336  8DE4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1337  8DE4              ;
1338  8DE4              ;	Rutina provisional para que los malotes cagen balas.
1339  8DE4
1340  8DE4              Detecta_disparo_entidad
1341  8DE4
1342  8DE4 3A 7E 89     	ld a,(Disparo_entidad)
1343  8DE7 A7           	and a
1344  8DE8 C8           	ret z
1345  8DE9
1346  8DE9              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1347  8DE9
1348  8DE9              ;	ld a,$7f				; Detecta SPACE.
1349  8DE9              ;	in a,($fe)
1350  8DE9              ;	and 1
1351  8DE9              ;	ret nz
1352  8DE9
1353  8DE9              ;	call Genera_disparo
1354  8DE9 C9           	ret
1355  8DEA
1356  8DEA              ; ----------------------------------------------------------------------
1357  8DEA              ;
1358  8DEA              ;	11/8/23
1359  8DEA
1360  8DEA              Frame
1361  8DEA
1362  8DEA              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1363  8DEA              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1364  8DEA
1365  8DEA              ; PINTAMOS.
1366  8DEA
1367  8DEA ED 73 41 89  	ld (Stack_3),sp
1368  8DEE
1369  8DEE              ; Guardamos registros y SP.
1370  8DEE
1371  8DEE 08           	ex af,af'
1372  8DEF F5           	push af	;af'
1373  8DF0 D9           	exx
1374  8DF1 E5           	push hl	;hl'
1375  8DF2 D5           	push de	;de'
1376  8DF3 C5           	push bc	;bc'
1377  8DF4 D9           	exx
1378  8DF5 E5           	push hl	;hl
1379  8DF6 D5           	push de	;de
1380  8DF7 C5           	push bc	;bc
1381  8DF8 08           	ex af,af'
1382  8DF9 F5           	push af	;af
1383  8DFA DD E5        	push ix
1384  8DFC FD E5        	push iy
1385  8DFE
1386  8DFE 3E 02        	ld a,2
1387  8E00 D3 FE            out ($fe),a											; Rojo.
1388  8E02
1389  8E02              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1390  8E02              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1391  8E02
1392  8E02 2A 57 89     	ld hl,(Puntero_indice_album_de_fotos)
1393  8E05 01 EC 84     	ld bc,Indice_album_de_fotos
1394  8E08 A7           	and a
1395  8E09 ED 42        	sbc hl,bc
1396  8E0B 28 4E        	jr z,6F
1397  8E0D
1398  8E0D              ; $59,
1399  8E0D
1400  8E0D CD 90 8C     	call Calcula_numero_de_malotes
1401  8E10
1402  8E10 CD 79 96     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1403  8E13
1404  8E13              ;	call Extrae_foto_disparos
1405  8E13 3E 01            ld a,1
1406  8E15 D3 FE            out ($fe),a											; Azul.
1407  8E17
1408  8E17              ; 	Gestiona albumes de fotos.
1409  8E17
1410  8E17              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1411  8E17 CD 00 79     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1412  8E1A
1413  8E1A              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1414  8E1A
1415  8E1A 3A 2C 89     	ld a,(Ctrl_1)
1416  8E1D CB 6F        	bit 5,a
1417  8E1F 20 24        	jr nz,1F
1418  8E21
1419  8E21              ; No hemos terminado de guardar el último FRAME.
1420  8E21
1421  8E21 2A 57 89     	ld hl,(Puntero_indice_album_de_fotos)
1422  8E24              ;	ld bc,Indice_album_de_fotos
1423  8E24 2B           	dec hl
1424  8E25 2B           	dec hl
1425  8E26
1426  8E26              ;	ld a,l
1427  8E26              ;	sub c
1428  8E26              ;	jr z,$
1429  8E26
1430  8E26 22 57 89     	ld (Puntero_indice_album_de_fotos),hl
1431  8E29
1432  8E29 2A 5B 89     	ld hl,(Puntero_indice_End_Snapshot)
1433  8E2C 2B           	dec hl
1434  8E2D 2B           	dec hl
1435  8E2E 22 5B 89     	ld (Puntero_indice_End_Snapshot),hl
1436  8E31 CD C0 8C     	call Extrae_address
1437  8E34 22 5F 89     	ld (Puntero_de_End_Snapshot),hl
1438  8E37
1439  8E37 CD C0 8C     	call Extrae_address
1440  8E3A
1441  8E3A              ; Esta vacío este album???
1442  8E3A
1443  8E3A 24           	inc h
1444  8E3B 25           	dec h
1445  8E3C 20 02        	jr nz,5F
1446  8E3E
1447  8E3E              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1448  8E3E
1449  8E3E 18 05        	jr 1F
1450  8E40
1451  8E40 22 43 89     5 ld (Stack_snapshot),hl
1452  8E43 18 09        	jr 2F
1453  8E45
1454  8E45              ; FRAME completo.
1455  8E45
1456  8E45 2A 57 89     1 ld hl,(Puntero_indice_album_de_fotos)
1457  8E48 CD C0 8C     	call Extrae_address
1458  8E4B 22 43 89     	ld (Stack_snapshot),hl
1459  8E4E
1460  8E4E              ;	En este punto:
1461  8E4E
1462  8E4E              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1463  8E4E              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1464  8E4E
1465  8E4E              ; RELOJES.
1466  8E4E
1467  8E4E 21 76 89     2 ld hl,Contador_de_frames
1468  8E51 7E           	ld a,(hl)
1469  8E52 FE FF        	cp $ff
1470  8E54 20 04        	jr nz,3F
1471  8E56 34           	inc (hl)
1472  8E57 21 77 89     	ld hl,Contador_de_frames_2
1473  8E5A 34           3 inc (hl)											; 0 - 255
1474  8E5B
1475  8E5B 21 2C 89     6 ld hl,Ctrl_1
1476  8E5E CB AE        	res 5,(hl)
1477  8E60
1478  8E60              ; Recuperamos registros y SP.
1479  8E60
1480  8E60 FD E1        	pop iy
1481  8E62 DD E1        	pop ix
1482  8E64 F1           	pop af
1483  8E65 C1           	pop bc
1484  8E66 D1           	pop de
1485  8E67 E1           	pop hl
1486  8E68 D9           	exx
1487  8E69 C1           	pop bc
1488  8E6A D1           	pop de
1489  8E6B E1           	pop hl
1490  8E6C 08           	ex af,af'
1491  8E6D F1           	pop af
1492  8E6E 08           	ex af,af'
1493  8E6F D9           	exx
1494  8E70
1495  8E70 ED 7B 41 89  	ld sp,(Stack_3)
1496  8E74
1497  8E74 C9           	ret
1498  8E75
1499  8E75              ; ---------------------------------------------------------------
1500  8E75
1501  8E75              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E75              ; ******************************************************************************************************************************************************************************************
   2+ 8E75              ;
   3+ 8E75              ;   21/07/23
   4+ 8E75              ;
   5+ 8E75              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E75              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E75              ;
   8+ 8E75              ;
   9+ 8E75              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E75              ;
  11+ 8E75              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E75              ;               _ hacen las entidades hacia abajo.
  13+ 8E75              ;
  14+ 8E75              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E75              ;
  16+ 8E75              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E75              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E75              ;
  19+ 8E75              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E75              ;           _ la bala.
  21+ 8E75              ;
  22+ 8E75              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E75              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E75              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E75              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E75              ;           _ en el momento de generarse la bala)).
  27+ 8E75
  28+ 8E75              Genera_disparo
  29+ 8E75
  30+ 8E75              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E75              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E75              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E75              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E75              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E75              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E75              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E75
  38+ 8E75              ; Exclusiones:
  39+ 8E75
  40+ 8E75 3A 01 89         ld a,(Vel_down)
  41+ 8E78 47               ld b,a
  42+ 8E79 3A 75 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E7C B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E7D D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E7E 3A 26 89         ld a,(Columnas)
  46+ 8E81 47               ld b,a
  47+ 8E82 3A EA 88         ld a,(Columns)
  48+ 8E85 B8               cp b
  49+ 8E86 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E87
  51+ 8E87              ; ----- ----- -----
  52+ 8E87
  53+ 8E87 3A 17 89         ld a,(Ctrl_0)
  54+ 8E8A CB 77            bit 6,a
  55+ 8E8C 20 06            jr nz,14F
  56+ 8E8E
  57+ 8E8E 3A F0 88         ld a,(Coordenada_y)
  58+ 8E91 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E93 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E94
  61+ 8E94 21 00 80     14 ld hl,Indice_disparo
  62+ 8E97 3A F1 88         ld a,(CTRL_DESPLZ)
  63+ 8E9A 4F               ld c,a
  64+ 8E9B 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E9D              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E9D              ;                                            ""        ""       "f9", B="1"
  67+ 8E9D              ;                                            ""        ""       "fb", B="2"
  68+ 8E9D              ;                                            ""        ""       "fb", B="3"
  69+ 8E9D A7               and a
  70+ 8E9E 28 10            jr z,1F
  71+ 8EA0 E6 01            and 1
  72+ 8EA2 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EA3
  74+ 8EA3 79               ld a,c
  75+ 8EA4 16 F9            ld d,$f9
  76+ 8EA6 23           2 inc hl
  77+ 8EA7 23               inc hl
  78+ 8EA8 04               inc b
  79+ 8EA9 BA               cp d
  80+ 8EAA 28 04            jr z,1F
  81+ 8EAC 14               inc d
  82+ 8EAD 14               inc d
  83+ 8EAE 18 F6            jr 2B
  84+ 8EB0
  85+ 8EB0 CD C0 8C     1 call Extrae_address
  86+ 8EB3 E5               push hl
  87+ 8EB4 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EB6 DD 21 FE 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EBA
  90+ 8EBA              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EBA              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EBA
  93+ 8EBA 3A 17 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EBD CB 77            bit 6,a
  95+ 8EBF 20 04            jr nz,19F
  96+ 8EC1
  97+ 8EC1 AF               xor a
  98+ 8EC2 32 7E 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EC5
 100+ 8EC5 3A FD 88     19 ld a,(Cuad_objeto)
 101+ 8EC8 FE 02            cp 2
 102+ 8ECA 38 66            jr c,3F
 103+ 8ECC 28 64            jr z,3F
 104+ 8ECE
 105+ 8ECE              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8ECE
 107+ 8ECE E6 01            and 1
 108+ 8ED0 28 30            jr z,4F
 109+ 8ED2
 110+ 8ED2              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8ED2              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8ED2              ;
 113+ 8ED2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8ED2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8ED2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8ED2
 117+ 8ED2 2A EB 88     	ld hl,(Posicion_actual)
 118+ 8ED5
 119+ 8ED5              ;   Amadeus o entidad ???.
 120+ 8ED5
 121+ 8ED5 3A 17 89         ld a,(Ctrl_0)
 122+ 8ED8 CB 77            bit 6,a
 123+ 8EDA 28 0A            jr z,8F
 124+ 8EDC
 125+ 8EDC              ; 	Dispara Amadeus.
 126+ 8EDC
 127+ 8EDC 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EDE CD 6A 96         call PreviousScan
 129+ 8EE1 CD 6A 96         call PreviousScan
 130+ 8EE4
 131+ 8EE4              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EE4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EE4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EE4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EE4
 136+ 8EE4 18 11            jr 10F
 137+ 8EE6
 138+ 8EE6              ; 	Dispara Entidad.
 139+ 8EE6
 140+ 8EE6 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EE9              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EE9
 143+ 8EE9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EE9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EE9
 146+ 8EE9 C5               push bc
 147+ 8EEA 06 10            ld b,16
 148+ 8EEC CD 5B 96     9 call NextScan
 149+ 8EEF 10 FB            djnz 9B
 150+ 8EF1 C1               pop bc
 151+ 8EF2 CD 5C 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EF5 18 06            jr 17F
 153+ 8EF7
 154+ 8EF7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EF7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EF7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EF7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EF7
 159+ 8EF7 CD 5C 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EFA CD D1 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EFD              ;                                                      ; _al generar el disparo.
 162+ 8EFD
 163+ 8EFD              ; 	LLegados a este punto tendremos:
 164+ 8EFD              ;
 165+ 8EFD              ;       Puntero_objeto_disparo en IY.
 166+ 8EFD              ;       Rutinas_de_impresion en IX.
 167+ 8EFD              ;       Puntero_de_impresion en HL.
 168+ 8EFD              ;       Impacto/Dirección en BC.
 169+ 8EFD
 170+ 8EFD CD 64 8F     17 call Almacena_disparo
 171+ 8F00 18 52            jr 6F                                             ; RET.
 172+ 8F02
 173+ 8F02              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F02              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F02              ;
 176+ 8F02              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F02              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F02              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F02
 180+ 8F02 2A EB 88     4 ld hl,(Posicion_actual)
 181+ 8F05
 182+ 8F05              ;   Amadeus o entidad ???.
 183+ 8F05
 184+ 8F05 3A 17 89         ld a,(Ctrl_0)
 185+ 8F08 CB 77            bit 6,a
 186+ 8F0A 28 0A            jr z,11F
 187+ 8F0C
 188+ 8F0C              ; 	Dispara Amadeus.
 189+ 8F0C
 190+ 8F0C 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F0E CD 6A 96         call PreviousScan
 192+ 8F11 CD 6A 96         call PreviousScan
 193+ 8F14
 194+ 8F14              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F14              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F14              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F14              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F14
 199+ 8F14 18 11            jr 13F
 200+ 8F16
 201+ 8F16              ; 	Dispara Entidad.
 202+ 8F16
 203+ 8F16 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F19              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F19
 206+ 8F19              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F19              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F19
 209+ 8F19 C5               push bc
 210+ 8F1A 06 10            ld b,16
 211+ 8F1C CD 5B 96     12 call NextScan
 212+ 8F1F 10 FB            djnz 12B
 213+ 8F21 C1               pop bc
 214+ 8F22
 215+ 8F22 CD 55 8F         call Ajusta_disparo_parte_derecha
 216+ 8F25 18 06            jr 18F
 217+ 8F27
 218+ 8F27              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F27              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F27              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F27              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F27
 223+ 8F27 CD 55 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F2A CD D1 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F2D              ;                                                       ; _al generar el disparo.
 226+ 8F2D
 227+ 8F2D              ; LLegados a este punto tendremos:
 228+ 8F2D              ;
 229+ 8F2D              ;       Puntero_objeto_disparo en IY.
 230+ 8F2D              ;       Rutinas_de_impresion en IX.
 231+ 8F2D              ;       Puntero_de_impresion en HL.
 232+ 8F2D              ;       Impacto/Dirección en BC.
 233+ 8F2D
 234+ 8F2D CD 64 8F     18 call Almacena_disparo
 235+ 8F30 18 22            jr 6F                                               ; RET.
 236+ 8F32
 237+ 8F32              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F32
 239+ 8F32 28 11        3 jr z,5F
 240+ 8F34
 241+ 8F34              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F34              ;
 243+ 8F34              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F34              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F34              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F34              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F34
 248+ 8F34              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F34              ;	   ""        ""       "f9", B="1"
 250+ 8F34              ;	   ""        ""       "fb", B="2"
 251+ 8F34              ; 	   ""        ""       "fb", B="3"
 252+ 8F34
 253+ 8F34 2A EB 88     	ld hl,(Posicion_actual)
 254+ 8F37 CD 5B 96     	call NextScan
 255+ 8F3A
 256+ 8F3A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F3A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F3A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F3A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F3A
 261+ 8F3A CD 5C 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F3D
 263+ 8F3D              ; 	No se produce impacto. B="$80"
 264+ 8F3D              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F3D
 266+ 8F3D 01 80 80         ld bc,$8080
 267+ 8F40
 268+ 8F40              ; 	LLegados a este punto tendremos:
 269+ 8F40              ;
 270+ 8F40              ;       Puntero_objeto_disparo en IY.
 271+ 8F40              ;       Rutinas_de_impresion en IX.
 272+ 8F40              ;       Puntero_de_impresion en HL.
 273+ 8F40              ;       Impacto/Dirección en BC.
 274+ 8F40
 275+ 8F40 CD 64 8F         call Almacena_disparo
 276+ 8F43 18 0F            jr 6F                                           ; RET.
 277+ 8F45
 278+ 8F45              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F45              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F45              ;
 281+ 8F45              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F45              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F45              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F45              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F45
 286+ 8F45 2A EB 88     5 ld hl,(Posicion_actual)
 287+ 8F48 CD 5B 96     	call NextScan
 288+ 8F4B
 289+ 8F4B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F4B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F4B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F4B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F4B
 294+ 8F4B CD 55 8F         call Ajusta_disparo_parte_derecha
 295+ 8F4E
 296+ 8F4E              ; 	No se produce impacto. B="$80"
 297+ 8F4E              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F4E
 299+ 8F4E 01 80 80     15 ld bc,$8080
 300+ 8F51
 301+ 8F51              ; 	LLegados a este punto tendremos:
 302+ 8F51              ;
 303+ 8F51              ;       Puntero_objeto_disparo en IY.
 304+ 8F51              ;       Rutinas_de_impresion en IX.
 305+ 8F51              ;       Puntero_de_impresion en HL.
 306+ 8F51              ;       Impacto/Dirección en BC.
 307+ 8F51
 308+ 8F51 CD 64 8F         call Almacena_disparo
 309+ 8F54
 310+ 8F54 C9           6 ret
 311+ 8F55
 312+ 8F55              ; ----------------------------------------------------------------
 313+ 8F55              ;
 314+ 8F55              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F55              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F55              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F55
 318+ 8F55 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F56 FE 02            cp 2
 320+ 8F58 38 01            jr c,1F
 321+ 8F5A 23               inc hl
 322+ 8F5B C9           1 ret
 323+ 8F5C
 324+ 8F5C 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F5D FE 01        	cp 1
 326+ 8F5F 20 01        	jr nz,1F
 327+ 8F61 2B           	dec hl
 328+ 8F62 2B           1 dec hl
 329+ 8F63 C9               ret
 330+ 8F64
 331+ 8F64              ; ----------------------------------------------------------------
 332+ 8F64              ;
 333+ 8F64              ;   25/02/23
 334+ 8F64              ;
 335+ 8F64              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F64              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F64              ;
 338+ 8F64              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F64              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F64
 341+ 8F64              Almacena_disparo
 342+ 8F64
 343+ 8F64 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F65 F1               pop af
 345+ 8F66 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F67
 347+ 8F67 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F68 E6 01            and 1
 349+ 8F6A 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F6C              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F6C              ; 	Dispara AMADEUS.
 352+ 8F6C
 353+ 8F6C              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F6C              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F6C              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F6C              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F6C
 358+ 8F6C C5               push bc
 359+ 8F6D 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F70 2A 66 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F73 A7               and a
 362+ 8F74 ED 42            sbc hl,bc
 363+ 8F76 CC 89 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F79 C1               pop bc
 365+ 8F7A 28 54            jr z,4F
 366+ 8F7C
 367+ 8F7C 2A 66 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F7F 23               inc hl
 369+ 8F80 23               inc hl
 370+ 8F81 22 66 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F84              ;                                                   ; _ Disparo_(+1).
 372+ 8F84 18 18            jr 2F
 373+ 8F86
 374+ 8F86              ; Dispara una entidad.
 375+ 8F86
 376+ 8F86 C5           1 push bc
 377+ 8F87 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F8A 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F8D A7               and a
 380+ 8F8E ED 42            sbc hl,bc
 381+ 8F90 CC 82 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F93 C1               pop bc
 383+ 8F94 28 3A            jr z,4F
 384+ 8F96
 385+ 8F96 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F99 23               inc hl
 387+ 8F9A 23               inc hl
 388+ 8F9B 22 64 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F9E              ;                                                   ; _ Disparo_(+1).
 390+ 8F9E CD C0 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FA1              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FA1              ;
 393+ 8FA1              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FA1              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FA1              ;                                                     Puntero_de_impresion en HL.
 396+ 8FA1              ;                                                     Impacto/Dirección en BC.
 397+ 8FA1
 398+ 8FA1 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FA2 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FA3 23               inc hl                                          ; _ al siguiente.
 401+ 8FA4 A7               and a
 402+ 8FA5 20 C0            jr nz,3B
 403+ 8FA7
 404+ 8FA7 08               ex af,af
 405+ 8FA8 ED 73 3D 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FAC F9               ld sp,hl
 407+ 8FAD
 408+ 8FAD DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FAF F5               push af                                         ; Puntero de impresión.
 410+ 8FB0 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FB2 C5               push bc                                         ; Control.
 412+ 8FB3
 413+ 8FB3 ED 7B 3D 89      ld sp,(Stack)
 414+ 8FB7
 415+ 8FB7              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FB7
 417+ 8FB7 21 2C 89     	ld hl,Ctrl_1
 418+ 8FBA CB C6        	set 0,(hl)
 419+ 8FBC
 420+ 8FBC DD E5        	push ix
 421+ 8FBE E1               pop hl
 422+ 8FBF F5               push af
 423+ 8FC0 DD E1            pop ix
 424+ 8FC2
 425+ 8FC2 CD A0 7F     	call Guarda_foto_registros
 426+ 8FC5
 427+ 8FC5 21 2C 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FC8 CB 86        	res 0,(hl)
 429+ 8FCA
 430+ 8FCA              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FCA              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FCA
 433+ 8FCA CD 89 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FCD CD 82 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FD0
 436+ 8FD0 C9           4 ret
 437+ 8FD1
 438+ 8FD1              ; ----------------------------------------------------------------
 439+ 8FD1              ;
 440+ 8FD1              ;   4/3/23
 441+ 8FD1              ;
 442+ 8FD1              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FD1              ;   _ al generarse el disparo.
 444+ 8FD1              ;
 445+ 8FD1              ;       "$80" ..... No se produce colisión.
 446+ 8FD1              ;       "$81" ..... Se produce colisión.
 447+ 8FD1              ;
 448+ 8FD1              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FD1              ;         _ que forman el disparo.
 450+ 8FD1
 451+ 8FD1
 452+ 8FD1              Comprueba_Colision
 453+ 8FD1
 454+ 8FD1              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FD1
 456+ 8FD1 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FD3 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FD4
 459+ 8FD4 CD 0A 90         call Modifica_H_Velocidad_disparo
 460+ 8FD7
 461+ 8FD7 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FD8 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FDA 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FDC
 465+ 8FDC 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FDE CD FA 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FE1
 468+ 8FE1 7B               ld a,e
 469+ 8FE2 E6 01            and 1
 470+ 8FE4 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FE6              ;                                                  ; _ para activar IMPACTO.
 472+ 8FE6 E1               pop hl
 473+ 8FE7 E5               push hl
 474+ 8FE8 CD 5B 96         call NextScan
 475+ 8FEB
 476+ 8FEB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FEC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FEE 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FF0              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FF0 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FF2 CD FA 8F         call Bucle_2
 482+ 8FF5
 483+ 8FF5 43           1 ld b,e
 484+ 8FF6 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FF7 FD E1            pop iy
 486+ 8FF9 C9               ret
 487+ 8FFA
 488+ 8FFA              ; ---------- ----------
 489+ 8FFA
 490+ 8FFA 06 02        Bucle_2 ld b,2
 491+ 8FFC FD 7E 00     2 ld a,(iy)
 492+ 8FFF A6               and (hl)
 493+ 9000 28 02            jr z,1F
 494+ 9002 1E 81            ld e,$81
 495+ 9004 23           1 inc hl
 496+ 9005 FD 23            inc iy
 497+ 9007 10 F3            djnz 2B
 498+ 9009 C9               ret
 499+ 900A
 500+ 900A              ; ---------- ----------
 501+ 900A              ;
 502+ 900A              ;   21/7/23
 503+ 900A
 504+ 900A              Modifica_H_Velocidad_disparo
 505+ 900A
 506+ 900A 3A 75 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 900D FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 900F D0               ret nc                                         ; _ incrementamos H.
 509+ 9010 24               inc h
 510+ 9011
 511+ 9011 C9               ret
 512+ 9012
 513+ 9012              ; -------------------------------------------------------------------------------------------------------------
 514+ 9012              ;
 515+ 9012              ;   11/04/23
 516+ 9012              ;
 517+ 9012              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9012              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9012              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9012              ;
 521+ 9012              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9012
 523+ 9012              Compara_coordenadas_X
 524+ 9012
 525+ 9012              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9012              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9012
 528+ 9012              ; Preparamos registros:
 529+ 9012
 530+ 9012 21 EF 88         ld hl,Filas+6
 531+ 9015 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9016 23               inc hl
 533+ 9017 23               inc hl
 534+ 9018 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9019 43               ld b,e
 536+ 901A
 537+ 901A 21 FD 88         ld hl,Filas+20
 538+ 901D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 901E 21 70 89         ld hl,Coordenadas_X_Entidad
 540+ 9021 CD 3D 92         call Guarda_coordenadas_X
 541+ 9024
 542+ 9024              ; Preparamos registros:
 543+ 9024
 544+ 9024 21 A4 85         ld hl,Amadeus_db+6
 545+ 9027 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9028 23               inc hl
 547+ 9029 23               inc hl
 548+ 902A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 902B 7B               ld a,e
 550+ 902C 08               ex af,af'
 551+ 902D 21 B2 85         ld hl,Amadeus_db+20
 552+ 9030 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9031 21 6D 89         ld hl,Coordenadas_X_Amadeus
 554+ 9034 CD 3D 92         call Guarda_coordenadas_X
 555+ 9037
 556+ 9037              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9037              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9037
 559+ 9037 04               inc b
 560+ 9038 05               dec b
 561+ 9039 28 04            jr z,1F
 562+ 903B 06 03            ld b,3
 563+ 903D 18 02            jr 2F
 564+ 903F 06 02        1 ld b,2
 565+ 9041 08           2 ex af,af'
 566+ 9042 3C               inc a
 567+ 9043 3D               dec a
 568+ 9044 28 04            jr z,5F
 569+ 9046 0E 03            ld c,3
 570+ 9048 18 02            jr 6F
 571+ 904A 0E 02        5 ld c,2
 572+ 904C 79           6 ld a,c
 573+ 904D 08               ex af,af'
 574+ 904E 11 70 89         ld de,Coordenadas_X_Entidad
 575+ 9051 1A           4 ld a,(de)
 576+ 9052 21 6D 89         ld hl,Coordenadas_X_Amadeus
 577+ 9055 BE           3 cp (hl)
 578+ 9056 28 0E            jr z,7F
 579+ 9058 23               inc hl
 580+ 9059 0D               dec c
 581+ 905A 20 F9            jr nz,3B
 582+ 905C 13               inc de
 583+ 905D 08               ex af,af'
 584+ 905E 4F               ld c,a
 585+ 905F 08               ex af,af'
 586+ 9060 10 EF            djnz 4B
 587+ 9062
 588+ 9062              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9062
 590+ 9062 CD 79 92     8 call Limpia_Coordenadas_X
 591+ 9065 C9               ret
 592+ 9066
 593+ 9066 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9068 32 02 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 906B 21 68 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 906E CB D6            set 2,(hl)
 597+ 9070 18 F0            jr 8B
 598+ 9072
 599+ 9072              ; -----------------------------------------------------------------------
 600+ 9072              ;
 601+ 9072              ;   17/04/23
 602+ 9072              ;
 603+ 9072
 604+ 9072              Detecta_colision_nave_entidad
 605+ 9072
 606+ 9072              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9072
 608+ 9072 2A EB 88         ld hl,(Posicion_actual)
 609+ 9075 CD B6 95         call Calcula_puntero_de_impresion
 610+ 9078
 611+ 9078              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9078              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9078
 614+ 9078 DD E5            push ix
 615+ 907A E1               pop hl
 616+ 907B E5               push hl
 617+ 907C
 618+ 907C              ; ----- ----- -----
 619+ 907C 1E 00            ld e,0                                         ; Indica impacto.
 620+ 907E 06 0A            ld b,10
 621+ 9080 CD B0 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9083 7B               ld a,e
 623+ 9084 FE 05            cp 5
 624+ 9086 38 0E            jr c,3F
 625+ 9088
 626+ 9088              ; LLegados a este punto:
 627+ 9088              ;
 628+ 9088              ;   HAY COLISIÓN !!!!!.
 629+ 9088              ;
 630+ 9088              ;   .db (Impacto) de Amadeus a "1".
 631+ 9088              ;   SET el bit3 de (Impacto2).
 632+ 9088              ;
 633+ 9088              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9088
 635+ 9088 21 B7 85         ld hl,Amadeus_db+25
 636+ 908B 36 01            ld (hl),1
 637+ 908D 21 68 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9090 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9092 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9094 18 18            jr 1F
 641+ 9096
 642+ 9096              ; -----
 643+ 9096
 644+ 9096 E1           3 pop hl
 645+ 9097 CD 5B 96         call NextScan
 646+ 909A E5               push hl
 647+ 909B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 909C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 909E 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90A0 30 0C            jr nc,1F
 651+ 90A2              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90A2 10 DC            djnz 2B
 653+ 90A4
 654+ 90A4              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90A4
 656+ 90A4              ; LLegados a este punto:
 657+ 90A4              ;
 658+ 90A4              ;   NO HAY COLISIÓN !!!!!.
 659+ 90A4              ;
 660+ 90A4              ;   .db (Impacto) de Amadeus a "0".
 661+ 90A4              ;   RES el bit2 de (Impacto2).
 662+ 90A4              ;
 663+ 90A4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90A4              ;   Lo colocamos a "0".
 665+ 90A4
 666+ 90A4 21 68 89         ld hl,Impacto2
 667+ 90A7 CB 96            res 2,(hl)
 668+ 90A9 2A 69 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90AC 36 00            ld (hl),0
 670+ 90AE
 671+ 90AE E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90AF C9               ret
 673+ 90B0
 674+ 90B0               ; ---------- ----------
 675+ 90B0
 676+ 90B0 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90B1 3A EA 88         ld a,(Columns)
 678+ 90B4 47               ld b,a
 679+ 90B5 FD 7E 00     2 ld a,(iy)
 680+ 90B8 BE               cp (hl)
 681+ 90B9 28 01            jr z,1F
 682+ 90BB
 683+ 90BB 1C               inc e
 684+ 90BC
 685+ 90BC 23           1 inc hl
 686+ 90BD FD 23            inc iy
 687+ 90BF 10 F4            djnz 2B
 688+ 90C1 C1               pop bc
 689+ 90C2 C9               ret
 690+ 90C3
 691+ 90C3              ; -------------------------------------------------------------------------------------------------------------
 692+ 90C3              ;
 693+ 90C3              ;   13/03/23
 694+ 90C3              ;
 695+ 90C3              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90C3              ;
 697+ 90C3              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90C3
 699+ 90C3 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90C6 7E               ld a,(hl)
 701+ 90C7 A7               and a
 702+ 90C8 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90C9
 704+ 90C9 44               ld b,h
 705+ 90CA 4D               ld c,l
 706+ 90CB 2A 45 89         ld hl,(Stack_snapshot_disparos)
 707+ 90CE E5               push hl
 708+ 90CF A7               and a
 709+ 90D0 ED 42            sbc hl,bc
 710+ 90D2 E5               push hl
 711+ 90D3 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90D4
 713+ 90D4 E1               pop hl
 714+ 90D5 54               ld d,h
 715+ 90D6 5D               ld e,l
 716+ 90D7 1B               dec de
 717+ 90D8 ED B8            lddr                                                ; Limpiamos.
 718+ 90DA
 719+ 90DA 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 90DD 22 45 89         ld (Stack_snapshot_disparos),hl
 721+ 90E0
 722+ 90E0 C9               ret
 723+ 90E1
 724+ 90E1              ; -------------------------------------------------------------------------------------------------------------
 725+ 90E1              ;
 726+ 90E1              ;   18/07/23
 727+ 90E1              ;
 728+ 90E1
 729+ 90E1              Motor_de_disparos
 730+ 90E1
 731+ 90E1              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90E1
 733+ 90E1 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90E4 2A 66 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90E7
 736+ 90E7 CD C0 8C     2 call Extrae_address
 737+ 90EA 7E               ld a,(hl)
 738+ 90EB A7               and a
 739+ 90EC 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90EE
 741+ 90EE              ; ----- ----- ----- ----- ----- -----
 742+ 90EE
 743+ 90EE C5               push bc
 744+ 90EF CD B3 91         call foto_disparo_a_borrar
 745+ 90F2
 746+ 90F2              ; Existe colisión con este disparo???
 747+ 90F2
 748+ 90F2 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90F3 7E               ld a,(hl)
 750+ 90F4 2B               dec hl
 751+ 90F5 E6 01            and 1
 752+ 90F7 28 1D            jr z,9F
 753+ 90F9
 754+ 90F9              ;   En este punto:
 755+ 90F9              ;
 756+ 90F9              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90F9              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90F9              ;   _con la entidad).
 759+ 90F9              ;
 760+ 90F9              ;   Disparo_2A defw 0                                ; Control.
 761+ 90F9              ;    defw 0                                          ; Puntero objeto.
 762+ 90F9              ;    defw 0                                          ; Puntero de impresión.
 763+ 90F9              ;    defw 0                                          ; Rutina de impresión.
 764+ 90F9
 765+ 90F9 E5               push hl
 766+ 90FA
 767+ 90FA 06 04            ld b,4
 768+ 90FC 23           19 inc hl
 769+ 90FD 10 FD            djnz 19B
 770+ 90FF
 771+ 90FF CD C0 8C         call Extrae_address
 772+ 9102 CD E1 9C         call Genera_coordenadas_disparo
 773+ 9105
 774+ 9105              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9105
 776+ 9105 21 6B 89         ld hl,Coordenadas_disparo_certero
 777+ 9108 72               ld (hl),d
 778+ 9109 23               inc hl
 779+ 910A 73               ld (hl),e
 780+ 910B
 781+ 910B              ; Elimino el disparo de la base de datos.
 782+ 910B
 783+ 910B E1               pop hl
 784+ 910C CD 32 92         call Elimina_disparo_de_base_de_datos
 785+ 910F 21 68 89         ld hl,Impacto2
 786+ 9112 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9114
 788+ 9114 18 06            jr 11F
 789+ 9116
 790+ 9116 CD DC 91     9 call Mueve_disparo
 791+ 9119 CD B3 91         call foto_disparo_a_borrar
 792+ 911C
 793+ 911C C1           11 pop bc
 794+ 911D 18 04            jr 7F
 795+ 911F
 796+ 911F              ; ----- ----- ----- ----- ----- -----
 797+ 911F
 798+ 911F ED 42        1 sbc hl,bc
 799+ 9121 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9123
 801+ 9123 2A 66 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9126 23               inc hl
 803+ 9127 23               inc hl
 804+ 9128 22 66 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 912B 18 BA            jr 2B
 806+ 912D
 807+ 912D CD 89 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9130              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9130
 810+ 9130              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9130
 812+ 9130 01 8A 85         ld bc,Disparo_11
 813+ 9133 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9136
 815+ 9136 CD C0 8C     5 call Extrae_address
 816+ 9139 7E               ld a,(hl)
 817+ 913A A7               and a
 818+ 913B 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 913D
 820+ 913D              ; ----- ----- ----- ----- ----- -----
 821+ 913D
 822+ 913D C5               push bc
 823+ 913E CD B3 91         call foto_disparo_a_borrar
 824+ 9141
 825+ 9141              ; Existe colisión con este disparo???
 826+ 9141
 827+ 9141 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9142 7E               ld a,(hl)
 829+ 9143 2B               dec hl
 830+ 9144 E6 01            and 1
 831+ 9146 28 4D            jr z,10F
 832+ 9148
 833+ 9148              ;! La colisión se produce con Amadeus???
 834+ 9148              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9148
 836+ 9148 E5               push hl
 837+ 9149
 838+ 9149 06 04            ld b,4
 839+ 914B 23           16 inc hl
 840+ 914C 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 914E
 842+ 914E CD C0 8C         call Extrae_address
 843+ 9151 CD E1 9C         call Genera_coordenadas_disparo
 844+ 9154
 845+ 9154 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9155 FE 16            cp $16
 847+ 9157 38 2A            jr c,15F
 848+ 9159
 849+ 9159
 850+ 9159              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9159
 852+ 9159 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 915A
 854+ 915A              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 915A
 856+ 915A
 857+ 915A 2A 73 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 915D
 859+ 915D              ; Coordenada X de Amadeus en D.
 860+ 915D
 861+ 915D 7D               ld a,l
 862+ 915E E6 1F            and $1F
 863+ 9160 57               ld d,a
 864+ 9161
 865+ 9161 21 A6 85         ld hl,Amadeus_db+8
 866+ 9164 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9165
 868+ 9165 21 6D 89         ld hl,Coordenadas_X_Amadeus
 869+ 9168 CD 3D 92         call Guarda_coordenadas_X
 870+ 916B
 871+ 916B D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 916C
 873+ 916C              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 916C
 875+ 916C 06 02            ld b,2
 876+ 916E C5           20 push bc
 877+ 916F
 878+ 916F 06 03            ld b,3
 879+ 9171 21 6D 89         ld hl,Coordenadas_X_Amadeus
 880+ 9174 7E           18 ld a,(hl)
 881+ 9175 BA               cp d
 882+ 9176 20 04            jr nz,17F
 883+ 9178
 884+ 9178              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9178
 886+ 9178 C1               pop bc
 887+ 9179 E1               pop hl
 888+ 917A 18 0D            jr 14F
 889+ 917C
 890+ 917C 23           17 inc hl
 891+ 917D 10 F5            djnz 18B
 892+ 917F
 893+ 917F 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9180
 895+ 9180 C1               pop bc
 896+ 9181 10 EB            djnz 20B
 897+ 9183
 898+ 9183
 899+ 9183              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9183              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9183
 902+ 9183 E1           15 pop hl
 903+ 9184 23               inc hl
 904+ 9185 35               dec (hl)
 905+ 9186 2B               dec hl
 906+ 9187 18 0C            jr 10F
 907+ 9189
 908+ 9189              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9189              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9189
 911+ 9189 E5           14 push hl
 912+ 918A CD 32 92         call Elimina_disparo_de_base_de_datos
 913+ 918D 21 68 89         ld hl,Impacto2
 914+ 9190 CB CE            set 1,(hl)
 915+ 9192 E1               pop hl
 916+ 9193 18 06            jr 12F
 917+ 9195
 918+ 9195              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9195
 920+ 9195 CD DC 91     10 call Mueve_disparo
 921+ 9198 CD B3 91         call foto_disparo_a_borrar
 922+ 919B C1           12 pop bc
 923+ 919C
 924+ 919C 18 04            jr 8F
 925+ 919E
 926+ 919E              ; ----- ----- ----- ----- ----- -----
 927+ 919E
 928+ 919E ED 42        4 sbc hl,bc
 929+ 91A0 28 0A            jr z,6F
 930+ 91A2
 931+ 91A2 2A 64 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91A5 23               inc hl
 933+ 91A6 23               inc hl
 934+ 91A7 22 64 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91AA 18 8A            jr 5B
 936+ 91AC
 937+ 91AC CD 82 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91AF CD 79 92         call Limpia_Coordenadas_X
 939+ 91B2 C9               ret
 940+ 91B3
 941+ 91B3              ; ------------------------------------------------------------------
 942+ 91B3
 943+ 91B3              foto_disparo_a_borrar
 944+ 91B3
 945+ 91B3 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91B4 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91B5 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91B6
 949+ 91B6 E5               push hl
 950+ 91B7 23               inc hl
 951+ 91B8 23               inc hl
 952+ 91B9 ED 73 3D 89      ld (Stack),sp
 953+ 91BD F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91BE FD E1            pop iy
 955+ 91C0 DD E1            pop ix
 956+ 91C2 E1               pop hl
 957+ 91C3 ED 7B 3D 89      ld sp,(Stack)
 958+ 91C7 3A 2C 89         ld a,(Ctrl_1)
 959+ 91CA CB C7            set 0,a
 960+ 91CC 32 2C 89         ld (Ctrl_1),a
 961+ 91CF CD A0 7F         call Guarda_foto_registros
 962+ 91D2 3A 2C 89         ld a,(Ctrl_1)
 963+ 91D5 CB 87            res 0,a
 964+ 91D7 32 2C 89         ld (Ctrl_1),a
 965+ 91DA E1               pop hl
 966+ 91DB C9               ret
 967+ 91DC
 968+ 91DC              ;---------------------------------------------------
 969+ 91DC              ;
 970+ 91DC              ;   18/07/23
 971+ 91DC              ;
 972+ 91DC
 973+ 91DC              Mueve_disparo
 974+ 91DC
 975+ 91DC              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91DC              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91DC              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91DC
 979+ 91DC E5               push hl
 980+ 91DD
 981+ 91DD 7E               ld a,(hl)
 982+ 91DE
 983+ 91DE 06 04            ld b,4
 984+ 91E0 23           1 inc hl
 985+ 91E1 10 FD            djnz 1B
 986+ 91E3
 987+ 91E3              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91E3
 989+ 91E3 CD C0 8C         call Extrae_address
 990+ 91E6
 991+ 91E6 E6 01            and 1
 992+ 91E8 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91EA
 994+ 91EA              ; Disparo hacia arriba, (Amadeus).
 995+ 91EA
 996+ 91EA              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91EA              ; _ de la dificultad.
 998+ 91EA
 999+ 91EA CD 6A 96         call PreviousScan
1000+ 91ED CD 6A 96         call PreviousScan
1001+ 91F0 CD 6A 96         call PreviousScan
1002+ 91F3 CD 6A 96         call PreviousScan
1003+ 91F6
1004+ 91F6              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91F6
1006+ 91F6 7C               ld a,h
1007+ 91F7 FE 40            cp $40
1008+ 91F9 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91FB
1010+ 91FB              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91FB
1012+ 91FB EB               ex de,hl
1013+ 91FC 06 04            ld b,4
1014+ 91FE 2B           6 dec hl
1015+ 91FF 10 FD            djnz 6B
1016+ 9201
1017+ 9201 CD 32 92         call Elimina_disparo_de_base_de_datos
1018+ 9204 E1               pop hl
1019+ 9205 18 10            jr 7F
1020+ 9207
1021+ 9207              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9207              ; HL contiene el puntero de impresión del disparo.
1023+ 9207              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9207
1025+ 9207 D5           3 push de
1026+ 9208 C5               push bc
1027+ 9209
1028+ 9209 CD D1 8F         call Comprueba_Colision
1029+ 920C
1030+ 920C              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 920C
1032+ 920C 78               ld a,b
1033+ 920D
1034+ 920D C1               pop bc
1035+ 920E D1               pop de
1036+ 920F
1037+ 920F EB               ex de,hl
1038+ 9210
1039+ 9210 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9211 23               inc hl                                      ; _ movimiento.
1041+ 9212 72               ld (hl),d
1042+ 9213
1043+ 9213 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9214
1045+ 9214 23               inc hl                                      ; _ en curso.
1046+ 9215 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9216 2B               dec hl
1048+ 9217
1049+ 9217 C9           7 ret
1050+ 9218
1051+ 9218              ; Disparo hacia abajo, (Entidad).
1052+ 9218
1053+ 9218 3A 75 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 921B 47               ld b,a
1055+ 921C
1056+ 921C CD 5B 96     4 call NextScan
1057+ 921F 10 FB            djnz 4B
1058+ 9221
1059+ 9221              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9221
1061+ 9221 7C               ld a,h
1062+ 9222 FE 58            cp $58
1063+ 9224 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9226
1065+ 9226 EB               ex de,hl
1066+ 9227 06 04            ld b,4
1067+ 9229 2B           5 dec hl
1068+ 922A 10 FD            djnz 5B
1069+ 922C
1070+ 922C CD 32 92         call Elimina_disparo_de_base_de_datos
1071+ 922F E1               pop hl
1072+ 9230 18 E5            jr 7B
1073+ 9232
1074+ 9232              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9232
1076+ 9232 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9235 AF               xor a
1078+ 9236 77               ld (hl),a
1079+ 9237 54               ld d,h
1080+ 9238 5D               ld e,l
1081+ 9239 13               inc de
1082+ 923A ED B0            ldir
1083+ 923C C9               ret
1084+ 923D
1085+ 923D              ; -----------------------------------------------------------------
1086+ 923D              ;
1087+ 923D              ;   19/7/23
1088+ 923D              ;
1089+ 923D              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 923D              ;
1091+ 923D              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 923D              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 923D              ;
1094+ 923D              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 923D              ;
1096+ 923D              ;   INPUTS:
1097+ 923D              ;
1098+ 923D              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 923D              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 923D
1101+ 923D              ;   MODIFICA: A, HL, BC y DE.
1102+ 923D
1103+ 923D              Guarda_coordenadas_X
1104+ 923D
1105+ 923D 7B               ld a,e
1106+ 923E A7               and a
1107+ 923F 20 04            jr nz,1F
1108+ 9241
1109+ 9241 06 02            ld b,2
1110+ 9243 18 02            jr 2F
1111+ 9245
1112+ 9245 06 03        1 ld b,3
1113+ 9247 72           2 ld (hl),d
1114+ 9248 23               inc hl
1115+ 9249 14               inc d
1116+ 924A 10 FB            djnz 2B
1117+ 924C
1118+ 924C C9               ret
1119+ 924D
1120+ 924D              ; -----------------------------------------------------------------
1121+ 924D              ;
1122+ 924D              ;   12/04/23
1123+ 924D              ;
1124+ 924D
1125+ 924D 3A 68 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9250 A7               and a
1127+ 9251 C8               ret z
1128+ 9252
1129+ 9252 FE 04            cp 4
1130+ 9254 20 09            jr nz,1F
1131+ 9256
1132+ 9256
1133+ 9256              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9256
1135+ 9256 CD 72 90         call Detecta_colision_nave_entidad
1136+ 9259
1137+ 9259 21 68 89         ld hl,Impacto2
1138+ 925C CB 5E            bit 3,(hl)
1139+ 925E C0               ret nz                                               ; Existe colisión, RET.
1140+ 925F
1141+ 925F              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 925F              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 925F
1144+ 925F 21 68 89     1 ld hl,Impacto2
1145+ 9262 CB 4E            bit 1,(hl)
1146+ 9264 28 07            jr z,2F
1147+ 9266
1148+ 9266 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9269 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 926B 18 0B            jr 3F
1151+ 926D
1152+ 926D 21 68 89     2 ld hl,Impacto2
1153+ 9270 CB 46            bit 0,(hl)
1154+ 9272 C8               ret z
1155+ 9273
1156+ 9273              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9273
1158+ 9273 21 2C 89         ld hl,Ctrl_1
1159+ 9276 CB D6            set 2,(hl)
1160+ 9278
1161+ 9278 C9           3 ret
1162+ 9279
1163+ 9279              ; -----------------------------------------------------------------
1164+ 9279              ;
1165+ 9279              ;   19/7/23
1166+ 9279              ;
1167+ 9279              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9279
1169+ 9279 AF           Limpia_Coordenadas_X xor a
1170+ 927A 06 06            ld b,6
1171+ 927C 21 6D 89         ld hl,Coordenadas_X_Amadeus
1172+ 927F 77           1 ld (hl),a
1173+ 9280 23               inc hl
1174+ 9281 10 FC            djnz 1B
1175+ 9283 C9               ret
1176+ 9284
1177+ 9284              ; -----------------------------------------------------------------
1178+ 9284              ;
1179+ 9284              ;   25/04/23
1180+ 9284              ;
1181+ 9284
1182+ 9284              Determina_resultado_comparativa
1183+ 9284
1184+ 9284              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9284              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9284              ;
1187+ 9284              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9284              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9284              ;
1190+ 9284              ;   SBC HL,DE
1191+ 9284
1192+ 9284              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9284              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9284
1195+ 9284              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9284              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9284
1198+ 9284
1199+ 9284 3A FD 88         ld a,(Cuad_objeto)
1200+ 9287 FE 02            cp 2
1201+ 9289 28 26            jr z,2F
1202+ 928B 38 24            jr c,2F
1203+ 928D
1204+ 928D              ; Cuadrantes 3º y 4º
1205+ 928D
1206+ 928D E6 01            and 1
1207+ 928F 28 10            jr z,4F
1208+ 9291
1209+ 9291              ; Cuadrante 3º
1210+ 9291
1211+ 9291 7C               ld a,h
1212+ 9292 06 00            ld b,0
1213+ 9294
1214+ 9294 CD 1F 93         call Compara_cositas_H3
1215+ 9297
1216+ 9297 04               inc b
1217+ 9298 05               dec b
1218+ 9299 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 929A
1220+ 929A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 929B 06 00            ld b,0
1222+ 929D
1223+ 929D CD 31 93         call Compara_cositas_L3
1224+ 92A0 C9               ret
1225+ 92A1
1226+ 92A1              ; Cuadrante 4º
1227+ 92A1
1228+ 92A1 7C           4 ld a,h
1229+ 92A2 06 00            ld b,0
1230+ 92A4
1231+ 92A4 CD 43 93         call Compara_cositas_H4
1232+ 92A7
1233+ 92A7 04               inc b
1234+ 92A8 05               dec b
1235+ 92A9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92AA
1237+ 92AA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92AB 06 00            ld b,0
1239+ 92AD
1240+ 92AD CD 59 93         call Compara_cositas_L4
1241+ 92B0 C9               ret
1242+ 92B1
1243+ 92B1              ; Cuadrantes 1º y 2º.
1244+ 92B1
1245+ 92B1 28 10        2 jr z,3F
1246+ 92B3
1247+ 92B3              ; 1er Cuadrante
1248+ 92B3
1249+ 92B3 7C               ld a,h
1250+ 92B4 06 00            ld b,0
1251+ 92B6
1252+ 92B6 CD F7 92         call Compara_cositas_H1
1253+ 92B9
1254+ 92B9 04               inc b
1255+ 92BA 05               dec b
1256+ 92BB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92BC
1258+ 92BC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92BD 06 00            ld b,0
1260+ 92BF
1261+ 92BF CD 0D 93         call Compara_cositas_L1
1262+ 92C2 C9               ret
1263+ 92C3
1264+ 92C3
1265+ 92C3              ; 2º Cuadrante
1266+ 92C3
1267+ 92C3 7C           3 ld a,h
1268+ 92C4 06 00            ld b,0
1269+ 92C6
1270+ 92C6 CD D3 92         call Compara_cositas_H2
1271+ 92C9
1272+ 92C9 04               inc b
1273+ 92CA 05               dec b
1274+ 92CB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92CC
1276+ 92CC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92CD 06 00            ld b,0
1278+ 92CF
1279+ 92CF CD E5 92         call Compara_cositas_L2
1280+ 92D2 C9               ret
1281+ 92D3
1282+ 92D3 A7           Compara_cositas_H2 and a
1283+ 92D4 28 0D            jr z,1F
1284+ 92D6              ;    cp $fd
1285+ 92D6              ;    jr z,1F
1286+ 92D6              ;    cp $fe
1287+ 92D6              ;    jr z,1F
1288+ 92D6 FE FF            cp $ff
1289+ 92D8 28 09            jr z,1F
1290+ 92DA FE 01            cp $01
1291+ 92DC 28 05            jr z,1F
1292+ 92DE FE 02            cp $02
1293+ 92E0 28 01            jr z,1F
1294+ 92E2 C0               ret nz
1295+ 92E3 04           1 inc b
1296+ 92E4 C9               ret
1297+ 92E5
1298+ 92E5 A7           Compara_cositas_L2 and a
1299+ 92E6 28 0D            jr z,1F
1300+ 92E8              ;    cp $fd
1301+ 92E8              ;    jr z,1F
1302+ 92E8 FE FE            cp $fe
1303+ 92EA 28 09            jr z,1F
1304+ 92EC FE FF            cp $ff
1305+ 92EE 28 05            jr z,1F
1306+ 92F0 FE 01            cp $01
1307+ 92F2 28 01            jr z,1F
1308+ 92F4              ;    cp $02
1309+ 92F4              ;    jr z,1F
1310+ 92F4 C0               ret nz
1311+ 92F5 04           1 inc b
1312+ 92F6 C9               ret
1313+ 92F7
1314+ 92F7 A7           Compara_cositas_H1 and a
1315+ 92F8 28 11            jr z,1F
1316+ 92FA              ;    cp $fd
1317+ 92FA              ;    jr z,1F
1318+ 92FA              ;    cp $fe
1319+ 92FA              ;    jr z,1F
1320+ 92FA FE FF            cp $ff
1321+ 92FC 28 0D            jr z,1F
1322+ 92FE FE 01            cp $01
1323+ 9300 28 09            jr z,1F
1324+ 9302 FE 02            cp $02
1325+ 9304 28 05            jr z,1F
1326+ 9306 FE 03            cp $03
1327+ 9308 28 01            jr z,1F
1328+ 930A C0               ret nz
1329+ 930B 04           1 inc b
1330+ 930C C9               ret
1331+ 930D
1332+ 930D A7           Compara_cositas_L1 and a
1333+ 930E 28 0D            jr z,1F
1334+ 9310              ;    cp $fd
1335+ 9310              ;    jr z,1F
1336+ 9310              ;    cp $fe
1337+ 9310              ;    jr z,1F
1338+ 9310              ;    cp $ff
1339+ 9310              ;    jr z,1F
1340+ 9310 FE 01            cp $01
1341+ 9312 28 09            jr z,1F
1342+ 9314 FE 02            cp $02
1343+ 9316 28 05            jr z,1F
1344+ 9318 FE 03            cp $03
1345+ 931A 28 01            jr z,1F
1346+ 931C C0               ret nz
1347+ 931D 04           1 inc b
1348+ 931E C9               ret
1349+ 931F
1350+ 931F A7           Compara_cositas_H3 and a
1351+ 9320 28 0D            jr z,1F
1352+ 9322              ;    cp $fd
1353+ 9322              ;    jr z,1F
1354+ 9322 FE FE            cp $fe
1355+ 9324 28 09            jr z,1F
1356+ 9326 FE FF            cp $ff
1357+ 9328 28 05            jr z,1F
1358+ 932A FE 01            cp $01
1359+ 932C 28 01            jr z,1F
1360+ 932E              ;    cp $02
1361+ 932E              ;    jr z,1F
1362+ 932E              ;    cp $03
1363+ 932E              ;    jr z,1F
1364+ 932E C0               ret nz
1365+ 932F 04           1 inc b
1366+ 9330 C9               ret
1367+ 9331
1368+ 9331 A7           Compara_cositas_L3 and a
1369+ 9332 28 0D            jr z,1F
1370+ 9334              ;    cp $fd
1371+ 9334              ;    jr z,1F
1372+ 9334              ;    cp $fe
1373+ 9334              ;    jr z,1F
1374+ 9334              ;    cp $ff
1375+ 9334              ;    jr z,1F
1376+ 9334 FE 01            cp $01
1377+ 9336 28 09            jr z,1F
1378+ 9338 FE 02            cp $02
1379+ 933A 28 05            jr z,1F
1380+ 933C FE 03            cp $03
1381+ 933E 28 01            jr z,1F
1382+ 9340 C0               ret nz
1383+ 9341 04           1 inc b
1384+ 9342 C9               ret
1385+ 9343
1386+ 9343 A7           Compara_cositas_H4 and a
1387+ 9344 28 11            jr z,1F
1388+ 9346 FE FD            cp $fd
1389+ 9348 28 0D            jr z,1F
1390+ 934A FE FE            cp $fe
1391+ 934C 28 09            jr z,1F
1392+ 934E FE FF            cp $ff
1393+ 9350 28 05            jr z,1F
1394+ 9352 FE 01            cp $01
1395+ 9354 28 01            jr z,1F
1396+ 9356              ;    cp $02
1397+ 9356              ;    jr z,1F
1398+ 9356              ;    cp $03
1399+ 9356              ;    jr z,1F
1400+ 9356 C0               ret nz
1401+ 9357 04           1 inc b
1402+ 9358 C9               ret
1403+ 9359
1404+ 9359 A7           Compara_cositas_L4 and a
1405+ 935A 28 0D            jr z,1F
1406+ 935C              ;    cp $fd
1407+ 935C              ;    jr z,1F
1408+ 935C FE FE            cp $fe
1409+ 935E 28 09            jr z,1F
1410+ 9360 FE FF            cp $ff
1411+ 9362 28 05            jr z,1F
1412+ 9364 FE 01            cp $01
1413+ 9366 28 01            jr z,1F
1414+ 9368              ;    cp $02
1415+ 9368              ;    jr z,1F
1416+ 9368              ;    cp $03
1417+ 9368              ;    jr z,1F
1418+ 9368 C0               ret nz
1419+ 9369 04           1 inc b
1420+ 936A C9               ret
# file closed: Disparo.asm
1502  936B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 936B              ; ******************************************************************************************************************************************************************************************
   2+ 936B              ;
   3+ 936B              ; 26/06/23
   4+ 936B              ;
   5+ 936B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 936B
   7+ 936B CD 4F 96     Draw call Prepara_draw
   8+ 936E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 936F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9370 28 05        	jr z,2F
  11+ 9372
  12+ 9372 3A FD 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9375 18 0C        	jr 1F
  14+ 9377
  15+ 9377 2A FB 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 937A 22 EB 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 937D CD 0C 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9380              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9380 CD 6E 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9383
  21+ 9383 3A 17 89     1 ld a,(Ctrl_0)
  22+ 9386 CB 6F        	bit 5,a
  23+ 9388 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 938A
  25+ 938A CD A2 93     	call Comprueba_limite_horizontal
  26+ 938D CD 32 94     	call Comprueba_limite_vertical
  27+ 9390
  28+ 9390              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9390              ; -----------------------
  30+ 9390              ; -----------------------
  31+ 9390              ; -----------------------
  32+ 9390
  33+ 9390 CD 7F 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9393 CD B6 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9396 CD 15 96     	call Define_rutina_de_impresion
  36+ 9399
  37+ 9399 3A 17 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 939C CB AF        	res 5,a											; _a ser de utilidad.
  39+ 939E 32 17 89     	ld (Ctrl_0),a
  40+ 93A1
  41+ 93A1 C9           	ret
  42+ 93A2
  43+ 93A2              ; *******************************************************************************************************************************************************************************************
  44+ 93A2              ;	21/01/23
  45+ 93A2              ;
  46+ 93A2              ; 	Comprueba_limite_horizontal.
  47+ 93A2              ;
  48+ 93A2              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93A2              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93A2              ;
  51+ 93A2              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93A2              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93A2              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93A2              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93A2
  56+ 93A2
  57+ 93A2
  58+ 93A2 3A 17 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93A5 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93A7 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93A9 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93AB 32 17 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93AE 18 09            jr 6F
  64+ 93B0 CB 5F        1 bit 3,a
  65+ 93B2 28 0A            jr z,2F
  66+ 93B4 E6 F7            and $f7
  67+ 93B6 32 17 89         ld (Ctrl_0),a
  68+ 93B9 CD 0C 95     6 call Inicializacion
  69+ 93BC 18 5B            jr 5F
  70+ 93BE E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93BF
  72+ 93BF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93BF              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93BF
  75+ 93BF EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93C0 2A 27 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93C3 CD 2B 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93C6 67           	ld h,a
  79+ 93C7 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93C8 CD 2B 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93CB 67           	ld h,a
  82+ 93CC A7           	and a
  83+ 93CD ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93CF 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93D0 3A FD 88     	ld a,(Cuad_objeto)
  86+ 93D3 FE 02        	cp 2
  87+ 93D5 38 1E        	jr c,3F
  88+ 93D7 28 1C        	jr z,3F
  89+ 93D9 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93DA 28 23            jr z,7F
  91+ 93DC 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93DE 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93E0 E1           	pop hl
  94+ 93E1
  95+ 93E1              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93E1              ; _para indicar con E="2" en caso necesario.
  97+ 93E1
  98+ 93E1 E5               push hl
  99+ 93E2 C5               push bc
 100+ 93E3 CD 2B 99     	call calcula_tercio
 101+ 93E6 FE 01        	cp 1
 102+ 93E8 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93EA CD 1A 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93ED 28 26            jr z,9F
 105+ 93EF 38 24            jr c,9F
 106+ 93F1 1E 00        11 ld e,0
 107+ 93F3 18 22            jr 8F
 108+ 93F5 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93F6 28 07        	jr z, 7F
 110+ 93F8 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93FA 1E 00         	ld e,0
 112+ 93FC E1           	pop hl
 113+ 93FD 18 04        	jr 4F
 114+ 93FF 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9401 18 15            jr 10F
 116+ 9403
 117+ 9403              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9403              ; _para indicar con E="2" en caso necesario.
 119+ 9403
 120+ 9403 E5           4 push hl
 121+ 9404 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9405 CD 2B 99     	call calcula_tercio
 123+ 9408 FE 01        	cp 1
 124+ 940A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 940C CD 1A 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 940F 28 04            jr z,9F
 127+ 9411 30 02            jr nc,9F
 128+ 9413 18 02        	jr 8F
 129+ 9415 1E 02        9 ld e,2
 130+ 9417 C1           8 pop bc
 131+ 9418 E1           10 pop hl
 132+ 9419 C9           5 ret
 133+ 941A
 134+ 941A              ; --------------------
 135+ 941A              ;
 136+ 941A              ; 25/08/22
 137+ 941A
 138+ 941A CD 2B 99     Comprueba_centro call calcula_tercio
 139+ 941D 67               ld h,a
 140+ 941E 08           	ex af,af
 141+ 941F FE 02        	cp 2
 142+ 9421 38 07        	jr c,1F
 143+ 9423 28 05        	jr z,1F
 144+ 9425 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9428 18 03        	jr 2F
 146+ 942A 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 942D 08           2 ex af,af
 148+ 942E A7               and a
 149+ 942F ED 42            sbc hl,bc
 150+ 9431 C9               ret
 151+ 9432
 152+ 9432              ; *********************************************************************************************************************************************************************************************
 153+ 9432              ;
 154+ 9432              ;   16/8/22
 155+ 9432              ;
 156+ 9432              ;	Comprueba_limite_vertical
 157+ 9432              ;
 158+ 9432              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9432              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9432              ;
 161+ 9432
 162+ 9432 2A EB 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9435 7D           	ld a,l
 164+ 9436 E6 1F        	and $1F
 165+ 9438 57           	ld d,a
 166+ 9439 3A 29 89     	ld a,(Limite_vertical)
 167+ 943C BA           	cp d 											; Límite - Posición.
 168+ 943D 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 943E 3A FD 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9441 CB 47        	bit 0,a
 171+ 9443 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9445
 173+ 9445              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9445
 175+ 9445 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9446 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9448
 178+ 9448              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9448              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9448
 181+ 9448 3A EF 88         ld a,(Coordenada_X)
 182+ 944B 16 0F            ld d,Centro_izquierda
 183+ 944D A7               and a
 184+ 944E 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 944F 28 1E            jr z,3F
 186+ 9451 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9453              ;                                                    ; _salimos sin modificar nada.
 188+ 9453 18 0E            jr 2F
 189+ 9455 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9456 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9458
 192+ 9458              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9458              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9458
 195+ 9458 3A EF 88         ld a,(Coordenada_X)
 196+ 945B 16 10            ld d,Centro_derecha
 197+ 945D A7               and a
 198+ 945E 92               sub d
 199+ 945F 28 0E            jr z,3F
 200+ 9461 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9463              ;                                                    ; _salimos sin modificar nada.
 202+ 9463 CB 43        2 bit 0,e
 203+ 9465 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9467 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9468 CD FC 94         call Modificaccionne
 206+ 946B C1           	pop bc
 207+ 946C CD 0C 95         call Inicializacion
 208+ 946F C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9470
 210+ 9470              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9470
 212+ 9470 C5           4 push bc
 213+ 9471 01 EA 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9474 0A           	ld a,(bc)
 215+ 9475 3D           	dec a
 216+ 9476 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9477 7D           	ld a,l
 218+ 9478 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9479 CB 47        	bit 0,a
 220+ 947B 28 03        	jr z,5F
 221+ 947D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 947E 18 2E        	jr 7F
 223+ 9480
 224+ 9480              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9480
 226+ 9480 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9481 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9482 3A 17 89     	ld a,(Ctrl_0)
 229+ 9485 CB 4F        	bit 1,a
 230+ 9487 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9489 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 948A
 233+ 948A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 948A
 235+ 948A 1C               inc e
 236+ 948B 1D               dec e
 237+ 948C 20 07            jr nz,12F
 238+ 948E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 948F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9490 22 EB 88     	ld (Posicion_actual),hl
 241+ 9493 18 44        13 jr 9F
 242+ 9495 CB 43        12 bit 0,e
 243+ 9497 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9499              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9499 C1           	pop bc
 246+ 949A 18 D3        	jr 3B
 247+ 949C 80           14 add b
 248+ 949D 6F               ld l,a
 249+ 949E 22 EB 88     	ld (Posicion_actual),hl
 250+ 94A1 CD FC 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94A4 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94A6 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94A8 32 17 89         ld (Ctrl_0),a
 254+ 94AB F1           	pop af
 255+ 94AC 18 2B        	jr 9F
 256+ 94AE
 257+ 94AE              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94AE
 259+ 94AE F5           7 push af
 260+ 94AF 3A 17 89     	ld a,(Ctrl_0)
 261+ 94B2 CB 47        	bit 0,a
 262+ 94B4 20 1D        	jr nz,8F
 263+ 94B6 F1           	pop af
 264+ 94B7
 265+ 94B7              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94B7
 267+ 94B7 1C           	inc e
 268+ 94B8 1D               dec e
 269+ 94B9 20 07            jr nz,10F
 270+ 94BB 90           	sub b
 271+ 94BC 6F               ld l,a
 272+ 94BD 22 EB 88     	ld (Posicion_actual),hl
 273+ 94C0 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94C2              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94C2 CB 43        10 bit 0,e
 276+ 94C4 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94C6              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94C6 C1           	pop bc
 279+ 94C7 18 A6        	jr 3B
 280+ 94C9 90           16 sub b
 281+ 94CA 6F               ld l,a
 282+ 94CB 22 EB 88     	ld (Posicion_actual),hl
 283+ 94CE CD FC 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94D1 18 06            jr 9F
 285+ 94D3 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94D5 32 17 89         ld (Ctrl_0),a
 287+ 94D8 F1           	pop af
 288+ 94D9 C1           9 pop bc
 289+ 94DA 1E 00        	ld e,0
 290+ 94DC CD 0C 95         call Inicializacion
 291+ 94DF F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94E0 08           	ex af,af
 293+ 94E1 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94E2 18 8B            jr 3B
 295+ 94E4
 296+ 94E4              ; --------------------
 297+ 94E4
 298+ 94E4 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94E6 CD 6A 96     1 call PreviousScan
 300+ 94E9 10 FB            djnz 1B
 301+ 94EB 22 EB 88     	ld (Posicion_actual),hl
 302+ 94EE AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94EF C9           	ret
 304+ 94F0
 305+ 94F0              ; --------------------
 306+ 94F0
 307+ 94F0 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94F2 CD 5B 96     1 call NextScan
 309+ 94F5 10 FB            djnz 1B
 310+ 94F7 22 EB 88     	ld (Posicion_actual),hl
 311+ 94FA AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94FB C9           	ret
 313+ 94FC
 314+ 94FC              ; --------------------
 315+ 94FC              ;
 316+ 94FC              ;	22/01/23
 317+ 94FC              ;
 318+ 94FC              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94FC              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94FC              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94FC
 322+ 94FC
 323+ 94FC              Modificaccionne
 324+ 94FC
 325+ 94FC 3A FD 88     	ld a,(Cuad_objeto)
 326+ 94FF FE 02        	cp 2
 327+ 9501 CC E4 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9504 DC E4 94         call c,Modifica_Pos_actual
 329+ 9507 C8           	ret z
 330+ 9508 CD F0 94         call Modifica_Pos_actual2
 331+ 950B C9               ret
 332+ 950C
 333+ 950C              ; *************************************************************************************************************************************************************************************************
 334+ 950C              ;
 335+ 950C              ;	13/8/22
 336+ 950C              ;
 337+ 950C              ;	Inicializacion
 338+ 950C              ;
 339+ 950C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 950C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 950C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 950C              ;
 343+ 950C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 950C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 950C              ;	_ desaparece/aparece.
 346+ 950C
 347+ 950C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 950C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 950C              ;
 350+ 950C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 950C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 950C              ; 		   [E] ="0"
 353+ 950C
 354+ 950C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 950C
 356+ 950C CD 2B 99     Inicializacion call calcula_tercio
 357+ 950F 28 36        	jr z,primit
 358+ 9511 E6 02        	and 2
 359+ 9513 20 07        	jr nz,segmit
 360+ 9515 7D           	ld a,l
 361+ 9516 FE 7F        	cp $7f
 362+ 9518 38 2D        	jr c,primit
 363+ 951A 28 2B        	jr z,primit
 364+ 951C CD 79 95     segmit call column
 365+ 951F 38 13        	jr c,tercuad
 366+ 9521 3E 04        cuarcuad ld a,4
 367+ 9523 32 FD 88     	ld (Cuad_objeto),a
 368+ 9526 21 20 48     	ld hl,$4820
 369+ 9529 22 27 89     	ld (Limite_horizontal),hl
 370+ 952C 21 29 89     	ld hl,Limite_vertical
 371+ 952F 36 0D        	ld (hl),$0d
 372+ 9531 08           	ex af,af
 373+ 9532 18 3C        	jr 1F
 374+ 9534              tercuad
 375+ 9534 3E 03        	ld a,3
 376+ 9536 32 FD 88     	ld (Cuad_objeto),a
 377+ 9539 21 20 48     	ld hl,$4820
 378+ 953C 22 27 89     	ld (Limite_horizontal),hl
 379+ 953F 21 29 89     	ld hl,Limite_vertical
 380+ 9542 36 12        	ld (hl),$12
 381+ 9544 08           	ex af,af
 382+ 9545 18 29        	jr 1F
 383+ 9547 CD 79 95     primit call column
 384+ 954A 38 13        	jr c, primcuad
 385+ 954C              segcuad
 386+ 954C 3E 02        	ld a,2
 387+ 954E 32 FD 88     	ld (Cuad_objeto),a
 388+ 9551 21 C0 4F     	ld hl,$4fc0
 389+ 9554 22 27 89     	ld (Limite_horizontal),hl
 390+ 9557 21 29 89     	ld hl,Limite_vertical
 391+ 955A 36 0D        	ld (hl),$0d
 392+ 955C 08           	ex af,af
 393+ 955D 18 11        	jr 1F
 394+ 955F              primcuad
 395+ 955F 3E 01        	ld a,1
 396+ 9561 32 FD 88     	ld (Cuad_objeto),a
 397+ 9564 21 C0 4F     	ld hl,$4fc0
 398+ 9567 22 27 89     	ld (Limite_horizontal),hl
 399+ 956A 21 29 89     	ld hl,Limite_vertical
 400+ 956D 36 12        	ld (hl),$12
 401+ 956F 08           	ex af,af
 402+ 9570 CD B6 9C     1 call Genera_coordenadas
 403+ 9573 21 17 89     	ld hl,Ctrl_0
 404+ 9576 CB EE        	set 5,(hl)
 405+ 9578 C9           	ret
 406+ 9579
 407+ 9579              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9579
 409+ 9579              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9579              ;
 411+ 9579              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9579
 413+ 9579 7D           column ld a,l
 414+ 957A E6 1F        	and $1f
 415+ 957C FE 10         	cp $10
 416+ 957E C9            	ret
 417+ 957F
 418+ 957F              ; --------------------------------------------------------------------------------------------------------------------
 419+ 957F              ;
 420+ 957F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 957F              ;
 422+ 957F              ; 14/12/22
 423+ 957F              ;
 424+ 957F              ;	Modifica: A y BC.
 425+ 957F
 426+ 957F 3A FD 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9582 E6 01        	and 1
 428+ 9584 28 17        	jr z,1F
 429+ 9586
 430+ 9586              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9586
 432+ 9586 3A EF 88     	ld a,(Coordenada_X)
 433+ 9589 47           	ld b,a
 434+ 958A 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 958B 79           	ld a,c
 436+ 958C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 958D 38 08        	jr c,2F
 438+ 958F 47           	ld b,a
 439+ 9590 79           	ld a,c
 440+ 9591 90           	sub b
 441+ 9592 32 26 89     	ld (Columnas),a
 442+ 9595 18 1B        	jr 4F
 443+ 9597 79           2 ld a,c
 444+ 9598 32 26 89     	ld (Columnas),a
 445+ 959B 18 15        	jr 4F
 446+ 959D
 447+ 959D              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 959D
 449+ 959D 3A EF 88     1 ld a,(Coordenada_X)
 450+ 95A0 81           	add c
 451+ 95A1 3D           	dec a
 452+ 95A2 D6 1F        	sub $1f
 453+ 95A4 38 08        	jr c,3F
 454+ 95A6 47           	ld b,a
 455+ 95A7 79           	ld a,c
 456+ 95A8 90           	sub b
 457+ 95A9 32 26 89     	ld (Columnas),a
 458+ 95AC 18 04        	jr 4F
 459+ 95AE 79           3 ld a,c
 460+ 95AF 32 26 89     	ld (Columnas),a
 461+ 95B2 D9           4 exx
 462+ 95B3 4F           	ld c,a
 463+ 95B4 D9           	exx
 464+ 95B5 C9            ret
 465+ 95B6
 466+ 95B6              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95B6              ;
 468+ 95B6              ;   19/7/23
 469+ 95B6              ;
 470+ 95B6              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95B6              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95B6              ;
 473+ 95B6              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95B6              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95B6              ;
 476+ 95B6              ;	DESTRUYE: HL,B Y A.
 477+ 95B6
 478+ 95B6 3A FD 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95B9 FE 02        	cp 2
 480+ 95BB 38 18        	jr c,1F
 481+ 95BD 28 16        	jr z,1F
 482+ 95BF E6 01        	and 1
 483+ 95C1 28 0D        	jr z,3F
 484+ 95C3
 485+ 95C3              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95C3
 487+ 95C3 CD 09 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95C6
 489+ 95C6 7D           9 ld a,l
 490+ 95C7 E6 1F        	and $1f
 491+ 95C9 28 2A        	jr z,7F
 492+ 95CB 2B           	dec hl
 493+ 95CC 10 F8        	djnz 9B
 494+ 95CE 18 25        	jr 7F
 495+ 95D0
 496+ 95D0              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95D0
 498+ 95D0 2A EB 88     3 ld hl,(Posicion_actual)
 499+ 95D3 18 20        	jr 7F
 500+ 95D5
 501+ 95D5 28 14        1 jr z,2F
 502+ 95D7
 503+ 95D7              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95D7
 505+ 95D7 CD 09 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95DA
 507+ 95DA 7D           4 ld a,l
 508+ 95DB E6 1F        	and $1f
 509+ 95DD 28 03        	jr z,6F
 510+ 95DF 2B           	dec hl
 511+ 95E0 10 F8        	djnz 4B
 512+ 95E2 06 0F        6 ld b,15
 513+ 95E4 CD 6A 96     5 call PreviousScan
 514+ 95E7 10 FB        	djnz 5B
 515+ 95E9 18 0A        	jr 7F
 516+ 95EB
 517+ 95EB              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95EB
 519+ 95EB CD 09 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95EE 06 0F        	ld b,15
 521+ 95F0 CD 6A 96     8 call PreviousScan
 522+ 95F3 10 FB        	djnz 8B
 523+ 95F5
 524+ 95F5 E5           7 push hl
 525+ 95F6 DD E1        	pop ix
 526+ 95F8
 527+ 95F8 2A ED 88     	ld hl,(Puntero_objeto)
 528+ 95FB E5           	push hl
 529+ 95FC FD E1        	pop iy
 530+ 95FE
 531+ 95FE              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95FE
 533+ 95FE 3A 17 89     	ld a,(Ctrl_0)
 534+ 9601 CB 77        	bit 6,a
 535+ 9603 C8           	ret z
 536+ 9604
 537+ 9604              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9604              ; _ entidad / Amadeus´.
 539+ 9604
 540+ 9604 DD 22 73 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9608
 542+ 9608 C9           	ret
 543+ 9609
 544+ 9609              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9609              ;
 546+ 9609              ;	2/1/23
 547+ 9609              ;
 548+ 9609              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9609              ;
 550+ 9609              ;	Tras esta rutina tenemos:
 551+ 9609              ;
 552+ 9609              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9609              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9609              ;
 555+ 9609              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9609
 557+ 9609 2A EB 88     Operandos ld hl,(Posicion_actual)
 558+ 960C 3A 26 89     	ld a,(Columnas)
 559+ 960F 3D           	dec a
 560+ 9610 20 01        	jr nz,1F
 561+ 9612 3C           	inc a
 562+ 9613 47           1 ld b,a
 563+ 9614 C9           	ret
 564+ 9615
 565+ 9615              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9615              ;
 567+ 9615              ;	3/1/23
 568+ 9615              ;
 569+ 9615              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9615              ;
 571+ 9615              ;	Destruye: A,B,HL y DE.
 572+ 9615
 573+ 9615              Define_rutina_de_impresion
 574+ 9615
 575+ 9615 3A EA 88     	ld a,(Columns)
 576+ 9618 47           	ld b,a
 577+ 9619 3A 26 89     	ld a,(Columnas)
 578+ 961C B8           	cp b
 579+ 961D 20 0D        	jr nz,2f
 580+ 961F
 581+ 961F              ;	La entidad se imprime entera.
 582+ 961F
 583+ 961F 21 FB 96     	ld hl, Indice_entidades_completas
 584+ 9622 E6 01        	and 1
 585+ 9624 28 02        	jr z,1F
 586+ 9626
 587+ 9626 23           	inc hl
 588+ 9627 23           	inc hl
 589+ 9628
 590+ 9628 CD C0 8C     1 call Extrae_address
 591+ 962B C9           	ret		;	ret
 592+ 962C
 593+ 962C              ;	La entidad no se imprime entera en pantalla.
 594+ 962C
 595+ 962C 3A FD 88     2 ld a,(Cuad_objeto)
 596+ 962F E6 01        	and 1
 597+ 9631 28 17        	jr z,3F
 598+ 9633
 599+ 9633              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9633
 601+ 9633 21 FF 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9636 3A EA 88     4 ld a,(Columns)
 603+ 9639 E6 01        	and 1
 604+ 963B 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 963D
 606+ 963D 23           	inc hl
 607+ 963E 23           	inc hl
 608+ 963F
 609+ 963F 3A 26 89     	ld a,(Columnas)
 610+ 9642 E6 01        	and 1
 611+ 9644 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9646
 613+ 9646 23           	inc hl
 614+ 9647 23           	inc hl
 615+ 9648
 616+ 9648 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 964A
 618+ 964A 21 05 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 964D 18 E7        	jr 4B
 620+ 964F
 621+ 964F              ; --------------------------------------------------------------------------------------------------------------------
 622+ 964F              ;
 623+ 964F              ;	Prepara_draw
 624+ 964F              ;
 625+ 964F              ;	Es una rutina de carga.
 626+ 964F              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 964F              ;
 628+ 964F              ;	FUNCIONAMIENTO:
 629+ 964F              ;
 630+ 964F              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 964F              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 964F              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 964F              ;
 634+ 964F              ;	DESTRUYE:
 635+ 964F              ;
 636+ 964F              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 964F
 638+ 964F 21 E9 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9652 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9653 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9654 4E           	ld c,(hl)
 642+ 9655 2A EB 88     	ld hl,(Posicion_actual)
 643+ 9658 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 965A C9           	ret
 645+ 965B
 646+ 965B              ;----------------------------------------------------------------------------------------------------------------
 647+ 965B              ;
 648+ 965B              ;	5/08/22
 649+ 965B              ;
 650+ 965B              ;   NextScan.
 651+ 965B              ;
 652+ 965B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 965B              ;
 654+ 965B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 965B              ;
 656+ 965B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 965B              ;
 658+ 965B              ;       DESTRUIDOS: AF y HL !!!
 659+ 965B              ;
 660+ 965B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 965B              ;
 662+ 965B
 663+ 965B 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 965C 7C               ld a,h
 665+ 965D E6 07            and 7
 666+ 965F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9660
 668+ 9660 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9661 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9663 6F               ld l,a
 671+ 9664 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9665
 673+ 9665 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9666 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9668 67               ld h,a
 676+ 9669 C9               ret
 677+ 966A
 678+ 966A              ;----------------------------------------------------------------------------------------------------------------
 679+ 966A              ;
 680+ 966A              ;	5/08/22
 681+ 966A              ;
 682+ 966A              ;   PreviousScan.
 683+ 966A              ;
 684+ 966A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 966A              ;
 686+ 966A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 966A              ;
 688+ 966A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 966A              ;
 690+ 966A              ;       DESTRUIDOS: AF y HL !!!
 691+ 966A              ;
 692+ 966A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 966A              ;
 694+ 966A
 695+ 966A 7C           PreviousScan ld a,h
 696+ 966B 25               dec h               ; Dec H.
 697+ 966C E6 07            and 7
 698+ 966E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 966F
 700+ 966F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9670 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9672 6F               ld l,a
 703+ 9673 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9674
 705+ 9674 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9675 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9677 67               ld h,a
 708+ 9678 C9               ret
 709+ 9679
 710+ 9679              ; -----------------------------------------------------------------------------------
 711+ 9679              ;
 712+ 9679              ;	31/7/23
 713+ 9679              ;
 714+ 9679              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9679              ;	Extrae fotos de Album_de_fotos.
 716+ 9679
 717+ 9679              Extrae_foto_entidades
 718+ 9679
 719+ 9679 21 01 70     	ld hl,Album_de_fotos+1
 720+ 967C 7E           	ld a,(hl)
 721+ 967D A7           	and a
 722+ 967E C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 967F
 724+ 967F 3A 38 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9682 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9683 C8           	ret z
 727+ 9684
 728+ 9684              ; -----------------------------------
 729+ 9684
 730+ 9684 ED 73 3D 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9688 31 00 70     	ld sp,Album_de_fotos
 732+ 968B
 733+ 968B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 968D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 968E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 968F
 737+ 968F ED 73 3F 89  	ld (Stack_2),sp
 738+ 9693 ED 7B 3D 89  	ld sp,(Stack)
 739+ 9697
 740+ 9697              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 9697
 742+ 9697 3E CD        	ld a,$cd
 743+ 9699 32 A1 96     	ld (Imprime),a
 744+ 969C EB           	ex de,hl
 745+ 969D 22 A2 96     	ld (Imprime+1),hl
 746+ 96A0 EB           	ex de,hl
 747+ 96A1
 748+ 96A1              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96A1
 750+ 96A1 00 00 00     Imprime db 0,0,0
 751+ 96A4
 752+ 96A4 ED 73 3D 89  	ld (Stack),sp
 753+ 96A8
 754+ 96A8 3A 38 89     	ld a,(Numero_de_malotes)
 755+ 96AB 3D           	dec a
 756+ 96AC 28 09        	jr z,1F
 757+ 96AE 32 38 89      	ld (Numero_de_malotes),a
 758+ 96B1
 759+ 96B1 ED 7B 3F 89  	ld sp,(Stack_2)
 760+ 96B5 18 D4        	jr 2B
 761+ 96B7
 762+ 96B7 AF           1 xor a
 763+ 96B8 32 3F 89     	ld (Stack_2),a
 764+ 96BB
 765+ 96BB C9           	ret
 766+ 96BC
 767+ 96BC              ; -----------------------------------------------------------------------------------
 768+ 96BC              ;
 769+ 96BC              ;	28/2/23
 770+ 96BC              ;
 771+ 96BC              ;	Pinta los disparos generados.
 772+ 96BC
 773+ 96BC              Extrae_foto_disparos
 774+ 96BC
 775+ 96BC 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 776+ 96BF 7E               ld a,(hl)
 777+ 96C0 A7               and a
 778+ 96C1 C8               ret z
 779+ 96C2
 780+ 96C2 3A 63 89     	ld a,(Numero_de_disparotes)
 781+ 96C5 A7           	and a
 782+ 96C6 C8           	ret z
 783+ 96C7 ED 73 3D 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96CB 31 0D 72     	ld sp,Album_de_fotos_disparos
 785+ 96CE
 786+ 96CE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96D0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96D1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96D2
 790+ 96D2 ED 73 3F 89  	ld (Stack_2),sp
 791+ 96D6 ED 7B 3D 89  	ld sp,(Stack)
 792+ 96DA
 793+ 96DA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96DA
 795+ 96DA 3E CD        	ld a,$cd
 796+ 96DC 32 E4 96     	ld (Imprime2),a
 797+ 96DF EB           	ex de,hl
 798+ 96E0 22 E5 96     	ld (Imprime2+1),hl
 799+ 96E3 EB           	ex de,hl
 800+ 96E4
 801+ 96E4              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96E4
 803+ 96E4 00 00 00     Imprime2 db 0,0,0
 804+ 96E7
 805+ 96E7 3A 63 89     	ld a,(Numero_de_disparotes)
 806+ 96EA 3D           	dec a
 807+ 96EB 28 09        	jr z,1F
 808+ 96ED 32 63 89      	ld (Numero_de_disparotes),a
 809+ 96F0
 810+ 96F0 ED 7B 3F 89  	ld sp,(Stack_2)
 811+ 96F4 18 D8        	jr 2B
 812+ 96F6
 813+ 96F6 AF           1 xor a
 814+ 96F7 32 3F 89     	ld (Stack_2),a
 815+ 96FA C9           	ret
 816+ 96FB
# file closed: Draw_XOR.asm
1503  96FB              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96FB              ;   índices de Rutinas de impresión.
   2+ 96FB
   3+ 96FB 0B 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96FD 38 97            defw Pinta_Amadeus_3x2
   5+ 96FF
   6+ 96FF 8E 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9701 2E 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9703 E2 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9705
  10+ 9705 B8 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9707 BC 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9709 70 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 970B
  14+ 970B
  15+ 970B              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 970B              ;
  17+ 970B              ;   12/12/22
  18+ 970B              ;
  19+ 970B              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 970B              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 970B              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 970B              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 970B              ;
  24+ 970B              ;   Modifica: DE y HL.
  25+ 970B
  26+ 970B ED 73 3D 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 970F FD F9        	ld sp,iy
  28+ 9711 06 10            ld b,16
  29+ 9713 D1           1 pop de
  30+ 9714 7B               ld a,e
  31+ 9715 AE               xor (hl)
  32+ 9716 77           	ld (hl),a
  33+ 9717 23           	inc hl
  34+ 9718 7A               ld a,d
  35+ 9719 AE               xor (hl)
  36+ 971A 77           	ld (hl),a
  37+ 971B 2B           	dec hl
  38+ 971C 24           	inc h
  39+ 971D 7C               ld a,h
  40+ 971E E6 07            and 7
  41+ 9720 20 0A            jr nz,2F
  42+ 9722 7D               ld a,l
  43+ 9723 C6 20            add a,$20
  44+ 9725 6F               ld l,a
  45+ 9726 38 04            jr c,2F
  46+ 9728 7C               ld a,h
  47+ 9729 D6 08            sub 8
  48+ 972B 67               ld h,a
  49+ 972C 7C           2 ld a,h
  50+ 972D FE 58            cp $58
  51+ 972F 28 02            jr z,3F
  52+ 9731 10 E0            djnz 1B
  53+ 9733 ED 7B 3D 89  3 ld sp,(Stack)
  54+ 9737 C9           	ret
  55+ 9738
  56+ 9738 ED 73 3D 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 973C FD F9        	ld sp,iy
  58+ 973E 06 08            ld b,8
  59+ 9740 D1           1 pop de
  60+ 9741 7B               ld a,e
  61+ 9742 AE               xor (hl)
  62+ 9743 77           	ld (hl),a
  63+ 9744 23           	inc hl
  64+ 9745 7A               ld a,d
  65+ 9746 AE               xor (hl)
  66+ 9747 77           	ld (hl),a
  67+ 9748 23           	inc hl
  68+ 9749 D1           	pop de
  69+ 974A 7B               ld a,e
  70+ 974B AE               xor (hl)
  71+ 974C 77           	ld (hl),a
  72+ 974D 2B           	dec hl
  73+ 974E 2B           	dec hl
  74+ 974F 24           	inc h
  75+ 9750 7C               ld a,h
  76+ 9751 E6 07            and 7
  77+ 9753 20 0A            jr nz,2F
  78+ 9755 7D               ld a,l
  79+ 9756 C6 20            add a,$20
  80+ 9758 6F               ld l,a
  81+ 9759 38 04            jr c,2F
  82+ 975B 7C               ld a,h
  83+ 975C D6 08            sub 8
  84+ 975E 67               ld h,a
  85+ 975F 7C           2 ld a,h
  86+ 9760 FE 58            cp $58
  87+ 9762 28 25            jr z,4F
  88+ 9764 7A               ld a,d
  89+ 9765 AE               xor (hl)
  90+ 9766 77               ld (hl),a
  91+ 9767 D1           	pop de
  92+ 9768 23           	inc hl
  93+ 9769 7B               ld a,e
  94+ 976A AE               xor (hl)
  95+ 976B 77           	ld (hl),a
  96+ 976C 23           	inc hl
  97+ 976D 7A               ld a,d
  98+ 976E AE               xor (hl)
  99+ 976F 77           	ld (hl),a
 100+ 9770 2B           	dec hl
 101+ 9771 2B           	dec hl
 102+ 9772 24           	inc h
 103+ 9773 7C               ld a,h
 104+ 9774 E6 07            and 7
 105+ 9776 20 0A            jr nz,3F
 106+ 9778 7D               ld a,l
 107+ 9779 C6 20            add a,$20
 108+ 977B 6F               ld l,a
 109+ 977C 38 04            jr c,3F
 110+ 977E 7C               ld a,h
 111+ 977F D6 08            sub 8
 112+ 9781 67               ld h,a
 113+ 9782 7C           3 ld a,h
 114+ 9783 FE 58            cp $58
 115+ 9785 28 02            jr z,4F
 116+ 9787 10 B7            djnz 1B
 117+ 9789 ED 7B 3D 89  4 ld sp,(Stack)
 118+ 978D C9           	ret
 119+ 978E
 120+ 978E              ; ---------------------------------------------------
 121+ 978E
 122+ 978E ED 73 3D 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9792 FD F9        	ld sp,iy
 124+ 9794
 125+ 9794              ; >>>
 126+ 9794
 127+ 9794 06 10            ld b,16
 128+ 9796 D1           1 pop de
 129+ 9797 7A           	ld a,d
 130+ 9798 AE           	xor (hl)
 131+ 9799 77           	ld (hl),a
 132+ 979A 24           	inc h
 133+ 979B 7C               ld a,h
 134+ 979C E6 07            and 7
 135+ 979E 20 0C            jr nz,2F
 136+ 97A0 7D               ld a,l
 137+ 97A1 C6 20            add a,$20
 138+ 97A3 6F               ld l,a
 139+ 97A4 38 06            jr c,2F
 140+ 97A6 7C               ld a,h
 141+ 97A7 D6 08            sub 8
 142+ 97A9 67               ld h,a
 143+ 97AA 18 00            jr 2F
 144+ 97AC 7C           2 ld a,h
 145+ 97AD FE 58            cp $58
 146+ 97AF 28 02            jr z,3F
 147+ 97B1 10 E3            djnz 1B
 148+ 97B3 ED 7B 3D 89  3 ld sp,(Stack)
 149+ 97B7 C9           	ret
 150+ 97B8
 151+ 97B8 ED 73 3D 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97BC FD F9        	ld sp,iy
 153+ 97BE
 154+ 97BE              ; >>>
 155+ 97BE
 156+ 97BE 06 10            ld b,16
 157+ 97C0 D1           1 pop de
 158+ 97C1 7B           	ld a,e
 159+ 97C2 AE           	xor (hl)
 160+ 97C3 77           	ld (hl),a
 161+ 97C4 24           	inc h
 162+ 97C5 7C               ld a,h
 163+ 97C6 E6 07            and 7
 164+ 97C8 20 0C            jr nz,2F
 165+ 97CA 7D               ld a,l
 166+ 97CB C6 20            add a,$20
 167+ 97CD 6F               ld l,a
 168+ 97CE 38 06            jr c,2F
 169+ 97D0 7C               ld a,h
 170+ 97D1 D6 08            sub 8
 171+ 97D3 67               ld h,a
 172+ 97D4 18 00            jr 2F
 173+ 97D6 7C           2 ld a,h
 174+ 97D7 FE 58            cp $58
 175+ 97D9 28 02            jr z,3F
 176+ 97DB 10 E3            djnz 1B
 177+ 97DD ED 7B 3D 89  3 ld sp,(Stack)
 178+ 97E1 C9           	ret
 179+ 97E2
 180+ 97E2              ; ---------------------------------------------------
 181+ 97E2
 182+ 97E2 ED 73 3D 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97E6 FD F9        	ld sp,iy
 184+ 97E8 06 08            ld b,8
 185+ 97EA D1           1 pop de
 186+ 97EB 7A           	ld a,d
 187+ 97EC AE           	xor (hl)
 188+ 97ED 77           	ld (hl),a
 189+ 97EE 23           	inc hl
 190+ 97EF D1           	pop de
 191+ 97F0 7B           	ld a,e
 192+ 97F1 AE           	xor (hl)
 193+ 97F2 77           	ld (hl),a
 194+ 97F3 2B           	dec hl
 195+ 97F4 24            	inc h
 196+ 97F5 7C               ld a,h
 197+ 97F6 E6 07            and 7
 198+ 97F8 20 0A            jr nz,2F
 199+ 97FA 7D               ld a,l
 200+ 97FB C6 20            add a,$20
 201+ 97FD 6F               ld l,a
 202+ 97FE 38 04            jr c,2F
 203+ 9800 7C               ld a,h
 204+ 9801 D6 08            sub 8
 205+ 9803 67               ld h,a
 206+ 9804 7C           2 ld a,h
 207+ 9805 FE 58            cp $58
 208+ 9807 28 20            jr z,4F
 209+ 9809 D1               pop de
 210+ 980A 7B           	ld a,e
 211+ 980B AE           	xor (hl)
 212+ 980C 77           	ld (hl),a
 213+ 980D 23           	inc hl
 214+ 980E 7A           	ld a,d
 215+ 980F AE           	xor (hl)
 216+ 9810 77           	ld (hl),a
 217+ 9811 2B           	dec hl
 218+ 9812 24           	inc h
 219+ 9813 7C               ld a,h
 220+ 9814 E6 07            and 7
 221+ 9816 20 0A            jr nz,3F
 222+ 9818 7D               ld a,l
 223+ 9819 C6 20            add a,$20
 224+ 981B 6F               ld l,a
 225+ 981C 38 04            jr c,3F
 226+ 981E 7C               ld a,h
 227+ 981F D6 08            sub 8
 228+ 9821 67               ld h,a
 229+ 9822 7C           3 ld a,h
 230+ 9823 FE 58            cp $58
 231+ 9825 28 02            jr z,4F
 232+ 9827 10 C1            djnz 1B
 233+ 9829 ED 7B 3D 89  4 ld sp,(Stack)
 234+ 982D C9           	ret
 235+ 982E
 236+ 982E ED 73 3D 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9832 FD F9        	ld sp,iy
 238+ 9834 06 08            ld b,8
 239+ 9836 D1           1 pop de
 240+ 9837 D1           	pop de
 241+ 9838 7B           	ld a,e
 242+ 9839 AE           	xor (hl)
 243+ 983A 77           	ld (hl),a
 244+ 983B 24            	inc h
 245+ 983C 7C               ld a,h
 246+ 983D E6 07            and 7
 247+ 983F 20 0A            jr nz,2F
 248+ 9841 7D               ld a,l
 249+ 9842 C6 20            add a,$20
 250+ 9844 6F               ld l,a
 251+ 9845 38 04            jr c,2F
 252+ 9847 7C               ld a,h
 253+ 9848 D6 08            sub 8
 254+ 984A 67               ld h,a
 255+ 984B 7C           2 ld a,h
 256+ 984C FE 58            cp $58
 257+ 984E 28 1B            jr z,4F
 258+ 9850 D1               pop de
 259+ 9851 7A           	ld a,d
 260+ 9852 AE           	xor (hl)
 261+ 9853 77           	ld (hl),a
 262+ 9854 24           	inc h
 263+ 9855 7C               ld a,h
 264+ 9856 E6 07            and 7
 265+ 9858 20 0A            jr nz,3F
 266+ 985A 7D               ld a,l
 267+ 985B C6 20            add a,$20
 268+ 985D 6F               ld l,a
 269+ 985E 38 04            jr c,3F
 270+ 9860 7C               ld a,h
 271+ 9861 D6 08            sub 8
 272+ 9863 67               ld h,a
 273+ 9864 7C           3 ld a,h
 274+ 9865 FE 58            cp $58
 275+ 9867 28 02            jr z,4F
 276+ 9869 10 CB            djnz 1B
 277+ 986B ED 7B 3D 89  4 ld sp,(Stack)
 278+ 986F C9           	ret
 279+ 9870
 280+ 9870 ED 73 3D 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9874 FD F9        	ld sp,iy
 282+ 9876 06 08            ld b,8
 283+ 9878 D1           1 pop de
 284+ 9879 7B           	ld a,e
 285+ 987A AE           	xor (hl)
 286+ 987B 77           	ld (hl),a
 287+ 987C 23           	inc hl
 288+ 987D 7A           	ld a,d
 289+ 987E AE           	xor (hl)
 290+ 987F 77           	ld (hl),a
 291+ 9880 2B           	dec hl
 292+ 9881 24             	inc h
 293+ 9882 7C               ld a,h
 294+ 9883 E6 07            and 7
 295+ 9885 20 0A            jr nz,2F
 296+ 9887 7D               ld a,l
 297+ 9888 C6 20            add a,$20
 298+ 988A 6F               ld l,a
 299+ 988B 38 04            jr c,2F
 300+ 988D 7C               ld a,h
 301+ 988E D6 08            sub 8
 302+ 9890 67               ld h,a
 303+ 9891 7C           2 ld a,h
 304+ 9892 FE 58            cp $58
 305+ 9894 28 21            jr z,4F
 306+ 9896 D1               pop de
 307+ 9897 7A           	ld a,d
 308+ 9898 AE           	xor (hl)
 309+ 9899 77           	ld (hl),a
 310+ 989A 23           	inc hl
 311+ 989B D1               pop de
 312+ 989C 7B           	ld a,e
 313+ 989D AE           	xor (hl)
 314+ 989E 77           	ld (hl),a
 315+ 989F 2B           	dec hl
 316+ 98A0 24           	inc h
 317+ 98A1 7C               ld a,h
 318+ 98A2 E6 07            and 7
 319+ 98A4 20 0A            jr nz,3F
 320+ 98A6 7D               ld a,l
 321+ 98A7 C6 20            add a,$20
 322+ 98A9 6F               ld l,a
 323+ 98AA 38 04            jr c,3F
 324+ 98AC 7C               ld a,h
 325+ 98AD D6 08            sub 8
 326+ 98AF 67               ld h,a
 327+ 98B0 7C           3 ld a,h
 328+ 98B1 FE 58            cp $58
 329+ 98B3 28 02            jr z,4F
 330+ 98B5 10 C1            djnz 1B
 331+ 98B7 ED 7B 3D 89  4 ld sp,(Stack)
 332+ 98BB C9           	ret
 333+ 98BC
 334+ 98BC ED 73 3D 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98C0 FD F9        	ld sp,iy
 336+ 98C2 06 08            ld b,8
 337+ 98C4 D1           1 pop de
 338+ 98C5 7B           	ld a,e
 339+ 98C6 AE           	xor (hl)
 340+ 98C7 77           	ld (hl),a
 341+ 98C8 24            	inc h
 342+ 98C9 7C               ld a,h
 343+ 98CA E6 07            and 7
 344+ 98CC 20 0A            jr nz,2F
 345+ 98CE 7D               ld a,l
 346+ 98CF C6 20            add a,$20
 347+ 98D1 6F               ld l,a
 348+ 98D2 38 04            jr c,2F
 349+ 98D4 7C               ld a,h
 350+ 98D5 D6 08            sub 8
 351+ 98D7 67               ld h,a
 352+ 98D8 7C           2 ld a,h
 353+ 98D9 FE 58            cp $58
 354+ 98DB 28 1C            jr z,4F
 355+ 98DD D1               pop de
 356+ 98DE 7A           	ld a,d
 357+ 98DF AE           	xor (hl)
 358+ 98E0 77           	ld (hl),a
 359+ 98E1 24           	inc h
 360+ 98E2 7C               ld a,h
 361+ 98E3 E6 07            and 7
 362+ 98E5 20 0A            jr nz,3F
 363+ 98E7 7D               ld a,l
 364+ 98E8 C6 20            add a,$20
 365+ 98EA 6F               ld l,a
 366+ 98EB 38 04            jr c,3F
 367+ 98ED 7C               ld a,h
 368+ 98EE D6 08            sub 8
 369+ 98F0 67               ld h,a
 370+ 98F1 7C           3 ld a,h
 371+ 98F2 FE 58            cp $58
 372+ 98F4 28 03            jr z,4F
 373+ 98F6 D1               pop de
 374+ 98F7 10 CB            djnz 1B
 375+ 98F9 ED 7B 3D 89  4 ld sp,(Stack)
 376+ 98FD C9           	ret
 377+ 98FE
 378+ 98FE              ; ---------------------------------------------------
 379+ 98FE              ;
 380+ 98FE              ;   27/02/23
 381+ 98FE              ;
 382+ 98FE              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98FE              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98FE              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98FE
 386+ 98FE ED 73 3D 89  Pinta_Disparo ld (Stack),sp
 387+ 9902 FD F9            ld sp,iy
 388+ 9904 06 03            ld b,3
 389+ 9906 D1           1 pop de
 390+ 9907 7B               ld a,e
 391+ 9908 AE               xor (hl)
 392+ 9909 77               ld (hl),a
 393+ 990A 23               inc hl
 394+ 990B 7A               ld a,d
 395+ 990C AE               xor (hl)
 396+ 990D 77               ld (hl),a
 397+ 990E 2B               dec hl
 398+ 990F
 399+ 990F 24               inc h
 400+ 9910 7C               ld a,h
 401+ 9911 E6 07            and 7
 402+ 9913 20 0A            jr nz,2F
 403+ 9915 7D               ld a,l
 404+ 9916 C6 20            add a,$20
 405+ 9918 6F               ld l,a
 406+ 9919 38 04            jr c,2F
 407+ 991B 7C               ld a,h
 408+ 991C D6 08            sub 8
 409+ 991E 67               ld h,a
 410+ 991F 7C           2 ld a,h
 411+ 9920 FE 58            cp $58
 412+ 9922 28 02            jr z,3F
 413+ 9924
 414+ 9924 10 E0            djnz 1B
 415+ 9926 ED 7B 3D 89  3 ld sp,(Stack)
 416+ 992A C9               ret
 417+ 992B
# file closed: Rutinas_de_impresion_sprites.asm
1504  992B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 992B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 992B              ;
   3+ 992B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 992B              ;
   5+ 992B              ; *****************************************************************************************************************************************************************************************
   6+ 992B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 992B
   8+ 992B 7C           calcula_tercio ld a,h
   9+ 992C E6 18        	and $18
  10+ 992E CB 2F        	sra a
  11+ 9930 CB 2F        	sra a
  12+ 9932 CB 2F        	sra a
  13+ 9934 C9           	ret
  14+ 9935
# file closed: calcula_tercio.asm
1505  9935              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9935              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9935              ;
   3+ 9935              ;
   4+ 9935              ;	CLS.
   5+ 9935              ;
   6+ 9935              ;	Limpia la pantalla y define sus atributos.
   7+ 9935              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9935              ;
   9+ 9935              ;	COLORES: 0 ..... NEGRO
  10+ 9935              ;    		 1 ..... AZUL
  11+ 9935              ; 			 2 ..... ROJO
  12+ 9935              ;			 3 ..... MAGENTA
  13+ 9935              ; 			 4 ..... VERDE
  14+ 9935              ; 			 5 ..... CIAN
  15+ 9935              ;			 6 ..... AMARILLO
  16+ 9935              ; 			 7 ..... BLANCO
  17+ 9935              ;
  18+ 9935              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9935              ;
  20+ 9935              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9935
  22+ 9935
  23+ 9935 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9938 11 01 40     	LD DE,$4001
  25+ 993B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 993E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9940 ED B0        	LDIR
  28+ 9942 01 FF 02     	LD BC,767
  29+ 9945 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9946 ED B0        	LDIR
  31+ 9948 C9           	ret
  32+ 9949
# file closed: Cls.asm
1506  9949              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9949              ; ******************************************************************************************************************************************************************************************
   2+ 9949              ;
   3+ 9949              ;   20/05/23
   4+ 9949              ;
   5+ 9949              ;	Recompone_posicion_inicio
   6+ 9949              ;
   7+ 9949              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9949              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9949              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9949              ;	_ a una u otra rutina.
  11+ 9949
  12+ 9949              Recompone_posicion_inicio
  13+ 9949
  14+ 9949 2A FB 88     	ld hl,(Posicion_inicio)
  15+ 994C 7D           	ld a,l
  16+ 994D E6 1F        	and $1f
  17+ 994F 28 16        	jr z,1F
  18+ 9951
  19+ 9951 FE 1F        	cp $1f
  20+ 9953 28 0D        	jr z,3F
  21+ 9955
  22+ 9955 21 2A 89     	ld hl,Ctrl_2
  23+ 9958 CB C6        	set 0,(hl)
  24+ 995A 2A ED 88     	ld hl,(Puntero_objeto)
  25+ 995D 22 2D 89     	ld (Repone_puntero_objeto),hl
  26+ 9960 18 08        	jr 2F
  27+ 9962
  28+ 9962 CD 03 9B     3 call Mov_left
  29+ 9965 18 03        	jr 2F
  30+ 9967
  31+ 9967 CD E5 99     1 call Mov_right
  32+ 996A 21 00 F0     2 ld hl,Sprite_vacio
  33+ 996D 22 ED 88     	ld (Puntero_objeto),hl
  34+ 9970 C9           	ret
  35+ 9971
  36+ 9971              ; ******************************************************************************************************************************************************************************************
  37+ 9971              ;
  38+ 9971              ;   27/05/23
  39+ 9971              ;
  40+ 9971              ;	Mov_down
  41+ 9971              ;
  42+ 9971              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9971              ;
  44+ 9971              ;
  45+ 9971              Mov_down
  46+ 9971
  47+ 9971 CD D3 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9974              ;																	; _ repone (Puntero_objeto).
  49+ 9974 21 17 89     	ld hl,Ctrl_0
  50+ 9977 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9979              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9979              ; 																	; _ en el caso de que no lo haya.
  53+ 9979 3A 01 89     	ld a,(Vel_down)
  54+ 997C 47           	ld b,a
  55+ 997D 2A EB 88         ld hl,(Posicion_actual)
  56+ 9980 CD 2B 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9983 E6 02        	and 2
  58+ 9985 28 0F        	jr z,1F
  59+ 9987
  60+ 9987              ; Nos encontramos en el último tercio de pantalla.
  61+ 9987              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9987
  63+ 9987 7C           	ld a,h
  64+ 9988 FE 57        	cp $57
  65+ 998A 20 0A        	jr nz,1F
  66+ 998C
  67+ 998C 7D           	ld a,l
  68+ 998D C6 20        	add $20
  69+ 998F 30 05        	jr nc,1F
  70+ 9991
  71+ 9991              ; ------------------------------
  72+ 9991              ;	call Reaparece_arriba
  73+ 9991 CD 90 9C     	call Reinicio
  74+ 9994              ; ------------------------------
  75+ 9994
  76+ 9994 18 08        	jr 3F
  77+ 9996 CD 5B 96     1 call NextScan
  78+ 9999 22 EB 88     	ld (Posicion_actual),hl
  79+ 999C 10 E2            djnz 2B
  80+ 999E CD B6 9C     3 call Genera_coordenadas
  81+ 99A1 C9           	ret
  82+ 99A2
  83+ 99A2              ; ******************************************************************************************************************************************************************************************
  84+ 99A2              ;
  85+ 99A2              ;   27/05/23
  86+ 99A2              ;
  87+ 99A2              ;	Mov_up
  88+ 99A2              ;
  89+ 99A2              ; 	Mueve el Sprite hacia arriba.
  90+ 99A2              ;
  91+ 99A2              ;
  92+ 99A2              Mov_up
  93+ 99A2
  94+ 99A2 CD D3 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99A5              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99A5 21 17 89     	ld hl,Ctrl_0
  97+ 99A8 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99AA              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99AA              ; 																		; _ en el caso de que no lo haya.
 100+ 99AA 3A 00 89     	ld a,(Vel_up)
 101+ 99AD 47           	ld b,a
 102+ 99AE 2A EB 88     	ld hl,(Posicion_actual)
 103+ 99B1 CD 2B 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99B4 A7           	and a
 105+ 99B5 20 10        	jr nz,1F
 106+ 99B7
 107+ 99B7              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99B7              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99B7
 110+ 99B7 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99B8 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99BA 20 0B            jr nz,1F
 113+ 99BC 7D               ld a,l
 114+ 99BD D6 20            sub $20
 115+ 99BF 30 06            jr nc,1F
 116+ 99C1 25               dec h
 117+ 99C2
 118+ 99C2              ; -----------------------------
 119+ 99C2 CD 71 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99C5              ;	call Reinicio
 121+ 99C5              ; -----------------------------
 122+ 99C5
 123+ 99C5 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99C7 CD 6A 96     1 call PreviousScan
 125+ 99CA 22 EB 88     	ld (Posicion_actual),hl
 126+ 99CD 10 E2            djnz 3B
 127+ 99CF CD B6 9C     2 call Genera_coordenadas
 128+ 99D2 C9           	ret
 129+ 99D3
 130+ 99D3              ; -----------------------------
 131+ 99D3              ;
 132+ 99D3              ;	27/5/23
 133+ 99D3              ;
 134+ 99D3              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99D3              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99D3              ;
 137+ 99D3              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99D3              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99D3              ;
 140+ 99D3              ;	Modifica: A y (Puntero_objeto).
 141+ 99D3
 142+ 99D3 3A 2A 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99D6 CB 47        	bit 0,a
 144+ 99D8 C8           	ret z
 145+ 99D9 CB 87        	res 0,a
 146+ 99DB 32 2A 89     	ld (Ctrl_2),a
 147+ 99DE 2A 2D 89     	ld hl,(Repone_puntero_objeto)
 148+ 99E1 22 ED 88     	ld (Puntero_objeto),hl
 149+ 99E4 C9           	ret
 150+ 99E5
 151+ 99E5              ; ******************************************************************************************************************************************************************************************
 152+ 99E5              ;
 153+ 99E5              ;	19/10/22
 154+ 99E5              ;
 155+ 99E5              ;	Mov_right.
 156+ 99E5              ;
 157+ 99E5              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99E5              ;
 159+ 99E5
 160+ 99E5 21 17 89     Mov_right ld hl,Ctrl_0
 161+ 99E8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99EA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99EA              ; 																	; _ en el caso de que no lo haya.
 164+ 99EA 3A 17 89     	ld a,(Ctrl_0)
 165+ 99ED CB 77        	bit 6,a
 166+ 99EF 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99F1
 168+ 99F1 CD 1F 9C     	call Stop_Amadeus_right
 169+ 99F4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99F5 18 4D        	jr 8F
 171+ 99F7
 172+ 99F7 3A EF 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99FA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99FC 20 46        	jr nz,8F
 175+ 99FE
 176+ 99FE 3A F1 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A01 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A02 28 40        	jr z,8F
 179+ 9A04
 180+ 9A04              ; ---------- ---------- ----------
 181+ 9A04              ;
 182+ 9A04              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A04
 184+ 9A04 3A FF 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A07 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A09 28 11        	jr z,1F
 187+ 9A0B 38 06        	jr c,6F
 188+ 9A0D FE 04        	cp 4
 189+ 9A0F 28 14        	jr z,7F
 190+ 9A11 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A13
 192+ 9A13              ; ---------- ---------- ----------
 193+ 9A13              ;
 194+ 9A13              ; Perfiles de velocidad
 195+ 9A13              ;
 196+ 9A13
 197+ 9A13 3A F1 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A16 FE FE        	cp $fe
 199+ 9A18 20 2A        	jr nz,8F
 200+ 9A1A 18 10        	jr 3F
 201+ 9A1C 3A F1 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A1F FE FD        	cp $fd
 203+ 9A21 20 21        	jr nz,8F
 204+ 9A23 18 07        	jr 3F
 205+ 9A25 3A F1 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A28 FE FB        	cp $fb
 207+ 9A2A 20 18        	jr nz,8F
 208+ 9A2C
 209+ 9A2C              ; ---------- ---------- ----------
 210+ 9A2C
 211+ 9A2C              3
 212+ 9A2C CD 5F 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A2F              ;	call Reinicio
 214+ 9A2F
 215+ 9A2F              ; ---------- ---------- ----------
 216+ 9A2F              ;
 217+ 9A2F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A2F
 219+ 9A2F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A31 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A32 CD 4B 9A     	call DESPLZ_DER
 222+ 9A35 C1           	pop bc
 223+ 9A36 10 F9        	djnz 5B
 224+ 9A38 2A EB 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A3B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A3C 22 EB 88     	ld (Posicion_actual),hl
 227+ 9A3F CD B6 9C     	call Genera_coordenadas
 228+ 9A42 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A44
 230+ 9A44              ; ---------- ---------- ----------
 231+ 9A44
 232+ 9A44 2A EB 88     8 ld hl,(Posicion_actual)
 233+ 9A47 CD 4B 9A     	call DESPLZ_DER
 234+ 9A4A C9           2 ret
 235+ 9A4B
 236+ 9A4B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A4B              ;
 238+ 9A4B              ;	22/9/22
 239+ 9A4B              ;
 240+ 9A4B
 241+ 9A4B CD 5A 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A4E CD A6 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A51 CD CF 9A         call Ciclo_completo
 244+ 9A54 21 17 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A57 CB FE        	set 7,(hl)
 246+ 9A59 C9           	ret
 247+ 9A5A
 248+ 9A5A              ; ******************************************************************************************************************************************************************************************
 249+ 9A5A              ;	15/02/23
 250+ 9A5A              ;
 251+ 9A5A
 252+ 9A5A 3A FF 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A5D 47           	ld b,a
 254+ 9A5E 2A F7 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A61 23           1 inc hl
 256+ 9A62 23           	inc hl
 257+ 9A63 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A65 22 F7 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A68 CD C0 8C     	call Extrae_address
 260+ 9A6B 22 ED 88     	ld (Puntero_objeto),hl
 261+ 9A6E
 262+ 9A6E              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A6E
 264+ 9A6E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A6E              ; Cuántos movimientos hemos hecho ??
 266+ 9A6E              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A6E
 268+ 9A6E 2A F3 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A71 EB           	ex de,hl
 270+ 9A72 A7           	and a
 271+ 9A73 ED 52        	sbc hl,de
 272+ 9A75 CB 3D        	srl l
 273+ 9A77 3E 08        6 ld a,8
 274+ 9A79 95           	sub l
 275+ 9A7A 30 1E        	jr nc,3F
 276+ 9A7C
 277+ 9A7C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A7C              ; B="0".
 279+ 9A7C
 280+ 9A7C 04           4 inc b
 281+ 9A7D 3C           	inc a
 282+ 9A7E 20 FC        	jr nz,4B
 283+ 9A80 78           	ld a,b
 284+ 9A81 08           	ex af,af
 285+ 9A82 2A F3 88     	ld hl,(Indice_Sprite_der)
 286+ 9A85 23           5 inc hl
 287+ 9A86 23           	inc hl
 288+ 9A87 10 FC        	djnz 5B
 289+ 9A89 22 F7 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A8C CD C0 8C     	call Extrae_address
 291+ 9A8F 22 ED 88     	ld (Puntero_objeto),hl
 292+ 9A92
 293+ 9A92              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A92              ; _(Posicion_actual).
 295+ 9A92
 296+ 9A92 21 EB 88     	ld hl,Posicion_actual
 297+ 9A95 34           	inc (hl)
 298+ 9A96 08               ex af,af
 299+ 9A97 6F           	ld l,a
 300+ 9A98 18 DD        	jr 6B
 301+ 9A9A
 302+ 9A9A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A9A
 304+ 9A9A 47           3 ld b,a
 305+ 9A9B 2A F5 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A9E 23           2 inc hl
 307+ 9A9F 23           	inc hl
 308+ 9AA0 10 FC        	djnz 2B
 309+ 9AA2 22 F9 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AA5 C9           8 ret
 311+ 9AA6
 312+ 9AA6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AA6              ;
 314+ 9AA6              ;	24/7/22
 315+ 9AA6              ;
 316+ 9AA6              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AA6              ;
 318+ 9AA6              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AA6              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AA6              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AA6
 322+ 9AA6 3A F1 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AA9 A7           	and a
 324+ 9AAA 20 1F        	jr nz,1F
 325+ 9AAC D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AAE 32 F1 88         ld (CTRL_DESPLZ),a
 327+ 9AB1
 328+ 9AB1 21 EA 88     	ld hl,Columns
 329+ 9AB4 34           	inc (hl)
 330+ 9AB5 3A FD 88     	ld a,(Cuad_objeto)
 331+ 9AB8 E6 01        	and 1
 332+ 9ABA 28 0F        	jr z,1F
 333+ 9ABC 2A EB 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9ABF 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AC0 22 EB 88     	ld (Posicion_actual),hl
 336+ 9AC3 CD B6 9C     	call Genera_coordenadas
 337+ 9AC6 CD 2B 9C     	call Inc_CTRL_DESPLZ
 338+ 9AC9 18 03        	jr 2F
 339+ 9ACB CD 2B 9C     1 call Inc_CTRL_DESPLZ
 340+ 9ACE C9           2 ret
 341+ 9ACF
 342+ 9ACF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9ACF              ;
 344+ 9ACF              ;	24/7/22
 345+ 9ACF              ;
 346+ 9ACF              ;	Ciclo_completo.
 347+ 9ACF              ;
 348+ 9ACF              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9ACF              ;
 350+ 9ACF              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9ACF              ; 	Decrementamos (Columns).
 352+ 9ACF              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9ACF              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9ACF
 355+ 9ACF
 356+ 9ACF 3A F1 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AD2 FE FF        	cp $ff
 358+ 9AD4 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AD6 E6 F0        	and $f0
 360+ 9AD8 20 28        	jr nz,3F
 361+ 9ADA
 362+ 9ADA              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9ADA
 364+ 9ADA 3A F1 88     	ld a,(CTRL_DESPLZ)
 365+ 9ADD 47           	ld b,a
 366+ 9ADE 3E F8        	ld a,$f8
 367+ 9AE0 80           	add b
 368+ 9AE1 32 F1 88     	ld (CTRL_DESPLZ),a
 369+ 9AE4 18 1C        	jr 3F
 370+ 9AE6 21 EA 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AE9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AEA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AEB 32 F1 88     	ld (CTRL_DESPLZ),a
 374+ 9AEE 3A FD 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AF1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AF3 20 0A        	jr nz,2F
 377+ 9AF5 2A EB 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AF8 23           	inc hl
 379+ 9AF9 22 EB 88     	ld (Posicion_actual),hl
 380+ 9AFC CD B6 9C     	call Genera_coordenadas
 381+ 9AFF
 382+ 9AFF              ; Inicia el puntero de Sprite.
 383+ 9AFF
 384+ 9AFF CD D7 8C     2 call Inicia_puntero_objeto_der
 385+ 9B02 C9           3 ret
 386+ 9B03
 387+ 9B03              ; ******************************************************************************************************************************************************************************************
 388+ 9B03              ;
 389+ 9B03              ;	15/02/23
 390+ 9B03              ;
 391+ 9B03              ;	Mov_left.
 392+ 9B03              ;
 393+ 9B03              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B03              ;
 395+ 9B03 21 17 89     Mov_left ld hl,Ctrl_0
 396+ 9B06 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B08              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B08              ; 																	; _ en el caso de que no lo haya.
 399+ 9B08 3A 17 89     	ld a,(Ctrl_0)
 400+ 9B0B CB 77        	bit 6,a
 401+ 9B0D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B0F
 403+ 9B0F CD 25 9C     	call Stop_Amadeus_left
 404+ 9B12 C8           	ret z
 405+ 9B13 20 4A        	jr nz,8F
 406+ 9B15
 407+ 9B15 3A EF 88     11 ld a,(Coordenada_X)
 408+ 9B18 A7           	and a
 409+ 9B19 20 44        	jr nz,8F
 410+ 9B1B
 411+ 9B1B 3A F1 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B1E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B1F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B21
 415+ 9B21              ; ---------- ---------- ----------
 416+ 9B21
 417+ 9B21 3A FE 88     	ld a,(Vel_left)
 418+ 9B24 FE 02        	cp 2
 419+ 9B26 28 0F        	jr z,1F
 420+ 9B28 38 04        	jr c,6F
 421+ 9B2A FE 04        	cp 4
 422+ 9B2C 28 12        	jr z,7F
 423+ 9B2E
 424+ 9B2E              ; ---------- ---------- ----------
 425+ 9B2E
 426+ 9B2E 3A F1 88     6 ld a,(CTRL_DESPLZ)
 427+ 9B31 FE F8        	cp $f8
 428+ 9B33 20 2A        	jr nz,8F
 429+ 9B35 18 10        	jr 4F
 430+ 9B37 3A F1 88     1 ld a,(CTRL_DESPLZ)
 431+ 9B3A FE F9        	cp $f9
 432+ 9B3C 20 21        	jr nz,8F
 433+ 9B3E 18 07        	jr 4F
 434+ 9B40 3A F1 88     7 ld a,(CTRL_DESPLZ)
 435+ 9B43 FE FB        	cp $fb
 436+ 9B45 20 18        	jr nz,8F
 437+ 9B47
 438+ 9B47              ; ---------- ---------- ----------
 439+ 9B47
 440+ 9B47              4
 441+ 9B47 CD 4D 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B4A              ;	call Reinicio
 443+ 9B4A
 444+ 9B4A              ; ---------- ---------- ----------
 445+ 9B4A
 446+ 9B4A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B4C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B4D
 449+ 9B4D              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B4D              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B4D
 452+ 9B4D CD 66 9B     	call DESPLZ_IZQ
 453+ 9B50 C1           	pop bc
 454+ 9B51 10 F9        	djnz 5B
 455+ 9B53 2A EB 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B56 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B57 22 EB 88     	ld (Posicion_actual),hl
 458+ 9B5A CD B6 9C     	call Genera_coordenadas
 459+ 9B5D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B5F
 461+ 9B5F              ; ---------- ---------- ----------
 462+ 9B5F
 463+ 9B5F              ; Movemos, no hay recolocación.
 464+ 9B5F
 465+ 9B5F 2A EB 88     8 ld hl,(Posicion_actual)
 466+ 9B62 CD 66 9B     	call DESPLZ_IZQ
 467+ 9B65 C9           2 ret
 468+ 9B66
 469+ 9B66              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B66              ;
 471+ 9B66              ;	22/9/22
 472+ 9B66
 473+ 9B66              DESPLZ_IZQ
 474+ 9B66
 475+ 9B66 CD 75 9B     	call Desplaza_izquierda
 476+ 9B69 CD C1 9B         call modifica_parametros_1er_DESPLZ
 477+ 9B6C CD E9 9B     	call Ciclo_completo_2
 478+ 9B6F 21 17 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9B72 CB BE        	res 7,(hl)
 480+ 9B74 C9           	ret
 481+ 9B75
 482+ 9B75              Desplaza_izquierda
 483+ 9B75
 484+ 9B75 3A FE 88     	ld a,(Vel_left)
 485+ 9B78 47           	ld b,a
 486+ 9B79 2A F9 88     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9B7C 23           1 inc hl
 488+ 9B7D 23           	inc hl
 489+ 9B7E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9B80 22 F9 88     	ld (Puntero_DESPLZ_izq),hl
 491+ 9B83 CD C0 8C     	call Extrae_address
 492+ 9B86 22 ED 88     	ld (Puntero_objeto),hl
 493+ 9B89
 494+ 9B89              ; Modifica (Puntero_DESPLZ_der).
 495+ 9B89
 496+ 9B89              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9B89              ; Cuántos movimientos hemos hecho ??
 498+ 9B89              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9B89
 500+ 9B89 2A F5 88     7 ld hl,(Indice_Sprite_izq)
 501+ 9B8C EB           	ex de,hl
 502+ 9B8D A7           	and a
 503+ 9B8E ED 52        	sbc hl,de
 504+ 9B90 CB 3D        	srl l
 505+ 9B92 3E 08        6 ld a,8
 506+ 9B94 95           	sub l
 507+ 9B95 30 1E        	jr nc,3F
 508+ 9B97
 509+ 9B97              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9B97              ; B="0".
 511+ 9B97
 512+ 9B97 04           4 inc b
 513+ 9B98 3C           	inc a
 514+ 9B99 20 FC        	jr nz,4B
 515+ 9B9B 78           	ld a,b
 516+ 9B9C 08           	ex af,af
 517+ 9B9D 2A F5 88     	ld hl,(Indice_Sprite_izq)
 518+ 9BA0 23           5 inc hl
 519+ 9BA1 23           	inc hl
 520+ 9BA2 10 FC        	djnz 5B
 521+ 9BA4 22 F9 88     	ld (Puntero_DESPLZ_izq),hl
 522+ 9BA7 CD C0 8C     	call Extrae_address
 523+ 9BAA 22 ED 88     	ld (Puntero_objeto),hl
 524+ 9BAD
 525+ 9BAD              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9BAD              ; _(Posicion_actual).
 527+ 9BAD
 528+ 9BAD 21 EB 88     	ld hl,Posicion_actual
 529+ 9BB0 35           	dec (hl)
 530+ 9BB1 08           	ex af,af
 531+ 9BB2 6F           	ld l,a
 532+ 9BB3 18 DD        	jr 6B
 533+ 9BB5
 534+ 9BB5              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9BB5
 536+ 9BB5 47           3 ld b,a
 537+ 9BB6 2A F3 88     	ld hl,(Indice_Sprite_der)
 538+ 9BB9 23           2 inc hl
 539+ 9BBA 23           	inc hl
 540+ 9BBB 10 FC        	djnz 2B
 541+ 9BBD 22 F7 88     	ld (Puntero_DESPLZ_der),hl
 542+ 9BC0 C9           8 ret
 543+ 9BC1
 544+ 9BC1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9BC1              ;
 546+ 9BC1              ;	modifica_parametros_1er_DESPLZ
 547+ 9BC1              ;
 548+ 9BC1              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9BC1              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9BC1              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9BC1
 552+ 9BC1 3A F1 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9BC4 A7           	and a
 554+ 9BC5 20 1E        	jr nz,1F
 555+ 9BC7 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9BC8 32 F1 88         ld (CTRL_DESPLZ),a
 557+ 9BCB 21 EA 88     	ld hl,Columns
 558+ 9BCE 34           	inc (hl)
 559+ 9BCF 3A FD 88     	ld a,(Cuad_objeto)
 560+ 9BD2 E6 01        	and 1
 561+ 9BD4 20 0F        	jr nz,1F
 562+ 9BD6 2A EB 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9BD9 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9BDA 22 EB 88     	ld (Posicion_actual),hl
 565+ 9BDD CD B6 9C     	call Genera_coordenadas
 566+ 9BE0 CD 3C 9C     	call Dec_CTRL_DESPLZ
 567+ 9BE3 18 03        	jr 2F
 568+ 9BE5 CD 3C 9C     1 call Dec_CTRL_DESPLZ
 569+ 9BE8 C9           2 ret
 570+ 9BE9
 571+ 9BE9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9BE9
 573+ 9BE9 3A F1 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9BEC FE F7        	cp $f7
 575+ 9BEE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9BF0 30 2C        	jr nc,3F
 577+ 9BF2
 578+ 9BF2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9BF2
 580+ 9BF2 06 00        	ld b,0
 581+ 9BF4 04           4 inc b
 582+ 9BF5 3C           	inc a
 583+ 9BF6 FE F7        	cp $f7
 584+ 9BF8 20 FA        	jr nz,4B
 585+ 9BFA 3E FF        	ld a,$ff
 586+ 9BFC 90           	sub b
 587+ 9BFD 32 F1 88     	ld (CTRL_DESPLZ),a
 588+ 9C00 18 1C        	jr 3F
 589+ 9C02
 590+ 9C02              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C02
 592+ 9C02 21 EA 88     1 ld hl,Columns
 593+ 9C05 35           	dec (hl)
 594+ 9C06 AF           	xor a
 595+ 9C07 32 F1 88     	ld (CTRL_DESPLZ),a
 596+ 9C0A 3A FD 88     	ld a,(Cuad_objeto)
 597+ 9C0D E6 01        	and 1
 598+ 9C0F 28 0A        	jr z,2F
 599+ 9C11 2A EB 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C14 2B           	dec hl
 601+ 9C15 22 EB 88     	ld (Posicion_actual),hl
 602+ 9C18 CD B6 9C     	call Genera_coordenadas
 603+ 9C1B
 604+ 9C1B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C1B
 606+ 9C1B CD EA 8C     2 call Inicia_puntero_objeto_izq
 607+ 9C1E C9           3 ret
 608+ 9C1F
 609+ 9C1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C1F              ;
 611+ 9C1F              ;	19/10/22
 612+ 9C1F              ;
 613+ 9C1F              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C1F              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C1F
 616+ 9C1F 3A EF 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C22 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C24 C9           	ret
 619+ 9C25
 620+ 9C25              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C25              ;
 622+ 9C25              ;	19/10/22
 623+ 9C25              ;
 624+ 9C25              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C25              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C25
 627+ 9C25 3A EF 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C28 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C2A C9           	ret
 630+ 9C2B
 631+ 9C2B              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C2B              ;
 633+ 9C2B              ;	24/7/22
 634+ 9C2B              ;
 635+ 9C2B              ;	Inc_CTRL_DESPLZ
 636+ 9C2B              ;
 637+ 9C2B              ;
 638+ 9C2B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C2B
 640+ 9C2B 21 F1 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C2E 3A FF 88     	ld a,(Vel_right)
 642+ 9C31 A7           	and a
 643+ 9C32 28 06        	jr z,1F
 644+ 9C34 47           	ld b,a
 645+ 9C35 34           3 inc (hl)
 646+ 9C36 10 FD        	djnz 3B
 647+ 9C38 18 01        	jr 2F
 648+ 9C3A 34           1 inc (hl)
 649+ 9C3B C9           2 ret
 650+ 9C3C
 651+ 9C3C              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C3C              ;
 653+ 9C3C              ;	5/2/23
 654+ 9C3C              ;
 655+ 9C3C              ;	Dec_CTRL_DESPLZ
 656+ 9C3C              ;
 657+ 9C3C              ;
 658+ 9C3C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C3C
 660+ 9C3C 21 F1 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9C3F 3A FE 88     	ld a,(Vel_left)
 662+ 9C42 A7           	and a
 663+ 9C43 28 06        	jr z,1F
 664+ 9C45 47           	ld b,a
 665+ 9C46 35           3 dec (hl)
 666+ 9C47 10 FD        	djnz 3B
 667+ 9C49 18 01        	jr 2F
 668+ 9C4B 35           1 dec (hl)
 669+ 9C4C C9           2 ret
 670+ 9C4D
 671+ 9C4D              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9C4D
 673+ 9C4D 2A EB 88     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9C50 01 1F 00     	ld bc,31
 675+ 9C53 A7           	and a
 676+ 9C54 ED 4A        	adc hl,bc
 677+ 9C56 22 EB 88     	ld (Posicion_actual),hl
 678+ 9C59 21 17 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9C5C CB C6        	set 0,(hl)
 680+ 9C5E C9           	ret
 681+ 9C5F
 682+ 9C5F              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9C5F
 684+ 9C5F 2A EB 88     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9C62 01 1F 00     	ld bc,31
 686+ 9C65 A7           	and a
 687+ 9C66 ED 42        	sbc hl,bc
 688+ 9C68 22 EB 88     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9C6B 21 17 89     	ld hl,Ctrl_0
 690+ 9C6E CB CE        	set 1,(hl)
 691+ 9C70 C9           	ret
 692+ 9C71
 693+ 9C71              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9C71
 695+ 9C71 24           Reaparece_abajo inc h
 696+ 9C72 01 E0 17     	ld bc,$17e0
 697+ 9C75 A7           	and a
 698+ 9C76 ED 4A        	adc hl,bc
 699+ 9C78 22 EB 88     	ld (Posicion_actual),hl
 700+ 9C7B 21 17 89     	ld hl,Ctrl_0
 701+ 9C7E CB D6        	set 2,(hl)
 702+ 9C80 C9           	ret
 703+ 9C81
 704+ 9C81              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9C81
 706+ 9C81 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9C84 A7           	and a
 708+ 9C85 ED 42        	sbc hl,bc
 709+ 9C87 22 EB 88     	ld (Posicion_actual),hl
 710+ 9C8A 21 17 89     	ld hl,Ctrl_0
 711+ 9C8D CB DE        	set 3,(hl)
 712+ 9C8F C9           	ret
 713+ 9C90
 714+ 9C90              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9C90              ;
 716+ 9C90              ;	15/07/23
 717+ 9C90
 718+ 9C90              Reinicio
 719+ 9C90
 720+ 9C90              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9C90
 722+ 9C90 AF           	xor a
 723+ 9C91 21 1E 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9C94 CD B2 9C     	call Limpia_contenido_hl
 725+ 9C97
 726+ 9C97 21 EB 88     	ld hl,Posicion_actual
 727+ 9C9A CD B2 9C     	call Limpia_contenido_hl
 728+ 9C9D
 729+ 9C9D CD E4 9F     	call Inicializa_Puntero_indice_mov
 730+ 9CA0 CD 6E 9F     	call Inicia_Puntero_mov
 731+ 9CA3
 732+ 9CA3 21 20 89     	ld hl,Incrementa_puntero
 733+ 9CA6 06 05        	ld b,5
 734+ 9CA8 77           1 ld (hl),a
 735+ 9CA9 23           	inc hl
 736+ 9CAA 10 FC        	djnz 1B
 737+ 9CAC
 738+ 9CAC 21 2A 89     	ld hl,Ctrl_2
 739+ 9CAF CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9CB1
 741+ 9CB1 C9           	ret
 742+ 9CB2
 743+ 9CB2 77           Limpia_contenido_hl	ld (hl),a
 744+ 9CB3 23           	inc hl
 745+ 9CB4 77           	ld (hl),a
 746+ 9CB5 C9           	ret
 747+ 9CB6
 748+ 9CB6
# file closed: Direcciones.asm
1507  9CB6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CB6              ; ------------------------------------------------------------------------
   2+ 9CB6              ;
   3+ 9CB6              ;	02/04/23
   4+ 9CB6              ;
   5+ 9CB6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CB6              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CB6              ;
   8+ 9CB6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CB6              ;
  10+ 9CB6              ;	Modifica: A,BC y DE.
  11+ 9CB6
  12+ 9CB6 C5           Genera_coordenadas push bc
  13+ 9CB7 E5           	push hl
  14+ 9CB8 D5           	push de
  15+ 9CB9
  16+ 9CB9 2A EB 88     	ld hl,(Posicion_actual)
  17+ 9CBC
  18+ 9CBC 7D           	ld a,l
  19+ 9CBD E6 1F        	and $1f
  20+ 9CBF 32 EF 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CC2
  22+ 9CC2 CD 2B 99     	call calcula_tercio
  23+ 9CC5 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CC6
  25+ 9CC6 1E 00        	ld e,0
  26+ 9CC8 7D           	ld a,l
  27+ 9CC9 E6 E0        	and $e0
  28+ 9CCB 28 01        	jr z,1F
  29+ 9CCD 04           	inc b
  30+ 9CCE
  31+ 9CCE 04           1 inc b
  32+ 9CCF 05           	dec b
  33+ 9CD0 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CD2              ;														; _ , salimos.
  35+ 9CD2 1C           3 inc e
  36+ 9CD3 D6 20        	sub 32
  37+ 9CD5 20 FB        	jr nz,3B
  38+ 9CD7 10 F5        	djnz 1B
  39+ 9CD9
  40+ 9CD9 7B           2 ld a,e
  41+ 9CDA 32 F0 88     	ld (Coordenada_y),a
  42+ 9CDD
  43+ 9CDD D1           	pop de
  44+ 9CDE E1           	pop hl
  45+ 9CDF C1           	pop bc
  46+ 9CE0
  47+ 9CE0 C9           	ret
  48+ 9CE1
  49+ 9CE1              ; ------------------------------------------------------------------------
  50+ 9CE1              ;	28/05/23
  51+ 9CE1              ;
  52+ 9CE1              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CE1              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CE1              ;
  55+ 9CE1              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CE1              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CE1              ;
  58+ 9CE1              ;		DE="$120d"
  59+ 9CE1              ;
  60+ 9CE1              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CE1              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CE1              ;
  63+ 9CE1              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CE1
  65+ 9CE1              ;	Modifica: A,BC y DE.
  66+ 9CE1
  67+ 9CE1
  68+ 9CE1              Genera_coordenadas_disparo
  69+ 9CE1
  70+ 9CE1              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CE1
  72+ 9CE1 7D           	ld a,l
  73+ 9CE2 E6 1F        	and $1f
  74+ 9CE4 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CE5 CD 2B 99     	call calcula_tercio
  76+ 9CE8 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CE9 1E 00        	ld e,0
  78+ 9CEB 7D           	ld a,l
  79+ 9CEC E6 E0        	and $e0
  80+ 9CEE 28 01        	jr z,1F
  81+ 9CF0 04           	inc b
  82+ 9CF1 1C           1 inc e
  83+ 9CF2 D6 20        	sub 32
  84+ 9CF4 20 FB        	jr nz,1B
  85+ 9CF6 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CF8 C9           	ret
  87+ 9CF9
# file closed: Genera_coordenadas.asm
1508  9CF9              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9CF9              ; Relojes y temporizaciones.
   2+ 9CF9
   3+ 9CF9              ; ------------------------------------------------------
   4+ 9CF9              ;
   5+ 9CF9              ;	16/7/23
   6+ 9CF9              ;
   7+ 9CF9              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9CF9              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9CF9              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9CF9              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9CF9              ;
  12+ 9CF9              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9CF9              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9CF9
  15+ 9CF9              ; Disparo_entidad db 1
  16+ 9CF9              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9CF9              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9CF9
  19+ 9CF9              Habilita_disparos
  20+ 9CF9
  21+ 9CF9 7E           	ld a,(hl)
  22+ 9CFA A7           	and a
  23+ 9CFB C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9CFC
  25+ 9CFC EB           	ex de,hl
  26+ 9CFD
  27+ 9CFD 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9CFE C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9CFF
  30+ 9CFF              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9CFF
  32+ 9CFF 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D00 7E           	ld a,(hl)
  34+ 9D01 23           	inc hl
  35+ 9D02 77           	ld (hl),a
  36+ 9D03
  37+ 9D03 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D04 3E 01        	ld a,1
  39+ 9D06 77           	ld (hl),a
  40+ 9D07 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1509  9D08              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D08
   2+ 9D08
   3+ 9D08              ;   07/07/23
   4+ 9D08              ;
   5+ 9D08              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D08              ;
   7+ 9D08              ;   Codificación:
   8+ 9D08              ;
   9+ 9D08              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D08              ;
  11+ 9D08              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D08              ;
  13+ 9D08              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D08              ;
  15+ 9D08              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D08              ;
  17+ 9D08              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D08              ;                               ..... %01000010 Vel_up 4
  19+ 9D08              ;                                               Vel_down 2
  20+ 9D08              ;                               ..... $42
  21+ 9D08              ;
  22+ 9D08              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D08              ;
  24+ 9D08              ;                               ..... %01000010 Vel_left 4
  25+ 9D08              ;                                               Vel_right 2
  26+ 9D08              ;                               ..... $42
  27+ 9D08              ;
  28+ 9D08              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D08              ;
  30+ 9D08              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D08              ;
  32+ 9D08              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D08              ;
  34+ 9D08              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D08              ;                                     $53
  36+ 9D08              ;
  37+ 9D08              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D08              ;
  39+ 9D08              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D08              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D08              ;
  42+ 9D08              ;                       Arriba ..... $81
  43+ 9D08              ;                       Arriba - izquierda ..... $a1
  44+ 9D08              ;                       Arriba - derecha ..... $91
  45+ 9D08              ;
  46+ 9D08              ;                       Abajo ..... $41
  47+ 9D08              ;                       Abajo - izquierda ..... $61
  48+ 9D08              ;                       Abajo - derecha ..... $51
  49+ 9D08              ;
  50+ 9D08              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D08              ;
  52+ 9D08              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D08              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D08              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D08              ;
  56+ 9D08              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D08              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D08              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D08              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D08              ;
  61+ 9D08              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D08              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D08              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D08              ;
  65+ 9D08              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D08              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D08              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D08              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D08
  70+ 9D08              ; ----- ----- ----- ----- -----
  71+ 9D08
  72+ 9D08 34 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D0A 3C 9D            defw F_1
  74+ 9D0C 46 9D            defw F_2
  75+ 9D0E 50 9D            defw Codo_abajo_derecha
  76+ 9D10 84 9D            defw Derecha_y_subiendo
  77+ 9D12 8E 9D            defw Derecha_y_subiendo_1
  78+ 9D14 98 9D            defw F_3
  79+ 9D16 A2 9D            defw F_4
  80+ 9D18 AC 9D            defw Derecha_y_bajando
  81+ 9D1A B6 9D            defw Derecha_y_bajando_1
  82+ 9D1C C0 9D            defw Derecha_y_bajando_2
  83+ 9D1E CA 9D            defw Codo_derecha_abajo
  84+ 9D20 FA 9D            defw Codo_abajo_izq.
  85+ 9D22 2E 9E            defw Izquierda_y_subiendo
  86+ 9D24 38 9E            defw Izquierda_y_subiendo_1
  87+ 9D26 42 9E            defw F_5
  88+ 9D28 4C 9E            defw F_6
  89+ 9D2A 56 9E            defw Izquierda_y_bajando
  90+ 9D2C 60 9E            defw Izquierda_y_bajando_1
  91+ 9D2E 6A 9E            defw Izquierda_y_bajando_2
  92+ 9D30 74 9E            defw Codo_izquierda_abajo
  93+ 9D32 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D34
  95+ 9D34 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D38 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D3C
  98+ 9D3C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D40 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D44 08 00
 100+ 9D46 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D4A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D4E 0F FE
 102+ 9D50
 103+ 9D50 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D54 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D5C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D60 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D64 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D68 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D6C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D70 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D74 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D78 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D7C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D80 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D84
 117+ 9D84 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D88 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D8C 06 00
 119+ 9D8E
 120+ 9D8E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D92 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D96 02 00
 122+ 9D98
 123+ 9D98 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D9C 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DA0 04 00
 125+ 9DA2 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DA6 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DAA 08 00
 127+ 9DAC
 128+ 9DAC 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DB0 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DB4 02 00
 130+ 9DB6
 131+ 9DB6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DBA 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DBE 06 00
 133+ 9DC0
 134+ 9DC0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DC4 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DC8 06 00
 136+ 9DCA
 137+ 9DCA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DCA
 139+ 9DCA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DCE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DD2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DD6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DDA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DDE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DE2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DE6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DEA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DF2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DF6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DFA
 152+ 9DFA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DFE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E06 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E0A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E0E 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E12 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E16 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E1A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E1E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E22 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E26 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E2A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E2E
 166+ 9E2E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E32 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E36 06 00
 168+ 9E38
 169+ 9E38 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E3C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E40 02 00
 171+ 9E42
 172+ 9E42 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E46 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E4A 04 00
 174+ 9E4C 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E50 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E54 08 00
 176+ 9E56
 177+ 9E56 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E5A 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E5E 02 00
 179+ 9E60
 180+ 9E60 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E64 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E68 06 00
 182+ 9E6A
 183+ 9E6A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E6E 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E72 06 00
 185+ 9E74
 186+ 9E74 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E78 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E7C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E80 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E88 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E8C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E90 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E94 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E98 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E9C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EA0 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EA4
 199+ 9EA4              ; ----- ----- ----- ----- -----
 200+ 9EA4              ;
 201+ 9EA4              ;   27/06/23
 202+ 9EA4
 203+ 9EA4              Movimiento
 204+ 9EA4
 205+ 9EA4              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EA4
 207+ 9EA4              ;    ld hl,(Posicion_actual)
 208+ 9EA4
 209+ 9EA4 FB               ei
 210+ 9EA5
 211+ 9EA5 3A 2A 89         ld a,(Ctrl_2)
 212+ 9EA8 CB 57            bit 2,a
 213+ 9EAA 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9EAC
 215+ 9EAC 2A 1C 89         ld hl,(Puntero_mov)
 216+ 9EAF 7E               ld a,(hl)
 217+ 9EB0
 218+ 9EB0              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9EB0
 220+ 9EB0              Inicia_desplazamiento.
 221+ 9EB0
 222+ 9EB0              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9EB0
 224+ 9EB0 CD A5 9F         call Ajusta_velocidad_desplazamiento
 225+ 9EB3
 226+ 9EB3              ; Iniciamos (Repetimos_mov).
 227+ 9EB3
 228+ 9EB3 7E               ld a,(hl)
 229+ 9EB4 E6 0F            and $0f
 230+ 9EB6 32 22 89         ld (Repetimos_desplazamiento),a
 231+ 9EB9 32 23 89         ld (Repetimos_desplazamiento_backup),a
 232+ 9EBC
 233+ 9EBC              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9EBC
 235+ 9EBC 23               inc hl
 236+ 9EBD 7E               ld a,(hl)
 237+ 9EBE 32 25 89         ld (Cola_de_desplazamiento),a
 238+ 9EC1 2B               dec hl
 239+ 9EC2
 240+ 9EC2 21 2A 89         ld hl,Ctrl_2
 241+ 9EC5 CB D6            set 2,(hl)
 242+ 9EC7
 243+ 9EC7              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9EC7              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9EC7
 246+ 9EC7              Desplazamiento_iniciado
 247+ 9EC7
 248+ 9EC7 CD 79 9F         call Aplica_desplazamiento
 249+ 9ECA
 250+ 9ECA 3A 2A 89         ld a,(Ctrl_2)
 251+ 9ECD CB 67            bit 4,a
 252+ 9ECF C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9ED0
 254+ 9ED0 21 22 89     3 ld hl,Repetimos_desplazamiento
 255+ 9ED3 35               dec (hl)
 256+ 9ED4 C0               ret nz
 257+ 9ED5
 258+ 9ED5              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9ED5              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9ED5              ; Analiza (Cola_de_desplazamiento).
 261+ 9ED5
 262+ 9ED5 3A 25 89     Cola ld a,(Cola_de_desplazamiento)
 263+ 9ED8 A7               and a
 264+ 9ED9 CC CE 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9EDC 28 30            jr z,Reinicia_el_movimiento
 266+ 9EDE
 267+ 9EDE FE FF            cp $ff
 268+ 9EE0 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9EE2
 270+ 9EE2 FE FE            cp $fe
 271+ 9EE4 CC 52 9F         call z,Fijamos_bucle
 272+ 9EE7 28 25            jr z,Reinicia_el_movimiento
 273+ 9EE9
 274+ 9EE9 FE FD            cp $fd
 275+ 9EEB 20 11            jr nz,1F
 276+ 9EED
 277+ 9EED              ; ---
 278+ 9EED              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9EED
 280+ 9EED 3A 2A 89         ld a,(Ctrl_2)
 281+ 9EF0 CB 5F            bit 3,a
 282+ 9EF2 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9EF4
 284+ 9EF4              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9EF4
 286+ 9EF4 21 2A 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9EF7 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9EF9
 289+ 9EF9 CD 63 9F         call Inicia_Repetimos_movimiento
 290+ 9EFC 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9EFE              ; ---
 292+ 9EFE
 293+ 9EFE FE 01        1 cp 1
 294+ 9F00 CA 3C 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F03
 296+ 9F03 3D               dec a
 297+ 9F04 32 25 89         ld (Cola_de_desplazamiento),a
 298+ 9F07
 299+ 9F07 3A 23 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F0A 32 22 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F0D              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F0D C9               ret
 303+ 9F0E
 304+ 9F0E              Reinicia_el_movimiento
 305+ 9F0E
 306+ 9F0E F3               di
 307+ 9F0F
 308+ 9F0F 3A 2A 89         ld a,(Ctrl_2)
 309+ 9F12 CB 5F            bit 3,a
 310+ 9F14 28 1B            jr z,2F
 311+ 9F16
 312+ 9F16              ; (Cola_de_desplazamiento)="254".
 313+ 9F16
 314+ 9F16 21 24 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F19 35               dec (hl)
 316+ 9F1A 20 15            jr nz,2F
 317+ 9F1C
 318+ 9F1C              ; Fin de las repeticiones del último movimiento.
 319+ 9F1C
 320+ 9F1C 21 2A 89         ld hl,Ctrl_2
 321+ 9F1F CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F21
 323+ 9F21 2A 1C 89         ld hl,(Puntero_mov)
 324+ 9F24 23               inc hl
 325+ 9F25 23               inc hl
 326+ 9F26 23               inc hl
 327+ 9F27 22 1C 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F2A              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F2A 7E               ld a,(hl)
 330+ 9F2B 32 25 89         ld (Cola_de_desplazamiento),a
 331+ 9F2E
 332+ 9F2E C3 D5 9E         jp Cola
 333+ 9F31
 334+ 9F31 CD 6E 9F     2 call Inicia_Puntero_mov
 335+ 9F34
 336+ 9F34 21 2A 89         ld hl,Ctrl_2
 337+ 9F37 CB 96            res 2,(hl)
 338+ 9F39
 339+ 9F39 C3 A4 9E         jp Movimiento
 340+ 9F3C
 341+ 9F3C              Siguiente_desplazamiento
 342+ 9F3C
 343+ 9F3C              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9F3C              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9F3C
 346+ 9F3C 21 2A 89         ld hl,Ctrl_2
 347+ 9F3F CB 96            res 2,(hl)
 348+ 9F41
 349+ 9F41 2A 1C 89         ld hl,(Puntero_mov)
 350+ 9F44 23               inc hl
 351+ 9F45 23               inc hl
 352+ 9F46 22 1C 89         ld (Puntero_mov),hl
 353+ 9F49
 354+ 9F49 7E               ld a,(hl)
 355+ 9F4A A7               and a
 356+ 9F4B CC CE 9F         call z,Incrementa_Puntero_indice_mov
 357+ 9F4E CA 0E 9F         jp z,Reinicia_el_movimiento
 358+ 9F51
 359+ 9F51 C9               ret
 360+ 9F52              ; Subrutinas -----------------------------------------
 361+ 9F52              ; ---------- --------- --------- ---------- ----------
 362+ 9F52              ;
 363+ 9F52              ;   24/07/23
 364+ 9F52              ;
 365+ 9F52              ;   Fijamos_bucle
 366+ 9F52              ;
 367+ 9F52              ;
 368+ 9F52
 369+ 9F52              Fijamos_bucle
 370+ 9F52
 371+ 9F52 3A 20 89         ld a,(Incrementa_puntero)
 372+ 9F55 3C               inc a
 373+ 9F56 32 21 89         ld (Incrementa_puntero_backup),a
 374+ 9F59
 375+ 9F59 CD CE 9F         call Incrementa_Puntero_indice_mov
 376+ 9F5C 2A 1A 89         ld hl,(Puntero_indice_mov)
 377+ 9F5F 22 1E 89         ld (Puntero_indice_mov_bucle),hl
 378+ 9F62 C9               ret
 379+ 9F63
 380+ 9F63              ; ---------- --------- --------- ---------- ----------
 381+ 9F63              ;
 382+ 9F63              ;   07/7/23
 383+ 9F63              ;
 384+ 9F63              ;   Inicia_Repetimos_movimiento
 385+ 9F63              ;
 386+ 9F63              ;
 387+ 9F63
 388+ 9F63              Inicia_Repetimos_movimiento
 389+ 9F63
 390+ 9F63              ; Iniciamos (Repetimos_movimiento).
 391+ 9F63
 392+ 9F63 DD 2A 1C 89      ld ix,(Puntero_mov)
 393+ 9F67 DD 7E 02         ld a,(ix+2)
 394+ 9F6A 32 24 89         ld (Repetimos_movimiento),a
 395+ 9F6D
 396+ 9F6D C9               ret
 397+ 9F6E
 398+ 9F6E              ; ---------- --------- --------- ---------- ----------
 399+ 9F6E              ;
 400+ 9F6E              ;   26/6/23
 401+ 9F6E              ;
 402+ 9F6E              ;   Inicia_Puntero_mov
 403+ 9F6E              ;
 404+ 9F6E              ;
 405+ 9F6E
 406+ 9F6E 2A 1A 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9F71 5E               ld e,(hl)
 408+ 9F72 23               inc hl
 409+ 9F73 56               ld d,(hl)
 410+ 9F74 EB               ex de,hl
 411+ 9F75 22 1C 89         ld (Puntero_mov),hl
 412+ 9F78 C9               ret
 413+ 9F79
 414+ 9F79              ; ---------- --------- --------- ---------- ----------
 415+ 9F79              ;
 416+ 9F79              ;   27/06/23
 417+ 9F79              ;
 418+ 9F79              ;   Aplica_movimiento.
 419+ 9F79
 420+ 9F79              Aplica_desplazamiento
 421+ 9F79
 422+ 9F79              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9F79
 424+ 9F79 2A 1C 89         ld hl, (Puntero_mov)
 425+ 9F7C
 426+ 9F7C 7E               ld a,(hl)
 427+ 9F7D E6 F0            and $f0
 428+ 9F7F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9F80
 430+ 9F80 CB 7E            bit 7,(hl)
 431+ 9F82 28 03            jr z,1F
 432+ 9F84 CD A2 99         call Mov_up
 433+ 9F87 2A 1C 89     1 ld hl, (Puntero_mov)
 434+ 9F8A CB 76            bit 6,(hl)
 435+ 9F8C 28 03            jr z,2F
 436+ 9F8E CD 71 99         call Mov_down
 437+ 9F91 2A 1C 89     2 ld hl, (Puntero_mov)
 438+ 9F94 CB 6E            bit 5,(hl)
 439+ 9F96 28 03            jr z,3F
 440+ 9F98 CD 03 9B         call Mov_left
 441+ 9F9B 2A 1C 89     3 ld hl, (Puntero_mov)
 442+ 9F9E CB 66            bit 4,(hl)
 443+ 9FA0 C8               ret z
 444+ 9FA1 CD E5 99         call Mov_right
 445+ 9FA4 C9               ret
 446+ 9FA5
 447+ 9FA5              ; ---------- --------- --------- ---------- ----------
 448+ 9FA5              ;
 449+ 9FA5              ;   26/06/23
 450+ 9FA5              ;
 451+ 9FA5              ;   Ajusta_velocidad_desplazamiento.
 452+ 9FA5
 453+ 9FA5              Ajusta_velocidad_desplazamiento
 454+ 9FA5
 455+ 9FA5              ; 1er byte de la cadena de movimiento.
 456+ 9FA5              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ 9FA5
 458+ 9FA5 CD C3 9F         call Extrae_nibble_alto
 459+ 9FA8
 460+ 9FA8 32 00 89         ld (Vel_up),a
 461+ 9FAB 79               ld a,c
 462+ 9FAC E6 0F            and $0f
 463+ 9FAE 32 01 89         ld (Vel_down),a
 464+ 9FB1
 465+ 9FB1              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ 9FB1              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ 9FB1
 468+ 9FB1 23               inc hl
 469+ 9FB2 CD C3 9F         call Extrae_nibble_alto
 470+ 9FB5
 471+ 9FB5 32 FE 88         ld (Vel_left),a
 472+ 9FB8 79               ld a,c
 473+ 9FB9 E6 0F            and $0f
 474+ 9FBB 32 FF 88         ld (Vel_right),a
 475+ 9FBE
 476+ 9FBE              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ 9FBE
 478+ 9FBE 23               inc hl
 479+ 9FBF 22 1C 89         ld (Puntero_mov),hl
 480+ 9FC2 C9               ret
 481+ 9FC3
 482+ 9FC3 06 04        Extrae_nibble_alto ld b,4
 483+ 9FC5 7E               ld a,(hl)
 484+ 9FC6 4F               ld c,a
 485+ 9FC7 E6 F0            and $f0
 486+ 9FC9 CB 3F        1 srl a
 487+ 9FCB 10 FC            djnz 1B
 488+ 9FCD C9               ret
 489+ 9FCE
 490+ 9FCE              ; ---------- --------- --------- ---------- ----------
 491+ 9FCE              ;
 492+ 9FCE              ;   5/7/23
 493+ 9FCE              ;
 494+ 9FCE              ;   Incrementa_Puntero_indice_mov
 495+ 9FCE
 496+ 9FCE              Incrementa_Puntero_indice_mov
 497+ 9FCE
 498+ 9FCE 21 20 89         ld hl,Incrementa_puntero
 499+ 9FD1 34               inc (hl)
 500+ 9FD2
 501+ 9FD2 2A 1A 89         ld hl,(Puntero_indice_mov)
 502+ 9FD5 01 02 00         ld bc,2
 503+ 9FD8 A7               and a
 504+ 9FD9 09               add hl,bc
 505+ 9FDA 22 1A 89         ld (Puntero_indice_mov),hl
 506+ 9FDD
 507+ 9FDD 7E               ld a,(hl)
 508+ 9FDE A7               and a
 509+ 9FDF
 510+ 9FDF              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ 9FDF
 512+ 9FDF              ;    jr z,$
 513+ 9FDF
 514+ 9FDF              ;! Reinicia el Patrón de movimiento.
 515+ 9FDF
 516+ 9FDF CC E4 9F         call z,Inicializa_Puntero_indice_mov
 517+ 9FE2
 518+ 9FE2 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ 9FE3
 520+ 9FE3 C9               ret
 521+ 9FE4
 522+ 9FE4
 523+ 9FE4              ; ---------- --------- --------- ---------- ----------
 524+ 9FE4              ;
 525+ 9FE4              ;   24/07/23
 526+ 9FE4              ;
 527+ 9FE4              ;   Inicializa_Puntero_indice_mov
 528+ 9FE4
 529+ 9FE4              Inicializa_Puntero_indice_mov
 530+ 9FE4
 531+ 9FE4              ; Existe etiqueta de bucle principal???
 532+ 9FE4
 533+ 9FE4 2A 1E 89         ld hl,(Puntero_indice_mov_bucle)
 534+ 9FE7 24               inc h
 535+ 9FE8 25               dec h
 536+ 9FE9 28 05            jr z,2F
 537+ 9FEB
 538+ 9FEB 22 1A 89         ld (Puntero_indice_mov),hl
 539+ 9FEE 18 14            jr 3F
 540+ 9FF0
 541+ 9FF0              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ 9FF0
 543+ 9FF0 3A 20 89     2 ld a,(Incrementa_puntero)
 544+ 9FF3 47               ld b,a
 545+ 9FF4
 546+ 9FF4 2A 1A 89         ld hl,(Puntero_indice_mov)
 547+ 9FF7 2B           1 dec hl
 548+ 9FF8 2B               dec hl
 549+ 9FF9 10 FC            djnz 1B
 550+ 9FFB 22 1A 89         ld (Puntero_indice_mov),hl
 551+ 9FFE
 552+ 9FFE AF               xor a
 553+ 9FFF 32 20 89         ld (Incrementa_puntero),a
 554+ A002 18 06            jr 4F
 555+ A004
 556+ A004 3A 21 89     3 ld a,(Incrementa_puntero_backup)
 557+ A007 32 20 89         ld (Incrementa_puntero),a
 558+ A00A C9           4 ret
 559+ A00B
 560+ A00B
 561+ A00B
# file closed: Patrones_de_mov.asm
1510  A00B              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A00B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A00B              ;
   3+ A00B              ;	9/8/23
   4+ A00B              ;
   5+ A00B              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A00B
   7+ A00B              ;	ADC HL,SP	LD (addr),SP
   8+ A00B              ;	ADD HL,SP	LD SP,(addr)
   9+ A00B              ;	ADD IX,SP	LD SP,nn
  10+ A00B              ; 	ADD IY,SP	LD SP,HL
  11+ A00B              ;				LD SP,IX
  12+ A00B              ;	DEC SP		LD SP,IY
  13+ A00B
  14+ A00B              ;	EX (SP),HL
  15+ A00B              ;	EX (SP),IX
  16+ A00B              ;	EX (SP),IY
  17+ A00B
  18+ A00B              ;	INC SP
  19+ A00B
  20+ A00B                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 3D 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A 2C 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 45 89         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 43 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 45 89         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 43 89     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 3D 89  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 5F 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7900
  92+ 7900
  93+ 7900              Gestiona_albumes_de_fotos
  94+ 7900
  95+ 7900              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7900              ;   Vaciamos Album_de_fotos.
  97+ 7900
  98+ 7900              ;   Album_de_fotos. Contiene datos ???
  99+ 7900
 100+ 7900 21 01 70         ld hl,Album_de_fotos+1
 101+ 7903 7E               ld a,(hl)
 102+ 7904 A7               and a
 103+ 7905 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7907
 105+ 7907 2A 47 89         ld hl,(End_Snapshot)
 106+ 790A 01 00 70         ld bc,Album_de_fotos
 107+ 790D 11 01 70         ld de,Album_de_fotos+1
 108+ 7910 AF               xor a
 109+ 7911 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 7912
 111+ 7912 CD A2 79         call Limpia_album
 112+ 7915
 113+ 7915 21 00 00         ld hl,0
 114+ 7918 22 47 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 791B
 116+ 791B              ; ----- ----- ----- -----
 117+ 791B
 118+ 791B              ;   Album_de_fotos_1. Contiene datos ???
 119+ 791B
 120+ 791B 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 791E 7E               ld a,(hl)
 122+ 791F A7               and a
 123+ 7920 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 7922              ;                               ; _ información del album2 al album1.
 125+ 7922
 126+ 7922              ; ----- ----- ----- -----
 127+ 7922              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 7922
 129+ 7922 2A 4B 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 7925 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7928 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 792B
 133+ 792B CD A2 79         call Limpia_album
 134+ 792E
 135+ 792E              ;   Calculamos (End_Snapshot)
 136+ 792E
 137+ 792E A7               and a
 138+ 792F ED 4A            adc hl,bc
 139+ 7931 22 47 89         ld (End_Snapshot),hl
 140+ 7934
 141+ 7934              ;   Limpiamos Album_de_fotos_1.
 142+ 7934
 143+ 7934 2A 4B 89         ld hl,(End_Snapshot_1)
 144+ 7937 01 84 70         ld bc,Album_de_fotos_1
 145+ 793A 11 85 70         ld de,Album_de_fotos_1+1
 146+ 793D AF               xor a
 147+ 793E 02               ld (bc),a
 148+ 793F
 149+ 793F CD A2 79         call Limpia_album
 150+ 7942
 151+ 7942 21 00 00         ld hl,0
 152+ 7945 22 4B 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7948
 154+ 7948              ; ----- ----- ----- -----
 155+ 7948
 156+ 7948              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7948
 158+ 7948 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 794B 7E               ld a,(hl)
 160+ 794C A7               and a
 161+ 794D 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 794F              ;                               ; _ información del album3 al album2.
 163+ 794F              ; ----- ----- ----- -----
 164+ 794F              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 794F
 166+ 794F 2A 4F 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 7952 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 7955 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7958
 170+ 7958 CD A2 79         call Limpia_album
 171+ 795B
 172+ 795B              ;   Calculamos (End_Snapshot_1):
 173+ 795B
 174+ 795B A7               and a
 175+ 795C ED 4A            adc hl,bc
 176+ 795E 22 4B 89         ld (End_Snapshot_1),hl
 177+ 7961
 178+ 7961              ;   Limpiamos Album_de_fotos_2.
 179+ 7961
 180+ 7961 2A 4F 89         ld hl,(End_Snapshot_2)
 181+ 7964 01 07 71         ld bc,Album_de_fotos_2
 182+ 7967 11 08 71         ld de,Album_de_fotos_2+1
 183+ 796A AF               xor a
 184+ 796B 02               ld (bc),a
 185+ 796C
 186+ 796C CD A2 79         call Limpia_album
 187+ 796F
 188+ 796F 21 00 00         ld hl,0
 189+ 7972 22 4F 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 7975
 191+ 7975              ; ----- ----- ----- -----
 192+ 7975
 193+ 7975              ;   Album_de_fotos_3. Contiene datos ???
 194+ 7975
 195+ 7975 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7978 7E               ld a,(hl)
 197+ 7979 A7               and a
 198+ 797A C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 797B
 200+ 797B              ; ----- ----- ----- -----
 201+ 797B              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 797B
 203+ 797B 2A 53 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 797E 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 7981 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 7984
 207+ 7984 CD A2 79         call Limpia_album
 208+ 7987
 209+ 7987              ;   Calculamos (End_Snapshot_2):
 210+ 7987
 211+ 7987 A7               and a
 212+ 7988 ED 4A            adc hl,bc
 213+ 798A 22 4F 89         ld (End_Snapshot_2),hl
 214+ 798D
 215+ 798D              ;   Limpiamos Album_de_fotos_3.
 216+ 798D
 217+ 798D 2A 53 89         ld hl,(End_Snapshot_3)
 218+ 7990 01 8A 71         ld bc,Album_de_fotos_3
 219+ 7993 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 7996 AF               xor a
 221+ 7997 02               ld (bc),a
 222+ 7998
 223+ 7998 CD A2 79         call Limpia_album
 224+ 799B
 225+ 799B 21 00 00         ld hl,0
 226+ 799E 22 53 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 79A1 C9               ret
 228+ 79A2
 229+ 79A2              ; ----------------------------------------------------
 230+ 79A2              ;
 231+ 79A2              ;   10/8/23
 232+ 79A2              ;
 233+ 79A2              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 79A2              ;
 235+ 79A2              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 79A2              ;           BC ..... Dirección de inicio del álbum.
 237+ 79A2              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 79A2
 239+ 79A2              ;    ld hl,(End_Snapshot)
 240+ 79A2              ;    ld bc,Album_de_fotos
 241+ 79A2              ;    ld de,Album_de_fotos+1
 242+ 79A2
 243+ 79A2              ;   MODIFICA: A,HL,BC y DE.
 244+ 79A2
 245+ 79A2              Limpia_album
 246+ 79A2 D5               push de            ; Guardo DESTINO.
 247+ 79A3 C5               push bc            ; Guardo ORIGEN.
 248+ 79A4 ED 42            sbc hl,bc
 249+ 79A6 4D               ld c,l
 250+ 79A7 44               ld b,h
 251+ 79A8 E1               pop hl
 252+ 79A9 C5               push bc
 253+ 79AA ED B0            ldir
 254+ 79AC C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 79AD E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 79AE C9               ret                         ; _ a otro).
 257+ 79AF              ;
 258+ 79AF
 259+ 79AF              ; -----------------------------------------------
 260+ 79AF
 261+ 79AF
 262+ 79AF
 263+ 79AF
 264+ 79AF
# file closed: Guarda_foto_registros.asm
1511  79AF
1512  79AF              	SAVESNA "Pruebas.sna", START
1513  79AF
1514  79AF
1515  79AF
1516  79AF
# file closed: Banco_de_pruebas.asm
