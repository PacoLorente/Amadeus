# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD E1 8A     	call Frame
  15  A104
  16  A104 3A 06 8A     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 08 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110 ED 4D        	reti
  23  A112
  24  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A112
  26  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  27  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										 ;! 66 Bytes por entidad.
  96+ 8574
  97+ 8574 CE 85        	defw Caja_1
  98+ 8576 10 86        	defw Caja_2
  99+ 8578 52 86        	defw Caja_3
 100+ 857A 94 86        	defw Caja_4
 101+ 857C D6 86        	defw Caja_5
 102+ 857E 18 87        	defw Caja_6
 103+ 8580 5A 87        	defw Caja_7
 104+ 8582 9C 87        	defw Caja_8
 105+ 8584 DE 87        	defw Caja_9
 106+ 8586 20 88        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85BC
 145+ 85BC 00           	db 0											; (Autoriza_movimiento).
 146+ 85BD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85C1 00 00
 147+ 85C3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 148+ 85C5 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 149+ 85C7 00           	db 0											; (Cola_de_desplazamiento).
 150+ 85C8
 151+ 85C8 00           	db 0 											; (Columnas).
 152+ 85C9 00 00        	defw 0											; (Limite_horizontal).
 153+ 85CB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 154+ 85CE
 155+ 85CE              ; ---------- ---------- ---------- ---------- ----------
 156+ 85CE
 157+ 85CE 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 158+ 85D0 00 00        	defw 0											; (Posicion_actual).
 159+ 85D2 00 00        	defw 0 											; (Puntero_objeto).
 160+ 85D4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 161+ 85D7
 162+ 85D7 00           	db %00000000 									; (Attr).
 163+ 85D8
 164+ 85D8 00 00        	defw 0											; (Indice_Sprite_der).
 165+ 85DA 00 00        	defw 0											; (Indice_Sprite_izq).
 166+ 85DC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 167+ 85DE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 168+ 85E0
 169+ 85E0 00 00        	defw 0											; (Posicion_inicio).
 170+ 85E2 00           	db 0											; (Cuad_objeto).
 171+ 85E3
 172+ 85E3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 173+ 85E7
 174+ 85E7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 175+ 85E8
 176+ 85E8 00 00        	db 0,0										    ; Variables_de_borrado
 177+ 85EA 00 00        	defw 0											;	" " " " " " "
 178+ 85EC 00 00        	defw 0											;	" " " " " " "
 179+ 85EE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 85F2
 181+ 85F2 00 00        	db 0,0											; Variables_de_pintado
 182+ 85F4 00 00        	defw 0											;	" " " " " " "
 183+ 85F6 00 00        	defw 0											;	" " " " " " "
 184+ 85F8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 185+ 85FC
 186+ 85FC 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 187+ 85FE
 188+ 85FE 00           	db 0											; (Autoriza_movimiento).
 189+ 85FF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 189+ 8603 00 00
 190+ 8605 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 191+ 8607 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 192+ 8609 00           	db 0											; (Cola_de_desplazamiento).
 193+ 860A
 194+ 860A 00           	db 0 											; (Columnas).
 195+ 860B 00 00        	defw 0											; (Limite_horizontal).
 196+ 860D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 197+ 8610
 198+ 8610              ; ---------- ---------- ---------- ---------- ----------
 199+ 8610
 200+ 8610 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 201+ 8612 00 00        	defw 0											; (Posicion_actual).
 202+ 8614 00 00        	defw 0 											; (Puntero_objeto).
 203+ 8616 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 204+ 8619
 205+ 8619 00           	db %00000000 									; (Attr).
 206+ 861A
 207+ 861A 00 00        	defw 0											; (Indice_Sprite_der).
 208+ 861C 00 00        	defw 0											; (Indice_Sprite_izq).
 209+ 861E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 210+ 8620 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 211+ 8622
 212+ 8622 00 00        	defw 0											; (Posicion_inicio).
 213+ 8624 00           	db 0											; (Cuad_objeto).
 214+ 8625
 215+ 8625 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 216+ 8629
 217+ 8629 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 218+ 862A
 219+ 862A 00 00        	db 0,0										    ; Variables_de_borrado
 220+ 862C 00 00        	defw 0											;	" " " " " " "
 221+ 862E 00 00        	defw 0											;	" " " " " " "
 222+ 8630 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8634
 224+ 8634 00 00        	db 0,0											; Variables_de_pintado
 225+ 8636 00 00        	defw 0											;	" " " " " " "
 226+ 8638 00 00        	defw 0											;	" " " " " " "
 227+ 863A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 228+ 863E
 229+ 863E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 230+ 8640
 231+ 8640 00           	db 0											; (Autoriza_movimiento).
 232+ 8641 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 232+ 8645 00 00
 233+ 8647 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 234+ 8649 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 235+ 864B 00           	db 0											; (Cola_de_desplazamiento).
 236+ 864C
 237+ 864C 00           	db 0 											; (Columnas).
 238+ 864D 00 00        	defw 0											; (Limite_horizontal).
 239+ 864F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 240+ 8652
 241+ 8652              ; ---------- ---------- ---------- ---------- ----------
 242+ 8652
 243+ 8652 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 244+ 8654 00 00        	defw 0											; (Posicion_actual).
 245+ 8656 00 00        	defw 0 											; (Puntero_objeto).
 246+ 8658 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 247+ 865B
 248+ 865B 00           	db %00000000 									; (Attr).
 249+ 865C
 250+ 865C 00 00        	defw 0											; (Indice_Sprite_der).
 251+ 865E 00 00        	defw 0											; (Indice_Sprite_izq).
 252+ 8660 00 00        	defw 0											; (Puntero_DESPLZ_der).
 253+ 8662 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 254+ 8664
 255+ 8664 00 00        	defw 0											; (Posicion_inicio).
 256+ 8666 00           	db 0											; (Cuad_objeto).
 257+ 8667
 258+ 8667 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 259+ 866B
 260+ 866B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 261+ 866C
 262+ 866C 00 00        	db 0,0										    ; Variables_de_borrado
 263+ 866E 00 00        	defw 0											;	" " " " " " "
 264+ 8670 00 00        	defw 0											;	" " " " " " "
 265+ 8672 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 266+ 8676
 267+ 8676 00 00        	db 0,0											; Variables_de_pintado
 268+ 8678 00 00        	defw 0											;	" " " " " " "
 269+ 867A 00 00        	defw 0											;	" " " " " " "
 270+ 867C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 271+ 8680
 272+ 8680 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 273+ 8682
 274+ 8682 00           	db 0											; (Autoriza_movimiento).
 275+ 8683 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 275+ 8687 00 00
 276+ 8689 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 277+ 868B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 278+ 868D 00           	db 0											; (Cola_de_desplazamiento).
 279+ 868E
 280+ 868E 00           	db 0 											; (Columnas).
 281+ 868F 00 00        	defw 0											; (Limite_horizontal).
 282+ 8691 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 283+ 8694
 284+ 8694              ; ---------- ---------- ---------- ---------- ----------
 285+ 8694
 286+ 8694 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 287+ 8696 00 00        	defw 0											; (Posicion_actual).
 288+ 8698 00 00        	defw 0 											; (Puntero_objeto).
 289+ 869A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 290+ 869D
 291+ 869D 00           	db %00000000 									; (Attr).
 292+ 869E
 293+ 869E 00 00        	defw 0											; (Indice_Sprite_der).
 294+ 86A0 00 00        	defw 0											; (Indice_Sprite_izq).
 295+ 86A2 00 00        	defw 0											; (Puntero_DESPLZ_der).
 296+ 86A4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 297+ 86A6
 298+ 86A6 00 00        	defw 0											; (Posicion_inicio).
 299+ 86A8 00           	db 0											; (Cuad_objeto).
 300+ 86A9
 301+ 86A9 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 302+ 86AD
 303+ 86AD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 304+ 86AE
 305+ 86AE 00 00        	db 0,0										    ; Variables_de_borrado
 306+ 86B0 00 00        	defw 0											;	" " " " " " "
 307+ 86B2 00 00        	defw 0											;	" " " " " " "
 308+ 86B4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 309+ 86B8
 310+ 86B8 00 00        	db 0,0											; Variables_de_pintado
 311+ 86BA 00 00        	defw 0											;	" " " " " " "
 312+ 86BC 00 00        	defw 0											;	" " " " " " "
 313+ 86BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 314+ 86C2
 315+ 86C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 316+ 86C4
 317+ 86C4 00           	db 0											; (Autoriza_movimiento).
 318+ 86C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 318+ 86C9 00 00
 319+ 86CB 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 320+ 86CD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86CF 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86D0
 323+ 86D0 00           	db 0 											; (Columnas).
 324+ 86D1 00 00        	defw 0											; (Limite_horizontal).
 325+ 86D3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86D6
 327+ 86D6              ; ---------- ---------- ---------- ---------- ----------
 328+ 86D6
 329+ 86D6 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86D8 00 00        	defw 0											; (Posicion_actual).
 331+ 86DA 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86DC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86DF
 334+ 86DF 00           	db %00000000 									; (Attr).
 335+ 86E0
 336+ 86E0 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86E2 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86E4 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86E6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86E8
 341+ 86E8 00 00        	defw 0											; (Posicion_inicio).
 342+ 86EA 00           	db 0											; (Cuad_objeto).
 343+ 86EB
 344+ 86EB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 86EF
 346+ 86EF 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 86F0
 348+ 86F0 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 86F2 00 00        	defw 0											;	" " " " " " "
 350+ 86F4 00 00        	defw 0											;	" " " " " " "
 351+ 86F6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 86FA
 353+ 86FA 00 00        	db 0,0											; Variables_de_pintado
 354+ 86FC 00 00        	defw 0											;	" " " " " " "
 355+ 86FE 00 00        	defw 0											;	" " " " " " "
 356+ 8700 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8704
 358+ 8704 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 8706
 360+ 8706 00           	db 0											; (Autoriza_movimiento).
 361+ 8707 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 870B 00 00
 362+ 870D 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 363+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 364+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 365+ 8712
 366+ 8712 00           	db 0 											; (Columnas).
 367+ 8713 00 00        	defw 0											; (Limite_horizontal).
 368+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 369+ 8718
 370+ 8718              ; ---------- ---------- ---------- ---------- ----------
 371+ 8718
 372+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 373+ 871A 00 00        	defw 0											; (Posicion_actual).
 374+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 375+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 376+ 8721
 377+ 8721 00           	db %00000000 									; (Attr).
 378+ 8722
 379+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 380+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 381+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 382+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 383+ 872A
 384+ 872A 00 00        	defw 0											; (Posicion_inicio).
 385+ 872C 00           	db 0											; (Cuad_objeto).
 386+ 872D
 387+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 388+ 8731
 389+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 390+ 8732
 391+ 8732 00 00        	db 0,0										    ; Variables_de_borrado
 392+ 8734 00 00        	defw 0											;	" " " " " " "
 393+ 8736 00 00        	defw 0											;	" " " " " " "
 394+ 8738 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 395+ 873C
 396+ 873C 00 00        	db 0,0											; Variables_de_pintado
 397+ 873E 00 00        	defw 0											;	" " " " " " "
 398+ 8740 00 00        	defw 0											;	" " " " " " "
 399+ 8742 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 400+ 8746
 401+ 8746 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 402+ 8748
 403+ 8748 00           	db 0											; (Autoriza_movimiento).
 404+ 8749 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 404+ 874D 00 00
 405+ 874F 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 406+ 8751 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 407+ 8753 00           	db 0											; (Cola_de_desplazamiento).
 408+ 8754
 409+ 8754 00           	db 0 											; (Columnas).
 410+ 8755 00 00        	defw 0											; (Limite_horizontal).
 411+ 8757 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 412+ 875A
 413+ 875A              ; ---------- ---------- ---------- ---------- ----------
 414+ 875A
 415+ 875A 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 416+ 875C 00 00        	defw 0											; (Posicion_actual).
 417+ 875E 00 00        	defw 0 											; (Puntero_objeto).
 418+ 8760 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 419+ 8763
 420+ 8763 00           	db %00000000 									; (Attr).
 421+ 8764
 422+ 8764 00 00        	defw 0											; (Indice_Sprite_der).
 423+ 8766 00 00        	defw 0											; (Indice_Sprite_izq).
 424+ 8768 00 00        	defw 0											; (Puntero_DESPLZ_der).
 425+ 876A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 426+ 876C
 427+ 876C 00 00        	defw 0											; (Posicion_inicio).
 428+ 876E 00           	db 0											; (Cuad_objeto).
 429+ 876F
 430+ 876F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 431+ 8773
 432+ 8773 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 433+ 8774
 434+ 8774 00 00        	db 0,0										    ; Variables_de_borrado
 435+ 8776 00 00        	defw 0											;	" " " " " " "
 436+ 8778 00 00        	defw 0											;	" " " " " " "
 437+ 877A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 438+ 877E
 439+ 877E 00 00        	db 0,0											; Variables_de_pintado
 440+ 8780 00 00        	defw 0											;	" " " " " " "
 441+ 8782 00 00        	defw 0											;	" " " " " " "
 442+ 8784 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 443+ 8788
 444+ 8788 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 445+ 878A
 446+ 878A 00           	db 0											; (Autoriza_movimiento).
 447+ 878B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 447+ 878F 00 00
 448+ 8791 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 449+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 450+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 451+ 8796
 452+ 8796 00           	db 0 											; (Columnas).
 453+ 8797 00 00        	defw 0											; (Limite_horizontal).
 454+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 455+ 879C
 456+ 879C              ; ---------- ---------- ---------- ---------- ----------
 457+ 879C
 458+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 459+ 879E 00 00        	defw 0											; (Posicion_actual).
 460+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 461+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 462+ 87A5
 463+ 87A5 00           	db %00000000 									; (Attr).
 464+ 87A6
 465+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 466+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 467+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 468+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 469+ 87AE
 470+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 471+ 87B0 00           	db 0											; (Cuad_objeto).
 472+ 87B1
 473+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 474+ 87B5
 475+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 476+ 87B6
 477+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 478+ 87B8 00 00        	defw 0											;	" " " " " " "
 479+ 87BA 00 00        	defw 0											;	" " " " " " "
 480+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 481+ 87C0
 482+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 483+ 87C2 00 00        	defw 0											;	" " " " " " "
 484+ 87C4 00 00        	defw 0											;	" " " " " " "
 485+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 486+ 87CA
 487+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 488+ 87CC
 489+ 87CC 00           	db 0											; (Autoriza_movimiento).
 490+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 490+ 87D1 00 00
 491+ 87D3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 492+ 87D5 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 493+ 87D7 00           	db 0											; (Cola_de_desplazamiento).
 494+ 87D8
 495+ 87D8 00           	db 0 											; (Columnas).
 496+ 87D9 00 00        	defw 0											; (Limite_horizontal).
 497+ 87DB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 498+ 87DE
 499+ 87DE              ; ---------- ---------- ---------- ---------- ----------
 500+ 87DE
 501+ 87DE 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 502+ 87E0 00 00        	defw 0											; (Posicion_actual).
 503+ 87E2 00 00        	defw 0 											; (Puntero_objeto).
 504+ 87E4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 505+ 87E7
 506+ 87E7 00           	db %00000000 									; (Attr).
 507+ 87E8
 508+ 87E8 00 00        	defw 0											; (Indice_Sprite_der).
 509+ 87EA 00 00        	defw 0											; (Indice_Sprite_izq).
 510+ 87EC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 511+ 87EE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 512+ 87F0
 513+ 87F0 00 00        	defw 0											; (Posicion_inicio).
 514+ 87F2 00           	db 0											; (Cuad_objeto).
 515+ 87F3
 516+ 87F3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 517+ 87F7
 518+ 87F7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 519+ 87F8
 520+ 87F8 00 00        	db 0,0										    ; Variables_de_borrado
 521+ 87FA 00 00        	defw 0											;	" " " " " " "
 522+ 87FC 00 00        	defw 0											;	" " " " " " "
 523+ 87FE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 524+ 8802
 525+ 8802 00 00        	db 0,0											; Variables_de_pintado
 526+ 8804 00 00        	defw 0											;	" " " " " " "
 527+ 8806 00 00        	defw 0											;	" " " " " " "
 528+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 529+ 880C
 530+ 880C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 531+ 880E
 532+ 880E 00           	db 0											; (Autoriza_movimiento).
 533+ 880F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 533+ 8813 00 00
 534+ 8815 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 535+ 8817 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 536+ 8819 00           	db 0											; (Cola_de_desplazamiento).
 537+ 881A
 538+ 881A 00           	db 0 											; (Columnas).
 539+ 881B 00 00        	defw 0											; (Limite_horizontal).
 540+ 881D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 541+ 8820
 542+ 8820              ; ---------- ---------- ---------- ---------- ----------
 543+ 8820
 544+ 8820 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 545+ 8822 00 00        	defw 0											; (Posicion_actual).
 546+ 8824 00 00        	defw 0 											; (Puntero_objeto).
 547+ 8826 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 548+ 8829
 549+ 8829 00           	db %00000000 									; (Attr).
 550+ 882A
 551+ 882A 00 00        	defw 0											; (Indice_Sprite_der).
 552+ 882C 00 00        	defw 0											; (Indice_Sprite_izq).
 553+ 882E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 554+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 555+ 8832
 556+ 8832 00 00        	defw 0											; (Posicion_inicio).
 557+ 8834 00           	db 0											; (Cuad_objeto).
 558+ 8835
 559+ 8835 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 560+ 8839
 561+ 8839 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 562+ 883A
 563+ 883A 00 00        	db 0,0										    ; Variables_de_borrado
 564+ 883C 00 00        	defw 0											;	" " " " " " "
 565+ 883E 00 00        	defw 0											;	" " " " " " "
 566+ 8840 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 567+ 8844
 568+ 8844 00 00        	db 0,0											; Variables_de_pintado
 569+ 8846 00 00        	defw 0											;	" " " " " " "
 570+ 8848 00 00        	defw 0											;	" " " " " " "
 571+ 884A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 572+ 884E
 573+ 884E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 574+ 8850
 575+ 8850 00           	db 0											; (Autoriza_movimiento).
 576+ 8851 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 576+ 8855 00 00
 577+ 8857 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 578+ 8859 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 579+ 885B 00           	db 0											; (Cola_de_desplazamiento).
 580+ 885C
 581+ 885C 00           	db 0 											; (Columnas).
 582+ 885D 00 00        	defw 0											; (Limite_horizontal).
 583+ 885F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 584+ 8862
 585+ 8862              ; -------------------------------------------------------------------------------------
 586+ 8862              ;
 587+ 8862              ;	20/05/23
 588+ 8862              ;
 589+ 8862              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 590+ 8862              ;
 591+ 8862              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 592+ 8862              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 593+ 8862              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 594+ 8862              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 595+ 8862
 596+ 8862              Indice_de_entidades
 597+ 8862
 598+ 8862 6C 88        	defw Entidad_1
 599+ 8864 7C 88        	defw Entidad_2
 600+ 8866 8C 88        	defw Entidad_3
 601+ 8868 9C 88        	defw Entidad_4
 602+ 886A AC 88        	defw Entidad_5
 603+ 886C
 604+ 886C              ;	BADSAT, (Satélite malvado).
 605+ 886C
 606+ 886C 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 607+ 886E 04           	db %00000100									; (Attr).
 608+ 886F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 609+ 8871 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 610+ 8873 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 611+ 8875 01           	db 1											; (Cuad_objeto).
 612+ 8876 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 613+ 887A C7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 614+ 887C
 615+ 887C 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 616+ 887E 02           	db %00000010									; (Attr).
 617+ 887F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 618+ 8881 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 619+ 8883 40 50        	defw $5040                                      ; (Posicion_inicio).
 620+ 8885 01           	db 1											; (Cuad_objeto).
 621+ 8886 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 622+ 888A C7 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 623+ 888C
 624+ 888C 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 625+ 888E 04           	db %00000100									; (Attr).
 626+ 888F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 627+ 8891 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 628+ 8893 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 629+ 8895 01           	db 1											; (Cuad_objeto).
 630+ 8896 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 631+ 889A C7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 632+ 889C
 633+ 889C 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 634+ 889E 01           	db %00000001									; (Attr).
 635+ 889F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 636+ 88A1 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 637+ 88A3 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 638+ 88A5 01           	db 1											; (Cuad_objeto).
 639+ 88A6 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 640+ 88AA C7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 641+ 88AC
 642+ 88AC 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 643+ 88AE 01           	db %00000001									; (Attr).
 644+ 88AF A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 645+ 88B1 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 646+ 88B3 07 40        	defw $4007                                      ; (Posicion_inicio).
 647+ 88B5 01           	db 1											; (Cuad_objeto).
 648+ 88B6 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 649+ 88BA C7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 650+ 88BC
# file closed: Cajas_y_disparos.asm
  28  88BC              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BC              ; 13/05/23
   2+ 88BC
   3+ 88BC              Indice_de_niveles
   4+ 88BC
   5+ 88BC CA 88        	defw Nivel_1
   6+ 88BE CC 88        	defw Nivel_2
   7+ 88C0 D9 88        	defw Nivel_3
   8+ 88C2 E9 88        	defw Nivel_4
   9+ 88C4 FB 88        	defw Nivel_5
  10+ 88C6
  11+ 88C6              ;	...
  12+ 88C6              ;	...
  13+ 88C6              ;	+ Niveles ...
  14+ 88C6
  15+ 88C6 00 00        	defw 0
  16+ 88C8 00 00        	defw 0
  17+ 88CA
  18+ 88CA 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88CB 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88CC 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D1 01 02
  22+ 88D3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88D7 01 02
  23+ 88D9 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88DE 01
  25+ 88DF 03 01 01 01  	db 3,1,1,1,1
  25+ 88E3 01
  26+ 88E4 03 01 01 01  	db 3,1,1,1,1
  26+ 88E8 01
  27+ 88E9 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88EE 01
  29+ 88EF 04 01 01 01  	db 4,1,1,1,1
  29+ 88F3 01
  30+ 88F4 04 01 01 01  	db 4,1,1,1,1
  30+ 88F8 01
  31+ 88F9 02 03        	db 2,3
  32+ 88FB 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8900 01
  34+ 8901 05 01 01 01  	db 5,1,1,1,1
  34+ 8905 01
  35+ 8906 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 890A 01
  36+ 890B 05 01 01 01  	db 5,1,1,1,1
  36+ 890F 01
  37+ 8910
  38+ 8910              ;---------------------------------------------------------------------------------------------------------------
  39+ 8910              ;
  40+ 8910              ;   21/5/23
  41+ 8910              ;
  42+ 8910              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8910              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8910              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8910              ;	_en la caja DRAW correspondiente.
  46+ 8910              ;
  47+ 8910              ;	MODIFICA: HL,DE y A.
  48+ 8910              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8910
  50+ 8910              Inicializa_Punteros_de_nivel
  51+ 8910
  52+ 8910 21 BC 88     	ld hl,Indice_de_niveles
  53+ 8913 22 3C 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8916 CD 2E 8D     	call Extrae_address
  55+ 8919 7E           	ld a,(hl)
  56+ 891A 32 11 8A     	ld (Numero_de_entidades),a
  57+ 891D 23           	inc hl
  58+ 891E 22 3E 8A     	ld (Datos_de_nivel),hl
  59+ 8921 C9           	ret
  60+ 8922
  61+ 8922              ;---------------------------------------------------------------------------------------------------------------
  62+ 8922              ;
  63+ 8922              ;   13/5/23
  64+ 8922              ;
  65+ 8922              ;	Destruye A,BC,HL,DE
  66+ 8922
  67+ 8922              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8922              ;	_del juego.
  69+ 8922
  70+ 8922              Prepara_cajas
  71+ 8922
  72+ 8922              ; Preparamos los punteros de las cajas.
  73+ 8922
  74+ 8922 21 74 85     	ld hl,Indice_de_cajas
  75+ 8925 CD 2E 8D     	call Extrae_address
  76+ 8928 CD 65 89     	call Avanza_caja
  77+ 892B
  78+ 892B CD A9 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 892E
  80+ 892E 2A 3E 8A     	ld hl,(Datos_de_nivel)
  81+ 8931
  82+ 8931              ; HL está en los datos del nivel correspondiente.
  83+ 8931              ; B actuará como contador de cajas.
  84+ 8931
  85+ 8931 C5           1 push bc
  86+ 8932
  87+ 8932 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8933 CD 56 89     	call PreparaBC
  89+ 8936
  90+ 8936 21 62 88     	ld hl,Indice_de_entidades
  91+ 8939 CD 5E 89     	call SBC_HL_con_BC_y_Extrae
  92+ 893C 22 17 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 893F
  94+ 893F CD 6F 89     	call Datos_de_entidad_a_caja
  95+ 8942
  96+ 8942 2A 0F 8A     	ld hl,(Indice_restore_caja)
  97+ 8945 CD 2E 8D     	call Extrae_address
  98+ 8948 CD 65 89     	call Avanza_caja
  99+ 894B
 100+ 894B 2A 3E 8A     	ld hl,(Datos_de_nivel)
 101+ 894E 23           	inc hl
 102+ 894F 22 3E 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8952
 104+ 8952 C1           	pop bc
 105+ 8953 10 DC        	djnz 1B
 106+ 8955 C9           	ret
 107+ 8956
 108+ 8956 CB 27        PreparaBC sla a
 109+ 8958 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 895A 4F           	ld c,a
 111+ 895B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 895D C9           	ret
 113+ 895E
 114+ 895E A7           SBC_HL_con_BC_y_Extrae and a
 115+ 895F ED 4A        	adc hl,bc
 116+ 8961 CD 2E 8D     	call Extrae_address
 117+ 8964 C9           	ret
 118+ 8965
 119+ 8965 22 0B 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8968 13           	inc de
 121+ 8969 13           	inc de
 122+ 896A EB           	ex de,hl
 123+ 896B 22 0F 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 896E C9           	ret
 125+ 896F
 126+ 896F              Datos_de_entidad_a_caja
 127+ 896F
 128+ 896F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 896F
 130+ 896F
 131+ 896F ED 5B 0B 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8973
 133+ 8973 01 02 00     	ld bc,2
 134+ 8976 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8978
 136+ 8978 01 07 00     	ld bc,7
 137+ 897B CD A3 89     	call Situa_DE
 138+ 897E
 139+ 897E 01 05 00     	ld bc,5
 140+ 8981 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8983
 142+ 8983 01 04 00     	ld bc,4
 143+ 8986 CD A3 89     	call Situa_DE
 144+ 8989
 145+ 8989 01 07 00     	ld bc,7
 146+ 898C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 898E
 148+ 898E 01 18 00     	ld bc,24
 149+ 8991 CD A3 89     	call Situa_DE
 150+ 8994
 151+ 8994 01 02 00     	ld bc,2
 152+ 8997 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8999
 154+ 8999              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8999              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8999
 157+ 8999 01 0E 00     	ld bc,14									; *****
 158+ 899C CD A3 89     	call Situa_DE
 159+ 899F
 160+ 899F 3E 03        	ld a,3
 161+ 89A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A2
 163+ 89A2 C9           	ret
 164+ 89A3
 165+ 89A3 EB           Situa_DE ex de,hl
 166+ 89A4 A7           	and a
 167+ 89A5 ED 4A        	adc hl,bc
 168+ 89A7 EB           	ex de,hl
 169+ 89A8 C9           	ret
 170+ 89A9
 171+ 89A9              ;---------------------------------------------------------------------------------------------------------------
 172+ 89A9              ;
 173+ 89A9              ;	21/5/23
 174+ 89A9              ;
 175+ 89A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89A9              ;
 178+ 89A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89A9              ;
 182+ 89A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89A9              ;	MODIFICA: A y B.
 184+ 89A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89A9
 186+ 89A9              Admin_num_entidades
 187+ 89A9
 188+ 89A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89A9
 190+ 89A9 3A 11 8A     	ld a,(Numero_de_entidades)
 191+ 89AC A7           	and a
 192+ 89AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89AD              ;	jr z,$
 194+ 89AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89AD
 196+ 89AD 20 03        	jr nz,3F
 197+ 89AF
 198+ 89AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89AF
 200+ 89AF CD 10 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B2
 202+ 89B2
 203+ 89B2 3A 11 8A     3 ld a,(Numero_de_entidades)
 204+ 89B5 FE 0A        	cp 10
 205+ 89B7 38 08        	jr c,1F
 206+ 89B9
 207+ 89B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89B9              ; Actualizamos variables.
 209+ 89B9
 210+ 89B9 3E 0A        	ld a,10
 211+ 89BB 32 12 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89BE 47           	ld b,a
 213+ 89BF 18 04        	jr 2F
 214+ 89C1
 215+ 89C1              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C1              ; (Numero_de_entidades)="0".
 217+ 89C1
 218+ 89C1 32 12 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89C4 47           	ld b,a
 220+ 89C5 C9           2 ret
# file closed: Niveles.asm
  29  89C6
  30  89C6              ; ******************************************************************************************************************************************************************************************
  31  89C6              ; Constantes.
  32  89C6              ; ******************************************************************************************************************************************************************************************
  33  89C6              ;
  34  89C6              ; 25/05/23
  35  89C6              ;
  36  89C6              ; Constantes generales.
  37  89C6              ;
  38  89C6
  39  89C6              Sprite_vacio equ $f000
  40  89C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89C6
  45  89C6              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89C6              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89C6              ;                               				        ; De momento situamos este almacén en $7060.
  51  89C6
  52  89C6              ; ******************************************************************************************************************************************************************************************
  53  89C6              ; Variables.
  54  89C6              ; ******************************************************************************************************************************************************************************************
  55  89C6              ;
  56  89C6              ; 01/07/23
  57  89C6              ;
  58  89C6              ; Variables de DRAW. (Motor principal).
  59  89C6              ;
  60  89C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  61  89C6
  62  89C6 00           Filas db 0												; Filas. [DRAW]
  63  89C7 00           Columns db 0  											; Nº de columnas. [DRAW]
  64  89C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  65  89CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  66  89CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  67  89CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  68  89CE
  69  89CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  70  89CE
  71  89CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  72  89CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  73  89CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  74  89CF 00           Attr db 0												; Atributos de la entidad:
  75  89D0
  76  89D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  77  89D0              ;
  78  89D0              ;	COLORES: 0 ..... NEGRO
  79  89D0              ;    		 1 ..... AZUL
  80  89D0              ; 			 2 ..... ROJO
  81  89D0              ;			 3 ..... MAGENTA
  82  89D0              ; 			 4 ..... VERDE
  83  89D0              ; 			 5 ..... CIAN
  84  89D0              ;			 6 ..... AMARILLO
  85  89D0              ; 			 7 ..... BLANCO
  86  89D0
  87  89D0 00 00        Indice_Sprite_der defw 0
  88  89D2 00 00        Indice_Sprite_izq defw 0
  89  89D4 00 00        Puntero_DESPLZ_der defw 0
  90  89D6 00 00        Puntero_DESPLZ_izq defw 0
  91  89D8
  92  89D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  93  89DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  94  89DB
  95  89DB              ; Variables de objeto. (Características).
  96  89DB
  97  89DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  98  89DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  99  89DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 100  89DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 101  89DF
 102  89DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 103  89E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 104  89E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 105  89E0
 106  89E0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  89E2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  89E4 00 00        	defw 0
 109  89E6 00 00 00 00  	db 0,0,0,0
 110  89EA
 111  89EA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 112  89EC 00 00        	defw 0
 113  89EE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 114  89F0 00 00 00 00  	db 0,0,0,0
 115  89F4
 116  89F4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 117  89F4
 118  89F4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 119  89F5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 120  89F5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 121  89F5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 122  89F5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 123  89F5              ;
 124  89F5              ; 														DESCRIPCIÖN:
 125  89F5              ;
 126  89F5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 127  89F5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 128  89F5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 129  89F5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 130  89F5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 131  89F5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 132  89F5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 133  89F5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 134  89F5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 135  89F5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 136  89F5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 137  89F5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 138  89F5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 139  89F5              ;
 140  89F5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 141  89F5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 142  89F5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 143  89F5
 144  89F5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 145  89F6
 146  89F6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 147  89F6
 148  89F6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 149  89F7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 150  89F9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 151  89FB 00 00        Puntero_indice_mov_bucle defw 0							;
 152  89FD              ;
 153  89FD              ;
 154  89FD 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 155  89FE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 156  89FE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 157  89FE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 158  89FF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 159  89FF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 160  8A00 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 161  8A01 00           Cola_de_desplazamiento db 0								; Este byte indica:
 162  8A02              ;
 163  8A02              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 164  8A02              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 165  8A02              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 166  8A02              ;
 167  8A02              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 168  8A02              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 169  8A02              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 170  8A02              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 171  8A02              ;
 172  8A02              ;														;	"$ff" ..... Bucle infinito de repetición.
 173  8A02              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 174  8A02              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 175  8A02
 176  8A02
 177  8A02              ; Variables de funcionamiento. [DRAW].
 178  8A02
 179  8A02 00           Columnas db 0
 180  8A03 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 181  8A05              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 182  8A05 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 183  8A06
 184  8A06              ; variables de control general.
 185  8A06
 186  8A06 00           Ctrl_2 db 0
 187  8A07              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 188  8A07              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 189  8A07              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 190  8A07              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 191  8A07              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 192  8A07              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 193  8A07              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 194  8A07              ;
 195  8A07              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 196  8A07              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 197  8A07              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 198  8A07              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 199  8A07              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 200  8A07
 201  8A07 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 202  8A08
 203  8A08              ;! 66 Bytes por entidad.
 204  8A08
 205  8A08              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 206  8A08              ;					         		---------;      ;---------
 207  8A08
 208  8A08
 209  8A08              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 210  8A08
 211  8A08 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 212  8A09
 213  8A09              ;														DESCRIPCIÓN:
 214  8A09              ;
 215  8A09              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 216  8A09              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 217  8A09              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 218  8A09              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 219  8A09              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 220  8A09              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 221  8A09              ;														BIT 3, Recarga de nueva oleada.
 222  8A09              ;														BIT 4, Recarga de nueva oleada.
 223  8A09
 224  8A09 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 225  8A0B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 226  8A0B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 227  8A0B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 228  8A0B
 229  8A0B
 230  8A0B
 231  8A0B              ; Gestión de ENTIDADES y CAJAS.
 232  8A0B
 233  8A0B 00 00        Puntero_store_caja defw 0
 234  8A0D 00 00        Puntero_restore_caja defw 0
 235  8A0F 00 00        Indice_restore_caja defw 0
 236  8A11 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 237  8A12 00           Numero_parcial_de_entidades db 0
 238  8A13 00           Entidades_en_curso db 0									; ..... ..... .....
 239  8A14 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 240  8A15              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 241  8A15              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 242  8A15              ;														; _ (Numero_de_malotes)="0".
 243  8A15 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 244  8A17 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 245  8A19              ;														; _ puntero (Indice_entidades).
 246  8A19
 247  8A19
 248  8A19              ;---------------------------------------------------------------------------------------------------------------
 249  8A19              ;
 250  8A19              ; Sirven para PINTAR.
 251  8A19
 252  8A19 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 253  8A1B              ;														; _variable para almacenar lo posición del puntero_
 254  8A1B              ; 														; _de pila, SP.
 255  8A1B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 256  8A1D              ;														; La utiliza la rutina [Extrae_foto_registros].
 257  8A1D 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 258  8A1F              ;														; _el snapshot de los registros de la siguiente entidad.
 259  8A1F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 260  8A1F 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 261  8A21              ;														; _el snapshot de los registros del siguiente disparo.
 262  8A21              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 263  8A21
 264  8A21              ;---------------------------------------------------------------------------------------------------------------
 265  8A21
 266  8A21              ; Gestión de Disparos.
 267  8A21
 268  8A21 00           Numero_de_disparotes db 0
 269  8A22 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 270  8A24 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 271  8A26 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 272  8A27              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 273  8A27              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 274  8A27 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 275  8A29              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 276  8A29              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 277  8A29              ;														; _produzca colisión.
 278  8A29 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 279  8A2B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 280  8A2B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 281  8A2E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 282  8A2E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 283  8A31              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 284  8A31              ;---------------------------------------------------------------------------------------------------------------
 285  8A31
 286  8A31              ; Relojes y temporizaciones.
 287  8A31
 288  8A31 00           Contador_de_frames db 0
 289  8A32 04           Clock_explosion db 4
 290  8A33 1E           Clock_Entidades_en_curso db 30
 291  8A34 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 292  8A35              ;														; Repite la oleada de entidades.
 293  8A35 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 294  8A36 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 295  8A37 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 296  8A38
 297  8A38 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 298  8A39 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 299  8A3A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 300  8A3B
 301  8A3B              ;---------------------------------------------------------------------------------------------------------------
 302  8A3B
 303  8A3B              ; Gestión de NIVELES.
 304  8A3B
 305  8A3B 00           Nivel db 0												; Nivel actual del juego.
 306  8A3C 00 00        Puntero_indice_NIVELES defw 0
 307  8A3E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 308  8A40              ; 														; _ que definen el NIVEL.
 309  8A40              ; Y todo comienza aquí .....
 310  8A40              ;
 311  8A40              ; Rutina principal *************************************************************************************************************************************************************************
 312  8A40              ;
 313  8A40              ;	14/11/22
 314  8A40
 315  8A40              START
 316  8A40
 317  8A40 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 318  8A43 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 319  8A45 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 320  8A47 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 321  8A49 F3           	DI
 322  8A4A
 323  8A4A 3E 07        	ld a,%00000111
 324  8A4C CD 03 99     	call Cls
 325  8A4F
 326  8A4F              ;	call Pinta_marco
 327  8A4F
 328  8A4F CD 10 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 329  8A52
 330  8A52 CD 07 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 331  8A55
 332  8A55 CD 22 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 333  8A58
 334  8A58 CD DA 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 335  8A5B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 336  8A5B CD B7 8D     	call Restore_entidad
 337  8A5E
 338  8A5E 21 12 8A     	ld hl,Numero_parcial_de_entidades
 339  8A61 46           	ld b,(hl)
 340  8A62 04           	inc b
 341  8A63 05           	dec b
 342  8A64 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 343  8A66
 344  8A66              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 345  8A66              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 346  8A66              ;	Pintamos el resto de entidades:
 347  8A66
 348  8A66              ;	INICIA ENTIDADES !!!!!
 349  8A66
 350  8A66 C5           1 push bc  												; Guardo el contador de entidades.
 351  8A67
 352  8A67 CD D1 8A     	call Inicia_entidad
 353  8A6A
 354  8A6A C1           	pop bc
 355  8A6B 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 356  8A6D
 357  8A6D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 358  8A6D              ; (Esto se dá cuando se inicia una nueva oleada).
 359  8A6D
 360  8A6D 3A 08 8A     	ld a,(Ctrl_1)
 361  8A70 CB 5F        	bit 3,a
 362  8A72 20 18        	jr nz,5F											; Loop
 363  8A74
 364  8A74              ; 	INICIA AMADEUS !!!!!
 365  8A74
 366  8A74 CD DE 8D     3 call Restore_Amadeus
 367  8A77 CD 34 8D     	call Inicia_Puntero_objeto
 368  8A7A CD 53 93     	call Draw
 369  8A7D CD A0 7F     	call Guarda_foto_registros
 370  8A80 11 8C 85     	ld de,Amadeus_db
 371  8A83 CD F0 8D     	call Store_Amadeus
 372  8A86
 373  8A86              ; 	INICIA DISPAROS !!!!!
 374  8A86
 375  8A86 CD F0 8C     	call Inicia_Puntero_Disparo_Entidades
 376  8A89 CD F7 8C     	call Inicia_Puntero_Disparo_Amadeus
 377  8A8C
 378  8A8C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 379  8A8C
 380  8A8C CD DA 8C     5 call Inicia_punteros_de_cajas
 381  8A8F CD B7 8D     	call Restore_entidad
 382  8A92
 383  8A92 3A 08 8A     	ld a,(Ctrl_1)
 384  8A95 CB 5F        	bit 3,a
 385  8A97 28 0A        	jr z,6F
 386  8A99
 387  8A99              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 388  8A99
 389  8A99 21 08 8A     	ld hl,Ctrl_1
 390  8A9C CB 9E        	res 3,(hl)
 391  8A9E CD FE 8C     	call Calcula_numero_de_malotes
 392  8AA1 18 07        	jr 7F
 393  8AA3
 394  8AA3              ; ----------
 395  8AA3
 396  8AA3 3A 12 8A     6 ld a,(Numero_parcial_de_entidades)
 397  8AA6 3C           	inc a
 398  8AA7 32 14 8A     	ld (Numero_de_malotes),a
 399  8AAA
 400  8AAA AF           7 xor a
 401  8AAB FB           2 ei
 402  8AAC 28 FD        	jr z,2B
 403  8AAE
 404  8AAE 3A 31 8A     	ld a,(Contador_de_frames)
 405  8AB1 47           	ld b,a
 406  8AB2 3A 34 8A     	ld a,(Activa_recarga_cajas)
 407  8AB5 B8           	cp b
 408  8AB6 28 08        	jr z,8F
 409  8AB8
 410  8AB8 21 08 8A     	ld hl,Ctrl_1
 411  8ABB CB E6        	set 4,(hl)
 412  8ABD AF           	xor a
 413  8ABE 18 EB        	jr 2B
 414  8AC0
 415  8AC0 21 08 8A     8 ld hl,Ctrl_1
 416  8AC3 CB A6        	res 4,(hl)
 417  8AC5 F3           	di
 418  8AC6
 419  8AC6 3A 31 8A     	ld a,(Contador_de_frames)
 420  8AC9
 421  8AC9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 422  8AC9              ;! _ IMPREDECIBLE !!!!
 423  8AC9
 424  8AC9 C6 0A        	add 10
 425  8ACB 32 33 8A     	ld (Clock_Entidades_en_curso),a
 426  8ACE
 427  8ACE C3 55 8A     	jp 4B
 428  8AD1
 429  8AD1              ; -----------------------------------------------------------------------------------
 430  8AD1
 431  8AD1 CD 34 8D     Inicia_entidad	call Inicia_Puntero_objeto
 432  8AD4 CD 17 99     	call Recompone_posicion_inicio
 433  8AD7 CD 53 93     	call Draw
 434  8ADA CD A0 7F     	call Guarda_foto_registros
 435  8ADD CD 7C 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 436  8AE0 C9           	ret
 437  8AE1
 438  8AE1              ; -----------------------------------------------------------------------------------
 439  8AE1
 440  8AE1              Frame
 441  8AE1
 442  8AE1              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 443  8AE1              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 444  8AE1
 445  8AE1              ; PINTAMOS.
 446  8AE1
 447  8AE1 3E 02            ld a,2
 448  8AE3 D3 FE            out ($fe),a
 449  8AE5 CD 57 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 450  8AE8 CD 90 96     	call Extrae_foto_disparos
 451  8AEB 3E 01            ld a,1
 452  8AED D3 FE            out ($fe),a
 453  8AEF
 454  8AEF              ; ----------------------------------------------------------------------
 455  8AEF
 456  8AEF              ; RELOJES.
 457  8AEF
 458  8AEF 21 31 8A     	ld hl,Contador_de_frames
 459  8AF2 34           	inc (hl)											; 0 - 255
 460  8AF3
 461  8AF3 3A 33 8A     	ld a,(Clock_Entidades_en_curso)
 462  8AF6 47           	ld b,a
 463  8AF7 3A 31 8A     	ld a,(Contador_de_frames)
 464  8AFA B8           	cp b
 465  8AFB 20 18        	jr nz,13F
 466  8AFD
 467  8AFD 3A 12 8A     	ld a,(Numero_parcial_de_entidades)
 468  8B00 47           	ld b,a
 469  8B01 3A 13 8A     	ld a,(Entidades_en_curso)
 470  8B04 B8           	cp b
 471  8B05 28 0E        	jr z,13F
 472  8B07 30 0C        	jr nc,13F
 473  8B09
 474  8B09 3C           	inc a
 475  8B0A 32 13 8A     	ld (Entidades_en_curso),a
 476  8B0D
 477  8B0D 3A 33 8A     	ld a,(Clock_Entidades_en_curso)
 478  8B10
 479  8B10              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 480  8B10              ;! _ IMPREDECIBLE !!!!
 481  8B10
 482  8B10 C6 64        	add 100
 483  8B12 32 33 8A     	ld (Clock_Entidades_en_curso),a
 484  8B15
 485  8B15              ; Habilita disparos.
 486  8B15
 487  8B15 21 35 8A     13 ld hl,Disparo_Amadeus
 488  8B18 11 37 8A     	ld de,CLOCK_repone_disparo_Amadeus
 489  8B1B CD 29 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 490  8B1E
 491  8B1E 21 38 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 492  8B21 11 3A 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 493  8B24 CD 29 9F     	call Habilita_disparos
 494  8B27
 495  8B27              ; COLISIONES.
 496  8B27
 497  8B27 CD 35 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 498  8B2A
 499  8B2A              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 500  8B2A              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 501  8B2A              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 502  8B2A
 503  8B2A AF           	xor a
 504  8B2B 32 26 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 505  8B2E
 506  8B2E CD DA 8C     	call Inicia_punteros_de_cajas
 507  8B31 CD B7 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 508  8B34              ; 														; _ en DRAW.
 509  8B34 3A C6 89     	ld a,(Filas)
 510  8B37 A7           	and a
 511  8B38 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 512  8B3A CD C9 8D     	call Incrementa_punteros_de_cajas
 513  8B3D 18 F2        	jr 12B
 514  8B3F
 515  8B3F              ; ---------------------------------------------------------------------------------------
 516  8B3F
 517  8B3F CD 90 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 518  8B42 21 00 70     	ld hl,Album_de_fotos
 519  8B45 22 1D 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 520  8B48              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 521  8B48 3A 12 8A     	ld a,(Numero_parcial_de_entidades)
 522  8B4B 47               ld b,a
 523  8B4C A7           	and a
 524  8B4D 20 14        	jr nz,2F
 525  8B4F
 526  8B4F 21 08 8A     	ld hl,Ctrl_1
 527  8B52 CB 66        	bit 4,(hl)
 528  8B54 C2 E0 8B     	jp nz,4F
 529  8B57
 530  8B57 21 08 8A     	ld hl,Ctrl_1
 531  8B5A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 532  8B5C
 533  8B5C 3A 31 8A     	ld a,(Contador_de_frames)
 534  8B5F 3C           	inc a
 535  8B60 32 34 8A     	ld (Activa_recarga_cajas),a
 536  8B63
 537  8B63              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 538  8B63
 539  8B63 3A 13 8A     2 ld a,(Entidades_en_curso)
 540  8B66 A7           	and a
 541  8B67 CA E0 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 542  8B6A 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 543  8B6B
 544  8B6B              ; Código que ejecutamos con cada entidad:
 545  8B6B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 546  8B6B
 547  8B6B C5           15 push bc 												; Nº de entidades en curso.
 548  8B6C
 549  8B6C              ; Impacto ???
 550  8B6C
 551  8B6C 3A DF 89     33 ld a,(Impacto)
 552  8B6F A7           	and a
 553  8B70 28 2D        	jr z,8F
 554  8B72
 555  8B72              ; Hay Impacto en esta entidad.
 556  8B72
 557  8B72 21 32 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 558  8B75 35           	dec (hl)
 559  8B76 20 62        	jr nz,6F
 560  8B78
 561  8B78              ;! Velocidad de la animación de la explosión.
 562  8B78
 563  8B78 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 564  8B7A              ;														; _,(velocidad de la explosión).
 565  8B7A CD 91 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 566  8B7D
 567  8B7D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 568  8B7D
 569  8B7D 3A 06 8A     	ld a,(Ctrl_2)
 570  8B80 CB 4F        	bit 1,a
 571  8B82 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 572  8B84
 573  8B84              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 574  8B84
 575  8B84 3A CE 89     	ld a,(CTRL_DESPLZ)
 576  8B87 A7           	and a
 577  8B88 20 08        	jr nz,21F
 578  8B8A
 579  8B8A 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 580  8B8D 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 581  8B90 18 06        	jr 22F
 582  8B92
 583  8B92 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 584  8B95 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 585  8B98
 586  8B98 21 06 8A     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 587  8B9B CB CE        	set 1,(hl)
 588  8B9D 18 22        	jr 7F
 589  8B9F
 590  8B9F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 591  8B9F              ; _con las coordenadas de la entidad almacenada en DRAW.
 592  8B9F
 593  8B9F 3A 08 8A     8 ld a,(Ctrl_1)
 594  8BA2 CB 57        	bit 2,a
 595  8BA4 28 1B        	jr z,7F
 596  8BA6
 597  8BA6 2A 29 8A     	ld hl,(Coordenadas_disparo_certero)
 598  8BA9 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 599  8BAA              ;														; E contiene la coordenada_X del disparo.
 600  8BAA 2A CC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 601  8BAD              ;														; H FILA, (Coordenada_y de la entidad).
 602  8BAD A7           	and a
 603  8BAE ED 52        	sbc hl,de
 604  8BB0
 605  8BB0 CD 6C 92     	call Determina_resultado_comparativa
 606  8BB3
 607  8BB3              ;! Debug colisiones
 608  8BB3 78           	ld a,b
 609  8BB4 A7           	and a
 610  8BB5              ;	ld a,(Cuad_objeto)
 611  8BB5              ;	inc b
 612  8BB5              ;	dec b
 613  8BB5 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 614  8BB7              ;	jr z,$
 615  8BB7
 616  8BB7              ;! Debug colisiones
 617  8BB7
 618  8BB7              ; ----- ----- -----
 619  8BB7
 620  8BB7 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 621  8BB9 32 DF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 622  8BBC
 623  8BBC 21 08 8A     	ld hl,Ctrl_1
 624  8BBF CB 96        	res 2,(hl)
 625  8BC1
 626  8BC1 CD 13 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 627  8BC4
 628  8BC4 3A F4 89     	ld a,(Ctrl_0)
 629  8BC7 CB 67        	bit 4,a
 630  8BC9 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 631  8BCB
 632  8BCB              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 633  8BCB              ; [[[
 634  8BCB CD 52 8E     	call Detecta_disparo_entidad
 635  8BCE              ; ]]]
 636  8BCE CD A1 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 637  8BD1
 638  8BD1 21 F4 89     	ld hl,Ctrl_0
 639  8BD4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 640  8BD6 AF           	xor a
 641  8BD7 32 F5 89     	ld (Obj_dibujado),a
 642  8BDA
 643  8BDA
 644  8BDA
 645  8BDA CD 7C 8D     6 call Store_Restore_cajas
 646  8BDD
 647  8BDD C1           	pop bc
 648  8BDE 10 8B        	djnz 15B
 649  8BE0
 650  8BE0              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 651  8BE0
 652  8BE0              ;	ld a,2
 653  8BE0              ;	ld (Limitador_de_entidades_x_frame),a
 654  8BE0
 655  8BE0              ; ------------------------------------
 656  8BE0              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 657  8BE0              ; Hemos gestionado todas las unidades.
 658  8BE0              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 659  8BE0
 660  8BE0              ;	ld hl,Ctrl_1
 661  8BE0              ;	res 2,(hl)
 662  8BE0
 663  8BE0              ; ------------------------------------
 664  8BE0
 665  8BE0              ; Tras la gestión de las entidades, ... AMADEUS.
 666  8BE0
 667  8BE0 CD DE 8D     4 call Restore_Amadeus
 668  8BE3
 669  8BE3 3A DF 89     	ld a,(Impacto)
 670  8BE6 A7           	and a
 671  8BE7 20 FE        	jr nz,$
 672  8BE9
 673  8BE9 CD 72 8C     	call Mov_Amadeus
 674  8BEC
 675  8BEC 3A F4 89     	ld a,(Ctrl_0)
 676  8BEF CB 67        	bit 4,a
 677  8BF1 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 678  8BF3
 679  8BF3 CD A1 8C     	call Guarda_foto_entidad_a_pintar
 680  8BF6
 681  8BF6 21 F4 89     3 ld hl,Ctrl_0
 682  8BF9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 683  8BFB AF           	xor a
 684  8BFC 32 F5 89     	ld (Obj_dibujado),a
 685  8BFF
 686  8BFF 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 687  8C02 CD F0 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 688  8C05
 689  8C05 CD AE 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 690  8C08
 691  8C08              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 692  8C08
 693  8C08 CD 16 8D     	call Calcula_numero_de_disparotes
 694  8C0B CD FE 8C     9 call Calcula_numero_de_malotes
 695  8C0E
 696  8C0E 3E 04        	ld a,4
 697  8C10 D3 FE        	out ($fe),a
 698  8C12
 699  8C12 C9           	ret
 700  8C13
 701  8C13              ; --------------------------------------------------------------------------------------------------------------
 702  8C13              ;
 703  8C13              ;	27/05/23
 704  8C13
 705  8C13              Mov_obj
 706  8C13
 707  8C13              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 708  8C13
 709  8C13 3A 06 8A     	ld a,(Ctrl_2)
 710  8C16 CB 4F        	bit 1,a
 711  8C18 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 712  8C1A
 713  8C1A              ; Explosión:
 714  8C1A
 715  8C1A 3A 07 8A     	ld a,(Frames_explosion)
 716  8C1D A7           	and a
 717  8C1E 20 11        	jr nz,4F
 718  8C20
 719  8C20              ; Una alimaña menos!!!!!!!!!1
 720  8C20
 721  8C20 CD F9 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 722  8C23 21 12 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 723  8C26 35           	dec (hl)
 724  8C27 21 13 8A     	ld hl,Entidades_en_curso
 725  8C2A 35           	dec (hl)
 726  8C2B 21 11 8A     	ld hl,Numero_de_entidades
 727  8C2E 35           	dec (hl)
 728  8C2F 18 40        	jr 3F
 729  8C31
 730  8C31              ; -----
 731  8C31
 732  8C31              ;	`Movemos´ la explosión.
 733  8C31
 734  8C31 2A D4 89     4 ld hl,(Puntero_DESPLZ_der)
 735  8C34 23           	inc hl
 736  8C35 23           	inc hl
 737  8C36 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 738  8C39 CD 2E 8D     	call Extrae_address
 739  8C3C 22 CA 89     	ld (Puntero_objeto),hl
 740  8C3F
 741  8C3F 21 07 8A     	ld hl,Frames_explosion
 742  8C42 35           	dec (hl)
 743  8C43
 744  8C43 CD 91 8C     	call Guarda_foto_entidad_a_borrar
 745  8C46 18 29        	jr 3F
 746  8C48
 747  8C48 AF           2 xor a
 748  8C49 32 F5 89     	ld (Obj_dibujado),a
 749  8C4C 32 F4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 750  8C4F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 751  8C4F              ; 														; _de la entidad.
 752  8C4F CD AB 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 753  8C52              ;														; Obj_dibujado="0".
 754  8C52              ; Movemos Entidades malignas.
 755  8C52
 756  8C52              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 757  8C52              ;	and a 												; _a movernos. (Limitador_de_entidades).
 758  8C52              ;	ret z
 759  8C52
 760  8C52 CD D7 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 761  8C55
 762  8C55 3A F4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 763  8C58 CB 67        	bit 4,a
 764  8C5A C8           	ret z
 765  8C5B
 766  8C5B              ; Ha habido desplazamiento de la entidad maligna.
 767  8C5B              ; Ha llegado a zona de AMADEUS ???
 768  8C5B
 769  8C5B 3A CD 89     	ld a,(Coordenada_y)
 770  8C5E FE 14        	cp $14
 771  8C60 D4 DF 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 772  8C63              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 773  8C63              ; ---------
 774  8C63
 775  8C63 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 776  8C65 32 F5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 777  8C68 CD AB 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 778  8C6B CD C2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 779  8C6E CD 91 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 780  8C71 C9           3 ret													; _de la misma.
 781  8C72
 782  8C72              ; --------------------------------------------------------------------------------------------------------------
 783  8C72              ;
 784  8C72              ;	29/1/23
 785  8C72
 786  8C72              Mov_Amadeus
 787  8C72
 788  8C72 AF           	xor a
 789  8C73 32 F5 89     	ld (Obj_dibujado),a
 790  8C76 CD AB 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 791  8C79              ;														; Obj_dibujado="0".
 792  8C79              ; Movemos Amadeus.
 793  8C79
 794  8C79 CD 1B 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 795  8C7C 3A F4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 796  8C7F CB 67        	bit 4,a
 797  8C81 C8           	ret z
 798  8C82
 799  8C82              ; ---------
 800  8C82
 801  8C82 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 802  8C84 32 F5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 803  8C87 CD AB 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 804  8C8A CD C2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 805  8C8D CD 91 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 806  8C90 C9           	ret													; _de la nave.
 807  8C91
 808  8C91              ; --------------------------------------------------------------------------------------------------------------
 809  8C91              ;
 810  8C91              ;	31/01/23
 811  8C91              ;
 812  8C91              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 813  8C91
 814  8C91              Guarda_foto_entidad_a_borrar
 815  8C91
 816  8C91 CD 2D 96     	call Prepara_draw
 817  8C94 CD 67 95     	call calcula_CColumnass
 818  8C97 CD 9E 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 819  8C9A CD F3 95     	call Define_rutina_de_impresion
 820  8C9D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 821  8CA0 C9           	ret
 822  8CA1
 823  8CA1              ; --------------------------------------------------------------------------------------------------------------
 824  8CA1              ;
 825  8CA1              ;	31/01/23
 826  8CA1              ;
 827  8CA1              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 828  8CA1              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 829  8CA1
 830  8CA1              Guarda_foto_entidad_a_pintar
 831  8CA1
 832  8CA1 CD CE 8C     	call Repone_pintar
 833  8CA4 CD 53 93     	call Draw
 834  8CA7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 835  8CAA C9           	ret
 836  8CAB
 837  8CAB              ; --------------------------------------------------------------------------------------------------------------
 838  8CAB              ;
 839  8CAB              ;
 840  8CAB
 841  8CAB 21 C6 89     Prepara_var_pintado_borrado	ld hl,Filas
 842  8CAE 3A F5 89     	ld a,(Obj_dibujado)
 843  8CB1 A7           	and a
 844  8CB2 28 05        	jr z,1F
 845  8CB4 11 EA 89     	ld de,Variables_de_pintado
 846  8CB7 18 03        	jr 2F
 847  8CB9 11 E0 89     1 ld de,Variables_de_borrado
 848  8CBC 01 08 00     2 ld bc,8
 849  8CBF ED B0        	ldir
 850  8CC1 C9           	ret
 851  8CC2
 852  8CC2              ; --------------------------------------------------------------------------------------------------------------
 853  8CC2
 854  8CC2 21 E0 89     Repone_borrar ld hl,Variables_de_borrado
 855  8CC5 11 C6 89     	ld de,Filas
 856  8CC8 01 08 00     	ld bc,8
 857  8CCB ED B0        	ldir
 858  8CCD C9           	ret
 859  8CCE
 860  8CCE 21 EA 89     Repone_pintar ld hl,Variables_de_pintado
 861  8CD1 11 C6 89     	ld de,Filas
 862  8CD4 01 08 00     	ld bc,8
 863  8CD7 ED B0        	ldir
 864  8CD9 C9           	ret
 865  8CDA
 866  8CDA              ; *************************************************************************************************************************************************************
 867  8CDA              ;
 868  8CDA              ; 8/1/23
 869  8CDA              ;
 870  8CDA              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 871  8CDA              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 872  8CDA              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 873  8CDA
 874  8CDA              ; Destruye HL y DE !!!!!
 875  8CDA
 876  8CDA              Inicia_punteros_de_cajas
 877  8CDA
 878  8CDA 21 74 85     	ld hl,Indice_de_cajas
 879  8CDD CD 2E 8D         call Extrae_address
 880  8CE0 22 0B 8A         ld (Puntero_store_caja),hl
 881  8CE3 21 76 85     	ld hl,Indice_de_cajas+2
 882  8CE6 22 0F 8A     	ld (Indice_restore_caja),hl
 883  8CE9 CD 2E 8D     	call Extrae_address
 884  8CEC 22 0D 8A     	ld (Puntero_restore_caja),hl
 885  8CEF C9               ret
 886  8CF0
 887  8CF0              ; *************************************************************************************************************************************************************
 888  8CF0              ;
 889  8CF0              ; 8/1/23
 890  8CF0              ;
 891  8CF0              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 892  8CF0
 893  8CF0 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 894  8CF3 22 22 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 895  8CF6 C9           	ret
 896  8CF7 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 897  8CFA 22 24 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 898  8CFD C9           	ret
 899  8CFE
 900  8CFE              ; -------------------------------------------------------------------------------------------------------------
 901  8CFE              ;
 902  8CFE              ; 28/2/23
 903  8CFE              ;
 904  8CFE
 905  8CFE              Calcula_numero_de_malotes
 906  8CFE
 907  8CFE 21 00 70     	ld hl,Album_de_fotos
 908  8D01 EB           	ex de,hl
 909  8D02 2A 1D 8A     	ld hl,(Stack_snapshot)
 910  8D05
 911  8D05 06 00        	ld b,0
 912  8D07 7D           	ld a,l
 913  8D08 93           	sub e
 914  8D09 28 07        	jr z,1F
 915  8D0B
 916  8D0B              ; Nº de malotes no es "0".
 917  8D0B
 918  8D0B D6 06        2 sub 6
 919  8D0D 04           	inc b
 920  8D0E A7           	and a
 921  8D0F 20 FA        	jr nz,2B
 922  8D11 78           	ld a,b
 923  8D12
 924  8D12 32 14 8A     1 ld (Numero_de_malotes),a
 925  8D15 C9           	ret
 926  8D16
 927  8D16              ; -------------------------------------------------------------------------------------------------------------
 928  8D16              ;
 929  8D16              ; 28/2/23
 930  8D16              ;
 931  8D16
 932  8D16              Calcula_numero_de_disparotes
 933  8D16
 934  8D16 21 85 70     	ld hl,Album_de_fotos_disparos
 935  8D19 EB           	ex de,hl
 936  8D1A 2A 1F 8A     	ld hl,(Stack_snapshot_disparos)
 937  8D1D
 938  8D1D 06 00        	ld b,0
 939  8D1F 7D           	ld a,l
 940  8D20 93           	sub e
 941  8D21 28 07        	jr z,1F
 942  8D23
 943  8D23              ; Nº de malotes no es "0".
 944  8D23
 945  8D23 D6 06        2 sub 6
 946  8D25 04           	inc b
 947  8D26 A7           	and a
 948  8D27 20 FA        	jr nz,2B
 949  8D29 78           	ld a,b
 950  8D2A
 951  8D2A 32 21 8A     1 ld (Numero_de_disparotes),a
 952  8D2D C9           	ret
 953  8D2E              ; *************************************************************************************************************************************************************
 954  8D2E              ;
 955  8D2E              ; 20/10/22
 956  8D2E              ;
 957  8D2E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 958  8D2E              ;
 959  8D2E              ; Destruye el puntero y DE !!!!!
 960  8D2E
 961  8D2E 5E           Extrae_address ld e,(hl)
 962  8D2F 23           	inc hl
 963  8D30 56           	ld d,(hl)
 964  8D31 2B           	dec hl
 965  8D32 EB           	ex de,hl
 966  8D33 C9           	ret
 967  8D34
 968  8D34              ; *************************************************************************************************************************************************************
 969  8D34              ;
 970  8D34              ;	7/2/23
 971  8D34              ;
 972  8D34              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 973  8D34              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 974  8D34              ;
 975  8D34              ;   Destruye HL y BC !!!!!,
 976  8D34              ;
 977  8D34              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 978  8D34              ;					"0" ..... Izquierda.
 979  8D34
 980  8D34              Inicia_Puntero_objeto
 981  8D34
 982  8D34 3A DA 89     	ld a,(Cuad_objeto)
 983  8D37 E6 01        	and 1
 984  8D39 F5           	push af
 985  8D3A CC 58 8D     	call z,Inicia_puntero_objeto_izq
 986  8D3D F1           	pop af
 987  8D3E 28 2B        	jr z,1F
 988  8D40 CD 45 8D     	call Inicia_puntero_objeto_der
 989  8D43 18 26        	jr 1F
 990  8D45
 991  8D45              ; Arrancamos desde la parte izquierda de la pantalla.
 992  8D45              ; Iniciamos (Indice_Sprite_der).
 993  8D45
 994  8D45 2A D0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 995  8D48 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 996  8D4B CD 2E 8D     	call Extrae_address
 997  8D4E 22 CA 89     	ld (Puntero_objeto),hl
 998  8D51
 999  8D51 2A D2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1000  8D54 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
1001  8D57 C9           	ret
1002  8D58
1003  8D58              ; Arrancamos desde la parte derecha de la pantalla.
1004  8D58              ; Iniciamos (Indice_Sprite_izq).
1005  8D58
1006  8D58 2A D2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1007  8D5B 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
1008  8D5E CD 2E 8D     	call Extrae_address
1009  8D61 22 CA 89     	ld (Puntero_objeto),hl
1010  8D64
1011  8D64 2A D0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1012  8D67 22 D4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1013  8D6A C9           	ret
1014  8D6B
1015  8D6B              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1016  8D6B
1017  8D6B 21 48 83     1 ld hl,Amadeus
1018  8D6E ED 4B CA 89  	ld bc,(Puntero_objeto)
1019  8D72 B7 ED 42     	sub hl,bc
1020  8D75 C0           	ret nz
1021  8D76 21 F4 89     	ld hl,Ctrl_0
1022  8D79 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1023  8D7B C9           	ret 												; _de nuestra nave en los extremos.
1024  8D7C
1025  8D7C              ; *************************************************************************************************************************************************************
1026  8D7C              ;
1027  8D7C              ;	14/5/23
1028  8D7C              ;
1029  8D7C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1030  8D7C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1031  8D7C
1032  8D7C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1033  8D7C              ;	_de la 2ª y 3ª entidad respectivamente.
1034  8D7C
1035  8D7C              Store_Restore_cajas
1036  8D7C
1037  8D7C E5           	push hl
1038  8D7D D5           	push de
1039  8D7E C5            	push bc
1040  8D7F
1041  8D7F              ;	STORE !!!!!
1042  8D7F              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1043  8D7F
1044  8D7F 21 C6 89     	ld hl,Filas
1045  8D82 ED 5B 0B 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1046  8D86 01 42 00     	ld bc,66
1047  8D89 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1048  8D8B
1049  8D8B              ; 	Entidad_sospechosa. 20/4/23
1050  8D8B
1051  8D8B 3A DF 89     	ld a,(Impacto)
1052  8D8E A7           	and a
1053  8D8F 28 0C        	jr z,1F
1054  8D91
1055  8D91 2A 0B 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1056  8D94 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1057  8D97 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1058  8D98 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1059  8D9A 22 27 8A     	ld (Entidad_sospechosa_de_colision),hl
1060  8D9D
1061  8D9D              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1062  8D9D
1063  8D9D 2A 0D 8A     1 ld hl,(Puntero_restore_caja)
1064  8DA0 7E           	ld a,(hl)
1065  8DA1 A7           	and a
1066  8DA2 F5           	push af
1067  8DA3 28 08        	jr z,2F
1068  8DA5
1069  8DA5 11 C6 89     	ld de,Filas
1070  8DA8 01 42 00     	ld bc,66
1071  8DAB ED B0        	ldir
1072  8DAD
1073  8DAD CD C9 8D     2 call Incrementa_punteros_de_cajas
1074  8DB0 F1           	pop af
1075  8DB1 28 EA        	jr z,1B
1076  8DB3
1077  8DB3 C1           	pop bc
1078  8DB4 D1           	pop de
1079  8DB5 E1           	pop hl
1080  8DB6
1081  8DB6 C9           	ret
1082  8DB7
1083  8DB7              ; **************************************************************************************************
1084  8DB7              ;
1085  8DB7              ;	12/05/23
1086  8DB7              ;
1087  8DB7              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1088  8DB7
1089  8DB7 E5           Restore_entidad push hl
1090  8DB8 D5           	push de
1091  8DB9 C5            	push bc
1092  8DBA
1093  8DBA 2A 0B 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1094  8DBD 11 C6 89     	ld de,Filas
1095  8DC0 01 42 00     	ld bc,66
1096  8DC3 ED B0        	ldir
1097  8DC5
1098  8DC5 C1           	pop bc
1099  8DC6 D1           	pop de
1100  8DC7 E1           	pop hl
1101  8DC8 C9           	ret
1102  8DC9
1103  8DC9
1104  8DC9              ; **************************************************************************************************
1105  8DC9              ;
1106  8DC9              ;	08/05/23
1107  8DC9              ;
1108  8DC9              ;	Incrementamos los dos punteros de entidades. (+1).
1109  8DC9
1110  8DC9 2A 0D 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1111  8DCC 22 0B 8A     	ld (Puntero_store_caja),hl
1112  8DCF 2A 0F 8A     	ld hl,(Indice_restore_caja)
1113  8DD2 23           	inc hl
1114  8DD3 23           	inc hl
1115  8DD4 22 0F 8A     	ld (Indice_restore_caja),hl
1116  8DD7 CD 2E 8D         call Extrae_address
1117  8DDA 22 0D 8A         ld (Puntero_restore_caja),hl
1118  8DDD C9               ret
1119  8DDE
1120  8DDE              ; **************************************************************************************************
1121  8DDE              ;
1122  8DDE              ;	25/01/23
1123  8DDE              ;
1124  8DDE              ;	Restore_Amadeus
1125  8DDE              ;
1126  8DDE              ;	Cargamos en DRAW los parámetros de Amadeus.
1127  8DDE              ;
1128  8DDE
1129  8DDE E5           Restore_Amadeus	push hl
1130  8DDF D5           	push de
1131  8DE0 C5            	push bc
1132  8DE1 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1133  8DE4 11 C6 89     	ld de,Filas
1134  8DE7 01 42 00     	ld bc,66
1135  8DEA ED B0        	ldir
1136  8DEC C1           	pop bc
1137  8DED D1           	pop de
1138  8DEE E1           	pop hl
1139  8DEF C9           	ret
1140  8DF0
1141  8DF0              ; *************************************************************************************************************************************************************
1142  8DF0              ;
1143  8DF0              ;	29/04/23
1144  8DF0              ;
1145  8DF0              ;	Store_Amadeus
1146  8DF0              ;
1147  8DF0              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1148  8DF0              ;
1149  8DF0              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1150  8DF0              ;
1151  8DF0              ;	DESTRUYE: HL y BC y DE.
1152  8DF0
1153  8DF0 21 C6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1154  8DF3 01 42 00     	ld bc,66
1155  8DF6 ED B0        	ldir
1156  8DF8 C9           	ret
1157  8DF9
1158  8DF9              ; -----------------------------------------------------------
1159  8DF9              ;
1160  8DF9              ;	27/04/23
1161  8DF9              ;
1162  8DF9              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1163  8DF9              ;
1164  8DF9              ;	Destruye: HL,BC,DE,A
1165  8DF9
1166  8DF9 21 C6 89     Borra_datos_entidad ld hl,Filas
1167  8DFC 01 41 00     	ld bc,65
1168  8DFF AF           	xor a
1169  8E00 77           	ld (hl),a
1170  8E01 11 C7 89     	ld de,Filas+1
1171  8E04 ED B0        	ldir
1172  8E06 C9           	ret
1173  8E07
1174  8E07              ; -----------------------------------------------------------
1175  8E07
1176  8E07              ; Teclado.
1177  8E07
1178  8E07 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1179  8E09 DB FE        	in a,($fe)
1180  8E0B E6 01        	and $01
1181  8E0D 28 02        	jr z,1f
1182  8E0F 18 F6        	jr Pulsa_ENTER
1183  8E11 C9           1 ret
1184  8E12
1185  8E12              ; **************************************************************************************************
1186  8E12              ;
1187  8E12              ; Temporización.
1188  8E12
1189  8E12              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1190  8E12              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1191  8E12              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1192  8E12              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1193  8E12
1194  8E12              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1195  8E12              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1196  8E12              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1197  8E12
1198  8E12              ; A partir de $4f61 no hace falta DELAY.
1199  8E12
1200  8E12              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1201  8E12
1202  8E12 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1203  8E15 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1204  8E16 78           	LD A,B
1205  8E17 A7           	AND A
1206  8E18 20 FB        	JR NZ,wait
1207  8E1A C9           	RET
1208  8E1B
1209  8E1B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1210  8E1B              ;
1211  8E1B              ;	5/3/23
1212  8E1B              ;
1213  8E1B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1214  8E1B
1215  8E1B              Movimiento_Amadeus
1216  8E1B
1217  8E1B              ; Disparo.
1218  8E1B
1219  8E1B 3A 35 8A     	ld a,(Disparo_Amadeus)
1220  8E1E A7           	and a
1221  8E1F 20 02        	jr nz,1F
1222  8E21 18 15        	jr 2F
1223  8E23
1224  8E23 3E F7        1 ld a,$f7													; "5" para disparar.
1225  8E25 DB FE        	in a,($fe)
1226  8E27 E6 10        	and $10
1227  8E29
1228  8E29 F5           	push af
1229  8E2A CC 5B 8E     	call z,Genera_disparo
1230  8E2D F1           	pop af
1231  8E2E 20 08        	jr nz,2F
1232  8E30
1233  8E30 3A 35 8A     	ld a,(Disparo_Amadeus)
1234  8E33 EE 01        	xor 1
1235  8E35 32 35 8A     	ld (Disparo_Amadeus),a
1236  8E38
1237  8E38 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1238  8E3A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1239  8E3C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1240  8E3E CC D1 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1241  8E41 3E F7        	ld a,$f7
1242  8E43 DB FE        	in a,($fe)
1243  8E45 E6 01        	and $01
1244  8E47 C8           	ret z
1245  8E48
1246  8E48 3E F7        	ld a,$f7
1247  8E4A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1248  8E4C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1249  8E4E CC B3 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1250  8E51 C9           	ret
1251  8E52
1252  8E52              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1253  8E52              ;
1254  8E52              ;	Rutina provisional para que los malotes cagen balas.
1255  8E52
1256  8E52              Detecta_disparo_entidad
1257  8E52
1258  8E52 3A 38 8A     	ld a,(Disparo_entidad)
1259  8E55 A7           	and a
1260  8E56 C8           	ret z
1261  8E57
1262  8E57              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1263  8E57
1264  8E57              ;	ld a,$7f
1265  8E57              ;	in a,($fe)
1266  8E57              ;	and 1
1267  8E57              ;	ret nz
1268  8E57
1269  8E57 CD 5B 8E     	call Genera_disparo
1270  8E5A C9           	ret
1271  8E5B
1272  8E5B              ; ---------------------------------------------------------------
1273  8E5B
1274  8E5B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E5B              ; ******************************************************************************************************************************************************************************************
   2+ 8E5B              ;
   3+ 8E5B              ;   16/07/23
   4+ 8E5B              ;
   5+ 8E5B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E5B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E5B              ;
   8+ 8E5B              ;
   9+ 8E5B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E5B              ;
  11+ 8E5B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E5B              ;               _ hacen las entidades hacia abajo.
  13+ 8E5B              ;
  14+ 8E5B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E5B              ;
  16+ 8E5B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E5B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E5B              ;
  19+ 8E5B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E5B              ;           _ la bala.
  21+ 8E5B              ;
  22+ 8E5B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E5B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E5B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E5B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E5B              ;           _ en el momento de generarse la bala)).
  27+ 8E5B
  28+ 8E5B              Genera_disparo
  29+ 8E5B
  30+ 8E5B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E5B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E5B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E5B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E5B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E5B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E5B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E5B
  38+ 8E5B              ; Exclusiones:
  39+ 8E5B
  40+ 8E5B 3A 02 8A         ld a,(Columnas)
  41+ 8E5E 47               ld b,a
  42+ 8E5F 3A C7 89         ld a,(Columns)
  43+ 8E62 B8               cp b
  44+ 8E63 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E64
  46+ 8E64              ; ----- ----- -----
  47+ 8E64
  48+ 8E64 3A F4 89         ld a,(Ctrl_0)
  49+ 8E67 CB 77            bit 6,a
  50+ 8E69 20 06            jr nz,14F
  51+ 8E6B
  52+ 8E6B 3A CD 89         ld a,(Coordenada_y)
  53+ 8E6E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E70 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E71
  56+ 8E71 21 00 80     14 ld hl,Indice_disparo
  57+ 8E74 3A CE 89         ld a,(CTRL_DESPLZ)
  58+ 8E77 4F               ld c,a
  59+ 8E78 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E7A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E7A              ;                                            ""        ""       "f9", B="1"
  62+ 8E7A              ;                                            ""        ""       "fb", B="2"
  63+ 8E7A              ;                                            ""        ""       "fb", B="3"
  64+ 8E7A A7               and a
  65+ 8E7B 28 10            jr z,1F
  66+ 8E7D E6 01            and 1
  67+ 8E7F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E80
  69+ 8E80 79               ld a,c
  70+ 8E81 16 F9            ld d,$f9
  71+ 8E83 23           2 inc hl
  72+ 8E84 23               inc hl
  73+ 8E85 04               inc b
  74+ 8E86 BA               cp d
  75+ 8E87 28 04            jr z,1F
  76+ 8E89 14               inc d
  77+ 8E8A 14               inc d
  78+ 8E8B 18 F6            jr 2B
  79+ 8E8D
  80+ 8E8D CD 2E 8D     1 call Extrae_address
  81+ 8E90 E5               push hl
  82+ 8E91 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E93 DD 21 CC 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E97
  85+ 8E97              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E97              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E97
  88+ 8E97 3A F4 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  89+ 8E9A CB 77            bit 6,a
  90+ 8E9C 20 04            jr nz,19F
  91+ 8E9E
  92+ 8E9E AF               xor a
  93+ 8E9F 32 38 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  94+ 8EA2
  95+ 8EA2 3A DA 89     19 ld a,(Cuad_objeto)
  96+ 8EA5 FE 02            cp 2
  97+ 8EA7 38 66            jr c,3F
  98+ 8EA9 28 64            jr z,3F
  99+ 8EAB
 100+ 8EAB              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8EAB
 102+ 8EAB E6 01            and 1
 103+ 8EAD 28 30            jr z,4F
 104+ 8EAF
 105+ 8EAF              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8EAF              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8EAF              ;
 108+ 8EAF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8EAF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8EAF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8EAF
 112+ 8EAF 2A C8 89     	ld hl,(Posicion_actual)
 113+ 8EB2
 114+ 8EB2              ;   Amadeus o entidad ???.
 115+ 8EB2
 116+ 8EB2 3A F4 89         ld a,(Ctrl_0)
 117+ 8EB5 CB 77            bit 6,a
 118+ 8EB7 28 0A            jr z,8F
 119+ 8EB9
 120+ 8EB9              ; 	Dispara Amadeus.
 121+ 8EB9
 122+ 8EB9 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8EBB CD 48 96         call PreviousScan
 124+ 8EBE CD 48 96         call PreviousScan
 125+ 8EC1
 126+ 8EC1              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8EC1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8EC1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8EC1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8EC1
 131+ 8EC1 18 11            jr 10F
 132+ 8EC3
 133+ 8EC3              ; 	Dispara Entidad.
 134+ 8EC3
 135+ 8EC3 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8EC6              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8EC6
 138+ 8EC6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8EC6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8EC6
 141+ 8EC6 C5               push bc
 142+ 8EC7 06 10            ld b,16
 143+ 8EC9 CD 39 96     9 call NextScan
 144+ 8ECC 10 FB            djnz 9B
 145+ 8ECE C1               pop bc
 146+ 8ECF CD 39 8F         call Ajusta_disparo_parte_izquierda
 147+ 8ED2 18 06            jr 17F
 148+ 8ED4
 149+ 8ED4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8ED4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8ED4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8ED4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8ED4
 154+ 8ED4 CD 39 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8ED7 CD AE 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EDA              ;                                                      ; _al generar el disparo.
 157+ 8EDA
 158+ 8EDA              ; 	LLegados a este punto tendremos:
 159+ 8EDA              ;
 160+ 8EDA              ;       Puntero_objeto_disparo en IY.
 161+ 8EDA              ;       Rutinas_de_impresion en IX.
 162+ 8EDA              ;       Puntero_de_impresion en HL.
 163+ 8EDA              ;       Impacto/Dirección en BC.
 164+ 8EDA
 165+ 8EDA CD 41 8F     17 call Almacena_disparo
 166+ 8EDD 18 52            jr 6F                                             ; RET.
 167+ 8EDF
 168+ 8EDF              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EDF              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EDF              ;
 171+ 8EDF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EDF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EDF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EDF
 175+ 8EDF 2A C8 89     4 ld hl,(Posicion_actual)
 176+ 8EE2
 177+ 8EE2              ;   Amadeus o entidad ???.
 178+ 8EE2
 179+ 8EE2 3A F4 89         ld a,(Ctrl_0)
 180+ 8EE5 CB 77            bit 6,a
 181+ 8EE7 28 0A            jr z,11F
 182+ 8EE9
 183+ 8EE9              ; 	Dispara Amadeus.
 184+ 8EE9
 185+ 8EE9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EEB CD 48 96         call PreviousScan
 187+ 8EEE CD 48 96         call PreviousScan
 188+ 8EF1
 189+ 8EF1              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EF1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EF1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EF1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EF1
 194+ 8EF1 18 11            jr 13F
 195+ 8EF3
 196+ 8EF3              ; 	Dispara Entidad.
 197+ 8EF3
 198+ 8EF3 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EF6              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EF6
 201+ 8EF6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EF6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EF6
 204+ 8EF6 C5               push bc
 205+ 8EF7 06 10            ld b,16
 206+ 8EF9 CD 39 96     12 call NextScan
 207+ 8EFC 10 FB            djnz 12B
 208+ 8EFE C1               pop bc
 209+ 8EFF
 210+ 8EFF CD 32 8F         call Ajusta_disparo_parte_derecha
 211+ 8F02 18 06            jr 18F
 212+ 8F04
 213+ 8F04              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8F04              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8F04              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8F04              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8F04
 218+ 8F04 CD 32 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8F07 CD AE 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8F0A              ;                                                       ; _al generar el disparo.
 221+ 8F0A
 222+ 8F0A              ; LLegados a este punto tendremos:
 223+ 8F0A              ;
 224+ 8F0A              ;       Puntero_objeto_disparo en IY.
 225+ 8F0A              ;       Rutinas_de_impresion en IX.
 226+ 8F0A              ;       Puntero_de_impresion en HL.
 227+ 8F0A              ;       Impacto/Dirección en BC.
 228+ 8F0A
 229+ 8F0A CD 41 8F     18 call Almacena_disparo
 230+ 8F0D 18 22            jr 6F                                               ; RET.
 231+ 8F0F
 232+ 8F0F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8F0F
 234+ 8F0F 28 11        3 jr z,5F
 235+ 8F11
 236+ 8F11              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8F11              ;
 238+ 8F11              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8F11              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8F11              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8F11              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8F11
 243+ 8F11              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8F11              ;	   ""        ""       "f9", B="1"
 245+ 8F11              ;	   ""        ""       "fb", B="2"
 246+ 8F11              ; 	   ""        ""       "fb", B="3"
 247+ 8F11
 248+ 8F11 2A C8 89     	ld hl,(Posicion_actual)
 249+ 8F14 CD 39 96     	call NextScan
 250+ 8F17
 251+ 8F17              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8F17              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8F17              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8F17              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8F17
 256+ 8F17 CD 39 8F         call Ajusta_disparo_parte_izquierda
 257+ 8F1A
 258+ 8F1A              ; 	No se produce impacto. B="$80"
 259+ 8F1A              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8F1A
 261+ 8F1A 01 80 80         ld bc,$8080
 262+ 8F1D
 263+ 8F1D              ; 	LLegados a este punto tendremos:
 264+ 8F1D              ;
 265+ 8F1D              ;       Puntero_objeto_disparo en IY.
 266+ 8F1D              ;       Rutinas_de_impresion en IX.
 267+ 8F1D              ;       Puntero_de_impresion en HL.
 268+ 8F1D              ;       Impacto/Dirección en BC.
 269+ 8F1D
 270+ 8F1D CD 41 8F         call Almacena_disparo
 271+ 8F20 18 0F            jr 6F                                           ; RET.
 272+ 8F22
 273+ 8F22              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F22              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F22              ;
 276+ 8F22              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F22              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F22              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F22              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F22
 281+ 8F22 2A C8 89     5 ld hl,(Posicion_actual)
 282+ 8F25 CD 39 96     	call NextScan
 283+ 8F28
 284+ 8F28              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F28              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F28              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F28              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F28
 289+ 8F28 CD 32 8F         call Ajusta_disparo_parte_derecha
 290+ 8F2B
 291+ 8F2B              ; 	No se produce impacto. B="$80"
 292+ 8F2B              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F2B
 294+ 8F2B 01 80 80     15 ld bc,$8080
 295+ 8F2E
 296+ 8F2E              ; 	LLegados a este punto tendremos:
 297+ 8F2E              ;
 298+ 8F2E              ;       Puntero_objeto_disparo en IY.
 299+ 8F2E              ;       Rutinas_de_impresion en IX.
 300+ 8F2E              ;       Puntero_de_impresion en HL.
 301+ 8F2E              ;       Impacto/Dirección en BC.
 302+ 8F2E
 303+ 8F2E CD 41 8F         call Almacena_disparo
 304+ 8F31
 305+ 8F31 C9           6 ret
 306+ 8F32
 307+ 8F32              ; ----------------------------------------------------------------
 308+ 8F32              ;
 309+ 8F32              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F32              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F32              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F32
 313+ 8F32 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F33 FE 02            cp 2
 315+ 8F35 38 01            jr c,1F
 316+ 8F37 23               inc hl
 317+ 8F38 C9           1 ret
 318+ 8F39
 319+ 8F39 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F3A FE 01        	cp 1
 321+ 8F3C 20 01        	jr nz,1F
 322+ 8F3E 2B           	dec hl
 323+ 8F3F 2B           1 dec hl
 324+ 8F40 C9               ret
 325+ 8F41
 326+ 8F41              ; ----------------------------------------------------------------
 327+ 8F41              ;
 328+ 8F41              ;   25/02/23
 329+ 8F41              ;
 330+ 8F41              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F41              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F41              ;
 333+ 8F41              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F41              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F41
 336+ 8F41              Almacena_disparo
 337+ 8F41
 338+ 8F41 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F42 F1               pop af
 340+ 8F43 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F44
 342+ 8F44 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F45 E6 01            and 1
 344+ 8F47 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F49              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F49              ; 	Dispara AMADEUS.
 347+ 8F49
 348+ 8F49              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F49              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F49              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F49              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F49
 353+ 8F49 C5               push bc
 354+ 8F4A 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F4D 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F50 A7               and a
 357+ 8F51 ED 42            sbc hl,bc
 358+ 8F53 CC F7 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F56 C1               pop bc
 360+ 8F57 28 54            jr z,4F
 361+ 8F59
 362+ 8F59 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F5C 23               inc hl
 364+ 8F5D 23               inc hl
 365+ 8F5E 22 24 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F61              ;                                                   ; _ Disparo_(+1).
 367+ 8F61 18 18            jr 2F
 368+ 8F63
 369+ 8F63              ; Dispara una entidad.
 370+ 8F63
 371+ 8F63 C5           1 push bc
 372+ 8F64 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F67 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F6A A7               and a
 375+ 8F6B ED 42            sbc hl,bc
 376+ 8F6D CC F0 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F70 C1               pop bc
 378+ 8F71 28 3A            jr z,4F
 379+ 8F73
 380+ 8F73 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F76 23               inc hl
 382+ 8F77 23               inc hl
 383+ 8F78 22 22 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F7B              ;                                                   ; _ Disparo_(+1).
 385+ 8F7B CD 2E 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F7E              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F7E              ;
 388+ 8F7E              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F7E              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F7E              ;                                                     Puntero_de_impresion en HL.
 391+ 8F7E              ;                                                     Impacto/Dirección en BC.
 392+ 8F7E
 393+ 8F7E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F7F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F80 23               inc hl                                          ; _ al siguiente.
 396+ 8F81 A7               and a
 397+ 8F82 20 C0            jr nz,3B
 398+ 8F84
 399+ 8F84 08               ex af,af
 400+ 8F85 ED 73 19 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F89 F9               ld sp,hl
 402+ 8F8A
 403+ 8F8A DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F8C F5               push af                                         ; Puntero de impresión.
 405+ 8F8D FD E5            push iy                                         ; Puntero objeto.
 406+ 8F8F C5               push bc                                         ; Control.
 407+ 8F90
 408+ 8F90 ED 7B 19 8A      ld sp,(Stack)
 409+ 8F94
 410+ 8F94              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F94
 412+ 8F94 21 08 8A     	ld hl,Ctrl_1
 413+ 8F97 CB C6        	set 0,(hl)
 414+ 8F99
 415+ 8F99 DD E5        	push ix
 416+ 8F9B E1               pop hl
 417+ 8F9C F5               push af
 418+ 8F9D DD E1            pop ix
 419+ 8F9F
 420+ 8F9F CD A0 7F     	call Guarda_foto_registros
 421+ 8FA2
 422+ 8FA2 21 08 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8FA5 CB 86        	res 0,(hl)
 424+ 8FA7
 425+ 8FA7              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8FA7              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8FA7
 428+ 8FA7 CD F7 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8FAA CD F0 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8FAD
 431+ 8FAD C9           4 ret
 432+ 8FAE
 433+ 8FAE              ; ----------------------------------------------------------------
 434+ 8FAE              ;
 435+ 8FAE              ;   4/3/23
 436+ 8FAE              ;
 437+ 8FAE              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8FAE              ;   _ al generarse el disparo.
 439+ 8FAE              ;
 440+ 8FAE              ;       "$80" ..... No se produce colisión.
 441+ 8FAE              ;       "$81" ..... Se produce colisión.
 442+ 8FAE
 443+ 8FAE              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8FAE              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8FAE
 446+ 8FAE
 447+ 8FAE FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8FB0 E5               push hl                                        ; Puntero de impresión.
 449+ 8FB1
 450+ 8FB1 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8FB3 CD CF 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8FB6
 453+ 8FB6 7B               ld a,e
 454+ 8FB7 E6 01            and 1
 455+ 8FB9 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8FBB
 457+ 8FBB E1               pop hl
 458+ 8FBC E5               push hl
 459+ 8FBD CD 39 96         call NextScan
 460+ 8FC0
 461+ 8FC0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8FC1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FC3 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FC5              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FC5 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FC7 CD CF 8F         call Bucle_2
 467+ 8FCA
 468+ 8FCA 43           2 ld b,e
 469+ 8FCB E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FCC FD E1            pop iy
 471+ 8FCE C9               ret
 472+ 8FCF
 473+ 8FCF               ; ---------- ----------
 474+ 8FCF
 475+ 8FCF 06 02        Bucle_2 ld b,2
 476+ 8FD1 FD 7E 00     2 ld a,(iy)
 477+ 8FD4 A6               and (hl)
 478+ 8FD5 28 02            jr z,1F
 479+ 8FD7 1E 81            ld e,$81
 480+ 8FD9 23           1 inc hl
 481+ 8FDA FD 23            inc iy
 482+ 8FDC 10 F3            djnz 2B
 483+ 8FDE C9               ret
 484+ 8FDF
 485+ 8FDF              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FDF              ;
 487+ 8FDF              ;   11/04/23
 488+ 8FDF              ;
 489+ 8FDF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FDF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FDF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FDF              ;
 493+ 8FDF              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FDF
 495+ 8FDF              Compara_coordenadas_X
 496+ 8FDF
 497+ 8FDF              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FDF              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FDF
 500+ 8FDF              ; Preparamos registros:
 501+ 8FDF
 502+ 8FDF 21 CC 89         ld hl,Filas+6
 503+ 8FE2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FE3 23               inc hl
 505+ 8FE4 23               inc hl
 506+ 8FE5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FE6 43               ld b,e
 508+ 8FE7
 509+ 8FE7 21 DA 89         ld hl,Filas+20
 510+ 8FEA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 511+ 8FEB 21 2E 8A         ld hl,Coordenadas_X_Entidad
 512+ 8FEE CD 22 92         call Guarda_coordenadas_X
 513+ 8FF1
 514+ 8FF1              ; Preparamos registros:
 515+ 8FF1
 516+ 8FF1 21 92 85         ld hl,Amadeus_db+6
 517+ 8FF4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 518+ 8FF5 23               inc hl
 519+ 8FF6 23               inc hl
 520+ 8FF7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 521+ 8FF8 7B               ld a,e
 522+ 8FF9 08               ex af,af'
 523+ 8FFA 21 A0 85         ld hl,Amadeus_db+20
 524+ 8FFD 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 525+ 8FFE 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 526+ 9001 CD 22 92         call Guarda_coordenadas_X
 527+ 9004
 528+ 9004              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 529+ 9004              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 530+ 9004
 531+ 9004 04               inc b
 532+ 9005 05               dec b
 533+ 9006 28 04            jr z,1F
 534+ 9008 06 03            ld b,3
 535+ 900A 18 02            jr 2F
 536+ 900C 06 02        1 ld b,2
 537+ 900E 08           2 ex af,af'
 538+ 900F 3C               inc a
 539+ 9010 3D               dec a
 540+ 9011 28 04            jr z,5F
 541+ 9013 0E 03            ld c,3
 542+ 9015 18 02            jr 6F
 543+ 9017 0E 02        5 ld c,2
 544+ 9019 79           6 ld a,c
 545+ 901A 08               ex af,af'
 546+ 901B 11 2E 8A         ld de,Coordenadas_X_Entidad
 547+ 901E 1A           4 ld a,(de)
 548+ 901F 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 549+ 9022 BE           3 cp (hl)
 550+ 9023 28 0E            jr z,7F
 551+ 9025 23               inc hl
 552+ 9026 0D               dec c
 553+ 9027 20 F9            jr nz,3B
 554+ 9029 13               inc de
 555+ 902A 08               ex af,af'
 556+ 902B 4F               ld c,a
 557+ 902C 08               ex af,af'
 558+ 902D 10 EF            djnz 4B
 559+ 902F
 560+ 902F              ; Limpiamos los almacenes de coordenadas y salimos.
 561+ 902F
 562+ 902F CD 61 92     8 call Limpia_Coordenadas_X
 563+ 9032 C9               ret
 564+ 9033
 565+ 9033 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9035 32 DF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9038 21 26 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 903B CB D6            set 2,(hl)
 569+ 903D 18 F0            jr 8B
 570+ 903F
 571+ 903F              ; -----------------------------------------------------------------------
 572+ 903F              ;
 573+ 903F              ;   17/04/23
 574+ 903F              ;
 575+ 903F
 576+ 903F              Detecta_colision_nave_entidad
 577+ 903F
 578+ 903F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 903F
 580+ 903F 2A C8 89         ld hl,(Posicion_actual)
 581+ 9042 CD 9E 95         call Calcula_puntero_de_impresion
 582+ 9045
 583+ 9045              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9045              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9045
 586+ 9045 DD E5            push ix
 587+ 9047 E1               pop hl
 588+ 9048 E5               push hl
 589+ 9049
 590+ 9049              ; ----- ----- -----
 591+ 9049 1E 00            ld e,0                                         ; Indica impacto.
 592+ 904B 06 0A            ld b,10
 593+ 904D CD 7D 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9050 7B               ld a,e
 595+ 9051 FE 05            cp 5
 596+ 9053 38 0E            jr c,3F
 597+ 9055
 598+ 9055              ; LLegados a este punto:
 599+ 9055              ;
 600+ 9055              ;   HAY COLISIÓN !!!!!.
 601+ 9055              ;
 602+ 9055              ;   .db (Impacto) de Amadeus a "1".
 603+ 9055              ;   SET el bit3 de (Impacto2).
 604+ 9055              ;
 605+ 9055              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9055
 607+ 9055 21 A5 85         ld hl,Amadeus_db+25
 608+ 9058 36 01            ld (hl),1
 609+ 905A 21 26 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 905D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 905F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9061 18 18            jr 1F
 613+ 9063
 614+ 9063              ; -----
 615+ 9063
 616+ 9063 E1           3 pop hl
 617+ 9064 CD 39 96         call NextScan
 618+ 9067 E5               push hl
 619+ 9068 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9069 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 906B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 906D 30 0C            jr nc,1F
 623+ 906F              ;                                                  ; _ 2º scanline si esto es así.
 624+ 906F 10 DC            djnz 2B
 625+ 9071
 626+ 9071              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9071
 628+ 9071              ; LLegados a este punto:
 629+ 9071              ;
 630+ 9071              ;   NO HAY COLISIÓN !!!!!.
 631+ 9071              ;
 632+ 9071              ;   .db (Impacto) de Amadeus a "0".
 633+ 9071              ;   RES el bit2 de (Impacto2).
 634+ 9071              ;
 635+ 9071              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9071              ;   Lo colocamos a "0".
 637+ 9071
 638+ 9071 21 26 8A         ld hl,Impacto2
 639+ 9074 CB 96            res 2,(hl)
 640+ 9076 2A 27 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9079 36 00            ld (hl),0
 642+ 907B
 643+ 907B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 907C C9               ret
 645+ 907D
 646+ 907D               ; ---------- ----------
 647+ 907D
 648+ 907D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 907E 3A C7 89         ld a,(Columns)
 650+ 9081 47               ld b,a
 651+ 9082 FD 7E 00     2 ld a,(iy)
 652+ 9085 BE               cp (hl)
 653+ 9086 28 01            jr z,1F
 654+ 9088
 655+ 9088 1C               inc e
 656+ 9089
 657+ 9089 23           1 inc hl
 658+ 908A FD 23            inc iy
 659+ 908C 10 F4            djnz 2B
 660+ 908E C1               pop bc
 661+ 908F C9               ret
 662+ 9090
 663+ 9090              ; -------------------------------------------------------------------------------------------------------------
 664+ 9090              ;
 665+ 9090              ;   13/03/23
 666+ 9090              ;
 667+ 9090              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9090              ;
 669+ 9090              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9090
 671+ 9090 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9093 7E               ld a,(hl)
 673+ 9094 A7               and a
 674+ 9095 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9096
 676+ 9096 44               ld b,h
 677+ 9097 4D               ld c,l
 678+ 9098 2A 1F 8A         ld hl,(Stack_snapshot_disparos)
 679+ 909B E5               push hl
 680+ 909C A7               and a
 681+ 909D ED 42            sbc hl,bc
 682+ 909F E5               push hl
 683+ 90A0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 90A1
 685+ 90A1 E1               pop hl
 686+ 90A2 54               ld d,h
 687+ 90A3 5D               ld e,l
 688+ 90A4 1B               dec de
 689+ 90A5 ED B8            lddr                                                ; Limpiamos.
 690+ 90A7
 691+ 90A7 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 90AA 22 1F 8A         ld (Stack_snapshot_disparos),hl
 693+ 90AD
 694+ 90AD C9               ret
 695+ 90AE
 696+ 90AE              ; -------------------------------------------------------------------------------------------------------------
 697+ 90AE              ;
 698+ 90AE              ;   18/07/23
 699+ 90AE              ;
 700+ 90AE
 701+ 90AE              Motor_de_disparos
 702+ 90AE
 703+ 90AE              ; Gestiona DISPAROS DE AMADEUS.
 704+ 90AE
 705+ 90AE 01 0A 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 706+ 90B1 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 707+ 90B4
 708+ 90B4 CD 2E 8D     2 call Extrae_address
 709+ 90B7 7E               ld a,(hl)
 710+ 90B8 A7               and a
 711+ 90B9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 712+ 90BB
 713+ 90BB              ; ----- ----- ----- ----- ----- -----
 714+ 90BB
 715+ 90BB C5               push bc
 716+ 90BC CD 7A 91         call foto_disparo_a_borrar
 717+ 90BF
 718+ 90BF              ; Existe colisión con este disparo???
 719+ 90BF
 720+ 90BF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 721+ 90C0 7E               ld a,(hl)
 722+ 90C1 2B               dec hl
 723+ 90C2 E6 01            and 1
 724+ 90C4 28 1D            jr z,9F
 725+ 90C6
 726+ 90C6              ;   En este punto:
 727+ 90C6              ;
 728+ 90C6              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 729+ 90C6              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 730+ 90C6              ;   _con la entidad).
 731+ 90C6              ;
 732+ 90C6              ;   Disparo_2A defw 0                                ; Control.
 733+ 90C6              ;    defw 0                                          ; Puntero objeto.
 734+ 90C6              ;    defw 0                                          ; Puntero de impresión.
 735+ 90C6              ;    defw 0                                          ; Rutina de impresión.
 736+ 90C6
 737+ 90C6 E5               push hl
 738+ 90C7
 739+ 90C7 06 04            ld b,4
 740+ 90C9 23           19 inc hl
 741+ 90CA 10 FD            djnz 19B
 742+ 90CC
 743+ 90CC CD 2E 8D         call Extrae_address
 744+ 90CF CD AF 9C         call Genera_coordenadas_disparo
 745+ 90D2
 746+ 90D2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 747+ 90D2
 748+ 90D2 21 29 8A         ld hl,Coordenadas_disparo_certero
 749+ 90D5 72               ld (hl),d
 750+ 90D6 23               inc hl
 751+ 90D7 73               ld (hl),e
 752+ 90D8
 753+ 90D8              ; Elimino el disparo de la base de datos.
 754+ 90D8
 755+ 90D8 E1               pop hl
 756+ 90D9 CD 17 92         call Elimina_disparo_de_base_de_datos
 757+ 90DC 21 26 8A         ld hl,Impacto2
 758+ 90DF CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 759+ 90E1
 760+ 90E1 18 06            jr 11F
 761+ 90E3
 762+ 90E3 CD A3 91     9 call Mueve_disparo
 763+ 90E6 CD 7A 91         call foto_disparo_a_borrar
 764+ 90E9
 765+ 90E9 C1           11 pop bc
 766+ 90EA 18 04            jr 7F
 767+ 90EC
 768+ 90EC              ; ----- ----- ----- ----- ----- -----
 769+ 90EC
 770+ 90EC ED 42        1 sbc hl,bc
 771+ 90EE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 772+ 90F0
 773+ 90F0 2A 24 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 774+ 90F3 23               inc hl
 775+ 90F4 23               inc hl
 776+ 90F5 22 24 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 777+ 90F8 18 BA            jr 2B
 778+ 90FA
 779+ 90FA CD F7 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 780+ 90FD              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 781+ 90FD
 782+ 90FD              ; Gestiona DISPAROS DE ENTIDADES.
 783+ 90FD
 784+ 90FD 01 72 85         ld bc,Disparo_11
 785+ 9100 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 786+ 9103
 787+ 9103 CD 2E 8D     5 call Extrae_address
 788+ 9106 7E               ld a,(hl)
 789+ 9107 A7               and a
 790+ 9108 28 5E            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 791+ 910A
 792+ 910A              ; ----- ----- ----- ----- ----- -----
 793+ 910A
 794+ 910A C5               push bc
 795+ 910B CD 7A 91         call foto_disparo_a_borrar
 796+ 910E
 797+ 910E              ; Existe colisión con este disparo???
 798+ 910E
 799+ 910E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 800+ 910F 7E               ld a,(hl)
 801+ 9110 2B               dec hl
 802+ 9111 E6 01            and 1
 803+ 9113 28 4A            jr z,10F
 804+ 9115
 805+ 9115              ;!    jr $ ;! STOP si el disparo tiene colisión.
 806+ 9115
 807+ 9115              ;! La colisión se produce con Amadeus???
 808+ 9115              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 809+ 9115
 810+ 9115              ;! debug martes 18/7/23
 811+ 9115
 812+ 9115 18 FE            jr $    ; 18/7/23
 813+ 9117
 814+ 9117 E5               push hl
 815+ 9118
 816+ 9118 06 04            ld b,4
 817+ 911A 23           16 inc hl
 818+ 911B 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 819+ 911D
 820+ 911D CD 2E 8D         call Extrae_address
 821+ 9120 CD AF 9C         call Genera_coordenadas_disparo
 822+ 9123
 823+ 9123 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 824+ 9124 FE 16            cp $16
 825+ 9126 38 22            jr c,15F
 826+ 9128
 827+ 9128              ; (Colisiones en filas 16 y 17).
 828+ 9128
 829+ 9128 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 830+ 9129
 831+ 9129              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 832+ 9129
 833+ 9129 21 92 85         ld hl,Amadeus_db+6
 834+ 912C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 835+ 912D 23               inc hl
 836+ 912E 23               inc hl
 837+ 912F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 838+ 9130 21 A0 85         ld hl,Amadeus_db+20
 839+ 9133 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 840+ 9134 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 841+ 9137 CD 22 92         call Guarda_coordenadas_X
 842+ 913A
 843+ 913A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 844+ 913B
 845+ 913B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 846+ 913B
 847+ 913B 06 03            ld b,3
 848+ 913D 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 849+ 9140 7E           18 ld a,(hl)
 850+ 9141 BA               cp d
 851+ 9142 20 03            jr nz,17F
 852+ 9144
 853+ 9144              ; Colisión Amadeus !!!!!!!!!!
 854+ 9144
 855+ 9144 E1               pop hl
 856+ 9145 18 09            jr 14F
 857+ 9147
 858+ 9147 23           17 inc hl
 859+ 9148 10 F6            djnz 18B
 860+ 914A
 861+ 914A              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 862+ 914A              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 863+ 914A
 864+ 914A E1           15 pop hl
 865+ 914B 23               inc hl
 866+ 914C 35               dec (hl)
 867+ 914D 2B               dec hl
 868+ 914E 18 0F            jr 10F
 869+ 9150
 870+ 9150              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 871+ 9150              ; _ almacén de coordenadas_X de Amadeus.
 872+ 9150
 873+ 9150 E5           14 push hl
 874+ 9151 CD 17 92         call Elimina_disparo_de_base_de_datos
 875+ 9154 21 26 8A         ld hl,Impacto2
 876+ 9157 CB CE            set 1,(hl)
 877+ 9159 CD 61 92         call Limpia_Coordenadas_X
 878+ 915C
 879+ 915C E1               pop hl
 880+ 915D 18 06            jr 12F
 881+ 915F
 882+ 915F              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 883+ 915F
 884+ 915F CD A3 91     10 call Mueve_disparo
 885+ 9162 CD 7A 91         call foto_disparo_a_borrar
 886+ 9165 C1           12 pop bc
 887+ 9166
 888+ 9166 18 04            jr 8F
 889+ 9168
 890+ 9168              ; ----- ----- ----- ----- ----- -----
 891+ 9168
 892+ 9168 ED 42        4 sbc hl,bc
 893+ 916A 28 0A            jr z,6F
 894+ 916C
 895+ 916C 2A 22 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 896+ 916F 23               inc hl
 897+ 9170 23               inc hl
 898+ 9171 22 22 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 899+ 9174 18 8D            jr 5B
 900+ 9176
 901+ 9176 CD F0 8C     6 call Inicia_Puntero_Disparo_Entidades
 902+ 9179 C9               ret
 903+ 917A
 904+ 917A              ; ------------------------------------------------------------------
 905+ 917A
 906+ 917A              foto_disparo_a_borrar
 907+ 917A
 908+ 917A 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 909+ 917B A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 910+ 917C C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 911+ 917D
 912+ 917D E5               push hl
 913+ 917E 23               inc hl
 914+ 917F 23               inc hl
 915+ 9180 ED 73 19 8A      ld (Stack),sp
 916+ 9184 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 917+ 9185 FD E1            pop iy
 918+ 9187 DD E1            pop ix
 919+ 9189 E1               pop hl
 920+ 918A ED 7B 19 8A      ld sp,(Stack)
 921+ 918E 3A 08 8A         ld a,(Ctrl_1)
 922+ 9191 CB C7            set 0,a
 923+ 9193 32 08 8A         ld (Ctrl_1),a
 924+ 9196 CD A0 7F         call Guarda_foto_registros
 925+ 9199 3A 08 8A         ld a,(Ctrl_1)
 926+ 919C CB 87            res 0,a
 927+ 919E 32 08 8A         ld (Ctrl_1),a
 928+ 91A1 E1               pop hl
 929+ 91A2 C9               ret
 930+ 91A3
 931+ 91A3              ;---------------------------------------------------
 932+ 91A3              ;
 933+ 91A3              ;   18/07/23
 934+ 91A3              ;
 935+ 91A3
 936+ 91A3              Mueve_disparo
 937+ 91A3
 938+ 91A3              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 939+ 91A3              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 940+ 91A3              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 941+ 91A3
 942+ 91A3 E5               push hl
 943+ 91A4
 944+ 91A4 4E               ld c,(hl)
 945+ 91A5 23               inc hl
 946+ 91A6 46               ld b,(hl)
 947+ 91A7 2B               dec hl
 948+ 91A8
 949+ 91A8 C5               push bc
 950+ 91A9 D9               exx
 951+ 91AA C1               pop bc
 952+ 91AB D9               exx                                 ; BC'. B contiene `Dirección del disparo'.
 953+ 91AC              ;                                              C contiene `Impacto'.
 954+ 91AC 7E               ld a,(hl)
 955+ 91AD F5               push af
 956+ 91AE 08               ex af,af'
 957+ 91AF F1               pop af                              ; A y A' contienen la dirección del disparo.
 958+ 91B0
 959+ 91B0 06 04            ld b,4
 960+ 91B2 23           1 inc hl
 961+ 91B3 10 FD            djnz 1B
 962+ 91B5
 963+ 91B5              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 964+ 91B5
 965+ 91B5 CD 2E 8D         call Extrae_address
 966+ 91B8
 967+ 91B8 E6 01            and 1
 968+ 91BA 28 41            jr z,2F                             ; Disparamos hacia arriba o abajo???
 969+ 91BC
 970+ 91BC              ; Disparo hacia arriba, (Amadeus).
 971+ 91BC
 972+ 91BC              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 973+ 91BC              ; _ de la dificultad.
 974+ 91BC
 975+ 91BC CD 48 96         call PreviousScan
 976+ 91BF CD 48 96         call PreviousScan
 977+ 91C2 CD 48 96         call PreviousScan
 978+ 91C5 CD 48 96         call PreviousScan
 979+ 91C8
 980+ 91C8              ; Detecta si el disparo de Amadeus sale de pantalla:
 981+ 91C8
 982+ 91C8 7C               ld a,h
 983+ 91C9 FE 40            cp $40
 984+ 91CB 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 985+ 91CD
 986+ 91CD              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 987+ 91CD
 988+ 91CD EB               ex de,hl
 989+ 91CE 06 04            ld b,4
 990+ 91D0 2B           6 dec hl
 991+ 91D1 10 FD            djnz 6B
 992+ 91D3
 993+ 91D3 CD 17 92         call Elimina_disparo_de_base_de_datos
 994+ 91D6 E1               pop hl
 995+ 91D7 18 23            jr 7F
 996+ 91D9
 997+ 91D9              ; Se ha desplazado la bala, compruebo colisión.
 998+ 91D9
 999+ 91D9 D5           3 push de
1000+ 91DA C5               push bc
1001+ 91DB
1002+ 91DB              ; HL contiene el puntero de impresión del disparo en curso.
1003+ 91DB
1004+ 91DB 08               ex af,af
1005+ 91DC E6 01            and 1
1006+ 91DE 20 0E            jr nz,9F                                             ; SIEMPRE comprobamos Colisión si se trata de un disparo de Amadeus.
1007+ 91E0
1008+ 91E0 D9               exx
1009+ 91E1 C5               push bc
1010+ 91E2 D9               exx
1011+ 91E3
1012+ 91E3 CD AF 9C         call Genera_coordenadas_disparo                      ; Entrega en D la coordenada X del disparo y en E la coordenada Y.
1013+ 91E6
1014+ 91E6 C1               pop bc
1015+ 91E7
1016+ 91E7 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
1017+ 91E8 FE 16            cp $16
1018+ 91EA 38 05            jr c,8F
1019+ 91EC
1020+ 91EC 18 FE            jr $
1021+ 91EE
1022+ 91EE
1023+ 91EE CD AE 8F     9 call Comprueba_Colision
1024+ 91F1
1025+ 91F1              ; B="$80", no hay colisión. B="$81", existe colisión.
1026+ 91F1
1027+ 91F1 78           8 ld a,b
1028+ 91F2
1029+ 91F2 C1               pop bc
1030+ 91F3 D1               pop de
1031+ 91F4
1032+ 91F4 EB               ex de,hl
1033+ 91F5
1034+ 91F5 73               ld (hl),e                                   ; Acualizamos (Puntero_de_impresion) del disparo.
1035+ 91F6 23               inc hl
1036+ 91F7 72               ld (hl),d
1037+ 91F8
1038+ 91F8 E1           4 pop hl
1039+ 91F9 23               inc hl
1040+ 91FA 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1041+ 91FB 2B               dec hl
1042+ 91FC C9           7 ret
1043+ 91FD
1044+ 91FD              ; Disparo hacia abajo, (Entidad).
1045+ 91FD
1046+ 91FD              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1047+ 91FD              ;! _ de la dificultad.
1048+ 91FD
1049+ 91FD CD 39 96     2 call NextScan
1050+ 9200 CD 39 96         call NextScan
1051+ 9203 CD 39 96         call NextScan
1052+ 9206              ;    call NextScan
1053+ 9206
1054+ 9206              ; Detecta si el disparo de la entidad sale de la pantalla.
1055+ 9206
1056+ 9206 7C               ld a,h
1057+ 9207 FE 58            cp $58
1058+ 9209 38 CE            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1059+ 920B
1060+ 920B EB               ex de,hl
1061+ 920C 06 04            ld b,4
1062+ 920E 2B           5 dec hl
1063+ 920F 10 FD            djnz 5B
1064+ 9211
1065+ 9211 CD 17 92         call Elimina_disparo_de_base_de_datos
1066+ 9214 E1               pop hl
1067+ 9215 18 E5            jr 7B
1068+ 9217
1069+ 9217              ; HL apunta al primer byte de la base de datos del disparo.
1070+ 9217
1071+ 9217 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1072+ 921A AF               xor a
1073+ 921B 77               ld (hl),a
1074+ 921C 54               ld d,h
1075+ 921D 5D               ld e,l
1076+ 921E 13               inc de
1077+ 921F ED B0            ldir
1078+ 9221 C9               ret
1079+ 9222
1080+ 9222              ; -----------------------------------------------------------------
1081+ 9222              ;
1082+ 9222              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1083+ 9222              ;
1084+ 9222              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1085+ 9222              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1086+ 9222              ;
1087+ 9222              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1088+ 9222              ;
1089+ 9222              ;   INPUTS:
1090+ 9222              ;
1091+ 9222              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1092+ 9222              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1093+ 9222              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1094+ 9222
1095+ 9222              ;   MODIFICA: A, HL, DE y C
1096+ 9222
1097+ 9222 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1098+ 9223 79               ld a,c
1099+ 9224 E6 01            and 1
1100+ 9226 20 03            jr nz,1F
1101+ 9228 14               inc d
1102+ 9229 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1103+ 922B
1104+ 922B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1105+ 922B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1106+ 922B
1107+ 922B 15           1 dec d
1108+ 922C 23           2 inc hl
1109+ 922D 72               ld (hl),d
1110+ 922E
1111+ 922E 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1112+ 922F A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1113+ 9230 C8               ret z
1114+ 9231
1115+ 9231 AF               xor a
1116+ 9232 5F               ld e,a
1117+ 9233 18 ED            jr Guarda_coordenadas_X
1118+ 9235
1119+ 9235              ; -----------------------------------------------------------------
1120+ 9235              ;
1121+ 9235              ;   12/04/23
1122+ 9235              ;
1123+ 9235
1124+ 9235 3A 26 8A     Selector_de_impactos ld a,(Impacto2)
1125+ 9238 A7               and a
1126+ 9239 C8               ret z
1127+ 923A
1128+ 923A FE 04            cp 4
1129+ 923C 20 09            jr nz,1F
1130+ 923E
1131+ 923E
1132+ 923E              ; La colisión se produce por contacto entre Amadeus y una entidad.
1133+ 923E
1134+ 923E CD 3F 90         call Detecta_colision_nave_entidad
1135+ 9241
1136+ 9241 21 26 8A         ld hl,Impacto2
1137+ 9244 CB 5E            bit 3,(hl)
1138+ 9246 C0               ret nz                                               ; Existe colisión, RET.
1139+ 9247
1140+ 9247              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1141+ 9247              ; Primero analizamos si algún disparo impacta en Amadeus.
1142+ 9247
1143+ 9247 21 26 8A     1 ld hl,Impacto2
1144+ 924A CB 4E            bit 1,(hl)
1145+ 924C 28 07            jr z,2F
1146+ 924E
1147+ 924E 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1148+ 9251 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1149+ 9253 18 0B            jr 3F
1150+ 9255
1151+ 9255 21 26 8A     2 ld hl,Impacto2
1152+ 9258 CB 46            bit 0,(hl)
1153+ 925A C8               ret z
1154+ 925B
1155+ 925B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1156+ 925B
1157+ 925B 21 08 8A         ld hl,Ctrl_1
1158+ 925E CB D6            set 2,(hl)
1159+ 9260
1160+ 9260 C9           3 ret
1161+ 9261
1162+ 9261              ; -----------------------------------------------------------------
1163+ 9261              ;
1164+ 9261              ;   16/04/23
1165+ 9261              ;
1166+ 9261
1167+ 9261 AF           Limpia_Coordenadas_X xor a
1168+ 9262 06 06            ld b,6
1169+ 9264 21 2B 8A         ld hl,Coordenadas_X_Amadeus
1170+ 9267 77           1 ld (hl),a
1171+ 9268 23               inc hl
1172+ 9269 10 FC            djnz 1B
1173+ 926B C9               ret
1174+ 926C
1175+ 926C              ; -----------------------------------------------------------------
1176+ 926C              ;
1177+ 926C              ;   25/04/23
1178+ 926C              ;
1179+ 926C
1180+ 926C              Determina_resultado_comparativa
1181+ 926C
1182+ 926C              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1183+ 926C              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1184+ 926C              ;
1185+ 926C              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1186+ 926C              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1187+ 926C              ;
1188+ 926C              ;   SBC HL,DE
1189+ 926C
1190+ 926C              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1191+ 926C              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1192+ 926C
1193+ 926C              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1194+ 926C              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1195+ 926C
1196+ 926C
1197+ 926C 3A DA 89         ld a,(Cuad_objeto)
1198+ 926F FE 02            cp 2
1199+ 9271 28 26            jr z,2F
1200+ 9273 38 24            jr c,2F
1201+ 9275
1202+ 9275              ; Cuadrantes 3º y 4º
1203+ 9275
1204+ 9275 E6 01            and 1
1205+ 9277 28 10            jr z,4F
1206+ 9279
1207+ 9279              ; Cuadrante 3º
1208+ 9279
1209+ 9279 7C               ld a,h
1210+ 927A 06 00            ld b,0
1211+ 927C
1212+ 927C CD 07 93         call Compara_cositas_H3
1213+ 927F
1214+ 927F 04               inc b
1215+ 9280 05               dec b
1216+ 9281 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1217+ 9282
1218+ 9282 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1219+ 9283 06 00            ld b,0
1220+ 9285
1221+ 9285 CD 19 93         call Compara_cositas_L3
1222+ 9288 C9               ret
1223+ 9289
1224+ 9289              ; Cuadrante 4º
1225+ 9289
1226+ 9289 7C           4 ld a,h
1227+ 928A 06 00            ld b,0
1228+ 928C
1229+ 928C CD 2B 93         call Compara_cositas_H4
1230+ 928F
1231+ 928F 04               inc b
1232+ 9290 05               dec b
1233+ 9291 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1234+ 9292
1235+ 9292 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1236+ 9293 06 00            ld b,0
1237+ 9295
1238+ 9295 CD 41 93         call Compara_cositas_L4
1239+ 9298 C9               ret
1240+ 9299
1241+ 9299              ; Cuadrantes 1º y 2º.
1242+ 9299
1243+ 9299 28 10        2 jr z,3F
1244+ 929B
1245+ 929B              ; 1er Cuadrante
1246+ 929B
1247+ 929B 7C               ld a,h
1248+ 929C 06 00            ld b,0
1249+ 929E
1250+ 929E CD DF 92         call Compara_cositas_H1
1251+ 92A1
1252+ 92A1 04               inc b
1253+ 92A2 05               dec b
1254+ 92A3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1255+ 92A4
1256+ 92A4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1257+ 92A5 06 00            ld b,0
1258+ 92A7
1259+ 92A7 CD F5 92         call Compara_cositas_L1
1260+ 92AA C9               ret
1261+ 92AB
1262+ 92AB
1263+ 92AB              ; 2º Cuadrante
1264+ 92AB
1265+ 92AB 7C           3 ld a,h
1266+ 92AC 06 00            ld b,0
1267+ 92AE
1268+ 92AE CD BB 92         call Compara_cositas_H2
1269+ 92B1
1270+ 92B1 04               inc b
1271+ 92B2 05               dec b
1272+ 92B3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1273+ 92B4
1274+ 92B4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1275+ 92B5 06 00            ld b,0
1276+ 92B7
1277+ 92B7 CD CD 92         call Compara_cositas_L2
1278+ 92BA C9               ret
1279+ 92BB
1280+ 92BB A7           Compara_cositas_H2 and a
1281+ 92BC 28 0D            jr z,1F
1282+ 92BE              ;    cp $fd
1283+ 92BE              ;    jr z,1F
1284+ 92BE              ;    cp $fe
1285+ 92BE              ;    jr z,1F
1286+ 92BE FE FF            cp $ff
1287+ 92C0 28 09            jr z,1F
1288+ 92C2 FE 01            cp $01
1289+ 92C4 28 05            jr z,1F
1290+ 92C6 FE 02            cp $02
1291+ 92C8 28 01            jr z,1F
1292+ 92CA C0               ret nz
1293+ 92CB 04           1 inc b
1294+ 92CC C9               ret
1295+ 92CD
1296+ 92CD A7           Compara_cositas_L2 and a
1297+ 92CE 28 0D            jr z,1F
1298+ 92D0              ;    cp $fd
1299+ 92D0              ;    jr z,1F
1300+ 92D0 FE FE            cp $fe
1301+ 92D2 28 09            jr z,1F
1302+ 92D4 FE FF            cp $ff
1303+ 92D6 28 05            jr z,1F
1304+ 92D8 FE 01            cp $01
1305+ 92DA 28 01            jr z,1F
1306+ 92DC              ;    cp $02
1307+ 92DC              ;    jr z,1F
1308+ 92DC C0               ret nz
1309+ 92DD 04           1 inc b
1310+ 92DE C9               ret
1311+ 92DF
1312+ 92DF A7           Compara_cositas_H1 and a
1313+ 92E0 28 11            jr z,1F
1314+ 92E2              ;    cp $fd
1315+ 92E2              ;    jr z,1F
1316+ 92E2              ;    cp $fe
1317+ 92E2              ;    jr z,1F
1318+ 92E2 FE FF            cp $ff
1319+ 92E4 28 0D            jr z,1F
1320+ 92E6 FE 01            cp $01
1321+ 92E8 28 09            jr z,1F
1322+ 92EA FE 02            cp $02
1323+ 92EC 28 05            jr z,1F
1324+ 92EE FE 03            cp $03
1325+ 92F0 28 01            jr z,1F
1326+ 92F2 C0               ret nz
1327+ 92F3 04           1 inc b
1328+ 92F4 C9               ret
1329+ 92F5
1330+ 92F5 A7           Compara_cositas_L1 and a
1331+ 92F6 28 0D            jr z,1F
1332+ 92F8              ;    cp $fd
1333+ 92F8              ;    jr z,1F
1334+ 92F8              ;    cp $fe
1335+ 92F8              ;    jr z,1F
1336+ 92F8              ;    cp $ff
1337+ 92F8              ;    jr z,1F
1338+ 92F8 FE 01            cp $01
1339+ 92FA 28 09            jr z,1F
1340+ 92FC FE 02            cp $02
1341+ 92FE 28 05            jr z,1F
1342+ 9300 FE 03            cp $03
1343+ 9302 28 01            jr z,1F
1344+ 9304 C0               ret nz
1345+ 9305 04           1 inc b
1346+ 9306 C9               ret
1347+ 9307
1348+ 9307 A7           Compara_cositas_H3 and a
1349+ 9308 28 0D            jr z,1F
1350+ 930A              ;    cp $fd
1351+ 930A              ;    jr z,1F
1352+ 930A FE FE            cp $fe
1353+ 930C 28 09            jr z,1F
1354+ 930E FE FF            cp $ff
1355+ 9310 28 05            jr z,1F
1356+ 9312 FE 01            cp $01
1357+ 9314 28 01            jr z,1F
1358+ 9316              ;    cp $02
1359+ 9316              ;    jr z,1F
1360+ 9316              ;    cp $03
1361+ 9316              ;    jr z,1F
1362+ 9316 C0               ret nz
1363+ 9317 04           1 inc b
1364+ 9318 C9               ret
1365+ 9319
1366+ 9319 A7           Compara_cositas_L3 and a
1367+ 931A 28 0D            jr z,1F
1368+ 931C              ;    cp $fd
1369+ 931C              ;    jr z,1F
1370+ 931C              ;    cp $fe
1371+ 931C              ;    jr z,1F
1372+ 931C              ;    cp $ff
1373+ 931C              ;    jr z,1F
1374+ 931C FE 01            cp $01
1375+ 931E 28 09            jr z,1F
1376+ 9320 FE 02            cp $02
1377+ 9322 28 05            jr z,1F
1378+ 9324 FE 03            cp $03
1379+ 9326 28 01            jr z,1F
1380+ 9328 C0               ret nz
1381+ 9329 04           1 inc b
1382+ 932A C9               ret
1383+ 932B
1384+ 932B A7           Compara_cositas_H4 and a
1385+ 932C 28 11            jr z,1F
1386+ 932E FE FD            cp $fd
1387+ 9330 28 0D            jr z,1F
1388+ 9332 FE FE            cp $fe
1389+ 9334 28 09            jr z,1F
1390+ 9336 FE FF            cp $ff
1391+ 9338 28 05            jr z,1F
1392+ 933A FE 01            cp $01
1393+ 933C 28 01            jr z,1F
1394+ 933E              ;    cp $02
1395+ 933E              ;    jr z,1F
1396+ 933E              ;    cp $03
1397+ 933E              ;    jr z,1F
1398+ 933E C0               ret nz
1399+ 933F 04           1 inc b
1400+ 9340 C9               ret
1401+ 9341
1402+ 9341 A7           Compara_cositas_L4 and a
1403+ 9342 28 0D            jr z,1F
1404+ 9344              ;    cp $fd
1405+ 9344              ;    jr z,1F
1406+ 9344 FE FE            cp $fe
1407+ 9346 28 09            jr z,1F
1408+ 9348 FE FF            cp $ff
1409+ 934A 28 05            jr z,1F
1410+ 934C FE 01            cp $01
1411+ 934E 28 01            jr z,1F
1412+ 9350              ;    cp $02
1413+ 9350              ;    jr z,1F
1414+ 9350              ;    cp $03
1415+ 9350              ;    jr z,1F
1416+ 9350 C0               ret nz
1417+ 9351 04           1 inc b
1418+ 9352 C9               ret
# file closed: Disparo.asm
1275  9353              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9353              ; ******************************************************************************************************************************************************************************************
   2+ 9353              ;
   3+ 9353              ; 26/06/23
   4+ 9353              ;
   5+ 9353              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9353
   7+ 9353 CD 2D 96     Draw call Prepara_draw
   8+ 9356 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9357 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9358 28 05        	jr z,2F
  11+ 935A
  12+ 935A 3A DA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 935D 18 0C        	jr 1F
  14+ 935F 2A D8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9362 22 C8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9365 CD F4 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9368              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9368 CD 98 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  19+ 936B 3A F4 89     1 ld a,(Ctrl_0)
  20+ 936E CB 6F        	bit 5,a
  21+ 9370 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9372
  23+ 9372 CD 8A 93     	call Comprueba_limite_horizontal
  24+ 9375 CD 1A 94     	call Comprueba_limite_vertical
  25+ 9378
  26+ 9378              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9378
  28+ 9378 CD 67 95     3 call calcula_CColumnass
  29+ 937B CD 9E 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 937E CD F3 95     	call Define_rutina_de_impresion
  31+ 9381
  32+ 9381 3A F4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9384 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9386 32 F4 89     	ld (Ctrl_0),a
  35+ 9389
  36+ 9389 C9           	ret
  37+ 938A
  38+ 938A              ; *******************************************************************************************************************************************************************************************
  39+ 938A              ;	21/01/23
  40+ 938A              ;
  41+ 938A              ; 	Comprueba_limite_horizontal.
  42+ 938A              ;
  43+ 938A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 938A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 938A              ;
  46+ 938A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 938A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 938A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 938A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 938A
  51+ 938A
  52+ 938A
  53+ 938A 3A F4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 938D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 938F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9391 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9393 32 F4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9396 18 09            jr 6F
  59+ 9398 CB 5F        1 bit 3,a
  60+ 939A 28 0A            jr z,2F
  61+ 939C E6 F7            and $f7
  62+ 939E 32 F4 89         ld (Ctrl_0),a
  63+ 93A1 CD F4 94     6 call Inicializacion
  64+ 93A4 18 5B            jr 5F
  65+ 93A6 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 93A7
  67+ 93A7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 93A7              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 93A7
  70+ 93A7 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 93A8 2A 03 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 93AB CD F9 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 93AE 67           	ld h,a
  74+ 93AF EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 93B0 CD F9 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 93B3 67           	ld h,a
  77+ 93B4 A7           	and a
  78+ 93B5 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 93B7 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 93B8 3A DA 89     	ld a,(Cuad_objeto)
  81+ 93BB FE 02        	cp 2
  82+ 93BD 38 1E        	jr c,3F
  83+ 93BF 28 1C        	jr z,3F
  84+ 93C1 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 93C2 28 23            jr z,7F
  86+ 93C4 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 93C6 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 93C8 E1           	pop hl
  89+ 93C9
  90+ 93C9              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 93C9              ; _para indicar con E="2" en caso necesario.
  92+ 93C9
  93+ 93C9 E5               push hl
  94+ 93CA C5               push bc
  95+ 93CB CD F9 98     	call calcula_tercio
  96+ 93CE FE 01        	cp 1
  97+ 93D0 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 93D2 CD 02 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 93D5 28 26            jr z,9F
 100+ 93D7 38 24            jr c,9F
 101+ 93D9 1E 00        11 ld e,0
 102+ 93DB 18 22            jr 8F
 103+ 93DD 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93DE 28 07        	jr z, 7F
 105+ 93E0 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93E2 1E 00         	ld e,0
 107+ 93E4 E1           	pop hl
 108+ 93E5 18 04        	jr 4F
 109+ 93E7 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93E9 18 15            jr 10F
 111+ 93EB
 112+ 93EB              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93EB              ; _para indicar con E="2" en caso necesario.
 114+ 93EB
 115+ 93EB E5           4 push hl
 116+ 93EC C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93ED CD F9 98     	call calcula_tercio
 118+ 93F0 FE 01        	cp 1
 119+ 93F2 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93F4 CD 02 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93F7 28 04            jr z,9F
 122+ 93F9 30 02            jr nc,9F
 123+ 93FB 18 02        	jr 8F
 124+ 93FD 1E 02        9 ld e,2
 125+ 93FF C1           8 pop bc
 126+ 9400 E1           10 pop hl
 127+ 9401 C9           5 ret
 128+ 9402
 129+ 9402              ; --------------------
 130+ 9402              ;
 131+ 9402              ; 25/08/22
 132+ 9402
 133+ 9402 CD F9 98     Comprueba_centro call calcula_tercio
 134+ 9405 67               ld h,a
 135+ 9406 08           	ex af,af
 136+ 9407 FE 02        	cp 2
 137+ 9409 38 07        	jr c,1F
 138+ 940B 28 05        	jr z,1F
 139+ 940D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 9410 18 03        	jr 2F
 141+ 9412 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 9415 08           2 ex af,af
 143+ 9416 A7               and a
 144+ 9417 ED 42            sbc hl,bc
 145+ 9419 C9               ret
 146+ 941A
 147+ 941A              ; *********************************************************************************************************************************************************************************************
 148+ 941A              ;
 149+ 941A              ;   16/8/22
 150+ 941A              ;
 151+ 941A              ;	Comprueba_limite_vertical
 152+ 941A              ;
 153+ 941A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 941A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 941A              ;
 156+ 941A
 157+ 941A 2A C8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 941D 7D           	ld a,l
 159+ 941E E6 1F        	and $1F
 160+ 9420 57           	ld d,a
 161+ 9421 3A 05 8A     	ld a,(Limite_vertical)
 162+ 9424 BA           	cp d 											; Límite - Posición.
 163+ 9425 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 9426 3A DA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9429 CB 47        	bit 0,a
 166+ 942B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 942D
 168+ 942D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 942D
 170+ 942D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 942E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9430
 173+ 9430              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9430              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9430
 176+ 9430 3A CC 89         ld a,(Coordenada_X)
 177+ 9433 16 0F            ld d,Centro_izquierda
 178+ 9435 A7               and a
 179+ 9436 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9437 28 1E            jr z,3F
 181+ 9439 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 943B              ;                                                    ; _salimos sin modificar nada.
 183+ 943B 18 0E            jr 2F
 184+ 943D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 943E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9440
 187+ 9440              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9440              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9440
 190+ 9440 3A CC 89         ld a,(Coordenada_X)
 191+ 9443 16 10            ld d,Centro_derecha
 192+ 9445 A7               and a
 193+ 9446 92               sub d
 194+ 9447 28 0E            jr z,3F
 195+ 9449 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 944B              ;                                                    ; _salimos sin modificar nada.
 197+ 944B CB 43        2 bit 0,e
 198+ 944D 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 944F C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9450 CD E4 94         call Modificaccionne
 201+ 9453 C1           	pop bc
 202+ 9454 CD F4 94         call Inicializacion
 203+ 9457 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9458
 205+ 9458              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9458
 207+ 9458 C5           4 push bc
 208+ 9459 01 C7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 945C 0A           	ld a,(bc)
 210+ 945D 3D           	dec a
 211+ 945E 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 945F 7D           	ld a,l
 213+ 9460 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9461 CB 47        	bit 0,a
 215+ 9463 28 03        	jr z,5F
 216+ 9465 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9466 18 2E        	jr 7F
 218+ 9468
 219+ 9468              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9468
 221+ 9468 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9469 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 946A 3A F4 89     	ld a,(Ctrl_0)
 224+ 946D CB 4F        	bit 1,a
 225+ 946F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9471 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9472
 228+ 9472              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9472
 230+ 9472 1C               inc e
 231+ 9473 1D               dec e
 232+ 9474 20 07            jr nz,12F
 233+ 9476 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9477 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9478 22 C8 89     	ld (Posicion_actual),hl
 236+ 947B 18 44        13 jr 9F
 237+ 947D CB 43        12 bit 0,e
 238+ 947F 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9481              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9481 C1           	pop bc
 241+ 9482 18 D3        	jr 3B
 242+ 9484 80           14 add b
 243+ 9485 6F               ld l,a
 244+ 9486 22 C8 89     	ld (Posicion_actual),hl
 245+ 9489 CD E4 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 948C 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 948E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9490 32 F4 89         ld (Ctrl_0),a
 249+ 9493 F1           	pop af
 250+ 9494 18 2B        	jr 9F
 251+ 9496
 252+ 9496              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9496
 254+ 9496 F5           7 push af
 255+ 9497 3A F4 89     	ld a,(Ctrl_0)
 256+ 949A CB 47        	bit 0,a
 257+ 949C 20 1D        	jr nz,8F
 258+ 949E F1           	pop af
 259+ 949F
 260+ 949F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 949F
 262+ 949F 1C           	inc e
 263+ 94A0 1D               dec e
 264+ 94A1 20 07            jr nz,10F
 265+ 94A3 90           	sub b
 266+ 94A4 6F               ld l,a
 267+ 94A5 22 C8 89     	ld (Posicion_actual),hl
 268+ 94A8 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 94AA              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 94AA CB 43        10 bit 0,e
 271+ 94AC 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 94AE              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 94AE C1           	pop bc
 274+ 94AF 18 A6        	jr 3B
 275+ 94B1 90           16 sub b
 276+ 94B2 6F               ld l,a
 277+ 94B3 22 C8 89     	ld (Posicion_actual),hl
 278+ 94B6 CD E4 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 94B9 18 06            jr 9F
 280+ 94BB E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 94BD 32 F4 89         ld (Ctrl_0),a
 282+ 94C0 F1           	pop af
 283+ 94C1 C1           9 pop bc
 284+ 94C2 1E 00        	ld e,0
 285+ 94C4 CD F4 94         call Inicializacion
 286+ 94C7 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 94C8 08           	ex af,af
 288+ 94C9 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 94CA 18 8B            jr 3B
 290+ 94CC
 291+ 94CC              ; --------------------
 292+ 94CC
 293+ 94CC 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 94CE CD 48 96     1 call PreviousScan
 295+ 94D1 10 FB            djnz 1B
 296+ 94D3 22 C8 89     	ld (Posicion_actual),hl
 297+ 94D6 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 94D7 C9           	ret
 299+ 94D8
 300+ 94D8              ; --------------------
 301+ 94D8
 302+ 94D8 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 94DA CD 39 96     1 call NextScan
 304+ 94DD 10 FB            djnz 1B
 305+ 94DF 22 C8 89     	ld (Posicion_actual),hl
 306+ 94E2 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94E3 C9           	ret
 308+ 94E4
 309+ 94E4              ; --------------------
 310+ 94E4              ;
 311+ 94E4              ;	22/01/23
 312+ 94E4              ;
 313+ 94E4              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94E4              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94E4              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94E4
 317+ 94E4
 318+ 94E4              Modificaccionne
 319+ 94E4
 320+ 94E4 3A DA 89     	ld a,(Cuad_objeto)
 321+ 94E7 FE 02        	cp 2
 322+ 94E9 CC CC 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94EC DC CC 94         call c,Modifica_Pos_actual
 324+ 94EF C8           	ret z
 325+ 94F0 CD D8 94         call Modifica_Pos_actual2
 326+ 94F3 C9               ret
 327+ 94F4
 328+ 94F4              ; *************************************************************************************************************************************************************************************************
 329+ 94F4              ;
 330+ 94F4              ;	13/8/22
 331+ 94F4              ;
 332+ 94F4              ;	Inicializacion
 333+ 94F4              ;
 334+ 94F4              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94F4              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94F4              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94F4              ;
 338+ 94F4              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94F4              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94F4              ;	_ desaparece/aparece.
 341+ 94F4
 342+ 94F4              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94F4              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94F4              ;
 345+ 94F4              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94F4              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94F4              ; 		   [E] ="0"
 348+ 94F4
 349+ 94F4              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94F4
 351+ 94F4 CD F9 98     Inicializacion call calcula_tercio
 352+ 94F7 28 36        	jr z,primit
 353+ 94F9 E6 02        	and 2
 354+ 94FB 20 07        	jr nz,segmit
 355+ 94FD 7D           	ld a,l
 356+ 94FE FE 7F        	cp $7f
 357+ 9500 38 2D        	jr c,primit
 358+ 9502 28 2B        	jr z,primit
 359+ 9504 CD 61 95     segmit call column
 360+ 9507 38 13        	jr c,tercuad
 361+ 9509 3E 04        cuarcuad ld a,4
 362+ 950B 32 DA 89     	ld (Cuad_objeto),a
 363+ 950E 21 20 48     	ld hl,$4820
 364+ 9511 22 03 8A     	ld (Limite_horizontal),hl
 365+ 9514 21 05 8A     	ld hl,Limite_vertical
 366+ 9517 36 0D        	ld (hl),$0d
 367+ 9519 08           	ex af,af
 368+ 951A 18 3C        	jr 1F
 369+ 951C              tercuad
 370+ 951C 3E 03        	ld a,3
 371+ 951E 32 DA 89     	ld (Cuad_objeto),a
 372+ 9521 21 20 48     	ld hl,$4820
 373+ 9524 22 03 8A     	ld (Limite_horizontal),hl
 374+ 9527 21 05 8A     	ld hl,Limite_vertical
 375+ 952A 36 12        	ld (hl),$12
 376+ 952C 08           	ex af,af
 377+ 952D 18 29        	jr 1F
 378+ 952F CD 61 95     primit call column
 379+ 9532 38 13        	jr c, primcuad
 380+ 9534              segcuad
 381+ 9534 3E 02        	ld a,2
 382+ 9536 32 DA 89     	ld (Cuad_objeto),a
 383+ 9539 21 C0 4F     	ld hl,$4fc0
 384+ 953C 22 03 8A     	ld (Limite_horizontal),hl
 385+ 953F 21 05 8A     	ld hl,Limite_vertical
 386+ 9542 36 0D        	ld (hl),$0d
 387+ 9544 08           	ex af,af
 388+ 9545 18 11        	jr 1F
 389+ 9547              primcuad
 390+ 9547 3E 01        	ld a,1
 391+ 9549 32 DA 89     	ld (Cuad_objeto),a
 392+ 954C 21 C0 4F     	ld hl,$4fc0
 393+ 954F 22 03 8A     	ld (Limite_horizontal),hl
 394+ 9552 21 05 8A     	ld hl,Limite_vertical
 395+ 9555 36 12        	ld (hl),$12
 396+ 9557 08           	ex af,af
 397+ 9558 CD 84 9C     1 call Genera_coordenadas
 398+ 955B 21 F4 89     	ld hl,Ctrl_0
 399+ 955E CB EE        	set 5,(hl)
 400+ 9560 C9           	ret
 401+ 9561
 402+ 9561              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9561
 404+ 9561              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9561              ;
 406+ 9561              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9561
 408+ 9561 7D           column ld a,l
 409+ 9562 E6 1F        	and $1f
 410+ 9564 FE 10         	cp $10
 411+ 9566 C9            	ret
 412+ 9567
 413+ 9567              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9567              ;
 415+ 9567              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9567              ;
 417+ 9567              ; 14/12/22
 418+ 9567              ;
 419+ 9567              ;	Modifica: A y BC.
 420+ 9567
 421+ 9567 3A DA 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 956A E6 01        	and 1
 423+ 956C 28 17        	jr z,1F
 424+ 956E
 425+ 956E              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 956E
 427+ 956E 3A CC 89     	ld a,(Coordenada_X)
 428+ 9571 47           	ld b,a
 429+ 9572 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9573 79           	ld a,c
 431+ 9574 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9575 38 08        	jr c,2F
 433+ 9577 47           	ld b,a
 434+ 9578 79           	ld a,c
 435+ 9579 90           	sub b
 436+ 957A 32 02 8A     	ld (Columnas),a
 437+ 957D 18 1B        	jr 4F
 438+ 957F 79           2 ld a,c
 439+ 9580 32 02 8A     	ld (Columnas),a
 440+ 9583 18 15        	jr 4F
 441+ 9585
 442+ 9585              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9585
 444+ 9585 3A CC 89     1 ld a,(Coordenada_X)
 445+ 9588 81           	add c
 446+ 9589 3D           	dec a
 447+ 958A D6 1F        	sub $1f
 448+ 958C 38 08        	jr c,3F
 449+ 958E 47           	ld b,a
 450+ 958F 79           	ld a,c
 451+ 9590 90           	sub b
 452+ 9591 32 02 8A     	ld (Columnas),a
 453+ 9594 18 04        	jr 4F
 454+ 9596 79           3 ld a,c
 455+ 9597 32 02 8A     	ld (Columnas),a
 456+ 959A D9           4 exx
 457+ 959B 4F           	ld c,a
 458+ 959C D9           	exx
 459+ 959D C9            ret
 460+ 959E
 461+ 959E              ; --------------------------------------------------------------------------------------------------------------------
 462+ 959E              ;
 463+ 959E              ; 7/1/23
 464+ 959E              ;
 465+ 959E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 959E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 959E              ;
 468+ 959E              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 959E              ;	DESTRUYE: HL,B Y A.
 470+ 959E
 471+ 959E 3A DA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 95A1 FE 02        	cp 2
 473+ 95A3 38 18        	jr c,1F
 474+ 95A5 28 16        	jr z,1F
 475+ 95A7 E6 01        	and 1
 476+ 95A9 28 0D        	jr z,3F
 477+ 95AB
 478+ 95AB              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 95AB
 480+ 95AB CD E7 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 95AE
 482+ 95AE 7D           9 ld a,l
 483+ 95AF E6 1F        	and $1f
 484+ 95B1 28 2A        	jr z,7F
 485+ 95B3 2B           	dec hl
 486+ 95B4 10 F8        	djnz 9B
 487+ 95B6 18 25        	jr 7F
 488+ 95B8
 489+ 95B8              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 95B8
 491+ 95B8 2A C8 89     3 ld hl,(Posicion_actual)
 492+ 95BB 18 20        	jr 7F
 493+ 95BD
 494+ 95BD 28 14        1 jr z,2F
 495+ 95BF
 496+ 95BF              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 95BF
 498+ 95BF CD E7 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 95C2
 500+ 95C2 7D           4 ld a,l
 501+ 95C3 E6 1F        	and $1f
 502+ 95C5 28 03        	jr z,6F
 503+ 95C7 2B           	dec hl
 504+ 95C8 10 F8        	djnz 4B
 505+ 95CA 06 0F        6 ld b,15
 506+ 95CC CD 48 96     5 call PreviousScan
 507+ 95CF 10 FB        	djnz 5B
 508+ 95D1 18 0A        	jr 7F
 509+ 95D3
 510+ 95D3              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 95D3
 512+ 95D3 CD E7 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 95D6 06 0F        	ld b,15
 514+ 95D8 CD 48 96     8 call PreviousScan
 515+ 95DB 10 FB        	djnz 8B
 516+ 95DD
 517+ 95DD E5           7 push hl
 518+ 95DE DD E1        	pop ix
 519+ 95E0
 520+ 95E0 2A CA 89     	ld hl,(Puntero_objeto)
 521+ 95E3 E5           	push hl
 522+ 95E4 FD E1        	pop iy
 523+ 95E6
 524+ 95E6 C9           	ret
 525+ 95E7
 526+ 95E7              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95E7              ;
 528+ 95E7              ;	2/1/23
 529+ 95E7              ;
 530+ 95E7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95E7              ;
 532+ 95E7              ;	Tras esta rutina tenemos:
 533+ 95E7              ;
 534+ 95E7              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95E7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95E7              ;
 537+ 95E7              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95E7
 539+ 95E7 2A C8 89     Operandos ld hl,(Posicion_actual)
 540+ 95EA 3A 02 8A     	ld a,(Columnas)
 541+ 95ED 3D           	dec a
 542+ 95EE 20 01        	jr nz,1F
 543+ 95F0 3C           	inc a
 544+ 95F1 47           1 ld b,a
 545+ 95F2 C9           	ret
 546+ 95F3
 547+ 95F3              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95F3              ;
 549+ 95F3              ;	3/1/23
 550+ 95F3              ;
 551+ 95F3              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95F3              ;
 553+ 95F3              ;	Destruye: A,B,HL y DE.
 554+ 95F3
 555+ 95F3              Define_rutina_de_impresion
 556+ 95F3
 557+ 95F3 3A C7 89     	ld a,(Columns)
 558+ 95F6 47           	ld b,a
 559+ 95F7 3A 02 8A     	ld a,(Columnas)
 560+ 95FA B8           	cp b
 561+ 95FB 20 0D        	jr nz,2f
 562+ 95FD
 563+ 95FD              ;	La entidad se imprime entera.
 564+ 95FD
 565+ 95FD 21 C9 96     	ld hl, Indice_entidades_completas
 566+ 9600 E6 01        	and 1
 567+ 9602 28 02        	jr z,1F
 568+ 9604
 569+ 9604 23           	inc hl
 570+ 9605 23           	inc hl
 571+ 9606
 572+ 9606 CD 2E 8D     1 call Extrae_address
 573+ 9609 C9           	ret		;	ret
 574+ 960A
 575+ 960A              ;	La entidad no se imprime entera en pantalla.
 576+ 960A
 577+ 960A 3A DA 89     2 ld a,(Cuad_objeto)
 578+ 960D E6 01        	and 1
 579+ 960F 28 17        	jr z,3F
 580+ 9611
 581+ 9611              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 9611
 583+ 9611 21 CD 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 9614 3A C7 89     4 ld a,(Columns)
 585+ 9617 E6 01        	and 1
 586+ 9619 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 961B
 588+ 961B 23           	inc hl
 589+ 961C 23           	inc hl
 590+ 961D
 591+ 961D 3A 02 8A     	ld a,(Columnas)
 592+ 9620 E6 01        	and 1
 593+ 9622 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 9624
 595+ 9624 23           	inc hl
 596+ 9625 23           	inc hl
 597+ 9626
 598+ 9626 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 9628
 600+ 9628 21 D3 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 962B 18 E7        	jr 4B
 602+ 962D
 603+ 962D              ; --------------------------------------------------------------------------------------------------------------------
 604+ 962D              ;
 605+ 962D              ;	Prepara_draw
 606+ 962D              ;
 607+ 962D              ;	Es una rutina de carga.
 608+ 962D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 962D              ;
 610+ 962D              ;	FUNCIONAMIENTO:
 611+ 962D              ;
 612+ 962D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 962D              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 962D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 962D              ;
 616+ 962D              ;	DESTRUYE:
 617+ 962D              ;
 618+ 962D              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 962D
 620+ 962D 21 C6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 9630 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 9631 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 9632 4E           	ld c,(hl)
 624+ 9633 2A C8 89     	ld hl,(Posicion_actual)
 625+ 9636 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 9638 C9           	ret
 627+ 9639
 628+ 9639              ;----------------------------------------------------------------------------------------------------------------
 629+ 9639              ;
 630+ 9639              ;	5/08/22
 631+ 9639              ;
 632+ 9639              ;   NextScan.
 633+ 9639              ;
 634+ 9639              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 9639              ;
 636+ 9639              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 9639              ;
 638+ 9639              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 9639              ;
 640+ 9639              ;       DESTRUIDOS: AF y HL !!!
 641+ 9639              ;
 642+ 9639              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 9639              ;
 644+ 9639
 645+ 9639 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 963A 7C               ld a,h
 647+ 963B E6 07            and 7
 648+ 963D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 963E
 650+ 963E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 963F C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 9641 6F               ld l,a
 653+ 9642 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9643
 655+ 9643 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9644 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9646 67               ld h,a
 658+ 9647 C9               ret
 659+ 9648
 660+ 9648              ;----------------------------------------------------------------------------------------------------------------
 661+ 9648              ;
 662+ 9648              ;	5/08/22
 663+ 9648              ;
 664+ 9648              ;   PreviousScan.
 665+ 9648              ;
 666+ 9648              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 9648              ;
 668+ 9648              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 9648              ;
 670+ 9648              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9648              ;
 672+ 9648              ;       DESTRUIDOS: AF y HL !!!
 673+ 9648              ;
 674+ 9648              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9648              ;
 676+ 9648
 677+ 9648 7C           PreviousScan ld a,h
 678+ 9649 25               dec h               ; Dec H.
 679+ 964A E6 07            and 7
 680+ 964C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 964D
 682+ 964D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 964E D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 9650 6F               ld l,a
 685+ 9651 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 9652
 687+ 9652 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9653 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 9655 67               ld h,a
 690+ 9656 C9               ret
 691+ 9657
 692+ 9657              ; -----------------------------------------------------------------------------------
 693+ 9657              ;
 694+ 9657              ;	28/2/23
 695+ 9657              ;
 696+ 9657              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9657              ;	Extrae fotos de Album_de_fotos.
 698+ 9657
 699+ 9657 3A 14 8A     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 965A A7           	and a
 701+ 965B C8           	ret z
 702+ 965C ED 73 19 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9660 31 00 70     	ld sp,Album_de_fotos
 704+ 9663
 705+ 9663 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9665 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9666 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9667
 709+ 9667 ED 73 1B 8A  	ld (Stack_2),sp
 710+ 966B ED 7B 19 8A  	ld sp,(Stack)
 711+ 966F
 712+ 966F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 966F
 714+ 966F 3E CD        	ld a,$cd
 715+ 9671 32 79 96     	ld (Imprime),a
 716+ 9674 EB           	ex de,hl
 717+ 9675 22 7A 96     	ld (Imprime+1),hl
 718+ 9678 EB           	ex de,hl
 719+ 9679
 720+ 9679              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9679
 722+ 9679 00 00 00     Imprime db 0,0,0
 723+ 967C
 724+ 967C 3A 14 8A     	ld a,(Numero_de_malotes)
 725+ 967F 3D           	dec a
 726+ 9680 28 09        	jr z,1F
 727+ 9682 32 14 8A      	ld (Numero_de_malotes),a
 728+ 9685
 729+ 9685 ED 7B 1B 8A   	ld sp,(Stack_2)
 730+ 9689 18 D8        	jr 2B
 731+ 968B
 732+ 968B AF           1 xor a
 733+ 968C 32 1B 8A     	ld (Stack_2),a
 734+ 968F C9           	ret
 735+ 9690
 736+ 9690              ; -----------------------------------------------------------------------------------
 737+ 9690              ;
 738+ 9690              ;	28/2/23
 739+ 9690              ;
 740+ 9690              ;	Pinta los disparos generados.
 741+ 9690
 742+ 9690              Extrae_foto_disparos
 743+ 9690
 744+ 9690 3A 21 8A     	ld a,(Numero_de_disparotes)
 745+ 9693 A7           	and a
 746+ 9694 C8           	ret z
 747+ 9695 ED 73 19 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9699 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 969C
 750+ 969C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 969E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 969F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 96A0
 754+ 96A0 ED 73 1B 8A  	ld (Stack_2),sp
 755+ 96A4 ED 7B 19 8A  	ld sp,(Stack)
 756+ 96A8
 757+ 96A8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 96A8
 759+ 96A8 3E CD        	ld a,$cd
 760+ 96AA 32 B2 96     	ld (Imprime2),a
 761+ 96AD EB           	ex de,hl
 762+ 96AE 22 B3 96     	ld (Imprime2+1),hl
 763+ 96B1 EB           	ex de,hl
 764+ 96B2
 765+ 96B2              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 96B2
 767+ 96B2 00 00 00     Imprime2 db 0,0,0
 768+ 96B5
 769+ 96B5 3A 21 8A     	ld a,(Numero_de_disparotes)
 770+ 96B8 3D           	dec a
 771+ 96B9 28 09        	jr z,1F
 772+ 96BB 32 21 8A      	ld (Numero_de_disparotes),a
 773+ 96BE
 774+ 96BE ED 7B 1B 8A  	ld sp,(Stack_2)
 775+ 96C2 18 D8        	jr 2B
 776+ 96C4
 777+ 96C4 AF           1 xor a
 778+ 96C5 32 1B 8A     	ld (Stack_2),a
 779+ 96C8 C9           	ret
 780+ 96C9
# file closed: Draw_XOR.asm
1276  96C9              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96C9              ;   índices de Rutinas de impresión.
   2+ 96C9
   3+ 96C9 D9 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96CB 06 97            defw Pinta_Amadeus_3x2
   5+ 96CD
   6+ 96CD 5C 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96CF FC 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96D1 B0 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96D3
  10+ 96D3 86 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96D5 8A 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96D7 3E 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96D9
  14+ 96D9
  15+ 96D9              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96D9              ;
  17+ 96D9              ;   12/12/22
  18+ 96D9              ;
  19+ 96D9              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96D9              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96D9              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96D9              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96D9              ;
  24+ 96D9              ;   Modifica: DE y HL.
  25+ 96D9
  26+ 96D9 ED 73 19 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96DD FD F9        	ld sp,iy
  28+ 96DF 06 10            ld b,16
  29+ 96E1 D1           1 pop de
  30+ 96E2 7B               ld a,e
  31+ 96E3 AE               xor (hl)
  32+ 96E4 77           	ld (hl),a
  33+ 96E5 23           	inc hl
  34+ 96E6 7A               ld a,d
  35+ 96E7 AE               xor (hl)
  36+ 96E8 77           	ld (hl),a
  37+ 96E9 2B           	dec hl
  38+ 96EA 24           	inc h
  39+ 96EB 7C               ld a,h
  40+ 96EC E6 07            and 7
  41+ 96EE 20 0A            jr nz,2F
  42+ 96F0 7D               ld a,l
  43+ 96F1 C6 20            add a,$20
  44+ 96F3 6F               ld l,a
  45+ 96F4 38 04            jr c,2F
  46+ 96F6 7C               ld a,h
  47+ 96F7 D6 08            sub 8
  48+ 96F9 67               ld h,a
  49+ 96FA 7C           2 ld a,h
  50+ 96FB FE 58            cp $58
  51+ 96FD 28 02            jr z,3F
  52+ 96FF 10 E0            djnz 1B
  53+ 9701 ED 7B 19 8A  3 ld sp,(Stack)
  54+ 9705 C9           	ret
  55+ 9706
  56+ 9706 ED 73 19 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 970A FD F9        	ld sp,iy
  58+ 970C 06 08            ld b,8
  59+ 970E D1           1 pop de
  60+ 970F 7B               ld a,e
  61+ 9710 AE               xor (hl)
  62+ 9711 77           	ld (hl),a
  63+ 9712 23           	inc hl
  64+ 9713 7A               ld a,d
  65+ 9714 AE               xor (hl)
  66+ 9715 77           	ld (hl),a
  67+ 9716 23           	inc hl
  68+ 9717 D1           	pop de
  69+ 9718 7B               ld a,e
  70+ 9719 AE               xor (hl)
  71+ 971A 77           	ld (hl),a
  72+ 971B 2B           	dec hl
  73+ 971C 2B           	dec hl
  74+ 971D 24           	inc h
  75+ 971E 7C               ld a,h
  76+ 971F E6 07            and 7
  77+ 9721 20 0A            jr nz,2F
  78+ 9723 7D               ld a,l
  79+ 9724 C6 20            add a,$20
  80+ 9726 6F               ld l,a
  81+ 9727 38 04            jr c,2F
  82+ 9729 7C               ld a,h
  83+ 972A D6 08            sub 8
  84+ 972C 67               ld h,a
  85+ 972D 7C           2 ld a,h
  86+ 972E FE 58            cp $58
  87+ 9730 28 25            jr z,4F
  88+ 9732 7A               ld a,d
  89+ 9733 AE               xor (hl)
  90+ 9734 77               ld (hl),a
  91+ 9735 D1           	pop de
  92+ 9736 23           	inc hl
  93+ 9737 7B               ld a,e
  94+ 9738 AE               xor (hl)
  95+ 9739 77           	ld (hl),a
  96+ 973A 23           	inc hl
  97+ 973B 7A               ld a,d
  98+ 973C AE               xor (hl)
  99+ 973D 77           	ld (hl),a
 100+ 973E 2B           	dec hl
 101+ 973F 2B           	dec hl
 102+ 9740 24           	inc h
 103+ 9741 7C               ld a,h
 104+ 9742 E6 07            and 7
 105+ 9744 20 0A            jr nz,3F
 106+ 9746 7D               ld a,l
 107+ 9747 C6 20            add a,$20
 108+ 9749 6F               ld l,a
 109+ 974A 38 04            jr c,3F
 110+ 974C 7C               ld a,h
 111+ 974D D6 08            sub 8
 112+ 974F 67               ld h,a
 113+ 9750 7C           3 ld a,h
 114+ 9751 FE 58            cp $58
 115+ 9753 28 02            jr z,4F
 116+ 9755 10 B7            djnz 1B
 117+ 9757 ED 7B 19 8A  4 ld sp,(Stack)
 118+ 975B C9           	ret
 119+ 975C
 120+ 975C              ; ---------------------------------------------------
 121+ 975C
 122+ 975C ED 73 19 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9760 FD F9        	ld sp,iy
 124+ 9762
 125+ 9762              ; >>>
 126+ 9762
 127+ 9762 06 10            ld b,16
 128+ 9764 D1           1 pop de
 129+ 9765 7A           	ld a,d
 130+ 9766 AE           	xor (hl)
 131+ 9767 77           	ld (hl),a
 132+ 9768 24           	inc h
 133+ 9769 7C               ld a,h
 134+ 976A E6 07            and 7
 135+ 976C 20 0C            jr nz,2F
 136+ 976E 7D               ld a,l
 137+ 976F C6 20            add a,$20
 138+ 9771 6F               ld l,a
 139+ 9772 38 06            jr c,2F
 140+ 9774 7C               ld a,h
 141+ 9775 D6 08            sub 8
 142+ 9777 67               ld h,a
 143+ 9778 18 00            jr 2F
 144+ 977A 7C           2 ld a,h
 145+ 977B FE 58            cp $58
 146+ 977D 28 02            jr z,3F
 147+ 977F 10 E3            djnz 1B
 148+ 9781 ED 7B 19 8A  3 ld sp,(Stack)
 149+ 9785 C9           	ret
 150+ 9786
 151+ 9786 ED 73 19 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 978A FD F9        	ld sp,iy
 153+ 978C
 154+ 978C              ; >>>
 155+ 978C
 156+ 978C 06 10            ld b,16
 157+ 978E D1           1 pop de
 158+ 978F 7B           	ld a,e
 159+ 9790 AE           	xor (hl)
 160+ 9791 77           	ld (hl),a
 161+ 9792 24           	inc h
 162+ 9793 7C               ld a,h
 163+ 9794 E6 07            and 7
 164+ 9796 20 0C            jr nz,2F
 165+ 9798 7D               ld a,l
 166+ 9799 C6 20            add a,$20
 167+ 979B 6F               ld l,a
 168+ 979C 38 06            jr c,2F
 169+ 979E 7C               ld a,h
 170+ 979F D6 08            sub 8
 171+ 97A1 67               ld h,a
 172+ 97A2 18 00            jr 2F
 173+ 97A4 7C           2 ld a,h
 174+ 97A5 FE 58            cp $58
 175+ 97A7 28 02            jr z,3F
 176+ 97A9 10 E3            djnz 1B
 177+ 97AB ED 7B 19 8A  3 ld sp,(Stack)
 178+ 97AF C9           	ret
 179+ 97B0
 180+ 97B0              ; ---------------------------------------------------
 181+ 97B0
 182+ 97B0 ED 73 19 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97B4 FD F9        	ld sp,iy
 184+ 97B6 06 08            ld b,8
 185+ 97B8 D1           1 pop de
 186+ 97B9 7A           	ld a,d
 187+ 97BA AE           	xor (hl)
 188+ 97BB 77           	ld (hl),a
 189+ 97BC 23           	inc hl
 190+ 97BD D1           	pop de
 191+ 97BE 7B           	ld a,e
 192+ 97BF AE           	xor (hl)
 193+ 97C0 77           	ld (hl),a
 194+ 97C1 2B           	dec hl
 195+ 97C2 24            	inc h
 196+ 97C3 7C               ld a,h
 197+ 97C4 E6 07            and 7
 198+ 97C6 20 0A            jr nz,2F
 199+ 97C8 7D               ld a,l
 200+ 97C9 C6 20            add a,$20
 201+ 97CB 6F               ld l,a
 202+ 97CC 38 04            jr c,2F
 203+ 97CE 7C               ld a,h
 204+ 97CF D6 08            sub 8
 205+ 97D1 67               ld h,a
 206+ 97D2 7C           2 ld a,h
 207+ 97D3 FE 58            cp $58
 208+ 97D5 28 20            jr z,4F
 209+ 97D7 D1               pop de
 210+ 97D8 7B           	ld a,e
 211+ 97D9 AE           	xor (hl)
 212+ 97DA 77           	ld (hl),a
 213+ 97DB 23           	inc hl
 214+ 97DC 7A           	ld a,d
 215+ 97DD AE           	xor (hl)
 216+ 97DE 77           	ld (hl),a
 217+ 97DF 2B           	dec hl
 218+ 97E0 24           	inc h
 219+ 97E1 7C               ld a,h
 220+ 97E2 E6 07            and 7
 221+ 97E4 20 0A            jr nz,3F
 222+ 97E6 7D               ld a,l
 223+ 97E7 C6 20            add a,$20
 224+ 97E9 6F               ld l,a
 225+ 97EA 38 04            jr c,3F
 226+ 97EC 7C               ld a,h
 227+ 97ED D6 08            sub 8
 228+ 97EF 67               ld h,a
 229+ 97F0 7C           3 ld a,h
 230+ 97F1 FE 58            cp $58
 231+ 97F3 28 02            jr z,4F
 232+ 97F5 10 C1            djnz 1B
 233+ 97F7 ED 7B 19 8A  4 ld sp,(Stack)
 234+ 97FB C9           	ret
 235+ 97FC
 236+ 97FC ED 73 19 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9800 FD F9        	ld sp,iy
 238+ 9802 06 08            ld b,8
 239+ 9804 D1           1 pop de
 240+ 9805 D1           	pop de
 241+ 9806 7B           	ld a,e
 242+ 9807 AE           	xor (hl)
 243+ 9808 77           	ld (hl),a
 244+ 9809 24            	inc h
 245+ 980A 7C               ld a,h
 246+ 980B E6 07            and 7
 247+ 980D 20 0A            jr nz,2F
 248+ 980F 7D               ld a,l
 249+ 9810 C6 20            add a,$20
 250+ 9812 6F               ld l,a
 251+ 9813 38 04            jr c,2F
 252+ 9815 7C               ld a,h
 253+ 9816 D6 08            sub 8
 254+ 9818 67               ld h,a
 255+ 9819 7C           2 ld a,h
 256+ 981A FE 58            cp $58
 257+ 981C 28 1B            jr z,4F
 258+ 981E D1               pop de
 259+ 981F 7A           	ld a,d
 260+ 9820 AE           	xor (hl)
 261+ 9821 77           	ld (hl),a
 262+ 9822 24           	inc h
 263+ 9823 7C               ld a,h
 264+ 9824 E6 07            and 7
 265+ 9826 20 0A            jr nz,3F
 266+ 9828 7D               ld a,l
 267+ 9829 C6 20            add a,$20
 268+ 982B 6F               ld l,a
 269+ 982C 38 04            jr c,3F
 270+ 982E 7C               ld a,h
 271+ 982F D6 08            sub 8
 272+ 9831 67               ld h,a
 273+ 9832 7C           3 ld a,h
 274+ 9833 FE 58            cp $58
 275+ 9835 28 02            jr z,4F
 276+ 9837 10 CB            djnz 1B
 277+ 9839 ED 7B 19 8A  4 ld sp,(Stack)
 278+ 983D C9           	ret
 279+ 983E
 280+ 983E ED 73 19 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9842 FD F9        	ld sp,iy
 282+ 9844 06 08            ld b,8
 283+ 9846 D1           1 pop de
 284+ 9847 7B           	ld a,e
 285+ 9848 AE           	xor (hl)
 286+ 9849 77           	ld (hl),a
 287+ 984A 23           	inc hl
 288+ 984B 7A           	ld a,d
 289+ 984C AE           	xor (hl)
 290+ 984D 77           	ld (hl),a
 291+ 984E 2B           	dec hl
 292+ 984F 24             	inc h
 293+ 9850 7C               ld a,h
 294+ 9851 E6 07            and 7
 295+ 9853 20 0A            jr nz,2F
 296+ 9855 7D               ld a,l
 297+ 9856 C6 20            add a,$20
 298+ 9858 6F               ld l,a
 299+ 9859 38 04            jr c,2F
 300+ 985B 7C               ld a,h
 301+ 985C D6 08            sub 8
 302+ 985E 67               ld h,a
 303+ 985F 7C           2 ld a,h
 304+ 9860 FE 58            cp $58
 305+ 9862 28 21            jr z,4F
 306+ 9864 D1               pop de
 307+ 9865 7A           	ld a,d
 308+ 9866 AE           	xor (hl)
 309+ 9867 77           	ld (hl),a
 310+ 9868 23           	inc hl
 311+ 9869 D1               pop de
 312+ 986A 7B           	ld a,e
 313+ 986B AE           	xor (hl)
 314+ 986C 77           	ld (hl),a
 315+ 986D 2B           	dec hl
 316+ 986E 24           	inc h
 317+ 986F 7C               ld a,h
 318+ 9870 E6 07            and 7
 319+ 9872 20 0A            jr nz,3F
 320+ 9874 7D               ld a,l
 321+ 9875 C6 20            add a,$20
 322+ 9877 6F               ld l,a
 323+ 9878 38 04            jr c,3F
 324+ 987A 7C               ld a,h
 325+ 987B D6 08            sub 8
 326+ 987D 67               ld h,a
 327+ 987E 7C           3 ld a,h
 328+ 987F FE 58            cp $58
 329+ 9881 28 02            jr z,4F
 330+ 9883 10 C1            djnz 1B
 331+ 9885 ED 7B 19 8A  4 ld sp,(Stack)
 332+ 9889 C9           	ret
 333+ 988A
 334+ 988A ED 73 19 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 988E FD F9        	ld sp,iy
 336+ 9890 06 08            ld b,8
 337+ 9892 D1           1 pop de
 338+ 9893 7B           	ld a,e
 339+ 9894 AE           	xor (hl)
 340+ 9895 77           	ld (hl),a
 341+ 9896 24            	inc h
 342+ 9897 7C               ld a,h
 343+ 9898 E6 07            and 7
 344+ 989A 20 0A            jr nz,2F
 345+ 989C 7D               ld a,l
 346+ 989D C6 20            add a,$20
 347+ 989F 6F               ld l,a
 348+ 98A0 38 04            jr c,2F
 349+ 98A2 7C               ld a,h
 350+ 98A3 D6 08            sub 8
 351+ 98A5 67               ld h,a
 352+ 98A6 7C           2 ld a,h
 353+ 98A7 FE 58            cp $58
 354+ 98A9 28 1C            jr z,4F
 355+ 98AB D1               pop de
 356+ 98AC 7A           	ld a,d
 357+ 98AD AE           	xor (hl)
 358+ 98AE 77           	ld (hl),a
 359+ 98AF 24           	inc h
 360+ 98B0 7C               ld a,h
 361+ 98B1 E6 07            and 7
 362+ 98B3 20 0A            jr nz,3F
 363+ 98B5 7D               ld a,l
 364+ 98B6 C6 20            add a,$20
 365+ 98B8 6F               ld l,a
 366+ 98B9 38 04            jr c,3F
 367+ 98BB 7C               ld a,h
 368+ 98BC D6 08            sub 8
 369+ 98BE 67               ld h,a
 370+ 98BF 7C           3 ld a,h
 371+ 98C0 FE 58            cp $58
 372+ 98C2 28 03            jr z,4F
 373+ 98C4 D1               pop de
 374+ 98C5 10 CB            djnz 1B
 375+ 98C7 ED 7B 19 8A  4 ld sp,(Stack)
 376+ 98CB C9           	ret
 377+ 98CC
 378+ 98CC              ; ---------------------------------------------------
 379+ 98CC              ;
 380+ 98CC              ;   27/02/23
 381+ 98CC              ;
 382+ 98CC              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98CC              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98CC              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98CC
 386+ 98CC ED 73 19 8A  Pinta_Disparo ld (Stack),sp
 387+ 98D0 FD F9            ld sp,iy
 388+ 98D2 06 04            ld b,4
 389+ 98D4 D1           1 pop de
 390+ 98D5 7B               ld a,e
 391+ 98D6 AE               xor (hl)
 392+ 98D7 77               ld (hl),a
 393+ 98D8 23               inc hl
 394+ 98D9 7A               ld a,d
 395+ 98DA AE               xor (hl)
 396+ 98DB 77               ld (hl),a
 397+ 98DC 2B               dec hl
 398+ 98DD
 399+ 98DD 24               inc h
 400+ 98DE 7C               ld a,h
 401+ 98DF E6 07            and 7
 402+ 98E1 20 0A            jr nz,2F
 403+ 98E3 7D               ld a,l
 404+ 98E4 C6 20            add a,$20
 405+ 98E6 6F               ld l,a
 406+ 98E7 38 04            jr c,2F
 407+ 98E9 7C               ld a,h
 408+ 98EA D6 08            sub 8
 409+ 98EC 67               ld h,a
 410+ 98ED 7C           2 ld a,h
 411+ 98EE FE 58            cp $58
 412+ 98F0 28 02            jr z,3F
 413+ 98F2
 414+ 98F2 10 E0            djnz 1B
 415+ 98F4 ED 7B 19 8A  3 ld sp,(Stack)
 416+ 98F8 C9               ret
 417+ 98F9
# file closed: Rutinas_de_impresion_sprites.asm
1277  98F9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98F9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98F9              ;
   3+ 98F9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98F9              ;
   5+ 98F9              ; *****************************************************************************************************************************************************************************************
   6+ 98F9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98F9
   8+ 98F9 7C           calcula_tercio ld a,h
   9+ 98FA E6 18        	and $18
  10+ 98FC CB 2F        	sra a
  11+ 98FE CB 2F        	sra a
  12+ 9900 CB 2F        	sra a
  13+ 9902 C9           	ret
  14+ 9903
# file closed: calcula_tercio.asm
1278  9903              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9903              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9903              ;
   3+ 9903              ;
   4+ 9903              ;	CLS.
   5+ 9903              ;
   6+ 9903              ;	Limpia la pantalla y define sus atributos.
   7+ 9903              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9903              ;
   9+ 9903              ;	COLORES: 0 ..... NEGRO
  10+ 9903              ;    		 1 ..... AZUL
  11+ 9903              ; 			 2 ..... ROJO
  12+ 9903              ;			 3 ..... MAGENTA
  13+ 9903              ; 			 4 ..... VERDE
  14+ 9903              ; 			 5 ..... CIAN
  15+ 9903              ;			 6 ..... AMARILLO
  16+ 9903              ; 			 7 ..... BLANCO
  17+ 9903              ;
  18+ 9903              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9903              ;
  20+ 9903              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9903
  22+ 9903
  23+ 9903 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9906 11 01 40     	LD DE,$4001
  25+ 9909 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 990C 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 990E ED B0        	LDIR
  28+ 9910 01 FF 02     	LD BC,767
  29+ 9913 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9914 ED B0        	LDIR
  31+ 9916 C9           	ret
  32+ 9917
# file closed: Cls.asm
1279  9917              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9917              ; ******************************************************************************************************************************************************************************************
   2+ 9917              ;
   3+ 9917              ;   20/05/23
   4+ 9917              ;
   5+ 9917              ;	Recompone_posicion_inicio
   6+ 9917              ;
   7+ 9917              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9917              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9917              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9917              ;	_ a una u otra rutina.
  11+ 9917
  12+ 9917              Recompone_posicion_inicio
  13+ 9917
  14+ 9917 2A D8 89     	ld hl,(Posicion_inicio)
  15+ 991A 7D           	ld a,l
  16+ 991B E6 1F        	and $1f
  17+ 991D 28 16        	jr z,1F
  18+ 991F
  19+ 991F FE 1F        	cp $1f
  20+ 9921 28 0D        	jr z,3F
  21+ 9923
  22+ 9923 21 06 8A     	ld hl,Ctrl_2
  23+ 9926 CB C6        	set 0,(hl)
  24+ 9928 2A CA 89     	ld hl,(Puntero_objeto)
  25+ 992B 22 09 8A     	ld (Repone_puntero_objeto),hl
  26+ 992E 18 08        	jr 2F
  27+ 9930
  28+ 9930 CD D1 9A     3 call Mov_left
  29+ 9933 18 03        	jr 2F
  30+ 9935
  31+ 9935 CD B3 99     1 call Mov_right
  32+ 9938 21 00 F0     2 ld hl,Sprite_vacio
  33+ 993B 22 CA 89     	ld (Puntero_objeto),hl
  34+ 993E C9           	ret
  35+ 993F
  36+ 993F              ; ******************************************************************************************************************************************************************************************
  37+ 993F              ;
  38+ 993F              ;   27/05/23
  39+ 993F              ;
  40+ 993F              ;	Mov_down
  41+ 993F              ;
  42+ 993F              ; 	Mueve el Sprite X px hacia abajo.
  43+ 993F              ;
  44+ 993F              ;
  45+ 993F              Mov_down
  46+ 993F
  47+ 993F CD A1 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9942              ;																	; _ repone (Puntero_objeto).
  49+ 9942 21 F4 89     	ld hl,Ctrl_0
  50+ 9945 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9947              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9947              ; 																	; _ en el caso de que no lo haya.
  53+ 9947 3A DE 89     	ld a,(Vel_down)
  54+ 994A 47           	ld b,a
  55+ 994B 2A C8 89         ld hl,(Posicion_actual)
  56+ 994E CD F9 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9951 E6 02        	and 2
  58+ 9953 28 0F        	jr z,1F
  59+ 9955
  60+ 9955              ; Nos encontramos en el último tercio de pantalla.
  61+ 9955              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9955
  63+ 9955 7C           	ld a,h
  64+ 9956 FE 57        	cp $57
  65+ 9958 20 0A        	jr nz,1F
  66+ 995A 7D           	ld a,l
  67+ 995B C6 20        	add $20
  68+ 995D 30 05        	jr nc,1F
  69+ 995F
  70+ 995F              ; ------------------------------
  71+ 995F              ;	call Reaparece_arriba
  72+ 995F CD 5E 9C     	call Reinicio
  73+ 9962              ; ------------------------------
  74+ 9962
  75+ 9962 18 08        	jr 3F
  76+ 9964 CD 39 96     1 call NextScan
  77+ 9967 22 C8 89     	ld (Posicion_actual),hl
  78+ 996A 10 E2            djnz 2B
  79+ 996C CD 84 9C     3 call Genera_coordenadas
  80+ 996F C9           	ret
  81+ 9970
  82+ 9970              ; ******************************************************************************************************************************************************************************************
  83+ 9970              ;
  84+ 9970              ;   27/05/23
  85+ 9970              ;
  86+ 9970              ;	Mov_up
  87+ 9970              ;
  88+ 9970              ; 	Mueve el Sprite hacia arriba.
  89+ 9970              ;
  90+ 9970              ;
  91+ 9970              Mov_up
  92+ 9970
  93+ 9970 CD A1 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9973              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9973 21 F4 89     	ld hl,Ctrl_0
  96+ 9976 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9978              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9978              ; 																		; _ en el caso de que no lo haya.
  99+ 9978 3A DD 89     	ld a,(Vel_up)
 100+ 997B 47           	ld b,a
 101+ 997C 2A C8 89     	ld hl,(Posicion_actual)
 102+ 997F CD F9 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9982 A7           	and a
 104+ 9983 20 10        	jr nz,1F
 105+ 9985
 106+ 9985              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9985              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9985
 109+ 9985 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9986 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9988 20 0B            jr nz,1F
 112+ 998A 7D               ld a,l
 113+ 998B D6 20            sub $20
 114+ 998D 30 06            jr nc,1F
 115+ 998F 25               dec h
 116+ 9990
 117+ 9990              ; -----------------------------
 118+ 9990 CD 3F 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9993              ;	call Reinicio
 120+ 9993              ; -----------------------------
 121+ 9993
 122+ 9993 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9995 CD 48 96     1 call PreviousScan
 124+ 9998 22 C8 89     	ld (Posicion_actual),hl
 125+ 999B 10 E2            djnz 3B
 126+ 999D CD 84 9C     2 call Genera_coordenadas
 127+ 99A0 C9           	ret
 128+ 99A1
 129+ 99A1              ; -----------------------------
 130+ 99A1              ;
 131+ 99A1              ;	27/5/23
 132+ 99A1              ;
 133+ 99A1              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 99A1              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 99A1              ;
 136+ 99A1              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 99A1              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 99A1              ;
 139+ 99A1              ;	Modifica: A y (Puntero_objeto).
 140+ 99A1
 141+ 99A1 3A 06 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 99A4 CB 47        	bit 0,a
 143+ 99A6 C8           	ret z
 144+ 99A7 CB 87        	res 0,a
 145+ 99A9 32 06 8A     	ld (Ctrl_2),a
 146+ 99AC 2A 09 8A     	ld hl,(Repone_puntero_objeto)
 147+ 99AF 22 CA 89     	ld (Puntero_objeto),hl
 148+ 99B2 C9           	ret
 149+ 99B3
 150+ 99B3              ; ******************************************************************************************************************************************************************************************
 151+ 99B3              ;
 152+ 99B3              ;	19/10/22
 153+ 99B3              ;
 154+ 99B3              ;	Mov_right.
 155+ 99B3              ;
 156+ 99B3              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 99B3              ;
 158+ 99B3
 159+ 99B3 21 F4 89     Mov_right ld hl,Ctrl_0
 160+ 99B6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 99B8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 99B8              ; 																	; _ en el caso de que no lo haya.
 163+ 99B8 3A F4 89     	ld a,(Ctrl_0)
 164+ 99BB CB 77        	bit 6,a
 165+ 99BD 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 99BF
 167+ 99BF CD ED 9B     	call Stop_Amadeus_right
 168+ 99C2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 99C3 18 4D        	jr 8F
 170+ 99C5
 171+ 99C5 3A CC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 99C8 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 99CA 20 46        	jr nz,8F
 174+ 99CC
 175+ 99CC 3A CE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 99CF A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 99D0 28 40        	jr z,8F
 178+ 99D2
 179+ 99D2              ; ---------- ---------- ----------
 180+ 99D2              ;
 181+ 99D2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 99D2
 183+ 99D2 3A DC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 99D5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 99D7 28 11        	jr z,1F
 186+ 99D9 38 06        	jr c,6F
 187+ 99DB FE 04        	cp 4
 188+ 99DD 28 14        	jr z,7F
 189+ 99DF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99E1
 191+ 99E1              ; ---------- ---------- ----------
 192+ 99E1              ;
 193+ 99E1              ; Perfiles de velocidad
 194+ 99E1              ;
 195+ 99E1
 196+ 99E1 3A CE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99E4 FE FE        	cp $fe
 198+ 99E6 20 2A        	jr nz,8F
 199+ 99E8 18 10        	jr 3F
 200+ 99EA 3A CE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99ED FE FD        	cp $fd
 202+ 99EF 20 21        	jr nz,8F
 203+ 99F1 18 07        	jr 3F
 204+ 99F3 3A CE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99F6 FE FB        	cp $fb
 206+ 99F8 20 18        	jr nz,8F
 207+ 99FA
 208+ 99FA              ; ---------- ---------- ----------
 209+ 99FA
 210+ 99FA              3
 211+ 99FA CD 2D 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99FD              ;	call Reinicio
 213+ 99FD
 214+ 99FD              ; ---------- ---------- ----------
 215+ 99FD              ;
 216+ 99FD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99FD
 218+ 99FD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99FF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 9A00 CD 19 9A     	call DESPLZ_DER
 221+ 9A03 C1           	pop bc
 222+ 9A04 10 F9        	djnz 5B
 223+ 9A06 2A C8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 9A09 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 9A0A 22 C8 89     	ld (Posicion_actual),hl
 226+ 9A0D CD 84 9C     	call Genera_coordenadas
 227+ 9A10 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 9A12
 229+ 9A12              ; ---------- ---------- ----------
 230+ 9A12
 231+ 9A12 2A C8 89     8 ld hl,(Posicion_actual)
 232+ 9A15 CD 19 9A     	call DESPLZ_DER
 233+ 9A18 C9           2 ret
 234+ 9A19
 235+ 9A19              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 9A19              ;
 237+ 9A19              ;	22/9/22
 238+ 9A19              ;
 239+ 9A19
 240+ 9A19 CD 28 9A     DESPLZ_DER call Desplaza_derecha
 241+ 9A1C CD 74 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 9A1F CD 9D 9A         call Ciclo_completo
 243+ 9A22 21 F4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 9A25 CB FE        	set 7,(hl)
 245+ 9A27 C9           	ret
 246+ 9A28
 247+ 9A28              ; ******************************************************************************************************************************************************************************************
 248+ 9A28              ;	15/02/23
 249+ 9A28              ;
 250+ 9A28
 251+ 9A28 3A DC 89     Desplaza_derecha ld a,(Vel_right)
 252+ 9A2B 47           	ld b,a
 253+ 9A2C 2A D4 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9A2F 23           1 inc hl
 255+ 9A30 23           	inc hl
 256+ 9A31 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9A33 22 D4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9A36 CD 2E 8D     	call Extrae_address
 259+ 9A39 22 CA 89     	ld (Puntero_objeto),hl
 260+ 9A3C
 261+ 9A3C              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9A3C
 263+ 9A3C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9A3C              ; Cuántos movimientos hemos hecho ??
 265+ 9A3C              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9A3C
 267+ 9A3C 2A D0 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A3F EB           	ex de,hl
 269+ 9A40 A7           	and a
 270+ 9A41 ED 52        	sbc hl,de
 271+ 9A43 CB 3D        	srl l
 272+ 9A45 3E 08        6 ld a,8
 273+ 9A47 95           	sub l
 274+ 9A48 30 1E        	jr nc,3F
 275+ 9A4A
 276+ 9A4A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A4A              ; B="0".
 278+ 9A4A
 279+ 9A4A 04           4 inc b
 280+ 9A4B 3C           	inc a
 281+ 9A4C 20 FC        	jr nz,4B
 282+ 9A4E 78           	ld a,b
 283+ 9A4F 08           	ex af,af
 284+ 9A50 2A D0 89     	ld hl,(Indice_Sprite_der)
 285+ 9A53 23           5 inc hl
 286+ 9A54 23           	inc hl
 287+ 9A55 10 FC        	djnz 5B
 288+ 9A57 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A5A CD 2E 8D     	call Extrae_address
 290+ 9A5D 22 CA 89     	ld (Puntero_objeto),hl
 291+ 9A60
 292+ 9A60              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A60              ; _(Posicion_actual).
 294+ 9A60
 295+ 9A60 21 C8 89     	ld hl,Posicion_actual
 296+ 9A63 34           	inc (hl)
 297+ 9A64 08               ex af,af
 298+ 9A65 6F           	ld l,a
 299+ 9A66 18 DD        	jr 6B
 300+ 9A68
 301+ 9A68              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A68
 303+ 9A68 47           3 ld b,a
 304+ 9A69 2A D2 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A6C 23           2 inc hl
 306+ 9A6D 23           	inc hl
 307+ 9A6E 10 FC        	djnz 2B
 308+ 9A70 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A73 C9           8 ret
 310+ 9A74
 311+ 9A74              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A74              ;
 313+ 9A74              ;	24/7/22
 314+ 9A74              ;
 315+ 9A74              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A74              ;
 317+ 9A74              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A74              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A74              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A74
 321+ 9A74 3A CE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A77 A7           	and a
 323+ 9A78 20 1F        	jr nz,1F
 324+ 9A7A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A7C 32 CE 89         ld (CTRL_DESPLZ),a
 326+ 9A7F
 327+ 9A7F 21 C7 89     	ld hl,Columns
 328+ 9A82 34           	inc (hl)
 329+ 9A83 3A DA 89     	ld a,(Cuad_objeto)
 330+ 9A86 E6 01        	and 1
 331+ 9A88 28 0F        	jr z,1F
 332+ 9A8A 2A C8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A8D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A8E 22 C8 89     	ld (Posicion_actual),hl
 335+ 9A91 CD 84 9C     	call Genera_coordenadas
 336+ 9A94 CD F9 9B     	call Inc_CTRL_DESPLZ
 337+ 9A97 18 03        	jr 2F
 338+ 9A99 CD F9 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A9C C9           2 ret
 340+ 9A9D
 341+ 9A9D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A9D              ;
 343+ 9A9D              ;	24/7/22
 344+ 9A9D              ;
 345+ 9A9D              ;	Ciclo_completo.
 346+ 9A9D              ;
 347+ 9A9D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A9D              ;
 349+ 9A9D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A9D              ; 	Decrementamos (Columns).
 351+ 9A9D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A9D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A9D
 354+ 9A9D
 355+ 9A9D 3A CE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9AA0 FE FF        	cp $ff
 357+ 9AA2 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9AA4 E6 F0        	and $f0
 359+ 9AA6 20 28        	jr nz,3F
 360+ 9AA8
 361+ 9AA8              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9AA8
 363+ 9AA8 3A CE 89     	ld a,(CTRL_DESPLZ)
 364+ 9AAB 47           	ld b,a
 365+ 9AAC 3E F8        	ld a,$f8
 366+ 9AAE 80           	add b
 367+ 9AAF 32 CE 89     	ld (CTRL_DESPLZ),a
 368+ 9AB2 18 1C        	jr 3F
 369+ 9AB4 21 C7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9AB7 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9AB8 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9AB9 32 CE 89     	ld (CTRL_DESPLZ),a
 373+ 9ABC 3A DA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9ABF E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9AC1 20 0A        	jr nz,2F
 376+ 9AC3 2A C8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9AC6 23           	inc hl
 378+ 9AC7 22 C8 89     	ld (Posicion_actual),hl
 379+ 9ACA CD 84 9C     	call Genera_coordenadas
 380+ 9ACD
 381+ 9ACD              ; Inicia el puntero de Sprite.
 382+ 9ACD
 383+ 9ACD CD 45 8D     2 call Inicia_puntero_objeto_der
 384+ 9AD0 C9           3 ret
 385+ 9AD1
 386+ 9AD1              ; ******************************************************************************************************************************************************************************************
 387+ 9AD1              ;
 388+ 9AD1              ;	15/02/23
 389+ 9AD1              ;
 390+ 9AD1              ;	Mov_left.
 391+ 9AD1              ;
 392+ 9AD1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9AD1              ;
 394+ 9AD1 21 F4 89     Mov_left ld hl,Ctrl_0
 395+ 9AD4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9AD6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9AD6              ; 																	; _ en el caso de que no lo haya.
 398+ 9AD6 3A F4 89     	ld a,(Ctrl_0)
 399+ 9AD9 CB 77        	bit 6,a
 400+ 9ADB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9ADD
 402+ 9ADD CD F3 9B     	call Stop_Amadeus_left
 403+ 9AE0 C8           	ret z
 404+ 9AE1 20 4A        	jr nz,8F
 405+ 9AE3
 406+ 9AE3 3A CC 89     11 ld a,(Coordenada_X)
 407+ 9AE6 A7           	and a
 408+ 9AE7 20 44        	jr nz,8F
 409+ 9AE9
 410+ 9AE9 3A CE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9AEC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9AED 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9AEF
 414+ 9AEF              ; ---------- ---------- ----------
 415+ 9AEF
 416+ 9AEF 3A DB 89     	ld a,(Vel_left)
 417+ 9AF2 FE 02        	cp 2
 418+ 9AF4 28 0F        	jr z,1F
 419+ 9AF6 38 04        	jr c,6F
 420+ 9AF8 FE 04        	cp 4
 421+ 9AFA 28 12        	jr z,7F
 422+ 9AFC
 423+ 9AFC              ; ---------- ---------- ----------
 424+ 9AFC
 425+ 9AFC 3A CE 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AFF FE F8        	cp $f8
 427+ 9B01 20 2A        	jr nz,8F
 428+ 9B03 18 10        	jr 4F
 429+ 9B05 3A CE 89     1 ld a,(CTRL_DESPLZ)
 430+ 9B08 FE F9        	cp $f9
 431+ 9B0A 20 21        	jr nz,8F
 432+ 9B0C 18 07        	jr 4F
 433+ 9B0E 3A CE 89     7 ld a,(CTRL_DESPLZ)
 434+ 9B11 FE FB        	cp $fb
 435+ 9B13 20 18        	jr nz,8F
 436+ 9B15
 437+ 9B15              ; ---------- ---------- ----------
 438+ 9B15
 439+ 9B15              4
 440+ 9B15 CD 1B 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9B18              ;	call Reinicio
 442+ 9B18
 443+ 9B18              ; ---------- ---------- ----------
 444+ 9B18
 445+ 9B18 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9B1A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9B1B
 448+ 9B1B              ;	ld hl,(Indice_Sprite_izq)
 449+ 9B1B              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9B1B
 451+ 9B1B CD 34 9B     	call DESPLZ_IZQ
 452+ 9B1E C1           	pop bc
 453+ 9B1F 10 F9        	djnz 5B
 454+ 9B21 2A C8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9B24 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9B25 22 C8 89     	ld (Posicion_actual),hl
 457+ 9B28 CD 84 9C     	call Genera_coordenadas
 458+ 9B2B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9B2D
 460+ 9B2D              ; ---------- ---------- ----------
 461+ 9B2D
 462+ 9B2D              ; Movemos, no hay recolocación.
 463+ 9B2D
 464+ 9B2D 2A C8 89     8 ld hl,(Posicion_actual)
 465+ 9B30 CD 34 9B     	call DESPLZ_IZQ
 466+ 9B33 C9           2 ret
 467+ 9B34
 468+ 9B34              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9B34              ;
 470+ 9B34              ;	22/9/22
 471+ 9B34
 472+ 9B34              DESPLZ_IZQ
 473+ 9B34
 474+ 9B34 CD 43 9B     	call Desplaza_izquierda
 475+ 9B37 CD 8F 9B         call modifica_parametros_1er_DESPLZ
 476+ 9B3A CD B7 9B     	call Ciclo_completo_2
 477+ 9B3D 21 F4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B40 CB BE        	res 7,(hl)
 479+ 9B42 C9           	ret
 480+ 9B43
 481+ 9B43              Desplaza_izquierda
 482+ 9B43
 483+ 9B43 3A DB 89     	ld a,(Vel_left)
 484+ 9B46 47           	ld b,a
 485+ 9B47 2A D6 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B4A 23           1 inc hl
 487+ 9B4B 23           	inc hl
 488+ 9B4C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B4E 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B51 CD 2E 8D     	call Extrae_address
 491+ 9B54 22 CA 89     	ld (Puntero_objeto),hl
 492+ 9B57
 493+ 9B57              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B57
 495+ 9B57              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B57              ; Cuántos movimientos hemos hecho ??
 497+ 9B57              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B57
 499+ 9B57 2A D2 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B5A EB           	ex de,hl
 501+ 9B5B A7           	and a
 502+ 9B5C ED 52        	sbc hl,de
 503+ 9B5E CB 3D        	srl l
 504+ 9B60 3E 08        6 ld a,8
 505+ 9B62 95           	sub l
 506+ 9B63 30 1E        	jr nc,3F
 507+ 9B65
 508+ 9B65              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B65              ; B="0".
 510+ 9B65
 511+ 9B65 04           4 inc b
 512+ 9B66 3C           	inc a
 513+ 9B67 20 FC        	jr nz,4B
 514+ 9B69 78           	ld a,b
 515+ 9B6A 08           	ex af,af
 516+ 9B6B 2A D2 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B6E 23           5 inc hl
 518+ 9B6F 23           	inc hl
 519+ 9B70 10 FC        	djnz 5B
 520+ 9B72 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B75 CD 2E 8D     	call Extrae_address
 522+ 9B78 22 CA 89     	ld (Puntero_objeto),hl
 523+ 9B7B
 524+ 9B7B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B7B              ; _(Posicion_actual).
 526+ 9B7B
 527+ 9B7B 21 C8 89     	ld hl,Posicion_actual
 528+ 9B7E 35           	dec (hl)
 529+ 9B7F 08           	ex af,af
 530+ 9B80 6F           	ld l,a
 531+ 9B81 18 DD        	jr 6B
 532+ 9B83
 533+ 9B83              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B83
 535+ 9B83 47           3 ld b,a
 536+ 9B84 2A D0 89     	ld hl,(Indice_Sprite_der)
 537+ 9B87 23           2 inc hl
 538+ 9B88 23           	inc hl
 539+ 9B89 10 FC        	djnz 2B
 540+ 9B8B 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B8E C9           8 ret
 542+ 9B8F
 543+ 9B8F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B8F              ;
 545+ 9B8F              ;	modifica_parametros_1er_DESPLZ
 546+ 9B8F              ;
 547+ 9B8F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B8F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B8F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B8F
 551+ 9B8F 3A CE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B92 A7           	and a
 553+ 9B93 20 1E        	jr nz,1F
 554+ 9B95 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B96 32 CE 89         ld (CTRL_DESPLZ),a
 556+ 9B99 21 C7 89     	ld hl,Columns
 557+ 9B9C 34           	inc (hl)
 558+ 9B9D 3A DA 89     	ld a,(Cuad_objeto)
 559+ 9BA0 E6 01        	and 1
 560+ 9BA2 20 0F        	jr nz,1F
 561+ 9BA4 2A C8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9BA7 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9BA8 22 C8 89     	ld (Posicion_actual),hl
 564+ 9BAB CD 84 9C     	call Genera_coordenadas
 565+ 9BAE CD 0A 9C     	call Dec_CTRL_DESPLZ
 566+ 9BB1 18 03        	jr 2F
 567+ 9BB3 CD 0A 9C     1 call Dec_CTRL_DESPLZ
 568+ 9BB6 C9           2 ret
 569+ 9BB7
 570+ 9BB7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9BB7
 572+ 9BB7 3A CE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9BBA FE F7        	cp $f7
 574+ 9BBC 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9BBE 30 2C        	jr nc,3F
 576+ 9BC0
 577+ 9BC0              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9BC0
 579+ 9BC0 06 00        	ld b,0
 580+ 9BC2 04           4 inc b
 581+ 9BC3 3C           	inc a
 582+ 9BC4 FE F7        	cp $f7
 583+ 9BC6 20 FA        	jr nz,4B
 584+ 9BC8 3E FF        	ld a,$ff
 585+ 9BCA 90           	sub b
 586+ 9BCB 32 CE 89     	ld (CTRL_DESPLZ),a
 587+ 9BCE 18 1C        	jr 3F
 588+ 9BD0
 589+ 9BD0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9BD0
 591+ 9BD0 21 C7 89     1 ld hl,Columns
 592+ 9BD3 35           	dec (hl)
 593+ 9BD4 AF           	xor a
 594+ 9BD5 32 CE 89     	ld (CTRL_DESPLZ),a
 595+ 9BD8 3A DA 89     	ld a,(Cuad_objeto)
 596+ 9BDB E6 01        	and 1
 597+ 9BDD 28 0A        	jr z,2F
 598+ 9BDF 2A C8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BE2 2B           	dec hl
 600+ 9BE3 22 C8 89     	ld (Posicion_actual),hl
 601+ 9BE6 CD 84 9C     	call Genera_coordenadas
 602+ 9BE9
 603+ 9BE9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BE9
 605+ 9BE9 CD 58 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BEC C9           3 ret
 607+ 9BED
 608+ 9BED              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BED              ;
 610+ 9BED              ;	19/10/22
 611+ 9BED              ;
 612+ 9BED              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BED              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BED
 615+ 9BED 3A CC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BF0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BF2 C9           	ret
 618+ 9BF3
 619+ 9BF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BF3              ;
 621+ 9BF3              ;	19/10/22
 622+ 9BF3              ;
 623+ 9BF3              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BF3              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BF3
 626+ 9BF3 3A CC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BF6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BF8 C9           	ret
 629+ 9BF9
 630+ 9BF9              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BF9              ;
 632+ 9BF9              ;	24/7/22
 633+ 9BF9              ;
 634+ 9BF9              ;	Inc_CTRL_DESPLZ
 635+ 9BF9              ;
 636+ 9BF9              ;
 637+ 9BF9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BF9
 639+ 9BF9 21 CE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BFC 3A DC 89     	ld a,(Vel_right)
 641+ 9BFF A7           	and a
 642+ 9C00 28 06        	jr z,1F
 643+ 9C02 47           	ld b,a
 644+ 9C03 34           3 inc (hl)
 645+ 9C04 10 FD        	djnz 3B
 646+ 9C06 18 01        	jr 2F
 647+ 9C08 34           1 inc (hl)
 648+ 9C09 C9           2 ret
 649+ 9C0A
 650+ 9C0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9C0A              ;
 652+ 9C0A              ;	5/2/23
 653+ 9C0A              ;
 654+ 9C0A              ;	Dec_CTRL_DESPLZ
 655+ 9C0A              ;
 656+ 9C0A              ;
 657+ 9C0A              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9C0A
 659+ 9C0A 21 CE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9C0D 3A DB 89     	ld a,(Vel_left)
 661+ 9C10 A7           	and a
 662+ 9C11 28 06        	jr z,1F
 663+ 9C13 47           	ld b,a
 664+ 9C14 35           3 dec (hl)
 665+ 9C15 10 FD        	djnz 3B
 666+ 9C17 18 01        	jr 2F
 667+ 9C19 35           1 dec (hl)
 668+ 9C1A C9           2 ret
 669+ 9C1B
 670+ 9C1B              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9C1B
 672+ 9C1B 2A C8 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9C1E 01 1F 00     	ld bc,31
 674+ 9C21 A7           	and a
 675+ 9C22 ED 4A        	adc hl,bc
 676+ 9C24 22 C8 89     	ld (Posicion_actual),hl
 677+ 9C27 21 F4 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9C2A CB C6        	set 0,(hl)
 679+ 9C2C C9           	ret
 680+ 9C2D
 681+ 9C2D              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9C2D
 683+ 9C2D 2A C8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9C30 01 1F 00     	ld bc,31
 685+ 9C33 A7           	and a
 686+ 9C34 ED 42        	sbc hl,bc
 687+ 9C36 22 C8 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9C39 21 F4 89     	ld hl,Ctrl_0
 689+ 9C3C CB CE        	set 1,(hl)
 690+ 9C3E C9           	ret
 691+ 9C3F
 692+ 9C3F              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C3F
 694+ 9C3F 24           Reaparece_abajo inc h
 695+ 9C40 01 E0 17     	ld bc,$17e0
 696+ 9C43 A7           	and a
 697+ 9C44 ED 4A        	adc hl,bc
 698+ 9C46 22 C8 89     	ld (Posicion_actual),hl
 699+ 9C49 21 F4 89     	ld hl,Ctrl_0
 700+ 9C4C CB D6        	set 2,(hl)
 701+ 9C4E C9           	ret
 702+ 9C4F
 703+ 9C4F              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C4F
 705+ 9C4F 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C52 A7           	and a
 707+ 9C53 ED 42        	sbc hl,bc
 708+ 9C55 22 C8 89     	ld (Posicion_actual),hl
 709+ 9C58 21 F4 89     	ld hl,Ctrl_0
 710+ 9C5B CB DE        	set 3,(hl)
 711+ 9C5D C9           	ret
 712+ 9C5E
 713+ 9C5E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C5E              ;
 715+ 9C5E              ;	15/07/23
 716+ 9C5E
 717+ 9C5E              Reinicio
 718+ 9C5E
 719+ 9C5E              ; Vamos a reiniciar los punteros y variables de movimiento.
 720+ 9C5E
 721+ 9C5E AF           	xor a
 722+ 9C5F 21 FB 89     	ld hl,Puntero_indice_mov_bucle
 723+ 9C62 CD 80 9C     	call Limpia_contenido_hl
 724+ 9C65
 725+ 9C65 21 C8 89     	ld hl,Posicion_actual
 726+ 9C68 CD 80 9C     	call Limpia_contenido_hl
 727+ 9C6B
 728+ 9C6B CD 0A 9F     	call Inicializa_Puntero_indice_mov
 729+ 9C6E CD 98 9E     	call Inicia_Puntero_mov
 730+ 9C71
 731+ 9C71 21 FD 89     	ld hl,Incrementa_puntero
 732+ 9C74 06 05        	ld b,5
 733+ 9C76 77           1 ld (hl),a
 734+ 9C77 23           	inc hl
 735+ 9C78 10 FC        	djnz 1B
 736+ 9C7A
 737+ 9C7A 21 06 8A     	ld hl,Ctrl_2
 738+ 9C7D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 739+ 9C7F
 740+ 9C7F C9           	ret
 741+ 9C80
 742+ 9C80 77           Limpia_contenido_hl	ld (hl),a
 743+ 9C81 23           	inc hl
 744+ 9C82 77           	ld (hl),a
 745+ 9C83 C9           	ret
 746+ 9C84
 747+ 9C84
# file closed: Direcciones.asm
1280  9C84              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C84              ; ------------------------------------------------------------------------
   2+ 9C84              ;
   3+ 9C84              ;	02/04/23
   4+ 9C84              ;
   5+ 9C84              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C84              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C84              ;
   8+ 9C84              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C84              ;
  10+ 9C84              ;	Modifica: A,BC y DE.
  11+ 9C84
  12+ 9C84 C5           Genera_coordenadas push bc
  13+ 9C85 E5           	push hl
  14+ 9C86 D5           	push de
  15+ 9C87
  16+ 9C87 2A C8 89     	ld hl,(Posicion_actual)
  17+ 9C8A
  18+ 9C8A 7D           	ld a,l
  19+ 9C8B E6 1F        	and $1f
  20+ 9C8D 32 CC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C90
  22+ 9C90 CD F9 98     	call calcula_tercio
  23+ 9C93 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C94
  25+ 9C94 1E 00        	ld e,0
  26+ 9C96 7D           	ld a,l
  27+ 9C97 E6 E0        	and $e0
  28+ 9C99 28 01        	jr z,1F
  29+ 9C9B 04           	inc b
  30+ 9C9C
  31+ 9C9C 04           1 inc b
  32+ 9C9D 05           	dec b
  33+ 9C9E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CA0              ;														; _ , salimos.
  35+ 9CA0 1C           3 inc e
  36+ 9CA1 D6 20        	sub 32
  37+ 9CA3 20 FB        	jr nz,3B
  38+ 9CA5 10 F5        	djnz 1B
  39+ 9CA7
  40+ 9CA7 7B           2 ld a,e
  41+ 9CA8 32 CD 89     	ld (Coordenada_y),a
  42+ 9CAB
  43+ 9CAB D1           	pop de
  44+ 9CAC E1           	pop hl
  45+ 9CAD C1           	pop bc
  46+ 9CAE
  47+ 9CAE C9           	ret
  48+ 9CAF
  49+ 9CAF              ; ------------------------------------------------------------------------
  50+ 9CAF              ;	28/05/23
  51+ 9CAF              ;
  52+ 9CAF              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CAF              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CAF              ;
  55+ 9CAF              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CAF              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CAF              ;
  58+ 9CAF              ;		DE="$120d"
  59+ 9CAF              ;
  60+ 9CAF              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CAF              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CAF              ;
  63+ 9CAF              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CAF
  65+ 9CAF              ;	Modifica: A,BC y DE.
  66+ 9CAF
  67+ 9CAF
  68+ 9CAF              Genera_coordenadas_disparo
  69+ 9CAF
  70+ 9CAF              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CAF
  72+ 9CAF 7D           	ld a,l
  73+ 9CB0 E6 1F        	and $1f
  74+ 9CB2 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CB3 CD F9 98     	call calcula_tercio
  76+ 9CB6 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CB7 1E 00        	ld e,0
  78+ 9CB9 7D           	ld a,l
  79+ 9CBA E6 E0        	and $e0
  80+ 9CBC 28 01        	jr z,1F
  81+ 9CBE 04           	inc b
  82+ 9CBF 1C           1 inc e
  83+ 9CC0 D6 20        	sub 32
  84+ 9CC2 20 FB        	jr nz,1B
  85+ 9CC4 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CC6 C9           	ret
  87+ 9CC7
# file closed: Genera_coordenadas.asm
1281  9CC7              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CC7
   2+ 9CC7
   3+ 9CC7              ;   07/07/23
   4+ 9CC7              ;
   5+ 9CC7              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CC7              ;
   7+ 9CC7              ;   Codificación:
   8+ 9CC7              ;
   9+ 9CC7              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CC7              ;
  11+ 9CC7              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CC7              ;
  13+ 9CC7              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CC7              ;
  15+ 9CC7              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CC7              ;
  17+ 9CC7              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CC7              ;                               ..... %01000010 Vel_up 4
  19+ 9CC7              ;                                               Vel_down 2
  20+ 9CC7              ;                               ..... $42
  21+ 9CC7              ;
  22+ 9CC7              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CC7              ;
  24+ 9CC7              ;                               ..... %01000010 Vel_left 4
  25+ 9CC7              ;                                               Vel_right 2
  26+ 9CC7              ;                               ..... $42
  27+ 9CC7              ;
  28+ 9CC7              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CC7              ;
  30+ 9CC7              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CC7              ;
  32+ 9CC7              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CC7              ;
  34+ 9CC7              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CC7              ;                                     $53
  36+ 9CC7              ;
  37+ 9CC7              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CC7              ;
  39+ 9CC7              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CC7              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CC7              ;
  42+ 9CC7              ;                       Arriba ..... $81
  43+ 9CC7              ;                       Arriba - izquierda ..... $a1
  44+ 9CC7              ;                       Arriba - derecha ..... $91
  45+ 9CC7              ;
  46+ 9CC7              ;                       Abajo ..... $41
  47+ 9CC7              ;                       Abajo - izquierda ..... $61
  48+ 9CC7              ;                       Abajo - derecha ..... $51
  49+ 9CC7              ;
  50+ 9CC7              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CC7              ;
  52+ 9CC7              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CC7              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CC7              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CC7              ;
  56+ 9CC7              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CC7              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CC7              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CC7              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CC7              ;
  61+ 9CC7              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del DESPLAZAMIENTO.
  62+ 9CC7              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CC7              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CC7              ;
  65+ 9CC7              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CC7              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CC7              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CC7              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CC7
  70+ 9CC7              ; ----- ----- ----- ----- -----
  71+ 9CC7
  72+ 9CC7 DB 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CC9
  74+ 9CC9 E7 9C            defw Codo_abajo_derecha
  75+ 9CCB
  76+ 9CCB 1B 9D            defw Derecha_y_subiendo
  77+ 9CCD 25 9D            defw Derecha_y_subiendo_1
  78+ 9CCF
  79+ 9CCF 2F 9D            defw Codo_derecha_abajo
  80+ 9CD1 5F 9D            defw Codo_abajo_izq.
  81+ 9CD3
  82+ 9CD3 93 9D            defw Izquierda_y_subiendo
  83+ 9CD5 9D 9D            defw Izquierda_y_subiendo_1
  84+ 9CD7
  85+ 9CD7 A7 9D            defw Codo_izquierda_abajo
  86+ 9CD9
  87+ 9CD9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  88+ 9CDB
  89+ 9CDB 14 11 45 01  Bajo_decelerando db $14,$11,$45,1           ; Abajo. 5rep. vel.4
  90+ 9CDF 12 11 47 01      db $12,$11,$47,1                        ; Abajo. 7rep. vel.2
  91+ 9CE3 11 11 47 FE      db $11,$11,$47,254                      ; Abajo  7rep. --- Termina movimiento.
  92+ 9CE7
  93+ 9CE7 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
  94+ 9CEB 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
  95+ 9CEF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
  96+ 9CF3 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
  97+ 9CF7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
  98+ 9CFB 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
  99+ 9CFF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 100+ 9D03 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 101+ 9D07 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 102+ 9D0B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 103+ 9D0F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 104+ 9D13 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 105+ 9D17 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 106+ 9D1B
 107+ 9D1B
 108+ 9D1B 11 12 14 01  Derecha_y_subiendo db $11,$12,$14,1         ; Derecha. 4rep. vel.2
 109+ 9D1F 11 11 91 FD      db $11,$11,$91,253,12,0                 ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 109+ 9D23 0C 00
 110+ 9D25 11 11 1A 01  Derecha_y_subiendo_1 db $11,$11,$1a,1       ; Derecha. 8rep.
 111+ 9D29 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 7rep. --- Termina movimiento.
 111+ 9D2D 06 00
 112+ 9D2F
 113+ 9D2F              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 114+ 9D2F
 115+ 9D2F
 116+ 9D2F 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 117+ 9D33 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 118+ 9D37 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 119+ 9D3B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 120+ 9D3F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 9D43 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 122+ 9D47 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 123+ 9D4B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 124+ 9D4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 125+ 9D53 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 126+ 9D57 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 127+ 9D5B 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 128+ 9D5F
 129+ 9D5F 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 130+ 9D63 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 131+ 9D67 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 132+ 9D6B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 133+ 9D6F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 134+ 9D73 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 135+ 9D77 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 136+ 9D7B 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 137+ 9D7F 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 138+ 9D83 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 139+ 9D87 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 140+ 9D8B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 141+ 9D8F 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 142+ 9D93
 143+ 9D93 11 21 24 01  Izquierda_y_subiendo db $11,$21,$24,1          ; Izq. 4rep.
 144+ 9D97 11 11 A1 FD      db $11,$11,$a1,253,12,0                    ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 144+ 9D9B 0C 00
 145+ 9D9D 11 11 2A 01  Izquierda_y_subiendo_1 db $11,$11,$2a,1        ; Izq. 6rep.
 146+ 9DA1 11 11 A1 FD      db $11,$11,$a1,253,6,0                     ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 146+ 9DA5 06 00
 147+ 9DA7
 148+ 9DA7 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 149+ 9DAB 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 150+ 9DAF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 151+ 9DB3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 152+ 9DB7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 153+ 9DBB 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 154+ 9DBF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 155+ 9DC3 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 156+ 9DC7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 157+ 9DCB 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 158+ 9DCF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 159+ 9DD3 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 160+ 9DD7
 161+ 9DD7              ; ----- ----- ----- ----- -----
 162+ 9DD7              ;
 163+ 9DD7              ;   27/06/23
 164+ 9DD7
 165+ 9DD7              Movimiento
 166+ 9DD7
 167+ 9DD7              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 168+ 9DD7
 169+ 9DD7 3A 06 8A         ld a,(Ctrl_2)
 170+ 9DDA CB 57            bit 2,a
 171+ 9DDC 20 1B            jr nz, Desplazamiento_iniciado
 172+ 9DDE
 173+ 9DDE 2A F9 89         ld hl,(Puntero_mov)
 174+ 9DE1 7E               ld a,(hl)
 175+ 9DE2
 176+ 9DE2              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 177+ 9DE2
 178+ 9DE2              Inicia_desplazamiento.
 179+ 9DE2
 180+ 9DE2              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 181+ 9DE2
 182+ 9DE2 CD CB 9E         call Ajusta_velocidad_desplazamiento
 183+ 9DE5
 184+ 9DE5              ; Iniciamos (Repetimos_mov).
 185+ 9DE5
 186+ 9DE5 7E               ld a,(hl)
 187+ 9DE6 E6 0F            and $0f
 188+ 9DE8 32 FE 89         ld (Repetimos_desplazamiento),a
 189+ 9DEB 32 FF 89         ld (Repetimos_desplazamiento_backup),a
 190+ 9DEE
 191+ 9DEE              ; Iniciamos (Cola_de_desplazamiento).
 192+ 9DEE
 193+ 9DEE 23               inc hl
 194+ 9DEF 7E               ld a,(hl)
 195+ 9DF0 32 01 8A         ld (Cola_de_desplazamiento),a
 196+ 9DF3 2B               dec hl
 197+ 9DF4
 198+ 9DF4 21 06 8A         ld hl,Ctrl_2
 199+ 9DF7 CB D6            set 2,(hl)
 200+ 9DF9
 201+ 9DF9              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 202+ 9DF9              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 203+ 9DF9
 204+ 9DF9              Desplazamiento_iniciado
 205+ 9DF9
 206+ 9DF9 CD A3 9E         call Aplica_desplazamiento
 207+ 9DFC
 208+ 9DFC 3A 06 8A         ld a,(Ctrl_2)
 209+ 9DFF CB 67            bit 4,a
 210+ 9E01 C0               ret nz                              ; Salimos si se ha producido reinicio.
 211+ 9E02
 212+ 9E02 21 FE 89     3 ld hl,Repetimos_desplazamiento
 213+ 9E05 35               dec (hl)
 214+ 9E06 C0               ret nz
 215+ 9E07
 216+ 9E07              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 217+ 9E07              ; Hay que volver a ejecutar este desplazamiento ???.
 218+ 9E07              ; Analiza (Cola_de_desplazamiento).
 219+ 9E07
 220+ 9E07 3A 01 8A     Cola ld a,(Cola_de_desplazamiento)
 221+ 9E0A A7               and a
 222+ 9E0B CC F4 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 223+ 9E0E 28 30            jr z,Reinicia_el_movimiento
 224+ 9E10
 225+ 9E10 FE FF            cp $ff
 226+ 9E12 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 227+ 9E14
 228+ 9E14 FE FE            cp $fe
 229+ 9E16 CC 83 9E         call z,Fijamos_bucle
 230+ 9E19 28 25            jr z,Reinicia_el_movimiento
 231+ 9E1B
 232+ 9E1B FE FD            cp $fd
 233+ 9E1D 20 11            jr nz,1F
 234+ 9E1F
 235+ 9E1F              ; ---
 236+ 9E1F              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 237+ 9E1F
 238+ 9E1F 3A 06 8A         ld a,(Ctrl_2)
 239+ 9E22 CB 5F            bit 3,a
 240+ 9E24 20 1A            jr nz,Reinicia_el_movimiento
 241+ 9E26
 242+ 9E26              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 243+ 9E26
 244+ 9E26 21 06 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 245+ 9E29 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 246+ 9E2B
 247+ 9E2B CD 8D 9E         call Inicia_Repetimos_movimiento
 248+ 9E2E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 249+ 9E30              ; ---
 250+ 9E30
 251+ 9E30 FE 01        1 cp 1
 252+ 9E32 CA 6D 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 253+ 9E35
 254+ 9E35 3D               dec a
 255+ 9E36 32 01 8A         ld (Cola_de_desplazamiento),a
 256+ 9E39
 257+ 9E39 3A FF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 258+ 9E3C 32 FE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 259+ 9E3F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 260+ 9E3F C9               ret
 261+ 9E40
 262+ 9E40              Reinicia_el_movimiento
 263+ 9E40
 264+ 9E40 3A 06 8A         ld a,(Ctrl_2)
 265+ 9E43 CB 5F            bit 3,a
 266+ 9E45 28 1B            jr z,2F
 267+ 9E47
 268+ 9E47              ; (Cola_de_desplazamiento)="254".
 269+ 9E47
 270+ 9E47 21 00 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 271+ 9E4A 35               dec (hl)
 272+ 9E4B 20 15            jr nz,2F
 273+ 9E4D
 274+ 9E4D              ; Fin de las repeticiones del último movimiento.
 275+ 9E4D
 276+ 9E4D 21 06 8A         ld hl,Ctrl_2
 277+ 9E50 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 278+ 9E52
 279+ 9E52 2A F9 89         ld hl,(Puntero_mov)
 280+ 9E55 23               inc hl
 281+ 9E56 23               inc hl
 282+ 9E57 23               inc hl
 283+ 9E58 22 F9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 284+ 9E5B              ;                                                               ; _ para ejecutar su mandato. :)
 285+ 9E5B 7E               ld a,(hl)
 286+ 9E5C 32 01 8A         ld (Cola_de_desplazamiento),a
 287+ 9E5F
 288+ 9E5F C3 07 9E         jp Cola
 289+ 9E62
 290+ 9E62
 291+ 9E62 CD 98 9E     2 call Inicia_Puntero_mov
 292+ 9E65
 293+ 9E65 21 06 8A         ld hl,Ctrl_2
 294+ 9E68 CB 96            res 2,(hl)
 295+ 9E6A
 296+ 9E6A C3 D7 9D         jp Movimiento
 297+ 9E6D
 298+ 9E6D              Siguiente_desplazamiento
 299+ 9E6D
 300+ 9E6D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 301+ 9E6D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 302+ 9E6D
 303+ 9E6D 21 06 8A         ld hl,Ctrl_2
 304+ 9E70 CB 96            res 2,(hl)
 305+ 9E72
 306+ 9E72 2A F9 89         ld hl,(Puntero_mov)
 307+ 9E75 23               inc hl
 308+ 9E76 23               inc hl
 309+ 9E77 22 F9 89         ld (Puntero_mov),hl
 310+ 9E7A
 311+ 9E7A 7E               ld a,(hl)
 312+ 9E7B A7               and a
 313+ 9E7C CC F4 9E         call z,Incrementa_Puntero_indice_mov
 314+ 9E7F CA 40 9E         jp z,Reinicia_el_movimiento
 315+ 9E82
 316+ 9E82 C9               ret
 317+ 9E83              ; Subrutinas -----------------------------------------
 318+ 9E83              ; ---------- --------- --------- ---------- ----------
 319+ 9E83              ;
 320+ 9E83              ;   12/07/23
 321+ 9E83              ;
 322+ 9E83              ;   Fijamos_bucle
 323+ 9E83              ;
 324+ 9E83              ;
 325+ 9E83
 326+ 9E83 CD F4 9E     Fijamos_bucle call Incrementa_Puntero_indice_mov
 327+ 9E86 2A F7 89         ld hl,(Puntero_indice_mov)
 328+ 9E89 22 FB 89         ld (Puntero_indice_mov_bucle),hl
 329+ 9E8C C9               ret
 330+ 9E8D
 331+ 9E8D              ; ---------- --------- --------- ---------- ----------
 332+ 9E8D              ;
 333+ 9E8D              ;   07/7/23
 334+ 9E8D              ;
 335+ 9E8D              ;   Inicia_Repetimos_movimiento
 336+ 9E8D              ;
 337+ 9E8D              ;
 338+ 9E8D
 339+ 9E8D              Inicia_Repetimos_movimiento
 340+ 9E8D
 341+ 9E8D              ; Iniciamos (Repetimos_movimiento).
 342+ 9E8D
 343+ 9E8D DD 2A F9 89      ld ix,(Puntero_mov)
 344+ 9E91 DD 7E 02         ld a,(ix+2)
 345+ 9E94 32 00 8A         ld (Repetimos_movimiento),a
 346+ 9E97
 347+ 9E97 C9               ret
 348+ 9E98
 349+ 9E98              ; ---------- --------- --------- ---------- ----------
 350+ 9E98              ;
 351+ 9E98              ;   26/6/23
 352+ 9E98              ;
 353+ 9E98              ;   Inicia_Puntero_mov
 354+ 9E98              ;
 355+ 9E98              ;
 356+ 9E98
 357+ 9E98 2A F7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 358+ 9E9B 5E               ld e,(hl)
 359+ 9E9C 23               inc hl
 360+ 9E9D 56               ld d,(hl)
 361+ 9E9E EB               ex de,hl
 362+ 9E9F 22 F9 89         ld (Puntero_mov),hl
 363+ 9EA2 C9               ret
 364+ 9EA3
 365+ 9EA3              ; ---------- --------- --------- ---------- ----------
 366+ 9EA3              ;
 367+ 9EA3              ;   27/06/23
 368+ 9EA3              ;
 369+ 9EA3              ;   Aplica_movimiento.
 370+ 9EA3
 371+ 9EA3              Aplica_desplazamiento
 372+ 9EA3
 373+ 9EA3              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 374+ 9EA3
 375+ 9EA3 2A F9 89         ld hl, (Puntero_mov)
 376+ 9EA6 CB 7E            bit 7,(hl)
 377+ 9EA8 28 03            jr z,1F
 378+ 9EAA CD 70 99         call Mov_up
 379+ 9EAD 2A F9 89     1 ld hl, (Puntero_mov)
 380+ 9EB0 CB 76            bit 6,(hl)
 381+ 9EB2 28 03            jr z,2F
 382+ 9EB4 CD 3F 99         call Mov_down
 383+ 9EB7 2A F9 89     2 ld hl, (Puntero_mov)
 384+ 9EBA CB 6E            bit 5,(hl)
 385+ 9EBC 28 03            jr z,3F
 386+ 9EBE CD D1 9A         call Mov_left
 387+ 9EC1 2A F9 89     3 ld hl, (Puntero_mov)
 388+ 9EC4 CB 66            bit 4,(hl)
 389+ 9EC6 C8               ret z
 390+ 9EC7 CD B3 99         call Mov_right
 391+ 9ECA C9               ret
 392+ 9ECB
 393+ 9ECB              ; ---------- --------- --------- ---------- ----------
 394+ 9ECB              ;
 395+ 9ECB              ;   26/06/23
 396+ 9ECB              ;
 397+ 9ECB              ;   Ajusta_velocidad_desplazamiento.
 398+ 9ECB
 399+ 9ECB              Ajusta_velocidad_desplazamiento
 400+ 9ECB
 401+ 9ECB              ; 1er byte de la cadena de movimiento.
 402+ 9ECB              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 403+ 9ECB
 404+ 9ECB CD E9 9E         call Extrae_nibble_alto
 405+ 9ECE
 406+ 9ECE 32 DD 89         ld (Vel_up),a
 407+ 9ED1 79               ld a,c
 408+ 9ED2 E6 0F            and $0f
 409+ 9ED4 32 DE 89         ld (Vel_down),a
 410+ 9ED7
 411+ 9ED7              ; Saltamos al 2º byte de la cadena de movimiento.
 412+ 9ED7              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 413+ 9ED7
 414+ 9ED7 23               inc hl
 415+ 9ED8 CD E9 9E         call Extrae_nibble_alto
 416+ 9EDB
 417+ 9EDB 32 DB 89         ld (Vel_left),a
 418+ 9EDE 79               ld a,c
 419+ 9EDF E6 0F            and $0f
 420+ 9EE1 32 DC 89         ld (Vel_right),a
 421+ 9EE4
 422+ 9EE4              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 423+ 9EE4
 424+ 9EE4 23               inc hl
 425+ 9EE5 22 F9 89         ld (Puntero_mov),hl
 426+ 9EE8 C9               ret
 427+ 9EE9
 428+ 9EE9 06 04        Extrae_nibble_alto ld b,4
 429+ 9EEB 7E               ld a,(hl)
 430+ 9EEC 4F               ld c,a
 431+ 9EED E6 F0            and $f0
 432+ 9EEF CB 3F        1 srl a
 433+ 9EF1 10 FC            djnz 1B
 434+ 9EF3 C9               ret
 435+ 9EF4
 436+ 9EF4              ; ---------- --------- --------- ---------- ----------
 437+ 9EF4              ;
 438+ 9EF4              ;   5/7/23
 439+ 9EF4              ;
 440+ 9EF4              ;   Incrementa_Puntero_indice_mov
 441+ 9EF4
 442+ 9EF4              Incrementa_Puntero_indice_mov
 443+ 9EF4
 444+ 9EF4 21 FD 89         ld hl,Incrementa_puntero
 445+ 9EF7 34               inc (hl)
 446+ 9EF8
 447+ 9EF8 2A F7 89         ld hl,(Puntero_indice_mov)
 448+ 9EFB 01 02 00         ld bc,2
 449+ 9EFE A7               and a
 450+ 9EFF 09               add hl,bc
 451+ 9F00 22 F7 89         ld (Puntero_indice_mov),hl
 452+ 9F03
 453+ 9F03 7E               ld a,(hl)
 454+ 9F04 A7               and a
 455+ 9F05
 456+ 9F05              ;! STOP. Fin del patrón de movimiento de la entidad.
 457+ 9F05
 458+ 9F05              ;    jr z,$
 459+ 9F05
 460+ 9F05              ;! Reinicia el Patrón de movimiento.
 461+ 9F05
 462+ 9F05 CC 0A 9F         call z,Inicializa_Puntero_indice_mov
 463+ 9F08
 464+ 9F08 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 465+ 9F09
 466+ 9F09 C9               ret
 467+ 9F0A
 468+ 9F0A
 469+ 9F0A              ; ---------- --------- --------- ---------- ----------
 470+ 9F0A              ;
 471+ 9F0A              ;   12/07/23
 472+ 9F0A              ;
 473+ 9F0A              ;   Inicializa_Puntero_indice_mov
 474+ 9F0A
 475+ 9F0A              Inicializa_Puntero_indice_mov
 476+ 9F0A
 477+ 9F0A              ; Existe etiqueta de bucle principal???
 478+ 9F0A
 479+ 9F0A              ;    jr $
 480+ 9F0A
 481+ 9F0A              ;    ld hl,Ctrl_2
 482+ 9F0A              ;    res 4,(hl)
 483+ 9F0A
 484+ 9F0A 2A FB 89         ld hl,(Puntero_indice_mov_bucle)
 485+ 9F0D 24               inc h
 486+ 9F0E 25               dec h
 487+ 9F0F 28 05            jr z,2F
 488+ 9F11
 489+ 9F11 22 F7 89         ld (Puntero_indice_mov),hl
 490+ 9F14 18 0E            jr 3F
 491+ 9F16
 492+ 9F16
 493+ 9F16
 494+ 9F16              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 495+ 9F16
 496+ 9F16 3A FD 89     2 ld a,(Incrementa_puntero)
 497+ 9F19 47               ld b,a
 498+ 9F1A
 499+ 9F1A 2A F7 89         ld hl,(Puntero_indice_mov)
 500+ 9F1D 2B           1 dec hl
 501+ 9F1E 2B               dec hl
 502+ 9F1F 10 FC            djnz 1B
 503+ 9F21
 504+ 9F21 22 F7 89         ld (Puntero_indice_mov),hl
 505+ 9F24
 506+ 9F24 AF           3 xor a
 507+ 9F25 32 FD 89         ld (Incrementa_puntero),a
 508+ 9F28
 509+ 9F28 C9               ret
 510+ 9F29
 511+ 9F29
 512+ 9F29
# file closed: Patrones_de_mov.asm
1282  9F29              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F29              ; Relojes y temporizaciones.
   2+ 9F29
   3+ 9F29              ; ------------------------------------------------------
   4+ 9F29              ;
   5+ 9F29              ;	16/7/23
   6+ 9F29              ;
   7+ 9F29              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9F29              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F29              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F29              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F29              ;
  12+ 9F29              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F29              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F29
  15+ 9F29              ; Disparo_entidad db 1
  16+ 9F29              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9F29              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9F29
  19+ 9F29              Habilita_disparos
  20+ 9F29
  21+ 9F29 7E           	ld a,(hl)
  22+ 9F2A A7           	and a
  23+ 9F2B C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9F2C
  25+ 9F2C EB           	ex de,hl
  26+ 9F2D
  27+ 9F2D 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9F2E C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9F2F
  30+ 9F2F              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9F2F
  32+ 9F2F 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9F30 7E           	ld a,(hl)
  34+ 9F31 23           	inc hl
  35+ 9F32 77           	ld (hl),a
  36+ 9F33
  37+ 9F33 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9F34 3E 01        	ld a,1
  39+ 9F36 77           	ld (hl),a
  40+ 9F37 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1283  9F38              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F38              ;
   3+ 9F38              ;	3/1/23
   4+ 9F38              ;
   5+ 9F38              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F38
   7+ 9F38              ;	ADC HL,SP	LD (addr),SP
   8+ 9F38              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F38              ;	ADD IX,SP	LD SP,nn
  10+ 9F38              ; 	ADD IY,SP	LD SP,HL
  11+ 9F38              ;				LD SP,IX
  12+ 9F38              ;	DEC SP		LD SP,IY
  13+ 9F38
  14+ 9F38              ;	EX (SP),HL
  15+ 9F38              ;	EX (SP),IX
  16+ 9F38              ;	EX (SP),IY
  17+ 9F38
  18+ 9F38              ;	INC SP
  19+ 9F38
  20+ 9F38
  21+ 9F38                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 19 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 08 8A         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 1F 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 1D 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 1F 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 1D 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 19 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1284  7FD5
1285  7FD5              	SAVESNA "Pruebas.sna", START
1286  7FD5
1287  7FD5
1288  7FD5
1289  7FD5
# file closed: Banco_de_pruebas.asm
