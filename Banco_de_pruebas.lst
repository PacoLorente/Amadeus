# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 65 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 1C A2     	call Pinta_disparos_Amadeus
  74  82F6 CD ED 9E     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8F 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 60 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8D 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8D 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 90 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 70 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 36 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C3 89        	defw Caja_1
 154+ 89A9 CF 89        	defw Caja_2
 155+ 89AB DB 89        	defw Caja_3
 156+ 89AD E7 89        	defw Caja_4
 157+ 89AF F3 89        	defw Caja_5
 158+ 89B1 FF 89        	defw Caja_6
 159+ 89B3              ;	defw Caja_7
 160+ 89B3
 161+ 89B3 00 00        	defw 0
 162+ 89B5 00 00        	defw 0
 163+ 89B7
 164+ 89B7              ; -------------------------
 165+ 89B7
 166+ 89B7              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B7
 168+ 89B7              ;	db 0
 169+ 89B7
 170+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B7              ;
 172+ 89B7              ;	28/05/24
 173+ 89B7              ;
 174+ 89B7              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B7              ;
 176+ 89B7              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B7
 178+ 89B7 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89B8 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BA 00           	db 0												; (Contador_de_vueltas).
 181+ 89BB 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BC 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89BE 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C0 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C2 00           	db 0												; (Velocidad).
 186+ 89C3
 187+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C3              ;
 189+ 89C3              ;	22/01/24
 190+ 89C3              ;
 191+ 89C3              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C3
 193+ 89C3 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C6 00           	db 0												; (Contador_de_vueltas).
 195+ 89C7 00           	db 0												; (Impacto).
 196+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89CE 00           	db 0												; (Velocidad).
 200+ 89CF
 201+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 202+ 89CF
 203+ 89CF 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D3 00           	db 0												; (Impacto).
 206+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DA 00           	db 0												; (Velocidad).
 210+ 89DB
 211+ 89DB              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DB
 213+ 89DB 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89DE 00           	db 0 												; (Contador_de_vueltas).
 215+ 89DF 00           	db 0												; (Impacto).
 216+ 89E0 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E6 00           	db 0												; (Velocidad).
 220+ 89E7
 221+ 89E7              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E7
 223+ 89E7 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EA 00           	db 0 												; (Contador_de_vueltas).
 225+ 89EB 00           	db 0												; (Impacto).
 226+ 89EC 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F2 00           	db 0												; (Velocidad).
 230+ 89F3
 231+ 89F3              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F3
 233+ 89F3 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F6 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F7 00           	db 0												; (Impacto).
 236+ 89F8 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 89FE 00           	db 0												; (Velocidad).
 240+ 89FF
 241+ 89FF              ; ---------- ---------- ---------- ---------- ----------
 242+ 89FF
 243+ 89FF 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A02 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A03 00           	db 0												; (Impacto).
 246+ 8A04 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A06 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A08 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0A 00           	db 0												; (Velocidad).
 250+ 8A0B
 251+ 8A0B              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0B
 253+ 8A0B              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A0B              ;	db 0 												; (Contador_de_vueltas).
 255+ 8A0B              ;	db 0												; (Impacto).
 256+ 8A0B              ;	defw 0												; (Puntero_de_impresion).
 257+ 8A0B              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A0B              ;	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A0B              ;	db 0												; (Velocidad).
 260+ 8A0B
 261+ 8A0B              ; -------------------------------------------------------------------------------------
 262+ 8A0B              ;
 263+ 8A0B              ;	10/11/24
 264+ 8A0B              ;
 265+ 8A0B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A0B              ;
 267+ 8A0B              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A0B              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A0B              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A0B              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A0B
 272+ 8A0B              Indice_de_definiciones_de_entidades
 273+ 8A0B
 274+ 8A0B 0F 8A        	defw Entidad_1
 275+ 8A0D 1C 8A        	defw Entidad_2
 276+ 8A0F
 277+ 8A0F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A0F
 279+ 8A0F              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A0F
 281+ 8A0F 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A12 01           	db 1												; (Contador_de_vueltas).
 283+ 8A13 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A15 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A17
 286+ 8A17              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A17              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A17
 289+ 8A17 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A19 00           	db 0												; (Cuad_objeto).
 291+ 8A1A
 292+ 8A1A C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A1C
 294+ 8A1C              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A1C
 296+ 8A1C 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A1F 01           	db 1												; (Contador_de_vueltas).
 298+ 8A20 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A22 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A24 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A26 01           	db 1												; (Cuad_objeto).
 302+ 8A27 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A29
 304+ 8A29              ; -------------------------------------------------------------------------------------
 305+ 8A29              ;
 306+ 8A29              ;	28/05/24
 307+ 8A29              ;
 308+ 8A29              ;	Definición de Amadeus.
 309+ 8A29              ;
 310+ 8A29              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A29              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A29
 313+ 8A29 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A2C 00           	db 0												; (Contador_de_vueltas).
 315+ 8A2D C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A2F D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A31 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A33 03           	db 3												; (Cuad_objeto).
 319+ 8A34 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A36              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A36
   2+ 8A36
   3+ 8A36              ;   07/07/23
   4+ 8A36              ;
   5+ 8A36              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A36              ;
   7+ 8A36              ;   Codificación:
   8+ 8A36              ;
   9+ 8A36              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A36              ;
  11+ 8A36              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A36              ;
  13+ 8A36              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A36              ;
  15+ 8A36              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A36              ;
  17+ 8A36              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A36              ;                               ..... %01000010 Vel_up 4
  19+ 8A36              ;                                               Vel_down 2
  20+ 8A36              ;                               ..... $42
  21+ 8A36              ;
  22+ 8A36              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A36              ;
  24+ 8A36              ;                               ..... %01000010 Vel_left 4
  25+ 8A36              ;                                               Vel_right 2
  26+ 8A36              ;                               ..... $42
  27+ 8A36              ;
  28+ 8A36              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A36              ;
  30+ 8A36              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A36              ;
  32+ 8A36              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A36              ;
  34+ 8A36              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A36              ;                                     $53
  36+ 8A36              ;
  37+ 8A36              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A36              ;
  39+ 8A36              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A36              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A36              ;
  42+ 8A36              ;                       Arriba ..... $81
  43+ 8A36              ;                       Arriba - izquierda ..... $a1
  44+ 8A36              ;                       Arriba - derecha ..... $91
  45+ 8A36              ;
  46+ 8A36              ;                       Abajo ..... $41
  47+ 8A36              ;                       Abajo - izquierda ..... $61
  48+ 8A36              ;                       Abajo - derecha ..... $51
  49+ 8A36              ;
  50+ 8A36              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A36              ;
  52+ 8A36              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A36              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A36              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A36              ;
  56+ 8A36              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A36              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A36              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A36              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A36              ;
  61+ 8A36              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A36              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A36              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A36              ;
  65+ 8A36              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A36              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A36              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A36              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A36
  70+ 8A36              ; ----- ----- ----- ----- -----
  71+ 8A36
  72+ 8A36 62 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A38 6A 8A            defw F_1
  74+ 8A3A 74 8A            defw F_2
  75+ 8A3C 7E 8A            defw Codo_abajo_derecha
  76+ 8A3E B2 8A            defw Derecha_y_subiendo
  77+ 8A40 BC 8A            defw Derecha_y_subiendo_1
  78+ 8A42 C6 8A            defw F_3
  79+ 8A44 D0 8A            defw F_4
  80+ 8A46 DA 8A            defw Derecha_y_bajando
  81+ 8A48 E4 8A            defw Derecha_y_bajando_1
  82+ 8A4A EE 8A            defw Derecha_y_bajando_2
  83+ 8A4C F8 8A            defw Codo_derecha_abajo
  84+ 8A4E 28 8B            defw Codo_abajo_izq.
  85+ 8A50 5C 8B            defw Izquierda_y_subiendo
  86+ 8A52 66 8B            defw Izquierda_y_subiendo_1
  87+ 8A54 70 8B            defw F_5
  88+ 8A56 7A 8B            defw F_6
  89+ 8A58 84 8B            defw Izquierda_y_bajando
  90+ 8A5A 8E 8B            defw Izquierda_y_bajando_1
  91+ 8A5C 98 8B            defw Izquierda_y_bajando_2
  92+ 8A5E A2 8B            defw Codo_izquierda_abajo
  93+ 8A60 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A62
  95+ 8A62 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A66 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6A
  98+ 8A6A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A72 08 00
 100+ 8A74
 101+ 8A74 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A78 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7C 0F FE
 103+ 8A7E
 104+ 8A7E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A92 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB2
 118+ 8AB2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABA 06 00
 120+ 8ABC
 121+ 8ABC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC0 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC4 02 00
 123+ 8AC6
 124+ 8AC6 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACA 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACE 04 00
 126+ 8AD0
 127+ 8AD0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD8 08 00
 129+ 8ADA
 130+ 8ADA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE2 02 00
 132+ 8AE4
 133+ 8AE4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AEC 06 00
 135+ 8AEE
 136+ 8AEE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF6 06 00
 138+ 8AF8
 139+ 8AF8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF8
 141+ 8AF8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B04 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B24 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B28
 154+ 8B28 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B30 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B34 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B38 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B40 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B44 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B48 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B50 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B54 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B58 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5C
 168+ 8B5C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B60 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B64 06 00
 170+ 8B66
 171+ 8B66 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6E 02 00
 173+ 8B70
 174+ 8B70 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B74 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B78 04 00
 176+ 8B7A
 177+ 8B7A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B82 08 00
 179+ 8B84
 180+ 8B84 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B88 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8C 02 00
 182+ 8B8E
 183+ 8B8E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B92 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B96 06 00
 185+ 8B98
 186+ 8B98 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA0 06 00
 188+ 8BA2
 189+ 8BA2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC6 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCE 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD2
 202+ 8BD2
 203+ 8BD2
 204+ 8BD2
 205+ 8BD2
 206+ 8BD2
 207+ 8BD2
 208+ 8BD2
 209+ 8BD2
 210+ 8BD2
# file closed: Patrones_de_mov.asm
 149  8BD2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD2              ; 19/1/24
   2+ 8BD2
   3+ 8BD2              Indice_de_niveles
   4+ 8BD2
   5+ 8BD2 DA 8B        	defw Nivel_1
   6+ 8BD4 E1 8B        	defw Nivel_2
   7+ 8BD6
   8+ 8BD6              ;	...
   9+ 8BD6              ;	...
  10+ 8BD6              ;	+ Niveles ...
  11+ 8BD6
  12+ 8BD6 00 00        	defw 0
  13+ 8BD8 00 00        	defw 0
  14+ 8BDA
  15+ 8BDA 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDB 01 01 01 01  	db 1,1,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BDF 01 01
  17+ 8BE1
  18+ 8BE1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE6 01 02
  20+ 8BE8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BEC 01 02
  21+ 8BEE
# file closed: Niveles.asm
 150  8BEE
 151  8BEE              ; --------------------------------------------------------------------------------
 152  8BEE              ;
 153  8BEE              ; 12/05/24
 154  8BEE              ;
 155  8BEE              ; Parámetros DRAW.
 156  8BEE              ;
 157  8BEE
 158  8BEE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEE
 160  8BEE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEF              ;															- Patrón de movimiento.
 162  8BEF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF1
 165  8BF1 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF2
 168  8BF2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF2              ; Ejemplos.
 171  8BF2
 172  8BF2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF2
 178  8BF2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF3
 182  8BF3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF5
 185  8BF5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF7
 187  8BF7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF7
 189  8BF7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF9              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF9
 192  8BF9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF9
 194  8BF9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFA
 200  8BFA 00           Ctrl_2 db 0
 201  8BFB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFB              ;
 209  8BFB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFB              ;														BIT 4, ???
 215  8BFB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFB
 217  8BFB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFC              ;
 223  8BFC              ; 														DESCRIPCIÖN:
 224  8BFC              ;
 225  8BFC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFC              ;
 239  8BFC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFC
 243  8BFC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFC
 245  8BFC 00           Filas db 0												; Filas. [DRAW]
 246  8BFD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C00 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C02
 250  8C02              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C02
 252  8C02 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C03              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C03              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C03
 256  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C03
 258  8C03              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C03              ;
 260  8C03              ;	COLORES: 0 ..... NEGRO
 261  8C03              ;    		 1 ..... AZUL
 262  8C03              ; 			 2 ..... ROJO
 263  8C03              ;			 3 ..... MAGENTA
 264  8C03              ; 			 4 ..... VERDE
 265  8C03              ; 			 5 ..... CIAN
 266  8C03              ;			 6 ..... AMARILLO
 267  8C03              ; 			 7 ..... BLANCO
 268  8C03
 269  8C03 00 00        Indice_Sprite_der defw 0
 270  8C05 00 00        Indice_Sprite_izq defw 0
 271  8C07 00 00        Puntero_DESPLZ_der defw 0
 272  8C09 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0B
 274  8C0B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0E 00           Columnas db 0
 277  8C0F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C11              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C11 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C12
 281  8C12              ; variables de control general.
 282  8C12
 283  8C12 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C13
 285  8C13              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C13
 287  8C13              Perfiles_de_velocidad
 288  8C13
 289  8C13 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C14 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C15 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C16 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C17
 294  8C17              ; Contadores de 16 bits.
 295  8C17
 296  8C17 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C19 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1F
 301  8C1F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1F
 303  8C1F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C21 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C23 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C25              ;
 307  8C25              ;
 308  8C25 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C26              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C26              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C26 00           Incrementa_puntero_backup db 0
 312  8C27 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C28              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C28 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C29 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2B              ;
 318  8C2B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2B              ;
 322  8C2B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2B              ;
 327  8C2B              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2B
 331  8C2B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2C
 333  8C2C              ;														DESCRIPCIÓN:
 334  8C2C              ;
 335  8C2C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2C
 342  8C2C              ;														BIT 3, Recarga de nueva oleada.
 343  8C2C              ;														BIT 4, Recarga de nueva oleada.
 344  8C2C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2C              ;														BIT 6, **** Frame completo.
 346  8C2C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2C
 348  8C2C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2E
 353  8C2E              ; Gestión de ENTIDADES y CAJAS.
 354  8C2E
 355  8C2E 00 00        Puntero_store_caja defw 0
 356  8C30 00 00        Puntero_restore_caja defw 0
 357  8C32 00 00        Indice_restore_caja defw 0
 358  8C34 00 00        Puntero_indice_master defw 0
 359  8C36
 360  8C36 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C37 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C38 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C39
 364  8C39 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3D              ;														; _ puntero (Indice_entidades).
 367  8C3D
 368  8C3D              ;---------------------------------------------------------------------------------------------------------------
 369  8C3D              ;
 370  8C3D              ;	13/10/24
 371  8C3D              ;
 372  8C3D              ;	Álbumes.
 373  8C3D
 374  8C3D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3F              ;														; _variable para almacenar lo posición del puntero_
 376  8C3F              ; 														; _de pila, SP.
 377  8C3F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C41              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C41
 380  8C41              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C41
 382  8C41 00 00        Album_de_pintado defw 0
 383  8C43 00 00        Album_de_borrado defw 0
 384  8C45 00 00        Album_de_pintado_Amadeus defw 0
 385  8C47 00 00        Album_de_borrado_Amadeus defw 0
 386  8C49
 387  8C49 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4D
 390  8C4D 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4F 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C51
 393  8C51
 394  8C51 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C53
 396  8C53 00           Num_de_bytes_album_de_disparos db 0
 397  8C54 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C55
 399  8C55 07           Numero_de_disparos_de_entidades db 7
 400  8C56
 401  8C56 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C57 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C58
 404  8C58 00 00        Techo_Scanlines_album defw 0
 405  8C5A 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5C 00           Switch db 0
 407  8C5D 00 00        Techo defw 0
 408  8C5F 00 00        Scanlines_album_SP defw 0
 409  8C61 00 89        India_SP defw Tabla_de_pintado
 410  8C63 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C65
 412  8C65 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C66              ;
 414  8C66              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C66              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C66              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C66              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C66              ;																Habilita el borrado/pintado de sprites.
 419  8C66              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C66              ;																_ a la baja.
 421  8C66              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C66              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C66              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C66              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C66              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C66              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C66
 428  8C66 00           Ctrl_4 db 0
 429  8C67 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C68              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C68              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C68
 433  8C68              ; Gestión de Disparos.
 434  8C68
 435  8C68 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6C 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6D
 439  8C6D              ;
 440  8C6D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6D
 445  8C6D
 446  8C6D
 447  8C6D
 448  8C6D
 449  8C6D
 450  8C6D
 451  8C6D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6F
 455  8C6F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C71              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C71 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C74              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C74 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C77              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C77
 462  8C77              ;---------------------------------------------------------------------------------------------------------------
 463  8C77
 464  8C77              ; Relojes y temporizaciones.
 465  8C77
 466  8C77 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C78 05           Clock_explosion_Amadeus db 5
 468  8C79 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7A
 470  8C7A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7E 00           Numero_rnd_disparos db 0
 473  8C7F
 474  8C7F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C81 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C82              ;																		; Repite la oleada de entidades.
 477  8C82 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C83 A0           CLOCK_disparos_de_entidades db $a0
 479  8C84
 480  8C84              ;---------------------------------------------------------------------------------------------------------------
 481  8C84
 482  8C84              ; Gestión de NIVELES.
 483  8C84
 484  8C84 00           Nivel db 0												; Nivel actual del juego.
 485  8C85 00 00        Puntero_indice_NIVELES defw 0
 486  8C87 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C89              ; 														; _ que definen el NIVEL.
 488  8C89
 489  8C89              ; ---------------------------------------------------------------------------------------------------------------
 490  8C89
 491  8C89              ; Temporizaciones Shield.
 492  8C89
 493  8C89 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C90 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C91 00           Shield_3 db 0
 498  8C92
 499  8C92 03           Lives db 3
 500  8C93
 501  8C93              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C93              ;
 503  8C93              ;	13/11/24
 504  8C93
 505  8C93              START
 506  8C93
 507  8C93 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C96 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C98 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9C F3           	DI
 512  8C9D
 513  8C9D              ; Limpiamos pantalla.
 514  8C9D
 515  8C9D 3E 07        	ld a,%00000111
 516  8C9F CD 9A 94     	call Cls
 517  8CA2 CD 55 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA5
 519  8CA5              INICIALIZACION
 520  8CA5
 521  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA7 CD A2 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAA CD EA 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 7F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3 CD 0D 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 529  8CB6 CD D2 92     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 530  8CB9              ;														   _reponiendo entidades eliminadas.
 531  8CB9 CD 41 93     	call Prepara_Cajas_de_Entidades
 532  8CBC
 533  8CBC
 534  8CBC              ;	Inicia los álbumes de líneas.
 535  8CBC
 536  8CBC CD A3 90     	call Inicia_albumes_de_lineas
 537  8CBF              ;
 538  8CBF CD B3 90     	call Inicia_albumes_de_lineas_Amadeus
 539  8CC2 CD C0 90     	call Inicia_albumes_de_disparos
 540  8CC5
 541  8CC5              4
 542  8CC5
 543  8CC5              ;	call Inicia_Entidades
 544  8CC5 CD 85 93     	call Inicia_Amadeus
 545  8CC8
 546  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC8
 550  8CC8 11 B7 89     	ld de,Amadeus_BOX
 551  8CCB CD 69 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCE CD C8 93     	call Limpiamos_bandeja_DRAW
 553  8CD1
 554  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD1
 556  8CD1 06 3C        	ld b,60
 557  8CD3 CD 40 9D     2 call Amadeus_a_izquierda
 558  8CD6 10 FB        	djnz 2B
 559  8CD8
 560  8CD8 CD 81 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDB
 562  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDB
 564  8CDB CD DC 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDE
 566  8CDE CD 60 91     	call Inicia_Shield
 567  8CE1
 568  8CE1 2A 5F 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE4 22 58 8C     	ld (Techo_Scanlines_album),hl
 570  8CE7
 571  8CE7 2A 43 8C     	ld hl,(Album_de_borrado)
 572  8CEA 22 5F 8C     	ld (Scanlines_album_SP),hl
 573  8CED
 574  8CED 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF0 22 61 8C     	ld (India_SP),hl
 576  8CF3
 577  8CF3 21 65 8C     	ld hl,Ctrl_3
 578  8CF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF8 CB D6        	set 2,(hl)
 580  8CFA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFC
 582  8CFC FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFD
 584  8CFD 76           	halt
 585  8CFE
 586  8CFE              ; ------------------------------------
 587  8CFE
 588  8CFE              Main
 589  8CFE              ;
 590  8CFE              ; 07/11/24.
 591  8CFE
 592  8CFE              ; Gestión de disparos.
 593  8CFE
 594  8CFE CD BF 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D01 CD 33 9F     	call Motor_de_disparos_entidades
 596  8D04 CD C8 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D07
 598  8D07              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D07              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D07              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D07
 602  8D07 CD 65 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0A
 604  8D0A              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0A
 606  8D0A 21 83 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0D 35           	dec (hl)
 608  8D0E CC 06 8E     	call z,Autoriza_disparo_de_entidades
 609  8D11
 610  8D11 2A 7F 8C     	ld hl,(Clock_next_entity)
 611  8D14 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D18 A7           	and a
 613  8D19 ED 42        	sbc hl,bc
 614  8D1B 20 16        	jr nz,1F
 615  8D1D
 616  8D1D              ; GESTIÓN DE ENTIDADES.
 617  8D1D
 618  8D1D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1D              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1D
 621  8D1D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1D
 625  8D1D 21 37 8C     	ld hl,Numero_parcial_de_entidades
 626  8D20 46           	ld b,(hl)
 627  8D21 3A 38 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D24 B8           	cp b
 629  8D25 28 0C        	jr z,1F
 630  8D27 30 0A        	jr nc,1F
 631  8D29
 632  8D29              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D29
 634  8D29 3C           	inc a
 635  8D2A 32 38 8C     	ld (Entidades_en_curso),a
 636  8D2D
 637  8D2D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2D
 639  8D2D CD EA 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D30 CD 06 8F     	call Define_Clock_next_entity
 641  8D33
 642  8D33 3A 38 8C     1 ld a,(Entidades_en_curso)
 643  8D36 A7           	and a
 644  8D37 CA B1 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3A 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3B
 647  8D3B              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3B
 649  8D3B              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3B              ;
 651  8D3B              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3B
 653  8D3B 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3E 22 61 8C     	ld (India_SP),hl
 655  8D41
 656  8D41 21 65 8C     	ld hl,Ctrl_3
 657  8D44 CB D6        	set 2,(hl)
 658  8D46 CD 94 8E     	call Change
 659  8D49
 660  8D49 C5           2 push bc 												; Nº de entidades en curso.
 661  8D4A
 662  8D4A CD 2D 91     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 663  8D4D ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
 664  8D51
 665  8D51              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 666  8D51
 667  8D51              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 668  8D51              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 669  8D51
 670  8D51 3A 6C 8C     	ld a,(Impacto2)
 671  8D54 CB 5F        	bit 3,a
 672  8D56 C4 5F A1     	call nz,Compara_con_coordenadas_de_disparo
 673  8D59
 674  8D59 3A F2 8B     	ld a,(Impacto)
 675  8D5C CB 4F        	bit 1,a
 676  8D5E C4 3D 92     	call nz,Genera_explosion
 677  8D61 20 31        	jr nz,Gestiona_siguiente_entidad
 678  8D63
 679  8D63 3A F2 8B     	ld a,(Impacto)
 680  8D66 A7           	and a
 681  8D67 28 0C        	jr z,3F
 682  8D69
 683  8D69              ; IMPACTO en entidad por colisión con Amadeus.
 684  8D69
 685  8D69              ; 5/7/24
 686  8D69              ; Nota importante:
 687  8D69              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 688  8D69              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 689  8D69              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 690  8D69
 691  8D69 3A BB 89     	ld a,(Impacto_Amadeus)
 692  8D6C A7           	and a
 693  8D6D C4 3D 92     	call nz,Genera_explosion
 694  8D70 20 22        	jr nz,Gestiona_siguiente_entidad
 695  8D72
 696  8D72              ; Falsa colisión !!!
 697  8D72
 698  8D72 32 F2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 699  8D75
 700  8D75              ; -------------------------------------------
 701  8D75
 702  8D75 CD 4A 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 703  8D78 CD 72 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 704  8D7B CD 3A 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 705  8D7E CD DA 94     	call Genera_datos_de_impresion
 706  8D81 CD EB 93     	call Decrementa_Contador_de_mov_masticados
 707  8D84
 708  8D84              ; -------------------------------------------
 709  8D84
 710  8D84              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 711  8D84
 712  8D84 2A F3 8B     	ld hl,(Puntero_de_impresion)
 713  8D87 CD AE 94     	call Genera_coordenadas
 714  8D8A
 715  8D8A              ; TODO: Generamos disparo ???
 716  8D8A
 717  8D8A 3A 57 8C     	ld a,(Permiso_de_disparo_Entidades)
 718  8D8D A7           	and a
 719  8D8E C4 1B 8E     	call nz,Entidad_genera_disparo_si_procede
 720  8D91
 721  8D91 CD E3 A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 722  8D94
 723  8D94              Gestiona_siguiente_entidad
 724  8D94
 725  8D94 CD BD 93      	call Store_Restore_cajas
 726  8D97 C1           	pop bc
 727  8D98 10 AF        	djnz 2B
 728  8D9A
 729  8D9A              ; Hemos gestionado todas las entidades.
 730  8D9A              ; ----- ----- -----
 731  8D9A
 732  8D9A CD 5E 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 733  8D9D CD 75 8F     	call Ordena_tabla_de_impresion
 734  8DA0 CD DC 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 735  8DA3
 736  8DA3 CD 1B 8F     	call Borra_diferencia
 737  8DA6
 738  8DA6 3A 65 8C     	ld a,(Ctrl_3)
 739  8DA9 CB 5F        	bit 3,a
 740  8DAB 20 04        	jr nz,Gestion_de_Amadeus
 741  8DAD
 742  8DAD EB           	ex de,hl
 743  8DAE 71           	ld (hl),c
 744  8DAF 2C           	inc l
 745  8DB0 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 746  8DB1
 747  8DB1              ;! GESTIONA AMADEUS !!!!!!!!!!
 748  8DB1
 749  8DB1              Gestion_de_Amadeus
 750  8DB1
 751  8DB1 21 65 8C     	ld hl,Ctrl_3
 752  8DB4 CB 76        	bit 6,(hl)
 753  8DB6 28 13        	jr z,Amadeus_vivo
 754  8DB8
 755  8DB8              ; Amadeus ha sido destruido.
 756  8DB8              ; Decrementa (Temp_new_live).
 757  8DB8
 758  8DB8 21 79 8C     	ld hl,Temp_new_live
 759  8DBB 35           	dec (hl)
 760  8DBC 20 26        	jr nz,End_frame
 761  8DBE
 762  8DBE              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 763  8DBE
 764  8DBE 21 92 8C     	ld hl,Lives
 765  8DC1 35           	dec (hl)
 766  8DC2
 767  8DC2              ;! Fin del juego
 768  8DC2
 769  8DC2 F3           	di
 770  8DC3 28 FE        	jr z,$
 771  8DC5 FB           	ei
 772  8DC6
 773  8DC6              ; Nueva nave.
 774  8DC6
 775  8DC6 CD 38 8E     	call Reinicia_Amadeus
 776  8DC9 18 19        	jr End_frame
 777  8DCB
 778  8DCB              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 779  8DCB
 780  8DCB              Amadeus_vivo
 781  8DCB
 782  8DCB 3A BB 89     	ld a,(Impacto_Amadeus)
 783  8DCE A7           	and a
 784  8DCF C4 6D 92     	call nz, Genera_explosion_Amadeus
 785  8DD2 20 10        	jr nz, End_frame
 786  8DD4
 787  8DD4 CD 1A 92     	call Teclado
 788  8DD7 21 65 8C     	ld hl,Ctrl_3
 789  8DDA
 790  8DDA CB 6E        	bit 5,(hl)
 791  8DDC 28 06        	jr z,End_frame
 792  8DDE
 793  8DDE              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 794  8DDE
 795  8DDE CD AF 8E     	call Change_Amadeus
 796  8DE1 CD 81 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 797  8DE4
 798  8DE4              End_frame
 799  8DE4
 800  8DE4              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 801  8DE4              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 802  8DE4
 803  8DE4 CD 8A A0     	call Genera_datos_de_impresion_disparos_Entidades
 804  8DE7 CD 4E A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 805  8DEA CD A4 A1     	call Calcula_bytes_pintado_disparos
 806  8DED CD B1 A1     	call Limpia_album_de_pintado_disparos_entidades
 807  8DF0
 808  8DF0              ; ------------ ------------- --------------
 809  8DF0
 810  8DF0 2A 43 8C     	ld hl,(Album_de_borrado)
 811  8DF3 22 5F 8C     	ld (Scanlines_album_SP),hl
 812  8DF6
 813  8DF6 21 65 8C     	ld hl,Ctrl_3
 814  8DF9 CB C6        	set 0,(hl) 											; Indica Frame completo.
 815  8DFB CB 9E        	res 3,(hl)
 816  8DFD CB A6        	res 4,(hl)
 817  8DFF
 818  8DFF AF           	xor a
 819  8E00 D3 FE        	out ($fe),a
 820  8E02
 821  8E02 76           	halt
 822  8E03
 823  8E03              ; ----------------------------------------
 824  8E03
 825  8E03              ;	ld a,(Ctrl_1) 										; Existe Loop?
 826  8E03              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 827  8E03 CA FE 8C     	jp z,Main
 828  8E06
 829  8E06              ;------------------------------------------
 830  8E06              ;
 831  8E06              ;	07/11/24
 832  8E06
 833  8E06              Autoriza_disparo_de_entidades
 834  8E06
 835  8E06 3E 01        	ld a,1
 836  8E08 32 57 8C     	ld (Permiso_de_disparo_Entidades),a
 837  8E0B
 838  8E0B 3A 82 8C     	ld a,(Repone_CLOCK_disparos)
 839  8E0E FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 840  8E10 38 02        	jr c,1F
 841  8E12
 842  8E12              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 843  8E12              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 844  8E12              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 845  8E12
 846  8E12 D6 03        	sub 3
 847  8E14
 848  8E14 32 82 8C     1 ld (Repone_CLOCK_disparos),a
 849  8E17 32 83 8C     	ld (CLOCK_disparos_de_entidades),a
 850  8E1A
 851  8E1A C9           	ret
 852  8E1B
 853  8E1B              ;------------------------------------------
 854  8E1B              ;
 855  8E1B              ;	14/09/24
 856  8E1B              ;
 857  8E1B              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 858  8E1B
 859  8E1B              Entidad_genera_disparo_si_procede
 860  8E1B
 861  8E1B 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 862  8E1E CB 06        	rlc (hl)
 863  8E20
 864  8E20 DC DA A0     	call c,Genera_disparo_de_entidad_maldosa
 865  8E23
 866  8E23 C9           	ret
 867  8E24
 868  8E24              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 869  8E24              ;
 870  8E24              ;	30/09/24
 871  8E24
 872  8E24              Actuaiza_sp_de_disparos_de_entidades
 873  8E24
 874  8E24 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 875  8E27 23           	inc hl
 876  8E28 22 7C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 877  8E2B
 878  8E2B 11 FD 88     	ld de,Numeros_aleatorios+7
 879  8E2E 7B           	ld a,e
 880  8E2F 95           	sub l
 881  8E30 C0           	ret nz
 882  8E31
 883  8E31 21 F6 88     1 ld hl,Numeros_aleatorios
 884  8E34 22 7C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 885  8E37 C9           	ret
 886  8E38
 887  8E38              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 888  8E38              ;
 889  8E38              ;	24/07/24
 890  8E38
 891  8E38              Reinicia_Amadeus
 892  8E38
 893  8E38              ;	Reinicia posición y estado.
 894  8E38
 895  8E38 21 CF 50     	ld hl,$50cf
 896  8E3B 22 BC 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 897  8E3E 21 CC DC     	ld hl,$dccc
 898  8E41 22 BE 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 899  8E44 21 3D 00     	ld hl,$003d
 900  8E47 22 C0 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 901  8E4A
 902  8E4A              ;	limpiamos el álbum de borrado.
 903  8E4A
 904  8E4A 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
 905  8E4D
 906  8E4D AF           	xor a
 907  8E4E 77           	ld (hl),a
 908  8E4F
 909  8E4F E5           	push hl
 910  8E50 D1           	pop de
 911  8E51 13           	inc de
 912  8E52
 913  8E52 01 23 00     	ld bc,35
 914  8E55 ED B0        	ldir
 915  8E57
 916  8E57 CD 81 90     	call Genera_datos_de_impresion_Amadeus
 917  8E5A
 918  8E5A              ;	Reinicia temporizaciones.
 919  8E5A
 920  8E5A CD 60 91     	call Inicia_Shield
 921  8E5D
 922  8E5D 3E 5A        	ld a,90
 923  8E5F 32 8F 8C     	ld (Shield),a
 924  8E62
 925  8E62 3E 64        	ld a,100
 926  8E64 32 79 8C     	ld (Temp_new_live),a
 927  8E67
 928  8E67              ; 	Restauramos el FLAG: Amadeus vivo.
 929  8E67
 930  8E67 21 65 8C     	ld hl,Ctrl_3
 931  8E6A CB B6        	res 6,(hl)
 932  8E6C
 933  8E6C              ;	Fuerza la impresión de la nave en el siguiente frame.
 934  8E6C
 935  8E6C 21 65 8C      	ld hl,Ctrl_3
 936  8E6F CB EE        	set 5,(hl)
 937  8E71
 938  8E71 C9           	ret
 939  8E72
 940  8E72              ; --------------------------------------------------------------------------------------------------------------
 941  8E72              ;
 942  8E72              ;	7/11/24
 943  8E72
 944  8E72              Ajusta_velocidad_entidad
 945  8E72
 946  8E72 3A F9 8B     	ld a,(Velocidad)
 947  8E75 A7           	and a
 948  8E76 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 949  8E77              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 950  8E77              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 951  8E77
 952  8E77
 953  8E77              ; Incrementa (Contador_de_vueltas)x2.
 954  8E77              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 955  8E77
 956  8E77              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 957  8E77              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 958  8E77              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 959  8E77              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 960  8E77              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 961  8E77
 962  8E77
 963  8E77 CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 964  8E79 32 F9 8B     	ld (Velocidad),a
 965  8E7C E6 10        	and $10
 966  8E7E C8           	ret z
 967  8E7F
 968  8E7F              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 969  8E7F
 970  8E7F 3A F1 8B     	ld a,(Contador_de_vueltas)
 971  8E82 CB 2F        	sra a
 972  8E84 CB 2F        	sra a
 973  8E86 32 F9 8B     	ld (Velocidad),a
 974  8E89
 975  8E89 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 976  8E8C 23           	inc hl
 977  8E8D 23           	inc hl
 978  8E8E 23           	inc hl
 979  8E8F 23           	inc hl
 980  8E90 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 981  8E93
 982  8E93 C9           	ret
 983  8E94
 984  8E94              ; --------------------------------------------------------------------------------------------------------------
 985  8E94              ;
 986  8E94              ;	25/08/24
 987  8E94
 988  8E94              Change
 989  8E94
 990  8E94 3A 5C 8C     	ld a,(Switch)
 991  8E97 EE 01        	xor 1
 992  8E99 32 5C 8C     	ld (Switch),a
 993  8E9C 2A 41 8C     	ld hl,(Album_de_pintado)
 994  8E9F ED 5B 43 8C  	ld de,(Album_de_borrado)
 995  8EA3 EB           	ex de,hl
 996  8EA4 22 41 8C     	ld (Album_de_pintado),hl
 997  8EA7 22 5F 8C     	ld (Scanlines_album_SP),hl
 998  8EAA ED 53 43 8C  	ld (Album_de_borrado),de
 999  8EAE C9           	ret
1000  8EAF
1001  8EAF              Change_Amadeus
1002  8EAF
1003  8EAF 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1004  8EB2 ED 5B 47 8C  	ld de,(Album_de_borrado_Amadeus)
1005  8EB6 EB           	ex de,hl
1006  8EB7 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1007  8EBA ED 53 47 8C  	ld (Album_de_borrado_Amadeus),de
1008  8EBE C9           	ret
1009  8EBF
1010  8EBF              Change_Disparos
1011  8EBF
1012  8EBF              ; Álbumes de Amadeus.
1013  8EBF
1014  8EBF 2A 49 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1015  8EC2 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1016  8EC6 EB           	ex de,hl
1017  8EC7 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1018  8ECA ED 53 4B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1019  8ECE CD 99 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1020  8ED1
1021  8ED1              ; Álbumes de entidades.
1022  8ED1
1023  8ED1 2A 4D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1024  8ED4 ED 5B 4F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1025  8ED8 EB           	ex de,hl
1026  8ED9 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1027  8EDC ED 53 4F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1028  8EE0 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1029  8EE3
1030  8EE3 3A 53 8C     	ld a,(Num_de_bytes_album_de_disparos)
1031  8EE6 32 54 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1032  8EE9
1033  8EE9 C9           	ret
1034  8EEA
1035  8EEA              ; ------------------------------------
1036  8EEA              ;
1037  8EEA              ; 1/05/24
1038  8EEA
1039  8EEA              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1040  8EEA              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1041  8EEA
1042  8EEA              ;	DESTRUYE: HL,DE,A
1043  8EEA              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1044  8EEA
1045  8EEA              ;	Variables implicadas: (RND_SP).
1046  8EEA
1047  8EEA              Extrae_numero_aleatorio_y_avanza
1048  8EEA
1049  8EEA 21 00 89     	ld hl,Tabla_de_pintado
1050  8EED EB           	ex de,hl
1051  8EEE 2A 7A 8C     	ld hl,(RND_SP)
1052  8EF1 EB           	ex de,hl
1053  8EF2 A7           	and a
1054  8EF3 ED 52        	sbc hl,de
1055  8EF5
1056  8EF5 2A 7A 8C     	ld hl,(RND_SP)
1057  8EF8 20 06        	jr nz,1F
1058  8EFA
1059  8EFA              ; Sitúa HL al principio de la tabla de nº aleatorios.
1060  8EFA
1061  8EFA 21 F6 88     	ld hl,Numeros_aleatorios
1062  8EFD 22 7A 8C     	ld (RND_SP),HL
1063  8F00
1064  8F00              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1065  8F00
1066  8F00 7E           1 ld a,(hl)
1067  8F01 23           	inc hl
1068  8F02 22 7A 8C     	ld (RND_SP),hl
1069  8F05 C9           	ret
1070  8F06
1071  8F06              ; ------------------------------------
1072  8F06              ;
1073  8F06              ; 1/05/24
1074  8F06
1075  8F06              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1076  8F06              ; (1 a 4 segundos).
1077  8F06              ; Actualizamos (Clock_next_entity) con A.
1078  8F06
1079  8F06              ;	DESTRUYE: A y B.
1080  8F06              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1081  8F06              ;			 Actualiza (Clock_next_entity) con A.
1082  8F06
1083  8F06              ;	Variables implicadas: (Clock_next_entity).
1084  8F06
1085  8F06              ; Notas:
1086  8F06
1087  8F06              ; 	$32 1 seg.
1088  8F06              ; 	$64 2 seg.
1089  8F06              ; 	$96 3 seg.
1090  8F06              ; 	$c8 4 seg.
1091  8F06              ; 	$fa 5 seg.
1092  8F06
1093  8F06              ; $ffff 1310,7 seg, 22 minutos.
1094  8F06
1095  8F06              ;	$0100  5 seg. aproximadamente.
1096  8F06              ;	$0200 10 seg. aproximadamente.
1097  8F06              ;	$0300 15 seg. aproximadamente.
1098  8F06              ;	$0400 20 seg. aproximadamente.
1099  8F06              ;	$0500 25 seg. aproximadamente.
1100  8F06              ;	$0600 30 seg. aproximadamente.
1101  8F06
1102  8F06              Define_Clock_next_entity
1103  8F06
1104  8F06 FE 34        	cp $34
1105  8F08 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1106  8F0A
1107  8F0A              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1108  8F0A
1109  8F0A 4F           3 ld c,a
1110  8F0B 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1111  8F0D 2A 78 5C     	ld hl,(FRAMES)
1112  8F10 A7           	and a
1113  8F11 ED 4A        	adc hl,bc
1114  8F13 22 7F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1115  8F16 C9           	ret
1116  8F17
1117  8F17 3E 34        1 ld a,$34
1118  8F19 18 EF        	jr 3B
1119  8F1B
1120  8F1B              ; ------------------------------------
1121  8F1B              ;
1122  8F1B              ; 18/03/24
1123  8F1B
1124  8F1B              Borra_diferencia
1125  8F1B
1126  8F1B ED 4B 5F 8C  	ld bc,(Scanlines_album_SP)
1127  8F1F
1128  8F1F 3A 5C 8C     	ld a,(Switch)
1129  8F22 A7           	and a
1130  8F23 28 08        	jr z,2F
1131  8F25
1132  8F25 2A 5A 8C     	ld hl,(Techo_Scanlines_album_2)
1133  8F28 11 5A 8C     	ld de,Techo_Scanlines_album_2
1134  8F2B 18 06        	jr 3F
1135  8F2D
1136  8F2D 2A 58 8C     2 ld hl,(Techo_Scanlines_album)
1137  8F30 11 58 8C     	ld de,Techo_Scanlines_album
1138  8F33
1139  8F33              ; Diferencia.
1140  8F33
1141  8F33 ED 42        3 sbc hl,bc
1142  8F35
1143  8F35 C8           	ret z
1144  8F36 D8           	ret c
1145  8F37
1146  8F37              ; Nuevo techo, (más bajo que el anterior).
1147  8F37              ; Fijamos nuevo techo y borramos bytes sobrantes.
1148  8F37
1149  8F37 EB           	ex de,hl
1150  8F38
1151  8F38 71           	ld (hl),c
1152  8F39 2C           	inc l
1153  8F3A 70           	ld (hl),b
1154  8F3B
1155  8F3B AF           	xor a
1156  8F3C 43           	ld b,e
1157  8F3D
1158  8F3D 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1159  8F40
1160  8F40 77           1 ld (hl),a
1161  8F41 23           	inc hl
1162  8F42 10 FC        	djnz 1B
1163  8F44
1164  8F44              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1165  8F44
1166  8F44 21 65 8C     	ld hl,Ctrl_3
1167  8F47 CB DE        	set 3,(hl)
1168  8F49
1169  8F49 C9           	ret
1170  8F4A
1171  8F4A              ; --------------------------------------------------------------------------------------------------------------
1172  8F4A              ;
1173  8F4A              ;	26/3/24
1174  8F4A
1175  8F4A              Recauda_informacion_de_entidad_en_curso
1176  8F4A
1177  8F4A              ; Almacena la Coordenada Y de la entidad en curso.
1178  8F4A
1179  8F4A              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1180  8F4A
1181  8F4A 3A F0 8B     	ld a,(Coordenada_y)
1182  8F4D 2A 61 8C     	ld hl,(India_SP)
1183  8F50 77           	ld (hl),a
1184  8F51 2C           	inc l
1185  8F52
1186  8F52              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1187  8F52
1188  8F52 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
1189  8F56
1190  8F56 73           	ld (hl),e
1191  8F57 2C           	inc l
1192  8F58 72           	ld (hl),d
1193  8F59 2C           	inc l
1194  8F5A
1195  8F5A 22 61 8C     	ld (India_SP),hl
1196  8F5D
1197  8F5D C9           	ret
1198  8F5E
1199  8F5E              ; --------------------------------------------------------------------------------------------------------------
1200  8F5E              ;
1201  8F5E              ;	27/03/24
1202  8F5E              ;
1203  8F5E
1204  8F5E              Inicializa_India_y_limpia_Tabla_de_impresion
1205  8F5E
1206  8F5E 2A 61 8C     	ld hl,(India_SP)
1207  8F61 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1208  8F64
1209  8F64 79           	ld a,c
1210  8F65 95           	sub l
1211  8F66 28 06        	jr z,2F
1212  8F68 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1213  8F69              ;														; _ y pasamos a inicializar (India_SP).
1214  8F69 AF           	xor a
1215  8F6A
1216  8F6A 77           1 ld (hl),a
1217  8F6B 2C           	inc l
1218  8F6C 10 FC        	djnz 1B												; Limpia Tabla.
1219  8F6E
1220  8F6E 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1221  8F71 22 61 8C     	ld (India_SP),hl
1222  8F74
1223  8F74 C9           	ret
1224  8F75
1225  8F75              ; --------------------------------------------------------------------------------------------------------------
1226  8F75              ;
1227  8F75              ;	31/3/24
1228  8F75
1229  8F75              Ordena_tabla_de_impresion
1230  8F75
1231  8F75              ; 5794 T/states.
1232  8F75              ; 6278 T/states.
1233  8F75              ; 5310 T/states.
1234  8F75
1235  8F75              ; Inicializamos punteros (India_SP) e (India_2_SP).
1236  8F75              ; Inicializamos contador de comparaciones, [C].
1237  8F75              ; Cargamos los registros A y B para efectuar comparación.
1238  8F75
1239  8F75 FD 2E 00     	ld iyl,0
1240  8F78
1241  8F78 3A 38 8C     	ld a,(Entidades_en_curso)
1242  8F7B FE 04        	cp 4 	;	4
1243  8F7D D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1244  8F7E
1245  8F7E 3D           	dec a
1246  8F7F 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1247  8F80 51           	ld d,c 										; Copia de respaldo.
1248  8F81
1249  8F81 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1250  8F82
1251  8F82 21 03 89     	ld hl,Tabla_de_pintado+3
1252  8F85 46           	ld b,(hl)
1253  8F86 22 63 8C     	ld (India_2_SP),hl
1254  8F89
1255  8F89 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1256  8F8A DC B2 8F     	call c, Avanza_India_2_SP
1257  8F8D CC B2 8F     	call z, Avanza_India_2_SP
1258  8F90
1259  8F90 FD 2D        	dec iyl
1260  8F92 28 18        	jr z,2F
1261  8F94
1262  8F94
1263  8F94              ; --------------------------------------------------------------------------------------------------------------
1264  8F94              ;
1265  8F94              ;	7/4/24
1266  8F94
1267  8F94              Trueque
1268  8F94
1269  8F94              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1270  8F94              ;  			A contiene en nº de fila de (India_SP).
1271  8F94              ;			HL contiene (India_2_SP).
1272  8F94
1273  8F94 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1274  8F95 E5           	push hl										; Preservo (India_2_SP).
1275  8F96
1276  8F96 ED 5B 61 8C  	ld de,(India_SP)
1277  8F9A EB           	ex de,hl
1278  8F9B 70           	ld (hl),b
1279  8F9C 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1280  8F9D
1281  8F9D CD DE 8F     	call Intercambia_1_byte
1282  8FA0 CD DE 8F     	call Intercambia_1_byte
1283  8FA3
1284  8FA3
1285  8FA3              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1286  8FA3              ; Recuperamos (India_2_SP) en HL.
1287  8FA3
1288  8FA3 2A 61 8C     	ld hl,(India_SP)
1289  8FA6 7E           	ld a,(hl)
1290  8FA7
1291  8FA7 E1           	pop hl
1292  8FA8 D1           	pop de
1293  8FA9
1294  8FA9              ; --------------------------------------------------------------------------------------------------------------
1295  8FA9
1296  8FA9 CD B2 8F     	call Avanza_India_2_SP
1297  8FAC
1298  8FAC 14           2 inc d
1299  8FAD 15           	dec d
1300  8FAE C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1301  8FAF 18 D8        	jr 1B
1302  8FB1
1303  8FB1 C9           	ret
1304  8FB2
1305  8FB2              ; ----- ----- ----- ----- -----
1306  8FB2
1307  8FB2              Avanza_India_2_SP
1308  8FB2
1309  8FB2 0D           	dec c
1310  8FB3 28 0A        	jr z,Avanza_punteros_indios
1311  8FB5
1312  8FB5 FD 2C        	inc iyl
1313  8FB7
1314  8FB7 2C           	inc l
1315  8FB8 2C           	inc l
1316  8FB9 2C           	inc l
1317  8FBA
1318  8FBA 46           	ld b,(hl)
1319  8FBB 22 63 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1320  8FBE
1321  8FBE C9           	ret
1322  8FBF
1323  8FBF              ; ----- ----- ----- ----- -----
1324  8FBF
1325  8FBF              Avanza_punteros_indios
1326  8FBF
1327  8FBF 15           	dec d
1328  8FC0 28 15        	jr z,Prepara_salida
1329  8FC2
1330  8FC2 4A           	ld c,d
1331  8FC3
1332  8FC3 2A 61 8C     	ld hl,(India_SP)
1333  8FC6 2C           	inc l
1334  8FC7 2C           	inc l
1335  8FC8 2C           	inc l
1336  8FC9 7E           	ld a,(hl)
1337  8FCA 22 61 8C     	ld (India_SP),hl
1338  8FCD
1339  8FCD 2C           	inc l
1340  8FCE 2C           	inc l
1341  8FCF 2C           	inc l
1342  8FD0 46           	ld b,(hl)
1343  8FD1 22 63 8C     	ld (India_2_SP),hl
1344  8FD4
1345  8FD4 FD 2C        	inc iyl
1346  8FD6
1347  8FD6 C9           	ret
1348  8FD7
1349  8FD7              Prepara_salida
1350  8FD7
1351  8FD7 21 00 89     	ld hl,Tabla_de_pintado
1352  8FDA 22 61 8C     	ld (India_SP),hl
1353  8FDD C9           	ret
1354  8FDE
1355  8FDE
1356  8FDE 2C           Intercambia_1_byte inc l
1357  8FDF 1C           	inc e
1358  8FE0 46           	ld b,(hl)
1359  8FE1 1A           	ld a,(de)
1360  8FE2 EB           	ex de,hl
1361  8FE3 70           	ld (hl),b
1362  8FE4 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1363  8FE5 C9           	ret
1364  8FE6
1365  8FE6              ; -----------------------------------------------------------------------------------
1366  8FE6              ;
1367  8FE6              ;	20/01/24
1368  8FE6              ;
1369  8FE6              ;
1370  8FE6
1371  8FE6              Construye_movimientos_masticados_entidad
1372  8FE6
1373  8FE6 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1374  8FE9 E5           	push hl
1375  8FEA CD 2D 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1376  8FED              ;															; _ el (Contador_de_mov_masticados).
1377  8FED CD F8 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1378  8FF0              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1379  8FF0 CD C6 99     	call Recompone_posicion_inicio
1380  8FF3
1381  8FF3 CD F6 96     1 call Draw
1382  8FF6 CD 12 90     	call Guarda_movimiento_masticado
1383  8FF9
1384  8FF9 CD 73 9D     	call Movimiento
1385  8FFC
1386  8FFC 3A 65 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1387  8FFF CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1388  9001 28 F0        	jr z,1B
1389  9003
1390  9003              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1391  9003              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1392  9003
1393  9003 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1394  9004 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1395  9007
1396  9007              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1397  9007
1398  9007 CD D7 9E     	call Situa_en_contador_general_de_mov_masticados
1399  900A
1400  900A              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1401  900A              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1402  900A
1403  900A ED 4B F7 8B  	ld bc,(Contador_de_mov_masticados)
1404  900E
1405  900E 71           	ld (hl),c
1406  900F 23           	inc hl
1407  9010 70           	ld (hl),b
1408  9011
1409  9011 C9           	ret
1410  9012
1411  9012              ; -----------------------------------------------------------------------------------
1412  9012              ;
1413  9012              ;	28/12/23
1414  9012              ;
1415  9012              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1416  9012              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1417  9012
1418  9012              Guarda_movimiento_masticado
1419  9012
1420  9012 ED 73 3D 8C  	ld (Stack),sp
1421  9016 ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1422  901A
1423  901A DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1424  901C FD E5            push iy 												; Pushea Puntero_objeto.
1425  901E
1426  901E ED 7B 3D 8C      ld sp,(Stack)
1427  9022
1428  9022 2A F7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1429  9025 23           	inc hl
1430  9026 22 F7 8B     	ld (Contador_de_mov_masticados),hl
1431  9029
1432  9029 CD 2D 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1433  902C              ;															; _ el (Contador_de_mov_masticados).
1434  902C C9               ret
1435  902D
1436  902D              ; --------------------------------------------------------------------------------------------------------------
1437  902D              ;
1438  902D              ;	12/1/24
1439  902D              ;
1440  902D              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1441  902D
1442  902D              Actualiza_Puntero_de_almacen_de_mov_masticados
1443  902D
1444  902D 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1445  9030 01 04 00     	ld bc,4
1446  9033 A7           	and a
1447  9034 ED 4A        	adc hl,bc
1448  9036 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1449  9039 C9           	ret
1450  903A
1451  903A              ; --------------------------------------------------------------------------------------------------------------
1452  903A              ;
1453  903A              ;	24/03/24
1454  903A              ;
1455  903A              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1456  903A              ;
1457  903A              ;	IX contiene el puntero de impresión.
1458  903A              ;	DE contiene (Puntero_objeto).
1459  903A
1460  903A
1461  903A              Cargamos_registros_con_mov_masticado
1462  903A
1463  903A ED 73 3D 8C  	ld (Stack),sp
1464  903E ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1465  9042
1466  9042 D1           	pop de 															; DE contiene Puntero_objeto
1467  9043 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1468  9045
1469  9045 ED 73 F5 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1470  9049 ED 7B 3D 8C  	ld sp,(Stack)
1471  904D
1472  904D 7B           	ld a,e
1473  904E 82           	add d															; Comprueba si ya no hay datos en el almacén.
1474  904F
1475  904F CC F3 93     	call z,Reinicia_entidad_maliciosa
1476  9052
1477  9052 C9           	ret
1478  9053
1479  9053              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1480  9053              ;
1481  9053              ;	22/7/24
1482  9053
1483  9053              Cargamos_registros_con_explosion
1484  9053
1485  9053
1486  9053 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1487  9056 CD F2 90     	call Extrae_address
1488  9059
1489  9059 5D           	ld e,l
1490  905A 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1491  905B
1492  905B DD 2A F3 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1493  905F
1494  905F C9           	ret
1495  9060
1496  9060
1497  9060              Cargamos_registros_con_explosion_Amadeus
1498  9060
1499  9060 2A BE 89     	ld hl,(Pamm_Amadeus)
1500  9063 CD F2 90     	call Extrae_address
1501  9066
1502  9066 5D           	ld e,l
1503  9067 54           	ld d,h
1504  9068
1505  9068 DD 2A BC 89  	ld ix,(p.imp.amadeus)
1506  906C
1507  906C C9           	ret
1508  906D
1509  906D              ; --------------------------------------------------------------------------------------------------------------
1510  906D              ;
1511  906D              ;	17/06/24
1512  906D              ;
1513  906D              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1514  906D              ;
1515  906D              ;	IX contiene el puntero de impresión.
1516  906D              ;	DE contiene (Puntero_objeto).
1517  906D
1518  906D
1519  906D              Cargamos_registros_con_mov_masticado_Amadeus
1520  906D
1521  906D ED 73 3D 8C  	ld (Stack),sp
1522  9071 ED 7B BE 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1523  9075 D1           	pop de 															; DE contiene Puntero_objeto
1524  9076 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1525  9078 DD 22 BC 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1526  907C ED 7B 3D 8C  	ld sp,(Stack)
1527  9080 C9           	ret
1528  9081
1529  9081              ; ---------------------------------------------------------------------------------------------------------------------
1530  9081              ;
1531  9081              ;	18/6/24
1532  9081              ;
1533  9081              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1534  9081
1535  9081              Genera_datos_de_impresion_Amadeus
1536  9081
1537  9081 3A BB 89     	ld a,(Impacto_Amadeus)
1538  9084 A7           	and a
1539  9085 20 03        	jr nz,1F
1540  9087
1541  9087              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1542  9087              ; _apuntando a la correspondiente explosión.
1543  9087
1544  9087 CD 6D 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1545  908A
1546  908A DD 7D        1 ld a,ixl
1547  908C E6 1F        	and $1f
1548  908E 32 B8 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1549  9091
1550  9091 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1551  9094 E5           	push hl
1552  9095
1553  9095 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1554  9098 22 5F 8C     	ld (Scanlines_album_SP),hl
1555  909B
1556  909B CD DA 94     	call Genera_datos_de_impresion
1557  909E
1558  909E E1           	pop hl
1559  909F 22 5F 8C     	ld (Scanlines_album_SP),hl
1560  90A2
1561  90A2 C9           	ret
1562  90A3
1563  90A3              ; ---------------------------------------------------------------------------------------------------------------------
1564  90A3              ;
1565  90A3              ;	13/03/24
1566  90A3              ;
1567  90A3              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1568  90A3
1569  90A3              Inicia_albumes_de_lineas
1570  90A3
1571  90A3 21 00 80     	ld hl,Scanlines_album
1572  90A6 22 41 8C     	ld (Album_de_pintado),hl
1573  90A9 22 5F 8C     	ld (Scanlines_album_SP),hl
1574  90AC
1575  90AC 21 1A 81     	ld hl,Scanlines_album_2
1576  90AF 22 43 8C     	ld (Album_de_borrado),hl
1577  90B2
1578  90B2 C9           	ret
1579  90B3
1580  90B3              Inicia_albumes_de_lineas_Amadeus
1581  90B3
1582  90B3 21 34 82     	ld hl,Amadeus_scanlines_album
1583  90B6 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1584  90B9 21 58 82     	ld hl,Amadeus_scanlines_album_2
1585  90BC 22 47 8C     	ld (Album_de_borrado_Amadeus),hl
1586  90BF
1587  90BF C9           	ret
1588  90C0
1589  90C0              Inicia_albumes_de_disparos
1590  90C0
1591  90C0 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1592  90C3 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1593  90C6 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1594  90C9 22 4B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1595  90CC
1596  90CC 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1597  90CF 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1598  90D2 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1599  90D5
1600  90D5 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1601  90D8 22 4F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1602  90DB
1603  90DB C9           	ret
1604  90DC
1605  90DC              ; ---------------------------------------------------------------------------------------------------------------------
1606  90DC              ;
1607  90DC              ; 8/1/23
1608  90DC              ;
1609  90DC              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1610  90DC              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1611  90DC              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1612  90DC
1613  90DC              ; Destruye HL y DE !!!!!
1614  90DC
1615  90DC              Inicia_punteros_de_cajas
1616  90DC
1617  90DC 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1618  90DF CD F2 90         call Extrae_address
1619  90E2 22 2E 8C         ld (Puntero_store_caja),hl
1620  90E5 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1621  90E8 22 32 8C     	ld (Indice_restore_caja),hl
1622  90EB CD F2 90     	call Extrae_address
1623  90EE 22 30 8C     	ld (Puntero_restore_caja),hl
1624  90F1 C9               ret
1625  90F2
1626  90F2              ; *************************************************************************************************************************************************************
1627  90F2
1628  90F2              ;
1629  90F2              ; 20/10/22
1630  90F2              ;
1631  90F2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1632  90F2              ;
1633  90F2              ; Destruye el puntero y DE !!!!!
1634  90F2
1635  90F2 5E           Extrae_address ld e,(hl)
1636  90F3 23           	inc hl
1637  90F4 56           	ld d,(hl)
1638  90F5 2B           	dec hl
1639  90F6 EB           	ex de,hl
1640  90F7 C9           	ret
1641  90F8
1642  90F8              ; *************************************************************************************************************************************************************
1643  90F8              ;
1644  90F8              ;	20/1/24
1645  90F8              ;
1646  90F8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1647  90F8              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1648  90F8              ;
1649  90F8              ;   Destruye HL y BC !!!!!,
1650  90F8              ;
1651  90F8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1652  90F8              ;					"0" ..... Izquierda.
1653  90F8
1654  90F8              Inicia_Puntero_objeto
1655  90F8
1656  90F8 3A 0D 8C     	ld a,(Cuad_objeto)
1657  90FB E6 01        	and 1
1658  90FD F5           	push af
1659  90FE CC 1A 91     	call z,Inicia_puntero_objeto_izq
1660  9101 F1           	pop af
1661  9102 C8           	ret z
1662  9103 CD 07 91     	call Inicia_puntero_objeto_der
1663  9106 C9           	ret
1664  9107
1665  9107              ; Arrancamos desde la parte izquierda de la pantalla.
1666  9107              ; Iniciamos (Indice_Sprite_der).
1667  9107
1668  9107 2A 03 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1669  910A 22 07 8C     	ld (Puntero_DESPLZ_der),hl
1670  910D CD F2 90     	call Extrae_address
1671  9110 22 00 8C     	ld (Puntero_objeto),hl
1672  9113
1673  9113 2A 05 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1674  9116 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1675  9119 C9           	ret
1676  911A
1677  911A              ; Arrancamos desde la parte derecha de la pantalla.
1678  911A              ; Iniciamos (Indice_Sprite_izq).
1679  911A
1680  911A 2A 05 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1681  911D 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1682  9120 CD F2 90     	call Extrae_address
1683  9123 22 00 8C     	ld (Puntero_objeto),hl
1684  9126
1685  9126 2A 03 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1686  9129 22 07 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1687  912C C9           	ret
1688  912D
1689  912D              ; **************************************************************************************************
1690  912D              ;
1691  912D              ;	06/07/24
1692  912D              ;
1693  912D              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1694  912D
1695  912D              Restore_entidad
1696  912D
1697  912D 2A 2E 8C     	ld hl,(Puntero_store_caja)
1698  9130 7E           	ld a,(hl)
1699  9131 A7           	and a
1700  9132 CC 40 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1701  9135 28 F6        	jr z,Restore_entidad
1702  9137
1703  9137 11 EE 8B     	ld de,Bandeja_DRAW
1704  913A 01 0C 00     	ld bc,12
1705  913D ED B0        	ldir
1706  913F C9           	ret
1707  9140
1708  9140              ; **************************************************************************************************
1709  9140              ;
1710  9140              ;	08/05/23
1711  9140              ;
1712  9140              ;	Incrementamos los dos punteros de entidades. (+1).
1713  9140
1714  9140              Incrementa_punteros_de_cajas
1715  9140
1716  9140 2A 30 8C     	ld hl,(Puntero_restore_caja)
1717  9143 22 2E 8C     	ld (Puntero_store_caja),hl
1718  9146 2A 32 8C     	ld hl,(Indice_restore_caja)
1719  9149 23           	inc hl
1720  914A 23           	inc hl
1721  914B 22 32 8C     	ld (Indice_restore_caja),hl
1722  914E CD F2 90         call Extrae_address
1723  9151 22 30 8C         ld (Puntero_restore_caja),hl
1724  9154 C9               ret
1725  9155
1726  9155              ; -----------------------------------------------------------
1727  9155
1728  9155              ; Teclado.
1729  9155
1730  9155 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1731  9157 DB FE        	in a,($fe)
1732  9159 E6 01        	and $01
1733  915B 28 02        	jr z,1f
1734  915D 18 F6        	jr Pulsa_ENTER
1735  915F C9           1 ret
1736  9160
1737  9160              ; **************************************************************************************************
1738  9160              ;
1739  9160              ; Temporización.
1740  9160
1741  9160              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1742  9160              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1743  9160              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1744  9160              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1745  9160
1746  9160              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1747  9160              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1748  9160              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1749  9160
1750  9160              ; A partir de $4f61 no hace falta DELAY.
1751  9160
1752  9160              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1753  9160
1754  9160              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1755  9160              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1756  9160              ;	LD A,B
1757  9160              ;	AND A
1758  9160              ;	JR NZ,wait
1759  9160              ;	RET
1760  9160
1761  9160              ; ---------------------------------------------------------------------------------------------------------------
1762  9160              ;
1763  9160              ;	13/07/24
1764  9160              ;
1765  9160
1766  9160              Inicia_Shield
1767  9160
1768  9160 21 89 8C     	ld hl,Datos_Shield
1769  9163 22 8D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1770  9166
1771  9166 7E           	ld a,(hl)
1772  9167 32 90 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1773  916A
1774  916A 3E 01        	ld a,1
1775  916C 32 91 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1776  916F
1777  916F C9           	ret
1778  9170
1779  9170              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1780  9170              ;
1781  9170              ;	4/6/24
1782  9170              ;
1783  9170              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1784  9170              ;
1785  9170              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1786  9170              ;
1787  9170
1788  9170              Actualiza_pantalla
1789  9170
1790  9170 3E 02        	ld a,2
1791  9172 D3 FE        	out ($fe),a
1792  9174
1793  9174 3A 65 8C     	ld a,(Ctrl_3)
1794  9177 CB 57        	bit 2,a
1795  9179 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1796  917B
1797  917B              Borrando_entidades
1798  917B
1799  917B 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1800  917E CD F2 90     	call Extrae_address
1801  9181 24           	inc h
1802  9182 25           	dec h
1803  9183 28 05        	jr z,Pintando_entidades
1804  9185 CD D3 95     	call Pinta_Sprites
1805  9188 18 F1        	jr Borrando_entidades
1806  918A
1807  918A              Pintando_entidades
1808  918A
1809  918A 2A 61 8C     	ld hl,(India_SP)
1810  918D 2C           	inc l
1811  918E CD F2 90     	call Extrae_address
1812  9191 24           	inc h
1813  9192 25           	dec h
1814  9193 28 0E        	jr z,Ejecuta_escudo
1815  9195 1C           	inc e
1816  9196 1C           	inc e
1817  9197 ED 53 61 8C  	ld (India_SP),de
1818  919B CD F2 90     	call Extrae_address
1819  919E CD D3 95     	call Pinta_Sprites
1820  91A1 18 E7        	jr Pintando_entidades
1821  91A3
1822  91A3              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1823  91A3
1824  91A3              Ejecuta_escudo
1825  91A3
1826  91A3 3A 8F 8C     	ld a,(Shield)
1827  91A6 A7           	and a
1828  91A7 20 2F        	jr nz,Aplica_Shield
1829  91A9
1830  91A9              Borrando_Amadeus
1831  91A9
1832  91A9 21 65 8C     	ld hl,Ctrl_3
1833  91AC CB 6E        	bit 5,(hl)
1834  91AE 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1835  91B0
1836  91B0 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1837  91B3 CD F2 90     	call Extrae_address
1838  91B6 24           	inc h
1839  91B7 25           	dec h
1840  91B8 28 03        	jr z,Pintando_Amadeus
1841  91BA CD D3 95     	call Pinta_Sprites
1842  91BD
1843  91BD              Pintando_Amadeus
1844  91BD
1845  91BD 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1846  91C0 CD F2 90     	call Extrae_address
1847  91C3 24           	inc h
1848  91C4 25           	dec h
1849  91C5 28 03        	jr z,1F
1850  91C7 CD D3 95     	call Pinta_Sprites
1851  91CA
1852  91CA              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1853  91CA
1854  91CA 21 65 8C     1 ld hl,Ctrl_3
1855  91CD CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1856  91CF CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1857  91D1 CB AE        	res 5,(hl)
1858  91D3
1859  91D3 3E 01        	ld a,1												; Borde azul.
1860  91D5 D3 FE        	out ($fe),a
1861  91D7
1862  91D7 C9           	ret
1863  91D8
1864  91D8              Aplica_Shield
1865  91D8
1866  91D8              ;	Bit 1 "1" (Shield_3) Sólo borra.
1867  91D8              ;		  "0"     ""     Borra/Pinta.
1868  91D8              ;	Bit 2    ""  RET.	 No borra, no pinta.
1869  91D8
1870  91D8 21 91 8C     	ld hl,Shield_3
1871  91DB
1872  91DB CB 5E        	bit 3,(hl)
1873  91DD 20 DE        	jr nz,Pintando_Amadeus
1874  91DF
1875  91DF CB 56        	bit 2,(hl)
1876  91E1 20 E7        	jr nz,1B
1877  91E3
1878  91E3 CB 4E        	bit 1,(hl)
1879  91E5 C4 EC 91     	call nz,Borra_Amadeus_shield
1880  91E8
1881  91E8 28 BF        	jr z,Borrando_Amadeus
1882  91EA 18 DE        	jr 1B
1883  91EC
1884  91EC              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1885  91EC
1886  91EC              Borra_Amadeus_shield
1887  91EC
1888  91EC 3A 65 8C     	ld a,(Ctrl_3)
1889  91EF CB 6F        	bit 5,a
1890  91F1 28 08        	jr z,1F
1891  91F3
1892  91F3 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1893  91F6 CD F2 90     	call Extrae_address
1894  91F9 18 06        	jr 2F
1895  91FB
1896  91FB 2A 45 8C     1 ld hl,(Album_de_pintado_Amadeus)
1897  91FE CD F2 90     	call Extrae_address
1898  9201
1899  9201 CD D3 95     2 call Pinta_Sprites
1900  9204
1901  9204 AF           	xor a
1902  9205 3C           	inc a											; Asegura NZ en la salida de la rutina.
1903  9206
1904  9206 C9           	ret
1905  9207
1906  9207              Pinta_Amadeus_shield
1907  9207
1908  9207 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1909  920A CD F2 90     	call Extrae_address
1910  920D CD D3 95     	call Pinta_Sprites
1911  9210
1912  9210 AF           	xor a
1913  9211 3C           	inc a											; Asegura NZ en la salida de la rutina.
1914  9212
1915  9212 C9           	ret
1916  9213
1917  9213              Borra_Pinta_Amadeus_shield
1918  9213
1919  9213 CD EC 91     	call Borra_Amadeus_shield
1920  9216 CD 07 92     	call Pinta_Amadeus_shield
1921  9219 C9           	ret
1922  921A
1923  921A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1924  921A              ;
1925  921A              ;	19/6/24
1926  921A              ;
1927  921A
1928  921A              Teclado
1929  921A
1930  921A              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1931  921A
1932  921A 3E F7        	ld a,$f7												; "5" para disparar.
1933  921C DB FE        	in a,($fe)
1934  921E E6 10        	and $10
1935  9220
1936  9220 CC 6D A2     	call z,Genera_disparo_Amadeus
1937  9223
1938  9223 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1939  9225 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1940  9227 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1941  9229 CC 40 9D         call z,Amadeus_a_izquierda
1942  922C
1943  922C 3E F7        	ld a,$f7
1944  922E DB FE        	in a,($fe)
1945  9230 E6 01        	and $01
1946  9232 C8           	ret z
1947  9233
1948  9233 3E F7        	ld a,$f7
1949  9235 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1950  9237 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1951  9239 CC 58 9D     	call z,Amadeus_a_derecha
1952  923C
1953  923C C9           	ret
1954  923D
1955  923D              ; ------------------------------------------------------------------------------------------------------------------------
1956  923D              ;
1957  923D              ;	06/07/24
1958  923D              ;
1959  923D
1960  923D              Genera_explosion
1961  923D
1962  923D 21 77 8C     	ld hl,Clock_explosion
1963  9240 35           	dec (hl)
1964  9241 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1965  9243
1966  9243              Borra_entidad_colisionada
1967  9243
1968  9243 CD 4A 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1969  9246 CD 53 90     	call Cargamos_registros_con_explosion
1970  9249 CD DA 94     	call Genera_datos_de_impresion
1971  924C
1972  924C AF           	xor a
1973  924D 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1974  924E
1975  924E C9           	ret
1976  924F
1977  924F              Siguiente_frame_explosion
1978  924F
1979  924F 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1980  9251
1981  9251              ; Avanza Frame de explosión.
1982  9251
1983  9251 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1984  9254 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1985  9257
1986  9257 79           	ld a,c
1987  9258 95           	sub l
1988  9259 20 0B        	jr nz,1F
1989  925B
1990  925B              ; Fín de la entidad !!!!!!!!!!!!!
1991  925B
1992  925B 21 37 8C     	ld hl,Numero_parcial_de_entidades
1993  925E 35           	dec (hl)
1994  925F 23           	inc hl
1995  9260 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1996  9261
1997  9261 CD C8 93     	call Limpiamos_bandeja_DRAW
1998  9264 18 DD        	jr Borra_entidad_colisionada
1999  9266
2000  9266 23           1 inc hl
2001  9267 23           	inc hl
2002  9268 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2003  926B 18 D6        	jr Borra_entidad_colisionada
2004  926D
2005  926D              ; ----- ----- ----- ----- -----
2006  926D
2007  926D              Genera_explosion_Amadeus
2008  926D
2009  926D 21 78 8C     	ld hl,Clock_explosion_Amadeus
2010  9270 35           	dec (hl)
2011  9271 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2012  9273
2013  9273              Borra_Amadeus_impactado
2014  9273
2015  9273 CD AF 8E     	call Change_Amadeus
2016  9276 CD 60 90     	call Cargamos_registros_con_explosion_Amadeus
2017  9279 CD 81 90     	call Genera_datos_de_impresion_Amadeus
2018  927C
2019  927C 21 65 8C     	ld hl,Ctrl_3
2020  927F CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2021  9281
2022  9281 AF           	xor a
2023  9282 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2024  9283
2025  9283 C9           	ret
2026  9284
2027  9284              Siguiente_frame_explosion_Amadeus
2028  9284
2029  9284 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2030  9286
2031  9286              ; Avanza Frame de explosión.
2032  9286
2033  9286 2A BE 89     	ld hl,(Pamm_Amadeus)
2034  9289 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2035  928C
2036  928C 79           	ld a,c
2037  928D 95           	sub l
2038  928E 20 0B        	jr nz,1F
2039  9290
2040  9290              ; Fín de Amadeus !!!!!!!!!!!!!
2041  9290              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2042  9290
2043  9290 AF           	xor a
2044  9291 32 BB 89     	ld (Impacto_Amadeus),a
2045  9294 21 65 8C     	ld hl,Ctrl_3
2046  9297 CB F6        	set 6,(hl)
2047  9299
2048  9299 18 D8        	jr Borra_Amadeus_impactado
2049  929B
2050  929B 23           1 inc hl
2051  929C 23           	inc hl
2052  929D 22 BE 89     	ld (Pamm_Amadeus),hl
2053  92A0 18 D1        	jr Borra_Amadeus_impactado
2054  92A2
2055  92A2              ; ---------------------------------------------------------------
2056  92A2
2057  92A2              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92A2              ; ******************************************************************************************************************************************************************************************
   2+ 92A2              ;
   3+ 92A2              ;   21/04/24
   4+ 92A2              ;
   5+ 92A2              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92A2              ;   (XOR) bit a bit.
   7+ 92A2              ;
   8+ 92A2              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92A2
  10+ 92A2              Derivando_RND
  11+ 92A2
  12+ 92A2 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92A5
  14+ 92A5 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92A7 C5               push bc
  16+ 92A8              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92A8 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92AB              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92AB
  20+ 92AB A7           6 and a                                 ; Carry a "0".
  21+ 92AC CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92AE 30 02            jr nc,1F
  23+ 92B0
  24+ 92B0 CB C1            set 0,c
  25+ 92B2
  26+ 92B2 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92B3 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92B5 5F               ld e,a
  29+ 92B6
  30+ 92B6 7A               ld a,d
  31+ 92B7 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92B9 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92BB
  34+ 92BB CB 3F            srl a
  35+ 92BD
  36+ 92BD AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92BE
  38+ 92BE 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92BF 28 04            jr z,4F
  40+ 92C1
  41+ 92C1 CB FF            set 7,a
  42+ 92C3 18 02            jr 5F
  43+ 92C5
  44+ 92C5 CB BF        4 res 7,a
  45+ 92C7
  46+ 92C7 CB 21        5 sla c
  47+ 92C9 10 E0            djnz 6B
  48+ 92CB
  49+ 92CB 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92CC
  51+ 92CC 77               ld (hl),a
  52+ 92CD 23               inc hl
  53+ 92CE C1               pop bc
  54+ 92CF 10 D4            djnz 3B
  55+ 92D1
  56+ 92D1 C9               ret
  57+ 92D2
  58+ 92D2
  59+ 92D2
# file closed: RND_Derivando.asm
2058  92D2              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92D2              ;---------------------------------------------------------------------------------------------------------------
   2+ 92D2              ;
   3+ 92D2              ;   13/11/24
   4+ 92D2
   5+ 92D2              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 92D2
   7+ 92D2              Genera_movimientos_masticados_del_nivel
   8+ 92D2
   9+ 92D2              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 92D2
  11+ 92D2              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 92D2              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 92D2              ;	(Datos_de_nivel) apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 92D2
  15+ 92D2 2D           	dec l
  16+ 92D3 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 92D4 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 92D5 4E           	ld c,(hl)
  19+ 92D6
  20+ 92D6 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 92D7 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 92D8
  23+ 92D8              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 92D8
  25+ 92D8 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 92D9
  27+ 92D9 CD 20 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 92DC
  29+ 92DC              ;	Caja Master inicializada ???
  30+ 92DC
  31+ 92DC 7E           	ld a,(hl)
  32+ 92DD A7           	and a
  33+ 92DE 20 26        	jr nz,Movimientos_masticados_construidos
  34+ 92E0
  35+ 92E0              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 92E0
  37+ 92E0 C1           	pop bc
  38+ 92E1 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 92E2 C5           	push bc
  40+ 92E3
  41+ 92E3 CD B3 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 92E6 CD 3C 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 92E9
  44+ 92E9 3A EE 8B     	ld a,(Tipo)
  45+ 92EC CD 30 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 92EF
  47+ 92EF              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 92EF
  49+ 92EF              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 92EF              ;	ld a,(hl)
  51+ 92EF              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 92EF
  53+ 92EF              ;	ld hl,Posicion_inicio
  54+ 92EF              ;	ld (hl),a
  55+ 92EF
  56+ 92EF              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 92EF              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 92EF
  59+ 92EF CD E6 8F     	call Construye_movimientos_masticados_entidad
  60+ 92F2
  61+ 92F2              ; 	Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
  62+ 92F2              ; 	(Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
  63+ 92F2              ; 	(Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
  64+ 92F2              ; 	Contador_general_de_mov_masticados de este tipo de entidad actualizado.
  65+ 92F2              ; 	Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
  66+ 92F2
  67+ 92F2 CD 3A 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
  68+ 92F5
  69+ 92F5              ;	Generamos coordenadas y volcamos DRAW a caja Master.
  70+ 92F5
  71+ 92F5 DD E5        	push ix
  72+ 92F7 E1           	pop hl 														; (Puntero_de_impresion) en HL.
  73+ 92F8
  74+ 92F8 CD AE 94     	call Genera_coordenadas
  75+ 92FB
  76+ 92FB 2A 34 8C     	ld hl,(Puntero_indice_master)
  77+ 92FE CD F2 90     	call Extrae_address
  78+ 9301
  79+ 9301 5D           	ld e,l
  80+ 9302 54           	ld d,h
  81+ 9303
  82+ 9303 CD 69 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  83+ 9306
  84+ 9306              Movimientos_masticados_construidos
  85+ 9306
  86+ 9306 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  87+ 9307
  88+ 9307 E1           	pop hl														; Pop (Datos_de_nivel).
  89+ 9308 2C           	inc l														; Datos_de_nivel +1 en HL.
  90+ 9309
  91+ 9309 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  92+ 930A 10 CA        	djnz 1B														; dec (Numero_de_entidades).
  93+ 930C
  94+ 930C C9           	ret
  95+ 930D
  96+ 930D              ;---------------------------------------------------------------------------------------------------------------
  97+ 930D              ;
  98+ 930D              ;   9/11/24
  99+ 930D              ;
 100+ 930D              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
 101+ 930D              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
 102+ 930D              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
 103+ 930D              ;	_ de la 1ª entidad del Nivel.
 104+ 930D              ;
 105+ 930D              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
 106+ 930D
 107+ 930D              ;	MODIFICA: HL,DE y A.
 108+ 930D              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
 109+ 930D
 110+ 930D              Inicializa_1er_Nivel
 111+ 930D
 112+ 930D              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 113+ 930D
 114+ 930D 21 D2 8B     	ld hl,Indice_de_niveles
 115+ 9310 CD F2 90     	call Extrae_address
 116+ 9313 ED 53 85 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 117+ 9317
 118+ 9317 7E           	ld a,(hl)
 119+ 9318 32 36 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 120+ 931B
 121+ 931B 2C           	inc l
 122+ 931C 22 87 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 123+ 931F
 124+ 931F C9           	ret
 125+ 9320
 126+ 9320              ; ----------------------
 127+ 9320              ;
 128+ 9320              ;	13/11/24
 129+ 9320              ;
 130+ 9320
 131+ 9320              Situa_en_Caja_Master
 132+ 9320
 133+ 9320 CD 27 94         call Calcula_salto_en_BC
 134+ 9323 21 61 89         ld hl,Indice_de_cajas_master
 135+ 9326 A7               and a
 136+ 9327 ED 4A            adc hl,bc
 137+ 9329 22 34 8C       	ld (Puntero_indice_master),hl
 138+ 932C CD F2 90     	call Extrae_address
 139+ 932F C9           	ret
 140+ 9330
 141+ 9330              ; ----------------------
 142+ 9330
 143+ 9330              ; Fija_velocidades ld de,Perfiles_de_velocidad
 144+ 9330              ; 	ld bc,4
 145+ 9330              ; 	ldir
 146+ 9330              ; 	ret
 147+ 9330
 148+ 9330 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 149+ 9331 CD 27 94         call Calcula_salto_en_BC
 150+ 9334 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 151+ 9337 A7               and a
 152+ 9338 ED 4A            adc hl,bc
 153+ 933A CD F2 90         call Extrae_address
 154+ 933D 22 1F 8C         ld (Puntero_indice_mov),hl
 155+ 9340 C9               ret
 156+ 9341
 157+ 9341              ;---------------------------------------------------------------------------------------------------------------
 158+ 9341              ;
 159+ 9341              ;   13/11/24
 160+ 9341              ;
 161+ 9341              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 162+ 9341
 163+ 9341
 164+ 9341              Prepara_Cajas_de_Entidades
 165+ 9341
 166+ 9341              ; Preparamos los punteros de las cajas de entidades:
 167+ 9341
 168+ 9341 CD DC 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 169+ 9344              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 170+ 9344 CD 72 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 171+ 9347
 172+ 9347 2A 87 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 173+ 934A
 174+ 934A              ; En este punto:
 175+ 934A              ;
 176+ 934A              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 177+ 934A              ; B contiene (Numero_parcial_de_entidades).
 178+ 934A
 179+ 934A C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 180+ 934B
 181+ 934B 7E           	ld a,(hl)
 182+ 934C
 183+ 934C CD 20 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 184+ 934F
 185+ 934F ED 5B 2E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 186+ 9353 01 0C 00     	ld bc,12
 187+ 9356 ED B0        	ldir														; Caja de entidades completa.
 188+ 9358
 189+ 9358 18 FE        	jr $
 190+ 935A
 191+ 935A ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
 192+ 935E
 193+ 935E CD 4A 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 194+ 9361 D1           	pop de
 195+ 9362
 196+ 9362 CD DA 94     	call Genera_datos_de_impresion
 197+ 9365              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 198+ 9365              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 199+ 9365              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 200+ 9365              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 201+ 9365
 202+ 9365 CD EB 93     	call Decrementa_Contador_de_mov_masticados
 203+ 9368
 204+ 9368              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 205+ 9368
 206+ 9368 ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 207+ 936C CD 69 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 208+ 936F
 209+ 936F CD C8 93     	call Limpiamos_bandeja_DRAW
 210+ 9372 CD 40 91     	call Incrementa_punteros_de_cajas
 211+ 9375
 212+ 9375              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 213+ 9375              ; _ entidad del Nivel.
 214+ 9375
 215+ 9375 3A 66 8C     	ld a,(Ctrl_4)
 216+ 9378 E6 F0        	and $f0
 217+ 937A 32 66 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 218+ 937D
 219+ 937D              ; Siguiente entidad del Nivel.
 220+ 937D
 221+ 937D 2A 87 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 222+ 9380 23           	inc hl 														; _ entidad del Nivel.
 223+ 9381
 224+ 9381 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 225+ 9382
 226+ 9382 10 C6        	djnz 1B
 227+ 9384
 228+ 9384 C9           	ret
 229+ 9385
 230+ 9385              ; -------------------------------------------------------------------------------------------------------------------
 231+ 9385              ;
 232+ 9385              ;	27/5/24
 233+ 9385              ;
 234+ 9385              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 235+ 9385              ;
 236+ 9385
 237+ 9385              ; 	Cargamos la definición de Amadeus en DRAW.
 238+ 9385              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 239+ 9385
 240+ 9385 21 29 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 241+ 9388 CD 3C 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 242+ 938B
 243+ 938B
 244+ 938B              Construye_movimientos_masticados_Amadeus
 245+ 938B
 246+ 938B 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 247+ 938E CD 2D 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 248+ 9391              ;															; _ el (Contador_de_mov_masticados).
 249+ 9391 CD F8 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 250+ 9394              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 251+ 9394
 252+ 9394              ; Generamos movimientos masticados de Amadeus.
 253+ 9394
 254+ 9394 06 79        	ld b,121												; $0079, 121d.
 255+ 9396
 256+ 9396 C5           1 push bc
 257+ 9397 CD F6 96     	call Draw
 258+ 939A CD 12 90     	call Guarda_movimiento_masticado
 259+ 939D
 260+ 939D CD 6A 9A     	call Mov_right
 261+ 93A0 CD 6A 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 262+ 93A3
 263+ 93A3 C1           	pop bc
 264+ 93A4 10 F0        	djnz 1B
 265+ 93A6
 266+ 93A6              ; Todos los movimientos masticados de Amadeus se han creado.
 267+ 93A6
 268+ 93A6              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 269+ 93A6              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 270+ 93A6
 271+ 93A6 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 272+ 93A9 01 08 00     	ld bc,8
 273+ 93AC A7           	and a
 274+ 93AD ED 42        	sbc hl,bc
 275+ 93AF 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 276+ 93B2
 277+ 93B2 C9           	ret
 278+ 93B3
 279+ 93B3              ; ---------------------------------------------------------------------
 280+ 93B3              ;
 281+ 93B3              ;	10/02/24
 282+ 93B3              ;
 283+ 93B3              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 284+ 93B3              ;
 285+ 93B3              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 286+ 93B3
 287+ 93B3              Definicion_segun_tipo
 288+ 93B3
 289+ 93B3 CD 27 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 290+ 93B6 21 0B 8A     	ld hl,Indice_de_definiciones_de_entidades
 291+ 93B9 CD 32 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 292+ 93BC C9           	ret
 293+ 93BD
 294+ 93BD              ; ---------------------------------------------------------------------
 295+ 93BD              ;
 296+ 93BD              ;	6/7/24
 297+ 93BD
 298+ 93BD
 299+ 93BD              Store_Restore_cajas
 300+ 93BD
 301+ 93BD ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 302+ 93C1 CD 69 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 303+ 93C4 CD 40 91     	call Incrementa_punteros_de_cajas
 304+ 93C7 C9           	ret
 305+ 93C8
 306+ 93C8              ; ---------------------------------------------------------------------
 307+ 93C8              ;
 308+ 93C8              ;	23/6/24
 309+ 93C8              ;
 310+ 93C8              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 311+ 93C8              ;
 312+ 93C8              ;	MODIFY: HL
 313+ 93C8
 314+ 93C8              Limpiamos_bandeja_DRAW
 315+ 93C8
 316+ 93C8 ED 73 3D 8C  	ld (Stack),sp
 317+ 93CC 31 13 8C     	ld sp,Vel_left
 318+ 93CF
 319+ 93CF AF           	xor a
 320+ 93D0 67           	ld h,a
 321+ 93D1 6F           	ld l,a
 322+ 93D2
 323+ 93D2 E5           	push hl
 324+ 93D3 E5           	push hl
 325+ 93D4 E5           	push hl
 326+ 93D5 E5           	push hl
 327+ 93D6 E5           	push hl
 328+ 93D7 E5           	push hl
 329+ 93D8 E5           	push hl
 330+ 93D9 E5           	push hl
 331+ 93DA E5           	push hl
 332+ 93DB E5           	push hl
 333+ 93DC E5           	push hl
 334+ 93DD E5           	push hl
 335+ 93DE E5           	push hl
 336+ 93DF E5           	push hl
 337+ 93E0 E5           	push hl
 338+ 93E1 E5           	push hl
 339+ 93E2 E5           	push hl
 340+ 93E3 E5           	push hl
 341+ 93E4
 342+ 93E4 33           	inc sp
 343+ 93E5
 344+ 93E5 E5           	push hl
 345+ 93E6 ED 7B 3D 8C  	ld sp,(Stack)
 346+ 93EA
 347+ 93EA C9           	ret
 348+ 93EB
 349+ 93EB              ; ---------------------------------------------------------------------
 350+ 93EB              ;
 351+ 93EB              ;	24/03/24
 352+ 93EB
 353+ 93EB 2A F7 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 354+ 93EE 2B           	dec hl
 355+ 93EF 22 F7 8B     	ld (Contador_de_mov_masticados),hl
 356+ 93F2 C9           	ret
 357+ 93F3
 358+ 93F3              ; ---------------------------------------------------------------------
 359+ 93F3              ;
 360+ 93F3              ;	7/11/24
 361+ 93F3
 362+ 93F3              Reinicia_entidad_maliciosa
 363+ 93F3
 364+ 93F3              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 365+ 93F3
 366+ 93F3 CD D7 9E     	call Situa_en_contador_general_de_mov_masticados
 367+ 93F6 CD E4 9E     	call Transfiere_datos_de_contadores
 368+ 93F9
 369+ 93F9              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 370+ 93F9
 371+ 93F9 3A EE 8B     	ld a,(Tipo)
 372+ 93FC CD B3 93     	call Definicion_segun_tipo
 373+ 93FF
 374+ 93FF E5           	push hl
 375+ 9400 DD E1        	pop ix
 376+ 9402
 377+ 9402 DD 6E 0B     	ld l,(ix+11)
 378+ 9405 DD 66 0C     	ld h,(ix+12)
 379+ 9408
 380+ 9408 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 381+ 940B
 382+ 940B CD 3A 90     	call Cargamos_registros_con_mov_masticado
 383+ 940E
 384+ 940E              ; Incrementa (Contador_de_vueltas)x2.
 385+ 940E              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 386+ 940E
 387+ 940E              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 388+ 940E              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 389+ 940E              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 390+ 940E              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 391+ 940E              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 392+ 940E
 393+ 940E 21 F1 8B     	ld hl,Contador_de_vueltas
 394+ 9411 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 395+ 9413
 396+ 9413 7E           	ld a,(hl)
 397+ 9414 CB 2F        	sra a
 398+ 9416 CB 2F        	sra a
 399+ 9418
 400+ 9418 32 F9 8B     	ld (Velocidad),a
 401+ 941B
 402+ 941B 3E 40        	ld a,$40
 403+ 941D BE           	cp (hl)
 404+ 941E C0           	ret nz
 405+ 941F
 406+ 941F              ; Límitador.
 407+ 941F
 408+ 941F              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 409+ 941F
 410+ 941F CB 2E        	sra (hl)
 411+ 9421 21 F9 8B     	ld hl,Velocidad
 412+ 9424 CB 2E        	sra (hl)
 413+ 9426
 414+ 9426 C9           	ret
 415+ 9427
 416+ 9427              ;	------------------------------------------------------------------------------------
 417+ 9427              ;
 418+ 9427              ;	09/11/24
 419+ 9427              ;
 420+ 9427              ;	INPUTS:	A contiene el (Tipo) de entidad.
 421+ 9427              ;
 422+ 9427              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 423+ 9427              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 424+ 9427
 425+ 9427 A7           Calcula_salto_en_BC and a
 426+ 9428 28 04        	jr z,1F
 427+ 942A CB 27        	sla a
 428+ 942C D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 429+ 942E 4F           1 ld c,a
 430+ 942F 06 00        	ld b,0
 431+ 9431 C9           	ret
 432+ 9432
 433+ 9432              ; ------------------------------------------------------------------
 434+ 9432              ;
 435+ 9432              ;	19/1/24
 436+ 9432              ;
 437+ 9432              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 438+ 9432              ;	Actualiza (Datos_de_entidad) con esa dirección.
 439+ 9432
 440+ 9432 A7           Situa_en_datos_de_definicion and a
 441+ 9433 ED 4A        	adc hl,bc
 442+ 9435 CD F2 90     	call Extrae_address
 443+ 9438 22 3B 8C         ld (Datos_de_entidad),hl
 444+ 943B C9           	ret
 445+ 943C
 446+ 943C              ; ------------------------------------------------------------------
 447+ 943C
 448+ 943C              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 449+ 943C              ; 	inc de
 450+ 943C              ; 	inc de
 451+ 943C              ; 	ex de,hl
 452+ 943C              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 453+ 943C              ; 	ret
 454+ 943C
 455+ 943C              ; ----------------------------------------------------------------------------------------------------------
 456+ 943C              ;
 457+ 943C              ;	24/6/24
 458+ 943C              ;
 459+ 943C              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 943C              ;	_ de entidad.
 461+ 943C              ;
 462+ 943C              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 943C              ;
 464+ 943C              ;
 465+ 943C              ;	MODIFICA: HL,DE y BC
 466+ 943C
 467+ 943C
 468+ 943C              Definicion_de_entidad_a_bandeja_DRAW
 469+ 943C
 470+ 943C 11 EE 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 943F 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 9440 12           	ld (de),a
 473+ 9441 23           	inc hl
 474+ 9442              ;
 475+ 9442 11 FC 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 9445 01 02 00     	ld bc,2
 477+ 9448 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 944A              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 944A 11 F1 8B     	ld de,Contador_de_vueltas
 480+ 944D 7E           	ld a,(hl)
 481+ 944E 12           	ld (de),a
 482+ 944F 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 9450
 484+ 9450 11 03 8C     	ld de,Indice_Sprite_der
 485+ 9453 01 04 00     	ld bc,4
 486+ 9456 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 9458
 488+ 9458 11 0B 8C     	ld de,Posicion_inicio
 489+ 945B 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 945E ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 9460
 492+ 9460 11 F5 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 9463 01 02 00     	ld bc,2
 494+ 9466 ED B0        	ldir
 495+ 9468
 496+ 9468 C9           	ret
 497+ 9469
 498+ 9469              ; ----------------------------------------------------------------------------------------------------------
 499+ 9469              ;
 500+ 9469              ;	1/8/24
 501+ 9469              ;
 502+ 9469
 503+ 9469              Parametros_de_bandeja_DRAW_a_caja
 504+ 9469
 505+ 9469 21 EE 8B     	ld hl,Bandeja_DRAW
 506+ 946C 01 0C 00     	ld bc,12
 507+ 946F ED B0        	ldir
 508+ 9471 C9           	ret
 509+ 9472
 510+ 9472              ;---------------------------------------------------------------------------------------------------------------
 511+ 9472              ;
 512+ 9472              ;	13/11/24
 513+ 9472              ;
 514+ 9472              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 9472              ;
 516+ 9472              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 9472              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 9472
 519+ 9472              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 9472              ;			- Actualiza (Numero_de_entidades).
 521+ 9472
 522+ 9472              ;	MODIFICA: A y B.
 523+ 9472
 524+ 9472
 525+ 9472              Inicializa_Numero_parcial_de_entidades
 526+ 9472
 527+ 9472 3A 36 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 9475 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 9477 38 0E        	jr c,1F
 530+ 9479 28 0C        	jr z,1F
 531+ 947B
 532+ 947B              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 947B              ; Actualizamos variables.
 534+ 947B
 535+ 947B D6 06        	sub 6
 536+ 947D 32 36 8C     	ld (Numero_de_entidades),a
 537+ 9480 3E 06        	ld a,6
 538+ 9482 32 37 8C     	ld (Numero_parcial_de_entidades),a
 539+ 9485 47           	ld b,a
 540+ 9486 C9           	ret
 541+ 9487
 542+ 9487              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 9487              ; (Numero_de_entidades)="0".
 544+ 9487
 545+ 9487 32 37 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 948A 47           	ld b,a
 547+ 948B AF           	xor a
 548+ 948C 32 36 8C     	ld (Numero_de_entidades),a
 549+ 948F C9           	ret
 550+ 9490
# file closed: Rutinas_de_inicio_y_niveles.asm
2059  9490              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9490              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9490              ;
   3+ 9490              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9490              ;
   5+ 9490              ; *****************************************************************************************************************************************************************************************
   6+ 9490              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9490
   8+ 9490 7C           calcula_tercio ld a,h
   9+ 9491 E6 18        	and $18
  10+ 9493 CB 2F        	sra a
  11+ 9495 CB 2F        	sra a
  12+ 9497 CB 2F        	sra a
  13+ 9499 C9           	ret
  14+ 949A
# file closed: calcula_tercio.asm
2060  949A              	include "Cls.asm"
# file opened: Cls.asm
   1+ 949A              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 949A              ;
   3+ 949A              ;
   4+ 949A              ;	CLS.
   5+ 949A              ;
   6+ 949A              ;	Limpia la pantalla y define sus atributos.
   7+ 949A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 949A              ;
   9+ 949A              ;	COLORES: 0 ..... NEGRO
  10+ 949A              ;    		 1 ..... AZUL
  11+ 949A              ; 			 2 ..... ROJO
  12+ 949A              ;			 3 ..... MAGENTA
  13+ 949A              ; 			 4 ..... VERDE
  14+ 949A              ; 			 5 ..... CIAN
  15+ 949A              ;			 6 ..... AMARILLO
  16+ 949A              ; 			 7 ..... BLANCO
  17+ 949A              ;
  18+ 949A              ;	INPUT: A contiene los atributos de pantalla.
  19+ 949A              ;
  20+ 949A              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 949A
  22+ 949A
  23+ 949A 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 949D 11 01 40     	LD DE,$4001
  25+ 94A0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94A3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94A5 ED B0        	LDIR
  28+ 94A7 01 FF 02     	LD BC,767
  29+ 94AA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94AB ED B0        	LDIR
  31+ 94AD C9           	ret
  32+ 94AE
# file closed: Cls.asm
2061  94AE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94AE              ; ------------------------------------------------------------------------
   2+ 94AE              ;
   3+ 94AE              ;	30/1/24
   4+ 94AE              ;
   5+ 94AE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94AE              ;	Fila superior "0", Columna izquierda "0".
   7+ 94AE              ;
   8+ 94AE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94AE              ;
  10+ 94AE              ;	Modifica: A,BC y DE.
  11+ 94AE
  12+ 94AE 7D           Genera_coordenadas ld a,l
  13+ 94AF E6 1F        	and $1f
  14+ 94B1 32 EF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94B4
  16+ 94B4 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94B5 FE 40        	cp $40
  18+ 94B7 38 1C        	jr c,4F
  19+ 94B9
  20+ 94B9 CD 90 94     	call calcula_tercio
  21+ 94BC 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94BD
  23+ 94BD 1E 00        	ld e,0
  24+ 94BF 7D           	ld a,l
  25+ 94C0 E6 E0        	and $e0
  26+ 94C2 28 01        	jr z,1F
  27+ 94C4 04           	inc b
  28+ 94C5
  29+ 94C5 04           1 inc b
  30+ 94C6 05           	dec b
  31+ 94C7 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94C9              ;														; _ , salimos.
  33+ 94C9 1C           3 inc e
  34+ 94CA D6 20        	sub 32
  35+ 94CC 20 FB        	jr nz,3B
  36+ 94CE 10 F5        	djnz 1B
  37+ 94D0
  38+ 94D0 7B           2 ld a,e
  39+ 94D1 32 F0 8B     	ld (Coordenada_y),a
  40+ 94D4 C9           	ret
  41+ 94D5
  42+ 94D5 AF           4 xor a
  43+ 94D6 32 F0 8B     	ld (Coordenada_y),a
  44+ 94D9 C9           	ret
  45+ 94DA
# file closed: Genera_coordenadas.asm
2062  94DA              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94DA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94DA              ;
   3+ 94DA              ;	20/09/24
   4+ 94DA              ;
   5+ 94DA              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94DA              ;   DE contiene Puntero_objeto.
   7+ 94DA              ;   IX contiene el Puntero de impresión.
   8+ 94DA
   9+ 94DA              Genera_datos_de_impresion
  10+ 94DA
  11+ 94DA ED 73 3D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94DE
  13+ 94DE 31 F5 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94E1 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94E3
  16+ 94E3 2A 5F 8C         ld hl,(Scanlines_album_SP)
  17+ 94E6
  18+ 94E6 3E 05            ld a,5
  19+ 94E8 85               add l
  20+ 94E9 6F               ld l,a
  21+ 94EA
  22+ 94EA F9               ld sp,hl
  23+ 94EB 22 5F 8C         ld (Scanlines_album_SP),hl
  24+ 94EE
  25+ 94EE 21 00 00         ld hl,0
  26+ 94F1
  27+ 94F1 DD E5            push ix
  28+ 94F3 3B               dec sp
  29+ 94F4 ED 7A            adc hl,sp
  30+ 94F6 D5               push de
  31+ 94F7
  32+ 94F7              ; Recuperamos SP.
  33+ 94F7
  34+ 94F7 ED 7B 3D 8C      ld sp,(Stack)
  35+ 94FB
  36+ 94FB E5               push hl
  37+ 94FC F1               pop af
  38+ 94FD 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94FE
  40+ 94FE              ; Tenemos el encabezado listo.
  41+ 94FE              ; Preparamos registros para generar los scanlines.
  42+ 94FE
  43+ 94FE DD E5            push ix
  44+ 9500 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9501
  46+ 9501 ED 5B 5F 8C      ld de,(Scanlines_album_SP)
  47+ 9505
  48+ 9505              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9505              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9505
  51+ 9505 7C               ld a,h
  52+ 9506 FE 50            cp $50
  53+ 9508 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 950A
  55+ 950A 20 05            jr nz,2F
  56+ 950C
  57+ 950C 7D               ld a,l
  58+ 950D FE E0            cp $e0
  59+ 950F 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9511
  61+ 9511 7D           2 ld a,l
  62+ 9512 FE C0            cp $c0
  63+ 9514 D2 AA 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9517
  65+ 9517              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9517
  67+ 9517 CD A8 99         call NextScan
  68+ 951A EB               ex de,hl
  69+ 951B
  70+ 951B 73               ld (hl),e
  71+ 951C 23               inc hl
  72+ 951D 72               ld (hl),d
  73+ 951E 23               inc hl
  74+ 951F
  75+ 951F EB               ex de,hl
  76+ 9520
  77+ 9520 CD A8 99         call NextScan
  78+ 9523 EB               ex de,hl
  79+ 9524
  80+ 9524 73               ld (hl),e
  81+ 9525 23               inc hl
  82+ 9526 72               ld (hl),d
  83+ 9527 23               inc hl
  84+ 9528
  85+ 9528 EB               ex de,hl
  86+ 9529
  87+ 9529 CD A8 99         call NextScan
  88+ 952C EB               ex de,hl
  89+ 952D
  90+ 952D 73               ld (hl),e
  91+ 952E 23               inc hl
  92+ 952F 72               ld (hl),d
  93+ 9530 23               inc hl
  94+ 9531
  95+ 9531 EB               ex de,hl
  96+ 9532
  97+ 9532 CD A8 99         call NextScan
  98+ 9535 EB               ex de,hl
  99+ 9536
 100+ 9536 73               ld (hl),e
 101+ 9537 23               inc hl
 102+ 9538 72               ld (hl),d
 103+ 9539 23               inc hl
 104+ 953A
 105+ 953A EB               ex de,hl
 106+ 953B
 107+ 953B CD A8 99         call NextScan
 108+ 953E EB               ex de,hl
 109+ 953F
 110+ 953F 73               ld (hl),e
 111+ 9540 23               inc hl
 112+ 9541 72               ld (hl),d
 113+ 9542 23               inc hl
 114+ 9543
 115+ 9543 EB               ex de,hl
 116+ 9544
 117+ 9544 CD A8 99         call NextScan
 118+ 9547 EB               ex de,hl
 119+ 9548
 120+ 9548 73               ld (hl),e
 121+ 9549 23               inc hl
 122+ 954A 72               ld (hl),d
 123+ 954B 23               inc hl
 124+ 954C
 125+ 954C EB               ex de,hl
 126+ 954D
 127+ 954D CD A8 99         call NextScan
 128+ 9550 EB               ex de,hl
 129+ 9551
 130+ 9551 73               ld (hl),e
 131+ 9552 23               inc hl
 132+ 9553 72               ld (hl),d
 133+ 9554 23               inc hl
 134+ 9555
 135+ 9555 EB               ex de,hl
 136+ 9556
 137+ 9556 CD A8 99         call NextScan
 138+ 9559 EB               ex de,hl
 139+ 955A
 140+ 955A 73               ld (hl),e
 141+ 955B 23               inc hl
 142+ 955C 72               ld (hl),d
 143+ 955D 23               inc hl
 144+ 955E
 145+ 955E EB               ex de,hl
 146+ 955F
 147+ 955F CD A8 99         call NextScan
 148+ 9562 EB               ex de,hl
 149+ 9563
 150+ 9563 73               ld (hl),e
 151+ 9564 23               inc hl
 152+ 9565 72               ld (hl),d
 153+ 9566 23               inc hl
 154+ 9567
 155+ 9567 EB               ex de,hl
 156+ 9568
 157+ 9568 CD A8 99         call NextScan
 158+ 956B EB               ex de,hl
 159+ 956C
 160+ 956C 73               ld (hl),e
 161+ 956D 23               inc hl
 162+ 956E 72               ld (hl),d
 163+ 956F 23               inc hl
 164+ 9570
 165+ 9570 EB               ex de,hl
 166+ 9571
 167+ 9571 CD A8 99         call NextScan
 168+ 9574 EB               ex de,hl
 169+ 9575
 170+ 9575 73               ld (hl),e
 171+ 9576 23               inc hl
 172+ 9577 72               ld (hl),d
 173+ 9578 23               inc hl
 174+ 9579
 175+ 9579 EB               ex de,hl
 176+ 957A
 177+ 957A CD A8 99         call NextScan
 178+ 957D EB               ex de,hl
 179+ 957E
 180+ 957E 73               ld (hl),e
 181+ 957F 23               inc hl
 182+ 9580 72               ld (hl),d
 183+ 9581 23               inc hl
 184+ 9582
 185+ 9582 EB               ex de,hl
 186+ 9583
 187+ 9583 CD A8 99         call NextScan
 188+ 9586 EB               ex de,hl
 189+ 9587
 190+ 9587 73               ld (hl),e
 191+ 9588 23               inc hl
 192+ 9589 72               ld (hl),d
 193+ 958A 23               inc hl
 194+ 958B
 195+ 958B EB               ex de,hl
 196+ 958C
 197+ 958C CD A8 99         call NextScan
 198+ 958F EB               ex de,hl
 199+ 9590
 200+ 9590 73               ld (hl),e
 201+ 9591 23               inc hl
 202+ 9592 72               ld (hl),d
 203+ 9593 23               inc hl
 204+ 9594
 205+ 9594 EB               ex de,hl
 206+ 9595
 207+ 9595 CD A8 99         call NextScan
 208+ 9598 EB               ex de,hl
 209+ 9599
 210+ 9599              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 9599              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 9599              ;   _ generar sus scanlines.
 213+ 9599
 214+ 9599              ;    ld (Puntero_de_impresion_disparo),de
 215+ 9599
 216+ 9599 73               ld (hl),e
 217+ 959A 23               inc hl
 218+ 959B 72               ld (hl),d
 219+ 959C 23               inc hl
 220+ 959D
 221+ 959D              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 959D
 223+ 959D 22 5F 8C         ld (Scanlines_album_SP),hl
 224+ 95A0
 225+ 95A0 EB               ex de,hl
 226+ 95A1
 227+ 95A1              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95A1
 229+ 95A1              ;    call NextScan
 230+ 95A1              ;    call NextScan
 231+ 95A1
 232+ 95A1 22 6A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95A4
 234+ 95A4              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95A4
 236+ 95A4 08               ex af,af
 237+ 95A5
 238+ 95A5 F5               push af
 239+ 95A6 E1               pop hl
 240+ 95A7
 241+ 95A7 36 10            ld (hl),16
 242+ 95A9
 243+ 95A9 C9               ret
 244+ 95AA
 245+ 95AA              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95AA
 247+ 95AA              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95AA
 249+ 95AA 3E 57            ld a,$57
 250+ 95AC 94               sub h
 251+ 95AD 47               ld b,a
 252+ 95AE
 253+ 95AE 3E DF            ld a,$df
 254+ 95B0 BD               cp l
 255+ 95B1 38 04            jr c,1F
 256+ 95B3
 257+ 95B3 3E 08            ld a,8
 258+ 95B5 80               add b
 259+ 95B6 47               ld b,a
 260+ 95B7
 261+ 95B7              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95B7              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95B7
 264+ 95B7 48           1 ld c,b
 265+ 95B8 0C               inc c
 266+ 95B9
 267+ 95B9 04               inc b
 268+ 95BA 05               dec b
 269+ 95BB 20 02            jr nz,3F
 270+ 95BD
 271+ 95BD 18 0B            jr 6F
 272+ 95BF
 273+ 95BF CD A8 99     3 call NextScan
 274+ 95C2 EB               ex de,hl
 275+ 95C3
 276+ 95C3 73               ld (hl),e
 277+ 95C4 23               inc hl
 278+ 95C5 72               ld (hl),d
 279+ 95C6 23               inc hl
 280+ 95C7
 281+ 95C7 EB               ex de,hl
 282+ 95C8 10 F5            djnz 3B
 283+ 95CA
 284+ 95CA ED 53 5F 8C  6 ld (Scanlines_album_SP),de
 285+ 95CE
 286+ 95CE 08           5 ex af,af
 287+ 95CF F5               push af
 288+ 95D0 E1               pop hl
 289+ 95D1
 290+ 95D1 71               ld (hl),c
 291+ 95D2
 292+ 95D2 C9               ret
 293+ 95D3
# file closed: Genera_datos_de_impresion.asm
2063  95D3              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95D3              ; -----------------------------------------------------------------------------
   2+ 95D3              ;
   3+ 95D3              ;   11/03/24
   4+ 95D3              ;
   5+ 95D3
   6+ 95D3              Pinta_Sprites
   7+ 95D3
   8+ 95D3              ;    ld hl,(Scanlines_album_SP)
   9+ 95D3              ;    call Extrae_address
  10+ 95D3
  11+ 95D3              ;    inc h
  12+ 95D3              ;    dec h
  13+ 95D3              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95D3
  15+ 95D3 ED 73 3D 8C      ld (Stack),sp
  16+ 95D7
  17+ 95D7 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95D8              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95D8 2C               inc l
  20+ 95D9 2C               inc l
  21+ 95DA
  22+ 95DA 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95DB
  24+ 95DB 2C               inc l
  25+ 95DC F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95DD
  27+ 95DD              ;   Seleccionamos rutina de impresión:
  28+ 95DD
  29+ 95DD 3E 10            ld a,16
  30+ 95DF B8               cp b
  31+ 95E0 C2 DC 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95E3
  33+ 95E3              ;   Rutinas:
  34+ 95E3
  35+ 95E3              Pinta_rapido    ;   1520 t/states.
  36+ 95E3
  37+ 95E3 E1               pop hl
  38+ 95E4
  39+ 95E4 1A               ld a,(de)
  40+ 95E5 AE               xor (hl)
  41+ 95E6 77               ld (hl),a
  42+ 95E7 2C               inc l
  43+ 95E8 1C               inc e
  44+ 95E9 1A               ld a,(de)
  45+ 95EA AE               xor (hl)
  46+ 95EB 77               ld (hl),a
  47+ 95EC 2C               inc l
  48+ 95ED 1C               inc e
  49+ 95EE 1A               ld a,(de)
  50+ 95EF AE               xor (hl)
  51+ 95F0 77               ld (hl),a
  52+ 95F1 13               inc de
  53+ 95F2
  54+ 95F2 E1               pop hl
  55+ 95F3
  56+ 95F3 1A               ld a,(de)
  57+ 95F4 AE               xor (hl)
  58+ 95F5 77               ld (hl),a
  59+ 95F6 2C               inc l
  60+ 95F7 1C               inc e
  61+ 95F8 1A               ld a,(de)
  62+ 95F9 AE               xor (hl)
  63+ 95FA 77               ld (hl),a
  64+ 95FB 2C               inc l
  65+ 95FC 1C               inc e
  66+ 95FD 1A               ld a,(de)
  67+ 95FE AE               xor (hl)
  68+ 95FF 77               ld (hl),a
  69+ 9600 13               inc de
  70+ 9601
  71+ 9601 E1               pop hl
  72+ 9602
  73+ 9602 1A               ld a,(de)
  74+ 9603 AE               xor (hl)
  75+ 9604 77               ld (hl),a
  76+ 9605 2C               inc l
  77+ 9606 1C               inc e
  78+ 9607 1A               ld a,(de)
  79+ 9608 AE               xor (hl)
  80+ 9609 77               ld (hl),a
  81+ 960A 2C               inc l
  82+ 960B 1C               inc e
  83+ 960C 1A               ld a,(de)
  84+ 960D AE               xor (hl)
  85+ 960E 77               ld (hl),a
  86+ 960F 13               inc de
  87+ 9610
  88+ 9610 E1               pop hl
  89+ 9611
  90+ 9611 1A               ld a,(de)
  91+ 9612 AE               xor (hl)
  92+ 9613 77               ld (hl),a
  93+ 9614 2C               inc l
  94+ 9615 1C               inc e
  95+ 9616 1A               ld a,(de)
  96+ 9617 AE               xor (hl)
  97+ 9618 77               ld (hl),a
  98+ 9619 2C               inc l
  99+ 961A 1C               inc e
 100+ 961B 1A               ld a,(de)
 101+ 961C AE               xor (hl)
 102+ 961D 77               ld (hl),a
 103+ 961E 13               inc de
 104+ 961F
 105+ 961F E1               pop hl
 106+ 9620
 107+ 9620 1A               ld a,(de)
 108+ 9621 AE               xor (hl)
 109+ 9622 77               ld (hl),a
 110+ 9623 2C               inc l
 111+ 9624 1C               inc e
 112+ 9625 1A               ld a,(de)
 113+ 9626 AE               xor (hl)
 114+ 9627 77               ld (hl),a
 115+ 9628 2C               inc l
 116+ 9629 1C               inc e
 117+ 962A 1A               ld a,(de)
 118+ 962B AE               xor (hl)
 119+ 962C 77               ld (hl),a
 120+ 962D 13               inc de
 121+ 962E
 122+ 962E E1               pop hl
 123+ 962F
 124+ 962F 1A               ld a,(de)
 125+ 9630 AE               xor (hl)
 126+ 9631 77               ld (hl),a
 127+ 9632 2C               inc l
 128+ 9633 1C               inc e
 129+ 9634 1A               ld a,(de)
 130+ 9635 AE               xor (hl)
 131+ 9636 77               ld (hl),a
 132+ 9637 2C               inc l
 133+ 9638 1C               inc e
 134+ 9639 1A               ld a,(de)
 135+ 963A AE               xor (hl)
 136+ 963B 77               ld (hl),a
 137+ 963C 13               inc de
 138+ 963D
 139+ 963D E1               pop hl
 140+ 963E
 141+ 963E 1A               ld a,(de)
 142+ 963F AE               xor (hl)
 143+ 9640 77               ld (hl),a
 144+ 9641 2C               inc l
 145+ 9642 1C               inc e
 146+ 9643 1A               ld a,(de)
 147+ 9644 AE               xor (hl)
 148+ 9645 77               ld (hl),a
 149+ 9646 2C               inc l
 150+ 9647 1C               inc e
 151+ 9648 1A               ld a,(de)
 152+ 9649 AE               xor (hl)
 153+ 964A 77               ld (hl),a
 154+ 964B 13               inc de
 155+ 964C
 156+ 964C E1               pop hl
 157+ 964D
 158+ 964D 1A               ld a,(de)
 159+ 964E AE               xor (hl)
 160+ 964F 77               ld (hl),a
 161+ 9650 2C               inc l
 162+ 9651 1C               inc e
 163+ 9652 1A               ld a,(de)
 164+ 9653 AE               xor (hl)
 165+ 9654 77               ld (hl),a
 166+ 9655 2C               inc l
 167+ 9656 1C               inc e
 168+ 9657 1A               ld a,(de)
 169+ 9658 AE               xor (hl)
 170+ 9659 77               ld (hl),a
 171+ 965A 13               inc de
 172+ 965B
 173+ 965B E1               pop hl
 174+ 965C
 175+ 965C 1A               ld a,(de)
 176+ 965D AE               xor (hl)
 177+ 965E 77               ld (hl),a
 178+ 965F 2C               inc l
 179+ 9660 1C               inc e
 180+ 9661 1A               ld a,(de)
 181+ 9662 AE               xor (hl)
 182+ 9663 77               ld (hl),a
 183+ 9664 2C               inc l
 184+ 9665 1C               inc e
 185+ 9666 1A               ld a,(de)
 186+ 9667 AE               xor (hl)
 187+ 9668 77               ld (hl),a
 188+ 9669 13               inc de
 189+ 966A
 190+ 966A E1               pop hl
 191+ 966B
 192+ 966B 1A               ld a,(de)
 193+ 966C AE               xor (hl)
 194+ 966D 77               ld (hl),a
 195+ 966E 2C               inc l
 196+ 966F 1C               inc e
 197+ 9670 1A               ld a,(de)
 198+ 9671 AE               xor (hl)
 199+ 9672 77               ld (hl),a
 200+ 9673 2C               inc l
 201+ 9674 1C               inc e
 202+ 9675 1A               ld a,(de)
 203+ 9676 AE               xor (hl)
 204+ 9677 77               ld (hl),a
 205+ 9678 13               inc de
 206+ 9679
 207+ 9679 E1               pop hl
 208+ 967A
 209+ 967A 1A               ld a,(de)
 210+ 967B AE               xor (hl)
 211+ 967C 77               ld (hl),a
 212+ 967D 2C               inc l
 213+ 967E 1C               inc e
 214+ 967F 1A               ld a,(de)
 215+ 9680 AE               xor (hl)
 216+ 9681 77               ld (hl),a
 217+ 9682 2C               inc l
 218+ 9683 1C               inc e
 219+ 9684 1A               ld a,(de)
 220+ 9685 AE               xor (hl)
 221+ 9686 77               ld (hl),a
 222+ 9687 13               inc de
 223+ 9688
 224+ 9688 E1               pop hl
 225+ 9689
 226+ 9689 1A               ld a,(de)
 227+ 968A AE               xor (hl)
 228+ 968B 77               ld (hl),a
 229+ 968C 2C               inc l
 230+ 968D 1C               inc e
 231+ 968E 1A               ld a,(de)
 232+ 968F AE               xor (hl)
 233+ 9690 77               ld (hl),a
 234+ 9691 2C               inc l
 235+ 9692 1C               inc e
 236+ 9693 1A               ld a,(de)
 237+ 9694 AE               xor (hl)
 238+ 9695 77               ld (hl),a
 239+ 9696 13               inc de
 240+ 9697
 241+ 9697 E1               pop hl
 242+ 9698
 243+ 9698 1A               ld a,(de)
 244+ 9699 AE               xor (hl)
 245+ 969A 77               ld (hl),a
 246+ 969B 2C               inc l
 247+ 969C 1C               inc e
 248+ 969D 1A               ld a,(de)
 249+ 969E AE               xor (hl)
 250+ 969F 77               ld (hl),a
 251+ 96A0 2C               inc l
 252+ 96A1 1C               inc e
 253+ 96A2 1A               ld a,(de)
 254+ 96A3 AE               xor (hl)
 255+ 96A4 77               ld (hl),a
 256+ 96A5 13               inc de
 257+ 96A6
 258+ 96A6 E1               pop hl
 259+ 96A7
 260+ 96A7 1A               ld a,(de)
 261+ 96A8 AE               xor (hl)
 262+ 96A9 77               ld (hl),a
 263+ 96AA 2C               inc l
 264+ 96AB 1C               inc e
 265+ 96AC 1A               ld a,(de)
 266+ 96AD AE               xor (hl)
 267+ 96AE 77               ld (hl),a
 268+ 96AF 2C               inc l
 269+ 96B0 1C               inc e
 270+ 96B1 1A               ld a,(de)
 271+ 96B2 AE               xor (hl)
 272+ 96B3 77               ld (hl),a
 273+ 96B4 13               inc de
 274+ 96B5
 275+ 96B5 E1               pop hl
 276+ 96B6
 277+ 96B6 1A               ld a,(de)
 278+ 96B7 AE               xor (hl)
 279+ 96B8 77               ld (hl),a
 280+ 96B9 2C               inc l
 281+ 96BA 1C               inc e
 282+ 96BB 1A               ld a,(de)
 283+ 96BC AE               xor (hl)
 284+ 96BD 77               ld (hl),a
 285+ 96BE 2C               inc l
 286+ 96BF 1C               inc e
 287+ 96C0 1A               ld a,(de)
 288+ 96C1 AE               xor (hl)
 289+ 96C2 77               ld (hl),a
 290+ 96C3 13               inc de
 291+ 96C4
 292+ 96C4 E1               pop hl
 293+ 96C5
 294+ 96C5 1A               ld a,(de)
 295+ 96C6 AE               xor (hl)
 296+ 96C7 77               ld (hl),a
 297+ 96C8 2C               inc l
 298+ 96C9 1C               inc e
 299+ 96CA 1A               ld a,(de)
 300+ 96CB AE               xor (hl)
 301+ 96CC 77               ld (hl),a
 302+ 96CD 2C               inc l
 303+ 96CE 1C               inc e
 304+ 96CF 1A               ld a,(de)
 305+ 96D0 AE               xor (hl)
 306+ 96D1 77               ld (hl),a
 307+ 96D2 13               inc de
 308+ 96D3
 309+ 96D3 ED 73 5F 8C      ld (Scanlines_album_SP),sp
 310+ 96D7 ED 7B 3D 8C      ld sp,(Stack)
 311+ 96DB C9               ret
 312+ 96DC
 313+ 96DC              Pinta_lento
 314+ 96DC
 315+ 96DC E1           1 pop hl
 316+ 96DD
 317+ 96DD 1A               ld a,(de)
 318+ 96DE AE               xor (hl)
 319+ 96DF 77               ld (hl),a
 320+ 96E0 2C               inc l
 321+ 96E1 1C               inc e
 322+ 96E2 1A               ld a,(de)
 323+ 96E3 AE               xor (hl)
 324+ 96E4 77               ld (hl),a
 325+ 96E5 2C               inc l
 326+ 96E6 1C               inc e
 327+ 96E7 1A               ld a,(de)
 328+ 96E8 AE               xor (hl)
 329+ 96E9 77               ld (hl),a
 330+ 96EA 13               inc de
 331+ 96EB
 332+ 96EB 10 EF            djnz 1B
 333+ 96ED
 334+ 96ED ED 73 5F 8C      ld (Scanlines_album_SP),sp
 335+ 96F1 ED 7B 3D 8C      ld sp,(Stack)
 336+ 96F5 C9               ret
# file closed: Pinta_Sprites.asm
2064  96F6              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96F6              ; ******************************************************************************************************************************************************************************************
   2+ 96F6              ;
   3+ 96F6              ; 26/06/23
   4+ 96F6              ;
   5+ 96F6              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96F6
   7+ 96F6              Draw
   8+ 96F6
   9+ 96F6 CD 9C 99     	call Prepara_draw
  10+ 96F9 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96FA A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96FB 28 05        	jr z,2F
  13+ 96FD
  14+ 96FD 3A 0D 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9700 18 0C        	jr 1F
  16+ 9702
  17+ 9702 2A 0B 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9705 22 FE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9708 CD 94 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 970B              ;													; _la esquina superior izquierda de la pantalla.
  21+ 970B
  22+ 970B CD 3B 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 970E
  24+ 970E 3A FB 8B     1 ld a,(Ctrl_0)
  25+ 9711 CB 6F        	bit 5,a
  26+ 9713 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9715
  28+ 9715 CD 2A 97     	call Comprueba_limite_horizontal
  29+ 9718 CD BA 97     	call Comprueba_limite_vertical
  30+ 971B
  31+ 971B              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 971B              ; -----------------------
  33+ 971B              ; -----------------------
  34+ 971B              ; -----------------------
  35+ 971B
  36+ 971B CD 10 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 971E CD 47 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9721
  39+ 9721 3A FB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9724 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9726 32 FB 8B     	ld (Ctrl_0),a
  42+ 9729
  43+ 9729 C9           	ret
  44+ 972A
  45+ 972A              ; *******************************************************************************************************************************************************************************************
  46+ 972A              ;	21/01/23
  47+ 972A              ;
  48+ 972A              ; 	Comprueba_limite_horizontal.
  49+ 972A              ;
  50+ 972A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 972A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 972A              ;
  53+ 972A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 972A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 972A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 972A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 972A
  58+ 972A
  59+ 972A
  60+ 972A 3A FB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 972D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 972F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9731 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9733 32 FB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9736 18 09            jr 6F
  66+ 9738 CB 5F        1 bit 3,a
  67+ 973A 28 0A            jr z,2F
  68+ 973C E6 F7            and $f7
  69+ 973E 32 FB 8B         ld (Ctrl_0),a
  70+ 9741 CD 94 98     6 call Inicializacion
  71+ 9744 18 5B            jr 5F
  72+ 9746 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9747
  74+ 9747              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9747              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9747
  77+ 9747 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9748 2A 0F 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 974B CD 90 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 974E 67           	ld h,a
  81+ 974F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9750 CD 90 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9753 67           	ld h,a
  84+ 9754 A7           	and a
  85+ 9755 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9757 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9758 3A 0D 8C     	ld a,(Cuad_objeto)
  88+ 975B FE 02        	cp 2
  89+ 975D 38 1E        	jr c,3F
  90+ 975F 28 1C        	jr z,3F
  91+ 9761 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9762 28 23            jr z,7F
  93+ 9764 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9766 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9768 E1           	pop hl
  96+ 9769
  97+ 9769              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9769              ; _para indicar con E="2" en caso necesario.
  99+ 9769
 100+ 9769 E5               push hl
 101+ 976A C5               push bc
 102+ 976B CD 90 94     	call calcula_tercio
 103+ 976E FE 01        	cp 1
 104+ 9770 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9772 CD A2 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9775 28 26            jr z,9F
 107+ 9777 38 24            jr c,9F
 108+ 9779 1E 00        11 ld e,0
 109+ 977B 18 22            jr 8F
 110+ 977D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 977E 28 07        	jr z, 7F
 112+ 9780 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9782 1E 00         	ld e,0
 114+ 9784 E1           	pop hl
 115+ 9785 18 04        	jr 4F
 116+ 9787 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9789 18 15            jr 10F
 118+ 978B
 119+ 978B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 978B              ; _para indicar con E="2" en caso necesario.
 121+ 978B
 122+ 978B E5           4 push hl
 123+ 978C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 978D CD 90 94     	call calcula_tercio
 125+ 9790 FE 01        	cp 1
 126+ 9792 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9794 CD A2 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9797 28 04            jr z,9F
 129+ 9799 30 02            jr nc,9F
 130+ 979B 18 02        	jr 8F
 131+ 979D 1E 02        9 ld e,2
 132+ 979F C1           8 pop bc
 133+ 97A0 E1           10 pop hl
 134+ 97A1 C9           5 ret
 135+ 97A2
 136+ 97A2              ; --------------------
 137+ 97A2              ;
 138+ 97A2              ; 25/08/22
 139+ 97A2
 140+ 97A2 CD 90 94     Comprueba_centro call calcula_tercio
 141+ 97A5 67               ld h,a
 142+ 97A6 08           	ex af,af
 143+ 97A7 FE 02        	cp 2
 144+ 97A9 38 07        	jr c,1F
 145+ 97AB 28 05        	jr z,1F
 146+ 97AD 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97B0 18 03        	jr 2F
 148+ 97B2 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97B5 08           2 ex af,af
 150+ 97B6 A7               and a
 151+ 97B7 ED 42            sbc hl,bc
 152+ 97B9 C9               ret
 153+ 97BA
 154+ 97BA              ; *********************************************************************************************************************************************************************************************
 155+ 97BA              ;
 156+ 97BA              ;   16/8/22
 157+ 97BA              ;
 158+ 97BA              ;	Comprueba_limite_vertical
 159+ 97BA              ;
 160+ 97BA              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97BA              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97BA              ;
 163+ 97BA
 164+ 97BA 2A FE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97BD 7D           	ld a,l
 166+ 97BE E6 1F        	and $1F
 167+ 97C0 57           	ld d,a
 168+ 97C1 3A 11 8C     	ld a,(Limite_vertical)
 169+ 97C4 BA           	cp d 											; Límite - Posición.
 170+ 97C5 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97C6 3A 0D 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97C9 CB 47        	bit 0,a
 173+ 97CB 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97CD
 175+ 97CD              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97CD
 177+ 97CD 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97CE 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97D0
 180+ 97D0              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97D0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97D0
 183+ 97D0 3A EF 8B         ld a,(Coordenada_X)
 184+ 97D3 16 0F            ld d,Centro_izquierda
 185+ 97D5 A7               and a
 186+ 97D6 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97D7 28 1E            jr z,3F
 188+ 97D9 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97DB              ;                                                    ; _salimos sin modificar nada.
 190+ 97DB 18 0E            jr 2F
 191+ 97DD 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97DE 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97E0
 194+ 97E0              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97E0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97E0
 197+ 97E0 3A EF 8B         ld a,(Coordenada_X)
 198+ 97E3 16 10            ld d,Centro_derecha
 199+ 97E5 A7               and a
 200+ 97E6 92               sub d
 201+ 97E7 28 0E            jr z,3F
 202+ 97E9 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97EB              ;                                                    ; _salimos sin modificar nada.
 204+ 97EB CB 43        2 bit 0,e
 205+ 97ED 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97EF C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97F0 CD 84 98         call Modificaccionne
 208+ 97F3 C1           	pop bc
 209+ 97F4 CD 94 98         call Inicializacion
 210+ 97F7 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97F8
 212+ 97F8              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97F8
 214+ 97F8 C5           4 push bc
 215+ 97F9 01 FD 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97FC 0A           	ld a,(bc)
 217+ 97FD 3D           	dec a
 218+ 97FE 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97FF 7D           	ld a,l
 220+ 9800 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9801 CB 47        	bit 0,a
 222+ 9803 28 03        	jr z,5F
 223+ 9805 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9806 18 2E        	jr 7F
 225+ 9808
 226+ 9808              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9808
 228+ 9808 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9809 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 980A 3A FB 8B     	ld a,(Ctrl_0)
 231+ 980D CB 4F        	bit 1,a
 232+ 980F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9811 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9812
 235+ 9812              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9812
 237+ 9812 1C               inc e
 238+ 9813 1D               dec e
 239+ 9814 20 07            jr nz,12F
 240+ 9816 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9817 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9818 22 FE 8B     	ld (Posicion_actual),hl
 243+ 981B 18 44        13 jr 9F
 244+ 981D CB 43        12 bit 0,e
 245+ 981F 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9821              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9821 C1           	pop bc
 248+ 9822 18 D3        	jr 3B
 249+ 9824 80           14 add b
 250+ 9825 6F               ld l,a
 251+ 9826 22 FE 8B     	ld (Posicion_actual),hl
 252+ 9829 CD 84 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 982C 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 982E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9830 32 FB 8B         ld (Ctrl_0),a
 256+ 9833 F1           	pop af
 257+ 9834 18 2B        	jr 9F
 258+ 9836
 259+ 9836              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9836
 261+ 9836 F5           7 push af
 262+ 9837 3A FB 8B     	ld a,(Ctrl_0)
 263+ 983A CB 47        	bit 0,a
 264+ 983C 20 1D        	jr nz,8F
 265+ 983E F1           	pop af
 266+ 983F
 267+ 983F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 983F
 269+ 983F 1C           	inc e
 270+ 9840 1D               dec e
 271+ 9841 20 07            jr nz,10F
 272+ 9843 90           	sub b
 273+ 9844 6F               ld l,a
 274+ 9845 22 FE 8B     	ld (Posicion_actual),hl
 275+ 9848 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 984A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 984A CB 43        10 bit 0,e
 278+ 984C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 984E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 984E C1           	pop bc
 281+ 984F 18 A6        	jr 3B
 282+ 9851 90           16 sub b
 283+ 9852 6F               ld l,a
 284+ 9853 22 FE 8B     	ld (Posicion_actual),hl
 285+ 9856 CD 84 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9859 18 06            jr 9F
 287+ 985B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 985D 32 FB 8B         ld (Ctrl_0),a
 289+ 9860 F1           	pop af
 290+ 9861 C1           9 pop bc
 291+ 9862 1E 00        	ld e,0
 292+ 9864 CD 94 98         call Inicializacion
 293+ 9867 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9868 08           	ex af,af
 295+ 9869 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 986A 18 8B            jr 3B
 297+ 986C
 298+ 986C              ; --------------------
 299+ 986C
 300+ 986C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 986E CD B7 99     1 call PreviousScan
 302+ 9871 10 FB            djnz 1B
 303+ 9873 22 FE 8B     	ld (Posicion_actual),hl
 304+ 9876 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9877 C9           	ret
 306+ 9878
 307+ 9878              ; --------------------
 308+ 9878
 309+ 9878 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 987A CD A8 99     1 call NextScan
 311+ 987D 10 FB            djnz 1B
 312+ 987F 22 FE 8B     	ld (Posicion_actual),hl
 313+ 9882 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9883 C9           	ret
 315+ 9884
 316+ 9884              ; --------------------
 317+ 9884              ;
 318+ 9884              ;	22/01/23
 319+ 9884              ;
 320+ 9884              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9884              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9884              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9884
 324+ 9884
 325+ 9884              Modificaccionne
 326+ 9884
 327+ 9884 3A 0D 8C     	ld a,(Cuad_objeto)
 328+ 9887 FE 02        	cp 2
 329+ 9889 CC 6C 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 988C DC 6C 98         call c,Modifica_Pos_actual
 331+ 988F C8           	ret z
 332+ 9890 CD 78 98         call Modifica_Pos_actual2
 333+ 9893 C9               ret
 334+ 9894
 335+ 9894              ; *************************************************************************************************************************************************************************************************
 336+ 9894              ;
 337+ 9894              ;	13/8/22
 338+ 9894              ;
 339+ 9894              ;	Inicializacion
 340+ 9894              ;
 341+ 9894              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9894              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9894              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9894              ;
 345+ 9894              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9894              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9894              ;	_ desaparece/aparece.
 348+ 9894
 349+ 9894              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9894              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9894              ;
 352+ 9894              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9894              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9894              ; 		   [E] ="0"
 355+ 9894
 356+ 9894              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9894
 358+ 9894 CD 90 94     Inicializacion call calcula_tercio
 359+ 9897 28 36        	jr z,primit
 360+ 9899 E6 02        	and 2
 361+ 989B 20 07        	jr nz,segmit
 362+ 989D 7D           	ld a,l
 363+ 989E FE 7F        	cp $7f
 364+ 98A0 38 2D        	jr c,primit
 365+ 98A2 28 2B        	jr z,primit
 366+ 98A4 CD 0A 99     segmit call column
 367+ 98A7 38 13        	jr c,tercuad
 368+ 98A9 3E 04        cuarcuad ld a,4
 369+ 98AB 32 0D 8C     	ld (Cuad_objeto),a
 370+ 98AE 21 20 48     	ld hl,$4820
 371+ 98B1 22 0F 8C     	ld (Limite_horizontal),hl
 372+ 98B4 21 11 8C     	ld hl,Limite_vertical
 373+ 98B7 36 0D        	ld (hl),$0d
 374+ 98B9 08           	ex af,af
 375+ 98BA 18 3C        	jr 1F
 376+ 98BC              tercuad
 377+ 98BC 3E 03        	ld a,3
 378+ 98BE 32 0D 8C     	ld (Cuad_objeto),a
 379+ 98C1 21 20 48     	ld hl,$4820
 380+ 98C4 22 0F 8C     	ld (Limite_horizontal),hl
 381+ 98C7 21 11 8C     	ld hl,Limite_vertical
 382+ 98CA 36 12        	ld (hl),$12
 383+ 98CC 08           	ex af,af
 384+ 98CD 18 29        	jr 1F
 385+ 98CF CD 0A 99     primit call column
 386+ 98D2 38 13        	jr c, primcuad
 387+ 98D4              segcuad
 388+ 98D4 3E 02        	ld a,2
 389+ 98D6 32 0D 8C     	ld (Cuad_objeto),a
 390+ 98D9 21 C0 4F     	ld hl,$4fc0
 391+ 98DC 22 0F 8C     	ld (Limite_horizontal),hl
 392+ 98DF 21 11 8C     	ld hl,Limite_vertical
 393+ 98E2 36 0D        	ld (hl),$0d
 394+ 98E4 08           	ex af,af
 395+ 98E5 18 11        	jr 1F
 396+ 98E7              primcuad
 397+ 98E7 3E 01        	ld a,1
 398+ 98E9 32 0D 8C     	ld (Cuad_objeto),a
 399+ 98EC 21 C0 4F     	ld hl,$4fc0
 400+ 98EF 22 0F 8C     	ld (Limite_horizontal),hl
 401+ 98F2 21 11 8C     	ld hl,Limite_vertical
 402+ 98F5 36 12        	ld (hl),$12
 403+ 98F7 08           	ex af,af
 404+ 98F8
 405+ 98F8 C5           1 push bc
 406+ 98F9 E5           	push hl
 407+ 98FA D5           	push de
 408+ 98FB
 409+ 98FB 2A FE 8B     	ld hl,(Posicion_actual)
 410+ 98FE CD AE 94     	call Genera_coordenadas
 411+ 9901
 412+ 9901 D1           	pop de
 413+ 9902 E1           	pop hl
 414+ 9903 C1           	pop bc
 415+ 9904
 416+ 9904 21 FB 8B     	ld hl,Ctrl_0
 417+ 9907 CB EE        	set 5,(hl)
 418+ 9909 C9           	ret
 419+ 990A
 420+ 990A              ; ------------------------------------------------------------------------------------------------------------------
 421+ 990A
 422+ 990A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 990A              ;
 424+ 990A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 990A
 426+ 990A 7D           column ld a,l
 427+ 990B E6 1F        	and $1f
 428+ 990D FE 10         	cp $10
 429+ 990F C9            	ret
 430+ 9910
 431+ 9910              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9910              ;
 433+ 9910              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9910              ;
 435+ 9910              ; 14/12/22
 436+ 9910              ;
 437+ 9910              ;	Modifica: A y BC.
 438+ 9910
 439+ 9910 3A 0D 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9913 E6 01        	and 1
 441+ 9915 28 17        	jr z,1F
 442+ 9917
 443+ 9917              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9917
 445+ 9917 3A EF 8B     	ld a,(Coordenada_X)
 446+ 991A 47           	ld b,a
 447+ 991B 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 991C 79           	ld a,c
 449+ 991D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 991E 38 08        	jr c,2F
 451+ 9920 47           	ld b,a
 452+ 9921 79           	ld a,c
 453+ 9922 90           	sub b
 454+ 9923 32 0E 8C     	ld (Columnas),a
 455+ 9926 18 1B        	jr 4F
 456+ 9928 79           2 ld a,c
 457+ 9929 32 0E 8C     	ld (Columnas),a
 458+ 992C 18 15        	jr 4F
 459+ 992E
 460+ 992E              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 992E
 462+ 992E 3A EF 8B     1 ld a,(Coordenada_X)
 463+ 9931 81           	add c
 464+ 9932 3D           	dec a
 465+ 9933 D6 1F        	sub $1f
 466+ 9935 38 08        	jr c,3F
 467+ 9937 47           	ld b,a
 468+ 9938 79           	ld a,c
 469+ 9939 90           	sub b
 470+ 993A 32 0E 8C     	ld (Columnas),a
 471+ 993D 18 04        	jr 4F
 472+ 993F 79           3 ld a,c
 473+ 9940 32 0E 8C     	ld (Columnas),a
 474+ 9943 D9           4 exx
 475+ 9944 4F           	ld c,a
 476+ 9945 D9           	exx
 477+ 9946 C9            ret
 478+ 9947
 479+ 9947              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9947              ;
 481+ 9947              ;   19/7/23
 482+ 9947              ;
 483+ 9947              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9947              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9947              ;
 486+ 9947              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9947              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9947              ;
 489+ 9947              ;	DESTRUYE: HL,B Y A.
 490+ 9947
 491+ 9947 3A 0D 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 994A FE 02        	cp 2
 493+ 994C 38 18        	jr c,1F
 494+ 994E 28 16        	jr z,1F
 495+ 9950 E6 01        	and 1
 496+ 9952 28 0D        	jr z,3F
 497+ 9954
 498+ 9954              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9954
 500+ 9954 CD 90 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9957
 502+ 9957 7D           9 ld a,l
 503+ 9958 E6 1F        	and $1f
 504+ 995A 28 2A        	jr z,7F
 505+ 995C 2B           	dec hl
 506+ 995D 10 F8        	djnz 9B
 507+ 995F 18 25        	jr 7F
 508+ 9961
 509+ 9961              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9961
 511+ 9961 2A FE 8B     3 ld hl,(Posicion_actual)
 512+ 9964 18 20        	jr 7F
 513+ 9966
 514+ 9966 28 14        1 jr z,2F
 515+ 9968
 516+ 9968              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9968
 518+ 9968 CD 90 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 996B
 520+ 996B 7D           4 ld a,l
 521+ 996C E6 1F        	and $1f
 522+ 996E 28 03        	jr z,6F
 523+ 9970 2B           	dec hl
 524+ 9971 10 F8        	djnz 4B
 525+ 9973 06 0F        6 ld b,15
 526+ 9975 CD B7 99     5 call PreviousScan
 527+ 9978 10 FB        	djnz 5B
 528+ 997A 18 0A        	jr 7F
 529+ 997C
 530+ 997C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 997C
 532+ 997C CD 90 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 997F 06 0F        	ld b,15
 534+ 9981 CD B7 99     8 call PreviousScan
 535+ 9984 10 FB        	djnz 8B
 536+ 9986
 537+ 9986 E5           7 push hl
 538+ 9987 DD E1        	pop ix
 539+ 9989
 540+ 9989 2A 00 8C     	ld hl,(Puntero_objeto)
 541+ 998C E5           	push hl
 542+ 998D FD E1        	pop iy
 543+ 998F
 544+ 998F C9           	ret
 545+ 9990
 546+ 9990              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9990              ;
 548+ 9990              ;	2/1/23
 549+ 9990              ;
 550+ 9990              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9990              ;
 552+ 9990              ;	Tras esta rutina tenemos:
 553+ 9990              ;
 554+ 9990              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9990              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9990              ;
 557+ 9990              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9990
 559+ 9990 2A FE 8B     Operandos ld hl,(Posicion_actual)
 560+ 9993 3A 0E 8C     	ld a,(Columnas)
 561+ 9996 3D           	dec a
 562+ 9997 20 01        	jr nz,1F
 563+ 9999 3C           	inc a
 564+ 999A 47           1 ld b,a
 565+ 999B C9           	ret
 566+ 999C
 567+ 999C              ; --------------------------------------------------------------------------------------------------------------------
 568+ 999C              ;
 569+ 999C              ;	Prepara_draw
 570+ 999C              ;
 571+ 999C              ;	Es una rutina de carga.
 572+ 999C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 999C              ;
 574+ 999C              ;	FUNCIONAMIENTO:
 575+ 999C              ;
 576+ 999C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 999C              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 999C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 999C              ;
 580+ 999C              ;	DESTRUYE:
 581+ 999C              ;
 582+ 999C              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 999C
 584+ 999C 21 FC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 999F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99A0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99A1 4E           	ld c,(hl)
 588+ 99A2 2A FE 8B     	ld hl,(Posicion_actual)
 589+ 99A5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99A7 C9           	ret
 591+ 99A8
 592+ 99A8              ;----------------------------------------------------------------------------------------------------------------
 593+ 99A8              ;
 594+ 99A8              ;	5/08/22
 595+ 99A8              ;
 596+ 99A8              ;   NextScan.
 597+ 99A8              ;
 598+ 99A8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99A8              ;
 600+ 99A8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99A8              ;
 602+ 99A8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99A8              ;
 604+ 99A8              ;       DESTRUIDOS: AF y HL !!!
 605+ 99A8              ;
 606+ 99A8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99A8              ;
 608+ 99A8
 609+ 99A8 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99A9 7C               ld a,h
 611+ 99AA E6 07            and 7
 612+ 99AC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99AD
 614+ 99AD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99AE C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99B0 6F               ld l,a
 617+ 99B1 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99B2
 619+ 99B2 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99B3 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99B5 67               ld h,a
 622+ 99B6 C9               ret
 623+ 99B7
 624+ 99B7              ;----------------------------------------------------------------------------------------------------------------
 625+ 99B7              ;
 626+ 99B7              ;	5/08/22
 627+ 99B7              ;
 628+ 99B7              ;   PreviousScan.
 629+ 99B7              ;
 630+ 99B7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99B7              ;
 632+ 99B7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99B7              ;
 634+ 99B7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99B7              ;
 636+ 99B7              ;       DESTRUIDOS: AF y HL !!!
 637+ 99B7              ;
 638+ 99B7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99B7              ;
 640+ 99B7
 641+ 99B7 7C           PreviousScan ld a,h
 642+ 99B8 25               dec h               ; Dec H.
 643+ 99B9 E6 07            and 7
 644+ 99BB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99BC
 646+ 99BC 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99BD D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99BF 6F               ld l,a
 649+ 99C0 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99C1
 651+ 99C1 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99C2 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99C4 67               ld h,a
 654+ 99C5 C9               ret
 655+ 99C6
 656+ 99C6
 657+ 99C6
 658+ 99C6
 659+ 99C6
 660+ 99C6
 661+ 99C6
 662+ 99C6
 663+ 99C6
 664+ 99C6
 665+ 99C6
 666+ 99C6
# file closed: Draw_XOR.asm
2065  99C6              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99C6
   2+ 99C6              ; ******************************************************************************************************************************************************************************************
   3+ 99C6              ;
   4+ 99C6              ;   20/05/23
   5+ 99C6              ;
   6+ 99C6              ;	Recompone_posicion_inicio
   7+ 99C6              ;
   8+ 99C6              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99C6              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99C6              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99C6              ;	_ a una u otra rutina.
  12+ 99C6
  13+ 99C6              Recompone_posicion_inicio
  14+ 99C6
  15+ 99C6 2A 0B 8C     	ld hl,(Posicion_inicio)
  16+ 99C9 7D           	ld a,l
  17+ 99CA E6 1F        	and $1f
  18+ 99CC 28 16        	jr z,1F
  19+ 99CE
  20+ 99CE FE 1F        	cp $1f
  21+ 99D0 28 0D        	jr z,3F
  22+ 99D2
  23+ 99D2 21 FA 8B     	ld hl,Ctrl_2
  24+ 99D5 CB C6        	set 0,(hl)
  25+ 99D7 2A 00 8C     	ld hl,(Puntero_objeto)
  26+ 99DA 22 2C 8C     	ld (Repone_puntero_objeto),hl
  27+ 99DD 18 08        	jr 2F
  28+ 99DF
  29+ 99DF CD 8D 9B     3 call Mov_left
  30+ 99E2 18 03        	jr 2F
  31+ 99E4
  32+ 99E4 CD 6A 9A     1 call Mov_right
  33+ 99E7 21 80 F8     2 ld hl,Sprite_vacio
  34+ 99EA 22 00 8C     	ld (Puntero_objeto),hl
  35+ 99ED C9           	ret
  36+ 99EE
  37+ 99EE              ; ******************************************************************************************************************************************************************************************
  38+ 99EE              ;
  39+ 99EE              ;   27/05/23
  40+ 99EE              ;
  41+ 99EE              ;	Mov_down
  42+ 99EE              ;
  43+ 99EE              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99EE              ;
  45+ 99EE              ;
  46+ 99EE              Mov_down
  47+ 99EE
  48+ 99EE CD 58 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99F1              ;																	; _ repone (Puntero_objeto).
  50+ 99F1 21 FB 8B     	ld hl,Ctrl_0
  51+ 99F4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99F6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99F6              ; 																	; _ en el caso de que no lo haya.
  54+ 99F6 3A 16 8C     	ld a,(Vel_down)
  55+ 99F9 47           	ld b,a
  56+ 99FA 2A FE 8B         ld hl,(Posicion_actual)
  57+ 99FD CD 90 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A00 E6 02        	and 2
  59+ 9A02 28 17        	jr z,1F
  60+ 9A04
  61+ 9A04              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A04              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A04
  64+ 9A04 7C           	ld a,h
  65+ 9A05 FE 57        	cp $57
  66+ 9A07 20 12        	jr nz,1F
  67+ 9A09
  68+ 9A09 7D           	ld a,l
  69+ 9A0A C6 20        	add $20
  70+ 9A0C 30 0D        	jr nc,1F
  71+ 9A0E
  72+ 9A0E              ; ------------------------------
  73+ 9A0E              ;
  74+ 9A0E              ;	12/01/24
  75+ 9A0E
  76+ 9A0E              ;	call Reaparece_arriba
  77+ 9A0E CD 1A 9D     	call Reinicio
  78+ 9A11
  79+ 9A11              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A11
  81+ 9A11 3A 65 8C     	ld a,(Ctrl_3)
  82+ 9A14 CB CF        	set 1,a
  83+ 9A16 32 65 8C     	ld (Ctrl_3),a
  84+ 9A19
  85+ 9A19 18 08        	jr 3F
  86+ 9A1B              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A1B              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A1B              ; ------------------------------
  89+ 9A1B
  90+ 9A1B CD A8 99     1 call NextScan
  91+ 9A1E 22 FE 8B     	ld (Posicion_actual),hl
  92+ 9A21 10 DA            djnz 2B
  93+ 9A23 CD AE 94     3 call Genera_coordenadas
  94+ 9A26 C9           	ret
  95+ 9A27
  96+ 9A27              ; ******************************************************************************************************************************************************************************************
  97+ 9A27              ;
  98+ 9A27              ;   27/05/23
  99+ 9A27              ;
 100+ 9A27              ;	Mov_up
 101+ 9A27              ;
 102+ 9A27              ; 	Mueve el Sprite hacia arriba.
 103+ 9A27              ;
 104+ 9A27              ;
 105+ 9A27              Mov_up
 106+ 9A27
 107+ 9A27 CD 58 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A2A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A2A 21 FB 8B     	ld hl,Ctrl_0
 110+ 9A2D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A2F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A2F              ; 																		; _ en el caso de que no lo haya.
 113+ 9A2F 3A 15 8C     	ld a,(Vel_up)
 114+ 9A32 47           	ld b,a
 115+ 9A33 2A FE 8B     	ld hl,(Posicion_actual)
 116+ 9A36 CD 90 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A39 A7           	and a
 118+ 9A3A 20 10        	jr nz,1F
 119+ 9A3C
 120+ 9A3C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A3C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A3C
 123+ 9A3C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A3D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A3F 20 0B            jr nz,1F
 126+ 9A41 7D               ld a,l
 127+ 9A42 D6 20            sub $20
 128+ 9A44 30 06            jr nc,1F
 129+ 9A46 25               dec h
 130+ 9A47
 131+ 9A47              ; -----------------------------
 132+ 9A47 CD FB 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A4A              ;	call Reinicio
 134+ 9A4A              ; -----------------------------
 135+ 9A4A
 136+ 9A4A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A4C CD B7 99     1 call PreviousScan
 138+ 9A4F 22 FE 8B     	ld (Posicion_actual),hl
 139+ 9A52 10 E2            djnz 3B
 140+ 9A54 CD AE 94     2 call Genera_coordenadas
 141+ 9A57 C9           	ret
 142+ 9A58
 143+ 9A58              ; -----------------------------
 144+ 9A58              ;
 145+ 9A58              ;	27/5/23
 146+ 9A58              ;
 147+ 9A58              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A58              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A58              ;
 150+ 9A58              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A58              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A58              ;
 153+ 9A58              ;	Modifica: A y (Puntero_objeto).
 154+ 9A58
 155+ 9A58 3A FA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A5B CB 47        	bit 0,a
 157+ 9A5D C8           	ret z
 158+ 9A5E CB 87        	res 0,a
 159+ 9A60 32 FA 8B     	ld (Ctrl_2),a
 160+ 9A63 2A 2C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A66 22 00 8C     	ld (Puntero_objeto),hl
 162+ 9A69 C9           	ret
 163+ 9A6A
 164+ 9A6A              ; ******************************************************************************************************************************************************************************************
 165+ 9A6A              ;
 166+ 9A6A              ;	19/10/22
 167+ 9A6A              ;
 168+ 9A6A              ;	Mov_right.
 169+ 9A6A              ;
 170+ 9A6A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A6A              ;
 172+ 9A6A
 173+ 9A6A 3A FB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A6D CB 77        	bit 6,a
 175+ 9A6F 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A71
 177+ 9A71 CD A9 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A74 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A75
 180+ 9A75 21 FB 8B     	ld hl,Ctrl_0
 181+ 9A78 CB E6        	set 4,(hl)
 182+ 9A7A 18 52        	jr 8F
 183+ 9A7C
 184+ 9A7C 21 FB 8B     10 ld hl,Ctrl_0
 185+ 9A7F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A81              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A81              ; 																	; _ en el caso de que no lo haya.
 188+ 9A81 3A EF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A84 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A86 20 46        	jr nz,8F
 191+ 9A88
 192+ 9A88 3A 02 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A8B A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A8C 28 40        	jr z,8F
 195+ 9A8E
 196+ 9A8E              ; ---------- ---------- ----------
 197+ 9A8E              ;
 198+ 9A8E              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A8E
 200+ 9A8E 3A 14 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A91 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A93 28 11        	jr z,1F
 203+ 9A95 38 06        	jr c,6F
 204+ 9A97 FE 04        	cp 4
 205+ 9A99 28 14        	jr z,7F
 206+ 9A9B 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A9D
 208+ 9A9D              ; ---------- ---------- ----------
 209+ 9A9D              ;
 210+ 9A9D              ; Perfiles de velocidad
 211+ 9A9D              ;
 212+ 9A9D
 213+ 9A9D 3A 02 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AA0 FE FE        	cp $fe
 215+ 9AA2 20 2A        	jr nz,8F
 216+ 9AA4 18 10        	jr 3F
 217+ 9AA6 3A 02 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AA9 FE FD        	cp $fd
 219+ 9AAB 20 21        	jr nz,8F
 220+ 9AAD 18 07        	jr 3F
 221+ 9AAF 3A 02 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AB2 FE FB        	cp $fb
 223+ 9AB4 20 18        	jr nz,8F
 224+ 9AB6
 225+ 9AB6              ; ---------- ---------- ----------
 226+ 9AB6
 227+ 9AB6              3
 228+ 9AB6 CD E9 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AB9              ;	call Reinicio
 230+ 9AB9
 231+ 9AB9              ; ---------- ---------- ----------
 232+ 9AB9              ;
 233+ 9AB9              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AB9
 235+ 9AB9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9ABB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ABC CD D5 9A     	call DESPLZ_DER
 238+ 9ABF C1           	pop bc
 239+ 9AC0 10 F9        	djnz 5B
 240+ 9AC2 2A FE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AC5 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AC6 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9AC9 CD AE 94     	call Genera_coordenadas
 244+ 9ACC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9ACE
 246+ 9ACE              ; ---------- ---------- ----------
 247+ 9ACE
 248+ 9ACE 2A FE 8B     8 ld hl,(Posicion_actual)
 249+ 9AD1 CD D5 9A     	call DESPLZ_DER
 250+ 9AD4 C9           2 ret
 251+ 9AD5
 252+ 9AD5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AD5              ;
 254+ 9AD5              ;	22/9/22
 255+ 9AD5              ;
 256+ 9AD5
 257+ 9AD5 CD E4 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AD8 CD 30 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9ADB CD 59 9B         call Ciclo_completo
 260+ 9ADE 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AE1 CB FE        	set 7,(hl)
 262+ 9AE3 C9           	ret
 263+ 9AE4
 264+ 9AE4              ; ******************************************************************************************************************************************************************************************
 265+ 9AE4              ;	15/02/23
 266+ 9AE4              ;
 267+ 9AE4
 268+ 9AE4 3A 14 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9AE7 47           	ld b,a
 270+ 9AE8 2A 07 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AEB 23           1 inc hl
 272+ 9AEC 23           	inc hl
 273+ 9AED 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AEF 22 07 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AF2 CD F2 90     	call Extrae_address
 276+ 9AF5 22 00 8C     	ld (Puntero_objeto),hl
 277+ 9AF8
 278+ 9AF8              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AF8
 280+ 9AF8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AF8              ; Cuántos movimientos hemos hecho ??
 282+ 9AF8              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AF8
 284+ 9AF8 2A 03 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9AFB EB           	ex de,hl
 286+ 9AFC A7           	and a
 287+ 9AFD ED 52        	sbc hl,de
 288+ 9AFF CB 3D        	srl l
 289+ 9B01 3E 08        6 ld a,8
 290+ 9B03 95           	sub l
 291+ 9B04 30 1E        	jr nc,3F
 292+ 9B06
 293+ 9B06              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B06              ; B="0".
 295+ 9B06
 296+ 9B06 04           4 inc b
 297+ 9B07 3C           	inc a
 298+ 9B08 20 FC        	jr nz,4B
 299+ 9B0A 78           	ld a,b
 300+ 9B0B 08           	ex af,af
 301+ 9B0C 2A 03 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B0F 23           5 inc hl
 303+ 9B10 23           	inc hl
 304+ 9B11 10 FC        	djnz 5B
 305+ 9B13 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B16 CD F2 90     	call Extrae_address
 307+ 9B19 22 00 8C     	ld (Puntero_objeto),hl
 308+ 9B1C
 309+ 9B1C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B1C              ; _(Posicion_actual).
 311+ 9B1C
 312+ 9B1C 21 FE 8B     	ld hl,Posicion_actual
 313+ 9B1F 34           	inc (hl)
 314+ 9B20 08               ex af,af
 315+ 9B21 6F           	ld l,a
 316+ 9B22 18 DD        	jr 6B
 317+ 9B24
 318+ 9B24              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B24
 320+ 9B24 47           3 ld b,a
 321+ 9B25 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B28 23           2 inc hl
 323+ 9B29 23           	inc hl
 324+ 9B2A 10 FC        	djnz 2B
 325+ 9B2C 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B2F C9           8 ret
 327+ 9B30
 328+ 9B30              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B30              ;
 330+ 9B30              ;	24/7/22
 331+ 9B30              ;
 332+ 9B30              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B30              ;
 334+ 9B30              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B30              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B30              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B30
 338+ 9B30 3A 02 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B33 A7           	and a
 340+ 9B34 20 1F        	jr nz,1F
 341+ 9B36 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B38 32 02 8C         ld (CTRL_DESPLZ),a
 343+ 9B3B
 344+ 9B3B 21 FD 8B     	ld hl,Columns
 345+ 9B3E 34           	inc (hl)
 346+ 9B3F 3A 0D 8C     	ld a,(Cuad_objeto)
 347+ 9B42 E6 01        	and 1
 348+ 9B44 28 0F        	jr z,1F
 349+ 9B46 2A FE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B49 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B4A 22 FE 8B     	ld (Posicion_actual),hl
 352+ 9B4D CD AE 94     	call Genera_coordenadas
 353+ 9B50 CD B5 9C     	call Inc_CTRL_DESPLZ
 354+ 9B53 18 03        	jr 2F
 355+ 9B55 CD B5 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B58 C9           2 ret
 357+ 9B59
 358+ 9B59              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B59              ;
 360+ 9B59              ;	24/7/22
 361+ 9B59              ;
 362+ 9B59              ;	Ciclo_completo.
 363+ 9B59              ;
 364+ 9B59              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B59              ;
 366+ 9B59              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B59              ; 	Decrementamos (Columns).
 368+ 9B59              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B59              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B59
 371+ 9B59
 372+ 9B59 3A 02 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B5C FE FF        	cp $ff
 374+ 9B5E 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B60 E6 F0        	and $f0
 376+ 9B62 20 28        	jr nz,3F
 377+ 9B64
 378+ 9B64              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B64
 380+ 9B64 3A 02 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B67 47           	ld b,a
 382+ 9B68 3E F8        	ld a,$f8
 383+ 9B6A 80           	add b
 384+ 9B6B 32 02 8C     	ld (CTRL_DESPLZ),a
 385+ 9B6E 18 1C        	jr 3F
 386+ 9B70 21 FD 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B73 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B74 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B75 32 02 8C     	ld (CTRL_DESPLZ),a
 390+ 9B78 3A 0D 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B7B E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B7D 20 0A        	jr nz,2F
 393+ 9B7F 2A FE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B82 23           	inc hl
 395+ 9B83 22 FE 8B     	ld (Posicion_actual),hl
 396+ 9B86 CD AE 94     	call Genera_coordenadas
 397+ 9B89
 398+ 9B89              ; Inicia el puntero de Sprite.
 399+ 9B89
 400+ 9B89 CD 07 91     2 call Inicia_puntero_objeto_der
 401+ 9B8C C9           3 ret
 402+ 9B8D
 403+ 9B8D              ; ******************************************************************************************************************************************************************************************
 404+ 9B8D              ;
 405+ 9B8D              ;	15/02/23
 406+ 9B8D              ;
 407+ 9B8D              ;	Mov_left.
 408+ 9B8D              ;
 409+ 9B8D              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B8D              ;
 411+ 9B8D              Mov_left
 412+ 9B8D
 413+ 9B8D 21 FB 8B     	ld hl,Ctrl_0
 414+ 9B90 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B92              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B92              ; 																	; _ en el caso de que no lo haya.
 417+ 9B92 3A FB 8B     	ld a,(Ctrl_0)
 418+ 9B95 CB 77        	bit 6,a
 419+ 9B97 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B99
 421+ 9B99 CD AF 9C     	call Stop_Amadeus_left
 422+ 9B9C C8           	ret z
 423+ 9B9D 20 4A        	jr nz,8F
 424+ 9B9F
 425+ 9B9F 3A EF 8B     11 ld a,(Coordenada_X)
 426+ 9BA2 A7           	and a
 427+ 9BA3 20 44        	jr nz,8F
 428+ 9BA5
 429+ 9BA5 3A 02 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BA8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BA9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BAB
 433+ 9BAB              ; ---------- ---------- ----------
 434+ 9BAB
 435+ 9BAB 3A 13 8C     	ld a,(Vel_left)
 436+ 9BAE FE 02        	cp 2
 437+ 9BB0 28 0F        	jr z,1F
 438+ 9BB2 38 04        	jr c,6F
 439+ 9BB4 FE 04        	cp 4
 440+ 9BB6 28 12        	jr z,7F
 441+ 9BB8
 442+ 9BB8              ; ---------- ---------- ----------
 443+ 9BB8
 444+ 9BB8 3A 02 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BBB FE F8        	cp $f8
 446+ 9BBD 20 2A        	jr nz,8F
 447+ 9BBF 18 10        	jr 4F
 448+ 9BC1 3A 02 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9BC4 FE F9        	cp $f9
 450+ 9BC6 20 21        	jr nz,8F
 451+ 9BC8 18 07        	jr 4F
 452+ 9BCA 3A 02 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9BCD FE FB        	cp $fb
 454+ 9BCF 20 18        	jr nz,8F
 455+ 9BD1
 456+ 9BD1              ; ---------- ---------- ----------
 457+ 9BD1
 458+ 9BD1              4
 459+ 9BD1 CD D7 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BD4              ;	call Reinicio
 461+ 9BD4
 462+ 9BD4              ; ---------- ---------- ----------
 463+ 9BD4
 464+ 9BD4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BD6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BD7
 467+ 9BD7              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BD7              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BD7
 470+ 9BD7 CD F0 9B     	call DESPLZ_IZQ
 471+ 9BDA C1           	pop bc
 472+ 9BDB 10 F9        	djnz 5B
 473+ 9BDD 2A FE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BE0 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BE1 22 FE 8B     	ld (Posicion_actual),hl
 476+ 9BE4 CD AE 94     	call Genera_coordenadas
 477+ 9BE7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BE9
 479+ 9BE9              ; ---------- ---------- ----------
 480+ 9BE9
 481+ 9BE9              ; Movemos, no hay recolocación.
 482+ 9BE9
 483+ 9BE9 2A FE 8B     8 ld hl,(Posicion_actual)
 484+ 9BEC CD F0 9B     	call DESPLZ_IZQ
 485+ 9BEF C9           2 ret
 486+ 9BF0
 487+ 9BF0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BF0              ;
 489+ 9BF0              ;	22/9/22
 490+ 9BF0
 491+ 9BF0              DESPLZ_IZQ
 492+ 9BF0
 493+ 9BF0 CD FF 9B     	call Desplaza_izquierda
 494+ 9BF3 CD 4B 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BF6 CD 73 9C     	call Ciclo_completo_2
 496+ 9BF9 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BFC CB BE        	res 7,(hl)
 498+ 9BFE C9           	ret
 499+ 9BFF
 500+ 9BFF              Desplaza_izquierda
 501+ 9BFF
 502+ 9BFF 3A 13 8C     	ld a,(Vel_left)
 503+ 9C02 47           	ld b,a
 504+ 9C03 2A 09 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C06 23           1 inc hl
 506+ 9C07 23           	inc hl
 507+ 9C08 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C0A 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C0D CD F2 90     	call Extrae_address
 510+ 9C10 22 00 8C     	ld (Puntero_objeto),hl
 511+ 9C13
 512+ 9C13              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C13
 514+ 9C13              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C13              ; Cuántos movimientos hemos hecho ??
 516+ 9C13              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C13
 518+ 9C13 2A 05 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C16 EB           	ex de,hl
 520+ 9C17 A7           	and a
 521+ 9C18 ED 52        	sbc hl,de
 522+ 9C1A CB 3D        	srl l
 523+ 9C1C 3E 08        6 ld a,8
 524+ 9C1E 95           	sub l
 525+ 9C1F 30 1E        	jr nc,3F
 526+ 9C21
 527+ 9C21              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C21              ; B="0".
 529+ 9C21
 530+ 9C21 04           4 inc b
 531+ 9C22 3C           	inc a
 532+ 9C23 20 FC        	jr nz,4B
 533+ 9C25 78           	ld a,b
 534+ 9C26 08           	ex af,af
 535+ 9C27 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C2A 23           5 inc hl
 537+ 9C2B 23           	inc hl
 538+ 9C2C 10 FC        	djnz 5B
 539+ 9C2E 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C31 CD F2 90     	call Extrae_address
 541+ 9C34 22 00 8C     	ld (Puntero_objeto),hl
 542+ 9C37
 543+ 9C37              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C37              ; _(Posicion_actual).
 545+ 9C37
 546+ 9C37 21 FE 8B     	ld hl,Posicion_actual
 547+ 9C3A 35           	dec (hl)
 548+ 9C3B 08           	ex af,af
 549+ 9C3C 6F           	ld l,a
 550+ 9C3D 18 DD        	jr 6B
 551+ 9C3F
 552+ 9C3F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C3F
 554+ 9C3F 47           3 ld b,a
 555+ 9C40 2A 03 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C43 23           2 inc hl
 557+ 9C44 23           	inc hl
 558+ 9C45 10 FC        	djnz 2B
 559+ 9C47 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C4A C9           8 ret
 561+ 9C4B
 562+ 9C4B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C4B              ;
 564+ 9C4B              ;	modifica_parametros_1er_DESPLZ
 565+ 9C4B              ;
 566+ 9C4B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C4B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C4B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C4B
 570+ 9C4B 3A 02 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C4E A7           	and a
 572+ 9C4F 20 1E        	jr nz,1F
 573+ 9C51 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C52 32 02 8C         ld (CTRL_DESPLZ),a
 575+ 9C55 21 FD 8B     	ld hl,Columns
 576+ 9C58 34           	inc (hl)
 577+ 9C59 3A 0D 8C     	ld a,(Cuad_objeto)
 578+ 9C5C E6 01        	and 1
 579+ 9C5E 20 0F        	jr nz,1F
 580+ 9C60 2A FE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C63 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C64 22 FE 8B     	ld (Posicion_actual),hl
 583+ 9C67 CD AE 94     	call Genera_coordenadas
 584+ 9C6A CD C6 9C     	call Dec_CTRL_DESPLZ
 585+ 9C6D 18 03        	jr 2F
 586+ 9C6F CD C6 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C72 C9           2 ret
 588+ 9C73
 589+ 9C73              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C73
 591+ 9C73 3A 02 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C76 FE F7        	cp $f7
 593+ 9C78 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C7A 30 2C        	jr nc,3F
 595+ 9C7C
 596+ 9C7C              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C7C
 598+ 9C7C 06 00        	ld b,0
 599+ 9C7E 04           4 inc b
 600+ 9C7F 3C           	inc a
 601+ 9C80 FE F7        	cp $f7
 602+ 9C82 20 FA        	jr nz,4B
 603+ 9C84 3E FF        	ld a,$ff
 604+ 9C86 90           	sub b
 605+ 9C87 32 02 8C     	ld (CTRL_DESPLZ),a
 606+ 9C8A 18 1C        	jr 3F
 607+ 9C8C
 608+ 9C8C              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C8C
 610+ 9C8C 21 FD 8B     1 ld hl,Columns
 611+ 9C8F 35           	dec (hl)
 612+ 9C90 AF           	xor a
 613+ 9C91 32 02 8C     	ld (CTRL_DESPLZ),a
 614+ 9C94 3A 0D 8C     	ld a,(Cuad_objeto)
 615+ 9C97 E6 01        	and 1
 616+ 9C99 28 0A        	jr z,2F
 617+ 9C9B 2A FE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C9E 2B           	dec hl
 619+ 9C9F 22 FE 8B     	ld (Posicion_actual),hl
 620+ 9CA2 CD AE 94     	call Genera_coordenadas
 621+ 9CA5
 622+ 9CA5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CA5
 624+ 9CA5 CD 1A 91     2 call Inicia_puntero_objeto_izq
 625+ 9CA8 C9           3 ret
 626+ 9CA9
 627+ 9CA9              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CA9              ;
 629+ 9CA9              ;	19/10/22
 630+ 9CA9              ;
 631+ 9CA9              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CA9              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CA9
 634+ 9CA9 3A EF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CAC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CAE C9           	ret
 637+ 9CAF
 638+ 9CAF              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CAF              ;
 640+ 9CAF              ;	19/10/22
 641+ 9CAF              ;
 642+ 9CAF              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CAF              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CAF
 645+ 9CAF 3A EF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CB2 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CB4 C9           	ret
 648+ 9CB5
 649+ 9CB5              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CB5              ;
 651+ 9CB5              ;	24/7/22
 652+ 9CB5              ;
 653+ 9CB5              ;	Inc_CTRL_DESPLZ
 654+ 9CB5              ;
 655+ 9CB5              ;
 656+ 9CB5              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CB5
 658+ 9CB5 21 02 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CB8 3A 14 8C     	ld a,(Vel_right)
 660+ 9CBB A7           	and a
 661+ 9CBC 28 06        	jr z,1F
 662+ 9CBE 47           	ld b,a
 663+ 9CBF 34           3 inc (hl)
 664+ 9CC0 10 FD        	djnz 3B
 665+ 9CC2 18 01        	jr 2F
 666+ 9CC4 34           1 inc (hl)
 667+ 9CC5 C9           2 ret
 668+ 9CC6
 669+ 9CC6              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CC6              ;
 671+ 9CC6              ;	5/2/23
 672+ 9CC6              ;
 673+ 9CC6              ;	Dec_CTRL_DESPLZ
 674+ 9CC6              ;
 675+ 9CC6              ;
 676+ 9CC6              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CC6
 678+ 9CC6 21 02 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CC9 3A 13 8C     	ld a,(Vel_left)
 680+ 9CCC A7           	and a
 681+ 9CCD 28 06        	jr z,1F
 682+ 9CCF 47           	ld b,a
 683+ 9CD0 35           3 dec (hl)
 684+ 9CD1 10 FD        	djnz 3B
 685+ 9CD3 18 01        	jr 2F
 686+ 9CD5 35           1 dec (hl)
 687+ 9CD6 C9           2 ret
 688+ 9CD7
 689+ 9CD7              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CD7
 691+ 9CD7 2A FE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CDA 01 1F 00     	ld bc,31
 693+ 9CDD A7           	and a
 694+ 9CDE ED 4A        	adc hl,bc
 695+ 9CE0 22 FE 8B     	ld (Posicion_actual),hl
 696+ 9CE3 21 FB 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CE6 CB C6        	set 0,(hl)
 698+ 9CE8 C9           	ret
 699+ 9CE9
 700+ 9CE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CE9
 702+ 9CE9 2A FE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CEC 01 1F 00     	ld bc,31
 704+ 9CEF A7           	and a
 705+ 9CF0 ED 42        	sbc hl,bc
 706+ 9CF2 22 FE 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CF5 21 FB 8B     	ld hl,Ctrl_0
 708+ 9CF8 CB CE        	set 1,(hl)
 709+ 9CFA C9           	ret
 710+ 9CFB
 711+ 9CFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CFB
 713+ 9CFB 24           Reaparece_abajo inc h
 714+ 9CFC 01 E0 17     	ld bc,$17e0
 715+ 9CFF A7           	and a
 716+ 9D00 ED 4A        	adc hl,bc
 717+ 9D02 22 FE 8B     	ld (Posicion_actual),hl
 718+ 9D05 21 FB 8B     	ld hl,Ctrl_0
 719+ 9D08 CB D6        	set 2,(hl)
 720+ 9D0A C9           	ret
 721+ 9D0B
 722+ 9D0B              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D0B
 724+ 9D0B 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D0E A7           	and a
 726+ 9D0F ED 42        	sbc hl,bc
 727+ 9D11 22 FE 8B     	ld (Posicion_actual),hl
 728+ 9D14 21 FB 8B     	ld hl,Ctrl_0
 729+ 9D17 CB DE        	set 3,(hl)
 730+ 9D19 C9           	ret
 731+ 9D1A
 732+ 9D1A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D1A              ;
 734+ 9D1A              ;	15/07/23
 735+ 9D1A
 736+ 9D1A              Reinicio
 737+ 9D1A
 738+ 9D1A              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D1A
 740+ 9D1A AF           	xor a
 741+ 9D1B 21 23 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D1E CD 3C 9D     	call Limpia_contenido_hl
 743+ 9D21
 744+ 9D21 21 FE 8B     	ld hl,Posicion_actual
 745+ 9D24 CD 3C 9D     	call Limpia_contenido_hl
 746+ 9D27
 747+ 9D27 CD 30 93     	call Situa_Puntero_indice_mov
 748+ 9D2A CD 3B 9E     	call Inicia_Puntero_mov
 749+ 9D2D
 750+ 9D2D 21 25 8C     	ld hl,Incrementa_puntero
 751+ 9D30 06 05        	ld b,5
 752+ 9D32 77           1 ld (hl),a
 753+ 9D33 23           	inc hl
 754+ 9D34 10 FC        	djnz 1B
 755+ 9D36
 756+ 9D36 21 FA 8B     	ld hl,Ctrl_2
 757+ 9D39 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D3B
 759+ 9D3B C9           	ret
 760+ 9D3C
 761+ 9D3C 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D3D 23           	inc hl
 763+ 9D3E 77           	ld (hl),a
 764+ 9D3F C9           	ret
 765+ 9D40
 766+ 9D40              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D40              ;
 768+ 9D40              ;	18/6/24
 769+ 9D40              ;
 770+ 9D40
 771+ 9D40              Amadeus_a_izquierda
 772+ 9D40
 773+ 9D40              ;	Actualiza contador de movimientos.
 774+ 9D40
 775+ 9D40 21 C0 89     	ld hl,Comm_Amadeus
 776+ 9D43 35           	dec (hl)
 777+ 9D44 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D46
 779+ 9D46 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D49 2B           	dec hl
 781+ 9D4A 2B           	dec hl
 782+ 9D4B 2B           	dec hl
 783+ 9D4C 2B           	dec hl
 784+ 9D4D 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D50
 786+ 9D50 21 65 8C     	ld hl,Ctrl_3
 787+ 9D53 CB EE        	set 5,(hl)
 788+ 9D55
 789+ 9D55 C9           	ret
 790+ 9D56
 791+ 9D56 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D57 C9           	ret
 793+ 9D58
 794+ 9D58
 795+ 9D58              Amadeus_a_derecha
 796+ 9D58
 797+ 9D58              ;	Actualiza contador de movimientos.
 798+ 9D58
 799+ 9D58 21 C0 89     	ld hl,Comm_Amadeus
 800+ 9D5B 34           	inc (hl)
 801+ 9D5C 3E 7A        	ld a,$7a
 802+ 9D5E BE           	cp (hl)
 803+ 9D5F 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D61
 805+ 9D61 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D64 23           	inc hl
 807+ 9D65 23           	inc hl
 808+ 9D66 23           	inc hl
 809+ 9D67 23           	inc hl
 810+ 9D68 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D6B
 812+ 9D6B 21 65 8C     	ld hl,Ctrl_3
 813+ 9D6E CB EE        	set 5,(hl)
 814+ 9D70 C9           	ret
 815+ 9D71
 816+ 9D71 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D72 C9           	ret
# file closed: Direcciones.asm
2066  9D73              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D73              ; ----- ----- ----- ----- -----
   2+ 9D73              ;
   3+ 9D73              ;   28/12/23
   4+ 9D73
   5+ 9D73              Movimiento
   6+ 9D73
   7+ 9D73              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D73
   9+ 9D73 3A FA 8B         ld a,(Ctrl_2)
  10+ 9D76 CB 57            bit 2,a
  11+ 9D78 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D7A
  13+ 9D7A 2A 21 8C         ld hl,(Puntero_mov)
  14+ 9D7D 7E               ld a,(hl)
  15+ 9D7E
  16+ 9D7E              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D7E
  18+ 9D7E              Inicia_desplazamiento.
  19+ 9D7E
  20+ 9D7E              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D7E
  22+ 9D7E CD 71 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D81
  24+ 9D81              ; Iniciamos (Repetimos_mov).
  25+ 9D81
  26+ 9D81 7E               ld a,(hl)
  27+ 9D82 E6 0F            and $0f
  28+ 9D84 32 27 8C         ld (Repetimos_desplazamiento),a
  29+ 9D87 32 28 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9D8A
  31+ 9D8A              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D8A
  33+ 9D8A 23               inc hl
  34+ 9D8B 7E               ld a,(hl)
  35+ 9D8C 32 2A 8C         ld (Cola_de_desplazamiento),a
  36+ 9D8F 2B               dec hl
  37+ 9D90
  38+ 9D90 21 FA 8B         ld hl,Ctrl_2
  39+ 9D93 CB D6            set 2,(hl)
  40+ 9D95
  41+ 9D95              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D95              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D95
  44+ 9D95              Desplazamiento_iniciado
  45+ 9D95
  46+ 9D95 CD 45 9E         call Aplica_desplazamiento
  47+ 9D98
  48+ 9D98              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D98
  50+ 9D98 3A 65 8C         ld a,(Ctrl_3)
  51+ 9D9B CB 4F            bit 1,a
  52+ 9D9D C0               ret nz
  53+ 9D9E
  54+ 9D9E 21 27 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DA1 35               dec (hl)
  56+ 9DA2 C0               ret nz
  57+ 9DA3
  58+ 9DA3              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DA3              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DA3              ; Analiza (Cola_de_desplazamiento).
  61+ 9DA3
  62+ 9DA3 3A 2A 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DA6 A7               and a
  64+ 9DA7 CC 9A 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DAA 28 30            jr z,Reinicia_el_movimiento
  66+ 9DAC
  67+ 9DAC FE FF            cp $ff
  68+ 9DAE 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DB0
  70+ 9DB0 FE FE            cp $fe
  71+ 9DB2 CC 1F 9E         call z,Fijamos_bucle
  72+ 9DB5 28 25            jr z,Reinicia_el_movimiento
  73+ 9DB7
  74+ 9DB7 FE FD            cp $fd
  75+ 9DB9 20 11            jr nz,1F
  76+ 9DBB
  77+ 9DBB              ; ---
  78+ 9DBB              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DBB
  80+ 9DBB 3A FA 8B         ld a,(Ctrl_2)
  81+ 9DBE CB 5F            bit 3,a
  82+ 9DC0 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DC2
  84+ 9DC2              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DC2
  86+ 9DC2 21 FA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DC5 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DC7
  89+ 9DC7 CD 30 9E         call Inicia_Repetimos_movimiento
  90+ 9DCA 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DCC              ; ---
  92+ 9DCC
  93+ 9DCC FE 01        1 cp 1
  94+ 9DCE CA 09 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DD1
  96+ 9DD1 3D               dec a
  97+ 9DD2 32 2A 8C         ld (Cola_de_desplazamiento),a
  98+ 9DD5
  99+ 9DD5 3A 28 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DD8 32 27 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DDB              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DDB C9               ret
 103+ 9DDC
 104+ 9DDC              Reinicia_el_movimiento
 105+ 9DDC
 106+ 9DDC 3A FA 8B         ld a,(Ctrl_2)
 107+ 9DDF CB 5F            bit 3,a
 108+ 9DE1 28 1B            jr z,2F
 109+ 9DE3
 110+ 9DE3              ; (Cola_de_desplazamiento)="254".
 111+ 9DE3
 112+ 9DE3 21 29 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DE6 35               dec (hl)
 114+ 9DE7 20 15            jr nz,2F
 115+ 9DE9
 116+ 9DE9              ; Fin de las repeticiones del último movimiento.
 117+ 9DE9
 118+ 9DE9 21 FA 8B         ld hl,Ctrl_2
 119+ 9DEC CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DEE
 121+ 9DEE 2A 21 8C         ld hl,(Puntero_mov)
 122+ 9DF1 23               inc hl
 123+ 9DF2 23               inc hl
 124+ 9DF3 23               inc hl
 125+ 9DF4 22 21 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DF7              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DF7 7E               ld a,(hl)
 128+ 9DF8 32 2A 8C         ld (Cola_de_desplazamiento),a
 129+ 9DFB
 130+ 9DFB C3 A3 9D         jp Cola
 131+ 9DFE
 132+ 9DFE CD 3B 9E     2 call Inicia_Puntero_mov
 133+ 9E01
 134+ 9E01 21 FA 8B         ld hl,Ctrl_2
 135+ 9E04 CB 96            res 2,(hl)
 136+ 9E06
 137+ 9E06 C3 73 9D         jp Movimiento
 138+ 9E09
 139+ 9E09              Siguiente_desplazamiento
 140+ 9E09
 141+ 9E09              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E09              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E09
 144+ 9E09 21 FA 8B         ld hl,Ctrl_2
 145+ 9E0C CB 96            res 2,(hl)
 146+ 9E0E
 147+ 9E0E 2A 21 8C         ld hl,(Puntero_mov)
 148+ 9E11 23               inc hl
 149+ 9E12 23               inc hl
 150+ 9E13 22 21 8C         ld (Puntero_mov),hl
 151+ 9E16
 152+ 9E16 7E               ld a,(hl)
 153+ 9E17 A7               and a
 154+ 9E18 CC 9A 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E1B CA DC 9D         jp z,Reinicia_el_movimiento
 156+ 9E1E
 157+ 9E1E C9               ret
 158+ 9E1F
 159+ 9E1F              ; Subrutinas -----------------------------------------
 160+ 9E1F              ; ---------- --------- --------- ---------- ----------
 161+ 9E1F              ;
 162+ 9E1F              ;   24/07/23
 163+ 9E1F              ;
 164+ 9E1F              ;   Fijamos_bucle
 165+ 9E1F              ;
 166+ 9E1F              ;
 167+ 9E1F
 168+ 9E1F              Fijamos_bucle
 169+ 9E1F
 170+ 9E1F 3A 25 8C         ld a,(Incrementa_puntero)
 171+ 9E22 3C               inc a
 172+ 9E23 32 26 8C         ld (Incrementa_puntero_backup),a
 173+ 9E26
 174+ 9E26 CD 9A 9E         call Incrementa_Puntero_indice_mov
 175+ 9E29 2A 1F 8C         ld hl,(Puntero_indice_mov)
 176+ 9E2C 22 23 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E2F C9               ret
 178+ 9E30
 179+ 9E30              ; ---------- --------- --------- ---------- ----------
 180+ 9E30              ;
 181+ 9E30              ;   07/7/23
 182+ 9E30              ;
 183+ 9E30              ;   Inicia_Repetimos_movimiento
 184+ 9E30              ;
 185+ 9E30              ;
 186+ 9E30
 187+ 9E30              Inicia_Repetimos_movimiento
 188+ 9E30
 189+ 9E30              ; Iniciamos (Repetimos_movimiento).
 190+ 9E30
 191+ 9E30 DD 2A 21 8C      ld ix,(Puntero_mov)
 192+ 9E34 DD 7E 02         ld a,(ix+2)
 193+ 9E37 32 29 8C         ld (Repetimos_movimiento),a
 194+ 9E3A
 195+ 9E3A C9               ret
 196+ 9E3B
 197+ 9E3B              ; ---------- --------- --------- ---------- ----------
 198+ 9E3B              ;
 199+ 9E3B              ;   26/6/23
 200+ 9E3B              ;
 201+ 9E3B              ;   Inicia_Puntero_mov
 202+ 9E3B              ;
 203+ 9E3B              ;
 204+ 9E3B
 205+ 9E3B 2A 1F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E3E CD F2 90         call Extrae_address
 207+ 9E41 22 21 8C         ld (Puntero_mov),hl
 208+ 9E44 C9               ret
 209+ 9E45
 210+ 9E45              ; ---------- --------- --------- ---------- ----------
 211+ 9E45              ;
 212+ 9E45              ;   27/06/23
 213+ 9E45              ;
 214+ 9E45              ;   Aplica_movimiento.
 215+ 9E45
 216+ 9E45              Aplica_desplazamiento
 217+ 9E45
 218+ 9E45              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E45
 220+ 9E45 2A 21 8C         ld hl, (Puntero_mov)
 221+ 9E48
 222+ 9E48 7E               ld a,(hl)
 223+ 9E49 E6 F0            and $f0
 224+ 9E4B C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E4C
 226+ 9E4C CB 7E            bit 7,(hl)
 227+ 9E4E 28 03            jr z,1F
 228+ 9E50 CD 27 9A         call Mov_up
 229+ 9E53 2A 21 8C     1 ld hl, (Puntero_mov)
 230+ 9E56 CB 76            bit 6,(hl)
 231+ 9E58 28 03            jr z,2F
 232+ 9E5A CD EE 99         call Mov_down
 233+ 9E5D
 234+ 9E5D              ; Se ha aplicado reinicio ???
 235+ 9E5D              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E5D
 237+ 9E5D              ;    ld a,(Ctrl_3)
 238+ 9E5D              ;    bit 1,a
 239+ 9E5D              ;    ret nz
 240+ 9E5D
 241+ 9E5D 2A 21 8C     2 ld hl, (Puntero_mov)
 242+ 9E60 CB 6E            bit 5,(hl)
 243+ 9E62 28 03            jr z,3F
 244+ 9E64 CD 8D 9B         call Mov_left
 245+ 9E67 2A 21 8C     3 ld hl, (Puntero_mov)
 246+ 9E6A CB 66            bit 4,(hl)
 247+ 9E6C C8               ret z
 248+ 9E6D CD 6A 9A         call Mov_right
 249+ 9E70 C9               ret
 250+ 9E71
 251+ 9E71              ; ---------- --------- --------- ---------- ----------
 252+ 9E71              ;
 253+ 9E71              ;   26/06/23
 254+ 9E71              ;
 255+ 9E71              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E71
 257+ 9E71              Ajusta_velocidad_desplazamiento
 258+ 9E71
 259+ 9E71              ; 1er byte de la cadena de movimiento.
 260+ 9E71              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E71
 262+ 9E71 CD 8F 9E         call Extrae_nibble_alto
 263+ 9E74
 264+ 9E74 32 15 8C         ld (Vel_up),a
 265+ 9E77 79               ld a,c
 266+ 9E78 E6 0F            and $0f
 267+ 9E7A 32 16 8C         ld (Vel_down),a
 268+ 9E7D
 269+ 9E7D              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E7D              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E7D
 272+ 9E7D 23               inc hl
 273+ 9E7E CD 8F 9E         call Extrae_nibble_alto
 274+ 9E81
 275+ 9E81 32 13 8C         ld (Vel_left),a
 276+ 9E84 79               ld a,c
 277+ 9E85 E6 0F            and $0f
 278+ 9E87 32 14 8C         ld (Vel_right),a
 279+ 9E8A
 280+ 9E8A              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E8A
 282+ 9E8A 23               inc hl
 283+ 9E8B 22 21 8C         ld (Puntero_mov),hl
 284+ 9E8E C9               ret
 285+ 9E8F
 286+ 9E8F 06 04        Extrae_nibble_alto ld b,4
 287+ 9E91 7E               ld a,(hl)
 288+ 9E92 4F               ld c,a
 289+ 9E93 E6 F0            and $f0
 290+ 9E95 CB 3F        1 srl a
 291+ 9E97 10 FC            djnz 1B
 292+ 9E99 C9               ret
 293+ 9E9A
 294+ 9E9A              ; ---------- --------- --------- ---------- ----------
 295+ 9E9A              ;
 296+ 9E9A              ;   5/7/23
 297+ 9E9A              ;
 298+ 9E9A              ;   Incrementa_Puntero_indice_mov
 299+ 9E9A
 300+ 9E9A              Incrementa_Puntero_indice_mov
 301+ 9E9A
 302+ 9E9A 21 25 8C         ld hl,Incrementa_puntero
 303+ 9E9D 34               inc (hl)
 304+ 9E9E
 305+ 9E9E 2A 1F 8C         ld hl,(Puntero_indice_mov)
 306+ 9EA1 01 02 00         ld bc,2
 307+ 9EA4 A7               and a
 308+ 9EA5 09               add hl,bc
 309+ 9EA6 22 1F 8C         ld (Puntero_indice_mov),hl
 310+ 9EA9
 311+ 9EA9 7E               ld a,(hl)
 312+ 9EAA A7               and a
 313+ 9EAB
 314+ 9EAB              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EAB
 316+ 9EAB              ;    jr z,$
 317+ 9EAB
 318+ 9EAB              ;! Reinicia el Patrón de movimiento.
 319+ 9EAB
 320+ 9EAB CC B0 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EAE
 322+ 9EAE AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EAF
 324+ 9EAF C9               ret
 325+ 9EB0
 326+ 9EB0              ; ---------- --------- --------- ---------- ----------
 327+ 9EB0              ;
 328+ 9EB0              ;   15/01/24
 329+ 9EB0              ;
 330+ 9EB0              ;   Inicializa_Puntero_indice_mov
 331+ 9EB0
 332+ 9EB0              Inicializa_Puntero_indice_mov_2
 333+ 9EB0
 334+ 9EB0              ; Existe etiqueta de bucle principal???
 335+ 9EB0
 336+ 9EB0 2A 23 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EB3 24               inc h
 338+ 9EB4 25               dec h
 339+ 9EB5 28 05            jr z,2F
 340+ 9EB7
 341+ 9EB7 22 1F 8C         ld (Puntero_indice_mov),hl
 342+ 9EBA 18 14            jr 3F
 343+ 9EBC
 344+ 9EBC              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EBC
 346+ 9EBC 3A 25 8C     2 ld a,(Incrementa_puntero)
 347+ 9EBF 47               ld b,a
 348+ 9EC0
 349+ 9EC0 2A 1F 8C         ld hl,(Puntero_indice_mov)
 350+ 9EC3 2B           1 dec hl
 351+ 9EC4 2B               dec hl
 352+ 9EC5 10 FC            djnz 1B
 353+ 9EC7 22 1F 8C         ld (Puntero_indice_mov),hl
 354+ 9ECA
 355+ 9ECA AF               xor a
 356+ 9ECB 32 25 8C         ld (Incrementa_puntero),a
 357+ 9ECE 18 06            jr 4F
 358+ 9ED0
 359+ 9ED0 3A 26 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9ED3 32 25 8C         ld (Incrementa_puntero),a
 361+ 9ED6 C9           4 ret
 362+ 9ED7
 363+ 9ED7              ; ----------------------------------------------------------------------
 364+ 9ED7              ;
 365+ 9ED7              ;   30/01/24
 366+ 9ED7              ;
 367+ 9ED7              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9ED7
 369+ 9ED7 3A EE 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EDA CD 27 94         call Calcula_salto_en_BC
 371+ 9EDD 21 17 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EE0 A7               and a
 373+ 9EE1 ED 4A            adc hl,bc
 374+ 9EE3 C9               ret
 375+ 9EE4
 376+ 9EE4              ; ----------------------------------------------------------------------
 377+ 9EE4              ;
 378+ 9EE4              ;   30/01/24
 379+ 9EE4              ;
 380+ 9EE4              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EE4              ;
 382+ 9EE4              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EE4
 384+ 9EE4 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EE5 23               inc hl
 386+ 9EE6 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EE7 69               ld l,c
 388+ 9EE8 60               ld h,b
 389+ 9EE9 22 F7 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EEC C9               ret
 391+ 9EED
# file closed: Movimiento.asm
2067  9EED              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EED              ; --------------------------------------------------------------------------------------
   2+ 9EED              ;
   3+ 9EED              ;   25/10/24
   4+ 9EED              ;
   5+ 9EED
   6+ 9EED              Pinta_disparos_Entidades
   7+ 9EED
   8+ 9EED ED 73 3D 8C      ld (Stack),sp
   9+ 9EF1 ED 7B 4F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9EF5
  11+ 9EF5 3E 02            ld a,2
  12+ 9EF7 08               ex af,af
  13+ 9EF8
  14+ 9EF8 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9EFA              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9EFA              ;                                     _ No encontraría "0".
  17+ 9EFA FD E1        4 pop iy
  18+ 9EFC D1               pop de                          ; 1er .db IYL
  19+ 9EFD              ;                                   ; 2º  .db IYH
  20+ 9EFD              ;                                   ; 3er .db E.
  21+ 9EFD              ;   Album vacío ???
  22+ 9EFD
  23+ 9EFD FD 7D            ld a,iyl
  24+ 9EFF FD 84            add iyh
  25+ 9F01 83               add e
  26+ 9F02 28 1F            jr z,1F
  27+ 9F04
  28+ 9F04              ;   Imprime album, (contiene datos).
  29+ 9F04
  30+ 9F04 3B               dec sp
  31+ 9F05
  32+ 9F05 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F06
  34+ 9F06              ; Imprime el 1er scanline del disparo.
  35+ 9F06
  36+ 9F06 FD 7D            ld a,iyl
  37+ 9F08 AE               xor (hl)
  38+ 9F09 77               ld (hl),a
  39+ 9F0A
  40+ 9F0A 2C               inc l
  41+ 9F0B
  42+ 9F0B FD 7C            ld a,iyh
  43+ 9F0D AE               xor (hl)
  44+ 9F0E 77               ld (hl),a
  45+ 9F0F
  46+ 9F0F 2C               inc l
  47+ 9F10
  48+ 9F10 7B               ld a,e
  49+ 9F11 AE               xor (hl)
  50+ 9F12 77               ld (hl),a
  51+ 9F13
  52+ 9F13              ; Imprime el 2º scanline del disparo.
  53+ 9F13
  54+ 9F13 E1               pop hl
  55+ 9F14
  56+ 9F14 FD 7D            ld a,iyl
  57+ 9F16 AE               xor (hl)
  58+ 9F17 77               ld (hl),a
  59+ 9F18
  60+ 9F18 2C               inc l
  61+ 9F19
  62+ 9F19 FD 7C            ld a,iyh
  63+ 9F1B AE               xor (hl)
  64+ 9F1C 77               ld (hl),a
  65+ 9F1D
  66+ 9F1D 2C               inc l
  67+ 9F1E
  68+ 9F1E 7B               ld a,e
  69+ 9F1F AE               xor (hl)
  70+ 9F20 77               ld (hl),a
  71+ 9F21
  72+ 9F21 10 D7            djnz 4B
  73+ 9F23
  74+ 9F23 08           1 ex af,af
  75+ 9F24 3D               dec a
  76+ 9F25 20 05            jr nz,2F
  77+ 9F27
  78+ 9F27 ED 7B 3D 8C      ld sp,(Stack)
  79+ 9F2B C9               ret
  80+ 9F2C
  81+ 9F2C ED 7B 4D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F30 08               ex af,af
  83+ 9F31 18 C5            jr 3B
  84+ 9F33
  85+ 9F33              ; --------------------------------------------------------------------------------------
  86+ 9F33              ;
  87+ 9F33              ;   30/10/24
  88+ 9F33              ;
  89+ 9F33
  90+ 9F33              Motor_de_disparos_entidades
  91+ 9F33
  92+ 9F33 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F36 FE 07            cp 7
  94+ 9F38 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F39
  96+ 9F39 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F3B 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F3E
  99+ 9F3E CD F2 90     1 call Extrae_address
 100+ 9F41 1C               inc e
 101+ 9F42 1C               inc e
 102+ 9F43 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F47
 104+ 9F47               ; Caja vacía ???
 105+ 9F47
 106+ 9F47 2D               dec l
 107+ 9F48 7E               ld a,(hl)
 108+ 9F49 A7               and a
 109+ 9F4A 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F4C
 111+ 9F4C              ; --- Trabajamos con caja:
 112+ 9F4C
 113+ 9F4C 2C               inc l
 114+ 9F4D
 115+ 9F4D              ; --- Existe posibilidad de impacto ???
 116+ 9F4D
 117+ 9F4D CB 46            bit 0,(hl)
 118+ 9F4F C4 8F 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F52 20 37            jr nz,3F
 120+ 9F54
 121+ 9F54 CD 16 A0         call Rota_disparo_si_procede
 122+ 9F57
 123+ 9F57              ; ------------------------------------------------------------
 124+ 9F57
 125+ 9F57 2D               dec l
 126+ 9F58 2D               dec l
 127+ 9F59
 128+ 9F59 CD F2 90         call Extrae_address
 129+ 9F5C
 130+ 9F5C              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F5C              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F5C
 133+ 9F5C 3A 67 8C         ld a,(Ctrl_5)
 134+ 9F5F CB 57            bit 2,a
 135+ 9F61 28 09            jr z,4F
 136+ 9F63
 137+ 9F63 CB 97            res 2,a
 138+ 9F65 32 67 8C         ld (Ctrl_5),a
 139+ 9F68 2C               inc l
 140+ 9F69 2C               inc l
 141+ 9F6A 18 0C            jr 5F
 142+ 9F6C
 143+ 9F6C CB 5F        4 bit 3,a
 144+ 9F6E 28 08            jr z,5F
 145+ 9F70
 146+ 9F70 CB 9F            res 3,a
 147+ 9F72 32 67 8C         ld (Ctrl_5),a
 148+ 9F75 2D               dec l
 149+ 9F76 2D               dec l
 150+ 9F77 2D               dec l
 151+ 9F78
 152+ 9F78              ; ---------------------------------------------------------------------
 153+ 9F78
 154+ 9F78              ;! Velocidad del disparo de entidades.
 155+ 9F78
 156+ 9F78 CD A8 99     5 call NextScan
 157+ 9F7B CD A8 99         call NextScan
 158+ 9F7E
 159+ 9F7E              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9F7E
 161+ 9F7E CD F3 9F         call Fin_de_disparo_de_entidad
 162+ 9F81
 163+ 9F81 EB               ex de,hl
 164+ 9F82
 165+ 9F82 73               ld (hl),e
 166+ 9F83 23               inc hl
 167+ 9F84 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9F85
 169+ 9F85 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9F88 18 02            jr 2F
 171+ 9F8A
 172+ 9F8A C9               ret
 173+ 9F8B
 174+ 9F8B EB           3 ex de,hl
 175+ 9F8C 10 B0        2 djnz 1B
 176+ 9F8E
 177+ 9F8E C9               ret
 178+ 9F8F
 179+ 9F8F              ; ------------- ------------- ------------
 180+ 9F8F              ;
 181+ 9F8F              ;   1/11/24
 182+ 9F8F
 183+ 9F8F              Comprueba_impacto_con_Amadeus
 184+ 9F8F
 185+ 9F8F              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9F8F              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9F8F
 188+ 9F8F              ;   Modificamos registros, así que guardamos ...
 189+ 9F8F
 190+ 9F8F C5               push bc
 191+ 9F90 E5               push hl
 192+ 9F91 D5               push de
 193+ 9F92
 194+ 9F92 2D               dec l
 195+ 9F93 2D               dec l
 196+ 9F94
 197+ 9F94 CD F2 90         call Extrae_address
 198+ 9F97
 199+ 9F97 3A B8 89         ld a,(CX_Amadeus)
 200+ 9F9A 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9F9B
 202+ 9F9B 7D               ld a,l
 203+ 9F9C E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9F9E
 205+ 9F9E 06 03            ld b,3
 206+ 9FA0
 207+ 9FA0 B9           1 cp c
 208+ 9FA1 28 15            jr z,Coincidencia
 209+ 9FA3 0C               inc c
 210+ 9FA4 10 FA            djnz 1B
 211+ 9FA6
 212+ 9FA6 0D               dec c
 213+ 9FA7 0D               dec c
 214+ 9FA8 0D               dec c
 215+ 9FA9
 216+ 9FA9 3C               inc a
 217+ 9FAA B9               cp c
 218+ 9FAB 28 0B            jr z,Coincidencia
 219+ 9FAD
 220+ 9FAD 3C               inc a
 221+ 9FAE B9               cp c
 222+ 9FAF 28 07            jr z,Coincidencia
 223+ 9FB1
 224+ 9FB1 D1           2 pop de
 225+ 9FB2 E1               pop hl
 226+ 9FB3 C1               pop bc
 227+ 9FB4
 228+ 9FB4              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FB4
 230+ 9FB4 CB 86            res 0,(hl)
 231+ 9FB6 AF               xor a                       ; Z before RET.
 232+ 9FB7 C9               ret
 233+ 9FB8
 234+ 9FB8              Coincidencia
 235+ 9FB8
 236+ 9FB8              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FB8              ;   Existe posibilidad de impacto.
 238+ 9FB8              ;   Vamos a averiguarlo ...
 239+ 9FB8
 240+ 9FB8 1D               dec e
 241+ 9FB9 1D               dec e
 242+ 9FBA 1D               dec e
 243+ 9FBB
 244+ 9FBB              ; DE en Puntero_objeto del disparo.
 245+ 9FBB              ; HL en Puntero_de_impresión del disparo.
 246+ 9FBB
 247+ 9FBB              ; Comparador:
 248+ 9FBB
 249+ 9FBB 06 03            ld b,3
 250+ 9FBD
 251+ 9FBD 1A           3 ld a,(de)
 252+ 9FBE 4F               ld c,a
 253+ 9FBF A6               and (hl)
 254+ 9FC0 B9               cp c
 255+ 9FC1 20 06            jr nz,Amadeus_impactado
 256+ 9FC3
 257+ 9FC3 2C               inc l
 258+ 9FC4 1C               inc e
 259+ 9FC5
 260+ 9FC5 10 F6            djnz 3B
 261+ 9FC7
 262+ 9FC7 18 E8            jr 2B
 263+ 9FC9
 264+ 9FC9              Amadeus_impactado
 265+ 9FC9
 266+ 9FC9              ; Borramos disparo.
 267+ 9FC9
 268+ 9FC9 D1               pop de
 269+ 9FCA E1               pop hl
 270+ 9FCB
 271+ 9FCB E5               push hl
 272+ 9FCC D5               push de
 273+ 9FCD
 274+ 9FCD CD 81 A0         call Borra_6_bytes
 275+ 9FD0
 276+ 9FD0 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 277+ 9FD3 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ 9FD4
 279+ 9FD4              ; Iniciamos el proceso de explosión de Amadeus.
 280+ 9FD4
 281+ 9FD4 21 BB 89         ld hl,Impacto_Amadeus
 282+ 9FD7 36 01            ld (hl),1
 283+ 9FD9
 284+ 9FD9              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ 9FD9              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ 9FD9
 287+ 9FD9 3A BC 89         ld a,(p.imp.amadeus)
 288+ 9FDC FE DE            cp $de
 289+ 9FDE 20 04            jr nz,1F
 290+ 9FE0
 291+ 9FE0 3D               dec a
 292+ 9FE1 32 BC 89         ld (p.imp.amadeus),a
 293+ 9FE4
 294+ 9FE4              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ 9FE4
 296+ 9FE4 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ 9FE7 21 BE 89         ld hl,Pamm_Amadeus
 298+ 9FEA
 299+ 9FEA 73               ld (hl),e
 300+ 9FEB 23               inc hl
 301+ 9FEC 72               ld (hl),d
 302+ 9FED
 303+ 9FED D1               pop de
 304+ 9FEE E1               pop hl
 305+ 9FEF C1               pop bc
 306+ 9FF0
 307+ 9FF0 AF               xor a
 308+ 9FF1 3C               inc a               ; NZ before RET.
 309+ 9FF2 C9               ret
 310+ 9FF3
 311+ 9FF3              ; ------------- ------------- ------------
 312+ 9FF3              ;
 313+ 9FF3              ;   31/10/24
 314+ 9FF3
 315+ 9FF3              Fin_de_disparo_de_entidad
 316+ 9FF3
 317+ 9FF3              ; Estamos en zona de Amadeus ??
 318+ 9FF3
 319+ 9FF3 7C               ld a,h
 320+ 9FF4 FE 54            cp $54
 321+ 9FF6 38 0D            jr c,1F
 322+ 9FF8
 323+ 9FF8 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ 9FF9
 325+ 9FF9 5D               ld e,l
 326+ 9FFA 54               ld d,h
 327+ 9FFB
 328+ 9FFB 21 E0 57         ld hl,$57e0
 329+ 9FFE ED 52            sbc hl,de
 330+ A000
 331+ A000 38 6F            jr c,Elimina_disparo_entidad
 332+ A002
 333+ A002 6B               ld l,e
 334+ A003 62               ld h,d
 335+ A004
 336+ A004 D1               pop de
 337+ A005
 338+ A005 7C           1 ld a,h
 339+ A006 FE 50            cp $50
 340+ A008 D8               ret c
 341+ A009
 342+ A009 7D               ld a,l
 343+ A00A FE C0            cp $c0
 344+ A00C D8               ret c
 345+ A00D
 346+ A00D              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A00D              ; Así podremos comprobar si hay colisión más adelante.
 348+ A00D
 349+ A00D 1C               inc e
 350+ A00E 1C               inc e
 351+ A00F
 352+ A00F EB               ex de,hl
 353+ A010 CB C6            set 0,(hl)
 354+ A012 EB               ex de,hl
 355+ A013
 356+ A013 1D               dec e
 357+ A014 1D               dec e
 358+ A015
 359+ A015 C9               ret
 360+ A016
 361+ A016              ; ----------------------------------------------------------
 362+ A016              ;
 363+ A016              ;   08/10/24
 364+ A016
 365+ A016              ;   Estructura de un disparo de entidades.
 366+ A016
 367+ A016              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A016              ; 	defw 0											; Puntero de impresión.
 369+ A016              ;	defw 0											; Control.
 370+ A016
 371+ A016              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A016              ;   _de la entidad en el momento de disparar.
 373+ A016
 374+ A016              ;   El byte alto muestra la siguiente información:
 375+ A016              ;
 376+ A016              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A016              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A016              ;
 379+ A016              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A016              ;
 381+ A016              ;                        10xx ..... Izquierda.
 382+ A016              ;                        01xx ..... Derecha.
 383+ A016              ;                        00xx ..... Recto.
 384+ A016
 385+ A016              Rota_disparo_si_procede
 386+ A016
 387+ A016              ;   Nos situamos en el byte alto de (Control).
 388+ A016
 389+ A016 CB 76            bit 6,(hl)
 390+ A018 20 2D            jr nz,Rota_a_derecha
 391+ A01A CB 7E            bit 7,(hl)
 392+ A01C C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A01D
 394+ A01D              Rota_a_izq
 395+ A01D
 396+ A01D E5               push hl
 397+ A01E
 398+ A01E 7D               ld a,l
 399+ A01F D6 05            sub 5
 400+ A021 6F               ld l,a
 401+ A022
 402+ A022 E5               push hl
 403+ A023 FD E1            pop iy
 404+ A025
 405+ A025 A7               and a
 406+ A026
 407+ A026 FD CB 02 16      rl (iy+02)
 408+ A02A FD CB 01 16      rl (iy+01)
 409+ A02E FD CB 00 16      rl (iy+00)
 410+ A032
 411+ A032 30 3B            jr nc,Exit
 412+ A034
 413+ A034              ; Desplazamiento completo hasta Carry.
 414+ A034              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A034
 416+ A034 FD 36 02 03      ld (iy+02),$03
 417+ A038 FD 36 01 00      ld (iy+01),$00
 418+ A03C FD 36 00 00      ld (iy+00),$00
 419+ A040
 420+ A040 21 67 8C         ld hl,Ctrl_5
 421+ A043 CB DE            set 3,(hl)
 422+ A045
 423+ A045 18 28            jr Exit
 424+ A047
 425+ A047              Rota_a_derecha
 426+ A047
 427+ A047 E5               push hl
 428+ A048
 429+ A048 7D               ld a,l
 430+ A049 D6 05            sub 5
 431+ A04B 6F               ld l,a
 432+ A04C
 433+ A04C E5               push hl
 434+ A04D FD E1            pop iy
 435+ A04F
 436+ A04F A7               and a
 437+ A050
 438+ A050 FD CB 00 1E      rr (iy+00)
 439+ A054 FD CB 01 1E      rr (iy+01)
 440+ A058 FD CB 02 1E      rr (iy+02)
 441+ A05C
 442+ A05C 30 11            jr nc,Exit
 443+ A05E
 444+ A05E              ; Desplazamiento completo hasta Carry.
 445+ A05E              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A05E
 447+ A05E FD 36 00 01      ld (iy+00),$01
 448+ A062 FD 36 01 80      ld (iy+01),$80
 449+ A066 FD 36 02 00      ld (iy+02),$00
 450+ A06A
 451+ A06A 21 67 8C         ld hl,Ctrl_5
 452+ A06D CB D6            set 2,(hl)
 453+ A06F
 454+ A06F E1           Exit pop hl
 455+ A070 C9               ret
 456+ A071
 457+ A071              ; ------------ ----------- ------------
 458+ A071              ;
 459+ A071              ;   25/9/24
 460+ A071
 461+ A071              Elimina_disparo_entidad
 462+ A071
 463+ A071 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A074 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A075
 466+ A075 E1               pop hl
 467+ A076 E5               push hl
 468+ A077
 469+ A077 2C               inc l
 470+ A078 2C               inc l
 471+ A079
 472+ A079 CD 81 A0         call Borra_6_bytes
 473+ A07C
 474+ A07C D1               pop de
 475+ A07D
 476+ A07D 21 00 00         ld hl,0
 477+ A080
 478+ A080 C9               ret
 479+ A081
 480+ A081              ; ----- ----- ----- ----- -----
 481+ A081
 482+ A081              Borra_6_bytes
 483+ A081
 484+ A081 16 06            ld d,6                                                    ; Contador
 485+ A083 AF               xor a                                                     ; Borrador
 486+ A084 77           1 ld (hl),a
 487+ A085 2D               dec l
 488+ A086 15               dec d
 489+ A087 20 FB            jr nz,1B
 490+ A089
 491+ A089 C9               ret
 492+ A08A
 493+ A08A              ; --------------------------------------------------------------------------------------
 494+ A08A              ;
 495+ A08A              ;   12/10/24
 496+ A08A              ;
 497+ A08A
 498+ A08A              Genera_datos_de_impresion_disparos_Entidades
 499+ A08A
 500+ A08A 3E 07            ld a,7
 501+ A08C 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A08D
 503+ A08D              ; ---------------
 504+ A08D
 505+ A08D              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A08D
 507+ A08D 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A090
 509+ A090 CD F2 90     1 call Extrae_address
 510+ A093
 511+ A093 13               inc de
 512+ A094 13               inc de
 513+ A095
 514+ A095 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A099
 516+ A099 2D               dec l
 517+ A09A 7E               ld a,(hl)
 518+ A09B A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A09C 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A09E
 521+ A09E              ; ----- ----- ----- -----
 522+ A09E
 523+ A09E 2D               dec l
 524+ A09F CD F2 90         call Extrae_address
 525+ A0A2 E5               push hl
 526+ A0A3
 527+ A0A3 1D               dec e
 528+ A0A4
 529+ A0A4 EB               ex de,hl
 530+ A0A5
 531+ A0A5 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0A6 2D               dec l
 533+ A0A7 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0A8 2D               dec l
 535+ A0A9 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0AA
 537+ A0AA E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0AB
 539+ A0AB              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0AB
 541+ A0AB FD 2A 51 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0AF FD 73 00         ld (iy+0),e
 543+ A0B2 FD 70 01         ld (iy+1),b
 544+ A0B5 FD 71 02         ld (iy+2),c
 545+ A0B8
 546+ A0B8 FD 75 03         ld (iy+3),l
 547+ A0BB FD 74 04         ld (iy+4),h
 548+ A0BE
 549+ A0BE CD A8 99         call NextScan
 550+ A0C1
 551+ A0C1 FD 75 05         ld (iy+5),l
 552+ A0C4 FD 74 06         ld (iy+6),h
 553+ A0C7
 554+ A0C7 FD E5            push iy
 555+ A0C9 E1               pop hl
 556+ A0CA
 557+ A0CA 3E 07            ld a,7
 558+ A0CC 85               add l
 559+ A0CD 6F               ld l,a
 560+ A0CE
 561+ A0CE 22 51 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A0D1
 563+ A0D1              ; ----- ----- ----- -----
 564+ A0D1
 565+ A0D1              Situa_en_siguiente_caja
 566+ A0D1
 567+ A0D1 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A0D2 3D               dec a
 569+ A0D3 C8               ret z
 570+ A0D4
 571+ A0D4 08               ex af,af
 572+ A0D5 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A0D8 18 B6            jr 1B
 574+ A0DA
 575+ A0DA              ; --------------------------------------------------------------------------------------
 576+ A0DA              ;
 577+ A0DA              ;   12/10/24
 578+ A0DA              ;
 579+ A0DA
 580+ A0DA              Genera_disparo_de_entidad_maldosa
 581+ A0DA
 582+ A0DA              ;   Estructura de un disparo de entidades.
 583+ A0DA
 584+ A0DA              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A0DA              ; 	defw 0											; Puntero de impresión.
 586+ A0DA              ;	defw 0											; Control.
 587+ A0DA
 588+ A0DA              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A0DA              ;   _de la entidad en el momento de disparar.
 590+ A0DA
 591+ A0DA              ;   El byte de control muestra la siguiente información:
 592+ A0DA
 593+ A0DA              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A0DA              ;
 595+ A0DA              ;                        10xx ..... Izquierda.
 596+ A0DA              ;                        01xx ..... Derecha.
 597+ A0DA              ;                        00xx ..... Recto.
 598+ A0DA
 599+ A0DA              ;*  Exclusiones.
 600+ A0DA
 601+ A0DA              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A0DA              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A0DA
 604+ A0DA 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A0DD A7               and a
 606+ A0DE C8               ret z
 607+ A0DF
 608+ A0DF 3A F0 8B         ld a,(Coordenada_y)
 609+ A0E2 A7               and a
 610+ A0E3 C8               ret z
 611+ A0E4
 612+ A0E4 3D               dec a
 613+ A0E5 C8               ret z
 614+ A0E6
 615+ A0E6 FE 10            cp 16
 616+ A0E8 D0               ret nc
 617+ A0E9
 618+ A0E9              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A0E9              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A0E9              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A0E9
 622+ A0E9 21 57 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A0EC 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A0ED
 625+ A0ED              ;   Decrementa el numero de disparos de entidades.
 626+ A0ED
 627+ A0ED 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A0F0 35               dec (hl)
 629+ A0F1
 630+ A0F1 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A0F4
 632+ A0F4 CD F2 90     1 call Extrae_address
 633+ A0F7
 634+ A0F7 13               inc de
 635+ A0F8 13               inc de
 636+ A0F9
 637+ A0F9 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A0FD
 639+ A0FD              ;   Comprobamos si la caja está vacía.
 640+ A0FD
 641+ A0FD 2D               dec l
 642+ A0FE 7E               ld a,(hl)
 643+ A0FF A7               and a
 644+ A100 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A102 2C               inc l
 646+ A103
 647+ A103              ;   Caja vacía, vamos a generar un disparo.
 648+ A103              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A103
 650+ A103 CD 24 A1         call Genera_byte_inclinacion
 651+ A106
 652+ A106 7E               ld a,(hl)
 653+ A107 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A108
 655+ A108 2D               dec l
 656+ A109
 657+ A109 CD 40 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A10C
 659+ A10C 70               ld (hl),b
 660+ A10D 2D               dec l
 661+ A10E 71               ld (hl),c
 662+ A10F
 663+ A10F 2D               dec l
 664+ A110
 665+ A110              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A110
 667+ A110 FD 7E 02         ld a,(iy+02)
 668+ A113 77               ld (hl),a
 669+ A114 2D               dec l
 670+ A115
 671+ A115 FD 7E 01         ld a,(iy+01)
 672+ A118 77               ld (hl),a
 673+ A119 2D               dec l
 674+ A11A
 675+ A11A FD 7E 00         ld a,(iy+00)
 676+ A11D 77               ld (hl),a
 677+ A11E
 678+ A11E C9               ret
 679+ A11F
 680+ A11F              ;   --- --- ---
 681+ A11F
 682+ A11F              Situa_en_siguiente_disparo
 683+ A11F
 684+ A11F 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A122 18 D0            jr 1B
 686+ A124
 687+ A124              ; --------------------------------------------------------------------------------------
 688+ A124              ;
 689+ A124              ;   09/10/24
 690+ A124              ;
 691+ A124
 692+ A124              Genera_byte_inclinacion
 693+ A124
 694+ A124              ; Determina tendencia del disparo.
 695+ A124
 696+ A124 3A B8 89         ld a,(CX_Amadeus)
 697+ A127 47               ld b,a
 698+ A128 3A EF 8B         ld a,(Coordenada_X)
 699+ A12B 90               sub b
 700+ A12C 38 07            jr c,Disparo_a_derecha
 701+ A12E
 702+ A12E FE 06        Disparo_a_izquierda cp 6
 703+ A130
 704+ A130 D8               ret c
 705+ A131 C8               ret z
 706+ A132
 707+ A132 CB FE            set 7,(hl)
 708+ A134 C9               ret
 709+ A135
 710+ A135 47           Disparo_a_derecha ld b,a
 711+ A136 3E FF            ld a,$ff
 712+ A138 90               sub b
 713+ A139
 714+ A139 FE 05            cp 5
 715+ A13B
 716+ A13B D8               ret c
 717+ A13C C8               ret z
 718+ A13D
 719+ A13D CB F6            set 6,(hl)
 720+ A13F C9               ret
 721+ A140
 722+ A140              ; --------------------------------------------------------------------------------------
 723+ A140              ;
 724+ A140              ;   09/10/24
 725+ A140              ;
 726+ A140
 727+ A140              Modifica_puntero_de_impresion
 728+ A140
 729+ A140              ;   Puntero de impresión del disparo en BC.
 730+ A140
 731+ A140 E5               push hl
 732+ A141
 733+ A141 2A 6A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A144 CD A8 99         call NextScan
 735+ A147
 736+ A147 4D               ld c,l
 737+ A148 44               ld b,h
 738+ A149
 739+ A149 E1               pop hl
 740+ A14A
 741+ A14A 08               ex af,af
 742+ A14B CB 77            bit 6,a
 743+ A14D 28 06            jr z,1F
 744+ A14F
 745+ A14F FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A153 0C               inc c
 747+ A154 C9               ret
 748+ A155
 749+ A155 CB 7F        1 bit 7,a
 750+ A157 28 F6            jr z,2B
 751+ A159
 752+ A159 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A15D 0D               dec c
 754+ A15E
 755+ A15E C9               ret
 756+ A15F
 757+ A15F              ; --------------------------------------------------------------------------------------
 758+ A15F              ;
 759+ A15F              ;   31/08/24
 760+ A15F              ;
 761+ A15F
 762+ A15F              Compara_con_coordenadas_de_disparo
 763+ A15F
 764+ A15F 3A F0 8B         ld a,(Coordenada_y)
 765+ A162 47               ld b,a
 766+ A163 3A 6F 8C         ld a,(Coordenadas_disparo_certero)
 767+ A166 90               sub b
 768+ A167
 769+ A167              ; A = "0" ok
 770+ A167              ; A = "1" ok
 771+ A167
 772+ A167 28 08            jr z,Comprueba_coordenada_X
 773+ A169 3D               dec a
 774+ A16A 28 05            jr z,Comprueba_coordenada_X
 775+ A16C
 776+ A16C              ; A = "$ff" ok
 777+ A16C
 778+ A16C FE FE            cp $fe
 779+ A16E 28 01            jr z,Comprueba_coordenada_X
 780+ A170
 781+ A170 C9               ret
 782+ A171
 783+ A171              Comprueba_coordenada_X
 784+ A171
 785+ A171 3A EF 8B         ld a,(Coordenada_X)
 786+ A174 47               ld b,a
 787+ A175 21 70 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A178 7E               ld a,(hl)
 789+ A179 90               sub b
 790+ A17A
 791+ A17A              ; A = "0" ok
 792+ A17A              ; A = "1" ok
 793+ A17A
 794+ A17A 28 09            jr z,Activa_Impacto_en_entidad
 795+ A17C 3D               dec a
 796+ A17D 28 06            jr z,Activa_Impacto_en_entidad
 797+ A17F
 798+ A17F              ; A = "2" ok
 799+ A17F
 800+ A17F 3D               dec a
 801+ A180 28 03            jr z,Activa_Impacto_en_entidad
 802+ A182
 803+ A182              ; A = "$ff"
 804+ A182
 805+ A182 FE FD            cp $fd
 806+ A184 C0               ret nz
 807+ A185
 808+ A185              Activa_Impacto_en_entidad
 809+ A185
 810+ A185              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A185
 812+ A185 3E 02            ld a,2
 813+ A187 32 F2 8B         ld (Impacto),a
 814+ A18A
 815+ A18A              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A18A
 817+ A18A 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A18D 21 F5 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A190
 820+ A190 73               ld (hl),e
 821+ A191 23               inc hl
 822+ A192 72               ld (hl),d
 823+ A193
 824+ A193              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A193
 826+ A193 21 6C 8C         ld hl,Impacto2
 827+ A196 CB 9E            res 3,(hl)
 828+ A198
 829+ A198 C9               ret
 830+ A199
 831+ A199              ; --------------------------------------------------------------------------------------
 832+ A199              ;
 833+ A199              ;   13/10/24
 834+ A199              ;
 835+ A199
 836+ A199              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A199
 838+ A199              Limpia_album_de_pintado_disparos_Amadeus
 839+ A199
 840+ A199 2A 49 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A19C 06 06            ld b,6
 842+ A19E AF               xor a
 843+ A19F 77           1 ld (hl),a
 844+ A1A0 2C               inc l
 845+ A1A1 10 FC            djnz 1B
 846+ A1A3
 847+ A1A3 C9               ret
 848+ A1A4
 849+ A1A4              ; --------------------------------------------------------------------------------------
 850+ A1A4              ;
 851+ A1A4              ;   29/09/24
 852+ A1A4              ;
 853+ A1A4
 854+ A1A4              Calcula_bytes_pintado_disparos
 855+ A1A4
 856+ A1A4 2A 4D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1A7 45               ld b,l
 858+ A1A8 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1AB 7D               ld a,l
 860+ A1AC
 861+ A1AC 90               sub b
 862+ A1AD 32 53 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1B0
 864+ A1B0 C9               ret
 865+ A1B1
 866+ A1B1              ; --------------------------------------------------------------------------------------
 867+ A1B1              ;
 868+ A1B1              ;   26/10/24
 869+ A1B1              ;
 870+ A1B1              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1B1              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1B1              ;   _disparos que el álbum del FRAME actual).
 873+ A1B1
 874+ A1B1              Limpia_album_de_pintado_disparos_entidades
 875+ A1B1
 876+ A1B1 21 54 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1B4 7E               ld a,(hl)
 878+ A1B5 2D               dec l
 879+ A1B6 46               ld b,(hl)
 880+ A1B7 90               sub b
 881+ A1B8
 882+ A1B8 D8               ret c
 883+ A1B9 C8               ret z
 884+ A1BA
 885+ A1BA F5               push af
 886+ A1BB 80               add b
 887+ A1BC 77               ld (hl),a
 888+ A1BD F1               pop af
 889+ A1BE
 890+ A1BE              ; Clean.
 891+ A1BE
 892+ A1BE 47           2 ld b,a
 893+ A1BF AF               xor a
 894+ A1C0 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1C3 77           1 ld (hl),a
 896+ A1C4 23               inc hl
 897+ A1C5 10 FC            djnz 1B
 898+ A1C7
 899+ A1C7 C9               ret
 900+ A1C8
 901+ A1C8              ; --------------------------------------------------------------------------------------
 902+ A1C8              ;
 903+ A1C8              ;   29/09/24
 904+ A1C8              ;
 905+ A1C8
 906+ A1C8              Motor_Disparos_Amadeus
 907+ A1C8
 908+ A1C8 21 26 89         ld hl,Disparo_Amad+1
 909+ A1CB
 910+ A1CB 34               inc (hl)
 911+ A1CC 35               dec (hl)
 912+ A1CD
 913+ A1CD C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1CE
 915+ A1CE              ;   Esta caja contiene un disparo.
 916+ A1CE
 917+ A1CE CD D5 A1         call Consulta_Impacto
 918+ A1D1 CC EE A1         call z,Mueve_disparo_Amadeus
 919+ A1D4
 920+ A1D4 C9               ret
 921+ A1D5
 922+ A1D5              ; ----------------------
 923+ A1D5              ;
 924+ A1D5              ;
 925+ A1D5              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A1D5              ;
 927+ A1D5              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A1D5
 929+ A1D5
 930+ A1D5              Consulta_Impacto
 931+ A1D5
 932+ A1D5              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A1D5              ;   _sea lo más coherente posible.
 934+ A1D5
 935+ A1D5 E5               push hl
 936+ A1D6 2B               dec hl
 937+ A1D7 CD CA A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A1DA E1               pop hl
 939+ A1DB 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A1DC
 941+ A1DC C8               ret z
 942+ A1DD
 943+ A1DD 3A 6C 8C         ld a,(Impacto2)
 944+ A1E0 CB DF            set 3,a
 945+ A1E2 32 6C 8C         ld (Impacto2),a
 946+ A1E5
 947+ A1E5 E5               push hl
 948+ A1E6 CD B7 A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A1E9 E1               pop hl
 950+ A1EA CD 07 A2         call Elimina_disparo_Amadeus
 951+ A1ED
 952+ A1ED C9               ret
 953+ A1EE
 954+ A1EE              ; ----------------------
 955+ A1EE              ;
 956+ A1EE              ;
 957+ A1EE              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A1EE
 959+ A1EE              Mueve_disparo_Amadeus
 960+ A1EE
 961+ A1EE CD F2 90         call Extrae_address
 962+ A1F1
 963+ A1F1 CD B7 99         call PreviousScan
 964+ A1F4 CD B7 99         call PreviousScan
 965+ A1F7 CD B7 99         call PreviousScan
 966+ A1FA CD B7 99         call PreviousScan
 967+ A1FD
 968+ A1FD              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A1FD
 970+ A1FD 7C               ld a,h
 971+ A1FE D6 40            sub $40
 972+ A200 EB               ex de,hl
 973+ A201 38 04            jr c,Elimina_disparo_Amadeus
 974+ A203
 975+ A203               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A203
 977+ A203 73               ld (hl),e
 978+ A204 23               inc hl
 979+ A205 72               ld (hl),d
 980+ A206
 981+ A206 C9               ret
 982+ A207
 983+ A207              ; ----------------------
 984+ A207              ;
 985+ A207              ;   29/9/24
 986+ A207
 987+ A207              Elimina_disparo_Amadeus
 988+ A207
 989+ A207              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A207              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A207
 992+ A207              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A207              ;   	defw 0											; Puntero de impresión.
 994+ A207
 995+ A207 2B               dec hl
 996+ A208 2B               dec hl
 997+ A209
 998+ A209 AF               xor a
 999+ A20A 77               ld (hl),a
1000+ A20B 23               inc hl
1001+ A20C 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A20D
1003+ A20D 23               inc hl
1004+ A20E 77               ld (hl),a
1005+ A20F 23               inc hl
1006+ A210 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A211
1008+ A211 3E 01            ld a,1
1009+ A213 32 56 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A216
1011+ A216 CD 99 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A219
1013+ A219 AF               xor a
1014+ A21A 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A21B
1016+ A21B C9               ret
1017+ A21C
1018+ A21C              ; --------------------------------------------------------------------------------------
1019+ A21C              ;
1020+ A21C              ;   13/10/24
1021+ A21C              ;
1022+ A21C
1023+ A21C              Pinta_disparos_Amadeus
1024+ A21C
1025+ A21C 06 02            ld b,2
1026+ A21E ED 73 3D 8C      ld (Stack),sp
1027+ A222 ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A226 D1           3 pop de
1029+ A227 14               inc d
1030+ A228 15               dec d
1031+ A229 28 1C            jr z,1F
1032+ A22B E1               pop hl
1033+ A22C
1034+ A22C              Imprime_scanlines_en_pantalla
1035+ A22C
1036+ A22C              ; 1er scanline
1037+ A22C
1038+ A22C 1A               ld a,(de)
1039+ A22D AE               xor (hl)
1040+ A22E 77               ld (hl),a
1041+ A22F
1042+ A22F 1C               inc e
1043+ A230 2C               inc l
1044+ A231
1045+ A231 1A               ld a,(de)
1046+ A232 AE               xor (hl)
1047+ A233 77               ld (hl),a
1048+ A234
1049+ A234 1D               dec e
1050+ A235 E1               pop hl
1051+ A236
1052+ A236              ; 2º scanline
1053+ A236
1054+ A236 1A               ld a,(de)
1055+ A237 AE               xor (hl)
1056+ A238 77               ld (hl),a
1057+ A239
1058+ A239 1C               inc e
1059+ A23A 2C               inc l
1060+ A23B
1061+ A23B 1A               ld a,(de)
1062+ A23C AE               xor (hl)
1063+ A23D 77               ld (hl),a
1064+ A23E
1065+ A23E 1D               dec e
1066+ A23F
1067+ A23F 18 06            jr 1F
1068+ A241
1069+ A241 ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A245 18 DF            jr 3B
1071+ A247 10 F8        1 djnz 2B
1072+ A249 ED 7B 3D 8C      ld sp,(Stack)
1073+ A24D C9               ret
1074+ A24E
1075+ A24E              ; --------------------------------------------------------------------------------------
1076+ A24E              ;
1077+ A24E              ;   13/10/24
1078+ A24E              ;
1079+ A24E              ;   Modifica: HL,BC y DE.
1080+ A24E
1081+ A24E
1082+ A24E              Genera_datos_de_impresion_disparos_Amadeus
1083+ A24E
1084+ A24E ED 73 3D 8C      ld (Stack),sp
1085+ A252 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A255 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A256
1088+ A256 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A257 15               dec d
1090+ A258
1091+ A258 28 0E            jr z,Salida
1092+ A25A
1093+ A25A              Genera_scanlines_de_disparo_Amadeus
1094+ A25A
1095+ A25A E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A25B              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A25B ED 7B 49 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A25F
1099+ A25F C1               pop bc
1100+ A260 C1               pop bc
1101+ A261 C1               pop bc
1102+ A262
1103+ A262 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A263 CD B7 99         call PreviousScan
1105+ A266 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A267 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A268
1108+ A268              Salida
1109+ A268
1110+ A268 ED 7B 3D 8C      ld sp,(Stack)
1111+ A26C
1112+ A26C C9               ret
1113+ A26D
1114+ A26D              ; --------------------------------------------------------------------------------------
1115+ A26D              ;
1116+ A26D              ;   12/09/24
1117+ A26D              ;
1118+ A26D
1119+ A26D              Genera_disparo_Amadeus
1120+ A26D
1121+ A26D              ;*  Exclusiones.
1122+ A26D
1123+ A26D 3A 56 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A270 A7               and a
1125+ A271 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A272
1127+ A272 3D               dec a
1128+ A273 32 56 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A276
1130+ A276              Define_puntero_objeto_disparo
1131+ A276
1132+ A276              ;   Inicializamos contador.
1133+ A276
1134+ A276 06 00            ld b,0
1135+ A278
1136+ A278 2A BC 89         ld hl,(p.imp.amadeus)
1137+ A27B 2C               inc l
1138+ A27C
1139+ A27C 3E 80            ld a,$80
1140+ A27E BE               cp (hl)
1141+ A27F 28 0D            jr z,1F
1142+ A281
1143+ A281 04               inc b
1144+ A282
1145+ A282 3E 60            ld a,$60
1146+ A284 BE               cp (hl)
1147+ A285 28 07            jr z,1F
1148+ A287
1149+ A287
1150+ A287 04               inc b
1151+ A288
1152+ A288 3E 18            ld a,$18
1153+ A28A BE               cp (hl)
1154+ A28B 28 01            jr z,1F
1155+ A28D
1156+ A28D 04               inc b
1157+ A28E
1158+ A28E              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A28E
1160+ A28E              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A28E
1162+ A28E CD B7 99     1 call PreviousScan
1163+ A291
1164+ A291 78               ld a,b
1165+ A292 CB 3F            srl a
1166+ A294 28 03            jr z,4F
1167+ A296
1168+ A296              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A296 E5               push hl
1170+ A297 18 02            jr 5F
1171+ A299 2D           4 dec l
1172+ A29A E5               push hl
1173+ A29B              ; ---
1174+ A29B
1175+ A29B              ;   Calcula el Puntero_objeto del disparo.
1176+ A29B
1177+ A29B 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A29E 04               inc b
1179+ A29F 05               dec b
1180+ A2A0 28 04            jr z,2F
1181+ A2A2
1182+ A2A2              ;   Nos desplazamos por el índice de disparos.
1183+ A2A2
1184+ A2A2 2C           3 inc l
1185+ A2A3 2C               inc l
1186+ A2A4 10 FC            djnz 3B
1187+ A2A6
1188+ A2A6              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2A6 CD F2 90     2 call Extrae_address
1190+ A2A9 E5               push hl
1191+ A2AA              ; ---
1192+ A2AA
1193+ A2AA              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2AA              ; HL en el 1er .db de la caja.
1195+ A2AA
1196+ A2AA 21 25 89         ld hl,Disparo_Amad
1197+ A2AD
1198+ A2AD 06 02            ld b,2
1199+ A2AF
1200+ A2AF D1           6 pop de
1201+ A2B0 73               ld (hl),e
1202+ A2B1 23               inc hl
1203+ A2B2 72               ld (hl),d
1204+ A2B3 23               inc hl
1205+ A2B4
1206+ A2B4 10 F9            djnz 6B
1207+ A2B6
1208+ A2B6 C9               ret
1209+ A2B7
1210+ A2B7              Genera_coordenadas_de_disparo_Amadeus
1211+ A2B7
1212+ A2B7              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2B7              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2B7              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2B7
1216+ A2B7 CD F2 90         call Extrae_address
1217+ A2BA CD AE 94         call Genera_coordenadas
1218+ A2BD
1219+ A2BD 3D               dec a
1220+ A2BE
1221+ A2BE 21 6F 8C         ld hl,Coordenadas_disparo_certero
1222+ A2C1 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2C2 23               inc hl
1224+ A2C3 3A EF 8B         ld a,(Coordenada_X)
1225+ A2C6 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2C7
1227+ A2C7 AF               xor a
1228+ A2C8 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2C9
1230+ A2C9 C9               ret
1231+ A2CA
1232+ A2CA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2CA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2CA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2CA
1236+ A2CA              ; ----------------------------------------------
1237+ A2CA              ;
1238+ A2CA              ;   27/08/24
1239+ A2CA              ;
1240+ A2CA              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2CA              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2CA
1243+ A2CA              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2CA
1245+ A2CA              Extraccion_de_datos
1246+ A2CA
1247+ A2CA 13               inc de
1248+ A2CB 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2CC
1250+ A2CC 5E               ld e,(hl)
1251+ A2CD 23               inc hl
1252+ A2CE 56               ld d,(hl)
1253+ A2CF
1254+ A2CF 23               inc hl
1255+ A2D0
1256+ A2D0 4E               ld c,(hl)
1257+ A2D1 23               inc hl
1258+ A2D2 46               ld b,(hl)
1259+ A2D3
1260+ A2D3 C5               push bc
1261+ A2D4 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A2D5
1263+ A2D5              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A2D5
1265+ A2D5 CD B7 99         call PreviousScan
1266+ A2D8 CD B7 99         call PreviousScan
1267+ A2DB
1268+ A2DB              Detecta_impacto_
1269+ A2DB
1270+ A2DB 1A               ld a,(de)
1271+ A2DC A6               and (hl)
1272+ A2DD C0               ret nz
1273+ A2DE
1274+ A2DE 13               inc de
1275+ A2DF 23               inc hl
1276+ A2E0
1277+ A2E0 1A               ld a,(de)
1278+ A2E1 A6               and (hl)
1279+ A2E2 C9               ret
1280+ A2E3
1281+ A2E3              ; -------------------------------------------------------------------------------------------------------------
1282+ A2E3              ;
1283+ A2E3              ;   8/8/24
1284+ A2E3              ;
1285+ A2E3              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A2E3              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A2E3              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A2E3              ;
1289+ A2E3              ;   MODIFICA: HL,DE,BC y A.
1290+ A2E3              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A2E3              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A2E3
1293+ A2E3              Colision_Entidad_Amadeus
1294+ A2E3
1295+ A2E3              ; Posible contacto de entidad con Amadeus. ?????
1296+ A2E3
1297+ A2E3              ; Exclusiones:
1298+ A2E3
1299+ A2E3 3A 8F 8C         ld a,(Shield)
1300+ A2E6 A7               and a
1301+ A2E7 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A2E8
1303+ A2E8 21 65 8C         ld hl,Ctrl_3
1304+ A2EB CB 76            bit 6,(hl)
1305+ A2ED C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A2EE
1307+ A2EE 21 6C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A2F1 CB 56            bit 2,(hl)
1309+ A2F3 C0               ret nz
1310+ A2F4
1311+ A2F4 3A F0 8B     	ld a,(Coordenada_y)
1312+ A2F7 FE 14        	cp $14
1313+ A2F9 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A2FA
1315+ A2FA 3A BB 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A2FD A7               and a
1317+ A2FE C0               ret nz
1318+ A2FF
1319+ A2FF              Genera_coordenadas_X
1320+ A2FF
1321+ A2FF              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A2FF              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A2FF
1324+ A2FF              ;   Limpiamos almacenes.
1325+ A2FF
1326+ A2FF              ;    call Limpia_Coordenadas_X
1327+ A2FF
1328+ A2FF              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A2FF
1330+ A2FF 21 71 8C         ld hl,Coordenadas_X_Entidad
1331+ A302 3A EF 8B         ld a,(Coordenada_X)
1332+ A305 CD 27 A3         call Guarda_coordenadas_X
1333+ A308
1334+ A308              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A308
1336+ A308 3A B8 89         ld a,(CX_Amadeus)
1337+ A30B CD 27 A3         call Guarda_coordenadas_X
1338+ A30E CD 3B A3         call Compara_coordenadas_X
1339+ A311 C0               ret nz
1340+ A312
1341+ A312 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A314 32 F2 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A317
1344+ A317 2A 2E 8C         ld hl,(Puntero_store_caja)
1345+ A31A 2C               inc l
1346+ A31B 2C               inc l
1347+ A31C 2C               inc l
1348+ A31D 2C               inc l
1349+ A31E 22 6D 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A321
1351+ A321 21 6C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A324 CB D6            set 2,(hl)
1353+ A326
1354+ A326 C9               ret
1355+ A327
1356+ A327               ; ----- ----- ----- ----- -----
1357+ A327
1358+ A327 77           Guarda_coordenadas_X ld (hl),a
1359+ A328 3C               inc a
1360+ A329 2C               inc l
1361+ A32A 77               ld (hl),a
1362+ A32B 3C               inc a
1363+ A32C 2C               inc l
1364+ A32D 77               ld (hl),a
1365+ A32E 2C               inc l
1366+ A32F C9               ret
1367+ A330
1368+ A330 AF           Limpia_Coordenadas_X xor a
1369+ A331 06 06            ld b,6
1370+ A333 21 74 8C         ld hl,Coordenadas_X_Amadeus
1371+ A336 77           1 ld (hl),a
1372+ A337 23               inc hl
1373+ A338 10 FC            djnz 1B
1374+ A33A C9               ret
1375+ A33B
1376+ A33B              ; ----- ----- ----- ----- -----
1377+ A33B
1378+ A33B              Compara_coordenadas_X
1379+ A33B
1380+ A33B DD 21 71 8C      ld ix,Coordenadas_X_Entidad
1381+ A33F DD 7E 00         ld a,(ix+0)
1382+ A342 CD 50 A3         call Comparando
1383+ A345 C8               ret z
1384+ A346
1385+ A346 3C               inc a
1386+ A347 CD 5F A3         call Comparando_1
1387+ A34A C8               ret z
1388+ A34B
1389+ A34B 3C               inc a
1390+ A34C CD 5F A3         call Comparando_1
1391+ A34F C9               ret
1392+ A350
1393+ A350              ; ----- ----- ----- ----- -----
1394+ A350              ;
1395+ A350              ;   4/12/23
1396+ A350              ;
1397+ A350              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A350
1399+ A350              Comparando
1400+ A350
1401+ A350 DD 2C            inc ixl
1402+ A352 DD 2C            inc ixl
1403+ A354 DD 2C            inc ixl
1404+ A356
1405+ A356 DD 46 00         ld b,(ix+0)
1406+ A359 DD 4E 01         ld c,(ix+1)
1407+ A35C DD 56 02         ld d,(ix+2)
1408+ A35F
1409+ A35F B8           Comparando_1 cp b
1410+ A360 C8               ret z
1411+ A361 B9               cp c
1412+ A362 C8               ret z
1413+ A363 BA               cp d
1414+ A364 C9               ret
1415+ A365
1416+ A365              ; -----------------------------------------------------------------------
1417+ A365              ;
1418+ A365              ;   04/7/24
1419+ A365              ;
1420+ A365
1421+ A365              Detecta_colision_nave_entidad
1422+ A365
1423+ A365              ; Exclusiones:
1424+ A365
1425+ A365              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A365
1427+ A365 21 6C 8C     	ld hl,Impacto2
1428+ A368 CB 56        	bit 2,(hl)
1429+ A36A C8           	ret z
1430+ A36B
1431+ A36B              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A36B
1433+ A36B 2A BE 89         ld hl,(Pamm_Amadeus)
1434+ A36E CD F2 90         call Extrae_address
1435+ A371 54               ld d,h
1436+ A372 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A373
1438+ A373 2A BC 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A376 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A378 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A37B
1442+ A37B C5           1 push bc
1443+ A37C 06 03            ld b,3
1444+ A37E E5               push hl
1445+ A37F
1446+ A37F              ; .db
1447+ A37F
1448+ A37F 1A           3 ld a,(de)
1449+ A380 A7               and a
1450+ A381 20 03            jr nz,4F
1451+ A383
1452+ A383 2C               inc l
1453+ A384 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A386
1455+ A386 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A388 28 04            jr z,2F
1457+ A38A
1458+ A38A              ; Impacto.
1459+ A38A FD 2D            dec iyl
1460+ A38C 28 22            jr z,5F
1461+ A38E
1462+ A38E 1C           2 inc e
1463+ A38F 10 EE            djnz 3B
1464+ A391
1465+ A391 E1               pop hl
1466+ A392
1467+ A392              ; Hay salto de línea en el puntero de impresión ???
1468+ A392
1469+ A392 7C               ld a,h
1470+ A393 D6 57            sub $57
1471+ A395 20 0A            jr nz,6F
1472+ A397
1473+ A397              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A397
1475+ A397 2A BC 89         ld hl,(p.imp.amadeus)
1476+ A39A 3E 20            ld a,$20
1477+ A39C A7               and a
1478+ A39D 85               add l
1479+ A39E 6F               ld l,a
1480+ A39F 18 01            jr 7F
1481+ A3A1
1482+ A3A1 24           6 inc h
1483+ A3A2
1484+ A3A2 C1           7 pop bc
1485+ A3A3 10 D6            djnz 1B
1486+ A3A5
1487+ A3A5              ;   Fin de la comparativa.
1488+ A3A5
1489+ A3A5              ;   NO HAY COLISIÓN !!!!!.
1490+ A3A5              ;
1491+ A3A5              ;   .db (Impacto) de Amadeus a "0".
1492+ A3A5              ;   RES el bit2 de (Impacto2).
1493+ A3A5              ;
1494+ A3A5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3A5              ;   Lo colocamos a "0".
1496+ A3A5
1497+ A3A5 21 6C 8C         ld hl,Impacto2
1498+ A3A8 CB 96            res 2,(hl)
1499+ A3AA 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3AD 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3AF C9               ret
1502+ A3B0
1503+ A3B0              ;   COLISIÓN !!!!!.
1504+ A3B0              ;
1505+ A3B0              ;   .db (Impacto) de Amadeus a "1".
1506+ A3B0              ;   SET el bit3 de (Impacto2).
1507+ A3B0              ;
1508+ A3B0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3B0
1510+ A3B0 E1           5 pop hl
1511+ A3B1 C1               pop bc
1512+ A3B2
1513+ A3B2 21 BB 89         ld hl,Impacto_Amadeus
1514+ A3B5 36 01            ld (hl),1
1515+ A3B7 21 6C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3BA CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3BC
1518+ A3BC 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3BF 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3C2
1521+ A3C2 23               inc hl
1522+ A3C3 23               inc hl
1523+ A3C4 23               inc hl
1524+ A3C5
1525+ A3C5 73               ld (hl),e
1526+ A3C6 23               inc hl
1527+ A3C7 72               ld (hl),d
1528+ A3C8
1529+ A3C8              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3C8
1531+ A3C8 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3CB 21 BE 89         ld hl,Pamm_Amadeus
1533+ A3CE
1534+ A3CE 73               ld (hl),e
1535+ A3CF 23               inc hl
1536+ A3D0 72               ld (hl),d
1537+ A3D1
1538+ A3D1 C9               ret
1539+ A3D2
1540+ A3D2
1541+ A3D2
# file closed: Disparo.asm
2068  A3D2
2069  A3D2              	SAVESNA "Pruebas.sna", START
2070  A3D2
2071  A3D2
2072  A3D2
2073  A3D2
# file closed: Banco_de_pruebas.asm
