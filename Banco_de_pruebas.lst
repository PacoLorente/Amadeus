# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 DB 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD 49 8E     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD 59 8E     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 E5 88     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B DB 88  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 11/01/24
   6+ 84EC
   7+ 84EC 40 9D        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE 00 00        	defw 0
   9+ 84F0
  10+ 84F0              ; Control. %00000001 00000001
  11+ 84F0              ;
  12+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  13+ 84F0              ;                    _ hacen las entidades hacia abajo.
  14+ 84F0              ;
  15+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  16+ 84F0
  17+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  18+ 84F2 FE 84        	defw Disparo_2A
  19+ 84F4 06 85        	defw Disparo_3A
  20+ 84F6
  21+ 84F6 00 00        Disparo_1A defw 0									; Control.
  22+ 84F8 00 00        	defw 0											; Puntero objeto.
  23+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  24+ 84FC 00 00        	defw 0											; Rutina de impresión.
  25+ 84FE
  26+ 84FE 00 00        Disparo_2A defw 0									; Control.
  27+ 8500 00 00        	defw 0											; Puntero objeto.
  28+ 8502 00 00        	defw 0											; Puntero de impresión.
  29+ 8504 00 00        	defw 0											; Rutina de impresión.
  30+ 8506
  31+ 8506 00 00        Disparo_3A defw 0
  32+ 8508
  33+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  34+ 850A 26 85        	defw Disparo_2
  35+ 850C 2E 85        	defw Disparo_3
  36+ 850E 36 85        	defw Disparo_4
  37+ 8510 3E 85        	defw Disparo_5
  38+ 8512 46 85        	defw Disparo_6
  39+ 8514 4E 85        	defw Disparo_7
  40+ 8516 56 85        	defw Disparo_8
  41+ 8518 5E 85        	defw Disparo_9
  42+ 851A 66 85        	defw Disparo_10
  43+ 851C 6E 85        	defw Disparo_11
  44+ 851E
  45+ 851E 00 00        Disparo_1 defw 0									; Control.
  46+ 8520 00 00        	defw 0											; Puntero objeto.
  47+ 8522 00 00        	defw 0											; Puntero de impresión.
  48+ 8524 00 00        	defw 0											; Rutina de impresión.
  49+ 8526
  50+ 8526 00 00        Disparo_2 defw 0									; Control.
  51+ 8528 00 00        	defw 0											; Puntero objeto.
  52+ 852A 00 00        	defw 0											; Puntero de impresión.
  53+ 852C 00 00        	defw 0											; Rutina de impresión.
  54+ 852E
  55+ 852E 00 00        Disparo_3 defw 0									; Control.
  56+ 8530 00 00        	defw 0											; Puntero objeto.
  57+ 8532 00 00        	defw 0											; Puntero de impresión.
  58+ 8534 00 00        	defw 0											; Rutina de impresión.
  59+ 8536
  60+ 8536 00 00        Disparo_4 defw 0									; Control.
  61+ 8538 00 00        	defw 0											; Puntero objeto.
  62+ 853A 00 00        	defw 0											; Puntero de impresión.
  63+ 853C 00 00        	defw 0											; Rutina de impresión.
  64+ 853E
  65+ 853E 00 00        Disparo_5 defw 0									; Control.
  66+ 8540 00 00        	defw 0											; Puntero objeto.
  67+ 8542 00 00        	defw 0											; Puntero de impresión.
  68+ 8544 00 00        	defw 0											; Rutina de impresión.
  69+ 8546
  70+ 8546 00 00        Disparo_6 defw 0									; Control.
  71+ 8548 00 00        	defw 0											; Puntero objeto.
  72+ 854A 00 00        	defw 0											; Puntero de impresión.
  73+ 854C 00 00        	defw 0											; Rutina de impresión.
  74+ 854E
  75+ 854E 00 00        Disparo_7 defw 0									; Control.
  76+ 8550 00 00        	defw 0											; Puntero objeto.
  77+ 8552 00 00        	defw 0											; Puntero de impresión.
  78+ 8554 00 00        	defw 0											; Rutina de impresión.
  79+ 8556
  80+ 8556 00 00        Disparo_8 defw 0									; Control.
  81+ 8558 00 00        	defw 0											; Puntero objeto.
  82+ 855A 00 00        	defw 0											; Puntero de impresión.
  83+ 855C 00 00        	defw 0											; Rutina de impresión.
  84+ 855E
  85+ 855E 00 00        Disparo_9 defw 0									; Control.
  86+ 8560 00 00        	defw 0											; Puntero objeto.
  87+ 8562 00 00        	defw 0											; Puntero de impresión.
  88+ 8564 00 00        	defw 0											; Rutina de impresión.
  89+ 8566
  90+ 8566 00 00        Disparo_10 defw 0									; Control.
  91+ 8568 00 00        	defw 0											; Puntero objeto.
  92+ 856A 00 00        	defw 0											; Puntero de impresión.
  93+ 856C 00 00        	defw 0											; Rutina de impresión.
  94+ 856E
  95+ 856E 00 00        Disparo_11 defw 0
  96+ 8570
  97+ 8570              ; -------------------------------------------------------------------------------------
  98+ 8570              ;
  99+ 8570              ;	Índice de cajas de entidades.
 100+ 8570              ;
 101+ 8570              ;	9/1/24
 102+ 8570              ;
 103+ 8570
 104+ 8570              Indice_de_cajas_de_entidades						; ! 56 Bytes por entidad.
 105+ 8570
 106+ 8570 C6 85        	defw Caja_1
 107+ 8572 FE 85        	defw Caja_2
 108+ 8574 36 86        	defw Caja_3
 109+ 8576 6E 86        	defw Caja_4
 110+ 8578 A6 86        	defw Caja_5
 111+ 857A DE 86        	defw Caja_6
 112+ 857C 16 87        	defw Caja_7
 113+ 857E
 114+ 857E 00 00        	defw 0
 115+ 8580 00 00        	defw 0
 116+ 8582
 117+ 8582              ; ---------- ---------- ---------- ---------- ----------
 118+ 8582
 119+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 120+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 121+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 122+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 123+ 858B
 124+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 125+ 858C
 126+ 858C 05           	db %00000101										; (Attr).
 127+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 128+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 129+ 8591
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595
 133+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 134+ 8597 04           	db 4 												; (Cuad_objeto).
 135+ 8598 02 02 00 00  	db 2,2,0,0											; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 136+ 859C
 137+ 859C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 138+ 859D
 139+ 859D 00 00 00...  	ds 6												; Variables_de_borrado
 140+ 85A3
 141+ 85A3 00 00        	db 0,0												; Variables_de_pintado
 142+ 85A5 00 00        	defw 0												;	" " " " " " "
 143+ 85A7 00 00        	defw 0												;	" " " " " " "
 144+ 85A9 00 00 00 00  	db 0,0,0,0											;	" " " " " " "
 145+ 85AD
 146+ 85AD 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 147+ 85AF
 148+ 85AF 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 149+ 85B1 00 00        	defw 0 												; Contador_de_mov_masticados
 150+ 85B3
 151+ 85B3 40           	db $40												; (Ctrl_0).
 152+ 85B4
 153+ 85B4 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 153+ 85B8 00 00
 154+ 85BA 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 155+ 85BD
 156+ 85BD 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 157+ 85BF 00           	db 0												; (Cola_de_desplazamiento).
 158+ 85C0
 159+ 85C0 00           	db 0 												; (Columnas).
 160+ 85C1 00 00        	defw 0												; (Limite_horizontal).
 161+ 85C3 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 162+ 85C6
 163+ 85C6              ; ---------- ---------- ---------- ---------- ----------
 164+ 85C6
 165+ 85C6 00 00 00     Caja_1 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 166+ 85C9 00 00        	defw 0											; (Posicion_actual).
 167+ 85CB 00 00        	defw 0 											; (Puntero_objeto).
 168+ 85CD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 169+ 85D0
 170+ 85D0 00           	db %00000000 									; (Attr).
 171+ 85D1
 172+ 85D1 00 00        	defw 0											; (Indice_Sprite_der).
 173+ 85D3 00 00        	defw 0											; (Indice_Sprite_izq).
 174+ 85D5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 175+ 85D7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 176+ 85D9
 177+ 85D9 00 00        	defw 0											; (Posicion_inicio).
 178+ 85DB 00           	db 0											; (Cuad_objeto).
 179+ 85DC
 180+ 85DC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 181+ 85E0
 182+ 85E0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 183+ 85E1
 184+ 85E1 00 00 00...  	ds 6											; Variables_de_borrado
 185+ 85E7
 186+ 85E7 00 00        	db 0,0											; Variables_de_pintado
 187+ 85E9 00 00        	defw 0											;	" " " " " " "
 188+ 85EB 00 00        	defw 0											;	" " " " " " "
 189+ 85ED 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 190+ 85F1
 191+ 85F1 00 00        	defw 0 											; Puntero_de_impresion.
 192+ 85F3
 193+ 85F3 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 194+ 85F5 00 00        	defw 0 											; Contador_de_mov_masticados
 195+ 85F7
 196+ 85F7 00           	db 0											; (Ctrl_0).
 197+ 85F8
 198+ 85F8 00           	db 0 											; (Columnas).
 199+ 85F9 00 00        	defw 0											; (Limite_horizontal).
 200+ 85FB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 201+ 85FE
 202+ 85FE              ; ---------- ---------- ---------- ---------- ----------
 203+ 85FE
 204+ 85FE 00 00 00     Caja_2 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 205+ 8601 00 00        	defw 0											; (Posicion_actual).
 206+ 8603 00 00        	defw 0 											; (Puntero_objeto).
 207+ 8605 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 208+ 8608
 209+ 8608 00           	db %00000000 									; (Attr).
 210+ 8609
 211+ 8609 00 00        	defw 0											; (Indice_Sprite_der).
 212+ 860B 00 00        	defw 0											; (Indice_Sprite_izq).
 213+ 860D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 214+ 860F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 215+ 8611
 216+ 8611 00 00        	defw 0											; (Posicion_inicio).
 217+ 8613 00           	db 0											; (Cuad_objeto).
 218+ 8614
 219+ 8614 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 220+ 8618
 221+ 8618 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 222+ 8619
 223+ 8619 00 00 00...  	ds 6											; Variables_de_borrado
 224+ 861F
 225+ 861F 00 00        	db 0,0											; Variables_de_pintado
 226+ 8621 00 00        	defw 0											;	" " " " " " "
 227+ 8623 00 00        	defw 0											;	" " " " " " "
 228+ 8625 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 229+ 8629
 230+ 8629 00 00        	defw 0 											; Puntero_de_impresion.
 231+ 862B
 232+ 862B 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 233+ 862D 00 00        	defw 0 											; Contador_de_mov_masticados
 234+ 862F
 235+ 862F 00           	db 0											; (Ctrl_0).
 236+ 8630
 237+ 8630 00           	db 0 											; (Columnas).
 238+ 8631 00 00        	defw 0											; (Limite_horizontal).
 239+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 240+ 8636
 241+ 8636              ; ---------- ---------- ---------- ---------- ----------
 242+ 8636
 243+ 8636 00 00 00     Caja_3 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 244+ 8639 00 00        	defw 0											; (Posicion_actual).
 245+ 863B 00 00        	defw 0 											; (Puntero_objeto).
 246+ 863D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 247+ 8640
 248+ 8640 00           	db %00000000 									; (Attr).
 249+ 8641
 250+ 8641 00 00        	defw 0											; (Indice_Sprite_der).
 251+ 8643 00 00        	defw 0											; (Indice_Sprite_izq).
 252+ 8645 00 00        	defw 0											; (Puntero_DESPLZ_der).
 253+ 8647 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 254+ 8649
 255+ 8649 00 00        	defw 0											; (Posicion_inicio).
 256+ 864B 00           	db 0											; (Cuad_objeto).
 257+ 864C
 258+ 864C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 259+ 8650
 260+ 8650 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 261+ 8651
 262+ 8651 00 00 00...  	ds 6											; Variables_de_borrado
 263+ 8657
 264+ 8657 00 00        	db 0,0											; Variables_de_pintado
 265+ 8659 00 00        	defw 0											;	" " " " " " "
 266+ 865B 00 00        	defw 0											;	" " " " " " "
 267+ 865D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 268+ 8661
 269+ 8661 00 00        	defw 0 											; Puntero_de_impresion.
 270+ 8663
 271+ 8663 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 272+ 8665 00 00        	defw 0 											; Contador_de_mov_masticados
 273+ 8667
 274+ 8667 00           	db 0											; (Ctrl_0).
 275+ 8668
 276+ 8668 00           	db 0 											; (Columnas).
 277+ 8669 00 00        	defw 0											; (Limite_horizontal).
 278+ 866B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 279+ 866E
 280+ 866E              ; ---------- ---------- ---------- ---------- ----------
 281+ 866E
 282+ 866E 00 00 00     Caja_4 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 283+ 8671 00 00        	defw 0											; (Posicion_actual).
 284+ 8673 00 00        	defw 0 											; (Puntero_objeto).
 285+ 8675 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 286+ 8678
 287+ 8678 00           	db %00000000 									; (Attr).
 288+ 8679
 289+ 8679 00 00        	defw 0											; (Indice_Sprite_der).
 290+ 867B 00 00        	defw 0											; (Indice_Sprite_izq).
 291+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 292+ 867F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 293+ 8681
 294+ 8681 00 00        	defw 0											; (Posicion_inicio).
 295+ 8683 00           	db 0											; (Cuad_objeto).
 296+ 8684
 297+ 8684 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 298+ 8688
 299+ 8688 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 300+ 8689
 301+ 8689 00 00 00...  	ds 6											; Variables_de_borrado
 302+ 868F
 303+ 868F 00 00        	db 0,0											; Variables_de_pintado
 304+ 8691 00 00        	defw 0											;	" " " " " " "
 305+ 8693 00 00        	defw 0											;	" " " " " " "
 306+ 8695 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 307+ 8699
 308+ 8699 00 00        	defw 0 											; Puntero_de_impresion.
 309+ 869B
 310+ 869B 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 311+ 869D 00 00        	defw 0 											; Contador_de_mov_masticados
 312+ 869F
 313+ 869F 00           	db 0											; (Ctrl_0).
 314+ 86A0
 315+ 86A0 00           	db 0 											; (Columnas).
 316+ 86A1 00 00        	defw 0											; (Limite_horizontal).
 317+ 86A3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 318+ 86A6
 319+ 86A6              ; ---------- ---------- ---------- ---------- ----------
 320+ 86A6
 321+ 86A6 00 00 00     Caja_5 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 322+ 86A9 00 00        	defw 0											; (Posicion_actual).
 323+ 86AB 00 00        	defw 0 											; (Puntero_objeto).
 324+ 86AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 325+ 86B0
 326+ 86B0 00           	db %00000000 									; (Attr).
 327+ 86B1
 328+ 86B1 00 00        	defw 0											; (Indice_Sprite_der).
 329+ 86B3 00 00        	defw 0											; (Indice_Sprite_izq).
 330+ 86B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 331+ 86B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 332+ 86B9
 333+ 86B9 00 00        	defw 0											; (Posicion_inicio).
 334+ 86BB 00           	db 0											; (Cuad_objeto).
 335+ 86BC
 336+ 86BC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 337+ 86C0
 338+ 86C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 339+ 86C1
 340+ 86C1 00 00 00...  	ds 6											; Variables_de_borrado
 341+ 86C7
 342+ 86C7 00 00        	db 0,0											; Variables_de_pintado
 343+ 86C9 00 00        	defw 0											;	" " " " " " "
 344+ 86CB 00 00        	defw 0											;	" " " " " " "
 345+ 86CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 346+ 86D1
 347+ 86D1 00 00        	defw 0 											; Puntero_de_impresion.
 348+ 86D3
 349+ 86D3 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 350+ 86D5 00 00        	defw 0 											; Contador_de_mov_masticados
 351+ 86D7
 352+ 86D7 00           	db 0											; (Ctrl_0).
 353+ 86D8
 354+ 86D8 00           	db 0 											; (Columnas).
 355+ 86D9 00 00        	defw 0											; (Limite_horizontal).
 356+ 86DB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 357+ 86DE
 358+ 86DE              ; ---------- ---------- ---------- ---------- ----------
 359+ 86DE
 360+ 86DE 00 00 00     Caja_6 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 361+ 86E1 00 00        	defw 0											; (Posicion_actual).
 362+ 86E3 00 00        	defw 0 											; (Puntero_objeto).
 363+ 86E5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 364+ 86E8
 365+ 86E8 00           	db %00000000 									; (Attr).
 366+ 86E9
 367+ 86E9 00 00        	defw 0											; (Indice_Sprite_der).
 368+ 86EB 00 00        	defw 0											; (Indice_Sprite_izq).
 369+ 86ED 00 00        	defw 0											; (Puntero_DESPLZ_der).
 370+ 86EF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 371+ 86F1
 372+ 86F1 00 00        	defw 0											; (Posicion_inicio).
 373+ 86F3 00           	db 0											; (Cuad_objeto).
 374+ 86F4
 375+ 86F4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 376+ 86F8
 377+ 86F8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 378+ 86F9
 379+ 86F9 00 00 00...  	ds 6											; Variables_de_borrado
 380+ 86FF
 381+ 86FF 00 00        	db 0,0											; Variables_de_pintado
 382+ 8701 00 00        	defw 0											;	" " " " " " "
 383+ 8703 00 00        	defw 0											;	" " " " " " "
 384+ 8705 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 385+ 8709
 386+ 8709 00 00        	defw 0 											; Puntero_de_impresion.
 387+ 870B
 388+ 870B 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 389+ 870D 00 00        	defw 0 											; Contador_de_mov_masticados
 390+ 870F
 391+ 870F 00           	db 0											; (Ctrl_0).
 392+ 8710
 393+ 8710 00           	db 0 											; (Columnas).
 394+ 8711 00 00        	defw 0											; (Limite_horizontal).
 395+ 8713 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 396+ 8716
 397+ 8716              ; ---------- ---------- ---------- ---------- ----------
 398+ 8716
 399+ 8716 00 00 00     Caja_7 db 0,0,0										; (Tipo) / (Filas) / (Columns).
 400+ 8719 00 00        	defw 0											; (Posicion_actual).
 401+ 871B 00 00        	defw 0 											; (Puntero_objeto).
 402+ 871D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 403+ 8720
 404+ 8720 00           	db %00000000 									; (Attr).
 405+ 8721
 406+ 8721 00 00        	defw 0											; (Indice_Sprite_der).
 407+ 8723 00 00        	defw 0											; (Indice_Sprite_izq).
 408+ 8725 00 00        	defw 0											; (Puntero_DESPLZ_der).
 409+ 8727 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 410+ 8729
 411+ 8729 00 00        	defw 0											; (Posicion_inicio).
 412+ 872B 00           	db 0											; (Cuad_objeto).
 413+ 872C
 414+ 872C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 415+ 8730
 416+ 8730 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 417+ 8731
 418+ 8731 00 00 00...  	ds 6											; Variables_de_borrado
 419+ 8737
 420+ 8737 00 00        	db 0,0											; Variables_de_pintado
 421+ 8739 00 00        	defw 0											;	" " " " " " "
 422+ 873B 00 00        	defw 0											;	" " " " " " "
 423+ 873D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 424+ 8741
 425+ 8741 00 00        	defw 0 											; Puntero_de_impresion.
 426+ 8743
 427+ 8743 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 428+ 8745 00 00        	defw 0 											; Contador_de_mov_masticados
 429+ 8747
 430+ 8747 00           	db 0											; (Ctrl_0).
 431+ 8748
 432+ 8748 00           	db 0 											; (Columnas).
 433+ 8749 00 00        	defw 0											; (Limite_horizontal).
 434+ 874B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 435+ 874E
 436+ 874E              ; -------------------------------------------------------------------------------------
 437+ 874E              ;
 438+ 874E              ;	11/1/24
 439+ 874E              ;
 440+ 874E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 441+ 874E              ;
 442+ 874E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 443+ 874E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 444+ 874E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 445+ 874E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 446+ 874E
 447+ 874E              Indice_de_entidades
 448+ 874E
 449+ 874E 52 87        	defw Entidad_1
 450+ 8750 64 87        	defw Entidad_2
 451+ 8752
 452+ 8752              ;	BADSAT, (Satélite malvado).
 453+ 8752
 454+ 8752 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 455+ 8755 04           	db %00000100										; (Attr).
 456+ 8756 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 457+ 8758 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 458+ 875A 03 40        	defw $4003	                             	    	; (Posicion_inicio).
 459+ 875C 01           	db 1												; (Cuad_objeto).
 460+ 875D 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 461+ 8761 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 462+ 8763 03           	db 3												; (Frames_explosion).
 463+ 8764
 464+ 8764 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 465+ 8767 02           	db %00000010										; (Attr).
 466+ 8768 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 467+ 876A 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 468+ 876C 40 50        	defw $5040                                      	; (Posicion_inicio).
 469+ 876E 01           	db 1												; (Cuad_objeto).
 470+ 876F 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 8773 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 472+ 8775 03           	db 3												; (Frames_explosion).
# file closed: Cajas_y_disparos.asm
 105  8776              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8776              ; 13/05/23
   2+ 8776
   3+ 8776              Indice_de_niveles
   4+ 8776
   5+ 8776 84 87        	defw Nivel_1
   6+ 8778 87 87        	defw Nivel_2
   7+ 877A 94 87        	defw Nivel_3
   8+ 877C A4 87        	defw Nivel_4
   9+ 877E B6 87        	defw Nivel_5
  10+ 8780              ;	...
  11+ 8780              ;	...
  12+ 8780              ;	+ Niveles ...
  13+ 8780
  14+ 8780 00 00        	defw 0
  15+ 8782 00 00        	defw 0
  16+ 8784
  17+ 8784 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 8785 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8787 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8788 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 878C 01 02
  21+ 878E 02 01 01 01  	db 2,1,1,1,1,2
  21+ 8792 01 02
  22+ 8794 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 8795 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 8799 01
  24+ 879A 03 01 01 01  	db 3,1,1,1,1
  24+ 879E 01
  25+ 879F 03 01 01 01  	db 3,1,1,1,1
  25+ 87A3 01
  26+ 87A4 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87A5 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87A9 01
  28+ 87AA 04 01 01 01  	db 4,1,1,1,1
  28+ 87AE 01
  29+ 87AF 04 01 01 01  	db 4,1,1,1,1
  29+ 87B3 01
  30+ 87B4 02 03        	db 2,3
  31+ 87B6 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87B7 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87BB 01
  33+ 87BC 05 01 01 01  	db 5,1,1,1,1
  33+ 87C0 01
  34+ 87C1 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87C5 01
  35+ 87C6 05 01 01 01  	db 5,1,1,1,1
  35+ 87CA 01
  36+ 87CB
  37+ 87CB              ;---------------------------------------------------------------------------------------------------------------
  38+ 87CB              ;
  39+ 87CB              ;   5/1/24
  40+ 87CB              ;
  41+ 87CB              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87CB              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87CB              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87CB              ;	_en la caja DRAW correspondiente.
  45+ 87CB              ;
  46+ 87CB              ;	MODIFICA: HL,DE y A.
  47+ 87CB              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87CB
  49+ 87CB              Inicializa_Punteros_de_nivel
  50+ 87CB
  51+ 87CB 21 76 87     	ld hl,Indice_de_niveles
  52+ 87CE 22 03 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 87D1 CD DB 8C     	call Extrae_address
  54+ 87D4 7E           	ld a,(hl)
  55+ 87D5 32 CF 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 87D8 23           	inc hl
  57+ 87D9 22 05 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 87DC C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 87DD
  60+ 87DD              ;---------------------------------------------------------------------------------------------------------------
  61+ 87DD              ;
  62+ 87DD              ;   5/1/24
  63+ 87DD              ;
  64+ 87DD              ;	Destruye A,BC,HL,DE
  65+ 87DD
  66+ 87DD              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES con un tipo de entidad.
  67+ 87DD              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  68+ 87DD
  69+ 87DD              Prepara_cajas_de_entidades
  70+ 87DD
  71+ 87DD              ; Preparamos los punteros de las cajas de entidades:
  72+ 87DD
  73+ 87DD 21 70 85     	ld hl,Indice_de_cajas_de_entidades
  74+ 87E0 CD DB 8C     	call Extrae_address
  75+ 87E3 CD 20 88     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  76+ 87E6              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  77+ 87E6
  78+ 87E6 CD 63 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 87E9
  80+ 87E9 2A 05 89     	ld hl,(Datos_de_nivel)
  81+ 87EC
  82+ 87EC              ; En este punto:
  83+ 87EC              ;
  84+ 87EC              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  85+ 87EC              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  86+ 87EC
  87+ 87EC C5           1 push bc 										; Guardo el nº de cajas a rellenar.
  88+ 87ED
  89+ 87ED 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  90+ 87EE CD 0E 88     	call Calcula_salto_en_BC					; Calcula salto para situarnos en los "datos" de la entidad correcta del indice de entidades.
  91+ 87F1
  92+ 87F1 21 4E 87     	ld hl,Indice_de_entidades
  93+ 87F4 CD 16 88     	call Situa_en_datos_de_entidad				; Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
  94+ 87F7              ;												; Actualiza (Datos_de_entidad) con esa dirección.
  95+ 87F7
  96+ 87F7 CD 2A 88     	call Datos_de_entidad_a_caja				; Vuelca los datos de la entidad en la caja.
  97+ 87FA
  98+ 87FA 2A CD 88     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
  99+ 87FD CD DB 8C     	call Extrae_address
 100+ 8800 CD 20 88     	call Avanza_caja_de_entidades
 101+ 8803
 102+ 8803 2A 05 89     	ld hl,(Datos_de_nivel)
 103+ 8806 23           	inc hl
 104+ 8807 22 05 89     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 105+ 880A
 106+ 880A C1           	pop bc
 107+ 880B 10 DF        	djnz 1B
 108+ 880D
 109+ 880D C9           	ret
 110+ 880E
 111+ 880E              ;	------------------------------------------------------------------------------------
 112+ 880E              ;
 113+ 880E              ;	5/1/24
 114+ 880E              ;
 115+ 880E              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 116+ 880E              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 117+ 880E
 118+ 880E CB 27        Calcula_salto_en_BC sla a
 119+ 8810 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 120+ 8812 4F           	ld c,a
 121+ 8813 06 00        	ld b,0
 122+ 8815 C9           	ret
 123+ 8816
 124+ 8816              ; ------------------------------------------------------------------
 125+ 8816              ;
 126+ 8816              ;	5/1/24
 127+ 8816              ;
 128+ 8816              ;	Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 129+ 8816              ;	Actualiza (Datos_de_entidad) con esa dirección.
 130+ 8816
 131+ 8816 A7           Situa_en_datos_de_entidad and a
 132+ 8817 ED 4A        	adc hl,bc
 133+ 8819 CD DB 8C     	call Extrae_address
 134+ 881C 22 D5 88         ld (Datos_de_entidad),hl
 135+ 881F C9           	ret
 136+ 8820
 137+ 8820              ; ------------------------------------------------------------------
 138+ 8820
 139+ 8820 22 C9 88     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 140+ 8823 13           	inc de
 141+ 8824 13           	inc de
 142+ 8825 EB           	ex de,hl
 143+ 8826 22 CD 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 144+ 8829 C9           	ret
 145+ 882A
 146+ 882A              ; ----------------------------------------------------------------------------------------------------------
 147+ 882A              ;
 148+ 882A              ;	11/1/24
 149+ 882A              ;
 150+ 882A              ;	Vuelca los .db significativos del tipo de entidad a la caja de entidades.
 151+ 882A
 152+ 882A              Datos_de_entidad_a_caja
 153+ 882A
 154+ 882A              ; En este punto:
 155+ 882A              ; HL apunta al 1er .db de DATOS de la entidad que tenemos que volcar en la caja DRAW.
 156+ 882A
 157+ 882A ED 5B C9 88  	ld de,(Puntero_store_caja) 					; DE apunta al 1er .db de la caja de entidades vacía.
 158+ 882E
 159+ 882E 01 03 00     	ld bc,3
 160+ 8831 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 161+ 8833              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 162+ 8833 01 07 00     	ld bc,7
 163+ 8836 CD 5D 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 164+ 8839
 165+ 8839 01 05 00     	ld bc,5
 166+ 883C ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 167+ 883E              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 168+ 883E 01 04 00     	ld bc,4
 169+ 8841 CD 5D 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 170+ 8844
 171+ 8844 01 07 00     	ld bc,7
 172+ 8847 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 173+ 8849              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 174+ 8849
 175+ 8849 01 13 00     	ld bc,19
 176+ 884C CD 5D 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 177+ 884F
 178+ 884F 01 02 00     	ld bc,2
 179+ 8852 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 180+ 8854              ;												; HL, (origen), apunta ahora al .db (Frames_explosion), hay que situar DE.
 181+ 8854
 182+ 8854 01 08 00     	ld bc,8
 183+ 8857 CD 5D 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 184+ 885A
 185+ 885A 7E           	ld a,(hl)
 186+ 885B 12           	ld (de),a 									; Vuelco (Frames_explosion).
 187+ 885C
 188+ 885C C9           	ret
 189+ 885D
 190+ 885D              ; ---------- -------------- ----------------
 191+ 885D
 192+ 885D EB           Situa_DE ex de,hl
 193+ 885E A7           	and a
 194+ 885F ED 4A        	adc hl,bc
 195+ 8861 EB           	ex de,hl
 196+ 8862 C9           	ret
 197+ 8863
 198+ 8863              ;---------------------------------------------------------------------------------------------------------------
 199+ 8863              ;
 200+ 8863              ;	5/1/24
 201+ 8863              ;
 202+ 8863              ;	INICIALIZA (Numero_parcial_de_entidades).
 203+ 8863              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 204+ 8863              ;
 205+ 8863              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 206+ 8863              ;
 207+ 8863              ;	(Numero_parcial_de_entidades)="7".
 208+ 8863              ;
 209+ 8863              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 210+ 8863              ;
 211+ 8863              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 212+ 8863              ;
 213+ 8863              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 214+ 8863              ;	MODIFICA: A y B.
 215+ 8863              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 216+ 8863
 217+ 8863              Inicializa_Numero_parcial_de_entidades
 218+ 8863
 219+ 8863              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 220+ 8863
 221+ 8863 3A CF 88     	ld a,(Numero_de_entidades)
 222+ 8866 A7           	and a
 223+ 8867
 224+ 8867              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 225+ 8867              ;	jr z,$
 226+ 8867              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 227+ 8867
 228+ 8867 20 03        	jr nz,3F
 229+ 8869
 230+ 8869              ; ---------- ---------- ----------
 231+ 8869
 232+ 8869              ;! RESET para pruebas. Omitir esta línea en modo normal.
 233+ 8869              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 234+ 8869
 235+ 8869 CD CB 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 236+ 886C
 237+ 886C              ; ---------- ---------- ----------
 238+ 886C
 239+ 886C 3A CF 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 240+ 886F FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 241+ 8871 38 08        	jr c,1F
 242+ 8873
 243+ 8873              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 244+ 8873              ; Actualizamos variables.
 245+ 8873
 246+ 8873 3E 07        	ld a,7
 247+ 8875 32 D0 88     	ld (Numero_parcial_de_entidades),a
 248+ 8878 47           	ld b,a
 249+ 8879 18 04        	jr 2F
 250+ 887B
 251+ 887B              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 252+ 887B              ; (Numero_de_entidades)="0".
 253+ 887B
 254+ 887B 32 D0 88     1 ld (Numero_parcial_de_entidades),a
 255+ 887E 47           	ld b,a
 256+ 887F C9           2 ret
# file closed: Niveles.asm
 106  8880
 107  8880              ; ******************************************************************************************************************************************************************************************
 108  8880              ; Constantes.
 109  8880              ; ******************************************************************************************************************************************************************************************
 110  8880              ;
 111  8880              ; 25/12/23
 112  8880
 113  8880              ;
 114  8880              ; Constantes.
 115  8880              ;
 116  8880
 117  8880              Sprite_vacio equ $f000
 118  8880              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  8880              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  8880              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  8880              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  8880
 123  8880              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  8880              ;														;
 125  8880
 126  8880              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  8880
 128  8880
 129  8880
 130  8880
 131  8880              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 132  8880              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 133  8880              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 134  8880              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 135  8880              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 136  8880
 137  8880              ;														; 55 Bytes.
 138  8880              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 139  8880              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 140  8880
 141  8880              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 142  8880
 143  8880              ; ******************************************************************************************************************************************************************************************
 144  8880              ; Variables.
 145  8880              ; ******************************************************************************************************************************************************************************************
 146  8880              ;
 147  8880              ; 25/12//23
 148  8880              ;
 149  8880              ; Variables de DRAW. (Motor principal).
 150  8880              ;
 151  8880              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 152  8880
 153  8880 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 154  8881              ;															- Patrón de movimiento.
 155  8881              ;															- Aspecto
 156  8881
 157  8881 00           Filas db 0												; Filas. [DRAW]
 158  8882 00           Columns db 0  											; Nº de columnas. [DRAW]
 159  8883 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 160  8885 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 161  8887 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8888 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8889
 164  8889              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 165  8889
 166  8889 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 167  888A              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 168  888A              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 169  888A 00           Attr db 0												; Atributos de la entidad:
 170  888B
 171  888B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 172  888B              ;
 173  888B              ;	COLORES: 0 ..... NEGRO
 174  888B              ;    		 1 ..... AZUL
 175  888B              ; 			 2 ..... ROJO
 176  888B              ;			 3 ..... MAGENTA
 177  888B              ; 			 4 ..... VERDE
 178  888B              ; 			 5 ..... CIAN
 179  888B              ;			 6 ..... AMARILLO
 180  888B              ; 			 7 ..... BLANCO
 181  888B
 182  888B 00 00        Indice_Sprite_der defw 0
 183  888D 00 00        Indice_Sprite_izq defw 0
 184  888F 00 00        Puntero_DESPLZ_der defw 0
 185  8891 00 00        Puntero_DESPLZ_izq defw 0
 186  8893
 187  8893 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 188  8895 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 189  8896
 190  8896              ; Variables de objeto. (Características).
 191  8896
 192  8896 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 193  8897 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 194  8898 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 195  8899 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 196  889A
 197  889A 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 198  889B              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 199  889B              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 200  889B 00 00 00...  Variables_de_borrado ds 6
 201  88A1
 202  88A1 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 203  88A3 00 00        	defw 0
 204  88A5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 205  88A7 00 00 00 00  	db 0,0,0,0
 206  88AB
 207  88AB 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 208  88AD              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 209  88AD
 210  88AD 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 211  88AF
 212  88AF              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 213  88AF              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 214  88AF
 215  88AF 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 216  88B1              ;														; _palabras que componen el "movimiento_masticado".
 217  88B1
 218  88B1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 219  88B1
 220  88B1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 221  88B2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 222  88B2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 223  88B2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 224  88B2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 225  88B2              ;
 226  88B2              ; 														DESCRIPCIÖN:
 227  88B2              ;
 228  88B2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 229  88B2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 230  88B2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 231  88B2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 232  88B2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 233  88B2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 234  88B2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 235  88B2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 236  88B2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 237  88B2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 238  88B2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 239  88B2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 240  88B2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 241  88B2              ;
 242  88B2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 243  88B2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 244  88B2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 245  88B2
 246  88B2              ; Variables de funcionamiento. [DRAW].
 247  88B2
 248  88B2 00           Columnas db 0
 249  88B3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 250  88B5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 251  88B5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  88B6
 253  88B6              ; variables de control general.
 254  88B6
 255  88B6 00           Ctrl_2 db 0
 256  88B7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 257  88B7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 258  88B7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 259  88B7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 260  88B7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 261  88B7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 262  88B7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 263  88B7              ;
 264  88B7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 265  88B7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 266  88B7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 267  88B7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 268  88B7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 269  88B7              ;														BIT 4, ???
 270  88B7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 271  88B7
 272  88B7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 273  88B8
 274  88B8              ;! 56 Bytes por entidad.
 275  88B8
 276  88B8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 277  88B8              ;					         		---------;      ;---------
 278  88B8
 279  88B8
 280  88B8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  88B8
 282  88B8              ; Movimiento. ------------------------------------------------------------------------------------------------------
 283  88B8
 284  88B8 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 285  88BA 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 286  88BC 00 00        Puntero_indice_mov_bucle defw 0							;
 287  88BE              ;
 288  88BE              ;
 289  88BE 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 290  88BF              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 291  88BF              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 292  88BF 00           Incrementa_puntero_backup db 0
 293  88C0 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 294  88C1              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 295  88C1 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 296  88C2 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 297  88C3 00           Cola_de_desplazamiento db 0								; Este byte indica:
 298  88C4              ;
 299  88C4              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 300  88C4              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 301  88C4              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 302  88C4              ;
 303  88C4              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 304  88C4              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 305  88C4              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 306  88C4              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 307  88C4              ;
 308  88C4              ;														;	"$ff" ..... Bucle infinito de repetición.
 309  88C4              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 310  88C4              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 311  88C4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 312  88C6
 313  88C6 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 314  88C7
 315  88C7              ;														DESCRIPCIÓN:
 316  88C7              ;
 317  88C7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 318  88C7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 319  88C7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 320  88C7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 321  88C7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 322  88C7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 323  88C7
 324  88C7              ;														BIT 3, Recarga de nueva oleada.
 325  88C7              ;														BIT 4, Recarga de nueva oleada.
 326  88C7              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 327  88C7              ;														BIT 6, **** Frame completo.
 328  88C7              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 329  88C7
 330  88C7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 331  88C9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 332  88C9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 333  88C9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 334  88C9
 335  88C9              ; Gestión de ENTIDADES y CAJAS.
 336  88C9
 337  88C9 00 00        Puntero_store_caja defw 0
 338  88CB 00 00        Puntero_restore_caja defw 0
 339  88CD 00 00        Indice_restore_caja defw 0
 340  88CF 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 341  88D0 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 342  88D1 00           Entidades_en_curso db 0									; ..... ..... .....
 343  88D2 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 344  88D3              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 345  88D3              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 346  88D3              ;														; _ (Numero_de_malotes)="0".
 347  88D3 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 348  88D5 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 349  88D7              ;														; _ puntero (Indice_entidades).
 350  88D7
 351  88D7              ;---------------------------------------------------------------------------------------------------------------
 352  88D7              ;
 353  88D7              ;	11/01/24
 354  88D7              ;
 355  88D7              ;	Álbumes.
 356  88D7
 357  88D7 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 358  88D9              ;														; _variable para almacenar lo posición del puntero_
 359  88D9              ; 														; _de pila, SP.
 360  88D9 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 361  88DB              ;														; La utiliza la rutina [Extrae_foto_registros].
 362  88DB 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 363  88DD 00 70        Stack_snapshot defw Album_de_fotos
 364  88DF 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 365  88E1
 366  88E1              ;End_Snapshot defw Album_de_fotos
 367  88E1              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 368  88E1 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 369  88E3              ;														; _el snapshot de los registros del siguiente disparo.
 370  88E3              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 371  88E3 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 372  88E5
 373  88E5 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 374  88E6              ;
 375  88E6              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 376  88E6              ;															BIT 1, "1" Indica que el {Almacen_de_movimientos_masticados_Entidad_1} está completo.
 377  88E6              ; Gestión de Disparos.
 378  88E6
 379  88E6 00           Numero_de_disparotes db 0
 380  88E7 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 381  88E9 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 382  88EB 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 383  88EC              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 384  88EC              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 385  88EC 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 386  88EE              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 387  88EE              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 388  88EE              ;														; _produzca colisión.
 389  88EE 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 390  88F0              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 391  88F0 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 392  88F3              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 393  88F3 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 394  88F6              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 395  88F6 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 396  88F7
 397  88F7              ;---------------------------------------------------------------------------------------------------------------
 398  88F7
 399  88F7              ; Relojes y temporizaciones.
 400  88F7
 401  88F7 00           Contador_de_frames db 0
 402  88F8 00           Contador_de_frames_2 db 0
 403  88F9
 404  88F9 04           Clock_explosion db 4
 405  88FA 14           Clock_Entidades_en_curso db 20
 406  88FB 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 407  88FC              ;														; Repite la oleada de entidades.
 408  88FC 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 409  88FD 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 410  88FE 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 411  88FF
 412  88FF 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 413  8900 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 414  8901 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 415  8902
 416  8902              ;---------------------------------------------------------------------------------------------------------------
 417  8902
 418  8902              ; Gestión de NIVELES.
 419  8902
 420  8902 00           Nivel db 0												; Nivel actual del juego.
 421  8903 00 00        Puntero_indice_NIVELES defw 0
 422  8905 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 423  8907              ; 														; _ que definen el NIVEL.
 424  8907              ; Y todo comienza aquí .....
 425  8907              ;
 426  8907              ; 	INICIO  *************************************************************************************************************************************************************************
 427  8907              ;
 428  8907              ;	5/1/24
 429  8907
 430  8907              START
 431  8907
 432  8907 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 433  890A 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 434  890C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 435  890E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 436  8910 F3           	DI
 437  8911
 438  8911 3E 07        	ld a,%00000111
 439  8913 CD 64 99     	call Cls
 440  8916
 441  8916 CD B8 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 442  8919
 443  8919              ; INICIALIZACIÓN.
 444  8919
 445  8919 CD CB 87     	call Inicializa_Punteros_de_nivel					 ; Prepara el 1er Nivel del juego.
 446  891C              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 447  891C              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 448  891C              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 449  891C CD DD 87     4 call Prepara_cajas_de_entidades
 450  891F
 451  891F CD 43 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 452  8922              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 453  8922 CD 68 8D     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 454  8925
 455  8925 18 FE        	jr $
 456  8927
 457  8927
 458  8927
 459  8927
 460  8927 21 D0 88     	ld hl,Numero_parcial_de_entidades
 461  892A 46           	ld b,(hl)
 462  892B              ;	inc b
 463  892B              ;	dec b
 464  892B              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 465  892B
 466  892B              ;	INICIA ENTIDADES !!!!!
 467  892B
 468  892B C5           1 push bc  												; Guardo el contador de entidades.
 469  892C CD 2C 8B     	call Inicia_entidad
 470  892F C1           	pop bc
 471  8930 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 472  8932
 473  8932              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 474  8932              ; (Esto se dá cuando se inicia una nueva oleada).
 475  8932
 476  8932              ;	ld a,(Ctrl_1)
 477  8932              ;	bit 3,a
 478  8932              ;	jr nz,5F											; Loop
 479  8932
 480  8932              ; 	INICIA AMADEUS !!!!!
 481  8932
 482  8932              ;3 call Restore_Amadeus
 483  8932              ;	call Inicia_Puntero_objeto
 484  8932              ;	call Draw
 485  8932
 486  8932              ;	call Guarda_movimiento_masticado	;! Provisional
 487  8932
 488  8932              ;	call Guarda_foto_registros
 489  8932              ;	call Guarda_datos_de_borrado_Amadeus
 490  8932
 491  8932              ;	ld de,Amadeus_db
 492  8932              ;	call Store_Amadeus
 493  8932
 494  8932              ; 	INICIA DISPAROS !!!!!
 495  8932
 496  8932              ;	call Inicia_Puntero_Disparo_Entidades
 497  8932              ;	call Inicia_Puntero_Disparo_Amadeus
 498  8932
 499  8932              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 500  8932
 501  8932 CD 43 8C     5 call Inicia_punteros_de_cajas
 502  8935 CD 68 8D     	call Restore_entidad
 503  8938
 504  8938 3A C6 88     	ld a,(Ctrl_1)
 505  893B CB 5F        	bit 3,a
 506  893D 28 07        	jr z,6F
 507  893F
 508  893F              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 509  893F
 510  893F 21 C6 88     	ld hl,Ctrl_1
 511  8942 CB 9E        	res 3,(hl)
 512  8944 18 07        	jr Main
 513  8946
 514  8946              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 515  8946
 516  8946 21 E5 88     6 ld hl,Ctrl_3
 517  8949 CB C6        	set 0,(hl)											; Frame completo.
 518  894B FB           	ei
 519  894C 76           	halt
 520  894D
 521  894D              ; ------------------------------------
 522  894D
 523  894D              Main
 524  894D              ;
 525  894D              ;	11/12/23
 526  894D
 527  894D              ; Aparece nueva entidad ???
 528  894D
 529  894D              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 530  894D              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 531  894D              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 532  894D              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 533  894D              ;														; _un 2º bloque.
 534  894D
 535  894D 3E 01        	ld a,1
 536  894F D3 FE        	out ($fe),a
 537  8951
 538  8951 3A FA 88     	ld a,(Clock_Entidades_en_curso)
 539  8954 47           	ld b,a
 540  8955 3A F7 88     	ld a,(Contador_de_frames)
 541  8958 B8           	cp b
 542  8959 20 18        	jr nz,13F
 543  895B
 544  895B              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 545  895B              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 546  895B
 547  895B 3A D0 88     21 ld a,(Numero_parcial_de_entidades)
 548  895E 47           	ld b,a
 549  895F 3A D1 88     	ld a,(Entidades_en_curso)
 550  8962 B8           	cp b
 551  8963 28 0E        	jr z,13F
 552  8965 30 0C        	jr nc,13F
 553  8967
 554  8967 3C           	inc a
 555  8968 32 D1 88     	ld (Entidades_en_curso),a
 556  896B
 557  896B              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 558  896B
 559  896B 3A FA 88     	ld a,(Clock_Entidades_en_curso)
 560  896E              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 561  896E              ;! _ IMPREDECIBLE !!!!
 562  896E C6 64        	add 100
 563  8970 32 FA 88     	ld (Clock_Entidades_en_curso),a
 564  8973
 565  8973              ; -------------------------------------------------------------------------------------------------------------
 566  8973
 567  8973              ; Habilita disparos.
 568  8973
 569  8973 21 FC 88     13 ld hl,Disparo_Amadeus
 570  8976 11 FE 88     	ld de,CLOCK_repone_disparo_Amadeus
 571  8979 CD 31 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 572  897C
 573  897C 21 FF 88     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 574  897F 11 01 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 575  8982 CD 31 9D     	call Habilita_disparos
 576  8985
 577  8985              ; COLISIONES.
 578  8985
 579  8985 CD 57 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 580  8988
 581  8988              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 582  8988              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 583  8988              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 584  8988
 585  8988 AF           	xor a
 586  8989 32 EB 88     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 587  898C
 588  898C CD 43 8C     	call Inicia_punteros_de_cajas
 589  898F CD 68 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 590  8992              ; 														; _ en DRAW.
 591  8992 3A 81 88     	ld a,(Filas)
 592  8995 A7           	and a
 593  8996 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 594  8998 CD 7A 8D     	call Incrementa_punteros_de_cajas
 595  899B 18 F2        	jr 12B
 596  899D
 597  899D              ; ---------------------------------------------------------------------------------------
 598  899D
 599  899D 3A D0 88     10 ld a,(Numero_parcial_de_entidades)
 600  89A0 47               ld b,a
 601  89A1 A7           	and a
 602  89A2 20 14        	jr nz,11F
 603  89A4
 604  89A4 21 C6 88     	ld hl,Ctrl_1
 605  89A7 CB 66        	bit 4,(hl)
 606  89A9 C2 51 8A     	jp nz,16F
 607  89AC
 608  89AC              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 609  89AC
 610  89AC 21 C6 88     	ld hl,Ctrl_1
 611  89AF CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 612  89B1
 613  89B1 3A F7 88     	ld a,(Contador_de_frames)
 614  89B4 3C           	inc a
 615  89B5 32 FB 88     	ld (Activa_recarga_cajas),a
 616  89B8
 617  89B8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 618  89B8
 619  89B8 3A D1 88     11 ld a,(Entidades_en_curso)
 620  89BB A7           	and a
 621  89BC CA 51 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 622  89BF 47           	ld b,a												; No hay entidades que gestionar.
 623  89C0
 624  89C0              ; ( Código que ejecutamos con cada entidad: ).
 625  89C0
 626  89C0              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 627  89C0
 628  89C0 C5           15 push bc 												; Nº de entidades en curso.
 629  89C1
 630  89C1              ; Existe "Entidad_guía" ???.
 631  89C1              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 632  89C1
 633  89C1 3A E5 88     	ld a,(Ctrl_3)
 634  89C4 CB 4F        	bit 1,a
 635  89C6 20 11        	jr nz,22F
 636  89C8
 637  89C8              ; Almacén de "Movimientos_masticados" lleno ???
 638  89C8              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 639  89C8              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 640  89C8
 641  89C8 3A E5 88     	ld a,(Ctrl_3)
 642  89CB CB 5F        	bit 3,a
 643  89CD 20 0A        	jr nz,22F
 644  89CF
 645  89CF              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 646  89CF
 647  89CF 21 B6 88     	ld hl,Ctrl_2
 648  89D2 CB EE        	set 5,(hl)
 649  89D4 21 E5 88     	ld hl,Ctrl_3
 650  89D7 CB CE        	set 1,(hl)
 651  89D9
 652  89D9              ; Impacto ???
 653  89D9
 654  89D9 3A 9A 88     22 ld a,(Impacto)
 655  89DC A7           	and a
 656  89DD 28 31        	jr z,8F
 657  89DF
 658  89DF              ; Hay Impacto en esta entidad.
 659  89DF
 660  89DF 21 F9 88     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 661  89E2 35           	dec (hl)
 662  89E3 C2 44 8A     	jp nz,17F
 663  89E6
 664  89E6              ;! Velocidad de la animación de la explosión.
 665  89E6
 666  89E6 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 667  89E8              ;														; _,(velocidad de la explosión).
 668  89E8              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 669  89E8
 670  89E8 CD 2C 8E     	call Repone_datos_de_borrado
 671  89EB CD 81 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 672  89EE
 673  89EE              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 674  89EE
 675  89EE 3A B6 88     	ld a,(Ctrl_2)
 676  89F1 CB 4F        	bit 1,a
 677  89F3 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 678  89F5
 679  89F5              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 680  89F5
 681  89F5 3A 89 88     	ld a,(CTRL_DESPLZ)
 682  89F8 A7           	and a
 683  89F9 20 08        	jr nz,18F
 684  89FB
 685  89FB 21 84 84     	ld hl,Indice_Explosion_2x2-2
 686  89FE 22 8F 88     	ld (Puntero_DESPLZ_der),hl
 687  8A01 18 06        	jr 19F
 688  8A03
 689  8A03 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 690  8A06 22 8F 88     	ld (Puntero_DESPLZ_der),hl
 691  8A09
 692  8A09 21 B6 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 693  8A0C CB CE        	set 1,(hl)
 694  8A0E 18 22        	jr 7F
 695  8A10
 696  8A10              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 697  8A10              ; _con las coordenadas de la entidad almacenada en DRAW.
 698  8A10
 699  8A10 3A C6 88     8 ld a,(Ctrl_1)
 700  8A13 CB 57        	bit 2,a
 701  8A15 28 1B        	jr z,7F
 702  8A17
 703  8A17 2A EE 88     	ld hl,(Coordenadas_disparo_certero)
 704  8A1A EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 705  8A1B              ;														; E contiene la coordenada_X del disparo.
 706  8A1B 2A 87 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 707  8A1E              ;														; H FILA, (Coordenada_y de la entidad).
 708  8A1E A7           	and a
 709  8A1F ED 52        	sbc hl,de
 710  8A21
 711  8A21 CD 70 92     	call Determina_resultado_comparativa
 712  8A24
 713  8A24 78           	ld a,b
 714  8A25 A7           	and a
 715  8A26 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 716  8A28
 717  8A28              ; ----- ----- -----
 718  8A28
 719  8A28 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 720  8A2A 32 9A 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 721  8A2D
 722  8A2D 21 C6 88     	ld hl,Ctrl_1
 723  8A30 CB 96        	res 2,(hl)
 724  8A32
 725  8A32 CD A2 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 726  8A35
 727  8A35 3A B1 88     	ld a,(Ctrl_0)
 728  8A38 CB 67        	bit 4,a
 729  8A3A 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 730  8A3C
 731  8A3C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 732  8A3C              ; [[[
 733  8A3C              ;	call Detecta_disparo_entidad
 734  8A3C              ; ]]]
 735  8A3C
 736  8A3C CD AC 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 737  8A3F
 738  8A3F 21 B1 88     	ld hl,Ctrl_0
 739  8A42 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 740  8A44
 741  8A44 CD 29 8D     17 call Store_Restore_cajas
 742  8A47
 743  8A47 C1           	pop bc
 744  8A48
 745  8A48 05           	dec b
 746  8A49 C2 C0 89     	jp nz,15B
 747  8A4C
 748  8A4C              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 749  8A4C              ; Hemos gestionado todas las unidades.
 750  8A4C              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 751  8A4C
 752  8A4C 21 C6 88     	ld hl,Ctrl_1
 753  8A4F CB 96        	res 2,(hl)
 754  8A51
 755  8A51 21 E5 88     16 ld hl,Ctrl_3
 756  8A54 CB C6        	set 0,(hl)											; Frame completo.
 757  8A56
 758  8A56 AF           	xor a
 759  8A57 D3 FE        	out ($fe),a
 760  8A59
 761  8A59 FB           	ei
 762  8A5A 76           	halt
 763  8A5B
 764  8A5B              ; ----------------------------------------
 765  8A5B
 766  8A5B 3A C6 88     	ld a,(Ctrl_1) 										; Existe Loop?
 767  8A5E CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 768  8A60 CA 4D 89     	jp z,Main
 769  8A63
 770  8A63              ; RECARGA DE NUEVA OLEADA.
 771  8A63
 772  8A63 3A F7 88     	ld a,(Contador_de_frames)
 773  8A66 47           	ld b,a
 774  8A67 3A FB 88     	ld a,(Activa_recarga_cajas)
 775  8A6A B8           	cp b
 776  8A6B 28 08        	jr z,20F
 777  8A6D
 778  8A6D 21 C6 88     	ld hl,Ctrl_1
 779  8A70 CB E6        	set 4,(hl)
 780  8A72 C3 4D 89     	jp Main
 781  8A75
 782  8A75 21 C6 88     20 ld hl,Ctrl_1
 783  8A78 CB A6        	res 4,(hl)
 784  8A7A
 785  8A7A 3A F7 88     	ld a,(Contador_de_frames)
 786  8A7D
 787  8A7D              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 788  8A7D              ;! _ IMPREDECIBLE !!!!
 789  8A7D
 790  8A7D C6 0A        	add 10
 791  8A7F 32 FA 88     	ld (Clock_Entidades_en_curso),a
 792  8A82
 793  8A82 C3 1C 89     	jp 4B
 794  8A85
 795  8A85 C9           	ret
 796  8A86
 797  8A86              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 798  8A86              ;
 799  8A86              ;	16/11/23
 800  8A86
 801  8A86              Gestiona_Amadeus
 802  8A86
 803  8A86              ;! Activa/desactiva impacto con Amadeus.
 804  8A86
 805  8A86              ;	ld a,(Impacto)
 806  8A86              ;	and a
 807  8A86              ;	jr nz,2F
 808  8A86
 809  8A86 CD 19 8B     	call Mov_Amadeus
 810  8A89
 811  8A89 3A B1 88     2 ld a,(Ctrl_0)
 812  8A8C CB 67        	bit 4,a
 813  8A8E 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 814  8A90
 815  8A90 CD AC 8B     	call Guarda_foto_entidad_a_pintar
 816  8A93 CD 0C 8E     	call Guarda_datos_de_borrado_Amadeus
 817  8A96
 818  8A96 21 B1 88     1 ld hl,Ctrl_0
 819  8A99 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 820  8A9B
 821  8A9B CD FB 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 822  8A9E
 823  8A9E              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 824  8A9E
 825  8A9E CD C3 8C     	call Calcula_numero_de_disparotes
 826  8AA1
 827  8AA1 C9           	ret
 828  8AA2
 829  8AA2              ; --------------------------------------------------------------------------------------------------------------
 830  8AA2              ;
 831  8AA2              ;	15/12/23
 832  8AA2
 833  8AA2              Mov_obj
 834  8AA2
 835  8AA2 3A B6 88     	ld a,(Ctrl_2)
 836  8AA5 CB 4F        	bit 1,a
 837  8AA7 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 838  8AA9
 839  8AA9              ; Explosión:
 840  8AA9
 841  8AA9 3A B7 88     	ld a,(Frames_explosion)
 842  8AAC A7           	and a
 843  8AAD 20 1D        	jr nz,4F
 844  8AAF
 845  8AAF              ;!  Una alimaña menos!!!!!!!!!1
 846  8AAF
 847  8AAF              ; Se trataba de una Entidad_guía ???
 848  8AAF
 849  8AAF 3A B6 88     	ld a,(Ctrl_2)
 850  8AB2 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 851  8AB4 28 05        	jr z,5F
 852  8AB6
 853  8AB6 21 E5 88     	ld hl,Ctrl_3
 854  8AB9 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 855  8ABB
 856  8ABB              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 857  8ABB              ;!! _generado puede ser distinto, (aletoriedad).
 858  8ABB
 859  8ABB CD AA 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 860  8ABE 21 D0 88     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 861  8AC1 35           	dec (hl)
 862  8AC2 21 D1 88     	ld hl,Entidades_en_curso
 863  8AC5 35           	dec (hl)
 864  8AC6 21 CF 88     	ld hl,Numero_de_entidades
 865  8AC9 35           	dec (hl)
 866  8ACA 18 4C        	jr 3F
 867  8ACC
 868  8ACC              ; -----
 869  8ACC
 870  8ACC              ;	`Movemos´ la explosión.
 871  8ACC
 872  8ACC 2A 8F 88     4 ld hl,(Puntero_DESPLZ_der)
 873  8ACF 23           	inc hl
 874  8AD0 23           	inc hl
 875  8AD1 22 8F 88     	ld (Puntero_DESPLZ_der),hl
 876  8AD4 CD DB 8C     	call Extrae_address
 877  8AD7 22 85 88     	ld (Puntero_objeto),hl
 878  8ADA
 879  8ADA 21 B7 88     	ld hl,Frames_explosion
 880  8ADD 35           	dec (hl)
 881  8ADE
 882  8ADE 21 B1 88     	ld hl,Ctrl_0
 883  8AE1 CB E6        	set 4,(hl)
 884  8AE3
 885  8AE3 18 33        	jr 3F
 886  8AE5
 887  8AE5              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 888  8AE5
 889  8AE5 AF           2 xor a
 890  8AE6 32 B1 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 891  8AE9
 892  8AE9              ; Movemos Entidades malignas.
 893  8AE9              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 894  8AE9
 895  8AE9 3A B6 88     	ld a,(Ctrl_2)
 896  8AEC CB 6F        	bit 5,a
 897  8AEE 20 07        	jr nz,8F
 898  8AF0
 899  8AF0 21 B1 88     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 900  8AF3 CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 901  8AF5 18 09        	jr 7F
 902  8AF7
 903  8AF7 CD DC 9E     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 904  8AFA
 905  8AFA 3A B1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 906  8AFD CB 67        	bit 4,a
 907  8AFF C8           	ret z
 908  8B00
 909  8B00              ; Ha habido desplazamiento de la entidad maligna.
 910  8B00              ; Ha llegado a zona de AMADEUS ???
 911  8B00
 912  8B00 3A 88 88     7 ld a,(Coordenada_y)
 913  8B03 FE 14        	cp $14
 914  8B05 38 08        	jr c,1F
 915  8B07
 916  8B07              ; ---------
 917  8B07
 918  8B07              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 919  8B07              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 920  8B07
 921  8B07 F3           	di
 922  8B08 CD 20 90     	call Genera_coordenadas_X
 923  8B0B CD 5C 90     	call Compara_coordenadas_X
 924  8B0E FB           	ei
 925  8B0F
 926  8B0F              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 927  8B0F
 928  8B0F              ; ---------
 929  8B0F
 930  8B0F CD 2B 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 931  8B12 CD 2C 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 932  8B15 CD 81 8C     	call Limpia_Variables_de_borrado
 933  8B18
 934  8B18 C9           3 ret
 935  8B19
 936  8B19              ; --------------------------------------------------------------------------------------------------------------
 937  8B19              ;
 938  8B19              ;	29/1/23
 939  8B19
 940  8B19              Mov_Amadeus
 941  8B19
 942  8B19              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 943  8B19
 944  8B19 CD 18 9A     	call Mov_right
 945  8B1C
 946  8B1C 3A B1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 947  8B1F CB 67        	bit 4,a
 948  8B21 C8           	ret z
 949  8B22
 950  8B22              ; ---------
 951  8B22
 952  8B22 CD 2B 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 953  8B25 CD 1C 8E     	call Repone_datos_de_borrado_Amadeus
 954  8B28 CD 81 8C     	call Limpia_Variables_de_borrado
 955  8B2B
 956  8B2B C9           	ret
 957  8B2C
 958  8B2C              ; -----------------------------------------------------------------------------------
 959  8B2C              ;
 960  8B2C              ;	12/12/23
 961  8B2C              ;
 962  8B2C              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 963  8B2C
 964  8B2C              Inicia_entidad
 965  8B2C
 966  8B2C              ; Averiguamos el tipo de entidad.
 967  8B2C
 968  8B2C 21 80 88     	ld hl,Tipo
 969  8B2F 35           	dec (hl)
 970  8B30 28 02        	jr z,Entidad_tipo_1
 971  8B32 18 FE        	jr $
 972  8B34
 973  8B34              Entidad_tipo_1
 974  8B34
 975  8B34 3A E5 88     	ld a,(Ctrl_3)
 976  8B37 CB 4F        	bit 1,a
 977  8B39 20 FE        	jr nz,$												; Ya están construidos los movimientos masticados de esta entidad.
 978  8B3B
 979  8B3B              ; Prepara
 980  8B3B
 981  8B3B 18 FE        	jr $
 982  8B3D
 983  8B3D              ; Construimos los movimientos masticados de este tipo de entidad.
 984  8B3D
 985  8B3D CD 48 8B     	call Construye_movimientos_masticados_entidad
 986  8B40
 987  8B40
 988  8B40
 989  8B40
 990  8B40 CD 16 71     	call Guarda_foto_registros
 991  8B43 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 992  8B44              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 993  8B44              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 994  8B44 CD 29 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 995  8B47 C9           	ret
 996  8B48
 997  8B48              ; -----------------------------------------------------------------------------------
 998  8B48              ;
 999  8B48              ;	10/01/24
1000  8B48              ;
1001  8B48              ;
1002  8B48
1003  8B48              Construye_movimientos_masticados_entidad
1004  8B48
1005  8B48 CD 9B 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1006  8B4B              ;															; _ el (Contador_de_mov_masticados).
1007  8B4B CD E1 8C     	call Inicia_Puntero_objeto
1008  8B4E CD 78 99     	call Recompone_posicion_inicio
1009  8B51 CD 57 93     1 call Draw
1010  8B54 CD 69 8B     	call Guarda_movimiento_masticado
1011  8B57 CD DC 9E     	call Movimiento
1012  8B5A 18 F5        	jr 1B
1013  8B5C
1014  8B5C              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1015  8B5C              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1016  8B5C
1017  8B5C 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
1018  8B5F 22 AD 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1019  8B62
1020  8B62              ;	Reinicializamos el (Contador_de_mov_masticados).
1021  8B62
1022  8B62 21 00 00     	ld hl,0
1023  8B65 22 AF 88     	ld (Contador_de_mov_masticados),hl
1024  8B68
1025  8B68 C9           	ret
1026  8B69
1027  8B69              ; -----------------------------------------------------------------------------------
1028  8B69              ;
1029  8B69              ;	28/12/23
1030  8B69              ;
1031  8B69              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1032  8B69              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1033  8B69
1034  8B69              Guarda_movimiento_masticado
1035  8B69
1036  8B69 ED 73 D7 88  	ld (Stack),sp
1037  8B6D ED 7B AD 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1038  8B71
1039  8B71 E5           	push hl
1040  8B72 DD E5            push ix
1041  8B74 FD E5            push iy
1042  8B76
1043  8B76 ED 7B D7 88      ld sp,(Stack)
1044  8B7A
1045  8B7A E5               push hl
1046  8B7B
1047  8B7B 2A AF 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1048  8B7E 23           	inc hl
1049  8B7F 22 AF 88     	ld (Contador_de_mov_masticados),hl
1050  8B82
1051  8B82 22 C4 88     	ld (Contador_general_de_mov_masticados_Entidad_1),hl	; Cuando la entidad pase de guía a fantasma, el "contador general" indicará el nº máximo de movimientos masticados creados.
1052  8B85
1053  8B85 E1           	pop hl
1054  8B86
1055  8B86 CD 9B 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1056  8B89              ;															; _ el (Contador_de_mov_masticados).
1057  8B89 C9               ret
1058  8B8A
1059  8B8A              ; --------------------------------------------------------------------------------------------------------------
1060  8B8A              ;
1061  8B8A              ;	12/12/23
1062  8B8A              ;
1063  8B8A
1064  8B8A              Inicia_entidad_guia
1065  8B8A
1066  8B8A              ; Existe "Entidad_guía" ???
1067  8B8A
1068  8B8A 3A E5 88     	ld a,(Ctrl_3)
1069  8B8D CB 4F        	bit 1,a
1070  8B8F C0           	ret nz
1071  8B90
1072  8B90              ; Inicia Entidad_guía:
1073  8B90
1074  8B90 21 B6 88     	ld hl,Ctrl_2
1075  8B93 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1076  8B95 21 E5 88     	ld hl,Ctrl_3
1077  8B98 CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1078  8B9A
1079  8B9A C9           	ret
1080  8B9B
1081  8B9B              ; --------------------------------------------------------------------------------------------------------------
1082  8B9B              ;
1083  8B9B              ;	10/1/24
1084  8B9B              ;
1085  8B9B
1086  8B9B              Actualiza_Puntero_de_almacen_de_mov_masticados
1087  8B9B
1088  8B9B E5           	push hl
1089  8B9C C5           	push bc
1090  8B9D
1091  8B9D 2A AD 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1092  8BA0 01 06 00     	ld bc,6
1093  8BA3 A7           	and a
1094  8BA4 ED 4A        	adc hl,bc
1095  8BA6 22 AD 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1096  8BA9
1097  8BA9 C1           	pop bc
1098  8BAA E1           	pop hl
1099  8BAB
1100  8BAB C9           	ret
1101  8BAC
1102  8BAC              ; --------------------------------------------------------------------------------------------------------------
1103  8BAC              ;
1104  8BAC              ;	28/12/23
1105  8BAC              ;
1106  8BAC              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1107  8BAC              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1108  8BAC
1109  8BAC              Guarda_foto_entidad_a_pintar
1110  8BAC
1111  8BAC 3A B1 88     	ld a,(Ctrl_0)
1112  8BAF CB 77        	bit 6,a
1113  8BB1 28 0A        	jr z,5F
1114  8BB3
1115  8BB3              ; Guarda la foto de Amadeus.
1116  8BB3
1117  8BB3 CD 57 93     	call Draw
1118  8BB6
1119  8BB6 CD 69 8B     	call Guarda_movimiento_masticado	;! Provisional
1120  8BB9
1121  8BB9 CD 16 71     	call Guarda_foto_registros
1122  8BBC
1123  8BBC              ;	di
1124  8BBC              ;	jr $
1125  8BBC              ;	ei
1126  8BBC
1127  8BBC C9           	ret
1128  8BBD
1129  8BBD              ; ENTIDADES!
1130  8BBD              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1131  8BBD
1132  8BBD 3A E5 88     5 ld a,(Ctrl_3)
1133  8BC0 CB 5F        	bit 3,a
1134  8BC2 28 04        	jr z,1F
1135  8BC4
1136  8BC4              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1137  8BC4
1138  8BC4 CD FF 8B     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1139  8BC7 C9           	ret
1140  8BC8
1141  8BC8              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1142  8BC8
1143  8BC8 3A E5 88     1 ld a,(Ctrl_3)
1144  8BCB CB 57        	bit 2,a
1145  8BCD 20 10        	jr nz,6F
1146  8BCF
1147  8BCF              ; Entidad guía o fantasma ???
1148  8BCF
1149  8BCF 3A B6 88     	ld a,(Ctrl_2)
1150  8BD2 CB 6F        	bit 5,a
1151  8BD4 20 10        	jr nz,3F
1152  8BD6
1153  8BD6              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1154  8BD6
1155  8BD6 18 EC        	jr 4B
1156  8BD8
1157  8BD8              ; ENTIDAD_GUÍA:
1158  8BD8              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1159  8BD8              ; _guardando "movimientos_masticados".
1160  8BD8
1161  8BD8 3A E5 88     2 ld a,(Ctrl_3)
1162  8BDB CB 57        	bit 2,a
1163  8BDD 28 07        	jr z,3F
1164  8BDF
1165  8BDF              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1166  8BDF              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1167  8BDF
1168  8BDF CB 97        6 res 2,a
1169  8BE1 CB DF        	set 3,a
1170  8BE3 32 E5 88     	ld (Ctrl_3),a
1171  8BE6
1172  8BE6
1173  8BE6              ;	Esto sólo lo ejecuta una entidad guía.
1174  8BE6
1175  8BE6 CD 57 93     3 	call Draw
1176  8BE9 CD 69 8B     	call Guarda_movimiento_masticado
1177  8BEC CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1178  8BEF
1179  8BEF              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1180  8BEF              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1181  8BEF
1182  8BEF CD F3 8B     	call Convierte_guia_en_fantasma
1183  8BF2 C9           	ret
1184  8BF3
1185  8BF3              ; --------------------------------------------------------------------------------------------------------------
1186  8BF3              ;
1187  8BF3              ;	28/12/23
1188  8BF3              ;
1189  8BF3
1190  8BF3 3A E5 88     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1191  8BF6 CB 5F        	bit 3,a
1192  8BF8 C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1193  8BF9
1194  8BF9              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1195  8BF9
1196  8BF9 21 B6 88     	ld hl,Ctrl_2
1197  8BFC CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1198  8BFE
1199  8BFE C9           	ret
1200  8BFF
1201  8BFF              ; --------------------------------------------------------------------------------------------------------------
1202  8BFF              ;
1203  8BFF              ;	21/12/23
1204  8BFF              ;
1205  8BFF              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1206  8BFF              ;
1207  8BFF              ;		IY contiene (Puntero_objeto).
1208  8BFF              ;		IX contiene el puntero de impresión.
1209  8BFF              ;		HL contiene la dirección de la rutina de impresión.
1210  8BFF              ;
1211  8BFF              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1212  8BFF              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1213  8BFF              ;	Decrementa el (Contador_de_mov_masticados)
1214  8BFF              ;
1215  8BFF              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1216  8BFF              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1217  8BFF              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1218  8BFF
1219  8BFF
1220  8BFF ED 73 D7 88  Prepara_registros_con_mov_masticados ld (Stack),sp
1221  8C03 ED 7B AD 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1222  8C07
1223  8C07 FD E1        	pop iy
1224  8C09 DD E1        	pop ix
1225  8C0B E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1226  8C0C
1227  8C0C ED 73 AD 88  	ld (Puntero_de_almacen_de_mov_masticados),sp
1228  8C10 ED 7B D7 88  	ld sp,(Stack)
1229  8C14
1230  8C14 CD 16 71     	call Guarda_foto_registros
1231  8C17
1232  8C17 E5           	push hl
1233  8C18
1234  8C18 2A AF 88     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1235  8C1B 23           	inc hl
1236  8C1C 22 AF 88     	ld (Contador_de_mov_masticados),hl
1237  8C1F
1238  8C1F              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1239  8C1F
1240  8C1F ED 4B C4 88  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1241  8C23 A7           	and a
1242  8C24 ED 42        	sbc hl,bc
1243  8C26 CC F3 8B     	call z,Convierte_guia_en_fantasma
1244  8C29
1245  8C29 E1           	pop hl
1246  8C2A
1247  8C2A C9           	ret
1248  8C2B
1249  8C2B              ; --------------------------------------------------------------------------------------------------------------
1250  8C2B              ;
1251  8C2B              ;	19/9/23
1252  8C2B
1253  8C2B              Prepara_var_pintado
1254  8C2B
1255  8C2B 21 81 88     	ld hl,Filas
1256  8C2E 11 A1 88     	ld de,Variables_de_pintado
1257  8C31 01 08 00     	ld bc,8
1258  8C34 ED B0        	ldir
1259  8C36 C9           	ret
1260  8C37
1261  8C37              ; --------------------------------------------------------------------------------------------------------------
1262  8C37
1263  8C37              Repone_pintar
1264  8C37
1265  8C37 21 A1 88     	ld hl,Variables_de_pintado
1266  8C3A 11 81 88     	ld de,Filas
1267  8C3D 01 08 00     	ld bc,8
1268  8C40 ED B0        	ldir
1269  8C42 C9           	ret
1270  8C43
1271  8C43              ; *************************************************************************************************************************************************************
1272  8C43              ;
1273  8C43              ; 8/1/23
1274  8C43              ;
1275  8C43              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1276  8C43              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1277  8C43              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1278  8C43
1279  8C43              ; Destruye HL y DE !!!!!
1280  8C43
1281  8C43              Inicia_punteros_de_cajas
1282  8C43
1283  8C43 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1284  8C46 CD DB 8C         call Extrae_address
1285  8C49 22 C9 88         ld (Puntero_store_caja),hl
1286  8C4C 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1287  8C4F 22 CD 88     	ld (Indice_restore_caja),hl
1288  8C52 CD DB 8C     	call Extrae_address
1289  8C55 22 CB 88     	ld (Puntero_restore_caja),hl
1290  8C58 C9               ret
1291  8C59
1292  8C59              ; *************************************************************************************************************************************************************
1293  8C59              ;
1294  8C59              ; 8/1/23
1295  8C59              ;
1296  8C59              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1297  8C59
1298  8C59 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1299  8C5C 22 E7 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1300  8C5F C9           	ret
1301  8C60 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1302  8C63 22 E9 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1303  8C66 C9           	ret
1304  8C67
1305  8C67              ; -------------------------------------------------------------------------------------------------------------
1306  8C67              ;
1307  8C67              ; 21/9/23
1308  8C67              ;
1309  8C67
1310  8C67              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1311  8C67
1312  8C67              Limpia_album_Amadeus
1313  8C67
1314  8C67 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1315  8C6A 7E           	ld a,(hl)
1316  8C6B A7           	and a
1317  8C6C C8           	ret z
1318  8C6D
1319  8C6D 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1320  8C70 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1321  8C73 01 0B 00     	ld bc,11
1322  8C76 AF           	xor a
1323  8C77 77           	ld (hl),a
1324  8C78 ED B0        	ldir
1325  8C7A
1326  8C7A 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1327  8C7D 22 E3 88     	ld (End_Snapshot_Amadeus),hl
1328  8C80
1329  8C80 C9           	ret
1330  8C81
1331  8C81 21 9B 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1332  8C84 11 9C 88     	ld de,Variables_de_borrado+1
1333  8C87 01 05 00     	ld bc,5
1334  8C8A AF           	xor a
1335  8C8B 77           	ld (hl),a
1336  8C8C ED B0        	ldir
1337  8C8E C9           	ret
1338  8C8F
1339  8C8F              ; -------------------------------------------------------------------------------------------------------------
1340  8C8F              ;
1341  8C8F              ; 8/9/23
1342  8C8F              ;
1343  8C8F
1344  8C8F              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1345  8C8F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1346  8C8F
1347  8C8F              Calcula_numero_de_malotes
1348  8C8F
1349  8C8F 21 00 70     	ld hl,Album_de_fotos
1350  8C92 EB           	ex de,hl
1351  8C93 2A DD 88     	ld hl,(Stack_snapshot)
1352  8C96
1353  8C96 06 00        	ld b,0
1354  8C98 7D           	ld a,l
1355  8C99 93           	sub e
1356  8C9A 28 07        	jr z,1F
1357  8C9C
1358  8C9C              ; Nº de malotes no es "0".
1359  8C9C
1360  8C9C D6 06        2 sub 6
1361  8C9E 04           	inc b
1362  8C9F A7           	and a
1363  8CA0 20 FA        	jr nz,2B
1364  8CA2 78           	ld a,b
1365  8CA3
1366  8CA3 32 D2 88     1 ld (Numero_de_malotes),a
1367  8CA6 C9           	ret
1368  8CA7
1369  8CA7              ; -------------------------------------------------------------------------------------------------------------
1370  8CA7              ;
1371  8CA7              ; 8/9/23
1372  8CA7              ;
1373  8CA7
1374  8CA7              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1375  8CA7              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1376  8CA7
1377  8CA7              Calcula_malotes_Amadeus
1378  8CA7
1379  8CA7 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1380  8CAA EB           	ex de,hl
1381  8CAB 2A E3 88     	ld hl,(End_Snapshot_Amadeus)
1382  8CAE
1383  8CAE 7C           	ld a,h
1384  8CAF A7           	and a
1385  8CB0 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1386  8CB2
1387  8CB2 06 00        	ld b,0
1388  8CB4 7D           	ld a,l
1389  8CB5 93           	sub e
1390  8CB6 28 07        	jr z,1F
1391  8CB8
1392  8CB8              ; Nº de malotes no es "0".
1393  8CB8
1394  8CB8 D6 06        2 sub 6
1395  8CBA 04           	inc b
1396  8CBB A7           	and a
1397  8CBC 20 FA        	jr nz,2B
1398  8CBE 78           	ld a,b
1399  8CBF
1400  8CBF 32 D2 88     1 ld (Numero_de_malotes),a
1401  8CC2 C9           	ret
1402  8CC3
1403  8CC3              ; -------------------------------------------------------------------------------------------------------------
1404  8CC3              ;
1405  8CC3              ; 28/2/23
1406  8CC3              ;
1407  8CC3
1408  8CC3              Calcula_numero_de_disparotes
1409  8CC3
1410  8CC3 21 56 70     	ld hl,Album_de_fotos_disparos
1411  8CC6 EB           	ex de,hl
1412  8CC7 2A E1 88     	ld hl,(End_Snapshot_disparos)
1413  8CCA
1414  8CCA 06 00        	ld b,0
1415  8CCC 7D           	ld a,l
1416  8CCD 93           	sub e
1417  8CCE 28 07        	jr z,1F
1418  8CD0
1419  8CD0              ; Nº de malotes no es "0".
1420  8CD0
1421  8CD0 D6 06        2 sub 6
1422  8CD2 04           	inc b
1423  8CD3 A7           	and a
1424  8CD4 20 FA        	jr nz,2B
1425  8CD6 78           	ld a,b
1426  8CD7
1427  8CD7 32 E6 88     1 ld (Numero_de_disparotes),a
1428  8CDA C9           	ret
1429  8CDB
1430  8CDB              ; *************************************************************************************************************************************************************
1431  8CDB              ;
1432  8CDB              ; 20/10/22
1433  8CDB              ;
1434  8CDB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1435  8CDB              ;
1436  8CDB              ; Destruye el puntero y DE !!!!!
1437  8CDB
1438  8CDB 5E           Extrae_address ld e,(hl)
1439  8CDC 23           	inc hl
1440  8CDD 56           	ld d,(hl)
1441  8CDE 2B           	dec hl
1442  8CDF EB           	ex de,hl
1443  8CE0 C9           	ret
1444  8CE1
1445  8CE1              ; *************************************************************************************************************************************************************
1446  8CE1              ;
1447  8CE1              ;	7/2/23
1448  8CE1              ;
1449  8CE1              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1450  8CE1              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1451  8CE1              ;
1452  8CE1              ;   Destruye HL y BC !!!!!,
1453  8CE1              ;
1454  8CE1              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1455  8CE1              ;					"0" ..... Izquierda.
1456  8CE1
1457  8CE1              Inicia_Puntero_objeto
1458  8CE1
1459  8CE1 3A 95 88     	ld a,(Cuad_objeto)
1460  8CE4 E6 01        	and 1
1461  8CE6 F5           	push af
1462  8CE7 CC 05 8D     	call z,Inicia_puntero_objeto_izq
1463  8CEA F1           	pop af
1464  8CEB 28 2B        	jr z,1F
1465  8CED CD F2 8C     	call Inicia_puntero_objeto_der
1466  8CF0 18 26        	jr 1F
1467  8CF2
1468  8CF2              ; Arrancamos desde la parte izquierda de la pantalla.
1469  8CF2              ; Iniciamos (Indice_Sprite_der).
1470  8CF2
1471  8CF2 2A 8B 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1472  8CF5 22 8F 88     	ld (Puntero_DESPLZ_der),hl
1473  8CF8 CD DB 8C     	call Extrae_address
1474  8CFB 22 85 88     	ld (Puntero_objeto),hl
1475  8CFE
1476  8CFE 2A 8D 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1477  8D01 22 91 88     	ld (Puntero_DESPLZ_izq),hl
1478  8D04 C9           	ret
1479  8D05
1480  8D05              ; Arrancamos desde la parte derecha de la pantalla.
1481  8D05              ; Iniciamos (Indice_Sprite_izq).
1482  8D05
1483  8D05 2A 8D 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1484  8D08 22 91 88     	ld (Puntero_DESPLZ_izq),hl
1485  8D0B CD DB 8C     	call Extrae_address
1486  8D0E 22 85 88     	ld (Puntero_objeto),hl
1487  8D11
1488  8D11 2A 8B 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1489  8D14 22 8F 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1490  8D17 C9           	ret
1491  8D18
1492  8D18              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1493  8D18
1494  8D18 21 40 83     1 ld hl,Amadeus
1495  8D1B ED 4B 85 88  	ld bc,(Puntero_objeto)
1496  8D1F B7 ED 42     	sub hl,bc
1497  8D22 C0           	ret nz
1498  8D23 21 B1 88     	ld hl,Ctrl_0
1499  8D26 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1500  8D28 C9           	ret 												; _de nuestra nave en los extremos.
1501  8D29
1502  8D29              ; *************************************************************************************************************************************************************
1503  8D29              ;
1504  8D29              ;	21/12/23
1505  8D29              ;
1506  8D29              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1507  8D29              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1508  8D29
1509  8D29              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1510  8D29              ;	_de la 2ª y 3ª entidad respectivamente.
1511  8D29
1512  8D29              Store_Restore_cajas
1513  8D29
1514  8D29 E5           	push hl
1515  8D2A D5           	push de
1516  8D2B C5            	push bc
1517  8D2C
1518  8D2C              ;	STORE !!!!!
1519  8D2C              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1520  8D2C
1521  8D2C F3           	di
1522  8D2D 21 81 88     	ld hl,Filas
1523  8D30 ED 5B C9 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1524  8D34 01 38 00     	ld bc,56
1525  8D37 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1526  8D39 FB           	ei
1527  8D3A
1528  8D3A              ; 	Entidad_sospechosa. 20/4/23
1529  8D3A
1530  8D3A 3A 9A 88     	ld a,(Impacto)
1531  8D3D A7           	and a
1532  8D3E 28 0C        	jr z,1F
1533  8D40
1534  8D40 2A C9 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1535  8D43 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1536  8D46 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1537  8D47 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1538  8D49 22 EC 88     	ld (Entidad_sospechosa_de_colision),hl
1539  8D4C
1540  8D4C              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1541  8D4C
1542  8D4C 2A CB 88     1 ld hl,(Puntero_restore_caja)
1543  8D4F 7E           	ld a,(hl)
1544  8D50 A7           	and a
1545  8D51 F5           	push af
1546  8D52 28 0A        	jr z,2F
1547  8D54
1548  8D54 F3           	di
1549  8D55 11 81 88     	ld de,Filas
1550  8D58 01 38 00     	ld bc,56
1551  8D5B ED B0        	ldir
1552  8D5D FB           	ei
1553  8D5E
1554  8D5E CD 7A 8D     2 call Incrementa_punteros_de_cajas
1555  8D61
1556  8D61 F1           	pop af
1557  8D62 28 E8        	jr z,1B
1558  8D64
1559  8D64 C1           	pop bc
1560  8D65 D1           	pop de
1561  8D66 E1           	pop hl
1562  8D67
1563  8D67 C9           	ret
1564  8D68
1565  8D68              ; **************************************************************************************************
1566  8D68              ;
1567  8D68              ;	21/12/23
1568  8D68              ;
1569  8D68              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1570  8D68
1571  8D68 E5           Restore_entidad push hl
1572  8D69 D5           	push de
1573  8D6A C5            	push bc
1574  8D6B
1575  8D6B 2A C9 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1576  8D6E 11 81 88     	ld de,Filas
1577  8D71 01 38 00     	ld bc,56
1578  8D74 ED B0        	ldir
1579  8D76
1580  8D76 C1           	pop bc
1581  8D77 D1           	pop de
1582  8D78 E1           	pop hl
1583  8D79 C9           	ret
1584  8D7A
1585  8D7A              ; **************************************************************************************************
1586  8D7A              ;
1587  8D7A              ;	08/05/23
1588  8D7A              ;
1589  8D7A              ;	Incrementamos los dos punteros de entidades. (+1).
1590  8D7A
1591  8D7A              Incrementa_punteros_de_cajas
1592  8D7A
1593  8D7A 2A CB 88     	ld hl,(Puntero_restore_caja)
1594  8D7D 22 C9 88     	ld (Puntero_store_caja),hl
1595  8D80 2A CD 88     	ld hl,(Indice_restore_caja)
1596  8D83 23           	inc hl
1597  8D84 23           	inc hl
1598  8D85 22 CD 88     	ld (Indice_restore_caja),hl
1599  8D88 CD DB 8C         call Extrae_address
1600  8D8B 22 CB 88         ld (Puntero_restore_caja),hl
1601  8D8E C9               ret
1602  8D8F
1603  8D8F              ; **************************************************************************************************
1604  8D8F              ;
1605  8D8F              ;	21/12/23
1606  8D8F              ;
1607  8D8F              ;	Restore_Amadeus
1608  8D8F              ;
1609  8D8F              ;	Cargamos en DRAW los parámetros de Amadeus.
1610  8D8F              ;
1611  8D8F
1612  8D8F E5           Restore_Amadeus	push hl
1613  8D90 D5           	push de
1614  8D91 C5            	push bc
1615  8D92 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1616  8D95 11 81 88     	ld de,Filas
1617  8D98 01 38 00     	ld bc,56
1618  8D9B ED B0        	ldir
1619  8D9D C1           	pop bc
1620  8D9E D1           	pop de
1621  8D9F E1           	pop hl
1622  8DA0 C9           	ret
1623  8DA1
1624  8DA1              ; *************************************************************************************************************************************************************
1625  8DA1              ;
1626  8DA1              ;	21/12/23
1627  8DA1              ;
1628  8DA1              ;	Store_Amadeus
1629  8DA1              ;
1630  8DA1              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1631  8DA1              ;
1632  8DA1              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1633  8DA1              ;
1634  8DA1              ;	DESTRUYE: HL y BC y DE.
1635  8DA1
1636  8DA1 21 81 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1637  8DA4 01 38 00     	ld bc,56
1638  8DA7 ED B0        	ldir
1639  8DA9 C9           	ret
1640  8DAA
1641  8DAA              ; -----------------------------------------------------------
1642  8DAA              ;
1643  8DAA              ;	21/12/23
1644  8DAA              ;
1645  8DAA              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1646  8DAA              ;
1647  8DAA              ;	Destruye: HL,BC,DE,A
1648  8DAA
1649  8DAA 21 81 88     Borra_datos_entidad ld hl,Filas
1650  8DAD 01 37 00     	ld bc,55
1651  8DB0 AF           	xor a
1652  8DB1 77           	ld (hl),a
1653  8DB2 11 82 88     	ld de,Filas+1
1654  8DB5 ED B0        	ldir
1655  8DB7 C9           	ret
1656  8DB8
1657  8DB8              ; -----------------------------------------------------------
1658  8DB8
1659  8DB8              ; Teclado.
1660  8DB8
1661  8DB8 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1662  8DBA DB FE        	in a,($fe)
1663  8DBC E6 01        	and $01
1664  8DBE 28 02        	jr z,1f
1665  8DC0 18 F6        	jr Pulsa_ENTER
1666  8DC2 C9           1 ret
1667  8DC3
1668  8DC3              ; **************************************************************************************************
1669  8DC3              ;
1670  8DC3              ; Temporización.
1671  8DC3
1672  8DC3              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1673  8DC3              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1674  8DC3              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1675  8DC3              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1676  8DC3
1677  8DC3              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1678  8DC3              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1679  8DC3              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1680  8DC3
1681  8DC3              ; A partir de $4f61 no hace falta DELAY.
1682  8DC3
1683  8DC3              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1684  8DC3
1685  8DC3 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1686  8DC6 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1687  8DC7 78           	LD A,B
1688  8DC8 A7           	AND A
1689  8DC9 20 FB        	JR NZ,wait
1690  8DCB C9           	RET
1691  8DCC
1692  8DCC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1693  8DCC              ;
1694  8DCC              ;	5/3/23
1695  8DCC              ;
1696  8DCC              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1697  8DCC
1698  8DCC              Movimiento_Amadeus
1699  8DCC
1700  8DCC              ; Disparo.
1701  8DCC
1702  8DCC 3A FC 88     	ld a,(Disparo_Amadeus)
1703  8DCF A7           	and a
1704  8DD0 20 02        	jr nz,1F
1705  8DD2 18 15        	jr 2F
1706  8DD4
1707  8DD4 3E F7        1 ld a,$f7													; "5" para disparar.
1708  8DD6 DB FE        	in a,($fe)
1709  8DD8 E6 10        	and $10
1710  8DDA
1711  8DDA F5           	push af
1712  8DDB CC 83 8E     	call z,Genera_disparo
1713  8DDE F1           	pop af
1714  8DDF 20 08        	jr nz,2F
1715  8DE1
1716  8DE1 3A FC 88     	ld a,(Disparo_Amadeus)
1717  8DE4 EE 01        	xor 1
1718  8DE6 32 FC 88     	ld (Disparo_Amadeus),a
1719  8DE9 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1720  8DEB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1721  8DED E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1722  8DEF CC 3B 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1723  8DF2
1724  8DF2 3E F7        	ld a,$f7
1725  8DF4 DB FE        	in a,($fe)
1726  8DF6 E6 01        	and $01
1727  8DF8 C8           	ret z
1728  8DF9
1729  8DF9 3E F7        	ld a,$f7
1730  8DFB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1731  8DFD E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1732  8DFF CC 18 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1733  8E02 C9           	ret
1734  8E03
1735  8E03              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1736  8E03              ;
1737  8E03              ;	Rutina provisional para que los malotes cagen balas.
1738  8E03
1739  8E03              Detecta_disparo_entidad
1740  8E03
1741  8E03 3A FF 88     	ld a,(Disparo_entidad)
1742  8E06 A7           	and a
1743  8E07 C8           	ret z
1744  8E08
1745  8E08              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1746  8E08
1747  8E08              ;	ld a,$7f				; Detecta SPACE.
1748  8E08              ;	in a,($fe)
1749  8E08              ;	and 1
1750  8E08              ;	ret nz
1751  8E08
1752  8E08 CD 83 8E     	call Genera_disparo
1753  8E0B C9           	ret
1754  8E0C
1755  8E0C              ; ----------------------------------------------------------------------
1756  8E0C              ;
1757  8E0C              ;	8/9/23
1758  8E0C
1759  8E0C 2A E3 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1760  8E0F 2B            	dec hl
1761  8E10 7E           	ld a,(hl)
1762  8E11 A7           	and a
1763  8E12 C8           	ret z										; Salimos si es álbum está vacío.
1764  8E13
1765  8E13 11 A0 88     	ld de,Variables_de_borrado+5
1766  8E16 01 06 00     	ld bc,6
1767  8E19 ED B8        	lddr
1768  8E1B C9           	ret
1769  8E1C
1770  8E1C              ; ----------------------------------------------------------------------
1771  8E1C              ;
1772  8E1C              ;	9/9/23
1773  8E1C
1774  8E1C              Repone_datos_de_borrado_Amadeus
1775  8E1C
1776  8E1C 21 9B 88     	ld hl,Variables_de_borrado
1777  8E1F 11 AC 70     	ld de,Album_de_fotos_Amadeus
1778  8E22 01 06 00     	ld bc,6
1779  8E25 ED B0        	ldir
1780  8E27
1781  8E27 EB           	ex de,hl
1782  8E28 22 E3 88     	ld (End_Snapshot_Amadeus),hl
1783  8E2B
1784  8E2B C9           	ret
1785  8E2C
1786  8E2C              ; ----------------------------------------------------------------------
1787  8E2C              ;
1788  8E2C              ;	27/10/23
1789  8E2C              ;
1790  8E2C
1791  8E2C              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1792  8E2C              ;	_ Album_de_fotos correspondiente.
1793  8E2C
1794  8E2C              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1795  8E2C              ;	_ durante el proceso de escritura.
1796  8E2C
1797  8E2C              Repone_datos_de_borrado
1798  8E2C
1799  8E2C F3           	di
1800  8E2D ED 5B DD 88  	ld de,(Stack_snapshot)
1801  8E31 21 9B 88     	ld hl,Variables_de_borrado
1802  8E34 01 06 00     	ld bc,6
1803  8E37 ED B0        	ldir
1804  8E39 FB           	ei
1805  8E3A
1806  8E3A EB           	ex de,hl
1807  8E3B 22 DD 88     	ld (Stack_snapshot),hl
1808  8E3E
1809  8E3E C9           	ret
1810  8E3F
1811  8E3F              ; --------------------------------------------------------------------------------------
1812  8E3F
1813  8E3F              Pinta_Amadeus
1814  8E3F
1815  8E3F CD A7 8C        	call Calcula_malotes_Amadeus
1816  8E42 CD E7 96     	call Extrae_foto_Amadeus
1817  8E45 CD 67 8C     	call Limpia_album_Amadeus
1818  8E48
1819  8E48 C9           	ret
1820  8E49
1821  8E49              Pinta_entidades
1822  8E49
1823  8E49              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1824  8E49
1825  8E49 3A E5 88     	ld a,(Ctrl_3)
1826  8E4C CB 47        	bit 0,a
1827  8E4E C8           	ret z
1828  8E4F
1829  8E4F CD 8F 8C     	call Calcula_numero_de_malotes
1830  8E52 CD 65 96     	call Extrae_foto_entidades
1831  8E55 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1832  8E58
1833  8E58 C9           	ret
1834  8E59
1835  8E59              ; -----------------------------------------------------------------------------------
1836  8E59              ;
1837  8E59              ;	10/12/23
1838  8E59              ;
1839  8E59              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1840  8E59
1841  8E59              Actualiza_relojes
1842  8E59
1843  8E59 3A E5 88     	ld a,(Ctrl_3)
1844  8E5C CB 47        	bit 0,a
1845  8E5E C8           	ret z 						;	Salimos si no hemos pintado unidades.
1846  8E5F
1847  8E5F 21 F7 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1848  8E62 34           	inc (hl)
1849  8E63
1850  8E63 34           	inc (hl)
1851  8E64 35           	dec (hl)
1852  8E65 C0           	ret nz
1853  8E66
1854  8E66 21 F8 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1855  8E69 34           	inc (hl)
1856  8E6A C9           	ret
1857  8E6B
1858  8E6B              ; ---------------------------------------------------------------
1859  8E6B              ;
1860  8E6B              ;	21/12/23
1861  8E6B
1862  8E6B              Guarda_parametros_DRAW
1863  8E6B
1864  8E6B 21 81 88     	ld hl,Filas
1865  8E6E 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1866  8E71 01 38 00     	ld bc,56
1867  8E74 ED B0        	ldir
1868  8E76 C9           	ret
1869  8E77
1870  8E77              Recupera_parametros_DRAW
1871  8E77
1872  8E77 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1873  8E7A 11 81 88     	ld de,Filas
1874  8E7D 01 38 00     	ld bc,56
1875  8E80 ED B0        	ldir
1876  8E82 C9           	ret
1877  8E83
1878  8E83              ; ---------------------------------------------------------------
1879  8E83
1880  8E83              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E83              ; ******************************************************************************************************************************************************************************************
   2+ 8E83              ;
   3+ 8E83              ;   21/07/23
   4+ 8E83              ;
   5+ 8E83              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E83              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E83              ;
   8+ 8E83              ;
   9+ 8E83              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E83              ;
  11+ 8E83              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E83              ;               _ hacen las entidades hacia abajo.
  13+ 8E83              ;
  14+ 8E83              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E83              ;
  16+ 8E83              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E83              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E83              ;
  19+ 8E83              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E83              ;           _ la bala.
  21+ 8E83              ;
  22+ 8E83              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E83              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E83              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E83              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E83              ;           _ en el momento de generarse la bala)).
  27+ 8E83
  28+ 8E83              Genera_disparo
  29+ 8E83
  30+ 8E83              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E83              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E83              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E83              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E83              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E83              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E83              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E83
  38+ 8E83              ; Exclusiones:
  39+ 8E83
  40+ 8E83 3A 99 88         ld a,(Vel_down)
  41+ 8E86 47               ld b,a
  42+ 8E87 3A F6 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E8A B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E8B D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E8C 3A B2 88         ld a,(Columnas)
  46+ 8E8F 47               ld b,a
  47+ 8E90 3A 82 88         ld a,(Columns)
  48+ 8E93 B8               cp b
  49+ 8E94 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E95
  51+ 8E95              ; ----- ----- -----
  52+ 8E95
  53+ 8E95 3A B1 88         ld a,(Ctrl_0)
  54+ 8E98 CB 77            bit 6,a
  55+ 8E9A 20 06            jr nz,14F
  56+ 8E9C
  57+ 8E9C 3A 88 88         ld a,(Coordenada_y)
  58+ 8E9F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EA1 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EA2
  61+ 8EA2 21 00 80     14 ld hl,Indice_disparo
  62+ 8EA5 3A 89 88         ld a,(CTRL_DESPLZ)
  63+ 8EA8 4F               ld c,a
  64+ 8EA9 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EAB              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EAB              ;                                            ""        ""       "f9", B="1"
  67+ 8EAB              ;                                            ""        ""       "fb", B="2"
  68+ 8EAB              ;                                            ""        ""       "fb", B="3"
  69+ 8EAB A7               and a
  70+ 8EAC 28 10            jr z,1F
  71+ 8EAE E6 01            and 1
  72+ 8EB0 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EB1
  74+ 8EB1 79               ld a,c
  75+ 8EB2 16 F9            ld d,$f9
  76+ 8EB4 23           2 inc hl
  77+ 8EB5 23               inc hl
  78+ 8EB6 04               inc b
  79+ 8EB7 BA               cp d
  80+ 8EB8 28 04            jr z,1F
  81+ 8EBA 14               inc d
  82+ 8EBB 14               inc d
  83+ 8EBC 18 F6            jr 2B
  84+ 8EBE
  85+ 8EBE CD DB 8C     1 call Extrae_address
  86+ 8EC1 E5               push hl
  87+ 8EC2 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EC4 DD 21 2D 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EC8
  90+ 8EC8              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EC8              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EC8
  93+ 8EC8 3A B1 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8ECB CB 77            bit 6,a
  95+ 8ECD 20 04            jr nz,19F
  96+ 8ECF
  97+ 8ECF AF               xor a
  98+ 8ED0 32 FF 88         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8ED3
 100+ 8ED3 3A 95 88     19 ld a,(Cuad_objeto)
 101+ 8ED6 FE 02            cp 2
 102+ 8ED8 38 66            jr c,3F
 103+ 8EDA 28 64            jr z,3F
 104+ 8EDC
 105+ 8EDC              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EDC
 107+ 8EDC E6 01            and 1
 108+ 8EDE 28 30            jr z,4F
 109+ 8EE0
 110+ 8EE0              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EE0              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EE0              ;
 113+ 8EE0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EE0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EE0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EE0
 117+ 8EE0 2A 83 88     	ld hl,(Posicion_actual)
 118+ 8EE3
 119+ 8EE3              ;   Amadeus o entidad ???.
 120+ 8EE3
 121+ 8EE3 3A B1 88         ld a,(Ctrl_0)
 122+ 8EE6 CB 77            bit 6,a
 123+ 8EE8 28 0A            jr z,8F
 124+ 8EEA
 125+ 8EEA              ; 	Dispara Amadeus.
 126+ 8EEA
 127+ 8EEA 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EEC CD 56 96         call PreviousScan
 129+ 8EEF CD 56 96         call PreviousScan
 130+ 8EF2
 131+ 8EF2              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EF2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EF2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EF2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EF2
 136+ 8EF2 18 11            jr 10F
 137+ 8EF4
 138+ 8EF4              ; 	Dispara Entidad.
 139+ 8EF4
 140+ 8EF4 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EF7              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EF7
 143+ 8EF7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EF7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EF7
 146+ 8EF7 C5               push bc
 147+ 8EF8 06 10            ld b,16
 148+ 8EFA CD 47 96     9 call NextScan
 149+ 8EFD 10 FB            djnz 9B
 150+ 8EFF C1               pop bc
 151+ 8F00 CD 6A 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F03 18 06            jr 17F
 153+ 8F05
 154+ 8F05              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F05              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F05              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F05              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F05
 159+ 8F05 CD 6A 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F08 CD DF 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F0B              ;                                                      ; _al generar el disparo.
 162+ 8F0B
 163+ 8F0B              ; 	LLegados a este punto tendremos:
 164+ 8F0B              ;
 165+ 8F0B              ;       Puntero_objeto_disparo en IY.
 166+ 8F0B              ;       Rutinas_de_impresion en IX.
 167+ 8F0B              ;       Puntero_de_impresion en HL.
 168+ 8F0B              ;       Impacto/Dirección en BC.
 169+ 8F0B
 170+ 8F0B CD 72 8F     17 call Almacena_disparo
 171+ 8F0E 18 52            jr 6F                                             ; RET.
 172+ 8F10
 173+ 8F10              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F10              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F10              ;
 176+ 8F10              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F10              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F10              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F10
 180+ 8F10 2A 83 88     4 ld hl,(Posicion_actual)
 181+ 8F13
 182+ 8F13              ;   Amadeus o entidad ???.
 183+ 8F13
 184+ 8F13 3A B1 88         ld a,(Ctrl_0)
 185+ 8F16 CB 77            bit 6,a
 186+ 8F18 28 0A            jr z,11F
 187+ 8F1A
 188+ 8F1A              ; 	Dispara Amadeus.
 189+ 8F1A
 190+ 8F1A 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F1C CD 56 96         call PreviousScan
 192+ 8F1F CD 56 96         call PreviousScan
 193+ 8F22
 194+ 8F22              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F22              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F22              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F22              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F22
 199+ 8F22 18 11            jr 13F
 200+ 8F24
 201+ 8F24              ; 	Dispara Entidad.
 202+ 8F24
 203+ 8F24 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F27              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F27
 206+ 8F27              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F27              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F27
 209+ 8F27 C5               push bc
 210+ 8F28 06 10            ld b,16
 211+ 8F2A CD 47 96     12 call NextScan
 212+ 8F2D 10 FB            djnz 12B
 213+ 8F2F C1               pop bc
 214+ 8F30
 215+ 8F30 CD 63 8F         call Ajusta_disparo_parte_derecha
 216+ 8F33 18 06            jr 18F
 217+ 8F35
 218+ 8F35              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F35              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F35              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F35              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F35
 223+ 8F35 CD 63 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F38 CD DF 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F3B              ;                                                       ; _al generar el disparo.
 226+ 8F3B
 227+ 8F3B              ; LLegados a este punto tendremos:
 228+ 8F3B              ;
 229+ 8F3B              ;       Puntero_objeto_disparo en IY.
 230+ 8F3B              ;       Rutinas_de_impresion en IX.
 231+ 8F3B              ;       Puntero_de_impresion en HL.
 232+ 8F3B              ;       Impacto/Dirección en BC.
 233+ 8F3B
 234+ 8F3B CD 72 8F     18 call Almacena_disparo
 235+ 8F3E 18 22            jr 6F                                               ; RET.
 236+ 8F40
 237+ 8F40              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F40
 239+ 8F40 28 11        3 jr z,5F
 240+ 8F42
 241+ 8F42              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F42              ;
 243+ 8F42              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F42              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F42              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F42              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F42
 248+ 8F42              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F42              ;	   ""        ""       "f9", B="1"
 250+ 8F42              ;	   ""        ""       "fb", B="2"
 251+ 8F42              ; 	   ""        ""       "fb", B="3"
 252+ 8F42
 253+ 8F42 2A 83 88     	ld hl,(Posicion_actual)
 254+ 8F45 CD 47 96     	call NextScan
 255+ 8F48
 256+ 8F48              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F48              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F48              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F48              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F48
 261+ 8F48 CD 6A 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F4B
 263+ 8F4B              ; 	No se produce impacto. B="$80"
 264+ 8F4B              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F4B
 266+ 8F4B 01 80 80         ld bc,$8080
 267+ 8F4E
 268+ 8F4E              ; 	LLegados a este punto tendremos:
 269+ 8F4E              ;
 270+ 8F4E              ;       Puntero_objeto_disparo en IY.
 271+ 8F4E              ;       Rutinas_de_impresion en IX.
 272+ 8F4E              ;       Puntero_de_impresion en HL.
 273+ 8F4E              ;       Impacto/Dirección en BC.
 274+ 8F4E
 275+ 8F4E CD 72 8F         call Almacena_disparo
 276+ 8F51 18 0F            jr 6F                                           ; RET.
 277+ 8F53
 278+ 8F53              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F53              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F53              ;
 281+ 8F53              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F53              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F53              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F53              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F53
 286+ 8F53 2A 83 88     5 ld hl,(Posicion_actual)
 287+ 8F56 CD 47 96     	call NextScan
 288+ 8F59
 289+ 8F59              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F59              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F59              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F59              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F59
 294+ 8F59 CD 63 8F         call Ajusta_disparo_parte_derecha
 295+ 8F5C
 296+ 8F5C              ; 	No se produce impacto. B="$80"
 297+ 8F5C              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F5C
 299+ 8F5C 01 80 80     15 ld bc,$8080
 300+ 8F5F
 301+ 8F5F              ; 	LLegados a este punto tendremos:
 302+ 8F5F              ;
 303+ 8F5F              ;       Puntero_objeto_disparo en IY.
 304+ 8F5F              ;       Rutinas_de_impresion en IX.
 305+ 8F5F              ;       Puntero_de_impresion en HL.
 306+ 8F5F              ;       Impacto/Dirección en BC.
 307+ 8F5F
 308+ 8F5F CD 72 8F         call Almacena_disparo
 309+ 8F62
 310+ 8F62 C9           6 ret
 311+ 8F63
 312+ 8F63              ; ----------------------------------------------------------------
 313+ 8F63              ;
 314+ 8F63              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F63              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F63              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F63
 318+ 8F63 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F64 FE 02            cp 2
 320+ 8F66 38 01            jr c,1F
 321+ 8F68 23               inc hl
 322+ 8F69 C9           1 ret
 323+ 8F6A
 324+ 8F6A 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F6B FE 01        	cp 1
 326+ 8F6D 20 01        	jr nz,1F
 327+ 8F6F 2B           	dec hl
 328+ 8F70 2B           1 dec hl
 329+ 8F71 C9               ret
 330+ 8F72
 331+ 8F72              ; ----------------------------------------------------------------
 332+ 8F72              ;
 333+ 8F72              ;   25/02/23
 334+ 8F72              ;
 335+ 8F72              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F72              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F72              ;
 338+ 8F72              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F72              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F72
 341+ 8F72              Almacena_disparo
 342+ 8F72
 343+ 8F72 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F73 F1               pop af
 345+ 8F74 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F75
 347+ 8F75 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F76 E6 01            and 1
 349+ 8F78 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F7A              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F7A              ; 	Dispara AMADEUS.
 352+ 8F7A
 353+ 8F7A              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F7A              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F7A              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F7A              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F7A
 358+ 8F7A C5               push bc
 359+ 8F7B 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F7E 2A E9 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F81 A7               and a
 362+ 8F82 ED 42            sbc hl,bc
 363+ 8F84 CC 60 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F87 C1               pop bc
 365+ 8F88 28 54            jr z,4F
 366+ 8F8A
 367+ 8F8A 2A E9 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F8D 23               inc hl
 369+ 8F8E 23               inc hl
 370+ 8F8F 22 E9 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F92              ;                                                   ; _ Disparo_(+1).
 372+ 8F92 18 18            jr 2F
 373+ 8F94
 374+ 8F94              ; Dispara una entidad.
 375+ 8F94
 376+ 8F94 C5           1 push bc
 377+ 8F95 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F98 2A E7 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F9B A7               and a
 380+ 8F9C ED 42            sbc hl,bc
 381+ 8F9E CC 59 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FA1 C1               pop bc
 383+ 8FA2 28 3A            jr z,4F
 384+ 8FA4
 385+ 8FA4 2A E7 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FA7 23               inc hl
 387+ 8FA8 23               inc hl
 388+ 8FA9 22 E7 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FAC              ;                                                   ; _ Disparo_(+1).
 390+ 8FAC CD DB 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FAF              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FAF              ;
 393+ 8FAF              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FAF              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FAF              ;                                                     Puntero_de_impresion en HL.
 396+ 8FAF              ;                                                     Impacto/Dirección en BC.
 397+ 8FAF
 398+ 8FAF 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FB0 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FB1 23               inc hl                                          ; _ al siguiente.
 401+ 8FB2 A7               and a
 402+ 8FB3 20 C0            jr nz,3B
 403+ 8FB5
 404+ 8FB5 08               ex af,af
 405+ 8FB6 ED 73 D7 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FBA F9               ld sp,hl
 407+ 8FBB
 408+ 8FBB DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FBD F5               push af                                         ; Puntero de impresión.
 410+ 8FBE FD E5            push iy                                         ; Puntero objeto.
 411+ 8FC0 C5               push bc                                         ; Control.
 412+ 8FC1
 413+ 8FC1 ED 7B D7 88      ld sp,(Stack)
 414+ 8FC5
 415+ 8FC5              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FC5
 417+ 8FC5 21 C6 88     	ld hl,Ctrl_1
 418+ 8FC8 CB C6        	set 0,(hl)
 419+ 8FCA
 420+ 8FCA DD E5        	push ix
 421+ 8FCC E1               pop hl
 422+ 8FCD F5               push af
 423+ 8FCE DD E1            pop ix
 424+ 8FD0
 425+ 8FD0 CD 16 71     	call Guarda_foto_registros
 426+ 8FD3
 427+ 8FD3 21 C6 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FD6 CB 86        	res 0,(hl)
 429+ 8FD8
 430+ 8FD8              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FD8              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FD8
 433+ 8FD8 CD 60 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FDB CD 59 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FDE
 436+ 8FDE C9           4 ret
 437+ 8FDF
 438+ 8FDF              ; ----------------------------------------------------------------
 439+ 8FDF              ;
 440+ 8FDF              ;   4/3/23
 441+ 8FDF              ;
 442+ 8FDF              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FDF              ;   _ al generarse el disparo.
 444+ 8FDF              ;
 445+ 8FDF              ;       "$80" ..... No se produce colisión.
 446+ 8FDF              ;       "$81" ..... Se produce colisión.
 447+ 8FDF              ;
 448+ 8FDF              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FDF              ;         _ que forman el disparo.
 450+ 8FDF
 451+ 8FDF
 452+ 8FDF              Comprueba_Colision
 453+ 8FDF
 454+ 8FDF              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FDF
 456+ 8FDF FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FE1 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FE2
 459+ 8FE2 CD 18 90         call Modifica_H_Velocidad_disparo
 460+ 8FE5
 461+ 8FE5 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FE6 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FE8 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FEA
 465+ 8FEA 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FEC CD 08 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FEF
 468+ 8FEF 7B               ld a,e
 469+ 8FF0 E6 01            and 1
 470+ 8FF2 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FF4              ;                                                  ; _ para activar IMPACTO.
 472+ 8FF4 E1               pop hl
 473+ 8FF5 E5               push hl
 474+ 8FF6 CD 47 96         call NextScan
 475+ 8FF9
 476+ 8FF9 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FFA FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FFC 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FFE              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FFE 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9000 CD 08 90         call Bucle_2
 482+ 9003
 483+ 9003 43           1 ld b,e
 484+ 9004 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9005 FD E1            pop iy
 486+ 9007 C9               ret
 487+ 9008
 488+ 9008              ; ---------- ----------
 489+ 9008
 490+ 9008 06 02        Bucle_2 ld b,2
 491+ 900A FD 7E 00     2 ld a,(iy)
 492+ 900D A6               and (hl)
 493+ 900E 28 02            jr z,1F
 494+ 9010 1E 81            ld e,$81
 495+ 9012 23           1 inc hl
 496+ 9013 FD 23            inc iy
 497+ 9015 10 F3            djnz 2B
 498+ 9017 C9               ret
 499+ 9018
 500+ 9018              ; ---------- ----------
 501+ 9018              ;
 502+ 9018              ;   21/7/23
 503+ 9018
 504+ 9018              Modifica_H_Velocidad_disparo
 505+ 9018
 506+ 9018 3A F6 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 901B FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 901D D0               ret nc                                         ; _ incrementamos H.
 509+ 901E 24               inc h
 510+ 901F
 511+ 901F C9               ret
 512+ 9020
 513+ 9020              ; -------------------------------------------------------------------------------------------------------------
 514+ 9020              ;
 515+ 9020              ;   04/12/23
 516+ 9020              ;
 517+ 9020              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9020              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9020              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9020              ;
 521+ 9020              ;   MODIFICA: HL,DE,B y A.
 522+ 9020
 523+ 9020              Genera_coordenadas_X
 524+ 9020
 525+ 9020              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9020              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9020
 528+ 9020              ;   Limpiamos almacenes.
 529+ 9020
 530+ 9020 CD 51 90         call Limpia_Coordenadas_X
 531+ 9023
 532+ 9023              ;   Almacenamos coordenadas X.
 533+ 9023
 534+ 9023              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9023
 536+ 9023 2A AB 88         ld hl,(Puntero_de_impresion)
 537+ 9026 11 F3 88         ld de,Coordenadas_X_Entidad
 538+ 9029 06 02            ld b,2
 539+ 902B
 540+ 902B 3A 89 88         ld a,(CTRL_DESPLZ)
 541+ 902E A7               and a
 542+ 902F 28 01            jr z,1F
 543+ 9031 04               inc b
 544+ 9032
 545+ 9032 CD 48 90     1 call Guarda_coordenadas_X
 546+ 9035
 547+ 9035              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9035
 549+ 9035 2A AD 85         ld hl,(p.imp.amadeus)
 550+ 9038 11 F0 88         ld de,Coordenadas_X_Amadeus
 551+ 903B 06 02            ld b,2
 552+ 903D
 553+ 903D 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 9040 A7               and a
 555+ 9041 28 01            jr z,2F
 556+ 9043 04               inc b
 557+ 9044
 558+ 9044 CD 48 90     2 call Guarda_coordenadas_X
 559+ 9047
 560+ 9047              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9047
 562+ 9047 C9               ret
 563+ 9048
 564+ 9048              ; ----- ----- ----- ----- -----
 565+ 9048
 566+ 9048 7D           Guarda_coordenadas_X  ld a,l
 567+ 9049 E6 1F            and $1f
 568+ 904B 12           1 ld (de),a
 569+ 904C 3C               inc a
 570+ 904D 13               inc de
 571+ 904E 10 FB            djnz 1B
 572+ 9050 C9               ret
 573+ 9051
 574+ 9051 AF           Limpia_Coordenadas_X xor a
 575+ 9052 06 06            ld b,6
 576+ 9054 21 F0 88         ld hl,Coordenadas_X_Amadeus
 577+ 9057 77           1 ld (hl),a
 578+ 9058 23               inc hl
 579+ 9059 10 FC            djnz 1B
 580+ 905B C9               ret
 581+ 905C
 582+ 905C              ; ----- ----- ----- ----- -----
 583+ 905C
 584+ 905C              Compara_coordenadas_X
 585+ 905C
 586+ 905C 06 03            ld b,3
 587+ 905E 11 F5 88         ld de,Coordenadas_X_Entidad+2
 588+ 9061
 589+ 9061 1A               ld a,(de)
 590+ 9062 A7               and a
 591+ 9063 20 01            jr nz,2F
 592+ 9065 05               dec b
 593+ 9066
 594+ 9066 1B           2 dec de
 595+ 9067 1B               dec de
 596+ 9068 21 F0 88         ld hl,Coordenadas_X_Amadeus
 597+ 906B
 598+ 906B D5           1 push de
 599+ 906C E5               push hl
 600+ 906D C5               push bc
 601+ 906E
 602+ 906E CD 78 90         call Comparando
 603+ 9071
 604+ 9071 C1               pop bc
 605+ 9072 E1               pop hl
 606+ 9073 D1               pop de
 607+ 9074
 608+ 9074 13               inc de
 609+ 9075 10 F4            djnz 1B
 610+ 9077
 611+ 9077 C9               ret
 612+ 9078
 613+ 9078              ; ----- ----- ----- ----- -----
 614+ 9078              ;
 615+ 9078              ;   4/12/23
 616+ 9078              ;
 617+ 9078              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9078
 619+ 9078 06 03        Comparando ld b,3
 620+ 907A 1A               ld a,(de)
 621+ 907B 4E           2 ld c,(hl)
 622+ 907C B9               cp c
 623+ 907D 28 04            jr z,1F
 624+ 907F 23               inc hl
 625+ 9080 10 F9            djnz 2B
 626+ 9082 C9               ret
 627+ 9083
 628+ 9083 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9085 32 9A 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9088 21 EB 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 908B CB D6            set 2,(hl)
 632+ 908D C9               ret
 633+ 908E
 634+ 908E              ; -----------------------------------------------------------------------
 635+ 908E              ;
 636+ 908E              ;   7/12/23
 637+ 908E              ;
 638+ 908E
 639+ 908E              Detecta_colision_nave_entidad
 640+ 908E
 641+ 908E              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 908E
 643+ 908E FD 2A 85 88      ld iy,(Puntero_objeto)
 644+ 9092 2A AB 88         ld hl,(Puntero_de_impresion)
 645+ 9095
 646+ 9095 E5               push hl
 647+ 9096
 648+ 9096              ; ----- ----- -----
 649+ 9096 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9098 06 0A            ld b,10
 651+ 909A CD CA 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 909D 7B               ld a,e
 653+ 909E FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 90A0 38 0E            jr c,3F
 655+ 90A2
 656+ 90A2              ; LLegados a este punto:
 657+ 90A2              ;
 658+ 90A2              ;   HAY COLISIÓN !!!!!.
 659+ 90A2              ;
 660+ 90A2              ;   .db (Impacto) de Amadeus a "1".
 661+ 90A2              ;   SET el bit3 de (Impacto2).
 662+ 90A2              ;
 663+ 90A2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90A2
 665+ 90A2 21 9A 88         ld hl,Impacto
 666+ 90A5 36 01            ld (hl),1
 667+ 90A7 21 EB 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 90AA CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 90AC CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 90AE
 671+ 90AE 18 18            jr 1F
 672+ 90B0
 673+ 90B0              ; -----
 674+ 90B0
 675+ 90B0 E1           3 pop hl
 676+ 90B1 CD 47 96         call NextScan
 677+ 90B4 E5               push hl
 678+ 90B5 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 90B6 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 90B8 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 90BA 30 0C            jr nc,1F
 682+ 90BC              ;                                                  ; _ 2º scanline si esto es así.
 683+ 90BC 10 DC            djnz 2B
 684+ 90BE
 685+ 90BE              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 90BE
 687+ 90BE              ; LLegados a este punto:
 688+ 90BE              ;
 689+ 90BE              ;   NO HAY COLISIÓN !!!!!.
 690+ 90BE              ;
 691+ 90BE              ;   .db (Impacto) de Amadeus a "0".
 692+ 90BE              ;   RES el bit2 de (Impacto2).
 693+ 90BE              ;
 694+ 90BE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 90BE              ;   Lo colocamos a "0".
 696+ 90BE
 697+ 90BE 21 EB 88         ld hl,Impacto2
 698+ 90C1 CB 96            res 2,(hl)
 699+ 90C3 2A EC 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 90C6 36 00            ld (hl),0
 701+ 90C8
 702+ 90C8 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 90C9 C9               ret
 704+ 90CA
 705+ 90CA               ; ---------- ----------
 706+ 90CA
 707+ 90CA C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 90CB 3A 82 88         ld a,(Columns)
 709+ 90CE 47               ld b,a
 710+ 90CF FD 7E 00     2 ld a,(iy)
 711+ 90D2 BE               cp (hl)
 712+ 90D3 28 01            jr z,1F
 713+ 90D5
 714+ 90D5 1C               inc e
 715+ 90D6
 716+ 90D6 23           1 inc hl
 717+ 90D7 FD 23            inc iy
 718+ 90D9 10 F4            djnz 2B
 719+ 90DB C1               pop bc
 720+ 90DC C9               ret
 721+ 90DD
 722+ 90DD              ; -------------------------------------------------------------------------------------------------------------
 723+ 90DD              ;
 724+ 90DD              ;   13/03/23
 725+ 90DD              ;
 726+ 90DD              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 90DD              ;
 728+ 90DD              ;   DESTRUYE: HL,BC,DE y A.
 729+ 90DD
 730+ 90DD 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 90E0 7E               ld a,(hl)
 732+ 90E1 A7               and a
 733+ 90E2 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 90E3
 735+ 90E3 44               ld b,h
 736+ 90E4 4D               ld c,l
 737+ 90E5 2A DF 88         ld hl,(Stack_snapshot_disparos)
 738+ 90E8 E5               push hl
 739+ 90E9 A7               and a
 740+ 90EA ED 42            sbc hl,bc
 741+ 90EC E5               push hl
 742+ 90ED C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 90EE
 744+ 90EE E1               pop hl
 745+ 90EF 54               ld d,h
 746+ 90F0 5D               ld e,l
 747+ 90F1 1B               dec de
 748+ 90F2 ED B8            lddr                                                ; Limpiamos.
 749+ 90F4
 750+ 90F4 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 90F7 22 DF 88         ld (Stack_snapshot_disparos),hl
 752+ 90FA
 753+ 90FA C9               ret
 754+ 90FB
 755+ 90FB              ; -------------------------------------------------------------------------------------------------------------
 756+ 90FB              ;
 757+ 90FB              ;   18/07/23
 758+ 90FB              ;
 759+ 90FB
 760+ 90FB              Motor_de_disparos
 761+ 90FB
 762+ 90FB              ; Gestiona DISPAROS DE AMADEUS.
 763+ 90FB
 764+ 90FB 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 90FE 2A E9 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9101
 767+ 9101 CD DB 8C     2 call Extrae_address
 768+ 9104 7E               ld a,(hl)
 769+ 9105 A7               and a
 770+ 9106 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9108
 772+ 9108              ; ----- ----- ----- ----- ----- -----
 773+ 9108
 774+ 9108 C5               push bc
 775+ 9109 CD CD 91         call foto_disparo_a_borrar
 776+ 910C
 777+ 910C              ; Existe colisión con este disparo???
 778+ 910C
 779+ 910C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 910D 7E               ld a,(hl)
 781+ 910E 2B               dec hl
 782+ 910F E6 01            and 1
 783+ 9111 28 1D            jr z,9F
 784+ 9113
 785+ 9113              ;   En este punto:
 786+ 9113              ;
 787+ 9113              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9113              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9113              ;   _con la entidad).
 790+ 9113              ;
 791+ 9113              ;   Disparo_2A defw 0                                ; Control.
 792+ 9113              ;    defw 0                                          ; Puntero objeto.
 793+ 9113              ;    defw 0                                          ; Puntero de impresión.
 794+ 9113              ;    defw 0                                          ; Rutina de impresión.
 795+ 9113
 796+ 9113 E5               push hl
 797+ 9114
 798+ 9114 06 04            ld b,4
 799+ 9116 23           19 inc hl
 800+ 9117 10 FD            djnz 19B
 801+ 9119
 802+ 9119 CD DB 8C         call Extrae_address
 803+ 911C CD 19 9D         call Genera_coordenadas_disparo
 804+ 911F
 805+ 911F              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 911F
 807+ 911F 21 EE 88         ld hl,Coordenadas_disparo_certero
 808+ 9122 72               ld (hl),d
 809+ 9123 23               inc hl
 810+ 9124 73               ld (hl),e
 811+ 9125
 812+ 9125              ; Elimino el disparo de la base de datos.
 813+ 9125
 814+ 9125 E1               pop hl
 815+ 9126 CD 4C 92         call Elimina_disparo_de_base_de_datos
 816+ 9129 21 EB 88         ld hl,Impacto2
 817+ 912C CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 912E
 819+ 912E 18 06            jr 11F
 820+ 9130
 821+ 9130 CD F6 91     9 call Mueve_disparo
 822+ 9133 CD CD 91         call foto_disparo_a_borrar
 823+ 9136
 824+ 9136 C1           11 pop bc
 825+ 9137 18 04            jr 7F
 826+ 9139
 827+ 9139              ; ----- ----- ----- ----- ----- -----
 828+ 9139
 829+ 9139 ED 42        1 sbc hl,bc
 830+ 913B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 913D
 832+ 913D 2A E9 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9140 23               inc hl
 834+ 9141 23               inc hl
 835+ 9142 22 E9 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9145 18 BA            jr 2B
 837+ 9147
 838+ 9147 CD 60 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 914A              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 914A
 841+ 914A              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 914A
 843+ 914A 01 6E 85         ld bc,Disparo_11
 844+ 914D 2A E7 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9150
 846+ 9150 CD DB 8C     5 call Extrae_address
 847+ 9153 7E               ld a,(hl)
 848+ 9154 A7               and a
 849+ 9155 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9157
 851+ 9157              ; ----- ----- ----- ----- ----- -----
 852+ 9157
 853+ 9157 C5               push bc
 854+ 9158 CD CD 91         call foto_disparo_a_borrar
 855+ 915B
 856+ 915B              ; Existe colisión con este disparo???
 857+ 915B
 858+ 915B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 915C 7E               ld a,(hl)
 860+ 915D 2B               dec hl
 861+ 915E E6 01            and 1
 862+ 9160 28 4D            jr z,10F
 863+ 9162
 864+ 9162              ;! La colisión se produce con Amadeus???
 865+ 9162              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9162
 867+ 9162 E5               push hl
 868+ 9163
 869+ 9163 06 04            ld b,4
 870+ 9165 23           16 inc hl
 871+ 9166 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9168
 873+ 9168 CD DB 8C         call Extrae_address
 874+ 916B CD 19 9D         call Genera_coordenadas_disparo
 875+ 916E
 876+ 916E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 916F FE 16            cp $16
 878+ 9171 38 2A            jr c,15F
 879+ 9173
 880+ 9173
 881+ 9173              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9173
 883+ 9173 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9174
 885+ 9174              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9174
 887+ 9174 2A AD 85         ld hl,(p.imp.amadeus)
 888+ 9177
 889+ 9177              ; Coordenada X de Amadeus en D.
 890+ 9177
 891+ 9177 7D               ld a,l
 892+ 9178 E6 1F            and $1F
 893+ 917A 57               ld d,a
 894+ 917B
 895+ 917B 21 8A 85         ld hl,Amadeus_db+8
 896+ 917E 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 917F
 898+ 917F 21 F0 88         ld hl,Coordenadas_X_Amadeus
 899+ 9182 CD 48 90         call Guarda_coordenadas_X
 900+ 9185
 901+ 9185 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9186
 903+ 9186              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9186
 905+ 9186 06 02            ld b,2
 906+ 9188 C5           20 push bc
 907+ 9189
 908+ 9189 06 03            ld b,3
 909+ 918B 21 F0 88         ld hl,Coordenadas_X_Amadeus
 910+ 918E 7E           18 ld a,(hl)
 911+ 918F BA               cp d
 912+ 9190 20 04            jr nz,17F
 913+ 9192
 914+ 9192              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9192
 916+ 9192 C1               pop bc
 917+ 9193 E1               pop hl
 918+ 9194 18 0D            jr 14F
 919+ 9196
 920+ 9196 23           17 inc hl
 921+ 9197 10 F5            djnz 18B
 922+ 9199
 923+ 9199 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 919A
 925+ 919A C1               pop bc
 926+ 919B 10 EB            djnz 20B
 927+ 919D
 928+ 919D
 929+ 919D              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 919D              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 919D
 932+ 919D E1           15 pop hl
 933+ 919E 23               inc hl
 934+ 919F 35               dec (hl)
 935+ 91A0 2B               dec hl
 936+ 91A1 18 0C            jr 10F
 937+ 91A3
 938+ 91A3              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 91A3              ; _ almacén de coordenadas_X de Amadeus.
 940+ 91A3
 941+ 91A3 E5           14 push hl
 942+ 91A4 CD 4C 92         call Elimina_disparo_de_base_de_datos
 943+ 91A7 21 EB 88         ld hl,Impacto2
 944+ 91AA CB CE            set 1,(hl)
 945+ 91AC E1               pop hl
 946+ 91AD 18 06            jr 12F
 947+ 91AF
 948+ 91AF              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 91AF
 950+ 91AF CD F6 91     10 call Mueve_disparo
 951+ 91B2 CD CD 91         call foto_disparo_a_borrar
 952+ 91B5 C1           12 pop bc
 953+ 91B6
 954+ 91B6 18 04            jr 8F
 955+ 91B8
 956+ 91B8              ; ----- ----- ----- ----- ----- -----
 957+ 91B8
 958+ 91B8 ED 42        4 sbc hl,bc
 959+ 91BA 28 0A            jr z,6F
 960+ 91BC
 961+ 91BC 2A E7 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 91BF 23               inc hl
 963+ 91C0 23               inc hl
 964+ 91C1 22 E7 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 91C4 18 8A            jr 5B
 966+ 91C6
 967+ 91C6 CD 59 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 91C9 CD 51 90         call Limpia_Coordenadas_X
 969+ 91CC C9               ret
 970+ 91CD
 971+ 91CD              ; ------------------------------------------------------------------
 972+ 91CD
 973+ 91CD              foto_disparo_a_borrar
 974+ 91CD
 975+ 91CD 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 91CE A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 91CF C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 91D0
 979+ 91D0 E5               push hl
 980+ 91D1 23               inc hl
 981+ 91D2 23               inc hl
 982+ 91D3 ED 73 D7 88      ld (Stack),sp
 983+ 91D7 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 91D8 FD E1            pop iy
 985+ 91DA DD E1            pop ix
 986+ 91DC E1               pop hl
 987+ 91DD ED 7B D7 88      ld sp,(Stack)
 988+ 91E1 3A C6 88         ld a,(Ctrl_1)
 989+ 91E4 CB C7            set 0,a
 990+ 91E6 32 C6 88         ld (Ctrl_1),a
 991+ 91E9 CD 16 71         call Guarda_foto_registros
 992+ 91EC 3A C6 88         ld a,(Ctrl_1)
 993+ 91EF CB 87            res 0,a
 994+ 91F1 32 C6 88         ld (Ctrl_1),a
 995+ 91F4 E1               pop hl
 996+ 91F5 C9               ret
 997+ 91F6
 998+ 91F6              ;---------------------------------------------------
 999+ 91F6              ;
1000+ 91F6              ;   18/07/23
1001+ 91F6              ;
1002+ 91F6
1003+ 91F6              Mueve_disparo
1004+ 91F6
1005+ 91F6              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 91F6              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 91F6              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 91F6
1009+ 91F6 E5               push hl
1010+ 91F7
1011+ 91F7 7E               ld a,(hl)
1012+ 91F8
1013+ 91F8 06 04            ld b,4
1014+ 91FA 23           1 inc hl
1015+ 91FB 10 FD            djnz 1B
1016+ 91FD
1017+ 91FD              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 91FD
1019+ 91FD CD DB 8C         call Extrae_address
1020+ 9200
1021+ 9200 E6 01            and 1
1022+ 9202 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9204
1024+ 9204              ; Disparo hacia arriba, (Amadeus).
1025+ 9204
1026+ 9204              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9204              ; _ de la dificultad.
1028+ 9204
1029+ 9204 CD 56 96         call PreviousScan
1030+ 9207 CD 56 96         call PreviousScan
1031+ 920A CD 56 96         call PreviousScan
1032+ 920D CD 56 96         call PreviousScan
1033+ 9210
1034+ 9210              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9210
1036+ 9210 7C               ld a,h
1037+ 9211 FE 40            cp $40
1038+ 9213 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9215
1040+ 9215              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9215
1042+ 9215 EB               ex de,hl
1043+ 9216 06 04            ld b,4
1044+ 9218 2B           6 dec hl
1045+ 9219 10 FD            djnz 6B
1046+ 921B
1047+ 921B CD 4C 92         call Elimina_disparo_de_base_de_datos
1048+ 921E E1               pop hl
1049+ 921F 18 10            jr 7F
1050+ 9221
1051+ 9221              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9221              ; HL contiene el puntero de impresión del disparo.
1053+ 9221              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9221
1055+ 9221 D5           3 push de
1056+ 9222 C5               push bc
1057+ 9223
1058+ 9223 CD DF 8F         call Comprueba_Colision
1059+ 9226
1060+ 9226              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9226
1062+ 9226 78               ld a,b
1063+ 9227
1064+ 9227 C1               pop bc
1065+ 9228 D1               pop de
1066+ 9229
1067+ 9229 EB               ex de,hl
1068+ 922A
1069+ 922A 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 922B 23               inc hl                                      ; _ movimiento.
1071+ 922C 72               ld (hl),d
1072+ 922D
1073+ 922D E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 922E
1075+ 922E 23               inc hl                                      ; _ en curso.
1076+ 922F 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9230 2B               dec hl
1078+ 9231
1079+ 9231 C9           7 ret
1080+ 9232
1081+ 9232              ; Disparo hacia abajo, (Entidad).
1082+ 9232
1083+ 9232 3A F6 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 9235 47               ld b,a
1085+ 9236
1086+ 9236 CD 47 96     4 call NextScan
1087+ 9239 10 FB            djnz 4B
1088+ 923B
1089+ 923B              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 923B
1091+ 923B 7C               ld a,h
1092+ 923C FE 58            cp $58
1093+ 923E 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9240
1095+ 9240 EB               ex de,hl
1096+ 9241 06 04            ld b,4
1097+ 9243 2B           5 dec hl
1098+ 9244 10 FD            djnz 5B
1099+ 9246
1100+ 9246 CD 4C 92         call Elimina_disparo_de_base_de_datos
1101+ 9249 E1               pop hl
1102+ 924A 18 E5            jr 7B
1103+ 924C
1104+ 924C              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 924C
1106+ 924C 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 924F AF               xor a
1108+ 9250 77               ld (hl),a
1109+ 9251 54               ld d,h
1110+ 9252 5D               ld e,l
1111+ 9253 13               inc de
1112+ 9254 ED B0            ldir
1113+ 9256 C9               ret
1114+ 9257
1115+ 9257              ; -----------------------------------------------------------------
1116+ 9257              ;
1117+ 9257              ;   7/12/23
1118+ 9257              ;
1119+ 9257
1120+ 9257 3A EB 88     Selector_de_impactos ld a,(Impacto2)
1121+ 925A A7               and a
1122+ 925B C8               ret z
1123+ 925C
1124+ 925C              ; Analizamos si hay impacto por disparos.
1125+ 925C
1126+ 925C              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 925C
1128+ 925C CB 4F            bit 1,a
1129+ 925E 28 07            jr z,1F
1130+ 9260
1131+ 9260 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9263 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9265 18 08            jr 2F
1134+ 9267
1135+ 9267 CB 47        1 bit 0,a
1136+ 9269 C8               ret z
1137+ 926A
1138+ 926A              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 926A
1140+ 926A 21 C6 88         ld hl,Ctrl_1
1141+ 926D CB D6            set 2,(hl)
1142+ 926F
1143+ 926F C9           2 ret
1144+ 9270
1145+ 9270              ; -----------------------------------------------------------------
1146+ 9270              ;
1147+ 9270              ;   25/04/23
1148+ 9270              ;
1149+ 9270
1150+ 9270              Determina_resultado_comparativa
1151+ 9270
1152+ 9270              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9270              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9270              ;
1155+ 9270              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9270              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9270              ;
1158+ 9270              ;   SBC HL,DE
1159+ 9270
1160+ 9270              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9270              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9270
1163+ 9270              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9270              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9270
1166+ 9270
1167+ 9270 3A 95 88         ld a,(Cuad_objeto)
1168+ 9273 FE 02            cp 2
1169+ 9275 28 26            jr z,2F
1170+ 9277 38 24            jr c,2F
1171+ 9279
1172+ 9279              ; Cuadrantes 3º y 4º
1173+ 9279
1174+ 9279 E6 01            and 1
1175+ 927B 28 10            jr z,4F
1176+ 927D
1177+ 927D              ; Cuadrante 3º
1178+ 927D
1179+ 927D 7C               ld a,h
1180+ 927E 06 00            ld b,0
1181+ 9280
1182+ 9280 CD 0B 93         call Compara_cositas_H3
1183+ 9283
1184+ 9283 04               inc b
1185+ 9284 05               dec b
1186+ 9285 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9286
1188+ 9286 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9287 06 00            ld b,0
1190+ 9289
1191+ 9289 CD 1D 93         call Compara_cositas_L3
1192+ 928C C9               ret
1193+ 928D
1194+ 928D              ; Cuadrante 4º
1195+ 928D
1196+ 928D 7C           4 ld a,h
1197+ 928E 06 00            ld b,0
1198+ 9290
1199+ 9290 CD 2F 93         call Compara_cositas_H4
1200+ 9293
1201+ 9293 04               inc b
1202+ 9294 05               dec b
1203+ 9295 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9296
1205+ 9296 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9297 06 00            ld b,0
1207+ 9299
1208+ 9299 CD 45 93         call Compara_cositas_L4
1209+ 929C C9               ret
1210+ 929D
1211+ 929D              ; Cuadrantes 1º y 2º.
1212+ 929D
1213+ 929D 28 10        2 jr z,3F
1214+ 929F
1215+ 929F              ; 1er Cuadrante
1216+ 929F
1217+ 929F 7C               ld a,h
1218+ 92A0 06 00            ld b,0
1219+ 92A2
1220+ 92A2 CD E3 92         call Compara_cositas_H1
1221+ 92A5
1222+ 92A5 04               inc b
1223+ 92A6 05               dec b
1224+ 92A7 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 92A8
1226+ 92A8 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 92A9 06 00            ld b,0
1228+ 92AB
1229+ 92AB CD F9 92         call Compara_cositas_L1
1230+ 92AE C9               ret
1231+ 92AF
1232+ 92AF
1233+ 92AF              ; 2º Cuadrante
1234+ 92AF
1235+ 92AF 7C           3 ld a,h
1236+ 92B0 06 00            ld b,0
1237+ 92B2
1238+ 92B2 CD BF 92         call Compara_cositas_H2
1239+ 92B5
1240+ 92B5 04               inc b
1241+ 92B6 05               dec b
1242+ 92B7 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 92B8
1244+ 92B8 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 92B9 06 00            ld b,0
1246+ 92BB
1247+ 92BB CD D1 92         call Compara_cositas_L2
1248+ 92BE C9               ret
1249+ 92BF
1250+ 92BF A7           Compara_cositas_H2 and a
1251+ 92C0 28 0D            jr z,1F
1252+ 92C2              ;    cp $fd
1253+ 92C2              ;    jr z,1F
1254+ 92C2              ;    cp $fe
1255+ 92C2              ;    jr z,1F
1256+ 92C2 FE FF            cp $ff
1257+ 92C4 28 09            jr z,1F
1258+ 92C6 FE 01            cp $01
1259+ 92C8 28 05            jr z,1F
1260+ 92CA FE 02            cp $02
1261+ 92CC 28 01            jr z,1F
1262+ 92CE C0               ret nz
1263+ 92CF 04           1 inc b
1264+ 92D0 C9               ret
1265+ 92D1
1266+ 92D1 A7           Compara_cositas_L2 and a
1267+ 92D2 28 0D            jr z,1F
1268+ 92D4              ;    cp $fd
1269+ 92D4              ;    jr z,1F
1270+ 92D4 FE FE            cp $fe
1271+ 92D6 28 09            jr z,1F
1272+ 92D8 FE FF            cp $ff
1273+ 92DA 28 05            jr z,1F
1274+ 92DC FE 01            cp $01
1275+ 92DE 28 01            jr z,1F
1276+ 92E0              ;    cp $02
1277+ 92E0              ;    jr z,1F
1278+ 92E0 C0               ret nz
1279+ 92E1 04           1 inc b
1280+ 92E2 C9               ret
1281+ 92E3
1282+ 92E3 A7           Compara_cositas_H1 and a
1283+ 92E4 28 11            jr z,1F
1284+ 92E6              ;    cp $fd
1285+ 92E6              ;    jr z,1F
1286+ 92E6              ;    cp $fe
1287+ 92E6              ;    jr z,1F
1288+ 92E6 FE FF            cp $ff
1289+ 92E8 28 0D            jr z,1F
1290+ 92EA FE 01            cp $01
1291+ 92EC 28 09            jr z,1F
1292+ 92EE FE 02            cp $02
1293+ 92F0 28 05            jr z,1F
1294+ 92F2 FE 03            cp $03
1295+ 92F4 28 01            jr z,1F
1296+ 92F6 C0               ret nz
1297+ 92F7 04           1 inc b
1298+ 92F8 C9               ret
1299+ 92F9
1300+ 92F9 A7           Compara_cositas_L1 and a
1301+ 92FA 28 0D            jr z,1F
1302+ 92FC              ;    cp $fd
1303+ 92FC              ;    jr z,1F
1304+ 92FC              ;    cp $fe
1305+ 92FC              ;    jr z,1F
1306+ 92FC              ;    cp $ff
1307+ 92FC              ;    jr z,1F
1308+ 92FC FE 01            cp $01
1309+ 92FE 28 09            jr z,1F
1310+ 9300 FE 02            cp $02
1311+ 9302 28 05            jr z,1F
1312+ 9304 FE 03            cp $03
1313+ 9306 28 01            jr z,1F
1314+ 9308 C0               ret nz
1315+ 9309 04           1 inc b
1316+ 930A C9               ret
1317+ 930B
1318+ 930B A7           Compara_cositas_H3 and a
1319+ 930C 28 0D            jr z,1F
1320+ 930E              ;    cp $fd
1321+ 930E              ;    jr z,1F
1322+ 930E FE FE            cp $fe
1323+ 9310 28 09            jr z,1F
1324+ 9312 FE FF            cp $ff
1325+ 9314 28 05            jr z,1F
1326+ 9316 FE 01            cp $01
1327+ 9318 28 01            jr z,1F
1328+ 931A              ;    cp $02
1329+ 931A              ;    jr z,1F
1330+ 931A              ;    cp $03
1331+ 931A              ;    jr z,1F
1332+ 931A C0               ret nz
1333+ 931B 04           1 inc b
1334+ 931C C9               ret
1335+ 931D
1336+ 931D A7           Compara_cositas_L3 and a
1337+ 931E 28 0D            jr z,1F
1338+ 9320              ;    cp $fd
1339+ 9320              ;    jr z,1F
1340+ 9320              ;    cp $fe
1341+ 9320              ;    jr z,1F
1342+ 9320              ;    cp $ff
1343+ 9320              ;    jr z,1F
1344+ 9320 FE 01            cp $01
1345+ 9322 28 09            jr z,1F
1346+ 9324 FE 02            cp $02
1347+ 9326 28 05            jr z,1F
1348+ 9328 FE 03            cp $03
1349+ 932A 28 01            jr z,1F
1350+ 932C C0               ret nz
1351+ 932D 04           1 inc b
1352+ 932E C9               ret
1353+ 932F
1354+ 932F A7           Compara_cositas_H4 and a
1355+ 9330 28 11            jr z,1F
1356+ 9332 FE FD            cp $fd
1357+ 9334 28 0D            jr z,1F
1358+ 9336 FE FE            cp $fe
1359+ 9338 28 09            jr z,1F
1360+ 933A FE FF            cp $ff
1361+ 933C 28 05            jr z,1F
1362+ 933E FE 01            cp $01
1363+ 9340 28 01            jr z,1F
1364+ 9342              ;    cp $02
1365+ 9342              ;    jr z,1F
1366+ 9342              ;    cp $03
1367+ 9342              ;    jr z,1F
1368+ 9342 C0               ret nz
1369+ 9343 04           1 inc b
1370+ 9344 C9               ret
1371+ 9345
1372+ 9345 A7           Compara_cositas_L4 and a
1373+ 9346 28 0D            jr z,1F
1374+ 9348              ;    cp $fd
1375+ 9348              ;    jr z,1F
1376+ 9348 FE FE            cp $fe
1377+ 934A 28 09            jr z,1F
1378+ 934C FE FF            cp $ff
1379+ 934E 28 05            jr z,1F
1380+ 9350 FE 01            cp $01
1381+ 9352 28 01            jr z,1F
1382+ 9354              ;    cp $02
1383+ 9354              ;    jr z,1F
1384+ 9354              ;    cp $03
1385+ 9354              ;    jr z,1F
1386+ 9354 C0               ret nz
1387+ 9355 04           1 inc b
1388+ 9356 C9               ret
# file closed: Disparo.asm
1881  9357              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9357              ; ******************************************************************************************************************************************************************************************
   2+ 9357              ;
   3+ 9357              ; 26/06/23
   4+ 9357              ;
   5+ 9357              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9357
   7+ 9357              Draw
   8+ 9357
   9+ 9357 CD 3B 96     	call Prepara_draw
  10+ 935A 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 935B A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 935C 28 05        	jr z,2F
  13+ 935E
  14+ 935E 3A 95 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9361 18 0C        	jr 1F
  16+ 9363
  17+ 9363 2A 93 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9366 22 83 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9369 CD F8 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 936C              ;													; _la esquina superior izquierda de la pantalla.
  21+ 936C CD AA 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 936F
  23+ 936F 3A B1 88     1 ld a,(Ctrl_0)
  24+ 9372 CB 6F        	bit 5,a
  25+ 9374 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 9376
  27+ 9376 CD 8E 93     	call Comprueba_limite_horizontal
  28+ 9379 CD 1E 94     	call Comprueba_limite_vertical
  29+ 937C
  30+ 937C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 937C              ; -----------------------
  32+ 937C              ; -----------------------
  33+ 937C              ; -----------------------
  34+ 937C
  35+ 937C CD 6B 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 937F CD A2 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 9382 CD 01 96     	call Define_rutina_de_impresion
  38+ 9385
  39+ 9385 3A B1 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9388 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 938A 32 B1 88     	ld (Ctrl_0),a
  42+ 938D
  43+ 938D C9           	ret
  44+ 938E
  45+ 938E              ; *******************************************************************************************************************************************************************************************
  46+ 938E              ;	21/01/23
  47+ 938E              ;
  48+ 938E              ; 	Comprueba_limite_horizontal.
  49+ 938E              ;
  50+ 938E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 938E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 938E              ;
  53+ 938E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 938E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 938E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 938E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 938E
  58+ 938E
  59+ 938E
  60+ 938E 3A B1 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9391 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9393 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9395 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9397 32 B1 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 939A 18 09            jr 6F
  66+ 939C CB 5F        1 bit 3,a
  67+ 939E 28 0A            jr z,2F
  68+ 93A0 E6 F7            and $f7
  69+ 93A2 32 B1 88         ld (Ctrl_0),a
  70+ 93A5 CD F8 94     6 call Inicializacion
  71+ 93A8 18 5B            jr 5F
  72+ 93AA E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 93AB
  74+ 93AB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 93AB              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 93AB
  77+ 93AB EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 93AC 2A B3 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 93AF CD 5A 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 93B2 67           	ld h,a
  81+ 93B3 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 93B4 CD 5A 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 93B7 67           	ld h,a
  84+ 93B8 A7           	and a
  85+ 93B9 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 93BB 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 93BC 3A 95 88     	ld a,(Cuad_objeto)
  88+ 93BF FE 02        	cp 2
  89+ 93C1 38 1E        	jr c,3F
  90+ 93C3 28 1C        	jr z,3F
  91+ 93C5 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 93C6 28 23            jr z,7F
  93+ 93C8 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 93CA 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 93CC E1           	pop hl
  96+ 93CD
  97+ 93CD              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 93CD              ; _para indicar con E="2" en caso necesario.
  99+ 93CD
 100+ 93CD E5               push hl
 101+ 93CE C5               push bc
 102+ 93CF CD 5A 99     	call calcula_tercio
 103+ 93D2 FE 01        	cp 1
 104+ 93D4 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 93D6 CD 06 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 93D9 28 26            jr z,9F
 107+ 93DB 38 24            jr c,9F
 108+ 93DD 1E 00        11 ld e,0
 109+ 93DF 18 22            jr 8F
 110+ 93E1 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 93E2 28 07        	jr z, 7F
 112+ 93E4 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 93E6 1E 00         	ld e,0
 114+ 93E8 E1           	pop hl
 115+ 93E9 18 04        	jr 4F
 116+ 93EB 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 93ED 18 15            jr 10F
 118+ 93EF
 119+ 93EF              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 93EF              ; _para indicar con E="2" en caso necesario.
 121+ 93EF
 122+ 93EF E5           4 push hl
 123+ 93F0 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 93F1 CD 5A 99     	call calcula_tercio
 125+ 93F4 FE 01        	cp 1
 126+ 93F6 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 93F8 CD 06 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 93FB 28 04            jr z,9F
 129+ 93FD 30 02            jr nc,9F
 130+ 93FF 18 02        	jr 8F
 131+ 9401 1E 02        9 ld e,2
 132+ 9403 C1           8 pop bc
 133+ 9404 E1           10 pop hl
 134+ 9405 C9           5 ret
 135+ 9406
 136+ 9406              ; --------------------
 137+ 9406              ;
 138+ 9406              ; 25/08/22
 139+ 9406
 140+ 9406 CD 5A 99     Comprueba_centro call calcula_tercio
 141+ 9409 67               ld h,a
 142+ 940A 08           	ex af,af
 143+ 940B FE 02        	cp 2
 144+ 940D 38 07        	jr c,1F
 145+ 940F 28 05        	jr z,1F
 146+ 9411 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9414 18 03        	jr 2F
 148+ 9416 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9419 08           2 ex af,af
 150+ 941A A7               and a
 151+ 941B ED 42            sbc hl,bc
 152+ 941D C9               ret
 153+ 941E
 154+ 941E              ; *********************************************************************************************************************************************************************************************
 155+ 941E              ;
 156+ 941E              ;   16/8/22
 157+ 941E              ;
 158+ 941E              ;	Comprueba_limite_vertical
 159+ 941E              ;
 160+ 941E              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 941E              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 941E              ;
 163+ 941E
 164+ 941E 2A 83 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9421 7D           	ld a,l
 166+ 9422 E6 1F        	and $1F
 167+ 9424 57           	ld d,a
 168+ 9425 3A B5 88     	ld a,(Limite_vertical)
 169+ 9428 BA           	cp d 											; Límite - Posición.
 170+ 9429 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 942A 3A 95 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 942D CB 47        	bit 0,a
 173+ 942F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9431
 175+ 9431              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9431
 177+ 9431 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9432 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9434
 180+ 9434              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9434              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9434
 183+ 9434 3A 87 88         ld a,(Coordenada_X)
 184+ 9437 16 0F            ld d,Centro_izquierda
 185+ 9439 A7               and a
 186+ 943A 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 943B 28 1E            jr z,3F
 188+ 943D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 943F              ;                                                    ; _salimos sin modificar nada.
 190+ 943F 18 0E            jr 2F
 191+ 9441 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9442 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9444
 194+ 9444              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9444              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9444
 197+ 9444 3A 87 88         ld a,(Coordenada_X)
 198+ 9447 16 10            ld d,Centro_derecha
 199+ 9449 A7               and a
 200+ 944A 92               sub d
 201+ 944B 28 0E            jr z,3F
 202+ 944D 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 944F              ;                                                    ; _salimos sin modificar nada.
 204+ 944F CB 43        2 bit 0,e
 205+ 9451 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9453 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9454 CD E8 94         call Modificaccionne
 208+ 9457 C1           	pop bc
 209+ 9458 CD F8 94         call Inicializacion
 210+ 945B C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 945C
 212+ 945C              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 945C
 214+ 945C C5           4 push bc
 215+ 945D 01 82 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9460 0A           	ld a,(bc)
 217+ 9461 3D           	dec a
 218+ 9462 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9463 7D           	ld a,l
 220+ 9464 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9465 CB 47        	bit 0,a
 222+ 9467 28 03        	jr z,5F
 223+ 9469 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 946A 18 2E        	jr 7F
 225+ 946C
 226+ 946C              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 946C
 228+ 946C 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 946D F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 946E 3A B1 88     	ld a,(Ctrl_0)
 231+ 9471 CB 4F        	bit 1,a
 232+ 9473 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9475 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9476
 235+ 9476              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9476
 237+ 9476 1C               inc e
 238+ 9477 1D               dec e
 239+ 9478 20 07            jr nz,12F
 240+ 947A 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 947B 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 947C 22 83 88     	ld (Posicion_actual),hl
 243+ 947F 18 44        13 jr 9F
 244+ 9481 CB 43        12 bit 0,e
 245+ 9483 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9485              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9485 C1           	pop bc
 248+ 9486 18 D3        	jr 3B
 249+ 9488 80           14 add b
 250+ 9489 6F               ld l,a
 251+ 948A 22 83 88     	ld (Posicion_actual),hl
 252+ 948D CD E8 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9490 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9492 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9494 32 B1 88         ld (Ctrl_0),a
 256+ 9497 F1           	pop af
 257+ 9498 18 2B        	jr 9F
 258+ 949A
 259+ 949A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 949A
 261+ 949A F5           7 push af
 262+ 949B 3A B1 88     	ld a,(Ctrl_0)
 263+ 949E CB 47        	bit 0,a
 264+ 94A0 20 1D        	jr nz,8F
 265+ 94A2 F1           	pop af
 266+ 94A3
 267+ 94A3              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 94A3
 269+ 94A3 1C           	inc e
 270+ 94A4 1D               dec e
 271+ 94A5 20 07            jr nz,10F
 272+ 94A7 90           	sub b
 273+ 94A8 6F               ld l,a
 274+ 94A9 22 83 88     	ld (Posicion_actual),hl
 275+ 94AC 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 94AE              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 94AE CB 43        10 bit 0,e
 278+ 94B0 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 94B2              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 94B2 C1           	pop bc
 281+ 94B3 18 A6        	jr 3B
 282+ 94B5 90           16 sub b
 283+ 94B6 6F               ld l,a
 284+ 94B7 22 83 88     	ld (Posicion_actual),hl
 285+ 94BA CD E8 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 94BD 18 06            jr 9F
 287+ 94BF E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 94C1 32 B1 88         ld (Ctrl_0),a
 289+ 94C4 F1           	pop af
 290+ 94C5 C1           9 pop bc
 291+ 94C6 1E 00        	ld e,0
 292+ 94C8 CD F8 94         call Inicializacion
 293+ 94CB F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 94CC 08           	ex af,af
 295+ 94CD F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 94CE 18 8B            jr 3B
 297+ 94D0
 298+ 94D0              ; --------------------
 299+ 94D0
 300+ 94D0 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 94D2 CD 56 96     1 call PreviousScan
 302+ 94D5 10 FB            djnz 1B
 303+ 94D7 22 83 88     	ld (Posicion_actual),hl
 304+ 94DA AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 94DB C9           	ret
 306+ 94DC
 307+ 94DC              ; --------------------
 308+ 94DC
 309+ 94DC 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 94DE CD 47 96     1 call NextScan
 311+ 94E1 10 FB            djnz 1B
 312+ 94E3 22 83 88     	ld (Posicion_actual),hl
 313+ 94E6 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 94E7 C9           	ret
 315+ 94E8
 316+ 94E8              ; --------------------
 317+ 94E8              ;
 318+ 94E8              ;	22/01/23
 319+ 94E8              ;
 320+ 94E8              ;	E="1". Hemos cambiado de cuadrante.
 321+ 94E8              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 94E8              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 94E8
 324+ 94E8
 325+ 94E8              Modificaccionne
 326+ 94E8
 327+ 94E8 3A 95 88     	ld a,(Cuad_objeto)
 328+ 94EB FE 02        	cp 2
 329+ 94ED CC D0 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 94F0 DC D0 94         call c,Modifica_Pos_actual
 331+ 94F3 C8           	ret z
 332+ 94F4 CD DC 94         call Modifica_Pos_actual2
 333+ 94F7 C9               ret
 334+ 94F8
 335+ 94F8              ; *************************************************************************************************************************************************************************************************
 336+ 94F8              ;
 337+ 94F8              ;	13/8/22
 338+ 94F8              ;
 339+ 94F8              ;	Inicializacion
 340+ 94F8              ;
 341+ 94F8              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 94F8              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 94F8              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 94F8              ;
 345+ 94F8              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 94F8              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 94F8              ;	_ desaparece/aparece.
 348+ 94F8
 349+ 94F8              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 94F8              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 94F8              ;
 352+ 94F8              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 94F8              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 94F8              ; 		   [E] ="0"
 355+ 94F8
 356+ 94F8              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 94F8
 358+ 94F8 CD 5A 99     Inicializacion call calcula_tercio
 359+ 94FB 28 36        	jr z,primit
 360+ 94FD E6 02        	and 2
 361+ 94FF 20 07        	jr nz,segmit
 362+ 9501 7D           	ld a,l
 363+ 9502 FE 7F        	cp $7f
 364+ 9504 38 2D        	jr c,primit
 365+ 9506 28 2B        	jr z,primit
 366+ 9508 CD 65 95     segmit call column
 367+ 950B 38 13        	jr c,tercuad
 368+ 950D 3E 04        cuarcuad ld a,4
 369+ 950F 32 95 88     	ld (Cuad_objeto),a
 370+ 9512 21 20 48     	ld hl,$4820
 371+ 9515 22 B3 88     	ld (Limite_horizontal),hl
 372+ 9518 21 B5 88     	ld hl,Limite_vertical
 373+ 951B 36 0D        	ld (hl),$0d
 374+ 951D 08           	ex af,af
 375+ 951E 18 3C        	jr 1F
 376+ 9520              tercuad
 377+ 9520 3E 03        	ld a,3
 378+ 9522 32 95 88     	ld (Cuad_objeto),a
 379+ 9525 21 20 48     	ld hl,$4820
 380+ 9528 22 B3 88     	ld (Limite_horizontal),hl
 381+ 952B 21 B5 88     	ld hl,Limite_vertical
 382+ 952E 36 12        	ld (hl),$12
 383+ 9530 08           	ex af,af
 384+ 9531 18 29        	jr 1F
 385+ 9533 CD 65 95     primit call column
 386+ 9536 38 13        	jr c, primcuad
 387+ 9538              segcuad
 388+ 9538 3E 02        	ld a,2
 389+ 953A 32 95 88     	ld (Cuad_objeto),a
 390+ 953D 21 C0 4F     	ld hl,$4fc0
 391+ 9540 22 B3 88     	ld (Limite_horizontal),hl
 392+ 9543 21 B5 88     	ld hl,Limite_vertical
 393+ 9546 36 0D        	ld (hl),$0d
 394+ 9548 08           	ex af,af
 395+ 9549 18 11        	jr 1F
 396+ 954B              primcuad
 397+ 954B 3E 01        	ld a,1
 398+ 954D 32 95 88     	ld (Cuad_objeto),a
 399+ 9550 21 C0 4F     	ld hl,$4fc0
 400+ 9553 22 B3 88     	ld (Limite_horizontal),hl
 401+ 9556 21 B5 88     	ld hl,Limite_vertical
 402+ 9559 36 12        	ld (hl),$12
 403+ 955B 08           	ex af,af
 404+ 955C CD EE 9C     1 call Genera_coordenadas
 405+ 955F 21 B1 88     	ld hl,Ctrl_0
 406+ 9562 CB EE        	set 5,(hl)
 407+ 9564 C9           	ret
 408+ 9565
 409+ 9565              ; ------------------------------------------------------------------------------------------------------------------
 410+ 9565
 411+ 9565              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 9565              ;
 413+ 9565              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 9565
 415+ 9565 7D           column ld a,l
 416+ 9566 E6 1F        	and $1f
 417+ 9568 FE 10         	cp $10
 418+ 956A C9            	ret
 419+ 956B
 420+ 956B              ; --------------------------------------------------------------------------------------------------------------------
 421+ 956B              ;
 422+ 956B              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 956B              ;
 424+ 956B              ; 14/12/22
 425+ 956B              ;
 426+ 956B              ;	Modifica: A y BC.
 427+ 956B
 428+ 956B 3A 95 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 956E E6 01        	and 1
 430+ 9570 28 17        	jr z,1F
 431+ 9572
 432+ 9572              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 9572
 434+ 9572 3A 87 88     	ld a,(Coordenada_X)
 435+ 9575 47           	ld b,a
 436+ 9576 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 9577 79           	ld a,c
 438+ 9578 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 9579 38 08        	jr c,2F
 440+ 957B 47           	ld b,a
 441+ 957C 79           	ld a,c
 442+ 957D 90           	sub b
 443+ 957E 32 B2 88     	ld (Columnas),a
 444+ 9581 18 1B        	jr 4F
 445+ 9583 79           2 ld a,c
 446+ 9584 32 B2 88     	ld (Columnas),a
 447+ 9587 18 15        	jr 4F
 448+ 9589
 449+ 9589              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 9589
 451+ 9589 3A 87 88     1 ld a,(Coordenada_X)
 452+ 958C 81           	add c
 453+ 958D 3D           	dec a
 454+ 958E D6 1F        	sub $1f
 455+ 9590 38 08        	jr c,3F
 456+ 9592 47           	ld b,a
 457+ 9593 79           	ld a,c
 458+ 9594 90           	sub b
 459+ 9595 32 B2 88     	ld (Columnas),a
 460+ 9598 18 04        	jr 4F
 461+ 959A 79           3 ld a,c
 462+ 959B 32 B2 88     	ld (Columnas),a
 463+ 959E D9           4 exx
 464+ 959F 4F           	ld c,a
 465+ 95A0 D9           	exx
 466+ 95A1 C9            ret
 467+ 95A2
 468+ 95A2              ; --------------------------------------------------------------------------------------------------------------------
 469+ 95A2              ;
 470+ 95A2              ;   19/7/23
 471+ 95A2              ;
 472+ 95A2              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 95A2              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 95A2              ;
 475+ 95A2              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 95A2              ;			HL e IY Contienen (Puntero_objeto).
 477+ 95A2              ;
 478+ 95A2              ;	DESTRUYE: HL,B Y A.
 479+ 95A2
 480+ 95A2 3A 95 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 95A5 FE 02        	cp 2
 482+ 95A7 38 18        	jr c,1F
 483+ 95A9 28 16        	jr z,1F
 484+ 95AB E6 01        	and 1
 485+ 95AD 28 0D        	jr z,3F
 486+ 95AF
 487+ 95AF              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 95AF
 489+ 95AF CD F5 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 95B2
 491+ 95B2 7D           9 ld a,l
 492+ 95B3 E6 1F        	and $1f
 493+ 95B5 28 2A        	jr z,7F
 494+ 95B7 2B           	dec hl
 495+ 95B8 10 F8        	djnz 9B
 496+ 95BA 18 25        	jr 7F
 497+ 95BC
 498+ 95BC              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 95BC
 500+ 95BC 2A 83 88     3 ld hl,(Posicion_actual)
 501+ 95BF 18 20        	jr 7F
 502+ 95C1
 503+ 95C1 28 14        1 jr z,2F
 504+ 95C3
 505+ 95C3              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 95C3
 507+ 95C3 CD F5 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 95C6
 509+ 95C6 7D           4 ld a,l
 510+ 95C7 E6 1F        	and $1f
 511+ 95C9 28 03        	jr z,6F
 512+ 95CB 2B           	dec hl
 513+ 95CC 10 F8        	djnz 4B
 514+ 95CE 06 0F        6 ld b,15
 515+ 95D0 CD 56 96     5 call PreviousScan
 516+ 95D3 10 FB        	djnz 5B
 517+ 95D5 18 0A        	jr 7F
 518+ 95D7
 519+ 95D7              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 95D7
 521+ 95D7 CD F5 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 95DA 06 0F        	ld b,15
 523+ 95DC CD 56 96     8 call PreviousScan
 524+ 95DF 10 FB        	djnz 8B
 525+ 95E1
 526+ 95E1 E5           7 push hl
 527+ 95E2 DD E1        	pop ix
 528+ 95E4
 529+ 95E4 2A 85 88     	ld hl,(Puntero_objeto)
 530+ 95E7 E5           	push hl
 531+ 95E8 FD E1        	pop iy
 532+ 95EA
 533+ 95EA              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 95EA
 535+ 95EA 3A B1 88     	ld a,(Ctrl_0)
 536+ 95ED CB 77        	bit 6,a
 537+ 95EF C8           	ret z
 538+ 95F0
 539+ 95F0              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 95F0              ; _ entidad / Amadeus´.
 541+ 95F0
 542+ 95F0 DD 22 AD 85  	ld (p.imp.amadeus),ix
 543+ 95F4
 544+ 95F4 C9           	ret
 545+ 95F5
 546+ 95F5              ; --------------------------------------------------------------------------------------------------------------------
 547+ 95F5              ;
 548+ 95F5              ;	2/1/23
 549+ 95F5              ;
 550+ 95F5              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 95F5              ;
 552+ 95F5              ;	Tras esta rutina tenemos:
 553+ 95F5              ;
 554+ 95F5              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 95F5              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 95F5              ;
 557+ 95F5              ;	DESTRUYE!!!!! HL,B y A.
 558+ 95F5
 559+ 95F5 2A 83 88     Operandos ld hl,(Posicion_actual)
 560+ 95F8 3A B2 88     	ld a,(Columnas)
 561+ 95FB 3D           	dec a
 562+ 95FC 20 01        	jr nz,1F
 563+ 95FE 3C           	inc a
 564+ 95FF 47           1 ld b,a
 565+ 9600 C9           	ret
 566+ 9601
 567+ 9601              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9601              ;
 569+ 9601              ;	3/1/23
 570+ 9601              ;
 571+ 9601              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9601              ;
 573+ 9601              ;	Destruye: A,B,HL y DE.
 574+ 9601
 575+ 9601              Define_rutina_de_impresion
 576+ 9601
 577+ 9601 3A 82 88     	ld a,(Columns)
 578+ 9604 47           	ld b,a
 579+ 9605 3A B2 88     	ld a,(Columnas)
 580+ 9608 B8           	cp b
 581+ 9609 20 0D        	jr nz,2f
 582+ 960B
 583+ 960B              ;	La entidad se imprime entera.
 584+ 960B
 585+ 960B 21 2A 97     	ld hl, Indice_entidades_completas
 586+ 960E E6 01        	and 1
 587+ 9610 28 02        	jr z,1F
 588+ 9612
 589+ 9612 23           	inc hl
 590+ 9613 23           	inc hl
 591+ 9614
 592+ 9614 CD DB 8C     1 call Extrae_address
 593+ 9617 C9           	ret		;	ret
 594+ 9618
 595+ 9618              ;	La entidad no se imprime entera en pantalla.
 596+ 9618
 597+ 9618 3A 95 88     2 ld a,(Cuad_objeto)
 598+ 961B E6 01        	and 1
 599+ 961D 28 17        	jr z,3F
 600+ 961F
 601+ 961F              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 961F
 603+ 961F 21 2E 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9622 3A 82 88     4 ld a,(Columns)
 605+ 9625 E6 01        	and 1
 606+ 9627 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 9629
 608+ 9629 23           	inc hl
 609+ 962A 23           	inc hl
 610+ 962B
 611+ 962B 3A B2 88     	ld a,(Columnas)
 612+ 962E E6 01        	and 1
 613+ 9630 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9632
 615+ 9632 23           	inc hl
 616+ 9633 23           	inc hl
 617+ 9634
 618+ 9634 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 9636
 620+ 9636 21 34 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 9639 18 E7        	jr 4B
 622+ 963B
 623+ 963B              ; --------------------------------------------------------------------------------------------------------------------
 624+ 963B              ;
 625+ 963B              ;	Prepara_draw
 626+ 963B              ;
 627+ 963B              ;	Es una rutina de carga.
 628+ 963B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 963B              ;
 630+ 963B              ;	FUNCIONAMIENTO:
 631+ 963B              ;
 632+ 963B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 963B              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 963B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 963B              ;
 636+ 963B              ;	DESTRUYE:
 637+ 963B              ;
 638+ 963B              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 963B
 640+ 963B 21 81 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 963E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 963F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 9640 4E           	ld c,(hl)
 644+ 9641 2A 83 88     	ld hl,(Posicion_actual)
 645+ 9644 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 9646 C9           	ret
 647+ 9647
 648+ 9647              ;----------------------------------------------------------------------------------------------------------------
 649+ 9647              ;
 650+ 9647              ;	5/08/22
 651+ 9647              ;
 652+ 9647              ;   NextScan.
 653+ 9647              ;
 654+ 9647              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 9647              ;
 656+ 9647              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 9647              ;
 658+ 9647              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 9647              ;
 660+ 9647              ;       DESTRUIDOS: AF y HL !!!
 661+ 9647              ;
 662+ 9647              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 9647              ;
 664+ 9647
 665+ 9647 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 9648 7C               ld a,h
 667+ 9649 E6 07            and 7
 668+ 964B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 964C
 670+ 964C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 964D C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 964F 6F               ld l,a
 673+ 9650 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 9651
 675+ 9651 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 9652 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 9654 67               ld h,a
 678+ 9655 C9               ret
 679+ 9656
 680+ 9656              ;----------------------------------------------------------------------------------------------------------------
 681+ 9656              ;
 682+ 9656              ;	5/08/22
 683+ 9656              ;
 684+ 9656              ;   PreviousScan.
 685+ 9656              ;
 686+ 9656              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 9656              ;
 688+ 9656              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 9656              ;
 690+ 9656              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 9656              ;
 692+ 9656              ;       DESTRUIDOS: AF y HL !!!
 693+ 9656              ;
 694+ 9656              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 9656              ;
 696+ 9656
 697+ 9656 7C           PreviousScan ld a,h
 698+ 9657 25               dec h               ; Dec H.
 699+ 9658 E6 07            and 7
 700+ 965A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 965B
 702+ 965B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 965C D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 965E 6F               ld l,a
 705+ 965F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 9660
 707+ 9660 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 9661 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 9663 67               ld h,a
 710+ 9664 C9               ret
 711+ 9665
 712+ 9665              ; -----------------------------------------------------------------------------------
 713+ 9665              ;
 714+ 9665              ;	31/7/23
 715+ 9665              ;
 716+ 9665              ;	Rutina principal de pintado de entidades.
 717+ 9665              ;	Extrae la foto del frame, (entidades).
 718+ 9665
 719+ 9665              Extrae_foto_entidades
 720+ 9665
 721+ 9665 21 01 70     	ld hl,Album_de_fotos+1
 722+ 9668 7E           	ld a,(hl)
 723+ 9669 A7           	and a
 724+ 966A C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 966B
 726+ 966B              ;	No hay datos, (entidades para pintar en este frame).
 727+ 966B
 728+ 966B 3A D2 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 966E A7           	and a
 730+ 966F C8           	ret z
 731+ 9670
 732+ 9670              ; -----------------------------------
 733+ 9670
 734+ 9670 ED 73 D7 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9674 31 00 70     	ld sp,Album_de_fotos
 736+ 9677
 737+ 9677 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 9679 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 967A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 967B
 741+ 967B ED 73 D9 88  	ld (Stack_2),sp
 742+ 967F ED 7B D7 88  	ld sp,(Stack)
 743+ 9683
 744+ 9683              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9683
 746+ 9683 3E CD        	ld a,$cd
 747+ 9685 32 8D 96     	ld (Imprime),a
 748+ 9688 EB           	ex de,hl
 749+ 9689 22 8E 96     	ld (Imprime+1),hl
 750+ 968C EB           	ex de,hl
 751+ 968D
 752+ 968D              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 968D
 754+ 968D 00 00 00     Imprime db 0,0,0
 755+ 9690
 756+ 9690 ED 73 D7 88  	ld (Stack),sp
 757+ 9694
 758+ 9694 3A D2 88     	ld a,(Numero_de_malotes)
 759+ 9697 3D           	dec a
 760+ 9698 28 09        	jr z,1F
 761+ 969A 32 D2 88      	ld (Numero_de_malotes),a
 762+ 969D
 763+ 969D ED 7B D9 88  	ld sp,(Stack_2)
 764+ 96A1 18 D4        	jr 2B
 765+ 96A3
 766+ 96A3 AF           1 xor a
 767+ 96A4 32 D9 88     	ld (Stack_2),a
 768+ 96A7
 769+ 96A7 C9           	ret
 770+ 96A8
 771+ 96A8              ; -----------------------------------------------------------------------------------
 772+ 96A8              ;
 773+ 96A8              ;	28/2/23
 774+ 96A8              ;
 775+ 96A8              ;	Pinta los disparos generados.
 776+ 96A8
 777+ 96A8              Extrae_foto_disparos
 778+ 96A8
 779+ 96A8 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 96AB 7E               ld a,(hl)
 781+ 96AC A7               and a
 782+ 96AD C8               ret z
 783+ 96AE
 784+ 96AE 3A E6 88     	ld a,(Numero_de_disparotes)
 785+ 96B1 A7           	and a
 786+ 96B2 C8           	ret z
 787+ 96B3 ED 73 D7 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 96B7 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 96BA
 790+ 96BA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 96BC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 96BD D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 96BE
 794+ 96BE ED 73 D9 88  	ld (Stack_2),sp
 795+ 96C2 ED 7B D7 88  	ld sp,(Stack)
 796+ 96C6
 797+ 96C6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 96C6
 799+ 96C6 3E CD        	ld a,$cd
 800+ 96C8 32 D0 96     	ld (Imprime2),a
 801+ 96CB EB           	ex de,hl
 802+ 96CC 22 D1 96     	ld (Imprime2+1),hl
 803+ 96CF EB           	ex de,hl
 804+ 96D0
 805+ 96D0              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 96D0
 807+ 96D0 00 00 00     Imprime2 db 0,0,0
 808+ 96D3
 809+ 96D3 3A E6 88     	ld a,(Numero_de_disparotes)
 810+ 96D6 3D           	dec a
 811+ 96D7 28 09        	jr z,1F
 812+ 96D9 32 E6 88      	ld (Numero_de_disparotes),a
 813+ 96DC
 814+ 96DC ED 7B D9 88  	ld sp,(Stack_2)
 815+ 96E0 18 D8        	jr 2B
 816+ 96E2
 817+ 96E2 AF           1 xor a
 818+ 96E3 32 D9 88     	ld (Stack_2),a
 819+ 96E6 C9           	ret
 820+ 96E7
 821+ 96E7              ; -----------------------------------------------------------------------------------
 822+ 96E7              ;
 823+ 96E7              ;	4/9/23
 824+ 96E7              ;
 825+ 96E7              ;	Rutina principal de pintado de Amadeus.
 826+ 96E7              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 96E7
 828+ 96E7 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 96EA 7E           	ld a,(hl)
 830+ 96EB A7           	and a
 831+ 96EC C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 96ED
 833+ 96ED 3A D2 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 96F0 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 96F1 C8           	ret z
 836+ 96F2
 837+ 96F2              ; -----------------------------------
 838+ 96F2
 839+ 96F2 ED 73 D7 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 96F6 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 96F9
 842+ 96F9 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 96FB E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 96FC D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 96FD
 846+ 96FD ED 73 D9 88  	ld (Stack_2),sp
 847+ 9701 ED 7B D7 88  	ld sp,(Stack)
 848+ 9705
 849+ 9705              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9705
 851+ 9705 3E CD        	ld a,$cd
 852+ 9707 32 0F 97     	ld (Imprime_Amadeus),a
 853+ 970A EB           	ex de,hl
 854+ 970B 22 10 97     	ld (Imprime_Amadeus+1),hl
 855+ 970E EB           	ex de,hl
 856+ 970F
 857+ 970F              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 970F
 859+ 970F 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9712
 861+ 9712 ED 73 D7 88  	ld (Stack),sp
 862+ 9716
 863+ 9716 3A D2 88     	ld a,(Numero_de_malotes)
 864+ 9719 3D           	dec a
 865+ 971A 28 09        	jr z,1F
 866+ 971C 32 D2 88      	ld (Numero_de_malotes),a
 867+ 971F
 868+ 971F ED 7B D9 88  	ld sp,(Stack_2)
 869+ 9723 18 D4        	jr 2B
 870+ 9725
 871+ 9725 AF           1 xor a
 872+ 9726 32 D9 88     	ld (Stack_2),a
 873+ 9729
 874+ 9729 C9           	ret
# file closed: Draw_XOR.asm
1882  972A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 972A              ;   índices de Rutinas de impresión.
   2+ 972A
   3+ 972A 3A 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 972C 67 97            defw Pinta_Amadeus_3x2
   5+ 972E
   6+ 972E BD 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9730 5D 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9732 11 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9734
  10+ 9734 E7 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9736 EB 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9738 9F 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 973A
  14+ 973A
  15+ 973A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 973A              ;
  17+ 973A              ;   12/12/22
  18+ 973A              ;
  19+ 973A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 973A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 973A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 973A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 973A              ;
  24+ 973A              ;   Modifica: DE y HL.
  25+ 973A
  26+ 973A ED 73 D7 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 973E FD F9        	ld sp,iy
  28+ 9740 06 10            ld b,16
  29+ 9742 D1           1 pop de
  30+ 9743 7B               ld a,e
  31+ 9744 AE               xor (hl)
  32+ 9745 77           	ld (hl),a
  33+ 9746 23           	inc hl
  34+ 9747 7A               ld a,d
  35+ 9748 AE               xor (hl)
  36+ 9749 77           	ld (hl),a
  37+ 974A 2B           	dec hl
  38+ 974B 24           	inc h
  39+ 974C 7C               ld a,h
  40+ 974D E6 07            and 7
  41+ 974F 20 0A            jr nz,2F
  42+ 9751 7D               ld a,l
  43+ 9752 C6 20            add a,$20
  44+ 9754 6F               ld l,a
  45+ 9755 38 04            jr c,2F
  46+ 9757 7C               ld a,h
  47+ 9758 D6 08            sub 8
  48+ 975A 67               ld h,a
  49+ 975B 7C           2 ld a,h
  50+ 975C FE 58            cp $58
  51+ 975E 28 02            jr z,3F
  52+ 9760 10 E0            djnz 1B
  53+ 9762 ED 7B D7 88  3 ld sp,(Stack)
  54+ 9766 C9           	ret
  55+ 9767
  56+ 9767 ED 73 D7 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 976B FD F9        	ld sp,iy
  58+ 976D 06 08            ld b,8
  59+ 976F D1           1 pop de
  60+ 9770 7B               ld a,e
  61+ 9771 AE               xor (hl)
  62+ 9772 77           	ld (hl),a
  63+ 9773 23           	inc hl
  64+ 9774 7A               ld a,d
  65+ 9775 AE               xor (hl)
  66+ 9776 77           	ld (hl),a
  67+ 9777 23           	inc hl
  68+ 9778 D1           	pop de
  69+ 9779 7B               ld a,e
  70+ 977A AE               xor (hl)
  71+ 977B 77           	ld (hl),a
  72+ 977C 2B           	dec hl
  73+ 977D 2B           	dec hl
  74+ 977E 24           	inc h
  75+ 977F 7C               ld a,h
  76+ 9780 E6 07            and 7
  77+ 9782 20 0A            jr nz,2F
  78+ 9784 7D               ld a,l
  79+ 9785 C6 20            add a,$20
  80+ 9787 6F               ld l,a
  81+ 9788 38 04            jr c,2F
  82+ 978A 7C               ld a,h
  83+ 978B D6 08            sub 8
  84+ 978D 67               ld h,a
  85+ 978E 7C           2 ld a,h
  86+ 978F FE 58            cp $58
  87+ 9791 28 25            jr z,4F
  88+ 9793 7A               ld a,d
  89+ 9794 AE               xor (hl)
  90+ 9795 77               ld (hl),a
  91+ 9796 D1           	pop de
  92+ 9797 23           	inc hl
  93+ 9798 7B               ld a,e
  94+ 9799 AE               xor (hl)
  95+ 979A 77           	ld (hl),a
  96+ 979B 23           	inc hl
  97+ 979C 7A               ld a,d
  98+ 979D AE               xor (hl)
  99+ 979E 77           	ld (hl),a
 100+ 979F 2B           	dec hl
 101+ 97A0 2B           	dec hl
 102+ 97A1 24           	inc h
 103+ 97A2 7C               ld a,h
 104+ 97A3 E6 07            and 7
 105+ 97A5 20 0A            jr nz,3F
 106+ 97A7 7D               ld a,l
 107+ 97A8 C6 20            add a,$20
 108+ 97AA 6F               ld l,a
 109+ 97AB 38 04            jr c,3F
 110+ 97AD 7C               ld a,h
 111+ 97AE D6 08            sub 8
 112+ 97B0 67               ld h,a
 113+ 97B1 7C           3 ld a,h
 114+ 97B2 FE 58            cp $58
 115+ 97B4 28 02            jr z,4F
 116+ 97B6 10 B7            djnz 1B
 117+ 97B8 ED 7B D7 88  4 ld sp,(Stack)
 118+ 97BC C9           	ret
 119+ 97BD
 120+ 97BD              ; ---------------------------------------------------
 121+ 97BD
 122+ 97BD ED 73 D7 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97C1 FD F9        	ld sp,iy
 124+ 97C3
 125+ 97C3              ; >>>
 126+ 97C3
 127+ 97C3 06 10            ld b,16
 128+ 97C5 D1           1 pop de
 129+ 97C6 7A           	ld a,d
 130+ 97C7 AE           	xor (hl)
 131+ 97C8 77           	ld (hl),a
 132+ 97C9 24           	inc h
 133+ 97CA 7C               ld a,h
 134+ 97CB E6 07            and 7
 135+ 97CD 20 0C            jr nz,2F
 136+ 97CF 7D               ld a,l
 137+ 97D0 C6 20            add a,$20
 138+ 97D2 6F               ld l,a
 139+ 97D3 38 06            jr c,2F
 140+ 97D5 7C               ld a,h
 141+ 97D6 D6 08            sub 8
 142+ 97D8 67               ld h,a
 143+ 97D9 18 00            jr 2F
 144+ 97DB 7C           2 ld a,h
 145+ 97DC FE 58            cp $58
 146+ 97DE 28 02            jr z,3F
 147+ 97E0 10 E3            djnz 1B
 148+ 97E2 ED 7B D7 88  3 ld sp,(Stack)
 149+ 97E6 C9           	ret
 150+ 97E7
 151+ 97E7 ED 73 D7 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97EB FD F9        	ld sp,iy
 153+ 97ED
 154+ 97ED              ; >>>
 155+ 97ED
 156+ 97ED 06 10            ld b,16
 157+ 97EF D1           1 pop de
 158+ 97F0 7B           	ld a,e
 159+ 97F1 AE           	xor (hl)
 160+ 97F2 77           	ld (hl),a
 161+ 97F3 24           	inc h
 162+ 97F4 7C               ld a,h
 163+ 97F5 E6 07            and 7
 164+ 97F7 20 0C            jr nz,2F
 165+ 97F9 7D               ld a,l
 166+ 97FA C6 20            add a,$20
 167+ 97FC 6F               ld l,a
 168+ 97FD 38 06            jr c,2F
 169+ 97FF 7C               ld a,h
 170+ 9800 D6 08            sub 8
 171+ 9802 67               ld h,a
 172+ 9803 18 00            jr 2F
 173+ 9805 7C           2 ld a,h
 174+ 9806 FE 58            cp $58
 175+ 9808 28 02            jr z,3F
 176+ 980A 10 E3            djnz 1B
 177+ 980C ED 7B D7 88  3 ld sp,(Stack)
 178+ 9810 C9           	ret
 179+ 9811
 180+ 9811              ; ---------------------------------------------------
 181+ 9811
 182+ 9811 ED 73 D7 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9815 FD F9        	ld sp,iy
 184+ 9817 06 08            ld b,8
 185+ 9819 D1           1 pop de
 186+ 981A 7A           	ld a,d
 187+ 981B AE           	xor (hl)
 188+ 981C 77           	ld (hl),a
 189+ 981D 23           	inc hl
 190+ 981E D1           	pop de
 191+ 981F 7B           	ld a,e
 192+ 9820 AE           	xor (hl)
 193+ 9821 77           	ld (hl),a
 194+ 9822 2B           	dec hl
 195+ 9823 24            	inc h
 196+ 9824 7C               ld a,h
 197+ 9825 E6 07            and 7
 198+ 9827 20 0A            jr nz,2F
 199+ 9829 7D               ld a,l
 200+ 982A C6 20            add a,$20
 201+ 982C 6F               ld l,a
 202+ 982D 38 04            jr c,2F
 203+ 982F 7C               ld a,h
 204+ 9830 D6 08            sub 8
 205+ 9832 67               ld h,a
 206+ 9833 7C           2 ld a,h
 207+ 9834 FE 58            cp $58
 208+ 9836 28 20            jr z,4F
 209+ 9838 D1               pop de
 210+ 9839 7B           	ld a,e
 211+ 983A AE           	xor (hl)
 212+ 983B 77           	ld (hl),a
 213+ 983C 23           	inc hl
 214+ 983D 7A           	ld a,d
 215+ 983E AE           	xor (hl)
 216+ 983F 77           	ld (hl),a
 217+ 9840 2B           	dec hl
 218+ 9841 24           	inc h
 219+ 9842 7C               ld a,h
 220+ 9843 E6 07            and 7
 221+ 9845 20 0A            jr nz,3F
 222+ 9847 7D               ld a,l
 223+ 9848 C6 20            add a,$20
 224+ 984A 6F               ld l,a
 225+ 984B 38 04            jr c,3F
 226+ 984D 7C               ld a,h
 227+ 984E D6 08            sub 8
 228+ 9850 67               ld h,a
 229+ 9851 7C           3 ld a,h
 230+ 9852 FE 58            cp $58
 231+ 9854 28 02            jr z,4F
 232+ 9856 10 C1            djnz 1B
 233+ 9858 ED 7B D7 88  4 ld sp,(Stack)
 234+ 985C C9           	ret
 235+ 985D
 236+ 985D ED 73 D7 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9861 FD F9        	ld sp,iy
 238+ 9863 06 08            ld b,8
 239+ 9865 D1           1 pop de
 240+ 9866 D1           	pop de
 241+ 9867 7B           	ld a,e
 242+ 9868 AE           	xor (hl)
 243+ 9869 77           	ld (hl),a
 244+ 986A 24            	inc h
 245+ 986B 7C               ld a,h
 246+ 986C E6 07            and 7
 247+ 986E 20 0A            jr nz,2F
 248+ 9870 7D               ld a,l
 249+ 9871 C6 20            add a,$20
 250+ 9873 6F               ld l,a
 251+ 9874 38 04            jr c,2F
 252+ 9876 7C               ld a,h
 253+ 9877 D6 08            sub 8
 254+ 9879 67               ld h,a
 255+ 987A 7C           2 ld a,h
 256+ 987B FE 58            cp $58
 257+ 987D 28 1B            jr z,4F
 258+ 987F D1               pop de
 259+ 9880 7A           	ld a,d
 260+ 9881 AE           	xor (hl)
 261+ 9882 77           	ld (hl),a
 262+ 9883 24           	inc h
 263+ 9884 7C               ld a,h
 264+ 9885 E6 07            and 7
 265+ 9887 20 0A            jr nz,3F
 266+ 9889 7D               ld a,l
 267+ 988A C6 20            add a,$20
 268+ 988C 6F               ld l,a
 269+ 988D 38 04            jr c,3F
 270+ 988F 7C               ld a,h
 271+ 9890 D6 08            sub 8
 272+ 9892 67               ld h,a
 273+ 9893 7C           3 ld a,h
 274+ 9894 FE 58            cp $58
 275+ 9896 28 02            jr z,4F
 276+ 9898 10 CB            djnz 1B
 277+ 989A ED 7B D7 88  4 ld sp,(Stack)
 278+ 989E C9           	ret
 279+ 989F
 280+ 989F ED 73 D7 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98A3 FD F9        	ld sp,iy
 282+ 98A5 06 08            ld b,8
 283+ 98A7 D1           1 pop de
 284+ 98A8 7B           	ld a,e
 285+ 98A9 AE           	xor (hl)
 286+ 98AA 77           	ld (hl),a
 287+ 98AB 23           	inc hl
 288+ 98AC 7A           	ld a,d
 289+ 98AD AE           	xor (hl)
 290+ 98AE 77           	ld (hl),a
 291+ 98AF 2B           	dec hl
 292+ 98B0 24             	inc h
 293+ 98B1 7C               ld a,h
 294+ 98B2 E6 07            and 7
 295+ 98B4 20 0A            jr nz,2F
 296+ 98B6 7D               ld a,l
 297+ 98B7 C6 20            add a,$20
 298+ 98B9 6F               ld l,a
 299+ 98BA 38 04            jr c,2F
 300+ 98BC 7C               ld a,h
 301+ 98BD D6 08            sub 8
 302+ 98BF 67               ld h,a
 303+ 98C0 7C           2 ld a,h
 304+ 98C1 FE 58            cp $58
 305+ 98C3 28 21            jr z,4F
 306+ 98C5 D1               pop de
 307+ 98C6 7A           	ld a,d
 308+ 98C7 AE           	xor (hl)
 309+ 98C8 77           	ld (hl),a
 310+ 98C9 23           	inc hl
 311+ 98CA D1               pop de
 312+ 98CB 7B           	ld a,e
 313+ 98CC AE           	xor (hl)
 314+ 98CD 77           	ld (hl),a
 315+ 98CE 2B           	dec hl
 316+ 98CF 24           	inc h
 317+ 98D0 7C               ld a,h
 318+ 98D1 E6 07            and 7
 319+ 98D3 20 0A            jr nz,3F
 320+ 98D5 7D               ld a,l
 321+ 98D6 C6 20            add a,$20
 322+ 98D8 6F               ld l,a
 323+ 98D9 38 04            jr c,3F
 324+ 98DB 7C               ld a,h
 325+ 98DC D6 08            sub 8
 326+ 98DE 67               ld h,a
 327+ 98DF 7C           3 ld a,h
 328+ 98E0 FE 58            cp $58
 329+ 98E2 28 02            jr z,4F
 330+ 98E4 10 C1            djnz 1B
 331+ 98E6 ED 7B D7 88  4 ld sp,(Stack)
 332+ 98EA C9           	ret
 333+ 98EB
 334+ 98EB ED 73 D7 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98EF FD F9        	ld sp,iy
 336+ 98F1 06 08            ld b,8
 337+ 98F3 D1           1 pop de
 338+ 98F4 7B           	ld a,e
 339+ 98F5 AE           	xor (hl)
 340+ 98F6 77           	ld (hl),a
 341+ 98F7 24            	inc h
 342+ 98F8 7C               ld a,h
 343+ 98F9 E6 07            and 7
 344+ 98FB 20 0A            jr nz,2F
 345+ 98FD 7D               ld a,l
 346+ 98FE C6 20            add a,$20
 347+ 9900 6F               ld l,a
 348+ 9901 38 04            jr c,2F
 349+ 9903 7C               ld a,h
 350+ 9904 D6 08            sub 8
 351+ 9906 67               ld h,a
 352+ 9907 7C           2 ld a,h
 353+ 9908 FE 58            cp $58
 354+ 990A 28 1C            jr z,4F
 355+ 990C D1               pop de
 356+ 990D 7A           	ld a,d
 357+ 990E AE           	xor (hl)
 358+ 990F 77           	ld (hl),a
 359+ 9910 24           	inc h
 360+ 9911 7C               ld a,h
 361+ 9912 E6 07            and 7
 362+ 9914 20 0A            jr nz,3F
 363+ 9916 7D               ld a,l
 364+ 9917 C6 20            add a,$20
 365+ 9919 6F               ld l,a
 366+ 991A 38 04            jr c,3F
 367+ 991C 7C               ld a,h
 368+ 991D D6 08            sub 8
 369+ 991F 67               ld h,a
 370+ 9920 7C           3 ld a,h
 371+ 9921 FE 58            cp $58
 372+ 9923 28 03            jr z,4F
 373+ 9925 D1               pop de
 374+ 9926 10 CB            djnz 1B
 375+ 9928 ED 7B D7 88  4 ld sp,(Stack)
 376+ 992C C9           	ret
 377+ 992D
 378+ 992D              ; ---------------------------------------------------
 379+ 992D              ;
 380+ 992D              ;   27/02/23
 381+ 992D              ;
 382+ 992D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 992D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 992D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 992D
 386+ 992D ED 73 D7 88  Pinta_Disparo ld (Stack),sp
 387+ 9931 FD F9            ld sp,iy
 388+ 9933 06 03            ld b,3
 389+ 9935 D1           1 pop de
 390+ 9936 7B               ld a,e
 391+ 9937 AE               xor (hl)
 392+ 9938 77               ld (hl),a
 393+ 9939 23               inc hl
 394+ 993A 7A               ld a,d
 395+ 993B AE               xor (hl)
 396+ 993C 77               ld (hl),a
 397+ 993D 2B               dec hl
 398+ 993E
 399+ 993E 24               inc h
 400+ 993F 7C               ld a,h
 401+ 9940 E6 07            and 7
 402+ 9942 20 0A            jr nz,2F
 403+ 9944 7D               ld a,l
 404+ 9945 C6 20            add a,$20
 405+ 9947 6F               ld l,a
 406+ 9948 38 04            jr c,2F
 407+ 994A 7C               ld a,h
 408+ 994B D6 08            sub 8
 409+ 994D 67               ld h,a
 410+ 994E 7C           2 ld a,h
 411+ 994F FE 58            cp $58
 412+ 9951 28 02            jr z,3F
 413+ 9953
 414+ 9953 10 E0            djnz 1B
 415+ 9955 ED 7B D7 88  3 ld sp,(Stack)
 416+ 9959 C9               ret
 417+ 995A
# file closed: Rutinas_de_impresion_sprites.asm
1883  995A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 995A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 995A              ;
   3+ 995A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 995A              ;
   5+ 995A              ; *****************************************************************************************************************************************************************************************
   6+ 995A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 995A
   8+ 995A 7C           calcula_tercio ld a,h
   9+ 995B E6 18        	and $18
  10+ 995D CB 2F        	sra a
  11+ 995F CB 2F        	sra a
  12+ 9961 CB 2F        	sra a
  13+ 9963 C9           	ret
  14+ 9964
# file closed: calcula_tercio.asm
1884  9964              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9964              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9964              ;
   3+ 9964              ;
   4+ 9964              ;	CLS.
   5+ 9964              ;
   6+ 9964              ;	Limpia la pantalla y define sus atributos.
   7+ 9964              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9964              ;
   9+ 9964              ;	COLORES: 0 ..... NEGRO
  10+ 9964              ;    		 1 ..... AZUL
  11+ 9964              ; 			 2 ..... ROJO
  12+ 9964              ;			 3 ..... MAGENTA
  13+ 9964              ; 			 4 ..... VERDE
  14+ 9964              ; 			 5 ..... CIAN
  15+ 9964              ;			 6 ..... AMARILLO
  16+ 9964              ; 			 7 ..... BLANCO
  17+ 9964              ;
  18+ 9964              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9964              ;
  20+ 9964              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9964
  22+ 9964
  23+ 9964 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9967 11 01 40     	LD DE,$4001
  25+ 996A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 996D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 996F ED B0        	LDIR
  28+ 9971 01 FF 02     	LD BC,767
  29+ 9974 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9975 ED B0        	LDIR
  31+ 9977 C9           	ret
  32+ 9978
# file closed: Cls.asm
1885  9978              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9978              ; ******************************************************************************************************************************************************************************************
   2+ 9978              ;
   3+ 9978              ;   20/05/23
   4+ 9978              ;
   5+ 9978              ;	Recompone_posicion_inicio
   6+ 9978              ;
   7+ 9978              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9978              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9978              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9978              ;	_ a una u otra rutina.
  11+ 9978
  12+ 9978              Recompone_posicion_inicio
  13+ 9978
  14+ 9978 2A 93 88     	ld hl,(Posicion_inicio)
  15+ 997B 7D           	ld a,l
  16+ 997C E6 1F        	and $1f
  17+ 997E 28 16        	jr z,1F
  18+ 9980
  19+ 9980 FE 1F        	cp $1f
  20+ 9982 28 0D        	jr z,3F
  21+ 9984
  22+ 9984 21 B6 88     	ld hl,Ctrl_2
  23+ 9987 CB C6        	set 0,(hl)
  24+ 9989 2A 85 88     	ld hl,(Puntero_objeto)
  25+ 998C 22 C7 88     	ld (Repone_puntero_objeto),hl
  26+ 998F 18 08        	jr 2F
  27+ 9991
  28+ 9991 CD 3B 9B     3 call Mov_left
  29+ 9994 18 03        	jr 2F
  30+ 9996
  31+ 9996 CD 18 9A     1 call Mov_right
  32+ 9999 21 00 F0     2 ld hl,Sprite_vacio
  33+ 999C 22 85 88     	ld (Puntero_objeto),hl
  34+ 999F C9           	ret
  35+ 99A0
  36+ 99A0              ; ******************************************************************************************************************************************************************************************
  37+ 99A0              ;
  38+ 99A0              ;   27/05/23
  39+ 99A0              ;
  40+ 99A0              ;	Mov_down
  41+ 99A0              ;
  42+ 99A0              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99A0              ;
  44+ 99A0              ;
  45+ 99A0              Mov_down
  46+ 99A0
  47+ 99A0 CD 06 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99A3              ;																	; _ repone (Puntero_objeto).
  49+ 99A3 21 B1 88     	ld hl,Ctrl_0
  50+ 99A6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99A8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99A8              ; 																	; _ en el caso de que no lo haya.
  53+ 99A8 3A 99 88     	ld a,(Vel_down)
  54+ 99AB 47           	ld b,a
  55+ 99AC 2A 83 88         ld hl,(Posicion_actual)
  56+ 99AF CD 5A 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99B2 E6 02        	and 2
  58+ 99B4 28 13        	jr z,1F
  59+ 99B6
  60+ 99B6              ; Nos encontramos en el último tercio de pantalla.
  61+ 99B6              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99B6
  63+ 99B6 7C           	ld a,h
  64+ 99B7 FE 57        	cp $57
  65+ 99B9 20 0E        	jr nz,1F
  66+ 99BB
  67+ 99BB 7D           	ld a,l
  68+ 99BC C6 20        	add $20
  69+ 99BE 30 09        	jr nc,1F
  70+ 99C0
  71+ 99C0              ; ------------------------------
  72+ 99C0              ;
  73+ 99C0              ;	30/12/15
  74+ 99C0
  75+ 99C0              ;	call Reaparece_arriba
  76+ 99C0 CD C8 9C     	call Reinicio
  77+ 99C3
  78+ 99C3 F3           	di
  79+ 99C4 18 FE        	jr $
  80+ 99C6 FB           	ei
  81+ 99C7
  82+ 99C7              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  83+ 99C7              ;	Recordamos que ´solo las "Entidades_guía" ejecutan las rutinas de movimiento.
  84+ 99C7
  85+ 99C7              ;	ld a,(Ctrl_3)
  86+ 99C7              ;	res 1,a
  87+ 99C7              ;	set 2,a													; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  88+ 99C7              ;	ld (Ctrl_3),a
  89+ 99C7
  90+ 99C7 18 08        	jr 3F
  91+ 99C9              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  92+ 99C9              ;															; _a la siguiente entidad como "Entidad_guía".
  93+ 99C9              ; ------------------------------
  94+ 99C9
  95+ 99C9 CD 47 96     1 call NextScan
  96+ 99CC 22 83 88     	ld (Posicion_actual),hl
  97+ 99CF 10 DE            djnz 2B
  98+ 99D1 CD EE 9C     3 call Genera_coordenadas
  99+ 99D4 C9           	ret
 100+ 99D5
 101+ 99D5              ; ******************************************************************************************************************************************************************************************
 102+ 99D5              ;
 103+ 99D5              ;   27/05/23
 104+ 99D5              ;
 105+ 99D5              ;	Mov_up
 106+ 99D5              ;
 107+ 99D5              ; 	Mueve el Sprite hacia arriba.
 108+ 99D5              ;
 109+ 99D5              ;
 110+ 99D5              Mov_up
 111+ 99D5
 112+ 99D5 CD 06 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 113+ 99D8              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 114+ 99D8 21 B1 88     	ld hl,Ctrl_0
 115+ 99DB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 116+ 99DD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 117+ 99DD              ; 																		; _ en el caso de que no lo haya.
 118+ 99DD 3A 98 88     	ld a,(Vel_up)
 119+ 99E0 47           	ld b,a
 120+ 99E1 2A 83 88     	ld hl,(Posicion_actual)
 121+ 99E4 CD 5A 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 122+ 99E7 A7           	and a
 123+ 99E8 20 10        	jr nz,1F
 124+ 99EA
 125+ 99EA              ; Nos encontramos en el 1er tercio de pantalla.
 126+ 99EA              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 127+ 99EA
 128+ 99EA 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 129+ 99EB FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 130+ 99ED 20 0B            jr nz,1F
 131+ 99EF 7D               ld a,l
 132+ 99F0 D6 20            sub $20
 133+ 99F2 30 06            jr nc,1F
 134+ 99F4 25               dec h
 135+ 99F5
 136+ 99F5              ; -----------------------------
 137+ 99F5 CD A9 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 138+ 99F8              ;	call Reinicio
 139+ 99F8              ; -----------------------------
 140+ 99F8
 141+ 99F8 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 142+ 99FA CD 56 96     1 call PreviousScan
 143+ 99FD 22 83 88     	ld (Posicion_actual),hl
 144+ 9A00 10 E2            djnz 3B
 145+ 9A02 CD EE 9C     2 call Genera_coordenadas
 146+ 9A05 C9           	ret
 147+ 9A06
 148+ 9A06              ; -----------------------------
 149+ 9A06              ;
 150+ 9A06              ;	27/5/23
 151+ 9A06              ;
 152+ 9A06              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 153+ 9A06              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 154+ 9A06              ;
 155+ 9A06              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 156+ 9A06              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 157+ 9A06              ;
 158+ 9A06              ;	Modifica: A y (Puntero_objeto).
 159+ 9A06
 160+ 9A06 3A B6 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 161+ 9A09 CB 47        	bit 0,a
 162+ 9A0B C8           	ret z
 163+ 9A0C CB 87        	res 0,a
 164+ 9A0E 32 B6 88     	ld (Ctrl_2),a
 165+ 9A11 2A C7 88     	ld hl,(Repone_puntero_objeto)
 166+ 9A14 22 85 88     	ld (Puntero_objeto),hl
 167+ 9A17 C9           	ret
 168+ 9A18
 169+ 9A18              ; ******************************************************************************************************************************************************************************************
 170+ 9A18              ;
 171+ 9A18              ;	19/10/22
 172+ 9A18              ;
 173+ 9A18              ;	Mov_right.
 174+ 9A18              ;
 175+ 9A18              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 176+ 9A18              ;
 177+ 9A18
 178+ 9A18 3A B1 88     Mov_right ld a,(Ctrl_0)
 179+ 9A1B CB 77        	bit 6,a
 180+ 9A1D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 181+ 9A1F
 182+ 9A1F CD 57 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 183+ 9A22 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 184+ 9A23
 185+ 9A23 21 B1 88     	ld hl,Ctrl_0
 186+ 9A26 CB E6        	set 4,(hl)
 187+ 9A28 18 52        	jr 8F
 188+ 9A2A
 189+ 9A2A 21 B1 88     10 ld hl,Ctrl_0
 190+ 9A2D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 191+ 9A2F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 192+ 9A2F              ; 																	; _ en el caso de que no lo haya.
 193+ 9A2F 3A 87 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 194+ 9A32 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 195+ 9A34 20 46        	jr nz,8F
 196+ 9A36
 197+ 9A36 3A 89 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 198+ 9A39 A7           	and a 															; _[3] para continuar con el DESPLZ.
 199+ 9A3A 28 40        	jr z,8F
 200+ 9A3C
 201+ 9A3C              ; ---------- ---------- ----------
 202+ 9A3C              ;
 203+ 9A3C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 204+ 9A3C
 205+ 9A3C 3A 97 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 206+ 9A3F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 207+ 9A41 28 11        	jr z,1F
 208+ 9A43 38 06        	jr c,6F
 209+ 9A45 FE 04        	cp 4
 210+ 9A47 28 14        	jr z,7F
 211+ 9A49 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 212+ 9A4B
 213+ 9A4B              ; ---------- ---------- ----------
 214+ 9A4B              ;
 215+ 9A4B              ; Perfiles de velocidad
 216+ 9A4B              ;
 217+ 9A4B
 218+ 9A4B 3A 89 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 219+ 9A4E FE FE        	cp $fe
 220+ 9A50 20 2A        	jr nz,8F
 221+ 9A52 18 10        	jr 3F
 222+ 9A54 3A 89 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 223+ 9A57 FE FD        	cp $fd
 224+ 9A59 20 21        	jr nz,8F
 225+ 9A5B 18 07        	jr 3F
 226+ 9A5D 3A 89 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 227+ 9A60 FE FB        	cp $fb
 228+ 9A62 20 18        	jr nz,8F
 229+ 9A64
 230+ 9A64              ; ---------- ---------- ----------
 231+ 9A64
 232+ 9A64              3
 233+ 9A64 CD 97 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 234+ 9A67              ;	call Reinicio
 235+ 9A67
 236+ 9A67              ; ---------- ---------- ----------
 237+ 9A67              ;
 238+ 9A67              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 239+ 9A67
 240+ 9A67 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 241+ 9A69 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 242+ 9A6A CD 83 9A     	call DESPLZ_DER
 243+ 9A6D C1           	pop bc
 244+ 9A6E 10 F9        	djnz 5B
 245+ 9A70 2A 83 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 246+ 9A73 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 247+ 9A74 22 83 88     	ld (Posicion_actual),hl
 248+ 9A77 CD EE 9C     	call Genera_coordenadas
 249+ 9A7A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 250+ 9A7C
 251+ 9A7C              ; ---------- ---------- ----------
 252+ 9A7C
 253+ 9A7C 2A 83 88     8 ld hl,(Posicion_actual)
 254+ 9A7F CD 83 9A     	call DESPLZ_DER
 255+ 9A82 C9           2 ret
 256+ 9A83
 257+ 9A83              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 258+ 9A83              ;
 259+ 9A83              ;	22/9/22
 260+ 9A83              ;
 261+ 9A83
 262+ 9A83 CD 92 9A     DESPLZ_DER call Desplaza_derecha
 263+ 9A86 CD DE 9A         call modifica_parametros_1er_DESPLZ_2
 264+ 9A89 CD 07 9B         call Ciclo_completo
 265+ 9A8C 21 B1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 266+ 9A8F CB FE        	set 7,(hl)
 267+ 9A91 C9           	ret
 268+ 9A92
 269+ 9A92              ; ******************************************************************************************************************************************************************************************
 270+ 9A92              ;	15/02/23
 271+ 9A92              ;
 272+ 9A92
 273+ 9A92 3A 97 88     Desplaza_derecha ld a,(Vel_right)
 274+ 9A95 47           	ld b,a
 275+ 9A96 2A 8F 88     	ld hl,(Puntero_DESPLZ_der)
 276+ 9A99 23           1 inc hl
 277+ 9A9A 23           	inc hl
 278+ 9A9B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 279+ 9A9D 22 8F 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 280+ 9AA0 CD DB 8C     	call Extrae_address
 281+ 9AA3 22 85 88     	ld (Puntero_objeto),hl
 282+ 9AA6
 283+ 9AA6              ; Modifica (Puntero_DESPLZ_izq).
 284+ 9AA6
 285+ 9AA6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 286+ 9AA6              ; Cuántos movimientos hemos hecho ??
 287+ 9AA6              ; DE contiene (Puntero_DESPLZ_der).
 288+ 9AA6
 289+ 9AA6 2A 8B 88     7 ld hl,(Indice_Sprite_der)
 290+ 9AA9 EB           	ex de,hl
 291+ 9AAA A7           	and a
 292+ 9AAB ED 52        	sbc hl,de
 293+ 9AAD CB 3D        	srl l
 294+ 9AAF 3E 08        6 ld a,8
 295+ 9AB1 95           	sub l
 296+ 9AB2 30 1E        	jr nc,3F
 297+ 9AB4
 298+ 9AB4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 299+ 9AB4              ; B="0".
 300+ 9AB4
 301+ 9AB4 04           4 inc b
 302+ 9AB5 3C           	inc a
 303+ 9AB6 20 FC        	jr nz,4B
 304+ 9AB8 78           	ld a,b
 305+ 9AB9 08           	ex af,af
 306+ 9ABA 2A 8B 88     	ld hl,(Indice_Sprite_der)
 307+ 9ABD 23           5 inc hl
 308+ 9ABE 23           	inc hl
 309+ 9ABF 10 FC        	djnz 5B
 310+ 9AC1 22 8F 88     	ld (Puntero_DESPLZ_der),hl
 311+ 9AC4 CD DB 8C     	call Extrae_address
 312+ 9AC7 22 85 88     	ld (Puntero_objeto),hl
 313+ 9ACA
 314+ 9ACA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 315+ 9ACA              ; _(Posicion_actual).
 316+ 9ACA
 317+ 9ACA 21 83 88     	ld hl,Posicion_actual
 318+ 9ACD 34           	inc (hl)
 319+ 9ACE 08               ex af,af
 320+ 9ACF 6F           	ld l,a
 321+ 9AD0 18 DD        	jr 6B
 322+ 9AD2
 323+ 9AD2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 324+ 9AD2
 325+ 9AD2 47           3 ld b,a
 326+ 9AD3 2A 8D 88     	ld hl,(Indice_Sprite_izq)
 327+ 9AD6 23           2 inc hl
 328+ 9AD7 23           	inc hl
 329+ 9AD8 10 FC        	djnz 2B
 330+ 9ADA 22 91 88     	ld (Puntero_DESPLZ_izq),hl
 331+ 9ADD C9           8 ret
 332+ 9ADE
 333+ 9ADE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 334+ 9ADE              ;
 335+ 9ADE              ;	24/7/22
 336+ 9ADE              ;
 337+ 9ADE              ;	modifica_parametros_1er_DESPLZ_2
 338+ 9ADE              ;
 339+ 9ADE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 340+ 9ADE              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 341+ 9ADE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 342+ 9ADE
 343+ 9ADE 3A 89 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 344+ 9AE1 A7           	and a
 345+ 9AE2 20 1F        	jr nz,1F
 346+ 9AE4 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 347+ 9AE6 32 89 88         ld (CTRL_DESPLZ),a
 348+ 9AE9
 349+ 9AE9 21 82 88     	ld hl,Columns
 350+ 9AEC 34           	inc (hl)
 351+ 9AED 3A 95 88     	ld a,(Cuad_objeto)
 352+ 9AF0 E6 01        	and 1
 353+ 9AF2 28 0F        	jr z,1F
 354+ 9AF4 2A 83 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 355+ 9AF7 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 356+ 9AF8 22 83 88     	ld (Posicion_actual),hl
 357+ 9AFB CD EE 9C     	call Genera_coordenadas
 358+ 9AFE CD 63 9C     	call Inc_CTRL_DESPLZ
 359+ 9B01 18 03        	jr 2F
 360+ 9B03 CD 63 9C     1 call Inc_CTRL_DESPLZ
 361+ 9B06 C9           2 ret
 362+ 9B07
 363+ 9B07              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 364+ 9B07              ;
 365+ 9B07              ;	24/7/22
 366+ 9B07              ;
 367+ 9B07              ;	Ciclo_completo.
 368+ 9B07              ;
 369+ 9B07              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 370+ 9B07              ;
 371+ 9B07              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 372+ 9B07              ; 	Decrementamos (Columns).
 373+ 9B07              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 374+ 9B07              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 375+ 9B07
 376+ 9B07
 377+ 9B07 3A 89 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 378+ 9B0A FE FF        	cp $ff
 379+ 9B0C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 380+ 9B0E E6 F0        	and $f0
 381+ 9B10 20 28        	jr nz,3F
 382+ 9B12
 383+ 9B12              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 384+ 9B12
 385+ 9B12 3A 89 88     	ld a,(CTRL_DESPLZ)
 386+ 9B15 47           	ld b,a
 387+ 9B16 3E F8        	ld a,$f8
 388+ 9B18 80           	add b
 389+ 9B19 32 89 88     	ld (CTRL_DESPLZ),a
 390+ 9B1C 18 1C        	jr 3F
 391+ 9B1E 21 82 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 392+ 9B21 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 393+ 9B22 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 394+ 9B23 32 89 88     	ld (CTRL_DESPLZ),a
 395+ 9B26 3A 95 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 396+ 9B29 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 397+ 9B2B 20 0A        	jr nz,2F
 398+ 9B2D 2A 83 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 399+ 9B30 23           	inc hl
 400+ 9B31 22 83 88     	ld (Posicion_actual),hl
 401+ 9B34 CD EE 9C     	call Genera_coordenadas
 402+ 9B37
 403+ 9B37              ; Inicia el puntero de Sprite.
 404+ 9B37
 405+ 9B37 CD F2 8C     2 call Inicia_puntero_objeto_der
 406+ 9B3A C9           3 ret
 407+ 9B3B
 408+ 9B3B              ; ******************************************************************************************************************************************************************************************
 409+ 9B3B              ;
 410+ 9B3B              ;	15/02/23
 411+ 9B3B              ;
 412+ 9B3B              ;	Mov_left.
 413+ 9B3B              ;
 414+ 9B3B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 415+ 9B3B              ;
 416+ 9B3B              Mov_left
 417+ 9B3B
 418+ 9B3B 21 B1 88     	ld hl,Ctrl_0
 419+ 9B3E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 420+ 9B40              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 421+ 9B40              ; 																	; _ en el caso de que no lo haya.
 422+ 9B40 3A B1 88     	ld a,(Ctrl_0)
 423+ 9B43 CB 77        	bit 6,a
 424+ 9B45 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 425+ 9B47
 426+ 9B47 CD 5D 9C     	call Stop_Amadeus_left
 427+ 9B4A C8           	ret z
 428+ 9B4B 20 4A        	jr nz,8F
 429+ 9B4D
 430+ 9B4D 3A 87 88     11 ld a,(Coordenada_X)
 431+ 9B50 A7           	and a
 432+ 9B51 20 44        	jr nz,8F
 433+ 9B53
 434+ 9B53 3A 89 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 435+ 9B56 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 436+ 9B57 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 437+ 9B59
 438+ 9B59              ; ---------- ---------- ----------
 439+ 9B59
 440+ 9B59 3A 96 88     	ld a,(Vel_left)
 441+ 9B5C FE 02        	cp 2
 442+ 9B5E 28 0F        	jr z,1F
 443+ 9B60 38 04        	jr c,6F
 444+ 9B62 FE 04        	cp 4
 445+ 9B64 28 12        	jr z,7F
 446+ 9B66
 447+ 9B66              ; ---------- ---------- ----------
 448+ 9B66
 449+ 9B66 3A 89 88     6 ld a,(CTRL_DESPLZ)
 450+ 9B69 FE F8        	cp $f8
 451+ 9B6B 20 2A        	jr nz,8F
 452+ 9B6D 18 10        	jr 4F
 453+ 9B6F 3A 89 88     1 ld a,(CTRL_DESPLZ)
 454+ 9B72 FE F9        	cp $f9
 455+ 9B74 20 21        	jr nz,8F
 456+ 9B76 18 07        	jr 4F
 457+ 9B78 3A 89 88     7 ld a,(CTRL_DESPLZ)
 458+ 9B7B FE FB        	cp $fb
 459+ 9B7D 20 18        	jr nz,8F
 460+ 9B7F
 461+ 9B7F              ; ---------- ---------- ----------
 462+ 9B7F
 463+ 9B7F              4
 464+ 9B7F CD 85 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 465+ 9B82              ;	call Reinicio
 466+ 9B82
 467+ 9B82              ; ---------- ---------- ----------
 468+ 9B82
 469+ 9B82 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 470+ 9B84 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 471+ 9B85
 472+ 9B85              ;	ld hl,(Indice_Sprite_izq)
 473+ 9B85              ;	ld (Puntero_DESPLZ_izq),hl
 474+ 9B85
 475+ 9B85 CD 9E 9B     	call DESPLZ_IZQ
 476+ 9B88 C1           	pop bc
 477+ 9B89 10 F9        	djnz 5B
 478+ 9B8B 2A 83 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 479+ 9B8E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 480+ 9B8F 22 83 88     	ld (Posicion_actual),hl
 481+ 9B92 CD EE 9C     	call Genera_coordenadas
 482+ 9B95 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 483+ 9B97
 484+ 9B97              ; ---------- ---------- ----------
 485+ 9B97
 486+ 9B97              ; Movemos, no hay recolocación.
 487+ 9B97
 488+ 9B97 2A 83 88     8 ld hl,(Posicion_actual)
 489+ 9B9A CD 9E 9B     	call DESPLZ_IZQ
 490+ 9B9D C9           2 ret
 491+ 9B9E
 492+ 9B9E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 493+ 9B9E              ;
 494+ 9B9E              ;	22/9/22
 495+ 9B9E
 496+ 9B9E              DESPLZ_IZQ
 497+ 9B9E
 498+ 9B9E CD AD 9B     	call Desplaza_izquierda
 499+ 9BA1 CD F9 9B         call modifica_parametros_1er_DESPLZ
 500+ 9BA4 CD 21 9C     	call Ciclo_completo_2
 501+ 9BA7 21 B1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 502+ 9BAA CB BE        	res 7,(hl)
 503+ 9BAC C9           	ret
 504+ 9BAD
 505+ 9BAD              Desplaza_izquierda
 506+ 9BAD
 507+ 9BAD 3A 96 88     	ld a,(Vel_left)
 508+ 9BB0 47           	ld b,a
 509+ 9BB1 2A 91 88     	ld hl,(Puntero_DESPLZ_izq)
 510+ 9BB4 23           1 inc hl
 511+ 9BB5 23           	inc hl
 512+ 9BB6 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 513+ 9BB8 22 91 88     	ld (Puntero_DESPLZ_izq),hl
 514+ 9BBB CD DB 8C     	call Extrae_address
 515+ 9BBE 22 85 88     	ld (Puntero_objeto),hl
 516+ 9BC1
 517+ 9BC1              ; Modifica (Puntero_DESPLZ_der).
 518+ 9BC1
 519+ 9BC1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 520+ 9BC1              ; Cuántos movimientos hemos hecho ??
 521+ 9BC1              ; DE contiene (Puntero_DESPLZ_izq).
 522+ 9BC1
 523+ 9BC1 2A 8D 88     7 ld hl,(Indice_Sprite_izq)
 524+ 9BC4 EB           	ex de,hl
 525+ 9BC5 A7           	and a
 526+ 9BC6 ED 52        	sbc hl,de
 527+ 9BC8 CB 3D        	srl l
 528+ 9BCA 3E 08        6 ld a,8
 529+ 9BCC 95           	sub l
 530+ 9BCD 30 1E        	jr nc,3F
 531+ 9BCF
 532+ 9BCF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 533+ 9BCF              ; B="0".
 534+ 9BCF
 535+ 9BCF 04           4 inc b
 536+ 9BD0 3C           	inc a
 537+ 9BD1 20 FC        	jr nz,4B
 538+ 9BD3 78           	ld a,b
 539+ 9BD4 08           	ex af,af
 540+ 9BD5 2A 8D 88     	ld hl,(Indice_Sprite_izq)
 541+ 9BD8 23           5 inc hl
 542+ 9BD9 23           	inc hl
 543+ 9BDA 10 FC        	djnz 5B
 544+ 9BDC 22 91 88     	ld (Puntero_DESPLZ_izq),hl
 545+ 9BDF CD DB 8C     	call Extrae_address
 546+ 9BE2 22 85 88     	ld (Puntero_objeto),hl
 547+ 9BE5
 548+ 9BE5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 549+ 9BE5              ; _(Posicion_actual).
 550+ 9BE5
 551+ 9BE5 21 83 88     	ld hl,Posicion_actual
 552+ 9BE8 35           	dec (hl)
 553+ 9BE9 08           	ex af,af
 554+ 9BEA 6F           	ld l,a
 555+ 9BEB 18 DD        	jr 6B
 556+ 9BED
 557+ 9BED              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 558+ 9BED
 559+ 9BED 47           3 ld b,a
 560+ 9BEE 2A 8B 88     	ld hl,(Indice_Sprite_der)
 561+ 9BF1 23           2 inc hl
 562+ 9BF2 23           	inc hl
 563+ 9BF3 10 FC        	djnz 2B
 564+ 9BF5 22 8F 88     	ld (Puntero_DESPLZ_der),hl
 565+ 9BF8 C9           8 ret
 566+ 9BF9
 567+ 9BF9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 568+ 9BF9              ;
 569+ 9BF9              ;	modifica_parametros_1er_DESPLZ
 570+ 9BF9              ;
 571+ 9BF9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 572+ 9BF9              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 573+ 9BF9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 574+ 9BF9
 575+ 9BF9 3A 89 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 576+ 9BFC A7           	and a
 577+ 9BFD 20 1E        	jr nz,1F
 578+ 9BFF 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 579+ 9C00 32 89 88         ld (CTRL_DESPLZ),a
 580+ 9C03 21 82 88     	ld hl,Columns
 581+ 9C06 34           	inc (hl)
 582+ 9C07 3A 95 88     	ld a,(Cuad_objeto)
 583+ 9C0A E6 01        	and 1
 584+ 9C0C 20 0F        	jr nz,1F
 585+ 9C0E 2A 83 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 586+ 9C11 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 587+ 9C12 22 83 88     	ld (Posicion_actual),hl
 588+ 9C15 CD EE 9C     	call Genera_coordenadas
 589+ 9C18 CD 74 9C     	call Dec_CTRL_DESPLZ
 590+ 9C1B 18 03        	jr 2F
 591+ 9C1D CD 74 9C     1 call Dec_CTRL_DESPLZ
 592+ 9C20 C9           2 ret
 593+ 9C21
 594+ 9C21              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 595+ 9C21
 596+ 9C21 3A 89 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 597+ 9C24 FE F7        	cp $f7
 598+ 9C26 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 599+ 9C28 30 2C        	jr nc,3F
 600+ 9C2A
 601+ 9C2A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 602+ 9C2A
 603+ 9C2A 06 00        	ld b,0
 604+ 9C2C 04           4 inc b
 605+ 9C2D 3C           	inc a
 606+ 9C2E FE F7        	cp $f7
 607+ 9C30 20 FA        	jr nz,4B
 608+ 9C32 3E FF        	ld a,$ff
 609+ 9C34 90           	sub b
 610+ 9C35 32 89 88     	ld (CTRL_DESPLZ),a
 611+ 9C38 18 1C        	jr 3F
 612+ 9C3A
 613+ 9C3A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 614+ 9C3A
 615+ 9C3A 21 82 88     1 ld hl,Columns
 616+ 9C3D 35           	dec (hl)
 617+ 9C3E AF           	xor a
 618+ 9C3F 32 89 88     	ld (CTRL_DESPLZ),a
 619+ 9C42 3A 95 88     	ld a,(Cuad_objeto)
 620+ 9C45 E6 01        	and 1
 621+ 9C47 28 0A        	jr z,2F
 622+ 9C49 2A 83 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 623+ 9C4C 2B           	dec hl
 624+ 9C4D 22 83 88     	ld (Posicion_actual),hl
 625+ 9C50 CD EE 9C     	call Genera_coordenadas
 626+ 9C53
 627+ 9C53              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 628+ 9C53
 629+ 9C53 CD 05 8D     2 call Inicia_puntero_objeto_izq
 630+ 9C56 C9           3 ret
 631+ 9C57
 632+ 9C57              ; ---------- ---------- ---------- ---------- ---------- ----------
 633+ 9C57              ;
 634+ 9C57              ;	19/10/22
 635+ 9C57              ;
 636+ 9C57              ;	(cp 29) para un Amadeus de 3 Columns.
 637+ 9C57              ;	(cp 30)   ""  ""    ""     2 Columns.
 638+ 9C57
 639+ 9C57 3A 87 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 640+ 9C5A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 641+ 9C5C C9           	ret
 642+ 9C5D
 643+ 9C5D              ; ---------- ---------- ---------- ---------- ---------- ----------
 644+ 9C5D              ;
 645+ 9C5D              ;	19/10/22
 646+ 9C5D              ;
 647+ 9C5D              ;	(cp 2) para un Amadeus de 3 Columns.
 648+ 9C5D              ;	(cp 1)   ""  ""    ""     2 Columns.
 649+ 9C5D
 650+ 9C5D 3A 87 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 651+ 9C60 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 652+ 9C62 C9           	ret
 653+ 9C63
 654+ 9C63              ; ---------- ---------- ---------- ---------- ---------- ----------
 655+ 9C63              ;
 656+ 9C63              ;	24/7/22
 657+ 9C63              ;
 658+ 9C63              ;	Inc_CTRL_DESPLZ
 659+ 9C63              ;
 660+ 9C63              ;
 661+ 9C63              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 662+ 9C63
 663+ 9C63 21 89 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 664+ 9C66 3A 97 88     	ld a,(Vel_right)
 665+ 9C69 A7           	and a
 666+ 9C6A 28 06        	jr z,1F
 667+ 9C6C 47           	ld b,a
 668+ 9C6D 34           3 inc (hl)
 669+ 9C6E 10 FD        	djnz 3B
 670+ 9C70 18 01        	jr 2F
 671+ 9C72 34           1 inc (hl)
 672+ 9C73 C9           2 ret
 673+ 9C74
 674+ 9C74              ; ---------- ---------- ---------- ---------- ---------- ----------
 675+ 9C74              ;
 676+ 9C74              ;	5/2/23
 677+ 9C74              ;
 678+ 9C74              ;	Dec_CTRL_DESPLZ
 679+ 9C74              ;
 680+ 9C74              ;
 681+ 9C74              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 682+ 9C74
 683+ 9C74 21 89 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 684+ 9C77 3A 96 88     	ld a,(Vel_left)
 685+ 9C7A A7           	and a
 686+ 9C7B 28 06        	jr z,1F
 687+ 9C7D 47           	ld b,a
 688+ 9C7E 35           3 dec (hl)
 689+ 9C7F 10 FD        	djnz 3B
 690+ 9C81 18 01        	jr 2F
 691+ 9C83 35           1 dec (hl)
 692+ 9C84 C9           2 ret
 693+ 9C85
 694+ 9C85              ; ---------- ---------- ---------- ---------- ---------- ----------
 695+ 9C85
 696+ 9C85 2A 83 88     Reaparece_derecha ld hl,(Posicion_actual)
 697+ 9C88 01 1F 00     	ld bc,31
 698+ 9C8B A7           	and a
 699+ 9C8C ED 4A        	adc hl,bc
 700+ 9C8E 22 83 88     	ld (Posicion_actual),hl
 701+ 9C91 21 B1 88     	ld hl,Ctrl_0														; $xxx1
 702+ 9C94 CB C6        	set 0,(hl)
 703+ 9C96 C9           	ret
 704+ 9C97
 705+ 9C97              ; ---------- ---------- ---------- ---------- ---------- ----------
 706+ 9C97
 707+ 9C97 2A 83 88     Reaparece_izquierda ld hl,(Posicion_actual)
 708+ 9C9A 01 1F 00     	ld bc,31
 709+ 9C9D A7           	and a
 710+ 9C9E ED 42        	sbc hl,bc
 711+ 9CA0 22 83 88     	ld (Posicion_actual),hl 											; $xx1x
 712+ 9CA3 21 B1 88     	ld hl,Ctrl_0
 713+ 9CA6 CB CE        	set 1,(hl)
 714+ 9CA8 C9           	ret
 715+ 9CA9
 716+ 9CA9              ; ---------- ---------- ---------- ---------- ---------- ----------
 717+ 9CA9
 718+ 9CA9 24           Reaparece_abajo inc h
 719+ 9CAA 01 E0 17     	ld bc,$17e0
 720+ 9CAD A7           	and a
 721+ 9CAE ED 4A        	adc hl,bc
 722+ 9CB0 22 83 88     	ld (Posicion_actual),hl
 723+ 9CB3 21 B1 88     	ld hl,Ctrl_0
 724+ 9CB6 CB D6        	set 2,(hl)
 725+ 9CB8 C9           	ret
 726+ 9CB9
 727+ 9CB9              ; ---------- ---------- ---------- ---------- ---------- ----------
 728+ 9CB9
 729+ 9CB9 01 E0 17     Reaparece_arriba ld bc,$17e0
 730+ 9CBC A7           	and a
 731+ 9CBD ED 42        	sbc hl,bc
 732+ 9CBF 22 83 88     	ld (Posicion_actual),hl
 733+ 9CC2 21 B1 88     	ld hl,Ctrl_0
 734+ 9CC5 CB DE        	set 3,(hl)
 735+ 9CC7 C9           	ret
 736+ 9CC8
 737+ 9CC8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 738+ 9CC8              ;
 739+ 9CC8              ;	15/07/23
 740+ 9CC8
 741+ 9CC8              Reinicio
 742+ 9CC8
 743+ 9CC8              ; Vamos a reiniciar los punteros y variables de movimiento.
 744+ 9CC8
 745+ 9CC8 AF           	xor a
 746+ 9CC9 21 BC 88     	ld hl,Puntero_indice_mov_bucle
 747+ 9CCC CD EA 9C     	call Limpia_contenido_hl
 748+ 9CCF
 749+ 9CCF 21 83 88     	ld hl,Posicion_actual
 750+ 9CD2 CD EA 9C     	call Limpia_contenido_hl
 751+ 9CD5
 752+ 9CD5 CD 26 A0     	call Inicializa_Puntero_indice_mov
 753+ 9CD8 CD AA 9F     	call Inicia_Puntero_mov
 754+ 9CDB
 755+ 9CDB 21 BE 88     	ld hl,Incrementa_puntero
 756+ 9CDE 06 05        	ld b,5
 757+ 9CE0 77           1 ld (hl),a
 758+ 9CE1 23           	inc hl
 759+ 9CE2 10 FC        	djnz 1B
 760+ 9CE4
 761+ 9CE4 21 B6 88     	ld hl,Ctrl_2
 762+ 9CE7 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 763+ 9CE9
 764+ 9CE9 C9           	ret
 765+ 9CEA
 766+ 9CEA 77           Limpia_contenido_hl	ld (hl),a
 767+ 9CEB 23           	inc hl
 768+ 9CEC 77           	ld (hl),a
 769+ 9CED C9           	ret
 770+ 9CEE
 771+ 9CEE
# file closed: Direcciones.asm
1886  9CEE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CEE              ; ------------------------------------------------------------------------
   2+ 9CEE              ;
   3+ 9CEE              ;	02/04/23
   4+ 9CEE              ;
   5+ 9CEE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CEE              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CEE              ;
   8+ 9CEE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CEE              ;
  10+ 9CEE              ;	Modifica: A,BC y DE.
  11+ 9CEE
  12+ 9CEE C5           Genera_coordenadas push bc
  13+ 9CEF E5           	push hl
  14+ 9CF0 D5           	push de
  15+ 9CF1
  16+ 9CF1 2A 83 88     	ld hl,(Posicion_actual)
  17+ 9CF4
  18+ 9CF4 7D           	ld a,l
  19+ 9CF5 E6 1F        	and $1f
  20+ 9CF7 32 87 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CFA
  22+ 9CFA CD 5A 99     	call calcula_tercio
  23+ 9CFD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CFE
  25+ 9CFE 1E 00        	ld e,0
  26+ 9D00 7D           	ld a,l
  27+ 9D01 E6 E0        	and $e0
  28+ 9D03 28 01        	jr z,1F
  29+ 9D05 04           	inc b
  30+ 9D06
  31+ 9D06 04           1 inc b
  32+ 9D07 05           	dec b
  33+ 9D08 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D0A              ;														; _ , salimos.
  35+ 9D0A 1C           3 inc e
  36+ 9D0B D6 20        	sub 32
  37+ 9D0D 20 FB        	jr nz,3B
  38+ 9D0F 10 F5        	djnz 1B
  39+ 9D11
  40+ 9D11 7B           2 ld a,e
  41+ 9D12 32 88 88     	ld (Coordenada_y),a
  42+ 9D15
  43+ 9D15 D1           	pop de
  44+ 9D16 E1           	pop hl
  45+ 9D17 C1           	pop bc
  46+ 9D18
  47+ 9D18 C9           	ret
  48+ 9D19
  49+ 9D19              ; ------------------------------------------------------------------------
  50+ 9D19              ;	28/05/23
  51+ 9D19              ;
  52+ 9D19              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D19              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D19              ;
  55+ 9D19              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D19              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D19              ;
  58+ 9D19              ;		DE="$120d"
  59+ 9D19              ;
  60+ 9D19              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D19              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D19              ;
  63+ 9D19              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D19
  65+ 9D19              ;	Modifica: A,BC y DE.
  66+ 9D19
  67+ 9D19
  68+ 9D19              Genera_coordenadas_disparo
  69+ 9D19
  70+ 9D19              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D19
  72+ 9D19 7D           	ld a,l
  73+ 9D1A E6 1F        	and $1f
  74+ 9D1C 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D1D CD 5A 99     	call calcula_tercio
  76+ 9D20 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D21 1E 00        	ld e,0
  78+ 9D23 7D           	ld a,l
  79+ 9D24 E6 E0        	and $e0
  80+ 9D26 28 01        	jr z,1F
  81+ 9D28 04           	inc b
  82+ 9D29 1C           1 inc e
  83+ 9D2A D6 20        	sub 32
  84+ 9D2C 20 FB        	jr nz,1B
  85+ 9D2E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D30 C9           	ret
  87+ 9D31
# file closed: Genera_coordenadas.asm
1887  9D31              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D31              ; Relojes y temporizaciones.
   2+ 9D31
   3+ 9D31              ; ------------------------------------------------------
   4+ 9D31              ;
   5+ 9D31              ;	16/7/23
   6+ 9D31              ;
   7+ 9D31              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D31              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D31              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D31              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D31              ;
  12+ 9D31              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D31              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D31
  15+ 9D31              ; Disparo_entidad db 1
  16+ 9D31              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D31              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D31
  19+ 9D31              Habilita_disparos
  20+ 9D31
  21+ 9D31 7E           	ld a,(hl)
  22+ 9D32 A7           	and a
  23+ 9D33 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D34
  25+ 9D34 EB           	ex de,hl
  26+ 9D35
  27+ 9D35 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D36 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D37
  30+ 9D37              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D37
  32+ 9D37 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D38 7E           	ld a,(hl)
  34+ 9D39 23           	inc hl
  35+ 9D3A 77           	ld (hl),a
  36+ 9D3B
  37+ 9D3B EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D3C 3E 01        	ld a,1
  39+ 9D3E 77           	ld (hl),a
  40+ 9D3F C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1888  9D40              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D40
   2+ 9D40
   3+ 9D40              ;   07/07/23
   4+ 9D40              ;
   5+ 9D40              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D40              ;
   7+ 9D40              ;   Codificación:
   8+ 9D40              ;
   9+ 9D40              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D40              ;
  11+ 9D40              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D40              ;
  13+ 9D40              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D40              ;
  15+ 9D40              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D40              ;
  17+ 9D40              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D40              ;                               ..... %01000010 Vel_up 4
  19+ 9D40              ;                                               Vel_down 2
  20+ 9D40              ;                               ..... $42
  21+ 9D40              ;
  22+ 9D40              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D40              ;
  24+ 9D40              ;                               ..... %01000010 Vel_left 4
  25+ 9D40              ;                                               Vel_right 2
  26+ 9D40              ;                               ..... $42
  27+ 9D40              ;
  28+ 9D40              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D40              ;
  30+ 9D40              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D40              ;
  32+ 9D40              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D40              ;
  34+ 9D40              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D40              ;                                     $53
  36+ 9D40              ;
  37+ 9D40              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D40              ;
  39+ 9D40              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D40              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D40              ;
  42+ 9D40              ;                       Arriba ..... $81
  43+ 9D40              ;                       Arriba - izquierda ..... $a1
  44+ 9D40              ;                       Arriba - derecha ..... $91
  45+ 9D40              ;
  46+ 9D40              ;                       Abajo ..... $41
  47+ 9D40              ;                       Abajo - izquierda ..... $61
  48+ 9D40              ;                       Abajo - derecha ..... $51
  49+ 9D40              ;
  50+ 9D40              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D40              ;
  52+ 9D40              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D40              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D40              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D40              ;
  56+ 9D40              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D40              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D40              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D40              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D40              ;
  61+ 9D40              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D40              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D40              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D40              ;
  65+ 9D40              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D40              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D40              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D40              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D40
  70+ 9D40              ; ----- ----- ----- ----- -----
  71+ 9D40
  72+ 9D40 6C 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D42 74 9D            defw F_1
  74+ 9D44 7E 9D            defw F_2
  75+ 9D46 88 9D            defw Codo_abajo_derecha
  76+ 9D48 BC 9D            defw Derecha_y_subiendo
  77+ 9D4A C6 9D            defw Derecha_y_subiendo_1
  78+ 9D4C D0 9D            defw F_3
  79+ 9D4E DA 9D            defw F_4
  80+ 9D50 E4 9D            defw Derecha_y_bajando
  81+ 9D52 EE 9D            defw Derecha_y_bajando_1
  82+ 9D54 F8 9D            defw Derecha_y_bajando_2
  83+ 9D56 02 9E            defw Codo_derecha_abajo
  84+ 9D58 32 9E            defw Codo_abajo_izq.
  85+ 9D5A 66 9E            defw Izquierda_y_subiendo
  86+ 9D5C 70 9E            defw Izquierda_y_subiendo_1
  87+ 9D5E 7A 9E            defw F_5
  88+ 9D60 84 9E            defw F_6
  89+ 9D62 8E 9E            defw Izquierda_y_bajando
  90+ 9D64 98 9E            defw Izquierda_y_bajando_1
  91+ 9D66 A2 9E            defw Izquierda_y_bajando_2
  92+ 9D68 AC 9E            defw Codo_izquierda_abajo
  93+ 9D6A 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D6C
  95+ 9D6C 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D70 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D74
  98+ 9D74 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D78 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D7C 08 00
 100+ 9D7E 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D82 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D86 0F FE
 102+ 9D88
 103+ 9D88 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D8C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D90 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D94 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D98 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D9C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DA0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DA4 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DA8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DAC 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DB0 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DB4 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DB8 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DBC
 117+ 9DBC 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DC0 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DC4 06 00
 119+ 9DC6
 120+ 9DC6 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DCA 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DCE 02 00
 122+ 9DD0
 123+ 9DD0 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DD4 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DD8 04 00
 125+ 9DDA 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DDE 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DE2 08 00
 127+ 9DE4
 128+ 9DE4 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DE8 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DEC 02 00
 130+ 9DEE
 131+ 9DEE 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DF2 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DF6 06 00
 133+ 9DF8
 134+ 9DF8 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DFC 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E00 06 00
 136+ 9E02
 137+ 9E02              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E02
 139+ 9E02 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E06 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E0A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E0E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E12 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E16 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E1A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E1E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E22 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E26 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E2A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E2E 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E32
 152+ 9E32 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E36 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E3A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E3E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E42 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E46 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E4A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E4E 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E52 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E56 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E5A 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E5E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E62 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E66
 166+ 9E66 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E6A 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E6E 06 00
 168+ 9E70
 169+ 9E70 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E74 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E78 02 00
 171+ 9E7A
 172+ 9E7A 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E7E 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E82 04 00
 174+ 9E84 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E88 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E8C 08 00
 176+ 9E8E
 177+ 9E8E 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E92 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E96 02 00
 179+ 9E98
 180+ 9E98 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E9C 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EA0 06 00
 182+ 9EA2
 183+ 9EA2 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EA6 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EAA 06 00
 185+ 9EAC
 186+ 9EAC 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EB0 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EB4 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EB8 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EBC 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EC0 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EC4 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EC8 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9ECC 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9ED0 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9ED4 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9ED8 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EDC
 199+ 9EDC              ; ----- ----- ----- ----- -----
 200+ 9EDC              ;
 201+ 9EDC              ;   28/12/23
 202+ 9EDC
 203+ 9EDC              Movimiento
 204+ 9EDC
 205+ 9EDC              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EDC
 207+ 9EDC 3A B6 88         ld a,(Ctrl_2)
 208+ 9EDF CB 57            bit 2,a
 209+ 9EE1 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9EE3
 211+ 9EE3 2A BA 88         ld hl,(Puntero_mov)
 212+ 9EE6 7E               ld a,(hl)
 213+ 9EE7
 214+ 9EE7              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9EE7
 216+ 9EE7              Inicia_desplazamiento.
 217+ 9EE7
 218+ 9EE7              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9EE7
 220+ 9EE7 CD E7 9F         call Ajusta_velocidad_desplazamiento
 221+ 9EEA
 222+ 9EEA              ; Iniciamos (Repetimos_mov).
 223+ 9EEA
 224+ 9EEA 7E               ld a,(hl)
 225+ 9EEB E6 0F            and $0f
 226+ 9EED 32 C0 88         ld (Repetimos_desplazamiento),a
 227+ 9EF0 32 C1 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9EF3
 229+ 9EF3              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9EF3
 231+ 9EF3 23               inc hl
 232+ 9EF4 7E               ld a,(hl)
 233+ 9EF5 32 C3 88         ld (Cola_de_desplazamiento),a
 234+ 9EF8 2B               dec hl
 235+ 9EF9
 236+ 9EF9 21 B6 88         ld hl,Ctrl_2
 237+ 9EFC CB D6            set 2,(hl)
 238+ 9EFE
 239+ 9EFE              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9EFE              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9EFE
 242+ 9EFE              Desplazamiento_iniciado
 243+ 9EFE
 244+ 9EFE CD B5 9F         call Aplica_desplazamiento
 245+ 9F01
 246+ 9F01              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9F01
 248+ 9F01 3A E5 88         ld a,(Ctrl_3)
 249+ 9F04 CB 57            bit 2,a
 250+ 9F06 C0               ret nz
 251+ 9F07
 252+ 9F07 3A B6 88         ld a,(Ctrl_2)
 253+ 9F0A CB 67            bit 4,a
 254+ 9F0C C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9F0D
 256+ 9F0D 21 C0 88     3 ld hl,Repetimos_desplazamiento
 257+ 9F10 35               dec (hl)
 258+ 9F11 C0               ret nz
 259+ 9F12
 260+ 9F12              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9F12              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9F12              ; Analiza (Cola_de_desplazamiento).
 263+ 9F12
 264+ 9F12 3A C3 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9F15 A7               and a
 266+ 9F16 CC 10 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9F19 28 30            jr z,Reinicia_el_movimiento
 268+ 9F1B
 269+ 9F1B FE FF            cp $ff
 270+ 9F1D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9F1F
 272+ 9F1F FE FE            cp $fe
 273+ 9F21 CC 8E 9F         call z,Fijamos_bucle
 274+ 9F24 28 25            jr z,Reinicia_el_movimiento
 275+ 9F26
 276+ 9F26 FE FD            cp $fd
 277+ 9F28 20 11            jr nz,1F
 278+ 9F2A
 279+ 9F2A              ; ---
 280+ 9F2A              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9F2A
 282+ 9F2A 3A B6 88         ld a,(Ctrl_2)
 283+ 9F2D CB 5F            bit 3,a
 284+ 9F2F 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9F31
 286+ 9F31              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9F31
 288+ 9F31 21 B6 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9F34 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9F36
 291+ 9F36 CD 9F 9F         call Inicia_Repetimos_movimiento
 292+ 9F39 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9F3B              ; ---
 294+ 9F3B
 295+ 9F3B FE 01        1 cp 1
 296+ 9F3D CA 78 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9F40
 298+ 9F40 3D               dec a
 299+ 9F41 32 C3 88         ld (Cola_de_desplazamiento),a
 300+ 9F44
 301+ 9F44 3A C1 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9F47 32 C0 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9F4A              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9F4A C9               ret
 305+ 9F4B
 306+ 9F4B              Reinicia_el_movimiento
 307+ 9F4B
 308+ 9F4B 3A B6 88         ld a,(Ctrl_2)
 309+ 9F4E CB 5F            bit 3,a
 310+ 9F50 28 1B            jr z,2F
 311+ 9F52
 312+ 9F52              ; (Cola_de_desplazamiento)="254".
 313+ 9F52
 314+ 9F52 21 C2 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F55 35               dec (hl)
 316+ 9F56 20 15            jr nz,2F
 317+ 9F58
 318+ 9F58              ; Fin de las repeticiones del último movimiento.
 319+ 9F58
 320+ 9F58 21 B6 88         ld hl,Ctrl_2
 321+ 9F5B CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F5D
 323+ 9F5D 2A BA 88         ld hl,(Puntero_mov)
 324+ 9F60 23               inc hl
 325+ 9F61 23               inc hl
 326+ 9F62 23               inc hl
 327+ 9F63 22 BA 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F66              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F66 7E               ld a,(hl)
 330+ 9F67 32 C3 88         ld (Cola_de_desplazamiento),a
 331+ 9F6A
 332+ 9F6A C3 12 9F         jp Cola
 333+ 9F6D
 334+ 9F6D CD AA 9F     2 call Inicia_Puntero_mov
 335+ 9F70
 336+ 9F70 21 B6 88         ld hl,Ctrl_2
 337+ 9F73 CB 96            res 2,(hl)
 338+ 9F75
 339+ 9F75 C3 DC 9E         jp Movimiento
 340+ 9F78
 341+ 9F78              Siguiente_desplazamiento
 342+ 9F78
 343+ 9F78              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9F78              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9F78
 346+ 9F78 21 B6 88         ld hl,Ctrl_2
 347+ 9F7B CB 96            res 2,(hl)
 348+ 9F7D
 349+ 9F7D 2A BA 88         ld hl,(Puntero_mov)
 350+ 9F80 23               inc hl
 351+ 9F81 23               inc hl
 352+ 9F82 22 BA 88         ld (Puntero_mov),hl
 353+ 9F85
 354+ 9F85 7E               ld a,(hl)
 355+ 9F86 A7               and a
 356+ 9F87 CC 10 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9F8A CA 4B 9F         jp z,Reinicia_el_movimiento
 358+ 9F8D
 359+ 9F8D C9               ret
 360+ 9F8E
 361+ 9F8E              ; Subrutinas -----------------------------------------
 362+ 9F8E              ; ---------- --------- --------- ---------- ----------
 363+ 9F8E              ;
 364+ 9F8E              ;   24/07/23
 365+ 9F8E              ;
 366+ 9F8E              ;   Fijamos_bucle
 367+ 9F8E              ;
 368+ 9F8E              ;
 369+ 9F8E
 370+ 9F8E              Fijamos_bucle
 371+ 9F8E
 372+ 9F8E 3A BE 88         ld a,(Incrementa_puntero)
 373+ 9F91 3C               inc a
 374+ 9F92 32 BF 88         ld (Incrementa_puntero_backup),a
 375+ 9F95
 376+ 9F95 CD 10 A0         call Incrementa_Puntero_indice_mov
 377+ 9F98 2A B8 88         ld hl,(Puntero_indice_mov)
 378+ 9F9B 22 BC 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9F9E C9               ret
 380+ 9F9F
 381+ 9F9F              ; ---------- --------- --------- ---------- ----------
 382+ 9F9F              ;
 383+ 9F9F              ;   07/7/23
 384+ 9F9F              ;
 385+ 9F9F              ;   Inicia_Repetimos_movimiento
 386+ 9F9F              ;
 387+ 9F9F              ;
 388+ 9F9F
 389+ 9F9F              Inicia_Repetimos_movimiento
 390+ 9F9F
 391+ 9F9F              ; Iniciamos (Repetimos_movimiento).
 392+ 9F9F
 393+ 9F9F DD 2A BA 88      ld ix,(Puntero_mov)
 394+ 9FA3 DD 7E 02         ld a,(ix+2)
 395+ 9FA6 32 C2 88         ld (Repetimos_movimiento),a
 396+ 9FA9
 397+ 9FA9 C9               ret
 398+ 9FAA
 399+ 9FAA              ; ---------- --------- --------- ---------- ----------
 400+ 9FAA              ;
 401+ 9FAA              ;   26/6/23
 402+ 9FAA              ;
 403+ 9FAA              ;   Inicia_Puntero_mov
 404+ 9FAA              ;
 405+ 9FAA              ;
 406+ 9FAA
 407+ 9FAA 2A B8 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9FAD 5E               ld e,(hl)
 409+ 9FAE 23               inc hl
 410+ 9FAF 56               ld d,(hl)
 411+ 9FB0 EB               ex de,hl
 412+ 9FB1 22 BA 88         ld (Puntero_mov),hl
 413+ 9FB4 C9               ret
 414+ 9FB5
 415+ 9FB5              ; ---------- --------- --------- ---------- ----------
 416+ 9FB5              ;
 417+ 9FB5              ;   27/06/23
 418+ 9FB5              ;
 419+ 9FB5              ;   Aplica_movimiento.
 420+ 9FB5
 421+ 9FB5              Aplica_desplazamiento
 422+ 9FB5
 423+ 9FB5              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9FB5
 425+ 9FB5 2A BA 88         ld hl, (Puntero_mov)
 426+ 9FB8
 427+ 9FB8 7E               ld a,(hl)
 428+ 9FB9 E6 F0            and $f0
 429+ 9FBB C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9FBC
 431+ 9FBC CB 7E            bit 7,(hl)
 432+ 9FBE 28 03            jr z,1F
 433+ 9FC0 CD D5 99         call Mov_up
 434+ 9FC3 2A BA 88     1 ld hl, (Puntero_mov)
 435+ 9FC6 CB 76            bit 6,(hl)
 436+ 9FC8 28 09            jr z,2F
 437+ 9FCA CD A0 99         call Mov_down
 438+ 9FCD
 439+ 9FCD              ; Se ha aplicado reinicio ???
 440+ 9FCD              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9FCD
 442+ 9FCD 3A E5 88         ld a,(Ctrl_3)
 443+ 9FD0 CB 57            bit 2,a
 444+ 9FD2 C0               ret nz
 445+ 9FD3
 446+ 9FD3 2A BA 88     2 ld hl, (Puntero_mov)
 447+ 9FD6 CB 6E            bit 5,(hl)
 448+ 9FD8 28 03            jr z,3F
 449+ 9FDA CD 3B 9B         call Mov_left
 450+ 9FDD 2A BA 88     3 ld hl, (Puntero_mov)
 451+ 9FE0 CB 66            bit 4,(hl)
 452+ 9FE2 C8               ret z
 453+ 9FE3 CD 18 9A         call Mov_right
 454+ 9FE6 C9               ret
 455+ 9FE7
 456+ 9FE7              ; ---------- --------- --------- ---------- ----------
 457+ 9FE7              ;
 458+ 9FE7              ;   26/06/23
 459+ 9FE7              ;
 460+ 9FE7              ;   Ajusta_velocidad_desplazamiento.
 461+ 9FE7
 462+ 9FE7              Ajusta_velocidad_desplazamiento
 463+ 9FE7
 464+ 9FE7              ; 1er byte de la cadena de movimiento.
 465+ 9FE7              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9FE7
 467+ 9FE7 CD 05 A0         call Extrae_nibble_alto
 468+ 9FEA
 469+ 9FEA 32 98 88         ld (Vel_up),a
 470+ 9FED 79               ld a,c
 471+ 9FEE E6 0F            and $0f
 472+ 9FF0 32 99 88         ld (Vel_down),a
 473+ 9FF3
 474+ 9FF3              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9FF3              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9FF3
 477+ 9FF3 23               inc hl
 478+ 9FF4 CD 05 A0         call Extrae_nibble_alto
 479+ 9FF7
 480+ 9FF7 32 96 88         ld (Vel_left),a
 481+ 9FFA 79               ld a,c
 482+ 9FFB E6 0F            and $0f
 483+ 9FFD 32 97 88         ld (Vel_right),a
 484+ A000
 485+ A000              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ A000
 487+ A000 23               inc hl
 488+ A001 22 BA 88         ld (Puntero_mov),hl
 489+ A004 C9               ret
 490+ A005
 491+ A005 06 04        Extrae_nibble_alto ld b,4
 492+ A007 7E               ld a,(hl)
 493+ A008 4F               ld c,a
 494+ A009 E6 F0            and $f0
 495+ A00B CB 3F        1 srl a
 496+ A00D 10 FC            djnz 1B
 497+ A00F C9               ret
 498+ A010
 499+ A010              ; ---------- --------- --------- ---------- ----------
 500+ A010              ;
 501+ A010              ;   5/7/23
 502+ A010              ;
 503+ A010              ;   Incrementa_Puntero_indice_mov
 504+ A010
 505+ A010              Incrementa_Puntero_indice_mov
 506+ A010
 507+ A010 21 BE 88         ld hl,Incrementa_puntero
 508+ A013 34               inc (hl)
 509+ A014
 510+ A014 2A B8 88         ld hl,(Puntero_indice_mov)
 511+ A017 01 02 00         ld bc,2
 512+ A01A A7               and a
 513+ A01B 09               add hl,bc
 514+ A01C 22 B8 88         ld (Puntero_indice_mov),hl
 515+ A01F
 516+ A01F 7E               ld a,(hl)
 517+ A020 A7               and a
 518+ A021
 519+ A021              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ A021
 521+ A021              ;    jr z,$
 522+ A021
 523+ A021              ;! Reinicia el Patrón de movimiento.
 524+ A021
 525+ A021 CC 26 A0         call z,Inicializa_Puntero_indice_mov
 526+ A024
 527+ A024 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ A025
 529+ A025 C9               ret
 530+ A026
 531+ A026
 532+ A026              ; ---------- --------- --------- ---------- ----------
 533+ A026              ;
 534+ A026              ;   24/07/23
 535+ A026              ;
 536+ A026              ;   Inicializa_Puntero_indice_mov
 537+ A026
 538+ A026              Inicializa_Puntero_indice_mov
 539+ A026
 540+ A026              ; Existe etiqueta de bucle principal???
 541+ A026
 542+ A026 2A BC 88         ld hl,(Puntero_indice_mov_bucle)
 543+ A029 24               inc h
 544+ A02A 25               dec h
 545+ A02B 28 05            jr z,2F
 546+ A02D
 547+ A02D 22 B8 88         ld (Puntero_indice_mov),hl
 548+ A030 18 14            jr 3F
 549+ A032
 550+ A032              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ A032
 552+ A032 3A BE 88     2 ld a,(Incrementa_puntero)
 553+ A035 47               ld b,a
 554+ A036
 555+ A036 2A B8 88         ld hl,(Puntero_indice_mov)
 556+ A039 2B           1 dec hl
 557+ A03A 2B               dec hl
 558+ A03B 10 FC            djnz 1B
 559+ A03D 22 B8 88         ld (Puntero_indice_mov),hl
 560+ A040
 561+ A040 AF               xor a
 562+ A041 32 BE 88         ld (Incrementa_puntero),a
 563+ A044 18 06            jr 4F
 564+ A046
 565+ A046 3A BF 88     3 ld a,(Incrementa_puntero_backup)
 566+ A049 32 BE 88         ld (Incrementa_puntero),a
 567+ A04C C9           4 ret
 568+ A04D
 569+ A04D
 570+ A04D
# file closed: Patrones_de_mov.asm
1889  A04D              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A04D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A04D              ;
   3+ A04D              ;	12/12/23
   4+ A04D              ;
   5+ A04D              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A04D
   7+ A04D              ;	ADC HL,SP	LD (addr),SP
   8+ A04D              ;	ADD HL,SP	LD SP,(addr)
   9+ A04D              ;	ADD IX,SP	LD SP,nn
  10+ A04D              ; 	ADD IY,SP	LD SP,HL
  11+ A04D              ;				LD SP,IX
  12+ A04D              ;	DEC SP		LD SP,IY
  13+ A04D
  14+ A04D              ;	EX (SP),HL
  15+ A04D              ;	EX (SP),IX
  16+ A04D              ;	EX (SP),IY
  17+ A04D
  18+ A04D              ;	INC SP
  19+ A04D
  20+ A04D                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 D7 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 A1 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 AD 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A C6 88         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A DF 88         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A B1 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A E3 88         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A DD 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A C6 88         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 DF 88         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A B1 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 E3 88         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B D7 88      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 DD 88     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B D7 88  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A DD 88         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 DD 88         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1890  718B
1891  718B              	SAVESNA "Pruebas.sna", START
1892  718B
1893  718B
1894  718B
1895  718B
# file closed: Banco_de_pruebas.asm
