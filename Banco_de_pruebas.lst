# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82ea
  60  82EA
  61  82EA F5           	push af
  62  82EB E5           	push hl
  63  82EC
  64  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82EC 21 34 8C     	ld hl,Ctrl_3
  66  82EF CB 46        	bit 0,(hl)
  67  82F1 28 FE        	jr z,$
  68  82F3              ;! -------------------
  69  82F3
  70  82F3              ; Disparos.
  71  82F3
  72  82F3 CD 89 A1     	call Pinta_disparos_Amadeus
  73  82F6 CD 1A 9F     	call Pinta_disparos_Entidades
  74  82F9
  75  82F9              ; Shield -----------------------
  76  82F9
  77  82F9              Temporizacion_shield
  78  82F9
  79  82F9 21 5E 8C     	ld hl,Shield
  80  82FC 7E           	ld a,(hl)
  81  82FD A7           	and a
  82  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  8300
  84  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  8301
  86  8301 23           	inc hl
  87  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  8303
  89  8303 20 17        	jr nz,Incrementa_FRAMES
  90  8305
  91  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  8305
  93  8305              Cambio_de_estado
  94  8305
  95  8305              ;	Indica cambio de estado.
  96  8305
  97  8305 23           	inc hl						;	Sitúa en (Shield_3).
  98  8306
  99  8306 CB 5E        	bit 3,(hl)
 100  8308 28 05        	jr z,2F
 101  830A
 102  830A CD 2A 91     	call Inicia_Shield
 103  830D
 104  830D 18 0D        	jr Incrementa_FRAMES
 105  830F
 106  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  8311
 108  8311              ;	Carga en (Shield_2) la siguiente temporización.
 109  8311
 110  8311 2A 5C 8C     	ld hl,(Puntero_datos_shield)
 111  8314 23           	inc hl
 112  8315 22 5C 8C     	ld (Puntero_datos_shield),hl
 113  8318 7E           	ld a,(hl)
 114  8319 32 5F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  831C
 116  831C              Incrementa_FRAMES
 117  831C
 118  831C 2A 78 5C     	ld hl,(FRAMES)
 119  831F 23           	inc hl
 120  8320 22 78 5C     	ld (FRAMES),hl
 121  8323
 122  8323 7C           	ld a,h
 123  8324 B5           	or l
 124  8325 20 04        	jr nz,1F
 125  8327
 126  8327 21 7A 5C     	ld hl,FRAMES_3
 127  832A 34           	inc (hl)
 128  832B
 129  832B D5           1 push de
 130  832C C5           	push bc
 131  832D
 132  832D CD 3A 91     	call Actualiza_pantalla
 133  8330
 134  8330 C1           	pop bc
 135  8331 D1           	pop de
 136  8332 E1           	pop hl
 137  8333 F1           	pop af
 138  8334
 139  8334 FB           	ei
 140  8335
 141  8335 C9           	ret
 142  8336
 143  8336              ; --------------------------------------------------------------------------------
 144  8336
 145  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 148  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D AE 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01 01 01 01  	db 1,1,1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BAC 01 01
  18+ 8BAE
  19+ 8BAE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAF 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB7 01 02
  22+ 8BB9 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BBD 01 02
  23+ 8BBF
# file closed: Niveles.asm
 149  8BBF
 150  8BBF              ; --------------------------------------------------------------------------------
 151  8BBF              ;
 152  8BBF              ; 12/05/24
 153  8BBF              ;
 154  8BBF              ; Parámetros DRAW.
 155  8BBF              ;
 156  8BBF
 157  8BBF              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BBF
 159  8BBF 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BC0              ;															- Patrón de movimiento.
 161  8BC0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BC1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BC2
 164  8BC2 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BC3              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BC3
 167  8BC3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BC3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BC3              ; Ejemplos.
 170  8BC3
 171  8BC3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BC3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BC3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BC3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BC3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BC3
 177  8BC3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BC4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BC4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BC4
 181  8BC4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BC6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BC6
 184  8BC6 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC8
 186  8BC8              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC8
 188  8BC8 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BCA              ;														; _palabras que componen el "movimiento_masticado".
 190  8BCA
 191  8BCA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BCA
 193  8BCA 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BCB              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BCB              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BCB              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BCB              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BCB
 199  8BCB 00           Ctrl_2 db 0
 200  8BCC              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BCC              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BCC              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BCC              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BCC              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BCC              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BCC              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BCC              ;
 208  8BCC              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BCC              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BCC              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BCC              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BCC              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BCC              ;														BIT 4, ???
 214  8BCC              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BCC
 216  8BCC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BCD              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BCD              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BCD              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BCD              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BCD              ;
 222  8BCD              ; 														DESCRIPCIÖN:
 223  8BCD              ;
 224  8BCD              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BCD              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BCD              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BCD              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BCD              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BCD              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BCD              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BCD              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BCD              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BCD              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BCD              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BCD              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BCD              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BCD              ;
 238  8BCD              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BCD              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BCD              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BCD
 242  8BCD              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BCD
 244  8BCD 00           Filas db 0												; Filas. [DRAW]
 245  8BCE 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BCF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BD1 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BD3
 249  8BD3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BD3
 251  8BD3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BD4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BD4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BD4
 255  8BD4              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BD4
 257  8BD4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BD4              ;
 259  8BD4              ;	COLORES: 0 ..... NEGRO
 260  8BD4              ;    		 1 ..... AZUL
 261  8BD4              ; 			 2 ..... ROJO
 262  8BD4              ;			 3 ..... MAGENTA
 263  8BD4              ; 			 4 ..... VERDE
 264  8BD4              ; 			 5 ..... CIAN
 265  8BD4              ;			 6 ..... AMARILLO
 266  8BD4              ; 			 7 ..... BLANCO
 267  8BD4
 268  8BD4 00 00        Indice_Sprite_der defw 0
 269  8BD6 00 00        Indice_Sprite_izq defw 0
 270  8BD8 00 00        Puntero_DESPLZ_der defw 0
 271  8BDA 00 00        Puntero_DESPLZ_izq defw 0
 272  8BDC
 273  8BDC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BDE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BDF 00           Columnas db 0
 276  8BE0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BE2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BE2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BE3
 280  8BE3              ; variables de control general.
 281  8BE3
 282  8BE3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BE4
 284  8BE4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BE4
 286  8BE4              Perfiles_de_velocidad
 287  8BE4
 288  8BE4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BE5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BE6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE8
 293  8BE8              ; Contadores de 16 bits.
 294  8BE8
 295  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BEC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BEE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BF0
 300  8BF0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BF0
 302  8BF0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BF2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BF4 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BF6              ;
 306  8BF6              ;
 307  8BF6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF7 00           Incrementa_puntero_backup db 0
 311  8BF8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BFA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BFB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BFC              ;
 317  8BFC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BFC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BFC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BFC              ;
 321  8BFC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BFC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BFC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BFC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BFC              ;
 326  8BFC              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BFC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BFC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BFC
 330  8BFC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BFD
 332  8BFD              ;														DESCRIPCIÓN:
 333  8BFD              ;
 334  8BFD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BFD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BFD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BFD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BFD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BFD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BFD
 341  8BFD              ;														BIT 3, Recarga de nueva oleada.
 342  8BFD              ;														BIT 4, Recarga de nueva oleada.
 343  8BFD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BFD              ;														BIT 6, **** Frame completo.
 345  8BFD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BFD
 347  8BFD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BFF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BFF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BFF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BFF
 352  8BFF              ; Gestión de ENTIDADES y CAJAS.
 353  8BFF
 354  8BFF 00 00        Puntero_store_caja defw 0
 355  8C01 00 00        Puntero_restore_caja defw 0
 356  8C03 00 00        Indice_restore_caja defw 0
 357  8C05 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8C06 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C07 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C08
 361  8C08 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C0A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C0C              ;														; _ puntero (Indice_entidades).
 364  8C0C
 365  8C0C              ;---------------------------------------------------------------------------------------------------------------
 366  8C0C              ;
 367  8C0C              ;	13/10/24
 368  8C0C              ;
 369  8C0C              ;	Álbumes.
 370  8C0C
 371  8C0C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C0E              ;														; _variable para almacenar lo posición del puntero_
 373  8C0E              ; 														; _de pila, SP.
 374  8C0E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C10              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C10
 377  8C10              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C10
 379  8C10 00 00        Album_de_pintado defw 0
 380  8C12 00 00        Album_de_borrado defw 0
 381  8C14 00 00        Album_de_pintado_Amadeus defw 0
 382  8C16 00 00        Album_de_borrado_Amadeus defw 0
 383  8C18
 384  8C18 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C1A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C1C
 387  8C1C 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C1E 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C20
 390  8C20
 391  8C20 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C22
 393  8C22 00           Num_de_bytes_album_de_disparos db 0
 394  8C23 00           Num_de_bytes_album_de_disparos_borrado db 0
 395  8C24
 396  8C24 07           Numero_de_disparos_de_entidades db 7
 397  8C25
 398  8C25 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 399  8C26 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 400  8C27
 401  8C27 00 00        Techo_Scanlines_album defw 0
 402  8C29 00 00        Techo_Scanlines_album_2 defw 0
 403  8C2B 00           Switch db 0
 404  8C2C 00 00        Techo defw 0
 405  8C2E 00 00        Scanlines_album_SP defw 0
 406  8C30 00 89        India_SP defw Tabla_de_pintado
 407  8C32 03 89        India_2_SP defw Tabla_de_pintado+3
 408  8C34
 409  8C34 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 410  8C35              ;
 411  8C35              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 412  8C35              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 413  8C35              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 414  8C35              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 415  8C35              ;																Habilita el borrado/pintado de sprites.
 416  8C35              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 417  8C35              ;																_ a la baja.
 418  8C35              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 419  8C35              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 420  8C35              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 421  8C35              ; 																_ el último frame de la explosión de nuestra nave.
 422  8C35              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 423  8C35              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 424  8C35
 425  8C35 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 426  8C36              ;
 427  8C36              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 428  8C36              ;
 429  8C36              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 430  8C36              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 431  8C36              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 432  8C36              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 433  8C36              ;
 434  8C36              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 435  8C36              ;															_ masticados ya generados.
 436  8C36              ;
 437  8C36              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 438  8C36              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 439  8C36              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 440  8C36              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 441  8C36
 442  8C36 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 443  8C37
 444  8C37
 445  8C37              ; Gestión de Disparos.
 446  8C37
 447  8C37 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 448  8C39 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 449  8C3B 00           Impacto2 db 0											; Byte de control de impactos.
 450  8C3C
 451  8C3C              ;
 452  8C3C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 453  8C3C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 454  8C3C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 455  8C3C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 456  8C3C
 457  8C3C
 458  8C3C
 459  8C3C
 460  8C3C
 461  8C3C
 462  8C3C
 463  8C3C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 464  8C3E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 465  8C3E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 466  8C3E
 467  8C3E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 468  8C40              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 469  8C40 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 470  8C43              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 471  8C43 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 472  8C46              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 473  8C46
 474  8C46              ;---------------------------------------------------------------------------------------------------------------
 475  8C46
 476  8C46              ; Relojes y temporizaciones.
 477  8C46
 478  8C46 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 479  8C47 05           Clock_explosion_Amadeus db 5
 480  8C48 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 481  8C49
 482  8C49 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 483  8C4B F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 484  8C4D 00           Numero_rnd_disparos db 0
 485  8C4E
 486  8C4E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 487  8C50 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 488  8C51              ;														; Repite la oleada de entidades.
 489  8C51 A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 490  8C52 A0           CLOCK_disparos_de_entidades db $a0
 491  8C53
 492  8C53              ;---------------------------------------------------------------------------------------------------------------
 493  8C53
 494  8C53              ; Gestión de NIVELES.
 495  8C53
 496  8C53 00           Nivel db 0												; Nivel actual del juego.
 497  8C54 00 00        Puntero_indice_NIVELES defw 0
 498  8C56 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 499  8C58              ; 														; _ que definen el NIVEL.
 500  8C58
 501  8C58              ; ---------------------------------------------------------------------------------------------------------------
 502  8C58
 503  8C58              ; Temporizaciones Shield.
 504  8C58
 505  8C58 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 506  8C5C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 507  8C5E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 508  8C5F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 509  8C60 00           Shield_3 db 0
 510  8C61
 511  8C61 06           Lives db 6
 512  8C62
 513  8C62              ; 	INICIO  *************************************************************************************************************************************************************************
 514  8C62              ;
 515  8C62              ;	5/1/24
 516  8C62
 517  8C62              START
 518  8C62
 519  8C62 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 520  8C65 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 521  8C67 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 522  8C69 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 523  8C6B F3           	DI
 524  8C6C
 525  8C6C              ; Limpiamos pantalla.
 526  8C6C
 527  8C6C 3E 07        	ld a,%00000111
 528  8C6E CD C7 94     	call Cls
 529  8C71 CD 1F 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 530  8C74
 531  8C74              ; INICIALIZACIÓN.
 532  8C74
 533  8C74 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 534  8C76 CD 6C 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 535  8C79
 536  8C79 CD B4 8E     	call Extrae_numero_aleatorio_y_avanza
 537  8C7C
 538  8C7C 6F           	ld l,a
 539  8C7D 26 00        	ld h,0
 540  8C7F 22 4E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 541  8C82
 542  8C82              ;	Inicializa 1er Nivel.
 543  8C82
 544  8C82 21 9B 8B     	ld hl,Indice_de_niveles
 545  8C85 22 54 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 546  8C88 CD 9C 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 547  8C8B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 548  8C8B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 549  8C8B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 550  8C8B
 551  8C8B              ;	Inicia los álbumes de líneas.
 552  8C8B
 553  8C8B CD 6D 90     	call Inicia_albumes_de_lineas
 554  8C8E              ;
 555  8C8E CD 7D 90     	call Inicia_albumes_de_lineas_Amadeus
 556  8C91 CD 8A 90     	call Inicia_albumes_de_disparos
 557  8C94
 558  8C94 CD E1 92     4 call Inicia_Entidades
 559  8C97 CD 44 93     	call Inicia_Amadeus
 560  8C9A
 561  8C9A              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 562  8C9A              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 563  8C9A              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 564  8C9A
 565  8C9A 11 74 89     	ld de,Amadeus_BOX
 566  8C9D CD 97 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 567  8CA0 CD 87 93     	call Limpiamos_bandeja_DRAW
 568  8CA3
 569  8CA3              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 570  8CA3
 571  8CA3 06 3C        	ld b,60
 572  8CA5 CD 6D 9D     2 call Amadeus_a_izquierda
 573  8CA8 10 FB        	djnz 2B
 574  8CAA
 575  8CAA CD 4B 90     	call Genera_datos_de_impresion_Amadeus
 576  8CAD
 577  8CAD              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 578  8CAD
 579  8CAD CD A6 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 580  8CB0
 581  8CB0 CD 2A 91     	call Inicia_Shield
 582  8CB3
 583  8CB3 2A 2E 8C     6 ld hl,(Scanlines_album_SP)
 584  8CB6 22 27 8C     	ld (Techo_Scanlines_album),hl
 585  8CB9
 586  8CB9 2A 12 8C     	ld hl,(Album_de_borrado)
 587  8CBC 22 2E 8C     	ld (Scanlines_album_SP),hl
 588  8CBF
 589  8CBF 21 00 89     	ld hl,Tabla_de_pintado
 590  8CC2 22 30 8C     	ld (India_SP),hl
 591  8CC5
 592  8CC5 21 34 8C     	ld hl,Ctrl_3
 593  8CC8 CB C6        	set 0,(hl) 											; Indica Frame completo.
 594  8CCA CB D6        	set 2,(hl)
 595  8CCC CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 596  8CCE
 597  8CCE FB           	ei 													; Ha de apuntar a $5c3a.
 598  8CCF
 599  8CCF 76           	halt
 600  8CD0
 601  8CD0              ; ------------------------------------
 602  8CD0
 603  8CD0              Main
 604  8CD0              ;
 605  8CD0              ; 25/10/24
 606  8CD0
 607  8CD0              ; Gestión de disparos.
 608  8CD0
 609  8CD0 CD 8F 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 610  8CD3 CD 60 9F     	call Motor_de_disparos_entidades
 611  8CD6 CD 35 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 612  8CD9
 613  8CD9              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 614  8CD9              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 615  8CD9              ; Este hecho lo indica el bit2 de (Impacto2).
 616  8CD9
 617  8CD9 CD D2 A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 618  8CDC
 619  8CDC              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 620  8CDC
 621  8CDC 21 52 8C     	ld hl,CLOCK_disparos_de_entidades
 622  8CDF 35           	dec (hl)
 623  8CE0 CC D8 8D     	call z,Autoriza_disparo_de_entidades
 624  8CE3
 625  8CE3 2A 4E 8C     	ld hl,(Clock_next_entity)
 626  8CE6 ED 4B 78 5C  	ld bc,(FRAMES)
 627  8CEA A7           	and a
 628  8CEB ED 42        	sbc hl,bc
 629  8CED 20 16        	jr nz,1F
 630  8CEF
 631  8CEF              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 632  8CEF              ; _ (Clock_next_entity) para la siguiente entidad.
 633  8CEF
 634  8CEF 3A 06 8C     	ld a,(Numero_parcial_de_entidades)
 635  8CF2 47           	ld b,a
 636  8CF3 3A 07 8C     	ld a,(Entidades_en_curso)
 637  8CF6 B8           	cp b
 638  8CF7 28 0C        	jr z,1F
 639  8CF9 30 0A        	jr nc,1F
 640  8CFB
 641  8CFB 3C           	inc a
 642  8CFC 32 07 8C     	ld (Entidades_en_curso),a
 643  8CFF
 644  8CFF              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 645  8CFF
 646  8CFF CD B4 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 647  8D02 CD D0 8E     	call Define_Clock_next_entity
 648  8D05
 649  8D05 3A 07 8C     1 ld a,(Entidades_en_curso)
 650  8D08 A7           	and a
 651  8D09 CA 83 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 652  8D0C 47           	ld b,a												; No hay entidades que gestionar.
 653  8D0D
 654  8D0D              ; ( Código que ejecutamos con cada entidad: ).
 655  8D0D
 656  8D0D              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 657  8D0D              ;
 658  8D0D              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 659  8D0D
 660  8D0D 21 00 89     	ld hl,Tabla_de_pintado
 661  8D10 22 30 8C     	ld (India_SP),hl
 662  8D13
 663  8D13 21 34 8C     	ld hl,Ctrl_3
 664  8D16 CB D6        	set 2,(hl)
 665  8D18 CD 64 8E     	call Change
 666  8D1B
 667  8D1B C5           2 push bc 												; Nº de entidades en curso.
 668  8D1C
 669  8D1C CD F7 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 670  8D1F ED 5B 2E 8C  	ld de,(Scanlines_album_SP)
 671  8D23
 672  8D23              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 673  8D23
 674  8D23              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 675  8D23              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 676  8D23
 677  8D23 3A 3B 8C     	ld a,(Impacto2)
 678  8D26 CB 5F        	bit 3,a
 679  8D28 C4 D1 A0     	call nz,Compara_con_coordenadas_de_disparo
 680  8D2B
 681  8D2B 3A C3 8B     	ld a,(Impacto)
 682  8D2E CB 4F        	bit 1,a
 683  8D30 C4 07 92     	call nz,Genera_explosion
 684  8D33 20 31        	jr nz,Gestiona_siguiente_entidad
 685  8D35
 686  8D35 3A C3 8B     	ld a,(Impacto)
 687  8D38 A7           	and a
 688  8D39 28 0C        	jr z,3F
 689  8D3B
 690  8D3B              ; IMPACTO en entidad por colisión con Amadeus.
 691  8D3B
 692  8D3B              ; 5/7/24
 693  8D3B              ; Nota importante:
 694  8D3B              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 695  8D3B              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 696  8D3B              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 697  8D3B
 698  8D3B 3A 78 89     	ld a,(Impacto_Amadeus)
 699  8D3E A7           	and a
 700  8D3F C4 07 92     	call nz,Genera_explosion
 701  8D42 20 22        	jr nz,Gestiona_siguiente_entidad
 702  8D44
 703  8D44              ; Falsa colisión !!!
 704  8D44
 705  8D44 32 C3 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 706  8D47
 707  8D47              ; -------------------------------------------
 708  8D47
 709  8D47 CD 14 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 710  8D4A CD 44 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 711  8D4D CD 04 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 712  8D50 CD 07 95     	call Genera_datos_de_impresion
 713  8D53 CD AA 93     	call Decrementa_Contador_de_mov_masticados
 714  8D56
 715  8D56              ; -------------------------------------------
 716  8D56
 717  8D56              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 718  8D56
 719  8D56 2A C4 8B     	ld hl,(Puntero_de_impresion)
 720  8D59 CD DB 94     	call Genera_coordenadas
 721  8D5C
 722  8D5C              ; TODO: Generamos disparo ???
 723  8D5C
 724  8D5C 3A 26 8C     	ld a,(Permiso_de_disparo_Entidades)
 725  8D5F A7           	and a
 726  8D60 C4 ED 8D     	call nz,Entidad_genera_disparo_si_procede
 727  8D63
 728  8D63 CD 50 A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 729  8D66
 730  8D66              Gestiona_siguiente_entidad
 731  8D66
 732  8D66 CD 7C 93      	call Store_Restore_cajas
 733  8D69 C1           	pop bc
 734  8D6A 10 AF        	djnz 2B
 735  8D6C
 736  8D6C              ; Hemos gestionado todas las entidades.
 737  8D6C              ; ----- ----- -----
 738  8D6C
 739  8D6C CD 28 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 740  8D6F CD 3F 8F     	call Ordena_tabla_de_impresion
 741  8D72 CD A6 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 742  8D75
 743  8D75 CD E5 8E     	call Borra_diferencia
 744  8D78
 745  8D78 3A 34 8C     	ld a,(Ctrl_3)
 746  8D7B CB 5F        	bit 3,a
 747  8D7D 20 04        	jr nz,Gestion_de_Amadeus
 748  8D7F
 749  8D7F EB           	ex de,hl
 750  8D80 71           	ld (hl),c
 751  8D81 2C           	inc l
 752  8D82 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 753  8D83
 754  8D83              ;! GESTIONA AMADEUS !!!!!!!!!!
 755  8D83
 756  8D83              Gestion_de_Amadeus
 757  8D83
 758  8D83 21 34 8C     	ld hl,Ctrl_3
 759  8D86 CB 76        	bit 6,(hl)
 760  8D88 28 13        	jr z,Amadeus_vivo
 761  8D8A
 762  8D8A              ; Amadeus ha sido destruido.
 763  8D8A              ; Decrementa (Temp_new_live).
 764  8D8A
 765  8D8A 21 48 8C     	ld hl,Temp_new_live
 766  8D8D 35           	dec (hl)
 767  8D8E 20 26        	jr nz,End_frame
 768  8D90
 769  8D90              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 770  8D90
 771  8D90 21 61 8C     	ld hl,Lives
 772  8D93 35           	dec (hl)
 773  8D94
 774  8D94              ;! Fin del juego
 775  8D94
 776  8D94 F3           	di
 777  8D95 28 FE        	jr z,$
 778  8D97 FB           	ei
 779  8D98
 780  8D98              ; Nueva nave.
 781  8D98
 782  8D98 CD 0A 8E     	call Reinicia_Amadeus
 783  8D9B 18 19        	jr End_frame
 784  8D9D
 785  8D9D              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 786  8D9D
 787  8D9D              Amadeus_vivo
 788  8D9D
 789  8D9D 3A 78 89     	ld a,(Impacto_Amadeus)
 790  8DA0 A7           	and a
 791  8DA1 C4 37 92     	call nz, Genera_explosion_Amadeus
 792  8DA4 20 10        	jr nz, End_frame
 793  8DA6
 794  8DA6 CD E4 91     	call Teclado
 795  8DA9 21 34 8C     	ld hl,Ctrl_3
 796  8DAC
 797  8DAC CB 6E        	bit 5,(hl)
 798  8DAE 28 06        	jr z,End_frame
 799  8DB0
 800  8DB0              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 801  8DB0
 802  8DB0 CD 7F 8E     	call Change_Amadeus
 803  8DB3 CD 4B 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 804  8DB6
 805  8DB6              End_frame
 806  8DB6
 807  8DB6              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 808  8DB6              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 809  8DB6
 810  8DB6 CD F4 9F     	call Genera_datos_de_impresion_disparos_Entidades
 811  8DB9 CD BB A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 812  8DBC CD 16 A1     	call Calcula_bytes_pintado_disparos
 813  8DBF CD 23 A1     	call Limpia_album_de_pintado_disparos_entidades
 814  8DC2
 815  8DC2              ; ------------ ------------- --------------
 816  8DC2
 817  8DC2 2A 12 8C     	ld hl,(Album_de_borrado)
 818  8DC5 22 2E 8C     	ld (Scanlines_album_SP),hl
 819  8DC8
 820  8DC8 21 34 8C     	ld hl,Ctrl_3
 821  8DCB CB C6        	set 0,(hl) 											; Indica Frame completo.
 822  8DCD CB 9E        	res 3,(hl)
 823  8DCF CB A6        	res 4,(hl)
 824  8DD1
 825  8DD1 AF           	xor a
 826  8DD2 D3 FE        	out ($fe),a
 827  8DD4
 828  8DD4 76           	halt
 829  8DD5
 830  8DD5              ; ----------------------------------------
 831  8DD5
 832  8DD5              ;	ld a,(Ctrl_1) 										; Existe Loop?
 833  8DD5              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 834  8DD5 CA D0 8C     	jp z,Main
 835  8DD8
 836  8DD8              ;------------------------------------------
 837  8DD8              ;
 838  8DD8              ;	2/10/24
 839  8DD8
 840  8DD8              Autoriza_disparo_de_entidades
 841  8DD8
 842  8DD8 3E 01        	ld a,1
 843  8DDA 32 26 8C     	ld (Permiso_de_disparo_Entidades),a
 844  8DDD
 845  8DDD 3A 51 8C     	ld a,(Repone_CLOCK_disparos)
 846  8DE0 FE 19        	cp 25
 847  8DE2 38 02        	jr c,1F
 848  8DE4
 849  8DE4 D6 05        	sub 5
 850  8DE6
 851  8DE6 32 51 8C     1 ld (Repone_CLOCK_disparos),a
 852  8DE9 32 52 8C     	ld (CLOCK_disparos_de_entidades),a
 853  8DEC
 854  8DEC C9           	ret
 855  8DED
 856  8DED              ;------------------------------------------
 857  8DED              ;
 858  8DED              ;	14/09/24
 859  8DED              ;
 860  8DED              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 861  8DED
 862  8DED              Entidad_genera_disparo_si_procede
 863  8DED
 864  8DED 2A 4B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 865  8DF0 CB 06        	rlc (hl)
 866  8DF2
 867  8DF2 DC 46 A0     	call c,Genera_disparo_de_entidad_maldosa
 868  8DF5
 869  8DF5 C9           	ret
 870  8DF6
 871  8DF6              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 872  8DF6              ;
 873  8DF6              ;	30/09/24
 874  8DF6
 875  8DF6              Actuaiza_sp_de_disparos_de_entidades
 876  8DF6
 877  8DF6 2A 4B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 878  8DF9 23           	inc hl
 879  8DFA 22 4B 8C     	ld (Puntero_num_aleatorios_disparos),hl
 880  8DFD
 881  8DFD 11 FD 88     	ld de,Numeros_aleatorios+7
 882  8E00 7B           	ld a,e
 883  8E01 95           	sub l
 884  8E02 C0           	ret nz
 885  8E03
 886  8E03 21 F6 88     1 ld hl,Numeros_aleatorios
 887  8E06 22 4B 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 888  8E09 C9           	ret
 889  8E0A
 890  8E0A              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 891  8E0A              ;
 892  8E0A              ;	24/07/24
 893  8E0A
 894  8E0A              Reinicia_Amadeus
 895  8E0A
 896  8E0A              ;	Reinicia posición y estado.
 897  8E0A
 898  8E0A 21 CF 50     	ld hl,$50cf
 899  8E0D 22 79 89     	ld (p.imp.amadeus),hl
 900  8E10 21 F0 E0     	ld hl,$e0f0
 901  8E13 22 7B 89     	ld (Pamm_Amadeus),hl
 902  8E16 21 3D 00     	ld hl,$003d
 903  8E19 22 7D 89     	ld (Comm_Amadeus),hl
 904  8E1C
 905  8E1C              ;	limpiamos el álbum de borrado.
 906  8E1C
 907  8E1C 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
 908  8E1F
 909  8E1F AF           	xor a
 910  8E20 77           	ld (hl),a
 911  8E21
 912  8E21 E5           	push hl
 913  8E22 D1           	pop de
 914  8E23 13           	inc de
 915  8E24
 916  8E24 01 23 00     	ld bc,35
 917  8E27 ED B0        	ldir
 918  8E29
 919  8E29 CD 4B 90     	call Genera_datos_de_impresion_Amadeus
 920  8E2C
 921  8E2C              ;	Reinicia temporizaciones.
 922  8E2C
 923  8E2C CD 2A 91     	call Inicia_Shield
 924  8E2F
 925  8E2F 3E 5A        	ld a,90
 926  8E31 32 5E 8C     	ld (Shield),a
 927  8E34
 928  8E34 3E 64        	ld a,100
 929  8E36 32 48 8C     	ld (Temp_new_live),a
 930  8E39
 931  8E39              ; 	Restauramos el FLAG: Amadeus vivo.
 932  8E39
 933  8E39 21 34 8C     	ld hl,Ctrl_3
 934  8E3C CB B6        	res 6,(hl)
 935  8E3E
 936  8E3E              ;	Fuerza la impresión de la nave en el siguiente frame.
 937  8E3E
 938  8E3E 21 34 8C      	ld hl,Ctrl_3
 939  8E41 CB EE        	set 5,(hl)
 940  8E43
 941  8E43 C9           	ret
 942  8E44
 943  8E44              ; --------------------------------------------------------------------------------------------------------------
 944  8E44              ;
 945  8E44              ;	12/05/24
 946  8E44
 947  8E44 3A CA 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 948  8E47 CB 27        	sla a
 949  8E49 32 CA 8B     	ld (Velocidad),a
 950  8E4C E6 10        	and $10
 951  8E4E C8           	ret z
 952  8E4F
 953  8E4F              ; Restaura (Velocidad) a razón del nº de vueltas.
 954  8E4F
 955  8E4F 3A C2 8B     	ld a,(Contador_de_vueltas)
 956  8E52 CB 2F        	sra a
 957  8E54 CB 2F        	sra a
 958  8E56 32 CA 8B     	ld (Velocidad),a
 959  8E59
 960  8E59 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 961  8E5C 23           	inc hl
 962  8E5D 23           	inc hl
 963  8E5E 23           	inc hl
 964  8E5F 23           	inc hl
 965  8E60 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 966  8E63
 967  8E63 C9           	ret
 968  8E64
 969  8E64              ; --------------------------------------------------------------------------------------------------------------
 970  8E64              ;
 971  8E64              ;	25/08/24
 972  8E64
 973  8E64              Change
 974  8E64
 975  8E64 3A 2B 8C     	ld a,(Switch)
 976  8E67 EE 01        	xor 1
 977  8E69 32 2B 8C     	ld (Switch),a
 978  8E6C 2A 10 8C     	ld hl,(Album_de_pintado)
 979  8E6F ED 5B 12 8C  	ld de,(Album_de_borrado)
 980  8E73 EB           	ex de,hl
 981  8E74 22 10 8C     	ld (Album_de_pintado),hl
 982  8E77 22 2E 8C     	ld (Scanlines_album_SP),hl
 983  8E7A ED 53 12 8C  	ld (Album_de_borrado),de
 984  8E7E C9           	ret
 985  8E7F
 986  8E7F              Change_Amadeus
 987  8E7F
 988  8E7F 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
 989  8E82 ED 5B 16 8C  	ld de,(Album_de_borrado_Amadeus)
 990  8E86 EB           	ex de,hl
 991  8E87 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
 992  8E8A ED 53 16 8C  	ld (Album_de_borrado_Amadeus),de
 993  8E8E C9           	ret
 994  8E8F
 995  8E8F              Change_Disparos
 996  8E8F
 997  8E8F              ; Álbumes de Amadeus.
 998  8E8F
 999  8E8F 2A 18 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1000  8E92 ED 5B 1A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1001  8E96 EB           	ex de,hl
1002  8E97 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1003  8E9A ED 53 1A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1004  8E9E CD 0B A1     	call Limpia_album_de_pintado_disparos_Amadeus
1005  8EA1
1006  8EA1              ; Álbumes de entidades.
1007  8EA1
1008  8EA1 2A 1C 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1009  8EA4 ED 5B 1E 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1010  8EA8 EB           	ex de,hl
1011  8EA9 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1012  8EAC ED 53 1E 8C  	ld (Album_de_borrado_disparos_Entidades),de
1013  8EB0 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1014  8EB3
1015  8EB3              ;	ld a,(Num_de_bytes_album_de_disparos)
1016  8EB3              ;	ld (Num_de_bytes_album_de_disparos_borrado),a
1017  8EB3
1018  8EB3 C9           	ret
1019  8EB4
1020  8EB4              ; ------------------------------------
1021  8EB4              ;
1022  8EB4              ; 1/05/24
1023  8EB4
1024  8EB4              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1025  8EB4              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1026  8EB4
1027  8EB4              ;	DESTRUYE: HL,DE,A
1028  8EB4              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1029  8EB4
1030  8EB4              ;	Variables implicadas: (RND_SP).
1031  8EB4
1032  8EB4              Extrae_numero_aleatorio_y_avanza
1033  8EB4
1034  8EB4 21 00 89     	ld hl,Tabla_de_pintado
1035  8EB7 EB           	ex de,hl
1036  8EB8 2A 49 8C     	ld hl,(RND_SP)
1037  8EBB EB           	ex de,hl
1038  8EBC A7           	and a
1039  8EBD ED 52        	sbc hl,de
1040  8EBF
1041  8EBF 2A 49 8C     	ld hl,(RND_SP)
1042  8EC2 20 06        	jr nz,1F
1043  8EC4
1044  8EC4              ; Sitúa HL al principio de la tabla de nº aleatorios.
1045  8EC4
1046  8EC4 21 F6 88     	ld hl,Numeros_aleatorios
1047  8EC7 22 49 8C     	ld (RND_SP),HL
1048  8ECA
1049  8ECA              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1050  8ECA
1051  8ECA 7E           1 ld a,(hl)
1052  8ECB 23           	inc hl
1053  8ECC 22 49 8C     	ld (RND_SP),hl
1054  8ECF C9           	ret
1055  8ED0
1056  8ED0              ; ------------------------------------
1057  8ED0              ;
1058  8ED0              ; 1/05/24
1059  8ED0
1060  8ED0              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1061  8ED0              ; (1 a 4 segundos).
1062  8ED0              ; Actualizamos (Clock_next_entity) con A.
1063  8ED0
1064  8ED0              ;	DESTRUYE: A y B.
1065  8ED0              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1066  8ED0              ;			 Actualiza (Clock_next_entity) con A.
1067  8ED0
1068  8ED0              ;	Variables implicadas: (Clock_next_entity).
1069  8ED0
1070  8ED0              ; Notas:
1071  8ED0
1072  8ED0              ; 	$32 1 seg.
1073  8ED0              ; 	$64 2 seg.
1074  8ED0              ; 	$96 3 seg.
1075  8ED0              ; 	$c8 4 seg.
1076  8ED0              ; 	$fa 5 seg.
1077  8ED0
1078  8ED0              ; $ffff 1310,7 seg, 22 minutos.
1079  8ED0
1080  8ED0              ;	$0100  5 seg. aproximadamente.
1081  8ED0              ;	$0200 10 seg. aproximadamente.
1082  8ED0              ;	$0300 15 seg. aproximadamente.
1083  8ED0              ;	$0400 20 seg. aproximadamente.
1084  8ED0              ;	$0500 25 seg. aproximadamente.
1085  8ED0              ;	$0600 30 seg. aproximadamente.
1086  8ED0
1087  8ED0              Define_Clock_next_entity
1088  8ED0
1089  8ED0 FE 34        	cp $34
1090  8ED2 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1091  8ED4
1092  8ED4              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1093  8ED4
1094  8ED4 4F           3 ld c,a
1095  8ED5 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1096  8ED7 2A 78 5C     	ld hl,(FRAMES)
1097  8EDA A7           	and a
1098  8EDB ED 4A        	adc hl,bc
1099  8EDD 22 4E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1100  8EE0 C9           	ret
1101  8EE1
1102  8EE1 3E 34        1 ld a,$34
1103  8EE3 18 EF        	jr 3B
1104  8EE5
1105  8EE5              ; ------------------------------------
1106  8EE5              ;
1107  8EE5              ; 18/03/24
1108  8EE5
1109  8EE5              Borra_diferencia
1110  8EE5
1111  8EE5 ED 4B 2E 8C  	ld bc,(Scanlines_album_SP)
1112  8EE9
1113  8EE9 3A 2B 8C     	ld a,(Switch)
1114  8EEC A7           	and a
1115  8EED 28 08        	jr z,2F
1116  8EEF
1117  8EEF 2A 29 8C     	ld hl,(Techo_Scanlines_album_2)
1118  8EF2 11 29 8C     	ld de,Techo_Scanlines_album_2
1119  8EF5 18 06        	jr 3F
1120  8EF7
1121  8EF7 2A 27 8C     2 ld hl,(Techo_Scanlines_album)
1122  8EFA 11 27 8C     	ld de,Techo_Scanlines_album
1123  8EFD
1124  8EFD              ; Diferencia.
1125  8EFD
1126  8EFD ED 42        3 sbc hl,bc
1127  8EFF
1128  8EFF C8           	ret z
1129  8F00 D8           	ret c
1130  8F01
1131  8F01              ; Nuevo techo, (más bajo que el anterior).
1132  8F01              ; Fijamos nuevo techo y borramos bytes sobrantes.
1133  8F01
1134  8F01 EB           	ex de,hl
1135  8F02
1136  8F02 71           	ld (hl),c
1137  8F03 2C           	inc l
1138  8F04 70           	ld (hl),b
1139  8F05
1140  8F05 AF           	xor a
1141  8F06 43           	ld b,e
1142  8F07
1143  8F07 2A 2E 8C     	ld hl,(Scanlines_album_SP)
1144  8F0A
1145  8F0A 77           1 ld (hl),a
1146  8F0B 23           	inc hl
1147  8F0C 10 FC        	djnz 1B
1148  8F0E
1149  8F0E              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1150  8F0E
1151  8F0E 21 34 8C     	ld hl,Ctrl_3
1152  8F11 CB DE        	set 3,(hl)
1153  8F13
1154  8F13 C9           	ret
1155  8F14
1156  8F14              ; --------------------------------------------------------------------------------------------------------------
1157  8F14              ;
1158  8F14              ;	26/3/24
1159  8F14
1160  8F14              Recauda_informacion_de_entidad_en_curso
1161  8F14
1162  8F14              ; Almacena la Coordenada Y de la entidad en curso.
1163  8F14
1164  8F14              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1165  8F14
1166  8F14 3A C1 8B     	ld a,(Coordenada_y)
1167  8F17 2A 30 8C     	ld hl,(India_SP)
1168  8F1A 77           	ld (hl),a
1169  8F1B 2C           	inc l
1170  8F1C
1171  8F1C              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1172  8F1C
1173  8F1C ED 5B 2E 8C  	ld de,(Scanlines_album_SP)
1174  8F20
1175  8F20 73           	ld (hl),e
1176  8F21 2C           	inc l
1177  8F22 72           	ld (hl),d
1178  8F23 2C           	inc l
1179  8F24
1180  8F24 22 30 8C     	ld (India_SP),hl
1181  8F27
1182  8F27 C9           	ret
1183  8F28
1184  8F28              ; --------------------------------------------------------------------------------------------------------------
1185  8F28              ;
1186  8F28              ;	27/03/24
1187  8F28              ;
1188  8F28
1189  8F28              Inicializa_India_y_limpia_Tabla_de_impresion
1190  8F28
1191  8F28 2A 30 8C     	ld hl,(India_SP)
1192  8F2B 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1193  8F2E
1194  8F2E 79           	ld a,c
1195  8F2F 95           	sub l
1196  8F30 28 06        	jr z,2F
1197  8F32 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1198  8F33              ;														; _ y pasamos a inicializar (India_SP).
1199  8F33 AF           	xor a
1200  8F34
1201  8F34 77           1 ld (hl),a
1202  8F35 2C           	inc l
1203  8F36 10 FC        	djnz 1B												; Limpia Tabla.
1204  8F38
1205  8F38 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1206  8F3B 22 30 8C     	ld (India_SP),hl
1207  8F3E
1208  8F3E C9           	ret
1209  8F3F
1210  8F3F              ; --------------------------------------------------------------------------------------------------------------
1211  8F3F              ;
1212  8F3F              ;	31/3/24
1213  8F3F
1214  8F3F              Ordena_tabla_de_impresion
1215  8F3F
1216  8F3F              ; 5794 T/states.
1217  8F3F              ; 6278 T/states.
1218  8F3F              ; 5310 T/states.
1219  8F3F
1220  8F3F              ; Inicializamos punteros (India_SP) e (India_2_SP).
1221  8F3F              ; Inicializamos contador de comparaciones, [C].
1222  8F3F              ; Cargamos los registros A y B para efectuar comparación.
1223  8F3F
1224  8F3F FD 2E 00     	ld iyl,0
1225  8F42
1226  8F42 3A 07 8C     	ld a,(Entidades_en_curso)
1227  8F45 FE 04        	cp 4 	;	4
1228  8F47 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1229  8F48
1230  8F48 3D           	dec a
1231  8F49 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1232  8F4A 51           	ld d,c 										; Copia de respaldo.
1233  8F4B
1234  8F4B 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1235  8F4C
1236  8F4C 21 03 89     	ld hl,Tabla_de_pintado+3
1237  8F4F 46           	ld b,(hl)
1238  8F50 22 32 8C     	ld (India_2_SP),hl
1239  8F53
1240  8F53 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1241  8F54 DC 7C 8F     	call c, Avanza_India_2_SP
1242  8F57 CC 7C 8F     	call z, Avanza_India_2_SP
1243  8F5A
1244  8F5A FD 2D        	dec iyl
1245  8F5C 28 18        	jr z,2F
1246  8F5E
1247  8F5E
1248  8F5E              ; --------------------------------------------------------------------------------------------------------------
1249  8F5E              ;
1250  8F5E              ;	7/4/24
1251  8F5E
1252  8F5E              Trueque
1253  8F5E
1254  8F5E              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1255  8F5E              ;  			A contiene en nº de fila de (India_SP).
1256  8F5E              ;			HL contiene (India_2_SP).
1257  8F5E
1258  8F5E D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1259  8F5F E5           	push hl										; Preservo (India_2_SP).
1260  8F60
1261  8F60 ED 5B 30 8C  	ld de,(India_SP)
1262  8F64 EB           	ex de,hl
1263  8F65 70           	ld (hl),b
1264  8F66 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1265  8F67
1266  8F67 CD A8 8F     	call Intercambia_1_byte
1267  8F6A CD A8 8F     	call Intercambia_1_byte
1268  8F6D
1269  8F6D
1270  8F6D              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1271  8F6D              ; Recuperamos (India_2_SP) en HL.
1272  8F6D
1273  8F6D 2A 30 8C     	ld hl,(India_SP)
1274  8F70 7E           	ld a,(hl)
1275  8F71
1276  8F71 E1           	pop hl
1277  8F72 D1           	pop de
1278  8F73
1279  8F73              ; --------------------------------------------------------------------------------------------------------------
1280  8F73
1281  8F73 CD 7C 8F     	call Avanza_India_2_SP
1282  8F76
1283  8F76 14           2 inc d
1284  8F77 15           	dec d
1285  8F78 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1286  8F79 18 D8        	jr 1B
1287  8F7B
1288  8F7B C9           	ret
1289  8F7C
1290  8F7C              ; ----- ----- ----- ----- -----
1291  8F7C
1292  8F7C              Avanza_India_2_SP
1293  8F7C
1294  8F7C 0D           	dec c
1295  8F7D 28 0A        	jr z,Avanza_punteros_indios
1296  8F7F
1297  8F7F FD 2C        	inc iyl
1298  8F81
1299  8F81 2C           	inc l
1300  8F82 2C           	inc l
1301  8F83 2C           	inc l
1302  8F84
1303  8F84 46           	ld b,(hl)
1304  8F85 22 32 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1305  8F88
1306  8F88 C9           	ret
1307  8F89
1308  8F89              ; ----- ----- ----- ----- -----
1309  8F89
1310  8F89              Avanza_punteros_indios
1311  8F89
1312  8F89 15           	dec d
1313  8F8A 28 15        	jr z,Prepara_salida
1314  8F8C
1315  8F8C 4A           	ld c,d
1316  8F8D
1317  8F8D 2A 30 8C     	ld hl,(India_SP)
1318  8F90 2C           	inc l
1319  8F91 2C           	inc l
1320  8F92 2C           	inc l
1321  8F93 7E           	ld a,(hl)
1322  8F94 22 30 8C     	ld (India_SP),hl
1323  8F97
1324  8F97 2C           	inc l
1325  8F98 2C           	inc l
1326  8F99 2C           	inc l
1327  8F9A 46           	ld b,(hl)
1328  8F9B 22 32 8C     	ld (India_2_SP),hl
1329  8F9E
1330  8F9E FD 2C        	inc iyl
1331  8FA0
1332  8FA0 C9           	ret
1333  8FA1
1334  8FA1              Prepara_salida
1335  8FA1
1336  8FA1 21 00 89     	ld hl,Tabla_de_pintado
1337  8FA4 22 30 8C     	ld (India_SP),hl
1338  8FA7 C9           	ret
1339  8FA8
1340  8FA8
1341  8FA8 2C           Intercambia_1_byte inc l
1342  8FA9 1C           	inc e
1343  8FAA 46           	ld b,(hl)
1344  8FAB 1A           	ld a,(de)
1345  8FAC EB           	ex de,hl
1346  8FAD 70           	ld (hl),b
1347  8FAE 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1348  8FAF C9           	ret
1349  8FB0
1350  8FB0              ; -----------------------------------------------------------------------------------
1351  8FB0              ;
1352  8FB0              ;	20/01/24
1353  8FB0              ;
1354  8FB0              ;
1355  8FB0
1356  8FB0              Construye_movimientos_masticados_entidad
1357  8FB0
1358  8FB0 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1359  8FB3 E5           	push hl
1360  8FB4 CD F7 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1361  8FB7              ;															; _ el (Contador_de_mov_masticados).
1362  8FB7 CD C2 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1363  8FBA              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1364  8FBA CD F3 99     	call Recompone_posicion_inicio
1365  8FBD
1366  8FBD CD 23 97     1 call Draw
1367  8FC0 CD DC 8F     	call Guarda_movimiento_masticado
1368  8FC3
1369  8FC3 CD A0 9D     	call Movimiento
1370  8FC6
1371  8FC6 3A 34 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1372  8FC9 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1373  8FCB 28 F0        	jr z,1B
1374  8FCD
1375  8FCD              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1376  8FCD              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1377  8FCD
1378  8FCD E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1379  8FCE 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1380  8FD1
1381  8FD1              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1382  8FD1
1383  8FD1 CD 04 9F     	call Situa_en_contador_general_de_mov_masticados
1384  8FD4
1385  8FD4              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1386  8FD4              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1387  8FD4
1388  8FD4 ED 4B C8 8B  	ld bc,(Contador_de_mov_masticados)
1389  8FD8
1390  8FD8 71           	ld (hl),c
1391  8FD9 23           	inc hl
1392  8FDA 70           	ld (hl),b
1393  8FDB
1394  8FDB C9           	ret
1395  8FDC
1396  8FDC              ; -----------------------------------------------------------------------------------
1397  8FDC              ;
1398  8FDC              ;	28/12/23
1399  8FDC              ;
1400  8FDC              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1401  8FDC              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1402  8FDC
1403  8FDC              Guarda_movimiento_masticado
1404  8FDC
1405  8FDC ED 73 0C 8C  	ld (Stack),sp
1406  8FE0 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1407  8FE4
1408  8FE4 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1409  8FE6 FD E5            push iy 												; Pushea Puntero_objeto.
1410  8FE8
1411  8FE8 ED 7B 0C 8C      ld sp,(Stack)
1412  8FEC
1413  8FEC 2A C8 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1414  8FEF 23           	inc hl
1415  8FF0 22 C8 8B     	ld (Contador_de_mov_masticados),hl
1416  8FF3
1417  8FF3 CD F7 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1418  8FF6              ;															; _ el (Contador_de_mov_masticados).
1419  8FF6 C9               ret
1420  8FF7
1421  8FF7              ; --------------------------------------------------------------------------------------------------------------
1422  8FF7              ;
1423  8FF7              ;	12/1/24
1424  8FF7              ;
1425  8FF7              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1426  8FF7
1427  8FF7              Actualiza_Puntero_de_almacen_de_mov_masticados
1428  8FF7
1429  8FF7 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1430  8FFA 01 04 00     	ld bc,4
1431  8FFD A7           	and a
1432  8FFE ED 4A        	adc hl,bc
1433  9000 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1434  9003 C9           	ret
1435  9004
1436  9004              ; --------------------------------------------------------------------------------------------------------------
1437  9004              ;
1438  9004              ;	24/03/24
1439  9004              ;
1440  9004              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1441  9004              ;
1442  9004              ;	IX contiene el puntero de impresión.
1443  9004              ;	DE contiene (Puntero_objeto).
1444  9004
1445  9004
1446  9004              Cargamos_registros_con_mov_masticado
1447  9004
1448  9004 ED 73 0C 8C  	ld (Stack),sp
1449  9008 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1450  900C
1451  900C D1           	pop de 															; DE contiene Puntero_objeto
1452  900D DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1453  900F
1454  900F ED 73 C6 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1455  9013 ED 7B 0C 8C  	ld sp,(Stack)
1456  9017
1457  9017 7B           	ld a,e
1458  9018 82           	add d															; Comprueba si ya no hay datos en el almacén.
1459  9019
1460  9019 CC B2 93     	call z,Reinicia_entidad_maliciosa
1461  901C
1462  901C C9           	ret
1463  901D
1464  901D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1465  901D              ;
1466  901D              ;	22/7/24
1467  901D
1468  901D              Cargamos_registros_con_explosion
1469  901D
1470  901D
1471  901D 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1472  9020 CD BC 90     	call Extrae_address
1473  9023
1474  9023 5D           	ld e,l
1475  9024 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1476  9025
1477  9025 DD 2A C4 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1478  9029
1479  9029 C9           	ret
1480  902A
1481  902A
1482  902A              Cargamos_registros_con_explosion_Amadeus
1483  902A
1484  902A 2A 7B 89     	ld hl,(Pamm_Amadeus)
1485  902D CD BC 90     	call Extrae_address
1486  9030
1487  9030 5D           	ld e,l
1488  9031 54           	ld d,h
1489  9032
1490  9032 DD 2A 79 89  	ld ix,(p.imp.amadeus)
1491  9036
1492  9036 C9           	ret
1493  9037
1494  9037              ; --------------------------------------------------------------------------------------------------------------
1495  9037              ;
1496  9037              ;	17/06/24
1497  9037              ;
1498  9037              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1499  9037              ;
1500  9037              ;	IX contiene el puntero de impresión.
1501  9037              ;	DE contiene (Puntero_objeto).
1502  9037
1503  9037
1504  9037              Cargamos_registros_con_mov_masticado_Amadeus
1505  9037
1506  9037 ED 73 0C 8C  	ld (Stack),sp
1507  903B ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1508  903F D1           	pop de 															; DE contiene Puntero_objeto
1509  9040 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1510  9042 DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1511  9046 ED 7B 0C 8C  	ld sp,(Stack)
1512  904A C9           	ret
1513  904B
1514  904B              ; ---------------------------------------------------------------------------------------------------------------------
1515  904B              ;
1516  904B              ;	18/6/24
1517  904B              ;
1518  904B              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1519  904B
1520  904B              Genera_datos_de_impresion_Amadeus
1521  904B
1522  904B 3A 78 89     	ld a,(Impacto_Amadeus)
1523  904E A7           	and a
1524  904F 20 03        	jr nz,1F
1525  9051
1526  9051              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1527  9051              ; _apuntando a la correspondiente explosión.
1528  9051
1529  9051 CD 37 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1530  9054
1531  9054 DD 7D        1 ld a,ixl
1532  9056 E6 1F        	and $1f
1533  9058 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1534  905B
1535  905B 2A 2E 8C     	ld hl,(Scanlines_album_SP)
1536  905E E5           	push hl
1537  905F
1538  905F 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1539  9062 22 2E 8C     	ld (Scanlines_album_SP),hl
1540  9065
1541  9065 CD 07 95     	call Genera_datos_de_impresion
1542  9068
1543  9068 E1           	pop hl
1544  9069 22 2E 8C     	ld (Scanlines_album_SP),hl
1545  906C
1546  906C C9           	ret
1547  906D
1548  906D              ; ---------------------------------------------------------------------------------------------------------------------
1549  906D              ;
1550  906D              ;	13/03/24
1551  906D              ;
1552  906D              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1553  906D
1554  906D              Inicia_albumes_de_lineas
1555  906D
1556  906D 21 00 80     	ld hl,Scanlines_album
1557  9070 22 10 8C     	ld (Album_de_pintado),hl
1558  9073 22 2E 8C     	ld (Scanlines_album_SP),hl
1559  9076
1560  9076 21 1A 81     	ld hl,Scanlines_album_2
1561  9079 22 12 8C     	ld (Album_de_borrado),hl
1562  907C
1563  907C C9           	ret
1564  907D
1565  907D              Inicia_albumes_de_lineas_Amadeus
1566  907D
1567  907D 21 34 82     	ld hl,Amadeus_scanlines_album
1568  9080 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1569  9083 21 58 82     	ld hl,Amadeus_scanlines_album_2
1570  9086 22 16 8C     	ld (Album_de_borrado_Amadeus),hl
1571  9089
1572  9089 C9           	ret
1573  908A
1574  908A              Inicia_albumes_de_disparos
1575  908A
1576  908A 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1577  908D 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1578  9090 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1579  9093 22 1A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1580  9096
1581  9096 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1582  9099 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1583  909C 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1584  909F
1585  909F 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1586  90A2 22 1E 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1587  90A5
1588  90A5 C9           	ret
1589  90A6
1590  90A6              ; ---------------------------------------------------------------------------------------------------------------------
1591  90A6              ;
1592  90A6              ; 8/1/23
1593  90A6              ;
1594  90A6              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1595  90A6              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1596  90A6              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1597  90A6
1598  90A6              ; Destruye HL y DE !!!!!
1599  90A6
1600  90A6              Inicia_punteros_de_cajas
1601  90A6
1602  90A6 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1603  90A9 CD BC 90         call Extrae_address
1604  90AC 22 FF 8B         ld (Puntero_store_caja),hl
1605  90AF 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1606  90B2 22 03 8C     	ld (Indice_restore_caja),hl
1607  90B5 CD BC 90     	call Extrae_address
1608  90B8 22 01 8C     	ld (Puntero_restore_caja),hl
1609  90BB C9               ret
1610  90BC
1611  90BC              ; *************************************************************************************************************************************************************
1612  90BC
1613  90BC              ;
1614  90BC              ; 20/10/22
1615  90BC              ;
1616  90BC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1617  90BC              ;
1618  90BC              ; Destruye el puntero y DE !!!!!
1619  90BC
1620  90BC 5E           Extrae_address ld e,(hl)
1621  90BD 23           	inc hl
1622  90BE 56           	ld d,(hl)
1623  90BF 2B           	dec hl
1624  90C0 EB           	ex de,hl
1625  90C1 C9           	ret
1626  90C2
1627  90C2              ; *************************************************************************************************************************************************************
1628  90C2              ;
1629  90C2              ;	20/1/24
1630  90C2              ;
1631  90C2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1632  90C2              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1633  90C2              ;
1634  90C2              ;   Destruye HL y BC !!!!!,
1635  90C2              ;
1636  90C2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1637  90C2              ;					"0" ..... Izquierda.
1638  90C2
1639  90C2              Inicia_Puntero_objeto
1640  90C2
1641  90C2 3A DE 8B     	ld a,(Cuad_objeto)
1642  90C5 E6 01        	and 1
1643  90C7 F5           	push af
1644  90C8 CC E4 90     	call z,Inicia_puntero_objeto_izq
1645  90CB F1           	pop af
1646  90CC C8           	ret z
1647  90CD CD D1 90     	call Inicia_puntero_objeto_der
1648  90D0 C9           	ret
1649  90D1
1650  90D1              ; Arrancamos desde la parte izquierda de la pantalla.
1651  90D1              ; Iniciamos (Indice_Sprite_der).
1652  90D1
1653  90D1 2A D4 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1654  90D4 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
1655  90D7 CD BC 90     	call Extrae_address
1656  90DA 22 D1 8B     	ld (Puntero_objeto),hl
1657  90DD
1658  90DD 2A D6 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1659  90E0 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1660  90E3 C9           	ret
1661  90E4
1662  90E4              ; Arrancamos desde la parte derecha de la pantalla.
1663  90E4              ; Iniciamos (Indice_Sprite_izq).
1664  90E4
1665  90E4 2A D6 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1666  90E7 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1667  90EA CD BC 90     	call Extrae_address
1668  90ED 22 D1 8B     	ld (Puntero_objeto),hl
1669  90F0
1670  90F0 2A D4 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1671  90F3 22 D8 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1672  90F6 C9           	ret
1673  90F7
1674  90F7              ; **************************************************************************************************
1675  90F7              ;
1676  90F7              ;	06/07/24
1677  90F7              ;
1678  90F7              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1679  90F7
1680  90F7              Restore_entidad
1681  90F7
1682  90F7 2A FF 8B     	ld hl,(Puntero_store_caja)
1683  90FA 7E           	ld a,(hl)
1684  90FB A7           	and a
1685  90FC CC 0A 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1686  90FF 28 F6        	jr z,Restore_entidad
1687  9101
1688  9101 11 BF 8B     	ld de,Bandeja_DRAW
1689  9104 01 0C 00     	ld bc,12
1690  9107 ED B0        	ldir
1691  9109 C9           	ret
1692  910A
1693  910A              ; **************************************************************************************************
1694  910A              ;
1695  910A              ;	08/05/23
1696  910A              ;
1697  910A              ;	Incrementamos los dos punteros de entidades. (+1).
1698  910A
1699  910A              Incrementa_punteros_de_cajas
1700  910A
1701  910A 2A 01 8C     	ld hl,(Puntero_restore_caja)
1702  910D 22 FF 8B     	ld (Puntero_store_caja),hl
1703  9110 2A 03 8C     	ld hl,(Indice_restore_caja)
1704  9113 23           	inc hl
1705  9114 23           	inc hl
1706  9115 22 03 8C     	ld (Indice_restore_caja),hl
1707  9118 CD BC 90         call Extrae_address
1708  911B 22 01 8C         ld (Puntero_restore_caja),hl
1709  911E C9               ret
1710  911F
1711  911F              ; -----------------------------------------------------------
1712  911F
1713  911F              ; Teclado.
1714  911F
1715  911F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1716  9121 DB FE        	in a,($fe)
1717  9123 E6 01        	and $01
1718  9125 28 02        	jr z,1f
1719  9127 18 F6        	jr Pulsa_ENTER
1720  9129 C9           1 ret
1721  912A
1722  912A              ; **************************************************************************************************
1723  912A              ;
1724  912A              ; Temporización.
1725  912A
1726  912A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1727  912A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1728  912A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1729  912A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1730  912A
1731  912A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1732  912A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1733  912A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1734  912A
1735  912A              ; A partir de $4f61 no hace falta DELAY.
1736  912A
1737  912A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1738  912A
1739  912A              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1740  912A              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1741  912A              ;	LD A,B
1742  912A              ;	AND A
1743  912A              ;	JR NZ,wait
1744  912A              ;	RET
1745  912A
1746  912A              ; ---------------------------------------------------------------------------------------------------------------
1747  912A              ;
1748  912A              ;	13/07/24
1749  912A              ;
1750  912A
1751  912A              Inicia_Shield
1752  912A
1753  912A 21 58 8C     	ld hl,Datos_Shield
1754  912D 22 5C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1755  9130
1756  9130 7E           	ld a,(hl)
1757  9131 32 5F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1758  9134
1759  9134 3E 01        	ld a,1
1760  9136 32 60 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1761  9139
1762  9139 C9           	ret
1763  913A
1764  913A              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1765  913A              ;
1766  913A              ;	4/6/24
1767  913A              ;
1768  913A              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1769  913A              ;
1770  913A              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1771  913A              ;
1772  913A
1773  913A              Actualiza_pantalla
1774  913A
1775  913A 3E 02        	ld a,2
1776  913C D3 FE        	out ($fe),a
1777  913E
1778  913E 3A 34 8C     	ld a,(Ctrl_3)
1779  9141 CB 57        	bit 2,a
1780  9143 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1781  9145
1782  9145              Borrando_entidades
1783  9145
1784  9145 2A 2E 8C     	ld hl,(Scanlines_album_SP)
1785  9148 CD BC 90     	call Extrae_address
1786  914B 24           	inc h
1787  914C 25           	dec h
1788  914D 28 05        	jr z,Pintando_entidades
1789  914F CD 00 96     	call Pinta_Sprites
1790  9152 18 F1        	jr Borrando_entidades
1791  9154
1792  9154              Pintando_entidades
1793  9154
1794  9154 2A 30 8C     	ld hl,(India_SP)
1795  9157 2C           	inc l
1796  9158 CD BC 90     	call Extrae_address
1797  915B 24           	inc h
1798  915C 25           	dec h
1799  915D 28 0E        	jr z,Ejecuta_escudo
1800  915F 1C           	inc e
1801  9160 1C           	inc e
1802  9161 ED 53 30 8C  	ld (India_SP),de
1803  9165 CD BC 90     	call Extrae_address
1804  9168 CD 00 96     	call Pinta_Sprites
1805  916B 18 E7        	jr Pintando_entidades
1806  916D
1807  916D              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1808  916D
1809  916D              Ejecuta_escudo
1810  916D
1811  916D 3A 5E 8C     	ld a,(Shield)
1812  9170 A7           	and a
1813  9171 20 2F        	jr nz,Aplica_Shield
1814  9173
1815  9173              Borrando_Amadeus
1816  9173
1817  9173 21 34 8C     	ld hl,Ctrl_3
1818  9176 CB 6E        	bit 5,(hl)
1819  9178 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1820  917A
1821  917A 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1822  917D CD BC 90     	call Extrae_address
1823  9180 24           	inc h
1824  9181 25           	dec h
1825  9182 28 03        	jr z,Pintando_Amadeus
1826  9184 CD 00 96     	call Pinta_Sprites
1827  9187
1828  9187              Pintando_Amadeus
1829  9187
1830  9187 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1831  918A CD BC 90     	call Extrae_address
1832  918D 24           	inc h
1833  918E 25           	dec h
1834  918F 28 03        	jr z,1F
1835  9191 CD 00 96     	call Pinta_Sprites
1836  9194
1837  9194              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1838  9194
1839  9194 21 34 8C     1 ld hl,Ctrl_3
1840  9197 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1841  9199 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1842  919B CB AE        	res 5,(hl)
1843  919D
1844  919D 3E 01        	ld a,1												; Borde azul.
1845  919F D3 FE        	out ($fe),a
1846  91A1
1847  91A1 C9           	ret
1848  91A2
1849  91A2              Aplica_Shield
1850  91A2
1851  91A2              ;	Bit 1 "1" (Shield_3) Sólo borra.
1852  91A2              ;		  "0"     ""     Borra/Pinta.
1853  91A2              ;	Bit 2    ""  RET.	 No borra, no pinta.
1854  91A2
1855  91A2 21 60 8C     	ld hl,Shield_3
1856  91A5
1857  91A5 CB 5E        	bit 3,(hl)
1858  91A7 20 DE        	jr nz,Pintando_Amadeus
1859  91A9
1860  91A9 CB 56        	bit 2,(hl)
1861  91AB 20 E7        	jr nz,1B
1862  91AD
1863  91AD CB 4E        	bit 1,(hl)
1864  91AF C4 B6 91     	call nz,Borra_Amadeus_shield
1865  91B2
1866  91B2 28 BF        	jr z,Borrando_Amadeus
1867  91B4 18 DE        	jr 1B
1868  91B6
1869  91B6              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1870  91B6
1871  91B6              Borra_Amadeus_shield
1872  91B6
1873  91B6 3A 34 8C     	ld a,(Ctrl_3)
1874  91B9 CB 6F        	bit 5,a
1875  91BB 28 08        	jr z,1F
1876  91BD
1877  91BD 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1878  91C0 CD BC 90     	call Extrae_address
1879  91C3 18 06        	jr 2F
1880  91C5
1881  91C5 2A 14 8C     1 ld hl,(Album_de_pintado_Amadeus)
1882  91C8 CD BC 90     	call Extrae_address
1883  91CB
1884  91CB CD 00 96     2 call Pinta_Sprites
1885  91CE
1886  91CE AF           	xor a
1887  91CF 3C           	inc a											; Asegura NZ en la salida de la rutina.
1888  91D0
1889  91D0 C9           	ret
1890  91D1
1891  91D1              Pinta_Amadeus_shield
1892  91D1
1893  91D1 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1894  91D4 CD BC 90     	call Extrae_address
1895  91D7 CD 00 96     	call Pinta_Sprites
1896  91DA
1897  91DA AF           	xor a
1898  91DB 3C           	inc a											; Asegura NZ en la salida de la rutina.
1899  91DC
1900  91DC C9           	ret
1901  91DD
1902  91DD              Borra_Pinta_Amadeus_shield
1903  91DD
1904  91DD CD B6 91     	call Borra_Amadeus_shield
1905  91E0 CD D1 91     	call Pinta_Amadeus_shield
1906  91E3 C9           	ret
1907  91E4
1908  91E4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1909  91E4              ;
1910  91E4              ;	19/6/24
1911  91E4              ;
1912  91E4
1913  91E4              Teclado
1914  91E4
1915  91E4              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1916  91E4
1917  91E4 3E F7        	ld a,$f7												; "5" para disparar.
1918  91E6 DB FE        	in a,($fe)
1919  91E8 E6 10        	and $10
1920  91EA
1921  91EA CC DA A1     	call z,Genera_disparo_Amadeus
1922  91ED
1923  91ED 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1924  91EF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1925  91F1 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1926  91F3 CC 6D 9D         call z,Amadeus_a_izquierda
1927  91F6
1928  91F6 3E F7        	ld a,$f7
1929  91F8 DB FE        	in a,($fe)
1930  91FA E6 01        	and $01
1931  91FC C8           	ret z
1932  91FD
1933  91FD 3E F7        	ld a,$f7
1934  91FF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1935  9201 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1936  9203 CC 85 9D     	call z,Amadeus_a_derecha
1937  9206
1938  9206 C9           	ret
1939  9207
1940  9207              ; ------------------------------------------------------------------------------------------------------------------------
1941  9207              ;
1942  9207              ;	06/07/24
1943  9207              ;
1944  9207
1945  9207              Genera_explosion
1946  9207
1947  9207 21 46 8C     	ld hl,Clock_explosion
1948  920A 35           	dec (hl)
1949  920B 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1950  920D
1951  920D              Borra_entidad_colisionada
1952  920D
1953  920D CD 14 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1954  9210 CD 1D 90     	call Cargamos_registros_con_explosion
1955  9213 CD 07 95     	call Genera_datos_de_impresion
1956  9216
1957  9216 AF           	xor a
1958  9217 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1959  9218
1960  9218 C9           	ret
1961  9219
1962  9219              Siguiente_frame_explosion
1963  9219
1964  9219 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1965  921B
1966  921B              ; Avanza Frame de explosión.
1967  921B
1968  921B 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1969  921E 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1970  9221
1971  9221 79           	ld a,c
1972  9222 95           	sub l
1973  9223 20 0B        	jr nz,1F
1974  9225
1975  9225              ; Fín de la entidad !!!!!!!!!!!!!
1976  9225
1977  9225 21 06 8C     	ld hl,Numero_parcial_de_entidades
1978  9228 35           	dec (hl)
1979  9229 23           	inc hl
1980  922A 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1981  922B
1982  922B CD 87 93     	call Limpiamos_bandeja_DRAW
1983  922E 18 DD        	jr Borra_entidad_colisionada
1984  9230
1985  9230 23           1 inc hl
1986  9231 23           	inc hl
1987  9232 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1988  9235 18 D6        	jr Borra_entidad_colisionada
1989  9237
1990  9237              ; ----- ----- ----- ----- -----
1991  9237
1992  9237              Genera_explosion_Amadeus
1993  9237
1994  9237 21 47 8C     	ld hl,Clock_explosion_Amadeus
1995  923A 35           	dec (hl)
1996  923B 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
1997  923D
1998  923D              Borra_Amadeus_impactado
1999  923D
2000  923D CD 7F 8E     	call Change_Amadeus
2001  9240 CD 2A 90     	call Cargamos_registros_con_explosion_Amadeus
2002  9243 CD 4B 90     	call Genera_datos_de_impresion_Amadeus
2003  9246
2004  9246 21 34 8C     	ld hl,Ctrl_3
2005  9249 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2006  924B
2007  924B AF           	xor a
2008  924C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2009  924D
2010  924D C9           	ret
2011  924E
2012  924E              Siguiente_frame_explosion_Amadeus
2013  924E
2014  924E 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2015  9250
2016  9250              ; Avanza Frame de explosión.
2017  9250
2018  9250 2A 7B 89     	ld hl,(Pamm_Amadeus)
2019  9253 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2020  9256
2021  9256 79           	ld a,c
2022  9257 95           	sub l
2023  9258 20 0B        	jr nz,1F
2024  925A
2025  925A              ; Fín de Amadeus !!!!!!!!!!!!!
2026  925A              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2027  925A
2028  925A AF           	xor a
2029  925B 32 78 89     	ld (Impacto_Amadeus),a
2030  925E 21 34 8C     	ld hl,Ctrl_3
2031  9261 CB F6        	set 6,(hl)
2032  9263
2033  9263 18 D8        	jr Borra_Amadeus_impactado
2034  9265
2035  9265 23           1 inc hl
2036  9266 23           	inc hl
2037  9267 22 7B 89     	ld (Pamm_Amadeus),hl
2038  926A 18 D1        	jr Borra_Amadeus_impactado
2039  926C
2040  926C              ; ---------------------------------------------------------------
2041  926C
2042  926C              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 926C              ; ******************************************************************************************************************************************************************************************
   2+ 926C              ;
   3+ 926C              ;   21/04/24
   4+ 926C              ;
   5+ 926C              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 926C              ;   (XOR) bit a bit.
   7+ 926C              ;
   8+ 926C              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 926C
  10+ 926C              Derivando_RND
  11+ 926C
  12+ 926C 21 F6 88         ld hl,Numeros_aleatorios
  13+ 926F
  14+ 926F ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9271 C5               push bc
  16+ 9272              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9272 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9275              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9275
  20+ 9275 A7           6 and a                                 ; Carry a "0".
  21+ 9276 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9278 30 02            jr nc,1F
  23+ 927A
  24+ 927A CB C1            set 0,c
  25+ 927C
  26+ 927C 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 927D E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 927F 5F               ld e,a
  29+ 9280
  30+ 9280 7A               ld a,d
  31+ 9281 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9283 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9285
  34+ 9285 CB 3F            srl a
  35+ 9287
  36+ 9287 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9288
  38+ 9288 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9289 28 04            jr z,4F
  40+ 928B
  41+ 928B CB FF            set 7,a
  42+ 928D 18 02            jr 5F
  43+ 928F
  44+ 928F CB BF        4 res 7,a
  45+ 9291
  46+ 9291 CB 21        5 sla c
  47+ 9293 10 E0            djnz 6B
  48+ 9295
  49+ 9295 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9296
  51+ 9296 77               ld (hl),a
  52+ 9297 23               inc hl
  53+ 9298 C1               pop bc
  54+ 9299 10 D4            djnz 3B
  55+ 929B
  56+ 929B C9               ret
  57+ 929C
  58+ 929C
  59+ 929C
# file closed: RND_Derivando.asm
2043  929C              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 929C              ;---------------------------------------------------------------------------------------------------------------
   2+ 929C              ;
   3+ 929C              ;   8/3/24
   4+ 929C              ;
   5+ 929C              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 929C              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 929C              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 929C              ;	_ de la 1ª entidad del Nivel.
   9+ 929C              ;
  10+ 929C              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 929C
  12+ 929C              ;	MODIFICA: HL,DE y A.
  13+ 929C              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 929C
  15+ 929C              Inicializa_Nivel
  16+ 929C
  17+ 929C 2A 54 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 929F CD BC 90     	call Extrae_address
  19+ 92A2 7E           	ld a,(hl)
  20+ 92A3 32 05 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92A6 23           	inc hl
  22+ 92A7 CD B4 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92AA 22 56 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92AD CD BD 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92B0
  26+ 92B0 CD CE 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92B3 C9           	ret
  28+ 92B4
  29+ 92B4              ; ----------------------
  30+ 92B4
  31+ 92B4 11 E4 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92B7 01 04 00     	ld bc,4
  33+ 92BA ED B0        	ldir
  34+ 92BC C9           	ret
  35+ 92BD
  36+ 92BD 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92BE CD 58 94         call Calcula_salto_en_BC
  38+ 92C1 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92C4 A7               and a
  40+ 92C5 ED 4A            adc hl,bc
  41+ 92C7 CD BC 90         call Extrae_address
  42+ 92CA 22 F0 8B         ld (Puntero_indice_mov),hl
  43+ 92CD C9               ret
  44+ 92CE
  45+ 92CE 3A BF 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92D1 CD 58 94     	call Calcula_salto_en_BC
  47+ 92D4 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92D7 A7               and a
  49+ 92D8 ED 4A            adc hl,bc
  50+ 92DA CD BC 90         call Extrae_address
  51+ 92DD 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92E0 C9           	ret
  53+ 92E1
  54+ 92E1              ;---------------------------------------------------------------------------------------------------------------
  55+ 92E1              ;
  56+ 92E1              ;   5/1/24
  57+ 92E1              ;
  58+ 92E1              ;	Destruye A,BC,HL,DE
  59+ 92E1
  60+ 92E1              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92E1              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92E1
  63+ 92E1              Inicia_Entidades
  64+ 92E1
  65+ 92E1              ; Preparamos los punteros de las cajas de entidades:
  66+ 92E1
  67+ 92E1 CD A6 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92E4              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92E4 CD A0 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92E7
  71+ 92E7 2A 56 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92EA
  73+ 92EA 22 56 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92ED
  75+ 92ED CD 06 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92F0
  77+ 92F0 2A 56 8C     	ld hl,(Datos_de_nivel)
  78+ 92F3
  79+ 92F3              ; En este punto:
  80+ 92F3              ;
  81+ 92F3              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92F3              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92F3
  84+ 92F3 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92F4
  86+ 92F4 7E           	ld a,(hl)
  87+ 92F5 CD 72 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92F8
  89+ 92F8 CD 6A 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92FB
  91+ 92FB              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92FB
  93+ 92FB CD 28 94     	call Busca_mov_masticados_segun_tipo
  94+ 92FE
  95+ 92FE A7           	and a
  96+ 92FF 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 9301
  98+ 9301              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 9301
 100+ 9301              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 9301              ;	_ de este tipo de entidad.
 102+ 9301
 103+ 9301 CD 04 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 9304 CD 11 9F     	call Transfiere_datos_de_contadores
 105+ 9307
 106+ 9307 18 06        	jr 4F
 107+ 9309
 108+ 9309 CD B0 8F     3 call Construye_movimientos_masticados_entidad
 109+ 930C
 110+ 930C              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 930C              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 930C              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 930C              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 930C              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 930C
 116+ 930C CD E6 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 930F              ;																; _ Mov_masticados ya generados.
 118+ 930F
 119+ 930F CD 04 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9312
 121+ 9312 DD E5        	push ix
 122+ 9314 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9315
 124+ 9315 D5           	push de
 125+ 9316 CD DB 94     	call Genera_coordenadas
 126+ 9319
 127+ 9319 ED 5B 2E 8C  	ld de,(Scanlines_album_SP)
 128+ 931D CD 14 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9320 D1           	pop de
 130+ 9321
 131+ 9321 CD 07 95     	call Genera_datos_de_impresion
 132+ 9324              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9324              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9324              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9324              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9324
 137+ 9324 CD AA 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9327
 139+ 9327              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9327
 141+ 9327 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 142+ 932B CD 97 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 932E
 144+ 932E CD 87 93     	call Limpiamos_bandeja_DRAW
 145+ 9331 CD 0A 91     	call Incrementa_punteros_de_cajas
 146+ 9334
 147+ 9334              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9334              ; _ entidad del Nivel.
 149+ 9334
 150+ 9334 3A 35 8C     	ld a,(Ctrl_4)
 151+ 9337 E6 F0        	and $f0
 152+ 9339 32 35 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 933C
 154+ 933C              ; Siguiente entidad del Nivel.
 155+ 933C
 156+ 933C 2A 56 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 933F 23           	inc hl 														; _ entidad del Nivel.
 158+ 9340
 159+ 9340 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9341
 161+ 9341 10 A7        	djnz 2B
 162+ 9343
 163+ 9343 C9           	ret
 164+ 9344
 165+ 9344              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9344              ;
 167+ 9344              ;	27/5/24
 168+ 9344              ;
 169+ 9344              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9344              ;
 171+ 9344
 172+ 9344              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9344              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9344
 175+ 9344 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9347 CD 6A 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 934A
 178+ 934A
 179+ 934A              Construye_movimientos_masticados_Amadeus
 180+ 934A
 181+ 934A 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 934D CD F7 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9350              ;															; _ el (Contador_de_mov_masticados).
 184+ 9350 CD C2 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9353              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9353
 187+ 9353              ; Generamos movimientos masticados de Amadeus.
 188+ 9353
 189+ 9353 06 79        	ld b,121												; $0079, 121d.
 190+ 9355
 191+ 9355 C5           1 push bc
 192+ 9356 CD 23 97     	call Draw
 193+ 9359 CD DC 8F     	call Guarda_movimiento_masticado
 194+ 935C
 195+ 935C CD 97 9A     	call Mov_right
 196+ 935F CD 97 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9362
 198+ 9362 C1           	pop bc
 199+ 9363 10 F0        	djnz 1B
 200+ 9365
 201+ 9365              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9365
 203+ 9365              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9365              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9365
 206+ 9365 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9368 01 08 00     	ld bc,8
 208+ 936B A7           	and a
 209+ 936C ED 42        	sbc hl,bc
 210+ 936E 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9371
 212+ 9371 C9           	ret
 213+ 9372
 214+ 9372              ; ---------------------------------------------------------------------
 215+ 9372              ;
 216+ 9372              ;	10/02/24
 217+ 9372              ;
 218+ 9372              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9372              ;
 220+ 9372              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9372
 222+ 9372              Definicion_segun_tipo
 223+ 9372
 224+ 9372 CD 58 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9375 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9378 CD 60 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 937B C9           	ret
 228+ 937C
 229+ 937C              ; ---------------------------------------------------------------------
 230+ 937C              ;
 231+ 937C              ;	6/7/24
 232+ 937C
 233+ 937C
 234+ 937C              Store_Restore_cajas
 235+ 937C
 236+ 937C ED 5B FF 8B  	ld de,(Puntero_store_caja)
 237+ 9380 CD 97 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9383 CD 0A 91     	call Incrementa_punteros_de_cajas
 239+ 9386 C9           	ret
 240+ 9387
 241+ 9387              ; ---------------------------------------------------------------------
 242+ 9387              ;
 243+ 9387              ;	23/6/24
 244+ 9387              ;
 245+ 9387              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9387              ;
 247+ 9387              ;	MODIFY: HL
 248+ 9387
 249+ 9387              Limpiamos_bandeja_DRAW
 250+ 9387
 251+ 9387 ED 73 0C 8C  	ld (Stack),sp
 252+ 938B 31 E4 8B     	ld sp,Vel_left
 253+ 938E
 254+ 938E AF           	xor a
 255+ 938F 67           	ld h,a
 256+ 9390 6F           	ld l,a
 257+ 9391
 258+ 9391 E5           	push hl
 259+ 9392 E5           	push hl
 260+ 9393 E5           	push hl
 261+ 9394 E5           	push hl
 262+ 9395 E5           	push hl
 263+ 9396 E5           	push hl
 264+ 9397 E5           	push hl
 265+ 9398 E5           	push hl
 266+ 9399 E5           	push hl
 267+ 939A E5           	push hl
 268+ 939B E5           	push hl
 269+ 939C E5           	push hl
 270+ 939D E5           	push hl
 271+ 939E E5           	push hl
 272+ 939F E5           	push hl
 273+ 93A0 E5           	push hl
 274+ 93A1 E5           	push hl
 275+ 93A2 E5           	push hl
 276+ 93A3
 277+ 93A3 33           	inc sp
 278+ 93A4
 279+ 93A4 E5           	push hl
 280+ 93A5 ED 7B 0C 8C  	ld sp,(Stack)
 281+ 93A9
 282+ 93A9 C9           	ret
 283+ 93AA
 284+ 93AA              ; ---------------------------------------------------------------------
 285+ 93AA              ;
 286+ 93AA              ;	24/03/24
 287+ 93AA
 288+ 93AA 2A C8 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93AD 2B           	dec hl
 290+ 93AE 22 C8 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93B1 C9           	ret
 292+ 93B2
 293+ 93B2              ; ---------------------------------------------------------------------
 294+ 93B2              ;
 295+ 93B2              ;	8/5/24
 296+ 93B2
 297+ 93B2              Reinicia_entidad_maliciosa
 298+ 93B2
 299+ 93B2              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93B2
 301+ 93B2 CD 04 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93B5 CD 11 9F     	call Transfiere_datos_de_contadores
 303+ 93B8
 304+ 93B8              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93B8
 306+ 93B8 3A BF 8B     	ld a,(Tipo)
 307+ 93BB CD 72 93     	call Definicion_segun_tipo
 308+ 93BE
 309+ 93BE E5           	push hl
 310+ 93BF DD E1        	pop ix
 311+ 93C1
 312+ 93C1 DD 6E 0B     	ld l,(ix+11)
 313+ 93C4 DD 66 0C     	ld h,(ix+12)
 314+ 93C7
 315+ 93C7 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93CA
 317+ 93CA CD 04 90     	call Cargamos_registros_con_mov_masticado
 318+ 93CD
 319+ 93CD              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93CD              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93CD              ; Ejemplos.
 322+ 93CD
 323+ 93CD              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93CD              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93CD              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93CD              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93CD              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93CD
 329+ 93CD 21 C2 8B     	ld hl,Contador_de_vueltas
 330+ 93D0 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93D2
 332+ 93D2 7E           	ld a,(hl)
 333+ 93D3 CB 2F        	sra a
 334+ 93D5 CB 2F        	sra a
 335+ 93D7
 336+ 93D7 32 CA 8B     	ld (Velocidad),a
 337+ 93DA
 338+ 93DA 3E 40        	ld a,$40
 339+ 93DC BE           	cp (hl)
 340+ 93DD C0           	ret nz
 341+ 93DE
 342+ 93DE              ; Límitador.
 343+ 93DE
 344+ 93DE              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93DE
 346+ 93DE CB 2E        	sra (hl)
 347+ 93E0 21 CA 8B     	ld hl,Velocidad
 348+ 93E3 CB 2E        	sra (hl)
 349+ 93E5
 350+ 93E5 C9           	ret
 351+ 93E6
 352+ 93E6              ; ---------------------------------------------------------------------
 353+ 93E6              ;
 354+ 93E6              ;	22/01/24
 355+ 93E6
 356+ 93E6 21 35 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93E9 CB 46        	bit 0,(hl)
 358+ 93EB 20 0D        	jr nz,1F
 359+ 93ED CB 4E        	bit 1,(hl)
 360+ 93EF 20 0C        	jr nz,2F
 361+ 93F1 CB 56        	bit 2,(hl)
 362+ 93F3 20 0B        	jr nz,3F
 363+ 93F5 CB 5E        	bit 3,(hl)
 364+ 93F7 20 0A        	jr nz,4F
 365+ 93F9 C9           	ret
 366+ 93FA
 367+ 93FA CB E6        1 set 4,(hl)
 368+ 93FC C9           	ret
 369+ 93FD CB EE        2 set 5,(hl)
 370+ 93FF C9           	ret
 371+ 9400 CB F6        3 set 6,(hl)
 372+ 9402 C9           	ret
 373+ 9403 CB FE        4 set 7,(hl)
 374+ 9405 C9           	ret
 375+ 9406
 376+ 9406              ; ---------------------------------------------------------------------
 377+ 9406              ;
 378+ 9406              ;	23/01/24
 379+ 9406              ;
 380+ 9406              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 9406              ;
 382+ 9406              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 9406              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 9406              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 9406              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 9406
 387+ 9406              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 9406
 389+ 9406 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9407 3D           	dec a
 391+ 9408 20 06        	jr nz,1F
 392+ 940A
 393+ 940A              ; --- Tipo_1
 394+ 940A
 395+ 940A 21 35 8C     	ld hl,Ctrl_4
 396+ 940D CB C6        	set 0,(hl)
 397+ 940F C9           	ret
 398+ 9410
 399+ 9410 3D           1 dec a
 400+ 9411 20 06        	jr nz,2F
 401+ 9413
 402+ 9413              ; --- Tipo_2
 403+ 9413
 404+ 9413 21 35 8C     	ld hl,Ctrl_4
 405+ 9416 CB CE        	set 1,(hl)
 406+ 9418 C9           	ret
 407+ 9419
 408+ 9419 3D           2 dec a
 409+ 941A 20 06        	jr nz,3F
 410+ 941C
 411+ 941C              ; --- Tipo_3
 412+ 941C
 413+ 941C 21 35 8C     	ld hl,Ctrl_4
 414+ 941F CB D6        	set 2,(hl)
 415+ 9421 C9           	ret
 416+ 9422
 417+ 9422              ; --- Tipo_3
 418+ 9422
 419+ 9422 21 35 8C     3 ld hl,Ctrl_4
 420+ 9425 CB D6        	set 2,(hl)
 421+ 9427 C9           	ret
 422+ 9428
 423+ 9428              ; ---------------------------------------------------------------------
 424+ 9428              ;
 425+ 9428              ;	22/01/24
 426+ 9428
 427+ 9428 21 35 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 942B CB 46        	bit 0,(hl)
 429+ 942D 20 0E        	jr nz,1F
 430+ 942F
 431+ 942F CB 4E        	bit 1,(hl)
 432+ 9431 20 10        	jr nz,2F
 433+ 9433
 434+ 9433 CB 56        	bit 2,(hl)
 435+ 9435 20 12        	jr nz,3F
 436+ 9437
 437+ 9437 CB 5E        	bit 3,(hl)
 438+ 9439 20 14        	jr nz,4F
 439+ 943B 18 19        	jr 6F
 440+ 943D
 441+ 943D              ; Entidad_de_Tipo_1.
 442+ 943D
 443+ 943D CB 66        1 bit 4,(hl)
 444+ 943F 28 15        	jr z,6F
 445+ 9441 18 10        	jr 5F
 446+ 9443
 447+ 9443              ; Entidad_de_Tipo_2.
 448+ 9443
 449+ 9443 CB 6E        2 bit 5,(hl)
 450+ 9445 28 0F        	jr z,6F
 451+ 9447 18 0A        	jr 5F
 452+ 9449
 453+ 9449              ; Entidad_de_Tipo_3.
 454+ 9449
 455+ 9449 CB 76        3 bit 6,(hl)
 456+ 944B 28 09        	jr z,6F
 457+ 944D 18 04        	jr 5F
 458+ 944F
 459+ 944F              ; Entidad_de_Tipo_4.
 460+ 944F
 461+ 944F CB 7E        4 bit 7,(hl)
 462+ 9451 28 03        	jr z,6F
 463+ 9453
 464+ 9453              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9453
 466+ 9453 AF           5 xor a
 467+ 9454 3C           	inc a
 468+ 9455 C9           	ret
 469+ 9456
 470+ 9456              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9456
 472+ 9456 AF           6 xor a
 473+ 9457 C9           	ret
 474+ 9458
 475+ 9458              ;	------------------------------------------------------------------------------------
 476+ 9458              ;
 477+ 9458              ;	12/01/24
 478+ 9458              ;
 479+ 9458              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9458              ;
 481+ 9458              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9458              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9458
 484+ 9458 CB 27        Calcula_salto_en_BC sla a
 485+ 945A D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 945C 4F           	ld c,a
 487+ 945D 06 00        	ld b,0
 488+ 945F C9           	ret
 489+ 9460
 490+ 9460              ; ------------------------------------------------------------------
 491+ 9460              ;
 492+ 9460              ;	19/1/24
 493+ 9460              ;
 494+ 9460              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9460              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9460
 497+ 9460 A7           Situa_en_datos_de_definicion and a
 498+ 9461 ED 4A        	adc hl,bc
 499+ 9463 CD BC 90     	call Extrae_address
 500+ 9466 22 0A 8C         ld (Datos_de_entidad),hl
 501+ 9469 C9           	ret
 502+ 946A
 503+ 946A              ; ------------------------------------------------------------------
 504+ 946A
 505+ 946A              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 946A              ; 	inc de
 507+ 946A              ; 	inc de
 508+ 946A              ; 	ex de,hl
 509+ 946A              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 946A              ; 	ret
 511+ 946A
 512+ 946A              ; ----------------------------------------------------------------------------------------------------------
 513+ 946A              ;
 514+ 946A              ;	24/6/24
 515+ 946A              ;
 516+ 946A              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 946A              ;	_ de entidad.
 518+ 946A              ;
 519+ 946A              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 946A              ;
 521+ 946A              ;
 522+ 946A              ;	MODIFICA: HL,DE y BC
 523+ 946A
 524+ 946A
 525+ 946A              Definicion_de_entidad_a_bandeja_DRAW
 526+ 946A
 527+ 946A 11 BF 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 946D 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 946E 12           	ld (de),a
 530+ 946F 23           	inc hl
 531+ 9470              ;
 532+ 9470 11 CD 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9473 01 02 00     	ld bc,2
 534+ 9476 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9478              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9478 11 C2 8B     	ld de,Contador_de_vueltas
 537+ 947B 7E           	ld a,(hl)
 538+ 947C 12           	ld (de),a
 539+ 947D 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 947E
 541+ 947E 11 D4 8B     	ld de,Indice_Sprite_der
 542+ 9481 01 04 00     	ld bc,4
 543+ 9484 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9486
 545+ 9486 11 DC 8B     	ld de,Posicion_inicio
 546+ 9489 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 948C ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 948E
 549+ 948E 11 C6 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9491 01 02 00     	ld bc,2
 551+ 9494 ED B0        	ldir
 552+ 9496
 553+ 9496 C9           	ret
 554+ 9497
 555+ 9497              ; ----------------------------------------------------------------------------------------------------------
 556+ 9497              ;
 557+ 9497              ;	1/8/24
 558+ 9497              ;
 559+ 9497
 560+ 9497              Parametros_de_bandeja_DRAW_a_caja
 561+ 9497
 562+ 9497 21 BF 8B     	ld hl,Bandeja_DRAW
 563+ 949A 01 0C 00     	ld bc,12
 564+ 949D ED B0        	ldir
 565+ 949F C9           	ret
 566+ 94A0
 567+ 94A0              ;---------------------------------------------------------------------------------------------------------------
 568+ 94A0              ;
 569+ 94A0              ;	5/1/24
 570+ 94A0              ;
 571+ 94A0              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 94A0              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 94A0              ;
 574+ 94A0              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 94A0              ;
 576+ 94A0              ;	(Numero_parcial_de_entidades)="7".
 577+ 94A0              ;
 578+ 94A0              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 94A0              ;
 580+ 94A0              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 94A0              ;
 582+ 94A0              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 94A0              ;	MODIFICA: A y B.
 584+ 94A0              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 94A0
 586+ 94A0              Inicializa_Numero_parcial_de_entidades
 587+ 94A0
 588+ 94A0              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 94A0
 590+ 94A0 3A 05 8C     	ld a,(Numero_de_entidades)
 591+ 94A3 A7           	and a
 592+ 94A4
 593+ 94A4              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 94A4              ;	jr z,$
 595+ 94A4              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 94A4
 597+ 94A4 20 03        	jr nz,3F
 598+ 94A6
 599+ 94A6              ; ---------- ---------- ----------
 600+ 94A6
 601+ 94A6              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94A6              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94A6
 604+ 94A6 CD 9C 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94A9
 606+ 94A9              ; ---------- ---------- ----------
 607+ 94A9
 608+ 94A9 3A 05 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94AC FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94AE 38 08        	jr c,1F
 611+ 94B0
 612+ 94B0              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94B0              ; Actualizamos variables.
 614+ 94B0
 615+ 94B0 3E 07        	ld a,7
 616+ 94B2 32 06 8C     	ld (Numero_parcial_de_entidades),a
 617+ 94B5 47           	ld b,a
 618+ 94B6 18 04        	jr 2F
 619+ 94B8
 620+ 94B8              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94B8              ; (Numero_de_entidades)="0".
 622+ 94B8
 623+ 94B8 32 06 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 94BB 47           	ld b,a
 625+ 94BC C9           2 ret
 626+ 94BD
# file closed: Rutinas_de_inicio_y_niveles.asm
2044  94BD              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94BD              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94BD              ;
   3+ 94BD              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94BD              ;
   5+ 94BD              ; *****************************************************************************************************************************************************************************************
   6+ 94BD              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94BD
   8+ 94BD 7C           calcula_tercio ld a,h
   9+ 94BE E6 18        	and $18
  10+ 94C0 CB 2F        	sra a
  11+ 94C2 CB 2F        	sra a
  12+ 94C4 CB 2F        	sra a
  13+ 94C6 C9           	ret
  14+ 94C7
# file closed: calcula_tercio.asm
2045  94C7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94C7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94C7              ;
   3+ 94C7              ;
   4+ 94C7              ;	CLS.
   5+ 94C7              ;
   6+ 94C7              ;	Limpia la pantalla y define sus atributos.
   7+ 94C7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94C7              ;
   9+ 94C7              ;	COLORES: 0 ..... NEGRO
  10+ 94C7              ;    		 1 ..... AZUL
  11+ 94C7              ; 			 2 ..... ROJO
  12+ 94C7              ;			 3 ..... MAGENTA
  13+ 94C7              ; 			 4 ..... VERDE
  14+ 94C7              ; 			 5 ..... CIAN
  15+ 94C7              ;			 6 ..... AMARILLO
  16+ 94C7              ; 			 7 ..... BLANCO
  17+ 94C7              ;
  18+ 94C7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94C7              ;
  20+ 94C7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94C7
  22+ 94C7
  23+ 94C7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94CA 11 01 40     	LD DE,$4001
  25+ 94CD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94D2 ED B0        	LDIR
  28+ 94D4 01 FF 02     	LD BC,767
  29+ 94D7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94D8 ED B0        	LDIR
  31+ 94DA C9           	ret
  32+ 94DB
# file closed: Cls.asm
2046  94DB              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94DB              ; ------------------------------------------------------------------------
   2+ 94DB              ;
   3+ 94DB              ;	30/1/24
   4+ 94DB              ;
   5+ 94DB              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94DB              ;	Fila superior "0", Columna izquierda "0".
   7+ 94DB              ;
   8+ 94DB              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94DB              ;
  10+ 94DB              ;	Modifica: A,BC y DE.
  11+ 94DB
  12+ 94DB 7D           Genera_coordenadas ld a,l
  13+ 94DC E6 1F        	and $1f
  14+ 94DE 32 C0 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94E1
  16+ 94E1 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94E2 FE 40        	cp $40
  18+ 94E4 38 1C        	jr c,4F
  19+ 94E6
  20+ 94E6 CD BD 94     	call calcula_tercio
  21+ 94E9 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94EA
  23+ 94EA 1E 00        	ld e,0
  24+ 94EC 7D           	ld a,l
  25+ 94ED E6 E0        	and $e0
  26+ 94EF 28 01        	jr z,1F
  27+ 94F1 04           	inc b
  28+ 94F2
  29+ 94F2 04           1 inc b
  30+ 94F3 05           	dec b
  31+ 94F4 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94F6              ;														; _ , salimos.
  33+ 94F6 1C           3 inc e
  34+ 94F7 D6 20        	sub 32
  35+ 94F9 20 FB        	jr nz,3B
  36+ 94FB 10 F5        	djnz 1B
  37+ 94FD
  38+ 94FD 7B           2 ld a,e
  39+ 94FE 32 C1 8B     	ld (Coordenada_y),a
  40+ 9501 C9           	ret
  41+ 9502
  42+ 9502 AF           4 xor a
  43+ 9503 32 C1 8B     	ld (Coordenada_y),a
  44+ 9506 C9           	ret
  45+ 9507
# file closed: Genera_coordenadas.asm
2047  9507              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9507              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9507              ;
   3+ 9507              ;	20/09/24
   4+ 9507              ;
   5+ 9507              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9507              ;   DE contiene Puntero_objeto.
   7+ 9507              ;   IX contiene el Puntero de impresión.
   8+ 9507
   9+ 9507              Genera_datos_de_impresion
  10+ 9507
  11+ 9507 ED 73 0C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 950B
  13+ 950B 31 C6 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 950E DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9510
  16+ 9510 2A 2E 8C         ld hl,(Scanlines_album_SP)
  17+ 9513
  18+ 9513 3E 05            ld a,5
  19+ 9515 85               add l
  20+ 9516 6F               ld l,a
  21+ 9517
  22+ 9517 F9               ld sp,hl
  23+ 9518 22 2E 8C         ld (Scanlines_album_SP),hl
  24+ 951B
  25+ 951B 21 00 00         ld hl,0
  26+ 951E
  27+ 951E DD E5            push ix
  28+ 9520 3B               dec sp
  29+ 9521 ED 7A            adc hl,sp
  30+ 9523 D5               push de
  31+ 9524
  32+ 9524              ; Recuperamos SP.
  33+ 9524
  34+ 9524 ED 7B 0C 8C      ld sp,(Stack)
  35+ 9528
  36+ 9528 E5               push hl
  37+ 9529 F1               pop af
  38+ 952A 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 952B
  40+ 952B              ; Tenemos el encabezado listo.
  41+ 952B              ; Preparamos registros para generar los scanlines.
  42+ 952B
  43+ 952B DD E5            push ix
  44+ 952D E1               pop hl                                          ; 1er scanline en HL.
  45+ 952E
  46+ 952E ED 5B 2E 8C      ld de,(Scanlines_album_SP)
  47+ 9532
  48+ 9532              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9532              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9532
  51+ 9532 7C               ld a,h
  52+ 9533 FE 50            cp $50
  53+ 9535 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9537
  55+ 9537 20 05            jr nz,2F
  56+ 9539
  57+ 9539 7D               ld a,l
  58+ 953A FE E0            cp $e0
  59+ 953C 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 953E
  61+ 953E 7D           2 ld a,l
  62+ 953F FE C0            cp $c0
  63+ 9541 D2 D7 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9544
  65+ 9544              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9544
  67+ 9544 CD D5 99         call NextScan
  68+ 9547 EB               ex de,hl
  69+ 9548
  70+ 9548 73               ld (hl),e
  71+ 9549 23               inc hl
  72+ 954A 72               ld (hl),d
  73+ 954B 23               inc hl
  74+ 954C
  75+ 954C EB               ex de,hl
  76+ 954D
  77+ 954D CD D5 99         call NextScan
  78+ 9550 EB               ex de,hl
  79+ 9551
  80+ 9551 73               ld (hl),e
  81+ 9552 23               inc hl
  82+ 9553 72               ld (hl),d
  83+ 9554 23               inc hl
  84+ 9555
  85+ 9555 EB               ex de,hl
  86+ 9556
  87+ 9556 CD D5 99         call NextScan
  88+ 9559 EB               ex de,hl
  89+ 955A
  90+ 955A 73               ld (hl),e
  91+ 955B 23               inc hl
  92+ 955C 72               ld (hl),d
  93+ 955D 23               inc hl
  94+ 955E
  95+ 955E EB               ex de,hl
  96+ 955F
  97+ 955F CD D5 99         call NextScan
  98+ 9562 EB               ex de,hl
  99+ 9563
 100+ 9563 73               ld (hl),e
 101+ 9564 23               inc hl
 102+ 9565 72               ld (hl),d
 103+ 9566 23               inc hl
 104+ 9567
 105+ 9567 EB               ex de,hl
 106+ 9568
 107+ 9568 CD D5 99         call NextScan
 108+ 956B EB               ex de,hl
 109+ 956C
 110+ 956C 73               ld (hl),e
 111+ 956D 23               inc hl
 112+ 956E 72               ld (hl),d
 113+ 956F 23               inc hl
 114+ 9570
 115+ 9570 EB               ex de,hl
 116+ 9571
 117+ 9571 CD D5 99         call NextScan
 118+ 9574 EB               ex de,hl
 119+ 9575
 120+ 9575 73               ld (hl),e
 121+ 9576 23               inc hl
 122+ 9577 72               ld (hl),d
 123+ 9578 23               inc hl
 124+ 9579
 125+ 9579 EB               ex de,hl
 126+ 957A
 127+ 957A CD D5 99         call NextScan
 128+ 957D EB               ex de,hl
 129+ 957E
 130+ 957E 73               ld (hl),e
 131+ 957F 23               inc hl
 132+ 9580 72               ld (hl),d
 133+ 9581 23               inc hl
 134+ 9582
 135+ 9582 EB               ex de,hl
 136+ 9583
 137+ 9583 CD D5 99         call NextScan
 138+ 9586 EB               ex de,hl
 139+ 9587
 140+ 9587 73               ld (hl),e
 141+ 9588 23               inc hl
 142+ 9589 72               ld (hl),d
 143+ 958A 23               inc hl
 144+ 958B
 145+ 958B EB               ex de,hl
 146+ 958C
 147+ 958C CD D5 99         call NextScan
 148+ 958F EB               ex de,hl
 149+ 9590
 150+ 9590 73               ld (hl),e
 151+ 9591 23               inc hl
 152+ 9592 72               ld (hl),d
 153+ 9593 23               inc hl
 154+ 9594
 155+ 9594 EB               ex de,hl
 156+ 9595
 157+ 9595 CD D5 99         call NextScan
 158+ 9598 EB               ex de,hl
 159+ 9599
 160+ 9599 73               ld (hl),e
 161+ 959A 23               inc hl
 162+ 959B 72               ld (hl),d
 163+ 959C 23               inc hl
 164+ 959D
 165+ 959D EB               ex de,hl
 166+ 959E
 167+ 959E CD D5 99         call NextScan
 168+ 95A1 EB               ex de,hl
 169+ 95A2
 170+ 95A2 73               ld (hl),e
 171+ 95A3 23               inc hl
 172+ 95A4 72               ld (hl),d
 173+ 95A5 23               inc hl
 174+ 95A6
 175+ 95A6 EB               ex de,hl
 176+ 95A7
 177+ 95A7 CD D5 99         call NextScan
 178+ 95AA EB               ex de,hl
 179+ 95AB
 180+ 95AB 73               ld (hl),e
 181+ 95AC 23               inc hl
 182+ 95AD 72               ld (hl),d
 183+ 95AE 23               inc hl
 184+ 95AF
 185+ 95AF EB               ex de,hl
 186+ 95B0
 187+ 95B0 CD D5 99         call NextScan
 188+ 95B3 EB               ex de,hl
 189+ 95B4
 190+ 95B4 73               ld (hl),e
 191+ 95B5 23               inc hl
 192+ 95B6 72               ld (hl),d
 193+ 95B7 23               inc hl
 194+ 95B8
 195+ 95B8 EB               ex de,hl
 196+ 95B9
 197+ 95B9 CD D5 99         call NextScan
 198+ 95BC EB               ex de,hl
 199+ 95BD
 200+ 95BD 73               ld (hl),e
 201+ 95BE 23               inc hl
 202+ 95BF 72               ld (hl),d
 203+ 95C0 23               inc hl
 204+ 95C1
 205+ 95C1 EB               ex de,hl
 206+ 95C2
 207+ 95C2 CD D5 99         call NextScan
 208+ 95C5 EB               ex de,hl
 209+ 95C6
 210+ 95C6              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95C6              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95C6              ;   _ generar sus scanlines.
 213+ 95C6
 214+ 95C6              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95C6
 216+ 95C6 73               ld (hl),e
 217+ 95C7 23               inc hl
 218+ 95C8 72               ld (hl),d
 219+ 95C9 23               inc hl
 220+ 95CA
 221+ 95CA              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95CA
 223+ 95CA 22 2E 8C         ld (Scanlines_album_SP),hl
 224+ 95CD
 225+ 95CD EB               ex de,hl
 226+ 95CE
 227+ 95CE              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95CE
 229+ 95CE              ;    call NextScan
 230+ 95CE              ;    call NextScan
 231+ 95CE
 232+ 95CE 22 39 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95D1
 234+ 95D1              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95D1
 236+ 95D1 08               ex af,af
 237+ 95D2
 238+ 95D2 F5               push af
 239+ 95D3 E1               pop hl
 240+ 95D4
 241+ 95D4 36 10            ld (hl),16
 242+ 95D6
 243+ 95D6 C9               ret
 244+ 95D7
 245+ 95D7              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95D7
 247+ 95D7              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95D7
 249+ 95D7 3E 57            ld a,$57
 250+ 95D9 94               sub h
 251+ 95DA 47               ld b,a
 252+ 95DB
 253+ 95DB 3E DF            ld a,$df
 254+ 95DD BD               cp l
 255+ 95DE 38 04            jr c,1F
 256+ 95E0
 257+ 95E0 3E 08            ld a,8
 258+ 95E2 80               add b
 259+ 95E3 47               ld b,a
 260+ 95E4
 261+ 95E4              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95E4              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95E4
 264+ 95E4 48           1 ld c,b
 265+ 95E5 0C               inc c
 266+ 95E6
 267+ 95E6 04               inc b
 268+ 95E7 05               dec b
 269+ 95E8 20 02            jr nz,3F
 270+ 95EA
 271+ 95EA 18 0B            jr 6F
 272+ 95EC
 273+ 95EC CD D5 99     3 call NextScan
 274+ 95EF EB               ex de,hl
 275+ 95F0
 276+ 95F0 73               ld (hl),e
 277+ 95F1 23               inc hl
 278+ 95F2 72               ld (hl),d
 279+ 95F3 23               inc hl
 280+ 95F4
 281+ 95F4 EB               ex de,hl
 282+ 95F5 10 F5            djnz 3B
 283+ 95F7
 284+ 95F7 ED 53 2E 8C  6 ld (Scanlines_album_SP),de
 285+ 95FB
 286+ 95FB 08           5 ex af,af
 287+ 95FC F5               push af
 288+ 95FD E1               pop hl
 289+ 95FE
 290+ 95FE 71               ld (hl),c
 291+ 95FF
 292+ 95FF C9               ret
 293+ 9600
# file closed: Genera_datos_de_impresion.asm
2048  9600              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9600              ; -----------------------------------------------------------------------------
   2+ 9600              ;
   3+ 9600              ;   11/03/24
   4+ 9600              ;
   5+ 9600
   6+ 9600              Pinta_Sprites
   7+ 9600
   8+ 9600              ;    ld hl,(Scanlines_album_SP)
   9+ 9600              ;    call Extrae_address
  10+ 9600
  11+ 9600              ;    inc h
  12+ 9600              ;    dec h
  13+ 9600              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9600
  15+ 9600 ED 73 0C 8C      ld (Stack),sp
  16+ 9604
  17+ 9604 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9605              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9605 2C               inc l
  20+ 9606 2C               inc l
  21+ 9607
  22+ 9607 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9608
  24+ 9608 2C               inc l
  25+ 9609 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 960A
  27+ 960A              ;   Seleccionamos rutina de impresión:
  28+ 960A
  29+ 960A 3E 10            ld a,16
  30+ 960C B8               cp b
  31+ 960D C2 09 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9610
  33+ 9610              ;   Rutinas:
  34+ 9610
  35+ 9610              Pinta_rapido    ;   1520 t/states.
  36+ 9610
  37+ 9610 E1               pop hl
  38+ 9611
  39+ 9611 1A               ld a,(de)
  40+ 9612 AE               xor (hl)
  41+ 9613 77               ld (hl),a
  42+ 9614 2C               inc l
  43+ 9615 1C               inc e
  44+ 9616 1A               ld a,(de)
  45+ 9617 AE               xor (hl)
  46+ 9618 77               ld (hl),a
  47+ 9619 2C               inc l
  48+ 961A 1C               inc e
  49+ 961B 1A               ld a,(de)
  50+ 961C AE               xor (hl)
  51+ 961D 77               ld (hl),a
  52+ 961E 13               inc de
  53+ 961F
  54+ 961F E1               pop hl
  55+ 9620
  56+ 9620 1A               ld a,(de)
  57+ 9621 AE               xor (hl)
  58+ 9622 77               ld (hl),a
  59+ 9623 2C               inc l
  60+ 9624 1C               inc e
  61+ 9625 1A               ld a,(de)
  62+ 9626 AE               xor (hl)
  63+ 9627 77               ld (hl),a
  64+ 9628 2C               inc l
  65+ 9629 1C               inc e
  66+ 962A 1A               ld a,(de)
  67+ 962B AE               xor (hl)
  68+ 962C 77               ld (hl),a
  69+ 962D 13               inc de
  70+ 962E
  71+ 962E E1               pop hl
  72+ 962F
  73+ 962F 1A               ld a,(de)
  74+ 9630 AE               xor (hl)
  75+ 9631 77               ld (hl),a
  76+ 9632 2C               inc l
  77+ 9633 1C               inc e
  78+ 9634 1A               ld a,(de)
  79+ 9635 AE               xor (hl)
  80+ 9636 77               ld (hl),a
  81+ 9637 2C               inc l
  82+ 9638 1C               inc e
  83+ 9639 1A               ld a,(de)
  84+ 963A AE               xor (hl)
  85+ 963B 77               ld (hl),a
  86+ 963C 13               inc de
  87+ 963D
  88+ 963D E1               pop hl
  89+ 963E
  90+ 963E 1A               ld a,(de)
  91+ 963F AE               xor (hl)
  92+ 9640 77               ld (hl),a
  93+ 9641 2C               inc l
  94+ 9642 1C               inc e
  95+ 9643 1A               ld a,(de)
  96+ 9644 AE               xor (hl)
  97+ 9645 77               ld (hl),a
  98+ 9646 2C               inc l
  99+ 9647 1C               inc e
 100+ 9648 1A               ld a,(de)
 101+ 9649 AE               xor (hl)
 102+ 964A 77               ld (hl),a
 103+ 964B 13               inc de
 104+ 964C
 105+ 964C E1               pop hl
 106+ 964D
 107+ 964D 1A               ld a,(de)
 108+ 964E AE               xor (hl)
 109+ 964F 77               ld (hl),a
 110+ 9650 2C               inc l
 111+ 9651 1C               inc e
 112+ 9652 1A               ld a,(de)
 113+ 9653 AE               xor (hl)
 114+ 9654 77               ld (hl),a
 115+ 9655 2C               inc l
 116+ 9656 1C               inc e
 117+ 9657 1A               ld a,(de)
 118+ 9658 AE               xor (hl)
 119+ 9659 77               ld (hl),a
 120+ 965A 13               inc de
 121+ 965B
 122+ 965B E1               pop hl
 123+ 965C
 124+ 965C 1A               ld a,(de)
 125+ 965D AE               xor (hl)
 126+ 965E 77               ld (hl),a
 127+ 965F 2C               inc l
 128+ 9660 1C               inc e
 129+ 9661 1A               ld a,(de)
 130+ 9662 AE               xor (hl)
 131+ 9663 77               ld (hl),a
 132+ 9664 2C               inc l
 133+ 9665 1C               inc e
 134+ 9666 1A               ld a,(de)
 135+ 9667 AE               xor (hl)
 136+ 9668 77               ld (hl),a
 137+ 9669 13               inc de
 138+ 966A
 139+ 966A E1               pop hl
 140+ 966B
 141+ 966B 1A               ld a,(de)
 142+ 966C AE               xor (hl)
 143+ 966D 77               ld (hl),a
 144+ 966E 2C               inc l
 145+ 966F 1C               inc e
 146+ 9670 1A               ld a,(de)
 147+ 9671 AE               xor (hl)
 148+ 9672 77               ld (hl),a
 149+ 9673 2C               inc l
 150+ 9674 1C               inc e
 151+ 9675 1A               ld a,(de)
 152+ 9676 AE               xor (hl)
 153+ 9677 77               ld (hl),a
 154+ 9678 13               inc de
 155+ 9679
 156+ 9679 E1               pop hl
 157+ 967A
 158+ 967A 1A               ld a,(de)
 159+ 967B AE               xor (hl)
 160+ 967C 77               ld (hl),a
 161+ 967D 2C               inc l
 162+ 967E 1C               inc e
 163+ 967F 1A               ld a,(de)
 164+ 9680 AE               xor (hl)
 165+ 9681 77               ld (hl),a
 166+ 9682 2C               inc l
 167+ 9683 1C               inc e
 168+ 9684 1A               ld a,(de)
 169+ 9685 AE               xor (hl)
 170+ 9686 77               ld (hl),a
 171+ 9687 13               inc de
 172+ 9688
 173+ 9688 E1               pop hl
 174+ 9689
 175+ 9689 1A               ld a,(de)
 176+ 968A AE               xor (hl)
 177+ 968B 77               ld (hl),a
 178+ 968C 2C               inc l
 179+ 968D 1C               inc e
 180+ 968E 1A               ld a,(de)
 181+ 968F AE               xor (hl)
 182+ 9690 77               ld (hl),a
 183+ 9691 2C               inc l
 184+ 9692 1C               inc e
 185+ 9693 1A               ld a,(de)
 186+ 9694 AE               xor (hl)
 187+ 9695 77               ld (hl),a
 188+ 9696 13               inc de
 189+ 9697
 190+ 9697 E1               pop hl
 191+ 9698
 192+ 9698 1A               ld a,(de)
 193+ 9699 AE               xor (hl)
 194+ 969A 77               ld (hl),a
 195+ 969B 2C               inc l
 196+ 969C 1C               inc e
 197+ 969D 1A               ld a,(de)
 198+ 969E AE               xor (hl)
 199+ 969F 77               ld (hl),a
 200+ 96A0 2C               inc l
 201+ 96A1 1C               inc e
 202+ 96A2 1A               ld a,(de)
 203+ 96A3 AE               xor (hl)
 204+ 96A4 77               ld (hl),a
 205+ 96A5 13               inc de
 206+ 96A6
 207+ 96A6 E1               pop hl
 208+ 96A7
 209+ 96A7 1A               ld a,(de)
 210+ 96A8 AE               xor (hl)
 211+ 96A9 77               ld (hl),a
 212+ 96AA 2C               inc l
 213+ 96AB 1C               inc e
 214+ 96AC 1A               ld a,(de)
 215+ 96AD AE               xor (hl)
 216+ 96AE 77               ld (hl),a
 217+ 96AF 2C               inc l
 218+ 96B0 1C               inc e
 219+ 96B1 1A               ld a,(de)
 220+ 96B2 AE               xor (hl)
 221+ 96B3 77               ld (hl),a
 222+ 96B4 13               inc de
 223+ 96B5
 224+ 96B5 E1               pop hl
 225+ 96B6
 226+ 96B6 1A               ld a,(de)
 227+ 96B7 AE               xor (hl)
 228+ 96B8 77               ld (hl),a
 229+ 96B9 2C               inc l
 230+ 96BA 1C               inc e
 231+ 96BB 1A               ld a,(de)
 232+ 96BC AE               xor (hl)
 233+ 96BD 77               ld (hl),a
 234+ 96BE 2C               inc l
 235+ 96BF 1C               inc e
 236+ 96C0 1A               ld a,(de)
 237+ 96C1 AE               xor (hl)
 238+ 96C2 77               ld (hl),a
 239+ 96C3 13               inc de
 240+ 96C4
 241+ 96C4 E1               pop hl
 242+ 96C5
 243+ 96C5 1A               ld a,(de)
 244+ 96C6 AE               xor (hl)
 245+ 96C7 77               ld (hl),a
 246+ 96C8 2C               inc l
 247+ 96C9 1C               inc e
 248+ 96CA 1A               ld a,(de)
 249+ 96CB AE               xor (hl)
 250+ 96CC 77               ld (hl),a
 251+ 96CD 2C               inc l
 252+ 96CE 1C               inc e
 253+ 96CF 1A               ld a,(de)
 254+ 96D0 AE               xor (hl)
 255+ 96D1 77               ld (hl),a
 256+ 96D2 13               inc de
 257+ 96D3
 258+ 96D3 E1               pop hl
 259+ 96D4
 260+ 96D4 1A               ld a,(de)
 261+ 96D5 AE               xor (hl)
 262+ 96D6 77               ld (hl),a
 263+ 96D7 2C               inc l
 264+ 96D8 1C               inc e
 265+ 96D9 1A               ld a,(de)
 266+ 96DA AE               xor (hl)
 267+ 96DB 77               ld (hl),a
 268+ 96DC 2C               inc l
 269+ 96DD 1C               inc e
 270+ 96DE 1A               ld a,(de)
 271+ 96DF AE               xor (hl)
 272+ 96E0 77               ld (hl),a
 273+ 96E1 13               inc de
 274+ 96E2
 275+ 96E2 E1               pop hl
 276+ 96E3
 277+ 96E3 1A               ld a,(de)
 278+ 96E4 AE               xor (hl)
 279+ 96E5 77               ld (hl),a
 280+ 96E6 2C               inc l
 281+ 96E7 1C               inc e
 282+ 96E8 1A               ld a,(de)
 283+ 96E9 AE               xor (hl)
 284+ 96EA 77               ld (hl),a
 285+ 96EB 2C               inc l
 286+ 96EC 1C               inc e
 287+ 96ED 1A               ld a,(de)
 288+ 96EE AE               xor (hl)
 289+ 96EF 77               ld (hl),a
 290+ 96F0 13               inc de
 291+ 96F1
 292+ 96F1 E1               pop hl
 293+ 96F2
 294+ 96F2 1A               ld a,(de)
 295+ 96F3 AE               xor (hl)
 296+ 96F4 77               ld (hl),a
 297+ 96F5 2C               inc l
 298+ 96F6 1C               inc e
 299+ 96F7 1A               ld a,(de)
 300+ 96F8 AE               xor (hl)
 301+ 96F9 77               ld (hl),a
 302+ 96FA 2C               inc l
 303+ 96FB 1C               inc e
 304+ 96FC 1A               ld a,(de)
 305+ 96FD AE               xor (hl)
 306+ 96FE 77               ld (hl),a
 307+ 96FF 13               inc de
 308+ 9700
 309+ 9700 ED 73 2E 8C      ld (Scanlines_album_SP),sp
 310+ 9704 ED 7B 0C 8C      ld sp,(Stack)
 311+ 9708 C9               ret
 312+ 9709
 313+ 9709              Pinta_lento
 314+ 9709
 315+ 9709 E1           1 pop hl
 316+ 970A
 317+ 970A 1A               ld a,(de)
 318+ 970B AE               xor (hl)
 319+ 970C 77               ld (hl),a
 320+ 970D 2C               inc l
 321+ 970E 1C               inc e
 322+ 970F 1A               ld a,(de)
 323+ 9710 AE               xor (hl)
 324+ 9711 77               ld (hl),a
 325+ 9712 2C               inc l
 326+ 9713 1C               inc e
 327+ 9714 1A               ld a,(de)
 328+ 9715 AE               xor (hl)
 329+ 9716 77               ld (hl),a
 330+ 9717 13               inc de
 331+ 9718
 332+ 9718 10 EF            djnz 1B
 333+ 971A
 334+ 971A ED 73 2E 8C      ld (Scanlines_album_SP),sp
 335+ 971E ED 7B 0C 8C      ld sp,(Stack)
 336+ 9722 C9               ret
# file closed: Pinta_Sprites.asm
2049  9723              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9723              ; ******************************************************************************************************************************************************************************************
   2+ 9723              ;
   3+ 9723              ; 26/06/23
   4+ 9723              ;
   5+ 9723              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9723
   7+ 9723              Draw
   8+ 9723
   9+ 9723 CD C9 99     	call Prepara_draw
  10+ 9726 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9727 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9728 28 05        	jr z,2F
  13+ 972A
  14+ 972A 3A DE 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 972D 18 0C        	jr 1F
  16+ 972F
  17+ 972F 2A DC 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9732 22 CF 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9735 CD C1 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9738              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9738
  22+ 9738 CD 68 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 973B
  24+ 973B 3A CC 8B     1 ld a,(Ctrl_0)
  25+ 973E CB 6F        	bit 5,a
  26+ 9740 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9742
  28+ 9742 CD 57 97     	call Comprueba_limite_horizontal
  29+ 9745 CD E7 97     	call Comprueba_limite_vertical
  30+ 9748
  31+ 9748              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9748              ; -----------------------
  33+ 9748              ; -----------------------
  34+ 9748              ; -----------------------
  35+ 9748
  36+ 9748 CD 3D 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 974B CD 74 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 974E
  39+ 974E 3A CC 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9751 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9753 32 CC 8B     	ld (Ctrl_0),a
  42+ 9756
  43+ 9756 C9           	ret
  44+ 9757
  45+ 9757              ; *******************************************************************************************************************************************************************************************
  46+ 9757              ;	21/01/23
  47+ 9757              ;
  48+ 9757              ; 	Comprueba_limite_horizontal.
  49+ 9757              ;
  50+ 9757              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9757              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9757              ;
  53+ 9757              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9757              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9757              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9757              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9757
  58+ 9757
  59+ 9757
  60+ 9757 3A CC 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 975A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 975C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 975E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9760 32 CC 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9763 18 09            jr 6F
  66+ 9765 CB 5F        1 bit 3,a
  67+ 9767 28 0A            jr z,2F
  68+ 9769 E6 F7            and $f7
  69+ 976B 32 CC 8B         ld (Ctrl_0),a
  70+ 976E CD C1 98     6 call Inicializacion
  71+ 9771 18 5B            jr 5F
  72+ 9773 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9774
  74+ 9774              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9774              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9774
  77+ 9774 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9775 2A E0 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9778 CD BD 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 977B 67           	ld h,a
  81+ 977C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 977D CD BD 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9780 67           	ld h,a
  84+ 9781 A7           	and a
  85+ 9782 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9784 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9785 3A DE 8B     	ld a,(Cuad_objeto)
  88+ 9788 FE 02        	cp 2
  89+ 978A 38 1E        	jr c,3F
  90+ 978C 28 1C        	jr z,3F
  91+ 978E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 978F 28 23            jr z,7F
  93+ 9791 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9793 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9795 E1           	pop hl
  96+ 9796
  97+ 9796              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9796              ; _para indicar con E="2" en caso necesario.
  99+ 9796
 100+ 9796 E5               push hl
 101+ 9797 C5               push bc
 102+ 9798 CD BD 94     	call calcula_tercio
 103+ 979B FE 01        	cp 1
 104+ 979D 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 979F CD CF 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A2 28 26            jr z,9F
 107+ 97A4 38 24            jr c,9F
 108+ 97A6 1E 00        11 ld e,0
 109+ 97A8 18 22            jr 8F
 110+ 97AA 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97AB 28 07        	jr z, 7F
 112+ 97AD 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97AF 1E 00         	ld e,0
 114+ 97B1 E1           	pop hl
 115+ 97B2 18 04        	jr 4F
 116+ 97B4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97B6 18 15            jr 10F
 118+ 97B8
 119+ 97B8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97B8              ; _para indicar con E="2" en caso necesario.
 121+ 97B8
 122+ 97B8 E5           4 push hl
 123+ 97B9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97BA CD BD 94     	call calcula_tercio
 125+ 97BD FE 01        	cp 1
 126+ 97BF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C1 CD CF 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C4 28 04            jr z,9F
 129+ 97C6 30 02            jr nc,9F
 130+ 97C8 18 02        	jr 8F
 131+ 97CA 1E 02        9 ld e,2
 132+ 97CC C1           8 pop bc
 133+ 97CD E1           10 pop hl
 134+ 97CE C9           5 ret
 135+ 97CF
 136+ 97CF              ; --------------------
 137+ 97CF              ;
 138+ 97CF              ; 25/08/22
 139+ 97CF
 140+ 97CF CD BD 94     Comprueba_centro call calcula_tercio
 141+ 97D2 67               ld h,a
 142+ 97D3 08           	ex af,af
 143+ 97D4 FE 02        	cp 2
 144+ 97D6 38 07        	jr c,1F
 145+ 97D8 28 05        	jr z,1F
 146+ 97DA 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97DD 18 03        	jr 2F
 148+ 97DF 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E2 08           2 ex af,af
 150+ 97E3 A7               and a
 151+ 97E4 ED 42            sbc hl,bc
 152+ 97E6 C9               ret
 153+ 97E7
 154+ 97E7              ; *********************************************************************************************************************************************************************************************
 155+ 97E7              ;
 156+ 97E7              ;   16/8/22
 157+ 97E7              ;
 158+ 97E7              ;	Comprueba_limite_vertical
 159+ 97E7              ;
 160+ 97E7              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97E7              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97E7              ;
 163+ 97E7
 164+ 97E7 2A CF 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97EA 7D           	ld a,l
 166+ 97EB E6 1F        	and $1F
 167+ 97ED 57           	ld d,a
 168+ 97EE 3A E2 8B     	ld a,(Limite_vertical)
 169+ 97F1 BA           	cp d 											; Límite - Posición.
 170+ 97F2 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F3 3A DE 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97F6 CB 47        	bit 0,a
 173+ 97F8 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97FA
 175+ 97FA              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97FA
 177+ 97FA 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97FB 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97FD
 180+ 97FD              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97FD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97FD
 183+ 97FD 3A C0 8B         ld a,(Coordenada_X)
 184+ 9800 16 0F            ld d,Centro_izquierda
 185+ 9802 A7               and a
 186+ 9803 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9804 28 1E            jr z,3F
 188+ 9806 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9808              ;                                                    ; _salimos sin modificar nada.
 190+ 9808 18 0E            jr 2F
 191+ 980A 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 980B 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 980D
 194+ 980D              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 980D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 980D
 197+ 980D 3A C0 8B         ld a,(Coordenada_X)
 198+ 9810 16 10            ld d,Centro_derecha
 199+ 9812 A7               and a
 200+ 9813 92               sub d
 201+ 9814 28 0E            jr z,3F
 202+ 9816 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9818              ;                                                    ; _salimos sin modificar nada.
 204+ 9818 CB 43        2 bit 0,e
 205+ 981A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 981C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 981D CD B1 98         call Modificaccionne
 208+ 9820 C1           	pop bc
 209+ 9821 CD C1 98         call Inicializacion
 210+ 9824 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9825
 212+ 9825              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9825
 214+ 9825 C5           4 push bc
 215+ 9826 01 CE 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9829 0A           	ld a,(bc)
 217+ 982A 3D           	dec a
 218+ 982B 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 982C 7D           	ld a,l
 220+ 982D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 982E CB 47        	bit 0,a
 222+ 9830 28 03        	jr z,5F
 223+ 9832 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9833 18 2E        	jr 7F
 225+ 9835
 226+ 9835              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9835
 228+ 9835 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9836 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9837 3A CC 8B     	ld a,(Ctrl_0)
 231+ 983A CB 4F        	bit 1,a
 232+ 983C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 983E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 983F
 235+ 983F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 983F
 237+ 983F 1C               inc e
 238+ 9840 1D               dec e
 239+ 9841 20 07            jr nz,12F
 240+ 9843 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9844 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9845 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9848 18 44        13 jr 9F
 244+ 984A CB 43        12 bit 0,e
 245+ 984C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 984E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 984E C1           	pop bc
 248+ 984F 18 D3        	jr 3B
 249+ 9851 80           14 add b
 250+ 9852 6F               ld l,a
 251+ 9853 22 CF 8B     	ld (Posicion_actual),hl
 252+ 9856 CD B1 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9859 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 985B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 985D 32 CC 8B         ld (Ctrl_0),a
 256+ 9860 F1           	pop af
 257+ 9861 18 2B        	jr 9F
 258+ 9863
 259+ 9863              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9863
 261+ 9863 F5           7 push af
 262+ 9864 3A CC 8B     	ld a,(Ctrl_0)
 263+ 9867 CB 47        	bit 0,a
 264+ 9869 20 1D        	jr nz,8F
 265+ 986B F1           	pop af
 266+ 986C
 267+ 986C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 986C
 269+ 986C 1C           	inc e
 270+ 986D 1D               dec e
 271+ 986E 20 07            jr nz,10F
 272+ 9870 90           	sub b
 273+ 9871 6F               ld l,a
 274+ 9872 22 CF 8B     	ld (Posicion_actual),hl
 275+ 9875 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9877              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9877 CB 43        10 bit 0,e
 278+ 9879 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 987B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 987B C1           	pop bc
 281+ 987C 18 A6        	jr 3B
 282+ 987E 90           16 sub b
 283+ 987F 6F               ld l,a
 284+ 9880 22 CF 8B     	ld (Posicion_actual),hl
 285+ 9883 CD B1 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9886 18 06            jr 9F
 287+ 9888 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 988A 32 CC 8B         ld (Ctrl_0),a
 289+ 988D F1           	pop af
 290+ 988E C1           9 pop bc
 291+ 988F 1E 00        	ld e,0
 292+ 9891 CD C1 98         call Inicializacion
 293+ 9894 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9895 08           	ex af,af
 295+ 9896 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9897 18 8B            jr 3B
 297+ 9899
 298+ 9899              ; --------------------
 299+ 9899
 300+ 9899 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 989B CD E4 99     1 call PreviousScan
 302+ 989E 10 FB            djnz 1B
 303+ 98A0 22 CF 8B     	ld (Posicion_actual),hl
 304+ 98A3 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A4 C9           	ret
 306+ 98A5
 307+ 98A5              ; --------------------
 308+ 98A5
 309+ 98A5 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98A7 CD D5 99     1 call NextScan
 311+ 98AA 10 FB            djnz 1B
 312+ 98AC 22 CF 8B     	ld (Posicion_actual),hl
 313+ 98AF AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B0 C9           	ret
 315+ 98B1
 316+ 98B1              ; --------------------
 317+ 98B1              ;
 318+ 98B1              ;	22/01/23
 319+ 98B1              ;
 320+ 98B1              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B1
 324+ 98B1
 325+ 98B1              Modificaccionne
 326+ 98B1
 327+ 98B1 3A DE 8B     	ld a,(Cuad_objeto)
 328+ 98B4 FE 02        	cp 2
 329+ 98B6 CC 99 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98B9 DC 99 98         call c,Modifica_Pos_actual
 331+ 98BC C8           	ret z
 332+ 98BD CD A5 98         call Modifica_Pos_actual2
 333+ 98C0 C9               ret
 334+ 98C1
 335+ 98C1              ; *************************************************************************************************************************************************************************************************
 336+ 98C1              ;
 337+ 98C1              ;	13/8/22
 338+ 98C1              ;
 339+ 98C1              ;	Inicializacion
 340+ 98C1              ;
 341+ 98C1              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C1              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C1              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C1              ;
 345+ 98C1              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C1              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C1              ;	_ desaparece/aparece.
 348+ 98C1
 349+ 98C1              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C1              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C1              ;
 352+ 98C1              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C1              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C1              ; 		   [E] ="0"
 355+ 98C1
 356+ 98C1              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C1
 358+ 98C1 CD BD 94     Inicializacion call calcula_tercio
 359+ 98C4 28 36        	jr z,primit
 360+ 98C6 E6 02        	and 2
 361+ 98C8 20 07        	jr nz,segmit
 362+ 98CA 7D           	ld a,l
 363+ 98CB FE 7F        	cp $7f
 364+ 98CD 38 2D        	jr c,primit
 365+ 98CF 28 2B        	jr z,primit
 366+ 98D1 CD 37 99     segmit call column
 367+ 98D4 38 13        	jr c,tercuad
 368+ 98D6 3E 04        cuarcuad ld a,4
 369+ 98D8 32 DE 8B     	ld (Cuad_objeto),a
 370+ 98DB 21 20 48     	ld hl,$4820
 371+ 98DE 22 E0 8B     	ld (Limite_horizontal),hl
 372+ 98E1 21 E2 8B     	ld hl,Limite_vertical
 373+ 98E4 36 0D        	ld (hl),$0d
 374+ 98E6 08           	ex af,af
 375+ 98E7 18 3C        	jr 1F
 376+ 98E9              tercuad
 377+ 98E9 3E 03        	ld a,3
 378+ 98EB 32 DE 8B     	ld (Cuad_objeto),a
 379+ 98EE 21 20 48     	ld hl,$4820
 380+ 98F1 22 E0 8B     	ld (Limite_horizontal),hl
 381+ 98F4 21 E2 8B     	ld hl,Limite_vertical
 382+ 98F7 36 12        	ld (hl),$12
 383+ 98F9 08           	ex af,af
 384+ 98FA 18 29        	jr 1F
 385+ 98FC CD 37 99     primit call column
 386+ 98FF 38 13        	jr c, primcuad
 387+ 9901              segcuad
 388+ 9901 3E 02        	ld a,2
 389+ 9903 32 DE 8B     	ld (Cuad_objeto),a
 390+ 9906 21 C0 4F     	ld hl,$4fc0
 391+ 9909 22 E0 8B     	ld (Limite_horizontal),hl
 392+ 990C 21 E2 8B     	ld hl,Limite_vertical
 393+ 990F 36 0D        	ld (hl),$0d
 394+ 9911 08           	ex af,af
 395+ 9912 18 11        	jr 1F
 396+ 9914              primcuad
 397+ 9914 3E 01        	ld a,1
 398+ 9916 32 DE 8B     	ld (Cuad_objeto),a
 399+ 9919 21 C0 4F     	ld hl,$4fc0
 400+ 991C 22 E0 8B     	ld (Limite_horizontal),hl
 401+ 991F 21 E2 8B     	ld hl,Limite_vertical
 402+ 9922 36 12        	ld (hl),$12
 403+ 9924 08           	ex af,af
 404+ 9925
 405+ 9925 C5           1 push bc
 406+ 9926 E5           	push hl
 407+ 9927 D5           	push de
 408+ 9928
 409+ 9928 2A CF 8B     	ld hl,(Posicion_actual)
 410+ 992B CD DB 94     	call Genera_coordenadas
 411+ 992E
 412+ 992E D1           	pop de
 413+ 992F E1           	pop hl
 414+ 9930 C1           	pop bc
 415+ 9931
 416+ 9931 21 CC 8B     	ld hl,Ctrl_0
 417+ 9934 CB EE        	set 5,(hl)
 418+ 9936 C9           	ret
 419+ 9937
 420+ 9937              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9937
 422+ 9937              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9937              ;
 424+ 9937              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9937
 426+ 9937 7D           column ld a,l
 427+ 9938 E6 1F        	and $1f
 428+ 993A FE 10         	cp $10
 429+ 993C C9            	ret
 430+ 993D
 431+ 993D              ; --------------------------------------------------------------------------------------------------------------------
 432+ 993D              ;
 433+ 993D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 993D              ;
 435+ 993D              ; 14/12/22
 436+ 993D              ;
 437+ 993D              ;	Modifica: A y BC.
 438+ 993D
 439+ 993D 3A DE 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9940 E6 01        	and 1
 441+ 9942 28 17        	jr z,1F
 442+ 9944
 443+ 9944              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9944
 445+ 9944 3A C0 8B     	ld a,(Coordenada_X)
 446+ 9947 47           	ld b,a
 447+ 9948 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9949 79           	ld a,c
 449+ 994A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 994B 38 08        	jr c,2F
 451+ 994D 47           	ld b,a
 452+ 994E 79           	ld a,c
 453+ 994F 90           	sub b
 454+ 9950 32 DF 8B     	ld (Columnas),a
 455+ 9953 18 1B        	jr 4F
 456+ 9955 79           2 ld a,c
 457+ 9956 32 DF 8B     	ld (Columnas),a
 458+ 9959 18 15        	jr 4F
 459+ 995B
 460+ 995B              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 995B
 462+ 995B 3A C0 8B     1 ld a,(Coordenada_X)
 463+ 995E 81           	add c
 464+ 995F 3D           	dec a
 465+ 9960 D6 1F        	sub $1f
 466+ 9962 38 08        	jr c,3F
 467+ 9964 47           	ld b,a
 468+ 9965 79           	ld a,c
 469+ 9966 90           	sub b
 470+ 9967 32 DF 8B     	ld (Columnas),a
 471+ 996A 18 04        	jr 4F
 472+ 996C 79           3 ld a,c
 473+ 996D 32 DF 8B     	ld (Columnas),a
 474+ 9970 D9           4 exx
 475+ 9971 4F           	ld c,a
 476+ 9972 D9           	exx
 477+ 9973 C9            ret
 478+ 9974
 479+ 9974              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9974              ;
 481+ 9974              ;   19/7/23
 482+ 9974              ;
 483+ 9974              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9974              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9974              ;
 486+ 9974              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9974              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9974              ;
 489+ 9974              ;	DESTRUYE: HL,B Y A.
 490+ 9974
 491+ 9974 3A DE 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9977 FE 02        	cp 2
 493+ 9979 38 18        	jr c,1F
 494+ 997B 28 16        	jr z,1F
 495+ 997D E6 01        	and 1
 496+ 997F 28 0D        	jr z,3F
 497+ 9981
 498+ 9981              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9981
 500+ 9981 CD BD 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9984
 502+ 9984 7D           9 ld a,l
 503+ 9985 E6 1F        	and $1f
 504+ 9987 28 2A        	jr z,7F
 505+ 9989 2B           	dec hl
 506+ 998A 10 F8        	djnz 9B
 507+ 998C 18 25        	jr 7F
 508+ 998E
 509+ 998E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 998E
 511+ 998E 2A CF 8B     3 ld hl,(Posicion_actual)
 512+ 9991 18 20        	jr 7F
 513+ 9993
 514+ 9993 28 14        1 jr z,2F
 515+ 9995
 516+ 9995              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9995
 518+ 9995 CD BD 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9998
 520+ 9998 7D           4 ld a,l
 521+ 9999 E6 1F        	and $1f
 522+ 999B 28 03        	jr z,6F
 523+ 999D 2B           	dec hl
 524+ 999E 10 F8        	djnz 4B
 525+ 99A0 06 0F        6 ld b,15
 526+ 99A2 CD E4 99     5 call PreviousScan
 527+ 99A5 10 FB        	djnz 5B
 528+ 99A7 18 0A        	jr 7F
 529+ 99A9
 530+ 99A9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99A9
 532+ 99A9 CD BD 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99AC 06 0F        	ld b,15
 534+ 99AE CD E4 99     8 call PreviousScan
 535+ 99B1 10 FB        	djnz 8B
 536+ 99B3
 537+ 99B3 E5           7 push hl
 538+ 99B4 DD E1        	pop ix
 539+ 99B6
 540+ 99B6 2A D1 8B     	ld hl,(Puntero_objeto)
 541+ 99B9 E5           	push hl
 542+ 99BA FD E1        	pop iy
 543+ 99BC
 544+ 99BC C9           	ret
 545+ 99BD
 546+ 99BD              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99BD              ;
 548+ 99BD              ;	2/1/23
 549+ 99BD              ;
 550+ 99BD              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99BD              ;
 552+ 99BD              ;	Tras esta rutina tenemos:
 553+ 99BD              ;
 554+ 99BD              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99BD              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99BD              ;
 557+ 99BD              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99BD
 559+ 99BD 2A CF 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C0 3A DF 8B     	ld a,(Columnas)
 561+ 99C3 3D           	dec a
 562+ 99C4 20 01        	jr nz,1F
 563+ 99C6 3C           	inc a
 564+ 99C7 47           1 ld b,a
 565+ 99C8 C9           	ret
 566+ 99C9
 567+ 99C9              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99C9              ;
 569+ 99C9              ;	Prepara_draw
 570+ 99C9              ;
 571+ 99C9              ;	Es una rutina de carga.
 572+ 99C9              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99C9              ;
 574+ 99C9              ;	FUNCIONAMIENTO:
 575+ 99C9              ;
 576+ 99C9              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99C9              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99C9              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99C9              ;
 580+ 99C9              ;	DESTRUYE:
 581+ 99C9              ;
 582+ 99C9              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99C9
 584+ 99C9 21 CD 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99CC 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99CD 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99CE 4E           	ld c,(hl)
 588+ 99CF 2A CF 8B     	ld hl,(Posicion_actual)
 589+ 99D2 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D4 C9           	ret
 591+ 99D5
 592+ 99D5              ;----------------------------------------------------------------------------------------------------------------
 593+ 99D5              ;
 594+ 99D5              ;	5/08/22
 595+ 99D5              ;
 596+ 99D5              ;   NextScan.
 597+ 99D5              ;
 598+ 99D5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99D5              ;
 600+ 99D5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99D5              ;
 602+ 99D5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99D5              ;
 604+ 99D5              ;       DESTRUIDOS: AF y HL !!!
 605+ 99D5              ;
 606+ 99D5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99D5              ;
 608+ 99D5
 609+ 99D5 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99D6 7C               ld a,h
 611+ 99D7 E6 07            and 7
 612+ 99D9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99DA
 614+ 99DA 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99DB C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99DD 6F               ld l,a
 617+ 99DE D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99DF
 619+ 99DF 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E0 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E2 67               ld h,a
 622+ 99E3 C9               ret
 623+ 99E4
 624+ 99E4              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E4              ;
 626+ 99E4              ;	5/08/22
 627+ 99E4              ;
 628+ 99E4              ;   PreviousScan.
 629+ 99E4              ;
 630+ 99E4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E4              ;
 632+ 99E4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E4              ;
 634+ 99E4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E4              ;
 636+ 99E4              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E4              ;
 638+ 99E4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E4              ;
 640+ 99E4
 641+ 99E4 7C           PreviousScan ld a,h
 642+ 99E5 25               dec h               ; Dec H.
 643+ 99E6 E6 07            and 7
 644+ 99E8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99E9
 646+ 99E9 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99EA D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99EC 6F               ld l,a
 649+ 99ED D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99EE
 651+ 99EE 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99EF C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F1 67               ld h,a
 654+ 99F2 C9               ret
 655+ 99F3
 656+ 99F3
 657+ 99F3
 658+ 99F3
 659+ 99F3
 660+ 99F3
 661+ 99F3
 662+ 99F3
 663+ 99F3
 664+ 99F3
 665+ 99F3
 666+ 99F3
# file closed: Draw_XOR.asm
2050  99F3              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F3
   2+ 99F3              ; ******************************************************************************************************************************************************************************************
   3+ 99F3              ;
   4+ 99F3              ;   20/05/23
   5+ 99F3              ;
   6+ 99F3              ;	Recompone_posicion_inicio
   7+ 99F3              ;
   8+ 99F3              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F3              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F3              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F3              ;	_ a una u otra rutina.
  12+ 99F3
  13+ 99F3              Recompone_posicion_inicio
  14+ 99F3
  15+ 99F3 2A DC 8B     	ld hl,(Posicion_inicio)
  16+ 99F6 7D           	ld a,l
  17+ 99F7 E6 1F        	and $1f
  18+ 99F9 28 16        	jr z,1F
  19+ 99FB
  20+ 99FB FE 1F        	cp $1f
  21+ 99FD 28 0D        	jr z,3F
  22+ 99FF
  23+ 99FF 21 CB 8B     	ld hl,Ctrl_2
  24+ 9A02 CB C6        	set 0,(hl)
  25+ 9A04 2A D1 8B     	ld hl,(Puntero_objeto)
  26+ 9A07 22 FD 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A0A 18 08        	jr 2F
  28+ 9A0C
  29+ 9A0C CD BA 9B     3 call Mov_left
  30+ 9A0F 18 03        	jr 2F
  31+ 9A11
  32+ 9A11 CD 97 9A     1 call Mov_right
  33+ 9A14 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A17 22 D1 8B     	ld (Puntero_objeto),hl
  35+ 9A1A C9           	ret
  36+ 9A1B
  37+ 9A1B              ; ******************************************************************************************************************************************************************************************
  38+ 9A1B              ;
  39+ 9A1B              ;   27/05/23
  40+ 9A1B              ;
  41+ 9A1B              ;	Mov_down
  42+ 9A1B              ;
  43+ 9A1B              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A1B              ;
  45+ 9A1B              ;
  46+ 9A1B              Mov_down
  47+ 9A1B
  48+ 9A1B CD 85 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A1E              ;																	; _ repone (Puntero_objeto).
  50+ 9A1E 21 CC 8B     	ld hl,Ctrl_0
  51+ 9A21 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A23              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A23              ; 																	; _ en el caso de que no lo haya.
  54+ 9A23 3A E7 8B     	ld a,(Vel_down)
  55+ 9A26 47           	ld b,a
  56+ 9A27 2A CF 8B         ld hl,(Posicion_actual)
  57+ 9A2A CD BD 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A2D E6 02        	and 2
  59+ 9A2F 28 17        	jr z,1F
  60+ 9A31
  61+ 9A31              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A31              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A31
  64+ 9A31 7C           	ld a,h
  65+ 9A32 FE 57        	cp $57
  66+ 9A34 20 12        	jr nz,1F
  67+ 9A36
  68+ 9A36 7D           	ld a,l
  69+ 9A37 C6 20        	add $20
  70+ 9A39 30 0D        	jr nc,1F
  71+ 9A3B
  72+ 9A3B              ; ------------------------------
  73+ 9A3B              ;
  74+ 9A3B              ;	12/01/24
  75+ 9A3B
  76+ 9A3B              ;	call Reaparece_arriba
  77+ 9A3B CD 47 9D     	call Reinicio
  78+ 9A3E
  79+ 9A3E              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A3E
  81+ 9A3E 3A 34 8C     	ld a,(Ctrl_3)
  82+ 9A41 CB CF        	set 1,a
  83+ 9A43 32 34 8C     	ld (Ctrl_3),a
  84+ 9A46
  85+ 9A46 18 08        	jr 3F
  86+ 9A48              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A48              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A48              ; ------------------------------
  89+ 9A48
  90+ 9A48 CD D5 99     1 call NextScan
  91+ 9A4B 22 CF 8B     	ld (Posicion_actual),hl
  92+ 9A4E 10 DA            djnz 2B
  93+ 9A50 CD DB 94     3 call Genera_coordenadas
  94+ 9A53 C9           	ret
  95+ 9A54
  96+ 9A54              ; ******************************************************************************************************************************************************************************************
  97+ 9A54              ;
  98+ 9A54              ;   27/05/23
  99+ 9A54              ;
 100+ 9A54              ;	Mov_up
 101+ 9A54              ;
 102+ 9A54              ; 	Mueve el Sprite hacia arriba.
 103+ 9A54              ;
 104+ 9A54              ;
 105+ 9A54              Mov_up
 106+ 9A54
 107+ 9A54 CD 85 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A57              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A57 21 CC 8B     	ld hl,Ctrl_0
 110+ 9A5A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A5C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A5C              ; 																		; _ en el caso de que no lo haya.
 113+ 9A5C 3A E6 8B     	ld a,(Vel_up)
 114+ 9A5F 47           	ld b,a
 115+ 9A60 2A CF 8B     	ld hl,(Posicion_actual)
 116+ 9A63 CD BD 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A66 A7           	and a
 118+ 9A67 20 10        	jr nz,1F
 119+ 9A69
 120+ 9A69              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A69              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A69
 123+ 9A69 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A6A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A6C 20 0B            jr nz,1F
 126+ 9A6E 7D               ld a,l
 127+ 9A6F D6 20            sub $20
 128+ 9A71 30 06            jr nc,1F
 129+ 9A73 25               dec h
 130+ 9A74
 131+ 9A74              ; -----------------------------
 132+ 9A74 CD 28 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A77              ;	call Reinicio
 134+ 9A77              ; -----------------------------
 135+ 9A77
 136+ 9A77 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A79 CD E4 99     1 call PreviousScan
 138+ 9A7C 22 CF 8B     	ld (Posicion_actual),hl
 139+ 9A7F 10 E2            djnz 3B
 140+ 9A81 CD DB 94     2 call Genera_coordenadas
 141+ 9A84 C9           	ret
 142+ 9A85
 143+ 9A85              ; -----------------------------
 144+ 9A85              ;
 145+ 9A85              ;	27/5/23
 146+ 9A85              ;
 147+ 9A85              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A85              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A85              ;
 150+ 9A85              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A85              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A85              ;
 153+ 9A85              ;	Modifica: A y (Puntero_objeto).
 154+ 9A85
 155+ 9A85 3A CB 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A88 CB 47        	bit 0,a
 157+ 9A8A C8           	ret z
 158+ 9A8B CB 87        	res 0,a
 159+ 9A8D 32 CB 8B     	ld (Ctrl_2),a
 160+ 9A90 2A FD 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A93 22 D1 8B     	ld (Puntero_objeto),hl
 162+ 9A96 C9           	ret
 163+ 9A97
 164+ 9A97              ; ******************************************************************************************************************************************************************************************
 165+ 9A97              ;
 166+ 9A97              ;	19/10/22
 167+ 9A97              ;
 168+ 9A97              ;	Mov_right.
 169+ 9A97              ;
 170+ 9A97              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A97              ;
 172+ 9A97
 173+ 9A97 3A CC 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A9A CB 77        	bit 6,a
 175+ 9A9C 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A9E
 177+ 9A9E CD D6 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA1 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA2
 180+ 9AA2 21 CC 8B     	ld hl,Ctrl_0
 181+ 9AA5 CB E6        	set 4,(hl)
 182+ 9AA7 18 52        	jr 8F
 183+ 9AA9
 184+ 9AA9 21 CC 8B     10 ld hl,Ctrl_0
 185+ 9AAC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AAE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AAE              ; 																	; _ en el caso de que no lo haya.
 188+ 9AAE 3A C0 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB1 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB3 20 46        	jr nz,8F
 191+ 9AB5
 192+ 9AB5 3A D3 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AB8 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AB9 28 40        	jr z,8F
 195+ 9ABB
 196+ 9ABB              ; ---------- ---------- ----------
 197+ 9ABB              ;
 198+ 9ABB              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9ABB
 200+ 9ABB 3A E5 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9ABE FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC0 28 11        	jr z,1F
 203+ 9AC2 38 06        	jr c,6F
 204+ 9AC4 FE 04        	cp 4
 205+ 9AC6 28 14        	jr z,7F
 206+ 9AC8 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ACA
 208+ 9ACA              ; ---------- ---------- ----------
 209+ 9ACA              ;
 210+ 9ACA              ; Perfiles de velocidad
 211+ 9ACA              ;
 212+ 9ACA
 213+ 9ACA 3A D3 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ACD FE FE        	cp $fe
 215+ 9ACF 20 2A        	jr nz,8F
 216+ 9AD1 18 10        	jr 3F
 217+ 9AD3 3A D3 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AD6 FE FD        	cp $fd
 219+ 9AD8 20 21        	jr nz,8F
 220+ 9ADA 18 07        	jr 3F
 221+ 9ADC 3A D3 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ADF FE FB        	cp $fb
 223+ 9AE1 20 18        	jr nz,8F
 224+ 9AE3
 225+ 9AE3              ; ---------- ---------- ----------
 226+ 9AE3
 227+ 9AE3              3
 228+ 9AE3 CD 16 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AE6              ;	call Reinicio
 230+ 9AE6
 231+ 9AE6              ; ---------- ---------- ----------
 232+ 9AE6              ;
 233+ 9AE6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AE6
 235+ 9AE6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AE8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AE9 CD 02 9B     	call DESPLZ_DER
 238+ 9AEC C1           	pop bc
 239+ 9AED 10 F9        	djnz 5B
 240+ 9AEF 2A CF 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF2 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF3 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9AF6 CD DB 94     	call Genera_coordenadas
 244+ 9AF9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AFB
 246+ 9AFB              ; ---------- ---------- ----------
 247+ 9AFB
 248+ 9AFB 2A CF 8B     8 ld hl,(Posicion_actual)
 249+ 9AFE CD 02 9B     	call DESPLZ_DER
 250+ 9B01 C9           2 ret
 251+ 9B02
 252+ 9B02              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B02              ;
 254+ 9B02              ;	22/9/22
 255+ 9B02              ;
 256+ 9B02
 257+ 9B02 CD 11 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B05 CD 5D 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B08 CD 86 9B         call Ciclo_completo
 260+ 9B0B 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B0E CB FE        	set 7,(hl)
 262+ 9B10 C9           	ret
 263+ 9B11
 264+ 9B11              ; ******************************************************************************************************************************************************************************************
 265+ 9B11              ;	15/02/23
 266+ 9B11              ;
 267+ 9B11
 268+ 9B11 3A E5 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B14 47           	ld b,a
 270+ 9B15 2A D8 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B18 23           1 inc hl
 272+ 9B19 23           	inc hl
 273+ 9B1A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B1C 22 D8 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B1F CD BC 90     	call Extrae_address
 276+ 9B22 22 D1 8B     	ld (Puntero_objeto),hl
 277+ 9B25
 278+ 9B25              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B25
 280+ 9B25              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B25              ; Cuántos movimientos hemos hecho ??
 282+ 9B25              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B25
 284+ 9B25 2A D4 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B28 EB           	ex de,hl
 286+ 9B29 A7           	and a
 287+ 9B2A ED 52        	sbc hl,de
 288+ 9B2C CB 3D        	srl l
 289+ 9B2E 3E 08        6 ld a,8
 290+ 9B30 95           	sub l
 291+ 9B31 30 1E        	jr nc,3F
 292+ 9B33
 293+ 9B33              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B33              ; B="0".
 295+ 9B33
 296+ 9B33 04           4 inc b
 297+ 9B34 3C           	inc a
 298+ 9B35 20 FC        	jr nz,4B
 299+ 9B37 78           	ld a,b
 300+ 9B38 08           	ex af,af
 301+ 9B39 2A D4 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B3C 23           5 inc hl
 303+ 9B3D 23           	inc hl
 304+ 9B3E 10 FC        	djnz 5B
 305+ 9B40 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B43 CD BC 90     	call Extrae_address
 307+ 9B46 22 D1 8B     	ld (Puntero_objeto),hl
 308+ 9B49
 309+ 9B49              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B49              ; _(Posicion_actual).
 311+ 9B49
 312+ 9B49 21 CF 8B     	ld hl,Posicion_actual
 313+ 9B4C 34           	inc (hl)
 314+ 9B4D 08               ex af,af
 315+ 9B4E 6F           	ld l,a
 316+ 9B4F 18 DD        	jr 6B
 317+ 9B51
 318+ 9B51              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B51
 320+ 9B51 47           3 ld b,a
 321+ 9B52 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B55 23           2 inc hl
 323+ 9B56 23           	inc hl
 324+ 9B57 10 FC        	djnz 2B
 325+ 9B59 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B5C C9           8 ret
 327+ 9B5D
 328+ 9B5D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B5D              ;
 330+ 9B5D              ;	24/7/22
 331+ 9B5D              ;
 332+ 9B5D              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B5D              ;
 334+ 9B5D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B5D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B5D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B5D
 338+ 9B5D 3A D3 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B60 A7           	and a
 340+ 9B61 20 1F        	jr nz,1F
 341+ 9B63 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B65 32 D3 8B         ld (CTRL_DESPLZ),a
 343+ 9B68
 344+ 9B68 21 CE 8B     	ld hl,Columns
 345+ 9B6B 34           	inc (hl)
 346+ 9B6C 3A DE 8B     	ld a,(Cuad_objeto)
 347+ 9B6F E6 01        	and 1
 348+ 9B71 28 0F        	jr z,1F
 349+ 9B73 2A CF 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B76 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B77 22 CF 8B     	ld (Posicion_actual),hl
 352+ 9B7A CD DB 94     	call Genera_coordenadas
 353+ 9B7D CD E2 9C     	call Inc_CTRL_DESPLZ
 354+ 9B80 18 03        	jr 2F
 355+ 9B82 CD E2 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B85 C9           2 ret
 357+ 9B86
 358+ 9B86              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B86              ;
 360+ 9B86              ;	24/7/22
 361+ 9B86              ;
 362+ 9B86              ;	Ciclo_completo.
 363+ 9B86              ;
 364+ 9B86              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B86              ;
 366+ 9B86              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B86              ; 	Decrementamos (Columns).
 368+ 9B86              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B86              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B86
 371+ 9B86
 372+ 9B86 3A D3 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B89 FE FF        	cp $ff
 374+ 9B8B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B8D E6 F0        	and $f0
 376+ 9B8F 20 28        	jr nz,3F
 377+ 9B91
 378+ 9B91              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B91
 380+ 9B91 3A D3 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B94 47           	ld b,a
 382+ 9B95 3E F8        	ld a,$f8
 383+ 9B97 80           	add b
 384+ 9B98 32 D3 8B     	ld (CTRL_DESPLZ),a
 385+ 9B9B 18 1C        	jr 3F
 386+ 9B9D 21 CE 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA0 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA1 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA2 32 D3 8B     	ld (CTRL_DESPLZ),a
 390+ 9BA5 3A DE 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BA8 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BAA 20 0A        	jr nz,2F
 393+ 9BAC 2A CF 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BAF 23           	inc hl
 395+ 9BB0 22 CF 8B     	ld (Posicion_actual),hl
 396+ 9BB3 CD DB 94     	call Genera_coordenadas
 397+ 9BB6
 398+ 9BB6              ; Inicia el puntero de Sprite.
 399+ 9BB6
 400+ 9BB6 CD D1 90     2 call Inicia_puntero_objeto_der
 401+ 9BB9 C9           3 ret
 402+ 9BBA
 403+ 9BBA              ; ******************************************************************************************************************************************************************************************
 404+ 9BBA              ;
 405+ 9BBA              ;	15/02/23
 406+ 9BBA              ;
 407+ 9BBA              ;	Mov_left.
 408+ 9BBA              ;
 409+ 9BBA              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BBA              ;
 411+ 9BBA              Mov_left
 412+ 9BBA
 413+ 9BBA 21 CC 8B     	ld hl,Ctrl_0
 414+ 9BBD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BBF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BBF              ; 																	; _ en el caso de que no lo haya.
 417+ 9BBF 3A CC 8B     	ld a,(Ctrl_0)
 418+ 9BC2 CB 77        	bit 6,a
 419+ 9BC4 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BC6
 421+ 9BC6 CD DC 9C     	call Stop_Amadeus_left
 422+ 9BC9 C8           	ret z
 423+ 9BCA 20 4A        	jr nz,8F
 424+ 9BCC
 425+ 9BCC 3A C0 8B     11 ld a,(Coordenada_X)
 426+ 9BCF A7           	and a
 427+ 9BD0 20 44        	jr nz,8F
 428+ 9BD2
 429+ 9BD2 3A D3 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BD5 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BD6 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BD8
 433+ 9BD8              ; ---------- ---------- ----------
 434+ 9BD8
 435+ 9BD8 3A E4 8B     	ld a,(Vel_left)
 436+ 9BDB FE 02        	cp 2
 437+ 9BDD 28 0F        	jr z,1F
 438+ 9BDF 38 04        	jr c,6F
 439+ 9BE1 FE 04        	cp 4
 440+ 9BE3 28 12        	jr z,7F
 441+ 9BE5
 442+ 9BE5              ; ---------- ---------- ----------
 443+ 9BE5
 444+ 9BE5 3A D3 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BE8 FE F8        	cp $f8
 446+ 9BEA 20 2A        	jr nz,8F
 447+ 9BEC 18 10        	jr 4F
 448+ 9BEE 3A D3 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BF1 FE F9        	cp $f9
 450+ 9BF3 20 21        	jr nz,8F
 451+ 9BF5 18 07        	jr 4F
 452+ 9BF7 3A D3 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BFA FE FB        	cp $fb
 454+ 9BFC 20 18        	jr nz,8F
 455+ 9BFE
 456+ 9BFE              ; ---------- ---------- ----------
 457+ 9BFE
 458+ 9BFE              4
 459+ 9BFE CD 04 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C01              ;	call Reinicio
 461+ 9C01
 462+ 9C01              ; ---------- ---------- ----------
 463+ 9C01
 464+ 9C01 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C03 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C04
 467+ 9C04              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C04              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C04
 470+ 9C04 CD 1D 9C     	call DESPLZ_IZQ
 471+ 9C07 C1           	pop bc
 472+ 9C08 10 F9        	djnz 5B
 473+ 9C0A 2A CF 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C0D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C0E 22 CF 8B     	ld (Posicion_actual),hl
 476+ 9C11 CD DB 94     	call Genera_coordenadas
 477+ 9C14 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C16
 479+ 9C16              ; ---------- ---------- ----------
 480+ 9C16
 481+ 9C16              ; Movemos, no hay recolocación.
 482+ 9C16
 483+ 9C16 2A CF 8B     8 ld hl,(Posicion_actual)
 484+ 9C19 CD 1D 9C     	call DESPLZ_IZQ
 485+ 9C1C C9           2 ret
 486+ 9C1D
 487+ 9C1D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C1D              ;
 489+ 9C1D              ;	22/9/22
 490+ 9C1D
 491+ 9C1D              DESPLZ_IZQ
 492+ 9C1D
 493+ 9C1D CD 2C 9C     	call Desplaza_izquierda
 494+ 9C20 CD 78 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C23 CD A0 9C     	call Ciclo_completo_2
 496+ 9C26 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C29 CB BE        	res 7,(hl)
 498+ 9C2B C9           	ret
 499+ 9C2C
 500+ 9C2C              Desplaza_izquierda
 501+ 9C2C
 502+ 9C2C 3A E4 8B     	ld a,(Vel_left)
 503+ 9C2F 47           	ld b,a
 504+ 9C30 2A DA 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C33 23           1 inc hl
 506+ 9C34 23           	inc hl
 507+ 9C35 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C37 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C3A CD BC 90     	call Extrae_address
 510+ 9C3D 22 D1 8B     	ld (Puntero_objeto),hl
 511+ 9C40
 512+ 9C40              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C40
 514+ 9C40              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C40              ; Cuántos movimientos hemos hecho ??
 516+ 9C40              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C40
 518+ 9C40 2A D6 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C43 EB           	ex de,hl
 520+ 9C44 A7           	and a
 521+ 9C45 ED 52        	sbc hl,de
 522+ 9C47 CB 3D        	srl l
 523+ 9C49 3E 08        6 ld a,8
 524+ 9C4B 95           	sub l
 525+ 9C4C 30 1E        	jr nc,3F
 526+ 9C4E
 527+ 9C4E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C4E              ; B="0".
 529+ 9C4E
 530+ 9C4E 04           4 inc b
 531+ 9C4F 3C           	inc a
 532+ 9C50 20 FC        	jr nz,4B
 533+ 9C52 78           	ld a,b
 534+ 9C53 08           	ex af,af
 535+ 9C54 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C57 23           5 inc hl
 537+ 9C58 23           	inc hl
 538+ 9C59 10 FC        	djnz 5B
 539+ 9C5B 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C5E CD BC 90     	call Extrae_address
 541+ 9C61 22 D1 8B     	ld (Puntero_objeto),hl
 542+ 9C64
 543+ 9C64              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C64              ; _(Posicion_actual).
 545+ 9C64
 546+ 9C64 21 CF 8B     	ld hl,Posicion_actual
 547+ 9C67 35           	dec (hl)
 548+ 9C68 08           	ex af,af
 549+ 9C69 6F           	ld l,a
 550+ 9C6A 18 DD        	jr 6B
 551+ 9C6C
 552+ 9C6C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C6C
 554+ 9C6C 47           3 ld b,a
 555+ 9C6D 2A D4 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C70 23           2 inc hl
 557+ 9C71 23           	inc hl
 558+ 9C72 10 FC        	djnz 2B
 559+ 9C74 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C77 C9           8 ret
 561+ 9C78
 562+ 9C78              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C78              ;
 564+ 9C78              ;	modifica_parametros_1er_DESPLZ
 565+ 9C78              ;
 566+ 9C78              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C78              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C78              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C78
 570+ 9C78 3A D3 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C7B A7           	and a
 572+ 9C7C 20 1E        	jr nz,1F
 573+ 9C7E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C7F 32 D3 8B         ld (CTRL_DESPLZ),a
 575+ 9C82 21 CE 8B     	ld hl,Columns
 576+ 9C85 34           	inc (hl)
 577+ 9C86 3A DE 8B     	ld a,(Cuad_objeto)
 578+ 9C89 E6 01        	and 1
 579+ 9C8B 20 0F        	jr nz,1F
 580+ 9C8D 2A CF 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C90 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C91 22 CF 8B     	ld (Posicion_actual),hl
 583+ 9C94 CD DB 94     	call Genera_coordenadas
 584+ 9C97 CD F3 9C     	call Dec_CTRL_DESPLZ
 585+ 9C9A 18 03        	jr 2F
 586+ 9C9C CD F3 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C9F C9           2 ret
 588+ 9CA0
 589+ 9CA0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA0
 591+ 9CA0 3A D3 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA3 FE F7        	cp $f7
 593+ 9CA5 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CA7 30 2C        	jr nc,3F
 595+ 9CA9
 596+ 9CA9              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CA9
 598+ 9CA9 06 00        	ld b,0
 599+ 9CAB 04           4 inc b
 600+ 9CAC 3C           	inc a
 601+ 9CAD FE F7        	cp $f7
 602+ 9CAF 20 FA        	jr nz,4B
 603+ 9CB1 3E FF        	ld a,$ff
 604+ 9CB3 90           	sub b
 605+ 9CB4 32 D3 8B     	ld (CTRL_DESPLZ),a
 606+ 9CB7 18 1C        	jr 3F
 607+ 9CB9
 608+ 9CB9              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CB9
 610+ 9CB9 21 CE 8B     1 ld hl,Columns
 611+ 9CBC 35           	dec (hl)
 612+ 9CBD AF           	xor a
 613+ 9CBE 32 D3 8B     	ld (CTRL_DESPLZ),a
 614+ 9CC1 3A DE 8B     	ld a,(Cuad_objeto)
 615+ 9CC4 E6 01        	and 1
 616+ 9CC6 28 0A        	jr z,2F
 617+ 9CC8 2A CF 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CCB 2B           	dec hl
 619+ 9CCC 22 CF 8B     	ld (Posicion_actual),hl
 620+ 9CCF CD DB 94     	call Genera_coordenadas
 621+ 9CD2
 622+ 9CD2              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD2
 624+ 9CD2 CD E4 90     2 call Inicia_puntero_objeto_izq
 625+ 9CD5 C9           3 ret
 626+ 9CD6
 627+ 9CD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CD6              ;
 629+ 9CD6              ;	19/10/22
 630+ 9CD6              ;
 631+ 9CD6              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CD6              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CD6
 634+ 9CD6 3A C0 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CD9 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CDB C9           	ret
 637+ 9CDC
 638+ 9CDC              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CDC              ;
 640+ 9CDC              ;	19/10/22
 641+ 9CDC              ;
 642+ 9CDC              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CDC              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CDC
 645+ 9CDC 3A C0 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CDF FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE1 C9           	ret
 648+ 9CE2
 649+ 9CE2              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE2              ;
 651+ 9CE2              ;	24/7/22
 652+ 9CE2              ;
 653+ 9CE2              ;	Inc_CTRL_DESPLZ
 654+ 9CE2              ;
 655+ 9CE2              ;
 656+ 9CE2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE2
 658+ 9CE2 21 D3 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CE5 3A E5 8B     	ld a,(Vel_right)
 660+ 9CE8 A7           	and a
 661+ 9CE9 28 06        	jr z,1F
 662+ 9CEB 47           	ld b,a
 663+ 9CEC 34           3 inc (hl)
 664+ 9CED 10 FD        	djnz 3B
 665+ 9CEF 18 01        	jr 2F
 666+ 9CF1 34           1 inc (hl)
 667+ 9CF2 C9           2 ret
 668+ 9CF3
 669+ 9CF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF3              ;
 671+ 9CF3              ;	5/2/23
 672+ 9CF3              ;
 673+ 9CF3              ;	Dec_CTRL_DESPLZ
 674+ 9CF3              ;
 675+ 9CF3              ;
 676+ 9CF3              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF3
 678+ 9CF3 21 D3 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CF6 3A E4 8B     	ld a,(Vel_left)
 680+ 9CF9 A7           	and a
 681+ 9CFA 28 06        	jr z,1F
 682+ 9CFC 47           	ld b,a
 683+ 9CFD 35           3 dec (hl)
 684+ 9CFE 10 FD        	djnz 3B
 685+ 9D00 18 01        	jr 2F
 686+ 9D02 35           1 dec (hl)
 687+ 9D03 C9           2 ret
 688+ 9D04
 689+ 9D04              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D04
 691+ 9D04 2A CF 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D07 01 1F 00     	ld bc,31
 693+ 9D0A A7           	and a
 694+ 9D0B ED 4A        	adc hl,bc
 695+ 9D0D 22 CF 8B     	ld (Posicion_actual),hl
 696+ 9D10 21 CC 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D13 CB C6        	set 0,(hl)
 698+ 9D15 C9           	ret
 699+ 9D16
 700+ 9D16              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D16
 702+ 9D16 2A CF 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D19 01 1F 00     	ld bc,31
 704+ 9D1C A7           	and a
 705+ 9D1D ED 42        	sbc hl,bc
 706+ 9D1F 22 CF 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D22 21 CC 8B     	ld hl,Ctrl_0
 708+ 9D25 CB CE        	set 1,(hl)
 709+ 9D27 C9           	ret
 710+ 9D28
 711+ 9D28              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D28
 713+ 9D28 24           Reaparece_abajo inc h
 714+ 9D29 01 E0 17     	ld bc,$17e0
 715+ 9D2C A7           	and a
 716+ 9D2D ED 4A        	adc hl,bc
 717+ 9D2F 22 CF 8B     	ld (Posicion_actual),hl
 718+ 9D32 21 CC 8B     	ld hl,Ctrl_0
 719+ 9D35 CB D6        	set 2,(hl)
 720+ 9D37 C9           	ret
 721+ 9D38
 722+ 9D38              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D38
 724+ 9D38 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D3B A7           	and a
 726+ 9D3C ED 42        	sbc hl,bc
 727+ 9D3E 22 CF 8B     	ld (Posicion_actual),hl
 728+ 9D41 21 CC 8B     	ld hl,Ctrl_0
 729+ 9D44 CB DE        	set 3,(hl)
 730+ 9D46 C9           	ret
 731+ 9D47
 732+ 9D47              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D47              ;
 734+ 9D47              ;	15/07/23
 735+ 9D47
 736+ 9D47              Reinicio
 737+ 9D47
 738+ 9D47              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D47
 740+ 9D47 AF           	xor a
 741+ 9D48 21 F4 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D4B CD 69 9D     	call Limpia_contenido_hl
 743+ 9D4E
 744+ 9D4E 21 CF 8B     	ld hl,Posicion_actual
 745+ 9D51 CD 69 9D     	call Limpia_contenido_hl
 746+ 9D54
 747+ 9D54 CD BD 92     	call Inicializa_Puntero_indice_mov
 748+ 9D57 CD 68 9E     	call Inicia_Puntero_mov
 749+ 9D5A
 750+ 9D5A 21 F6 8B     	ld hl,Incrementa_puntero
 751+ 9D5D 06 05        	ld b,5
 752+ 9D5F 77           1 ld (hl),a
 753+ 9D60 23           	inc hl
 754+ 9D61 10 FC        	djnz 1B
 755+ 9D63
 756+ 9D63 21 CB 8B     	ld hl,Ctrl_2
 757+ 9D66 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D68
 759+ 9D68 C9           	ret
 760+ 9D69
 761+ 9D69 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D6A 23           	inc hl
 763+ 9D6B 77           	ld (hl),a
 764+ 9D6C C9           	ret
 765+ 9D6D
 766+ 9D6D              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D6D              ;
 768+ 9D6D              ;	18/6/24
 769+ 9D6D              ;
 770+ 9D6D
 771+ 9D6D              Amadeus_a_izquierda
 772+ 9D6D
 773+ 9D6D              ;	Actualiza contador de movimientos.
 774+ 9D6D
 775+ 9D6D 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D70 35           	dec (hl)
 777+ 9D71 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D73
 779+ 9D73 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D76 2B           	dec hl
 781+ 9D77 2B           	dec hl
 782+ 9D78 2B           	dec hl
 783+ 9D79 2B           	dec hl
 784+ 9D7A 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D7D
 786+ 9D7D 21 34 8C     	ld hl,Ctrl_3
 787+ 9D80 CB EE        	set 5,(hl)
 788+ 9D82
 789+ 9D82 C9           	ret
 790+ 9D83
 791+ 9D83 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D84 C9           	ret
 793+ 9D85
 794+ 9D85
 795+ 9D85              Amadeus_a_derecha
 796+ 9D85
 797+ 9D85              ;	Actualiza contador de movimientos.
 798+ 9D85
 799+ 9D85 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D88 34           	inc (hl)
 801+ 9D89 3E 7A        	ld a,$7a
 802+ 9D8B BE           	cp (hl)
 803+ 9D8C 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D8E
 805+ 9D8E 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D91 23           	inc hl
 807+ 9D92 23           	inc hl
 808+ 9D93 23           	inc hl
 809+ 9D94 23           	inc hl
 810+ 9D95 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D98
 812+ 9D98 21 34 8C     	ld hl,Ctrl_3
 813+ 9D9B CB EE        	set 5,(hl)
 814+ 9D9D C9           	ret
 815+ 9D9E
 816+ 9D9E 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D9F C9           	ret
# file closed: Direcciones.asm
2051  9DA0              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA0              ; ----- ----- ----- ----- -----
   2+ 9DA0              ;
   3+ 9DA0              ;   28/12/23
   4+ 9DA0
   5+ 9DA0              Movimiento
   6+ 9DA0
   7+ 9DA0              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA0
   9+ 9DA0 3A CB 8B         ld a,(Ctrl_2)
  10+ 9DA3 CB 57            bit 2,a
  11+ 9DA5 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DA7
  13+ 9DA7 2A F2 8B         ld hl,(Puntero_mov)
  14+ 9DAA 7E               ld a,(hl)
  15+ 9DAB
  16+ 9DAB              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DAB
  18+ 9DAB              Inicia_desplazamiento.
  19+ 9DAB
  20+ 9DAB              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DAB
  22+ 9DAB CD 9E 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DAE
  24+ 9DAE              ; Iniciamos (Repetimos_mov).
  25+ 9DAE
  26+ 9DAE 7E               ld a,(hl)
  27+ 9DAF E6 0F            and $0f
  28+ 9DB1 32 F8 8B         ld (Repetimos_desplazamiento),a
  29+ 9DB4 32 F9 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DB7
  31+ 9DB7              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DB7
  33+ 9DB7 23               inc hl
  34+ 9DB8 7E               ld a,(hl)
  35+ 9DB9 32 FB 8B         ld (Cola_de_desplazamiento),a
  36+ 9DBC 2B               dec hl
  37+ 9DBD
  38+ 9DBD 21 CB 8B         ld hl,Ctrl_2
  39+ 9DC0 CB D6            set 2,(hl)
  40+ 9DC2
  41+ 9DC2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC2
  44+ 9DC2              Desplazamiento_iniciado
  45+ 9DC2
  46+ 9DC2 CD 72 9E         call Aplica_desplazamiento
  47+ 9DC5
  48+ 9DC5              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DC5
  50+ 9DC5 3A 34 8C         ld a,(Ctrl_3)
  51+ 9DC8 CB 4F            bit 1,a
  52+ 9DCA C0               ret nz
  53+ 9DCB
  54+ 9DCB 21 F8 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DCE 35               dec (hl)
  56+ 9DCF C0               ret nz
  57+ 9DD0
  58+ 9DD0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD0              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD0              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD0
  62+ 9DD0 3A FB 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD3 A7               and a
  64+ 9DD4 CC C7 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DD7 28 30            jr z,Reinicia_el_movimiento
  66+ 9DD9
  67+ 9DD9 FE FF            cp $ff
  68+ 9DDB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DDD
  70+ 9DDD FE FE            cp $fe
  71+ 9DDF CC 4C 9E         call z,Fijamos_bucle
  72+ 9DE2 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE4
  74+ 9DE4 FE FD            cp $fd
  75+ 9DE6 20 11            jr nz,1F
  76+ 9DE8
  77+ 9DE8              ; ---
  78+ 9DE8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DE8
  80+ 9DE8 3A CB 8B         ld a,(Ctrl_2)
  81+ 9DEB CB 5F            bit 3,a
  82+ 9DED 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DEF
  84+ 9DEF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DEF
  86+ 9DEF 21 CB 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF4
  89+ 9DF4 CD 5D 9E         call Inicia_Repetimos_movimiento
  90+ 9DF7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DF9              ; ---
  92+ 9DF9
  93+ 9DF9 FE 01        1 cp 1
  94+ 9DFB CA 36 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DFE
  96+ 9DFE 3D               dec a
  97+ 9DFF 32 FB 8B         ld (Cola_de_desplazamiento),a
  98+ 9E02
  99+ 9E02 3A F9 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E05 32 F8 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E08              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E08 C9               ret
 103+ 9E09
 104+ 9E09              Reinicia_el_movimiento
 105+ 9E09
 106+ 9E09 3A CB 8B         ld a,(Ctrl_2)
 107+ 9E0C CB 5F            bit 3,a
 108+ 9E0E 28 1B            jr z,2F
 109+ 9E10
 110+ 9E10              ; (Cola_de_desplazamiento)="254".
 111+ 9E10
 112+ 9E10 21 FA 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E13 35               dec (hl)
 114+ 9E14 20 15            jr nz,2F
 115+ 9E16
 116+ 9E16              ; Fin de las repeticiones del último movimiento.
 117+ 9E16
 118+ 9E16 21 CB 8B         ld hl,Ctrl_2
 119+ 9E19 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E1B
 121+ 9E1B 2A F2 8B         ld hl,(Puntero_mov)
 122+ 9E1E 23               inc hl
 123+ 9E1F 23               inc hl
 124+ 9E20 23               inc hl
 125+ 9E21 22 F2 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E24              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E24 7E               ld a,(hl)
 128+ 9E25 32 FB 8B         ld (Cola_de_desplazamiento),a
 129+ 9E28
 130+ 9E28 C3 D0 9D         jp Cola
 131+ 9E2B
 132+ 9E2B CD 68 9E     2 call Inicia_Puntero_mov
 133+ 9E2E
 134+ 9E2E 21 CB 8B         ld hl,Ctrl_2
 135+ 9E31 CB 96            res 2,(hl)
 136+ 9E33
 137+ 9E33 C3 A0 9D         jp Movimiento
 138+ 9E36
 139+ 9E36              Siguiente_desplazamiento
 140+ 9E36
 141+ 9E36              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E36              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E36
 144+ 9E36 21 CB 8B         ld hl,Ctrl_2
 145+ 9E39 CB 96            res 2,(hl)
 146+ 9E3B
 147+ 9E3B 2A F2 8B         ld hl,(Puntero_mov)
 148+ 9E3E 23               inc hl
 149+ 9E3F 23               inc hl
 150+ 9E40 22 F2 8B         ld (Puntero_mov),hl
 151+ 9E43
 152+ 9E43 7E               ld a,(hl)
 153+ 9E44 A7               and a
 154+ 9E45 CC C7 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E48 CA 09 9E         jp z,Reinicia_el_movimiento
 156+ 9E4B
 157+ 9E4B C9               ret
 158+ 9E4C
 159+ 9E4C              ; Subrutinas -----------------------------------------
 160+ 9E4C              ; ---------- --------- --------- ---------- ----------
 161+ 9E4C              ;
 162+ 9E4C              ;   24/07/23
 163+ 9E4C              ;
 164+ 9E4C              ;   Fijamos_bucle
 165+ 9E4C              ;
 166+ 9E4C              ;
 167+ 9E4C
 168+ 9E4C              Fijamos_bucle
 169+ 9E4C
 170+ 9E4C 3A F6 8B         ld a,(Incrementa_puntero)
 171+ 9E4F 3C               inc a
 172+ 9E50 32 F7 8B         ld (Incrementa_puntero_backup),a
 173+ 9E53
 174+ 9E53 CD C7 9E         call Incrementa_Puntero_indice_mov
 175+ 9E56 2A F0 8B         ld hl,(Puntero_indice_mov)
 176+ 9E59 22 F4 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E5C C9               ret
 178+ 9E5D
 179+ 9E5D              ; ---------- --------- --------- ---------- ----------
 180+ 9E5D              ;
 181+ 9E5D              ;   07/7/23
 182+ 9E5D              ;
 183+ 9E5D              ;   Inicia_Repetimos_movimiento
 184+ 9E5D              ;
 185+ 9E5D              ;
 186+ 9E5D
 187+ 9E5D              Inicia_Repetimos_movimiento
 188+ 9E5D
 189+ 9E5D              ; Iniciamos (Repetimos_movimiento).
 190+ 9E5D
 191+ 9E5D DD 2A F2 8B      ld ix,(Puntero_mov)
 192+ 9E61 DD 7E 02         ld a,(ix+2)
 193+ 9E64 32 FA 8B         ld (Repetimos_movimiento),a
 194+ 9E67
 195+ 9E67 C9               ret
 196+ 9E68
 197+ 9E68              ; ---------- --------- --------- ---------- ----------
 198+ 9E68              ;
 199+ 9E68              ;   26/6/23
 200+ 9E68              ;
 201+ 9E68              ;   Inicia_Puntero_mov
 202+ 9E68              ;
 203+ 9E68              ;
 204+ 9E68
 205+ 9E68 2A F0 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E6B CD BC 90         call Extrae_address
 207+ 9E6E 22 F2 8B         ld (Puntero_mov),hl
 208+ 9E71 C9               ret
 209+ 9E72
 210+ 9E72              ; ---------- --------- --------- ---------- ----------
 211+ 9E72              ;
 212+ 9E72              ;   27/06/23
 213+ 9E72              ;
 214+ 9E72              ;   Aplica_movimiento.
 215+ 9E72
 216+ 9E72              Aplica_desplazamiento
 217+ 9E72
 218+ 9E72              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E72
 220+ 9E72 2A F2 8B         ld hl, (Puntero_mov)
 221+ 9E75
 222+ 9E75 7E               ld a,(hl)
 223+ 9E76 E6 F0            and $f0
 224+ 9E78 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E79
 226+ 9E79 CB 7E            bit 7,(hl)
 227+ 9E7B 28 03            jr z,1F
 228+ 9E7D CD 54 9A         call Mov_up
 229+ 9E80 2A F2 8B     1 ld hl, (Puntero_mov)
 230+ 9E83 CB 76            bit 6,(hl)
 231+ 9E85 28 03            jr z,2F
 232+ 9E87 CD 1B 9A         call Mov_down
 233+ 9E8A
 234+ 9E8A              ; Se ha aplicado reinicio ???
 235+ 9E8A              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E8A
 237+ 9E8A              ;    ld a,(Ctrl_3)
 238+ 9E8A              ;    bit 1,a
 239+ 9E8A              ;    ret nz
 240+ 9E8A
 241+ 9E8A 2A F2 8B     2 ld hl, (Puntero_mov)
 242+ 9E8D CB 6E            bit 5,(hl)
 243+ 9E8F 28 03            jr z,3F
 244+ 9E91 CD BA 9B         call Mov_left
 245+ 9E94 2A F2 8B     3 ld hl, (Puntero_mov)
 246+ 9E97 CB 66            bit 4,(hl)
 247+ 9E99 C8               ret z
 248+ 9E9A CD 97 9A         call Mov_right
 249+ 9E9D C9               ret
 250+ 9E9E
 251+ 9E9E              ; ---------- --------- --------- ---------- ----------
 252+ 9E9E              ;
 253+ 9E9E              ;   26/06/23
 254+ 9E9E              ;
 255+ 9E9E              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E9E
 257+ 9E9E              Ajusta_velocidad_desplazamiento
 258+ 9E9E
 259+ 9E9E              ; 1er byte de la cadena de movimiento.
 260+ 9E9E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E9E
 262+ 9E9E CD BC 9E         call Extrae_nibble_alto
 263+ 9EA1
 264+ 9EA1 32 E6 8B         ld (Vel_up),a
 265+ 9EA4 79               ld a,c
 266+ 9EA5 E6 0F            and $0f
 267+ 9EA7 32 E7 8B         ld (Vel_down),a
 268+ 9EAA
 269+ 9EAA              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EAA              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EAA
 272+ 9EAA 23               inc hl
 273+ 9EAB CD BC 9E         call Extrae_nibble_alto
 274+ 9EAE
 275+ 9EAE 32 E4 8B         ld (Vel_left),a
 276+ 9EB1 79               ld a,c
 277+ 9EB2 E6 0F            and $0f
 278+ 9EB4 32 E5 8B         ld (Vel_right),a
 279+ 9EB7
 280+ 9EB7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EB7
 282+ 9EB7 23               inc hl
 283+ 9EB8 22 F2 8B         ld (Puntero_mov),hl
 284+ 9EBB C9               ret
 285+ 9EBC
 286+ 9EBC 06 04        Extrae_nibble_alto ld b,4
 287+ 9EBE 7E               ld a,(hl)
 288+ 9EBF 4F               ld c,a
 289+ 9EC0 E6 F0            and $f0
 290+ 9EC2 CB 3F        1 srl a
 291+ 9EC4 10 FC            djnz 1B
 292+ 9EC6 C9               ret
 293+ 9EC7
 294+ 9EC7              ; ---------- --------- --------- ---------- ----------
 295+ 9EC7              ;
 296+ 9EC7              ;   5/7/23
 297+ 9EC7              ;
 298+ 9EC7              ;   Incrementa_Puntero_indice_mov
 299+ 9EC7
 300+ 9EC7              Incrementa_Puntero_indice_mov
 301+ 9EC7
 302+ 9EC7 21 F6 8B         ld hl,Incrementa_puntero
 303+ 9ECA 34               inc (hl)
 304+ 9ECB
 305+ 9ECB 2A F0 8B         ld hl,(Puntero_indice_mov)
 306+ 9ECE 01 02 00         ld bc,2
 307+ 9ED1 A7               and a
 308+ 9ED2 09               add hl,bc
 309+ 9ED3 22 F0 8B         ld (Puntero_indice_mov),hl
 310+ 9ED6
 311+ 9ED6 7E               ld a,(hl)
 312+ 9ED7 A7               and a
 313+ 9ED8
 314+ 9ED8              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ED8
 316+ 9ED8              ;    jr z,$
 317+ 9ED8
 318+ 9ED8              ;! Reinicia el Patrón de movimiento.
 319+ 9ED8
 320+ 9ED8 CC DD 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EDB
 322+ 9EDB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EDC
 324+ 9EDC C9               ret
 325+ 9EDD
 326+ 9EDD              ; ---------- --------- --------- ---------- ----------
 327+ 9EDD              ;
 328+ 9EDD              ;   15/01/24
 329+ 9EDD              ;
 330+ 9EDD              ;   Inicializa_Puntero_indice_mov
 331+ 9EDD
 332+ 9EDD              Inicializa_Puntero_indice_mov_2
 333+ 9EDD
 334+ 9EDD              ; Existe etiqueta de bucle principal???
 335+ 9EDD
 336+ 9EDD 2A F4 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE0 24               inc h
 338+ 9EE1 25               dec h
 339+ 9EE2 28 05            jr z,2F
 340+ 9EE4
 341+ 9EE4 22 F0 8B         ld (Puntero_indice_mov),hl
 342+ 9EE7 18 14            jr 3F
 343+ 9EE9
 344+ 9EE9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EE9
 346+ 9EE9 3A F6 8B     2 ld a,(Incrementa_puntero)
 347+ 9EEC 47               ld b,a
 348+ 9EED
 349+ 9EED 2A F0 8B         ld hl,(Puntero_indice_mov)
 350+ 9EF0 2B           1 dec hl
 351+ 9EF1 2B               dec hl
 352+ 9EF2 10 FC            djnz 1B
 353+ 9EF4 22 F0 8B         ld (Puntero_indice_mov),hl
 354+ 9EF7
 355+ 9EF7 AF               xor a
 356+ 9EF8 32 F6 8B         ld (Incrementa_puntero),a
 357+ 9EFB 18 06            jr 4F
 358+ 9EFD
 359+ 9EFD 3A F7 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F00 32 F6 8B         ld (Incrementa_puntero),a
 361+ 9F03 C9           4 ret
 362+ 9F04
 363+ 9F04              ; ----------------------------------------------------------------------
 364+ 9F04              ;
 365+ 9F04              ;   30/01/24
 366+ 9F04              ;
 367+ 9F04              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F04
 369+ 9F04 3A BF 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F07 CD 58 94         call Calcula_salto_en_BC
 371+ 9F0A 21 E8 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F0D A7               and a
 373+ 9F0E ED 4A            adc hl,bc
 374+ 9F10 C9               ret
 375+ 9F11
 376+ 9F11              ; ----------------------------------------------------------------------
 377+ 9F11              ;
 378+ 9F11              ;   30/01/24
 379+ 9F11              ;
 380+ 9F11              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F11              ;
 382+ 9F11              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F11
 384+ 9F11 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F12 23               inc hl
 386+ 9F13 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F14 69               ld l,c
 388+ 9F15 60               ld h,b
 389+ 9F16 22 C8 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F19 C9               ret
 391+ 9F1A
# file closed: Movimiento.asm
2052  9F1A              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F1A              ; --------------------------------------------------------------------------------------
   2+ 9F1A              ;
   3+ 9F1A              ;   25/10/24
   4+ 9F1A              ;
   5+ 9F1A
   6+ 9F1A              Pinta_disparos_Entidades
   7+ 9F1A
   8+ 9F1A ED 73 0C 8C      ld (Stack),sp
   9+ 9F1E ED 7B 1E 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F22
  11+ 9F22 3E 02            ld a,2
  12+ 9F24 08               ex af,af
  13+ 9F25
  14+ 9F25 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F27              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F27              ;                                     _ No encontraría "0".
  17+ 9F27 FD E1        4 pop iy
  18+ 9F29 D1               pop de                          ; 1er .db IYL
  19+ 9F2A              ;                                   ; 2º  .db IYH
  20+ 9F2A              ;                                   ; 3er .db E.
  21+ 9F2A              ;   Album vacío ???
  22+ 9F2A
  23+ 9F2A FD 7D            ld a,iyl
  24+ 9F2C FD 84            add iyh
  25+ 9F2E 83               add e
  26+ 9F2F 28 1F            jr z,1F
  27+ 9F31
  28+ 9F31              ;   Imprime album, (contiene datos).
  29+ 9F31
  30+ 9F31 3B               dec sp
  31+ 9F32
  32+ 9F32 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F33
  34+ 9F33              ; Imprime el 1er scanline del disparo.
  35+ 9F33
  36+ 9F33 FD 7D            ld a,iyl
  37+ 9F35 AE               xor (hl)
  38+ 9F36 77               ld (hl),a
  39+ 9F37
  40+ 9F37 2C               inc l
  41+ 9F38
  42+ 9F38 FD 7C            ld a,iyh
  43+ 9F3A AE               xor (hl)
  44+ 9F3B 77               ld (hl),a
  45+ 9F3C
  46+ 9F3C 2C               inc l
  47+ 9F3D
  48+ 9F3D 7B               ld a,e
  49+ 9F3E AE               xor (hl)
  50+ 9F3F 77               ld (hl),a
  51+ 9F40
  52+ 9F40              ; Imprime el 2º scanline del disparo.
  53+ 9F40
  54+ 9F40 E1               pop hl
  55+ 9F41
  56+ 9F41 FD 7D            ld a,iyl
  57+ 9F43 AE               xor (hl)
  58+ 9F44 77               ld (hl),a
  59+ 9F45
  60+ 9F45 2C               inc l
  61+ 9F46
  62+ 9F46 FD 7C            ld a,iyh
  63+ 9F48 AE               xor (hl)
  64+ 9F49 77               ld (hl),a
  65+ 9F4A
  66+ 9F4A 2C               inc l
  67+ 9F4B
  68+ 9F4B 7B               ld a,e
  69+ 9F4C AE               xor (hl)
  70+ 9F4D 77               ld (hl),a
  71+ 9F4E
  72+ 9F4E 10 D7            djnz 4B
  73+ 9F50
  74+ 9F50 08           1 ex af,af
  75+ 9F51 3D               dec a
  76+ 9F52 20 05            jr nz,2F
  77+ 9F54
  78+ 9F54 ED 7B 0C 8C      ld sp,(Stack)
  79+ 9F58 C9               ret
  80+ 9F59
  81+ 9F59 ED 7B 1C 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F5D 08               ex af,af
  83+ 9F5E 18 C5            jr 3B
  84+ 9F60
  85+ 9F60              ; --------------------------------------------------------------------------------------
  86+ 9F60              ;
  87+ 9F60              ;   15/10/24
  88+ 9F60              ;
  89+ 9F60
  90+ 9F60              Motor_de_disparos_entidades
  91+ 9F60
  92+ 9F60 3A 24 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F63 FE 07            cp 7
  94+ 9F65 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F66
  96+ 9F66 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F68 21 23 89         ld hl,Indice_de_disparos_entidades
  98+ 9F6B
  99+ 9F6B CD BC 90     1 call Extrae_address
 100+ 9F6E 1C               inc e
 101+ 9F6F 1C               inc e
 102+ 9F70 ED 53 37 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F74
 104+ 9F74               ; Caja vacía ???
 105+ 9F74
 106+ 9F74 2C               inc l
 107+ 9F75
 108+ 9F75 7E               ld a,(hl)
 109+ 9F76 A7               and a
 110+ 9F77 28 16            jr z,3F                                                              ; Caja vacía.
 111+ 9F79
 112+ 9F79              ; --- Trabajamos con caja:
 113+ 9F79
 114+ 9F79              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
 115+ 9F79
 116+ 9F79              ;    call Rota_disparo_si_procede
 117+ 9F79
 118+ 9F79              ; ------------------------------------------------------------
 119+ 9F79
 120+ 9F79 2D               dec l
 121+ 9F7A 2D               dec l
 122+ 9F7B 2D               dec l
 123+ 9F7C
 124+ 9F7C CD BC 90         call Extrae_address
 125+ 9F7F              ;   (Puntero_de_impresion) del disparo en HL.
 126+ 9F7F
 127+ 9F7F              ;! Velocidad del disparo de entidades.
 128+ 9F7F
 129+ 9F7F CD D5 99         call NextScan
 130+ 9F82
 131+ 9F82              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 132+ 9F82
 133+ 9F82 CD 93 9F         call Fin_de_disparo_de_entidad
 134+ 9F85
 135+ 9F85 EB               ex de,hl
 136+ 9F86
 137+ 9F86 73               ld (hl),e
 138+ 9F87 23               inc hl
 139+ 9F88 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 140+ 9F89
 141+ 9F89 2A 37 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 142+ 9F8C 18 02            jr 2F
 143+ 9F8E
 144+ 9F8E C9               ret
 145+ 9F8F
 146+ 9F8F EB           3 ex de,hl
 147+ 9F90 10 D9        2 djnz 1B
 148+ 9F92
 149+ 9F92 C9               ret
 150+ 9F93
 151+ 9F93              ; ------------- ------------- ------------
 152+ 9F93              ;
 153+ 9F93              ;   25/9/24
 154+ 9F93
 155+ 9F93              Fin_de_disparo_de_entidad
 156+ 9F93
 157+ 9F93 7C               ld a,h
 158+ 9F94 FE 54            cp $54
 159+ 9F96 D8               ret c
 160+ 9F97
 161+ 9F97 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 162+ 9F98
 163+ 9F98 5D               ld e,l
 164+ 9F99 54               ld d,h
 165+ 9F9A
 166+ 9F9A 21 E0 57         ld hl,$57e0
 167+ 9F9D ED 52            sbc hl,de
 168+ 9F9F
 169+ 9F9F 38 39            jr c,Elimina_disparo_entidad
 170+ 9FA1
 171+ 9FA1 6B               ld l,e
 172+ 9FA2 62               ld h,d
 173+ 9FA3
 174+ 9FA3 D1               pop de
 175+ 9FA4
 176+ 9FA4 C9               ret
 177+ 9FA5
 178+ 9FA5              ; ----------------------------------------------------------
 179+ 9FA5              ;
 180+ 9FA5              ;   08/10/24
 181+ 9FA5
 182+ 9FA5              Rota_disparo_si_procede
 183+ 9FA5
 184+ 9FA5              ;   Nos situamos en el byte alto de (Control).
 185+ 9FA5
 186+ 9FA5 CB 76            bit 6,(hl)
 187+ 9FA7 20 03            jr nz,Decrementa_contador_de_control_de_disparo
 188+ 9FA9 CB 7E            bit 7,(hl)
 189+ 9FAB C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 190+ 9FAC
 191+ 9FAC              Decrementa_contador_de_control_de_disparo
 192+ 9FAC
 193+ 9FAC 35               dec (hl)
 194+ 9FAD 7E               ld a,(hl)
 195+ 9FAE E6 07            and 7
 196+ 9FB0 C0               ret nz
 197+ 9FB1
 198+ 9FB1              Rotamos_disparo_segun_proceda
 199+ 9FB1
 200+ 9FB1              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 201+ 9FB1
 202+ 9FB1 3E 07            ld a,7
 203+ 9FB3 86               add (hl)
 204+ 9FB4 77               ld (hl),a                                                           ; Contador reinicializado.
 205+ 9FB5
 206+ 9FB5 CD CE 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 207+ 9FB8
 208+ 9FB8 CB 76            bit 6,(hl)
 209+ 9FBA 20 05            jr nz,Rota_a_derecha
 210+ 9FBC
 211+ 9FBC
 212+ 9FBC              Rota_a_izq
 213+ 9FBC
 214+ 9FBC F3               di
 215+ 9FBD 18 FE            jr $
 216+ 9FBF FB               ei
 217+ 9FC0
 218+ 9FC0 C9               ret
 219+ 9FC1
 220+ 9FC1              Rota_a_derecha
 221+ 9FC1
 222+ 9FC1 FD CB 00 3E      srl (iy+0)
 223+ 9FC5 FD CB 01 3E      srl (iy+1)
 224+ 9FC9 FD CB 02 3E      srl (iy+2)
 225+ 9FCD
 226+ 9FCD              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 227+ 9FCD
 228+ 9FCD C9               ret
 229+ 9FCE
 230+ 9FCE              ; ------------ ----------- ------------
 231+ 9FCE              ;
 232+ 9FCE              ;   11/10/24
 233+ 9FCE
 234+ 9FCE              Puntero_objeto_en_IY
 235+ 9FCE
 236+ 9FCE E5               push hl
 237+ 9FCF
 238+ 9FCF 2D               dec l
 239+ 9FD0 2D               dec l
 240+ 9FD1 2D               dec l
 241+ 9FD2 2D               dec l
 242+ 9FD3 2D               dec l
 243+ 9FD4 2D               dec l
 244+ 9FD5
 245+ 9FD5 E5               push hl
 246+ 9FD6 FD E1            pop iy
 247+ 9FD8
 248+ 9FD8 E1               pop hl
 249+ 9FD9
 250+ 9FD9 C9               ret
 251+ 9FDA
 252+ 9FDA              ; ------------ ----------- ------------
 253+ 9FDA              ;
 254+ 9FDA              ;   25/9/24
 255+ 9FDA
 256+ 9FDA              Elimina_disparo_entidad
 257+ 9FDA
 258+ 9FDA 21 24 8C         ld hl,Numero_de_disparos_de_entidades
 259+ 9FDD 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 260+ 9FDE
 261+ 9FDE E1               pop hl
 262+ 9FDF E5               push hl
 263+ 9FE0
 264+ 9FE0 2C               inc l
 265+ 9FE1 2C               inc l
 266+ 9FE2 2C               inc l                                                               ; Sitúa en el 1er .db de la caja.
 267+ 9FE3
 268+ 9FE3 CD EB 9F         call Borra_7_bytes
 269+ 9FE6
 270+ 9FE6 D1               pop de
 271+ 9FE7
 272+ 9FE7 21 00 00         ld hl,0
 273+ 9FEA
 274+ 9FEA C9               ret
 275+ 9FEB
 276+ 9FEB              ; ----- ----- ----- ----- -----
 277+ 9FEB
 278+ 9FEB 16 07        Borra_7_bytes ld d,7                                                    ; Contador
 279+ 9FED AF               xor a                                                               ; Borrador
 280+ 9FEE 77           1 ld (hl),a
 281+ 9FEF 2D               dec l
 282+ 9FF0 15               dec d
 283+ 9FF1 20 FB            jr nz,1B
 284+ 9FF3 C9               ret
 285+ 9FF4
 286+ 9FF4              ; --------------------------------------------------------------------------------------
 287+ 9FF4              ;
 288+ 9FF4              ;   12/10/24
 289+ 9FF4              ;
 290+ 9FF4
 291+ 9FF4              Genera_datos_de_impresion_disparos_Entidades
 292+ 9FF4
 293+ 9FF4 3E 07            ld a,7
 294+ 9FF6 08               ex af,af                                                  ;? Salimos. No hay disparos de entidades generados.                                                    ex af,af
 295+ 9FF7
 296+ 9FF7              ; ---------------
 297+ 9FF7
 298+ 9FF7              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 299+ 9FF7
 300+ 9FF7 21 23 89          ld hl,Indice_de_disparos_entidades
 301+ 9FFA
 302+ 9FFA CD BC 90     1 call Extrae_address
 303+ 9FFD
 304+ 9FFD 13               inc de
 305+ 9FFE 13               inc de
 306+ 9FFF
 307+ 9FFF ED 53 37 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 308+ A003
 309+ A003 2C               inc l
 310+ A004
 311+ A004 7E               ld a,(hl)
 312+ A005 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 313+ A006 28 35            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 314+ A008
 315+ A008              ; ----- ----- ----- -----
 316+ A008
 317+ A008 2D               dec l
 318+ A009 2D               dec l
 319+ A00A 2D               dec l
 320+ A00B
 321+ A00B CD BC 90         call Extrae_address
 322+ A00E E5               push hl
 323+ A00F
 324+ A00F 1D               dec e
 325+ A010
 326+ A010 EB               ex de,hl
 327+ A011
 328+ A011 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 329+ A012 2D               dec l
 330+ A013 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 331+ A014 2D               dec l
 332+ A015 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 333+ A016
 334+ A016 E1               pop hl                                                    ;? Puntero de impresión en HL.
 335+ A017
 336+ A017              Genera_scanlines_de_los_disparos_de_entidades.
 337+ A017
 338+ A017 FD 2A 20 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 339+ A01B FD 73 00         ld (iy+0),e
 340+ A01E FD 70 01         ld (iy+1),b
 341+ A021 FD 71 02         ld (iy+2),c
 342+ A024
 343+ A024 FD 75 03         ld (iy+3),l
 344+ A027 FD 74 04         ld (iy+4),h
 345+ A02A
 346+ A02A CD D5 99         call NextScan
 347+ A02D
 348+ A02D FD 75 05         ld (iy+5),l
 349+ A030 FD 74 06         ld (iy+6),h
 350+ A033
 351+ A033 FD E5            push iy
 352+ A035 E1               pop hl
 353+ A036
 354+ A036 3E 07            ld a,7
 355+ A038 85               add l
 356+ A039 6F               ld l,a
 357+ A03A
 358+ A03A 22 20 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 359+ A03D
 360+ A03D              ; ----- ----- ----- -----
 361+ A03D
 362+ A03D              Situa_en_siguiente_caja
 363+ A03D
 364+ A03D 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 365+ A03E 3D               dec a
 366+ A03F C8               ret z
 367+ A040
 368+ A040 08               ex af,af
 369+ A041 2A 37 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 370+ A044 18 B4            jr 1B
 371+ A046
 372+ A046              ; --------------------------------------------------------------------------------------
 373+ A046              ;
 374+ A046              ;   12/10/24
 375+ A046              ;
 376+ A046
 377+ A046              Genera_disparo_de_entidad_maldosa
 378+ A046
 379+ A046              ;   Estructura de un disparo de entidades.
 380+ A046
 381+ A046              ;   Disparo_1 defw 0								; Puntero objeto.
 382+ A046              ; 	defw 0											; Puntero de impresión.
 383+ A046              ;	defw 0											; Control.
 384+ A046
 385+ A046              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 386+ A046              ;   _de la entidad en el momento de disparar.
 387+ A046
 388+ A046              ;   El byte alto muestra la siguiente información:
 389+ A046              ;
 390+ A046              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 391+ A046              ;                        _antes de desplazarse a derecha/izquierda.
 392+ A046              ;
 393+ A046              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 394+ A046              ;
 395+ A046              ;                        10xx ..... Izquierda.
 396+ A046              ;                        01xx ..... Derecha.
 397+ A046              ;                        00xx ..... Recto.
 398+ A046
 399+ A046              ;*  Exclusiones.
 400+ A046
 401+ A046              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 402+ A046              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 403+ A046
 404+ A046              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 405+ A046
 406+ A046 3A 24 8C         ld a,(Numero_de_disparos_de_entidades)
 407+ A049 A7               and a
 408+ A04A C8               ret z
 409+ A04B
 410+ A04B 3A C1 8B         ld a,(Coordenada_y)
 411+ A04E A7               and a
 412+ A04F C8               ret z
 413+ A050
 414+ A050 3D               dec a
 415+ A051 C8               ret z
 416+ A052
 417+ A052 FE 10            cp 16
 418+ A054 D0               ret nc
 419+ A055
 420+ A055              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 421+ A055              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 422+ A055              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 423+ A055
 424+ A055 21 26 8C         ld hl,Permiso_de_disparo_Entidades
 425+ A058 35               dec (hl)                                            ; No más disparos en este FRAME.
 426+ A059
 427+ A059              ;   Decrementa el numero de disparos de entidades.
 428+ A059
 429+ A059 21 24 8C         ld hl,Numero_de_disparos_de_entidades
 430+ A05C 35               dec (hl)
 431+ A05D
 432+ A05D 21 23 89         ld hl,Indice_de_disparos_entidades
 433+ A060
 434+ A060 CD BC 90     1 call Extrae_address
 435+ A063
 436+ A063 13               inc de
 437+ A064 13               inc de
 438+ A065
 439+ A065 ED 53 37 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 440+ A069
 441+ A069              ;   Comprobamos si la caja está vacía.
 442+ A069
 443+ A069 2C               inc l
 444+ A06A
 445+ A06A 7E               ld a,(hl)
 446+ A06B A7               and a
 447+ A06C 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 448+ A06E
 449+ A06E              ;   Caja vacía, vamos a generar un disparo.
 450+ A06E              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 451+ A06E
 452+ A06E CD 94 A0         call Genera_byte_inclinacion
 453+ A071
 454+ A071 7E               ld a,(hl)
 455+ A072 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 456+ A073
 457+ A073 2D               dec l
 458+ A074
 459+ A074              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 460+ A074
 461+ A074 3A CA 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 462+ A077 77               ld (hl),a
 463+ A078
 464+ A078 2D               dec l
 465+ A079
 466+ A079 CD B2 A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 467+ A07C
 468+ A07C 70               ld (hl),b
 469+ A07D 2D               dec l
 470+ A07E 71               ld (hl),c
 471+ A07F
 472+ A07F 2D               dec l
 473+ A080
 474+ A080              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 475+ A080
 476+ A080 FD 7E 02         ld a,(iy+02)
 477+ A083 77               ld (hl),a
 478+ A084 2D               dec l
 479+ A085
 480+ A085 FD 7E 01         ld a,(iy+01)
 481+ A088 77               ld (hl),a
 482+ A089 2D               dec l
 483+ A08A
 484+ A08A FD 7E 00         ld a,(iy+00)
 485+ A08D 77               ld (hl),a
 486+ A08E
 487+ A08E C9               ret
 488+ A08F
 489+ A08F              ;   --- --- ---
 490+ A08F
 491+ A08F              Situa_en_siguiente_disparo
 492+ A08F
 493+ A08F 2A 37 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 494+ A092 18 CC            jr 1B
 495+ A094
 496+ A094              ; --------------------------------------------------------------------------------------
 497+ A094              ;
 498+ A094              ;   09/10/24
 499+ A094              ;
 500+ A094
 501+ A094              Genera_byte_inclinacion
 502+ A094
 503+ A094 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 504+ A096
 505+ A096              ; Determina tendencia del disparo.
 506+ A096
 507+ A096 3A 75 89         ld a,(CX_Amadeus)
 508+ A099 47               ld b,a
 509+ A09A 3A C0 8B         ld a,(Coordenada_X)
 510+ A09D 90               sub b
 511+ A09E 38 07            jr c,Disparo_a_derecha
 512+ A0A0
 513+ A0A0 FE 04        Disparo_a_izquierda cp 4
 514+ A0A2
 515+ A0A2 D8               ret c
 516+ A0A3 C8               ret z
 517+ A0A4
 518+ A0A4 CB FE            set 7,(hl)
 519+ A0A6 C9               ret
 520+ A0A7
 521+ A0A7 47           Disparo_a_derecha ld b,a
 522+ A0A8 3E FF            ld a,$ff
 523+ A0AA 90               sub b
 524+ A0AB
 525+ A0AB FE 04            cp 4
 526+ A0AD
 527+ A0AD D8               ret c
 528+ A0AE C8               ret z
 529+ A0AF
 530+ A0AF CB F6            set 6,(hl)
 531+ A0B1 C9               ret
 532+ A0B2
 533+ A0B2              ; --------------------------------------------------------------------------------------
 534+ A0B2              ;
 535+ A0B2              ;   09/10/24
 536+ A0B2              ;
 537+ A0B2
 538+ A0B2              Modifica_puntero_de_impresion
 539+ A0B2
 540+ A0B2              ;   Puntero de impresión del disparo en BC.
 541+ A0B2
 542+ A0B2 E5               push hl
 543+ A0B3
 544+ A0B3 2A 39 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 545+ A0B6 CD D5 99         call NextScan
 546+ A0B9
 547+ A0B9 4D               ld c,l
 548+ A0BA 44               ld b,h
 549+ A0BB
 550+ A0BB E1               pop hl
 551+ A0BC
 552+ A0BC 08               ex af,af
 553+ A0BD CB 77            bit 6,a
 554+ A0BF 28 06            jr z,1F
 555+ A0C1
 556+ A0C1 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 557+ A0C5 0C               inc c
 558+ A0C6 C9               ret
 559+ A0C7
 560+ A0C7 CB 7F        1 bit 7,a
 561+ A0C9 28 F6            jr z,2B
 562+ A0CB
 563+ A0CB FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 564+ A0CF 0D               dec c
 565+ A0D0
 566+ A0D0 C9               ret
 567+ A0D1
 568+ A0D1              ; --------------------------------------------------------------------------------------
 569+ A0D1              ;
 570+ A0D1              ;   31/08/24
 571+ A0D1              ;
 572+ A0D1
 573+ A0D1              Compara_con_coordenadas_de_disparo
 574+ A0D1
 575+ A0D1 3A C1 8B         ld a,(Coordenada_y)
 576+ A0D4 47               ld b,a
 577+ A0D5 3A 3E 8C         ld a,(Coordenadas_disparo_certero)
 578+ A0D8 90               sub b
 579+ A0D9
 580+ A0D9              ; A = "0" ok
 581+ A0D9              ; A = "1" ok
 582+ A0D9
 583+ A0D9 28 08            jr z,Comprueba_coordenada_X
 584+ A0DB 3D               dec a
 585+ A0DC 28 05            jr z,Comprueba_coordenada_X
 586+ A0DE
 587+ A0DE              ; A = "$ff" ok
 588+ A0DE
 589+ A0DE FE FE            cp $fe
 590+ A0E0 28 01            jr z,Comprueba_coordenada_X
 591+ A0E2
 592+ A0E2 C9               ret
 593+ A0E3
 594+ A0E3              Comprueba_coordenada_X
 595+ A0E3
 596+ A0E3 3A C0 8B         ld a,(Coordenada_X)
 597+ A0E6 47               ld b,a
 598+ A0E7 21 3F 8C         ld hl,Coordenadas_disparo_certero+1
 599+ A0EA 7E               ld a,(hl)
 600+ A0EB 90               sub b
 601+ A0EC
 602+ A0EC              ; A = "0" ok
 603+ A0EC              ; A = "1" ok
 604+ A0EC
 605+ A0EC 28 09            jr z,Activa_Impacto_en_entidad
 606+ A0EE 3D               dec a
 607+ A0EF 28 06            jr z,Activa_Impacto_en_entidad
 608+ A0F1
 609+ A0F1              ; A = "2" ok
 610+ A0F1
 611+ A0F1 3D               dec a
 612+ A0F2 28 03            jr z,Activa_Impacto_en_entidad
 613+ A0F4
 614+ A0F4              ; A = "$ff"
 615+ A0F4
 616+ A0F4 FE FD            cp $fd
 617+ A0F6 C0               ret nz
 618+ A0F7
 619+ A0F7              Activa_Impacto_en_entidad
 620+ A0F7
 621+ A0F7              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 622+ A0F7
 623+ A0F7 3E 02            ld a,2
 624+ A0F9 32 C3 8B         ld (Impacto),a
 625+ A0FC
 626+ A0FC              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 627+ A0FC
 628+ A0FC 11 C0 87         ld de,Indice_Explosion_entidades
 629+ A0FF 21 C6 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 630+ A102
 631+ A102 73               ld (hl),e
 632+ A103 23               inc hl
 633+ A104 72               ld (hl),d
 634+ A105
 635+ A105              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 636+ A105
 637+ A105 21 3B 8C         ld hl,Impacto2
 638+ A108 CB 9E            res 3,(hl)
 639+ A10A
 640+ A10A C9               ret
 641+ A10B
 642+ A10B              ; --------------------------------------------------------------------------------------
 643+ A10B              ;
 644+ A10B              ;   13/10/24
 645+ A10B              ;
 646+ A10B
 647+ A10B              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 648+ A10B
 649+ A10B              Limpia_album_de_pintado_disparos_Amadeus
 650+ A10B
 651+ A10B 2A 18 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 652+ A10E 06 06            ld b,6
 653+ A110 AF               xor a
 654+ A111 77           1 ld (hl),a
 655+ A112 2C               inc l
 656+ A113 10 FC            djnz 1B
 657+ A115
 658+ A115 C9               ret
 659+ A116
 660+ A116              ; --------------------------------------------------------------------------------------
 661+ A116              ;
 662+ A116              ;   29/09/24
 663+ A116              ;
 664+ A116
 665+ A116              Calcula_bytes_pintado_disparos
 666+ A116
 667+ A116 2A 1C 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 668+ A119 45               ld b,l
 669+ A11A 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 670+ A11D 7D               ld a,l
 671+ A11E
 672+ A11E 90               sub b
 673+ A11F 32 22 8C         ld (Num_de_bytes_album_de_disparos),a
 674+ A122
 675+ A122 C9               ret
 676+ A123
 677+ A123              ; --------------------------------------------------------------------------------------
 678+ A123              ;
 679+ A123              ;   29/09/24
 680+ A123              ;
 681+ A123              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 682+ A123              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 683+ A123              ;   _disparos que el álbum del FRAME actual).
 684+ A123
 685+ A123              Limpia_album_de_pintado_disparos_entidades
 686+ A123
 687+ A123              ;    ld a,(Numero_de_disparos_de_entidades)
 688+ A123              ;    and a
 689+ A123              ;    di
 690+ A123              ;    jr z,$
 691+ A123              ;    ei
 692+ A123
 693+ A123 3A 22 8C         ld a,(Num_de_bytes_album_de_disparos)
 694+ A126 47               ld b,a
 695+ A127
 696+ A127 3E 31            ld a,$31
 697+ A129 90               sub b
 698+ A12A C8               ret z
 699+ A12B
 700+ A12B 47               ld b,a
 701+ A12C
 702+ A12C AF           2 xor a
 703+ A12D 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 704+ A130 77           1 ld (hl),a
 705+ A131 23               inc hl
 706+ A132 10 FC            djnz 1B
 707+ A134 C9               ret
 708+ A135
 709+ A135              ; --------------------------------------------------------------------------------------
 710+ A135              ;
 711+ A135              ;   29/09/24
 712+ A135              ;
 713+ A135
 714+ A135              Motor_Disparos_Amadeus
 715+ A135
 716+ A135 21 20 89         ld hl,Disparo_Amad+1
 717+ A138
 718+ A138 34               inc (hl)
 719+ A139 35               dec (hl)
 720+ A13A
 721+ A13A C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 722+ A13B
 723+ A13B              ;   Esta caja contiene un disparo.
 724+ A13B
 725+ A13B CD 42 A1         call Consulta_Impacto
 726+ A13E CC 5B A1         call z,Mueve_disparo_Amadeus
 727+ A141
 728+ A141 C9               ret
 729+ A142
 730+ A142              ; ----------------------
 731+ A142              ;
 732+ A142              ;
 733+ A142              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 734+ A142              ;
 735+ A142              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 736+ A142
 737+ A142
 738+ A142              Consulta_Impacto
 739+ A142
 740+ A142              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 741+ A142              ;   _sea lo más coherente posible.
 742+ A142
 743+ A142 E5               push hl
 744+ A143 2B               dec hl
 745+ A144 CD 37 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 746+ A147 E1               pop hl
 747+ A148 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 748+ A149
 749+ A149 C8               ret z
 750+ A14A
 751+ A14A 3A 3B 8C         ld a,(Impacto2)
 752+ A14D CB DF            set 3,a
 753+ A14F 32 3B 8C         ld (Impacto2),a
 754+ A152
 755+ A152 E5               push hl
 756+ A153 CD 24 A2         call Genera_coordenadas_de_disparo_Amadeus
 757+ A156 E1               pop hl
 758+ A157 CD 74 A1         call Elimina_disparo_Amadeus
 759+ A15A
 760+ A15A C9               ret
 761+ A15B
 762+ A15B              ; ----------------------
 763+ A15B              ;
 764+ A15B              ;
 765+ A15B              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 766+ A15B
 767+ A15B              Mueve_disparo_Amadeus
 768+ A15B
 769+ A15B CD BC 90         call Extrae_address
 770+ A15E
 771+ A15E CD E4 99         call PreviousScan
 772+ A161 CD E4 99         call PreviousScan
 773+ A164 CD E4 99         call PreviousScan
 774+ A167 CD E4 99         call PreviousScan
 775+ A16A
 776+ A16A              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 777+ A16A
 778+ A16A 7C               ld a,h
 779+ A16B D6 40            sub $40
 780+ A16D EB               ex de,hl
 781+ A16E 38 04            jr c,Elimina_disparo_Amadeus
 782+ A170
 783+ A170               ; Introduce nuevo puntero_de_impresión en la caja.
 784+ A170
 785+ A170 73               ld (hl),e
 786+ A171 23               inc hl
 787+ A172 72               ld (hl),d
 788+ A173
 789+ A173 C9               ret
 790+ A174
 791+ A174              ; ----------------------
 792+ A174              ;
 793+ A174              ;   29/9/24
 794+ A174
 795+ A174              Elimina_disparo_Amadeus
 796+ A174
 797+ A174              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 798+ A174              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 799+ A174
 800+ A174              ;   Disparo_1A defw 0									; Puntero objeto.
 801+ A174              ;   	defw 0											; Puntero de impresión.
 802+ A174
 803+ A174 2B               dec hl
 804+ A175 2B               dec hl
 805+ A176
 806+ A176 AF               xor a
 807+ A177 77               ld (hl),a
 808+ A178 23               inc hl
 809+ A179 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 810+ A17A
 811+ A17A 23               inc hl
 812+ A17B 77               ld (hl),a
 813+ A17C 23               inc hl
 814+ A17D 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 815+ A17E
 816+ A17E 3E 01            ld a,1
 817+ A180 32 25 8C         ld (Permiso_de_disparo_Amadeus),a
 818+ A183
 819+ A183 CD 0B A1         call Limpia_album_de_pintado_disparos_Amadeus
 820+ A186
 821+ A186 AF               xor a
 822+ A187 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 823+ A188
 824+ A188 C9               ret
 825+ A189
 826+ A189              ; --------------------------------------------------------------------------------------
 827+ A189              ;
 828+ A189              ;   13/10/24
 829+ A189              ;
 830+ A189
 831+ A189              Pinta_disparos_Amadeus
 832+ A189
 833+ A189 06 02            ld b,2
 834+ A18B ED 73 0C 8C      ld (Stack),sp
 835+ A18F ED 7B 1A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 836+ A193 D1           3 pop de
 837+ A194 14               inc d
 838+ A195 15               dec d
 839+ A196 28 1C            jr z,1F
 840+ A198 E1               pop hl
 841+ A199
 842+ A199              Imprime_scanlines_en_pantalla
 843+ A199
 844+ A199              ; 1er scanline
 845+ A199
 846+ A199 1A               ld a,(de)
 847+ A19A AE               xor (hl)
 848+ A19B 77               ld (hl),a
 849+ A19C
 850+ A19C 1C               inc e
 851+ A19D 2C               inc l
 852+ A19E
 853+ A19E 1A               ld a,(de)
 854+ A19F AE               xor (hl)
 855+ A1A0 77               ld (hl),a
 856+ A1A1
 857+ A1A1 1D               dec e
 858+ A1A2 E1               pop hl
 859+ A1A3
 860+ A1A3              ; 2º scanline
 861+ A1A3
 862+ A1A3 1A               ld a,(de)
 863+ A1A4 AE               xor (hl)
 864+ A1A5 77               ld (hl),a
 865+ A1A6
 866+ A1A6 1C               inc e
 867+ A1A7 2C               inc l
 868+ A1A8
 869+ A1A8 1A               ld a,(de)
 870+ A1A9 AE               xor (hl)
 871+ A1AA 77               ld (hl),a
 872+ A1AB
 873+ A1AB 1D               dec e
 874+ A1AC
 875+ A1AC 18 06            jr 1F
 876+ A1AE
 877+ A1AE ED 7B 18 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 878+ A1B2 18 DF            jr 3B
 879+ A1B4 10 F8        1 djnz 2B
 880+ A1B6 ED 7B 0C 8C      ld sp,(Stack)
 881+ A1BA C9               ret
 882+ A1BB
 883+ A1BB              ; --------------------------------------------------------------------------------------
 884+ A1BB              ;
 885+ A1BB              ;   13/10/24
 886+ A1BB              ;
 887+ A1BB              ;   Modifica: HL,BC y DE.
 888+ A1BB
 889+ A1BB
 890+ A1BB              Genera_datos_de_impresion_disparos_Amadeus
 891+ A1BB
 892+ A1BB ED 73 0C 8C      ld (Stack),sp
 893+ A1BF 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 894+ A1C2 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 895+ A1C3
 896+ A1C3 14               inc d                                                     ;? Salimos si no hay disparo.
 897+ A1C4 15               dec d
 898+ A1C5
 899+ A1C5 28 0E            jr z,Salida
 900+ A1C7
 901+ A1C7              Genera_scanlines_de_disparo_Amadeus
 902+ A1C7
 903+ A1C7 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 904+ A1C8              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 905+ A1C8 ED 7B 18 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 906+ A1CC
 907+ A1CC C1               pop bc
 908+ A1CD C1               pop bc
 909+ A1CE C1               pop bc
 910+ A1CF
 911+ A1CF E5               push hl                                                   ;? Sube 2º scanline al álbum.
 912+ A1D0 CD E4 99         call PreviousScan
 913+ A1D3 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 914+ A1D4 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 915+ A1D5
 916+ A1D5              Salida
 917+ A1D5
 918+ A1D5 ED 7B 0C 8C      ld sp,(Stack)
 919+ A1D9
 920+ A1D9 C9               ret
 921+ A1DA
 922+ A1DA              ; --------------------------------------------------------------------------------------
 923+ A1DA              ;
 924+ A1DA              ;   12/09/24
 925+ A1DA              ;
 926+ A1DA
 927+ A1DA              Genera_disparo_Amadeus
 928+ A1DA
 929+ A1DA              ;*  Exclusiones.
 930+ A1DA
 931+ A1DA 3A 25 8C         ld a,(Permiso_de_disparo_Amadeus)
 932+ A1DD A7               and a
 933+ A1DE C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 934+ A1DF
 935+ A1DF 3D               dec a
 936+ A1E0 32 25 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 937+ A1E3
 938+ A1E3              Define_puntero_objeto_disparo
 939+ A1E3
 940+ A1E3              ;   Inicializamos contador.
 941+ A1E3
 942+ A1E3 06 00            ld b,0
 943+ A1E5
 944+ A1E5 2A 79 89         ld hl,(p.imp.amadeus)
 945+ A1E8 2C               inc l
 946+ A1E9
 947+ A1E9 3E 80            ld a,$80
 948+ A1EB BE               cp (hl)
 949+ A1EC 28 0D            jr z,1F
 950+ A1EE
 951+ A1EE 04               inc b
 952+ A1EF
 953+ A1EF 3E 60            ld a,$60
 954+ A1F1 BE               cp (hl)
 955+ A1F2 28 07            jr z,1F
 956+ A1F4
 957+ A1F4
 958+ A1F4 04               inc b
 959+ A1F5
 960+ A1F5 3E 18            ld a,$18
 961+ A1F7 BE               cp (hl)
 962+ A1F8 28 01            jr z,1F
 963+ A1FA
 964+ A1FA 04               inc b
 965+ A1FB
 966+ A1FB              ;   Calcula el Puntero_de_impresión del disparo.
 967+ A1FB
 968+ A1FB              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 969+ A1FB
 970+ A1FB CD E4 99     1 call PreviousScan
 971+ A1FE
 972+ A1FE 78               ld a,b
 973+ A1FF CB 3F            srl a
 974+ A201 28 03            jr z,4F
 975+ A203
 976+ A203              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 977+ A203 E5               push hl
 978+ A204 18 02            jr 5F
 979+ A206 2D           4 dec l
 980+ A207 E5               push hl
 981+ A208              ; ---
 982+ A208
 983+ A208              ;   Calcula el Puntero_objeto del disparo.
 984+ A208
 985+ A208 21 76 83     5 ld hl,Indice_disparo_Amadeus
 986+ A20B 04               inc b
 987+ A20C 05               dec b
 988+ A20D 28 04            jr z,2F
 989+ A20F
 990+ A20F              ;   Nos desplazamos por el índice de disparos.
 991+ A20F
 992+ A20F 2C           3 inc l
 993+ A210 2C               inc l
 994+ A211 10 FC            djnz 3B
 995+ A213
 996+ A213              ; --- Guarda el Puntero_objeto del disparo en la pila.
 997+ A213 CD BC 90     2 call Extrae_address
 998+ A216 E5               push hl
 999+ A217              ; ---
1000+ A217
1001+ A217              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1002+ A217              ; HL en el 1er .db de la caja.
1003+ A217
1004+ A217 21 1F 89         ld hl,Disparo_Amad
1005+ A21A
1006+ A21A 06 02            ld b,2
1007+ A21C
1008+ A21C D1           6 pop de
1009+ A21D 73               ld (hl),e
1010+ A21E 23               inc hl
1011+ A21F 72               ld (hl),d
1012+ A220 23               inc hl
1013+ A221
1014+ A221 10 F9            djnz 6B
1015+ A223
1016+ A223 C9               ret
1017+ A224
1018+ A224              Genera_coordenadas_de_disparo_Amadeus
1019+ A224
1020+ A224              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1021+ A224              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1022+ A224              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1023+ A224
1024+ A224 CD BC 90         call Extrae_address
1025+ A227 CD DB 94         call Genera_coordenadas
1026+ A22A
1027+ A22A 3D               dec a
1028+ A22B
1029+ A22B 21 3E 8C         ld hl,Coordenadas_disparo_certero
1030+ A22E 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1031+ A22F 23               inc hl
1032+ A230 3A C0 8B         ld a,(Coordenada_X)
1033+ A233 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1034+ A234
1035+ A234 AF               xor a
1036+ A235 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1037+ A236
1038+ A236 C9               ret
1039+ A237
1040+ A237              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1041+ A237              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1042+ A237              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1043+ A237
1044+ A237              ; ----------------------------------------------
1045+ A237              ;
1046+ A237              ;   27/08/24
1047+ A237              ;
1048+ A237              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1049+ A237              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1050+ A237
1051+ A237              Detecta_impacto_en_disparo_de_Amadeus
1052+ A237
1053+ A237              Extraccion_de_datos
1054+ A237
1055+ A237 13               inc de
1056+ A238 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1057+ A239
1058+ A239 5E               ld e,(hl)
1059+ A23A 23               inc hl
1060+ A23B 56               ld d,(hl)
1061+ A23C
1062+ A23C 23               inc hl
1063+ A23D
1064+ A23D 4E               ld c,(hl)
1065+ A23E 23               inc hl
1066+ A23F 46               ld b,(hl)
1067+ A240
1068+ A240 C5               push bc
1069+ A241 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1070+ A242
1071+ A242              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1072+ A242
1073+ A242 CD E4 99         call PreviousScan
1074+ A245 CD E4 99         call PreviousScan
1075+ A248
1076+ A248              Detecta_impacto_
1077+ A248
1078+ A248 1A               ld a,(de)
1079+ A249 A6               and (hl)
1080+ A24A C0               ret nz
1081+ A24B
1082+ A24B 13               inc de
1083+ A24C 23               inc hl
1084+ A24D
1085+ A24D 1A               ld a,(de)
1086+ A24E A6               and (hl)
1087+ A24F C9               ret
1088+ A250
1089+ A250              ; -------------------------------------------------------------------------------------------------------------
1090+ A250              ;
1091+ A250              ;   8/8/24
1092+ A250              ;
1093+ A250              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1094+ A250              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1095+ A250              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1096+ A250              ;
1097+ A250              ;   MODIFICA: HL,DE,BC y A.
1098+ A250              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1099+ A250              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1100+ A250
1101+ A250              Colision_Entidad_Amadeus
1102+ A250
1103+ A250              ; Posible contacto de entidad con Amadeus. ?????
1104+ A250
1105+ A250              ; Exclusiones:
1106+ A250
1107+ A250 3A 5E 8C         ld a,(Shield)
1108+ A253 A7               and a
1109+ A254 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1110+ A255
1111+ A255 21 34 8C         ld hl,Ctrl_3
1112+ A258 CB 76            bit 6,(hl)
1113+ A25A C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1114+ A25B
1115+ A25B 21 3B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1116+ A25E CB 56            bit 2,(hl)
1117+ A260 C0               ret nz
1118+ A261
1119+ A261 3A C1 8B     	ld a,(Coordenada_y)
1120+ A264 FE 14        	cp $14
1121+ A266 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1122+ A267
1123+ A267 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1124+ A26A A7               and a
1125+ A26B C0               ret nz
1126+ A26C
1127+ A26C              Genera_coordenadas_X
1128+ A26C
1129+ A26C              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1130+ A26C              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1131+ A26C
1132+ A26C              ;   Limpiamos almacenes.
1133+ A26C
1134+ A26C              ;    call Limpia_Coordenadas_X
1135+ A26C
1136+ A26C              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1137+ A26C
1138+ A26C 21 40 8C         ld hl,Coordenadas_X_Entidad
1139+ A26F 3A C0 8B         ld a,(Coordenada_X)
1140+ A272 CD 94 A2         call Guarda_coordenadas_X
1141+ A275
1142+ A275              ;   Almacenamos las coordenadas X de Amadeus.
1143+ A275
1144+ A275 3A 75 89         ld a,(CX_Amadeus)
1145+ A278 CD 94 A2         call Guarda_coordenadas_X
1146+ A27B CD A8 A2         call Compara_coordenadas_X
1147+ A27E C0               ret nz
1148+ A27F
1149+ A27F 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1150+ A281 32 C3 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1151+ A284
1152+ A284 2A FF 8B         ld hl,(Puntero_store_caja)
1153+ A287 2C               inc l
1154+ A288 2C               inc l
1155+ A289 2C               inc l
1156+ A28A 2C               inc l
1157+ A28B 22 3C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1158+ A28E
1159+ A28E 21 3B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1160+ A291 CB D6            set 2,(hl)
1161+ A293
1162+ A293 C9               ret
1163+ A294
1164+ A294               ; ----- ----- ----- ----- -----
1165+ A294
1166+ A294 77           Guarda_coordenadas_X ld (hl),a
1167+ A295 3C               inc a
1168+ A296 2C               inc l
1169+ A297 77               ld (hl),a
1170+ A298 3C               inc a
1171+ A299 2C               inc l
1172+ A29A 77               ld (hl),a
1173+ A29B 2C               inc l
1174+ A29C C9               ret
1175+ A29D
1176+ A29D AF           Limpia_Coordenadas_X xor a
1177+ A29E 06 06            ld b,6
1178+ A2A0 21 43 8C         ld hl,Coordenadas_X_Amadeus
1179+ A2A3 77           1 ld (hl),a
1180+ A2A4 23               inc hl
1181+ A2A5 10 FC            djnz 1B
1182+ A2A7 C9               ret
1183+ A2A8
1184+ A2A8              ; ----- ----- ----- ----- -----
1185+ A2A8
1186+ A2A8              Compara_coordenadas_X
1187+ A2A8
1188+ A2A8 DD 21 40 8C      ld ix,Coordenadas_X_Entidad
1189+ A2AC DD 7E 00         ld a,(ix+0)
1190+ A2AF CD BD A2         call Comparando
1191+ A2B2 C8               ret z
1192+ A2B3
1193+ A2B3 3C               inc a
1194+ A2B4 CD CC A2         call Comparando_1
1195+ A2B7 C8               ret z
1196+ A2B8
1197+ A2B8 3C               inc a
1198+ A2B9 CD CC A2         call Comparando_1
1199+ A2BC C9               ret
1200+ A2BD
1201+ A2BD              ; ----- ----- ----- ----- -----
1202+ A2BD              ;
1203+ A2BD              ;   4/12/23
1204+ A2BD              ;
1205+ A2BD              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1206+ A2BD
1207+ A2BD              Comparando
1208+ A2BD
1209+ A2BD DD 2C            inc ixl
1210+ A2BF DD 2C            inc ixl
1211+ A2C1 DD 2C            inc ixl
1212+ A2C3
1213+ A2C3 DD 46 00         ld b,(ix+0)
1214+ A2C6 DD 4E 01         ld c,(ix+1)
1215+ A2C9 DD 56 02         ld d,(ix+2)
1216+ A2CC
1217+ A2CC B8           Comparando_1 cp b
1218+ A2CD C8               ret z
1219+ A2CE B9               cp c
1220+ A2CF C8               ret z
1221+ A2D0 BA               cp d
1222+ A2D1 C9               ret
1223+ A2D2
1224+ A2D2              ; -----------------------------------------------------------------------
1225+ A2D2              ;
1226+ A2D2              ;   04/7/24
1227+ A2D2              ;
1228+ A2D2
1229+ A2D2              Detecta_colision_nave_entidad
1230+ A2D2
1231+ A2D2              ; Exclusiones:
1232+ A2D2
1233+ A2D2              ; Salimos de la rutina si no hay advertencia de posible colisión.
1234+ A2D2
1235+ A2D2 21 3B 8C     	ld hl,Impacto2
1236+ A2D5 CB 56        	bit 2,(hl)
1237+ A2D7 C8           	ret z
1238+ A2D8
1239+ A2D8              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1240+ A2D8
1241+ A2D8 2A 7B 89         ld hl,(Pamm_Amadeus)
1242+ A2DB CD BC 90         call Extrae_address
1243+ A2DE 54               ld d,h
1244+ A2DF 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1245+ A2E0
1246+ A2E0 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1247+ A2E3 06 10            ld b,16                                        ; Contador de scanlines en B.
1248+ A2E5 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1249+ A2E8
1250+ A2E8 C5           1 push bc
1251+ A2E9 06 03            ld b,3
1252+ A2EB E5               push hl
1253+ A2EC
1254+ A2EC              ; .db
1255+ A2EC
1256+ A2EC 1A           3 ld a,(de)
1257+ A2ED A7               and a
1258+ A2EE 20 03            jr nz,4F
1259+ A2F0
1260+ A2F0 2C               inc l
1261+ A2F1 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1262+ A2F3
1263+ A2F3 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1264+ A2F5 28 04            jr z,2F
1265+ A2F7
1266+ A2F7              ; Impacto.
1267+ A2F7 FD 2D            dec iyl
1268+ A2F9 28 22            jr z,5F
1269+ A2FB
1270+ A2FB 1C           2 inc e
1271+ A2FC 10 EE            djnz 3B
1272+ A2FE
1273+ A2FE E1               pop hl
1274+ A2FF
1275+ A2FF              ; Hay salto de línea en el puntero de impresión ???
1276+ A2FF
1277+ A2FF 7C               ld a,h
1278+ A300 D6 57            sub $57
1279+ A302 20 0A            jr nz,6F
1280+ A304
1281+ A304              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1282+ A304
1283+ A304 2A 79 89         ld hl,(p.imp.amadeus)
1284+ A307 3E 20            ld a,$20
1285+ A309 A7               and a
1286+ A30A 85               add l
1287+ A30B 6F               ld l,a
1288+ A30C 18 01            jr 7F
1289+ A30E
1290+ A30E 24           6 inc h
1291+ A30F
1292+ A30F C1           7 pop bc
1293+ A310 10 D6            djnz 1B
1294+ A312
1295+ A312              ;   Fin de la comparativa.
1296+ A312
1297+ A312              ;   NO HAY COLISIÓN !!!!!.
1298+ A312              ;
1299+ A312              ;   .db (Impacto) de Amadeus a "0".
1300+ A312              ;   RES el bit2 de (Impacto2).
1301+ A312              ;
1302+ A312              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1303+ A312              ;   Lo colocamos a "0".
1304+ A312
1305+ A312 21 3B 8C         ld hl,Impacto2
1306+ A315 CB 96            res 2,(hl)
1307+ A317 2A 3C 8C         ld hl,(Entidad_sospechosa_de_colision)
1308+ A31A 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1309+ A31C C9               ret
1310+ A31D
1311+ A31D              ;   COLISIÓN !!!!!.
1312+ A31D              ;
1313+ A31D              ;   .db (Impacto) de Amadeus a "1".
1314+ A31D              ;   SET el bit3 de (Impacto2).
1315+ A31D              ;
1316+ A31D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1317+ A31D
1318+ A31D E1           5 pop hl
1319+ A31E C1               pop bc
1320+ A31F
1321+ A31F 21 78 89         ld hl,Impacto_Amadeus
1322+ A322 36 01            ld (hl),1
1323+ A324 21 3B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1324+ A327 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1325+ A329
1326+ A329 11 C0 87         ld de,Indice_Explosion_entidades
1327+ A32C 2A 3C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1328+ A32F
1329+ A32F 23               inc hl
1330+ A330 23               inc hl
1331+ A331 23               inc hl
1332+ A332
1333+ A332 73               ld (hl),e
1334+ A333 23               inc hl
1335+ A334 72               ld (hl),d
1336+ A335
1337+ A335              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1338+ A335
1339+ A335 11 60 88         ld de,Indice_Explosion_Amadeus
1340+ A338 21 7B 89         ld hl,Pamm_Amadeus
1341+ A33B
1342+ A33B 73               ld (hl),e
1343+ A33C 23               inc hl
1344+ A33D 72               ld (hl),d
1345+ A33E
1346+ A33E C9               ret
1347+ A33F
1348+ A33F
1349+ A33F
# file closed: Disparo.asm
2053  A33F
2054  A33F              	SAVESNA "Pruebas.sna", START
2055  A33F
2056  A33F
2057  A33F
2058  A33F
# file closed: Banco_de_pruebas.asm
