# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2E 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD 26 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 53 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD C0 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 51 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 51 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 54 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD D0 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 183  8BC4
 184  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC6
 187  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC6
 189  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC7
 195  8BC7 00           Ctrl_2 db 0
 196  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC8              ;
 204  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC8              ;														BIT 4, ???
 210  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC8
 212  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC9              ;
 218  8BC9              ; 														DESCRIPCIÖN:
 219  8BC9              ;
 220  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC9              ;
 234  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC9
 238  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC9
 240  8BC9 00           Filas db 0												; Filas. [DRAW]
 241  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BCF
 245  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BCF
 247  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BD0
 251  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BD0
 253  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BD0              ;
 255  8BD0              ;	COLORES: 0 ..... NEGRO
 256  8BD0              ;    		 1 ..... AZUL
 257  8BD0              ; 			 2 ..... ROJO
 258  8BD0              ;			 3 ..... MAGENTA
 259  8BD0              ; 			 4 ..... VERDE
 260  8BD0              ; 			 5 ..... CIAN
 261  8BD0              ;			 6 ..... AMARILLO
 262  8BD0              ; 			 7 ..... BLANCO
 263  8BD0
 264  8BD0 00 00        Indice_Sprite_der defw 0
 265  8BD2 00 00        Indice_Sprite_izq defw 0
 266  8BD4 00 00        Puntero_DESPLZ_der defw 0
 267  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD8
 269  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BDB 00           Columnas db 0
 272  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BDF
 276  8BDF              ; variables de control general.
 277  8BDF
 278  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BE0
 280  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BE0
 282  8BE0              Perfiles_de_velocidad
 283  8BE0
 284  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BE4
 289  8BE4              ; Contadores de 16 bits.
 290  8BE4
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BEC
 296  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BEC
 298  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BF2              ;
 302  8BF2              ;
 303  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BF3 00           Incrementa_puntero_backup db 0
 307  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF8              ;
 313  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF8              ;
 317  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF8              ;
 322  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF8
 326  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF9
 328  8BF9              ;														DESCRIPCIÓN:
 329  8BF9              ;
 330  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF9
 337  8BF9              ;														BIT 3, Recarga de nueva oleada.
 338  8BF9              ;														BIT 4, Recarga de nueva oleada.
 339  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF9              ;														BIT 6, **** Frame completo.
 341  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF9
 343  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BFB
 348  8BFB              ; Gestión de ENTIDADES y CAJAS.
 349  8BFB
 350  8BFB 00 00        Puntero_store_caja defw 0
 351  8BFD 00 00        Puntero_restore_caja defw 0
 352  8BFF 00 00        Indice_restore_caja defw 0
 353  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8C04              ;Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 357  8C04              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 358  8C04              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 359  8C04              ;														; _ (Numero_de_malotes)="0".
 360  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 361  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 362  8C08              ;														; _ puntero (Indice_entidades).
 363  8C08
 364  8C08              ;---------------------------------------------------------------------------------------------------------------
 365  8C08              ;
 366  8C08              ;	12/08/24
 367  8C08              ;
 368  8C08              ;	Álbumes.
 369  8C08
 370  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 371  8C0A              ;														; _variable para almacenar lo posición del puntero_
 372  8C0A              ; 														; _de pila, SP.
 373  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 374  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 375  8C0C
 376  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 377  8C0C
 378  8C0C 00 00        Album_de_pintado defw 0
 379  8C0E 00 00        Album_de_borrado defw 0
 380  8C10 00 00        Album_de_pintado_Amadeus defw 0
 381  8C12 00 00        Album_de_borrado_Amadeus defw 0
 382  8C14 00 00        Album_de_pintado_disparos defw 0
 383  8C16 00 00        Album_de_borrado_disparos defw 0
 384  8C18
 385  8C18 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 386  8C1A 00 00        Nivel_scan_disparos_album_de_borrado defw 0
 387  8C1C
 388  8C1C 00           Numero_de_disparos_de_Amadeus db 0
 389  8C1D 00           Numero_de_disparos_de_entidades db 0
 390  8C1E
 391  8C1E 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 392  8C1F              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 393  8C1F
 394  8C1F 00 00        Puntero_rancio_disparos_album defw 0
 395  8C21
 396  8C21 00 00        Techo_Scanlines_album defw 0
 397  8C23 00 00        Techo_Scanlines_album_2 defw 0
 398  8C25 00           Switch db 0
 399  8C26 00 00        Techo defw 0
 400  8C28 00 00        Scanlines_album_SP defw 0
 401  8C2A 00 89        India_SP defw Tabla_de_pintado
 402  8C2C 03 89        India_2_SP defw Tabla_de_pintado+3
 403  8C2E
 404  8C2E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 405  8C2F              ;
 406  8C2F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 407  8C2F              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 408  8C2F              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 409  8C2F              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 410  8C2F              ;																Habilita el borrado/pintado de sprites.
 411  8C2F              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 412  8C2F              ;																_ a la baja.
 413  8C2F              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 414  8C2F              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 415  8C2F              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 416  8C2F              ; 																_ el último frame de la explosión de nuestra nave.
 417  8C2F              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 418  8C2F              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 419  8C2F
 420  8C2F 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 421  8C30              ;
 422  8C30              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 423  8C30              ;
 424  8C30              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 425  8C30              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 426  8C30              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 427  8C30              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 428  8C30              ;
 429  8C30              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 430  8C30              ;															_ masticados ya generados.
 431  8C30              ;
 432  8C30              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 433  8C30              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 434  8C30              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 435  8C30              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 436  8C30
 437  8C30 00           Ctrl_5 db 0
 438  8C31
 439  8C31              ; Gestión de Disparos.
 440  8C31
 441  8C31              ;Numero_de_disparotes db 0
 442  8C31
 443  8C31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 444  8C33 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 445  8C35
 446  8C35 00           Impacto2 db 0											; Byte de control de impactos.
 447  8C36
 448  8C36              ;
 449  8C36              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 450  8C36              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 451  8C36              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 452  8C36              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 453  8C36
 454  8C36
 455  8C36
 456  8C36
 457  8C36
 458  8C36
 459  8C36
 460  8C36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 461  8C38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 462  8C38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 463  8C38
 464  8C38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 465  8C3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 466  8C3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 467  8C3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 468  8C3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 469  8C40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 470  8C40
 471  8C40              ;---------------------------------------------------------------------------------------------------------------
 472  8C40
 473  8C40              ; Relojes y temporizaciones.
 474  8C40
 475  8C40 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 476  8C41 05           Clock_explosion_Amadeus db 5
 477  8C42 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 478  8C43
 479  8C43 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 480  8C45
 481  8C45 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 482  8C47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 483  8C48              ;														; Repite la oleada de entidades.
 484  8C48
 485  8C48              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 486  8C48              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 487  8C48              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 488  8C48              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 489  8C48
 490  8C48              ;---------------------------------------------------------------------------------------------------------------
 491  8C48
 492  8C48              ; Gestión de NIVELES.
 493  8C48
 494  8C48 00           Nivel db 0												; Nivel actual del juego.
 495  8C49 00 00        Puntero_indice_NIVELES defw 0
 496  8C4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 497  8C4D              ; 														; _ que definen el NIVEL.
 498  8C4D
 499  8C4D              ; ---------------------------------------------------------------------------------------------------------------
 500  8C4D
 501  8C4D              ; Temporizaciones Shield.
 502  8C4D
 503  8C4D 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 504  8C51 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 505  8C53 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 506  8C54 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 507  8C55 00           Shield_3 db 0
 508  8C56
 509  8C56 06           Lives db 6
 510  8C57
 511  8C57              ; 	INICIO  *************************************************************************************************************************************************************************
 512  8C57              ;
 513  8C57              ;	5/1/24
 514  8C57
 515  8C57              START
 516  8C57
 517  8C57 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 518  8C5A 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 519  8C5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 520  8C5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 521  8C60 F3           	DI
 522  8C61
 523  8C61              ; Limpiamos pantalla.
 524  8C61
 525  8C61 3E 07        	ld a,%00000111
 526  8C63              ;	call Cls
 527  8C63 CD B5 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 528  8C66
 529  8C66              ; INICIALIZACIÓN.
 530  8C66
 531  8C66 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 532  8C68 CD 02 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 533  8C6B CD 49 8E     	call Extrae_numero_aleatorio_y_avanza
 534  8C6E
 535  8C6E 6F           	ld l,a
 536  8C6F 26 00        	ld h,0
 537  8C71 22 45 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 538  8C74
 539  8C74              ;	Inicializa 1er Nivel.
 540  8C74
 541  8C74 21 97 8B     	ld hl,Indice_de_niveles
 542  8C77 22 49 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 543  8C7A CD 32 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 544  8C7D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 545  8C7D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 546  8C7D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 547  8C7D
 548  8C7D              ;	Inicia los álbumes de líneas.
 549  8C7D
 550  8C7D CD FE 8F     	call Inicia_albumes_de_lineas
 551  8C80              ;
 552  8C80 CD 0E 90     	call Inicia_albumes_de_lineas_Amadeus
 553  8C83 CD 1B 90     	call Inicia_albumes_de_disparos
 554  8C86
 555  8C86
 556  8C86 CD 77 92     4 call Inicia_Entidades
 557  8C89 CD DA 92     	call Inicia_Amadeus
 558  8C8C
 559  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 560  8C8C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 561  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 562  8C8C
 563  8C8C 11 70 89     	ld de,Amadeus_BOX
 564  8C8F CD 2D 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 565  8C92 CD 1D 93     	call Limpiamos_bandeja_DRAW
 566  8C95
 567  8C95              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 568  8C95
 569  8C95 06 3C        	ld b,60
 570  8C97 CD FF 9C     2 call Amadeus_a_izquierda
 571  8C9A 10 FB        	djnz 2B
 572  8C9C
 573  8C9C CD DC 8F     	call Genera_datos_de_impresion_Amadeus
 574  8C9F
 575  8C9F              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 576  8C9F
 577  8C9F CD 2E 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 578  8CA2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 579  8CA2
 580  8CA2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 581  8CA2              ; (Esto se dá cuando se inicia una nueva oleada).
 582  8CA2
 583  8CA2              ;	ld a,(Ctrl_1)
 584  8CA2              ;	bit 3,a
 585  8CA2              ;	jr nz,5F											 ; Loop
 586  8CA2
 587  8CA2              ;	ld de,Amadeus_db
 588  8CA2              ;	call Store_Amadeus
 589  8CA2
 590  8CA2              ; 	INICIA DISPAROS !!!!!
 591  8CA2
 592  8CA2 CD 44 90     	call Inicia_Puntero_Disparo_Entidades
 593  8CA5 CD 4B 90     	call Inicia_Puntero_Disparo_Amadeus
 594  8CA8
 595  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 596  8CA8
 597  8CA8              ;5 call Inicia_punteros_de_cajas
 598  8CA8              ;	call Restore_entidad
 599  8CA8
 600  8CA8              ;	ld a,(Ctrl_1)
 601  8CA8              ;	bit 3,a
 602  8CA8              ;	jr z,6F
 603  8CA8
 604  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 605  8CA8
 606  8CA8              ;	ld hl,Ctrl_1
 607  8CA8              ;	res 3,(hl)
 608  8CA8              ;	jr Main
 609  8CA8
 610  8CA8              ; Damos por concluida la construcción del FRAME.
 611  8CA8              ;
 612  8CA8
 613  8CA8 CD C0 90     	call Inicia_Shield
 614  8CAB
 615  8CAB
 616  8CAB 2A 28 8C     6 ld hl,(Scanlines_album_SP)
 617  8CAE 22 21 8C     	ld (Techo_Scanlines_album),hl
 618  8CB1
 619  8CB1 2A 0E 8C     	ld hl,(Album_de_borrado)
 620  8CB4 22 28 8C     	ld (Scanlines_album_SP),hl
 621  8CB7
 622  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 623  8CBA 22 2A 8C     	ld (India_SP),hl
 624  8CBD
 625  8CBD 21 2E 8C     	ld hl,Ctrl_3
 626  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 627  8CC2 CB D6        	set 2,(hl)
 628  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 629  8CC6
 630  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 631  8CC7
 632  8CC7 76           	halt
 633  8CC8
 634  8CC8              ; ------------------------------------
 635  8CC8
 636  8CC8              Main
 637  8CC8              ;
 638  8CC8              ; 22/08/24
 639  8CC8
 640  8CC8              ; Gestión de disparos.
 641  8CC8
 642  8CC8 CD 31 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 643  8CCB CD B6 9E     	call Mueve_Disparos
 644  8CCE
 645  8CCE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 646  8CCE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 647  8CCE              ; Este hecho lo indica el bit2 de (Impacto2).
 648  8CCE
 649  8CCE CD B5 A0     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 650  8CD1
 651  8CD1 2A 45 8C     16 ld hl,(Clock_next_entity)
 652  8CD4 ED 4B 78 5C  	ld bc,(FRAMES)
 653  8CD8 A7           	and a
 654  8CD9 ED 42        	sbc hl,bc
 655  8CDB 20 16        	jr nz,13F
 656  8CDD
 657  8CDD              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 658  8CDD              ; _ (Clock_next_entity) para la siguiente entidad.
 659  8CDD
 660  8CDD 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 661  8CE0 47           	ld b,a
 662  8CE1 3A 03 8C     	ld a,(Entidades_en_curso)
 663  8CE4 B8           	cp b
 664  8CE5 28 0C        	jr z,13F
 665  8CE7 30 0A        	jr nc,13F
 666  8CE9
 667  8CE9 3C           	inc a
 668  8CEA 32 03 8C     	ld (Entidades_en_curso),a
 669  8CED
 670  8CED              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 671  8CED
 672  8CED CD 49 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 673  8CF0 CD 65 8E     	call Define_Clock_next_entity
 674  8CF3
 675  8CF3              ; -------------------------------------------------------------------------------------------------------------
 676  8CF3
 677  8CF3              ; Habilita disparos.
 678  8CF3
 679  8CF3              13
 680  8CF3
 681  8CF3              ;	ld hl,Disparo_Amadeus
 682  8CF3              ;	ld de,CLOCK_repone_disparo_Amadeus
 683  8CF3              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 684  8CF3
 685  8CF3              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 686  8CF3              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 687  8CF3              ;	call Habilita_disparos
 688  8CF3
 689  8CF3              ; COLISIONES.
 690  8CF3
 691  8CF3              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 692  8CF3
 693  8CF3              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 694  8CF3              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 695  8CF3              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 696  8CF3
 697  8CF3              ;	xor a
 698  8CF3              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 699  8CF3
 700  8CF3              ;	call Inicia_punteros_de_cajas
 701  8CF3              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 702  8CF3              ; 														; _ en DRAW.
 703  8CF3
 704  8CF3              ;	ld a,(Filas)
 705  8CF3              ;	and a
 706  8CF3              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 707  8CF3              ;	call Incrementa_punteros_de_cajas
 708  8CF3              ;	jr 12B
 709  8CF3
 710  8CF3              ; ---------------------------------------------------------------------------------------
 711  8CF3
 712  8CF3              ;10 ld a,(Numero_parcial_de_entidades)
 713  8CF3              ;    ld b,a
 714  8CF3              ;	and a
 715  8CF3              ;	jr nz,11F
 716  8CF3
 717  8CF3              ;	ld hl,Ctrl_1;
 718  8CF3              ;	bit 4,(hl)
 719  8CF3              ;	jp nz,16F
 720  8CF3
 721  8CF3              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 722  8CF3
 723  8CF3              ;	ld hl,Ctrl_1
 724  8CF3              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 725  8CF3
 726  8CF3              ;	ld a,(Contador_de_frames)
 727  8CF3              ;	inc a
 728  8CF3              ;	ld (Activa_recarga_cajas),a
 729  8CF3
 730  8CF3              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 731  8CF3
 732  8CF3 3A 03 8C     11 ld a,(Entidades_en_curso)
 733  8CF6 A7           	and a
 734  8CF7 CA 5F 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 735  8CFA 47           	ld b,a												; No hay entidades que gestionar.
 736  8CFB
 737  8CFB              ; ( Código que ejecutamos con cada entidad: ).
 738  8CFB
 739  8CFB              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 740  8CFB              ;
 741  8CFB              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 742  8CFB
 743  8CFB 21 00 89     	ld hl,Tabla_de_pintado
 744  8CFE 22 2A 8C     	ld (India_SP),hl
 745  8D01
 746  8D01 21 2E 8C     	ld hl,Ctrl_3
 747  8D04 CB D6        	set 2,(hl)
 748  8D06 CD 06 8E     	call Change
 749  8D09
 750  8D09 C5           15 push bc 												; Nº de entidades en curso.
 751  8D0A
 752  8D0A CD 8D 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 753  8D0D ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 754  8D11
 755  8D11              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 756  8D11
 757  8D11              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 758  8D11
 759  8D11 3A BF 8B     	ld a,(Impacto)
 760  8D14 A7           	and a
 761  8D15 28 13        	jr z,8F
 762  8D17
 763  8D17              ; 5/7/24
 764  8D17              ; Nota importante:
 765  8D17              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 766  8D17              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 767  8D17              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 768  8D17
 769  8D17 3A 2E 8C     	ld a,(Ctrl_3)
 770  8D1A CB 7F        	bit 7,a
 771  8D1C 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 772  8D1E              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 773  8D1E 3A 74 89     	ld a,(Impacto_Amadeus)
 774  8D21 A7           	and a
 775  8D22 C4 9D 91     	call nz,Genera_explosion
 776  8D25 20 1B        	jr nz,Gestiona_siguiente_entidad
 777  8D27
 778  8D27              ; Falsa colisión !!!
 779  8D27
 780  8D27 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 781  8D2A
 782  8D2A              ; -------------------------------------------
 783  8D2A
 784  8D2A CD A9 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 785  8D2D CD E6 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 786  8D30 CD 95 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 787  8D33 CD 9D 94     	call Genera_datos_de_impresion
 788  8D36 CD 40 93     	call Decrementa_Contador_de_mov_masticados
 789  8D39
 790  8D39              ; -------------------------------------------
 791  8D39
 792  8D39              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 793  8D39
 794  8D39 2A C0 8B     	ld hl,(Puntero_de_impresion)
 795  8D3C CD 71 94     	call Genera_coordenadas
 796  8D3F
 797  8D3F CD 33 A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 798  8D42
 799  8D42              ;	ld hl,Ctrl_0
 800  8D42              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 801  8D42
 802  8D42              Gestiona_siguiente_entidad
 803  8D42
 804  8D42 CD 12 93      	call Store_Restore_cajas
 805  8D45 C1           	pop bc
 806  8D46 10 C1        	djnz 15B
 807  8D48
 808  8D48              ; Hemos gestionado todas las entidades.
 809  8D48
 810  8D48 CD B9 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 811  8D4B CD D0 8E     	call Ordena_tabla_de_impresion
 812  8D4E CD 2E 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 813  8D51
 814  8D51              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 815  8D51              ; Hemos gestionado todas las unidades.
 816  8D51              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 817  8D51
 818  8D51              ;	ld hl,Ctrl_1
 819  8D51              ;	res 2,(hl)
 820  8D51
 821  8D51 CD 7A 8E     	call Borra_diferencia
 822  8D54
 823  8D54 3A 2E 8C     	ld a,(Ctrl_3)
 824  8D57 CB 5F        	bit 3,a
 825  8D59 20 04        	jr nz,Gestion_de_Amadeus
 826  8D5B
 827  8D5B EB           	ex de,hl
 828  8D5C 71           	ld (hl),c
 829  8D5D 2C           	inc l
 830  8D5E 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 831  8D5F
 832  8D5F
 833  8D5F              ;! GESTIONA AMADEUS !!!!!!!!!!
 834  8D5F
 835  8D5F              Gestion_de_Amadeus
 836  8D5F
 837  8D5F 21 2E 8C     	ld hl,Ctrl_3
 838  8D62 CB 76        	bit 6,(hl)
 839  8D64 28 13        	jr z,Amadeus_vivo
 840  8D66
 841  8D66              ; Amadeus ha sido destruido.
 842  8D66              ; Decrementa (Temp_new_live).
 843  8D66
 844  8D66 21 42 8C     	ld hl,Temp_new_live
 845  8D69 35           	dec (hl)
 846  8D6A 20 29        	jr nz,End_frame
 847  8D6C
 848  8D6C              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 849  8D6C
 850  8D6C 21 56 8C     	ld hl,Lives
 851  8D6F 35           	dec (hl)
 852  8D70
 853  8D70              ;! Fin del juego
 854  8D70
 855  8D70 F3           	di
 856  8D71 28 FE        	jr z,$
 857  8D73 FB           	ei
 858  8D74
 859  8D74              ; Nueva nave.
 860  8D74
 861  8D74 CD AC 8D     	call Reinicia_Amadeus
 862  8D77 18 1C        	jr End_frame
 863  8D79
 864  8D79              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 865  8D79
 866  8D79              Amadeus_vivo
 867  8D79
 868  8D79 3A 74 89     	ld a,(Impacto_Amadeus)
 869  8D7C A7           	and a
 870  8D7D C4 CD 91     	call nz, Genera_explosion_Amadeus
 871  8D80 20 13        	jr nz, End_frame
 872  8D82
 873  8D82 CD 7A 91     	call Teclado
 874  8D85
 875  8D85              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 876  8D85              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 877  8D85
 878  8D85 CD 5C 9F     	call Genera_datos_de_impresion_disparos_Amadeus
 879  8D88              ;	call Limpia_album_de_pintado_disparos
 880  8D88
 881  8D88 21 2E 8C     	ld hl,Ctrl_3
 882  8D8B CB 6E        	bit 5,(hl)
 883  8D8D 28 06        	jr z,End_frame
 884  8D8F
 885  8D8F              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 886  8D8F
 887  8D8F CD 21 8E     	call Change_Amadeus
 888  8D92 CD DC 8F     	call Genera_datos_de_impresion_Amadeus
 889  8D95
 890  8D95              End_frame
 891  8D95
 892  8D95 2A 0E 8C     	ld hl,(Album_de_borrado)
 893  8D98 22 28 8C     	ld (Scanlines_album_SP),hl
 894  8D9B
 895  8D9B 21 2E 8C     	ld hl,Ctrl_3
 896  8D9E CB C6        	set 0,(hl) 											; Indica Frame completo.
 897  8DA0 CB 9E        	res 3,(hl)
 898  8DA2 CB A6        	res 4,(hl)
 899  8DA4
 900  8DA4 AF           	xor a
 901  8DA5 D3 FE        	out ($fe),a
 902  8DA7
 903  8DA7 76           	halt
 904  8DA8
 905  8DA8              ; ----------------------------------------
 906  8DA8
 907  8DA8              ;	ld a,(Ctrl_1) 										; Existe Loop?
 908  8DA8              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 909  8DA8 CA C8 8C     	jp z,Main
 910  8DAB
 911  8DAB              ; RECARGA DE NUEVA OLEADA.
 912  8DAB
 913  8DAB              ;	ld a,(Contador_de_frames)
 914  8DAB              ;	ld b,a
 915  8DAB              ;	ld a,(Activa_recarga_cajas)
 916  8DAB              ;	cp b
 917  8DAB              ;	jr z,20F
 918  8DAB
 919  8DAB              ;	ld hl,Ctrl_1
 920  8DAB              ;	set 4,(hl)
 921  8DAB              ;	jp Main
 922  8DAB
 923  8DAB              ;20 ld hl,Ctrl_1
 924  8DAB              ;	res 4,(hl)
 925  8DAB
 926  8DAB              ;	ld a,(Contador_de_frames)
 927  8DAB
 928  8DAB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 929  8DAB              ;! _ IMPREDECIBLE !!!!
 930  8DAB
 931  8DAB              ;	add 10
 932  8DAB              ;	ld (Clock_next_entity),a
 933  8DAB
 934  8DAB              ;	jp 4B
 935  8DAB
 936  8DAB C9           	ret
 937  8DAC
 938  8DAC              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 939  8DAC              ;
 940  8DAC              ;	16/11/23
 941  8DAC
 942  8DAC              ;;Gestiona_Amadeus
 943  8DAC
 944  8DAC              ;! Activa/desactiva impacto con Amadeus.
 945  8DAC
 946  8DAC              ;	ld a,(Impacto)
 947  8DAC              ;	and a
 948  8DAC              ;	jr nz,2F
 949  8DAC
 950  8DAC              ;;	call Mov_Amadeus
 951  8DAC
 952  8DAC              ;;2 ld a,(Ctrl_0)
 953  8DAC              ;;	bit 4,a
 954  8DAC              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 955  8DAC
 956  8DAC              ;;	call Guarda_foto_entidad_a_pintar
 957  8DAC              ;;	call Guarda_datos_de_borrado_Amadeus
 958  8DAC
 959  8DAC              ;;1 ld hl,Ctrl_0
 960  8DAC              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 961  8DAC
 962  8DAC              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 963  8DAC
 964  8DAC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 965  8DAC
 966  8DAC              ;	call Calcula_numero_de_disparotes
 967  8DAC
 968  8DAC              ;;	ret
 969  8DAC
 970  8DAC              ; -----------------------------
 971  8DAC              ;
 972  8DAC              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 973  8DAC              ;
 974  8DAC              ;	INPUTS: B a de estar a "0".
 975  8DAC
 976  8DAC              ;Prepara_Borra_sprites
 977  8DAC
 978  8DAC              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 979  8DAC              ;	ld a,l
 980  8DAC              ;	ret z
 981  8DAC
 982  8DAC              ;	srl a
 983  8DAC
 984  8DAC              ;2 sub 16
 985  8DAC              ;	jr z,1F
 986  8DAC              ;	inc b
 987  8DAC              ;	jr 2B
 988  8DAC
 989  8DAC              ;1 inc b
 990  8DAC
 991  8DAC              ;	exx
 992  8DAC              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 993  8DAC              ;	exx
 994  8DAC
 995  8DAC              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 996  8DAC              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 997  8DAC
 998  8DAC              ;	ret
 999  8DAC
1000  8DAC              ; --------------------------------------------------------------------------------------------------------------
1001  8DAC              ;
1002  8DAC              ;	15/12/23
1003  8DAC
1004  8DAC              ;Mov_obj
1005  8DAC
1006  8DAC              ;	ld a,(Ctrl_2)
1007  8DAC              ;	bit 1,a
1008  8DAC              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1009  8DAC
1010  8DAC              ; Explosión:
1011  8DAC
1012  8DAC              ;	ld a,(Frames_explosion)
1013  8DAC              ;	and a
1014  8DAC              ;	jr nz,4F
1015  8DAC
1016  8DAC              ;!  Una alimaña menos!!!!!!!!!1
1017  8DAC
1018  8DAC              ; Se trataba de una Entidad_guía ???
1019  8DAC
1020  8DAC              ;	ld a,(Ctrl_2)
1021  8DAC              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1022  8DAC              ;	jr z,5F
1023  8DAC
1024  8DAC              ;	ld hl,Ctrl_3
1025  8DAC              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1026  8DAC
1027  8DAC              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1028  8DAC              ;!! _generado puede ser distinto, (aletoriedad).
1029  8DAC
1030  8DAC              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1031  8DAC              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1032  8DAC              ;	dec (hl)
1033  8DAC              ;	ld hl,Entidades_en_curso
1034  8DAC              ;	dec (hl)
1035  8DAC              ;	ld hl,Numero_de_entidades
1036  8DAC              ;	dec (hl)
1037  8DAC              ;	jr 3F
1038  8DAC
1039  8DAC              ; -----
1040  8DAC
1041  8DAC              ;	`Movemos´ la explosión.
1042  8DAC
1043  8DAC              ;4 ld hl,(Puntero_DESPLZ_der)
1044  8DAC              ;	inc hl
1045  8DAC              ;	inc hl
1046  8DAC              ;	call Extrae_address
1047  8DAC              ;;	ld (Puntero_objeto),hl
1048  8DAC
1049  8DAC              ;;	ld hl,Frames_explosion
1050  8DAC              ;;	dec (hl)
1051  8DAC
1052  8DAC              ;;	ld hl,Ctrl_0
1053  8DAC              ;;	set 4,(hl);;
1054  8DAC
1055  8DAC              ;;	jr 3F
1056  8DAC
1057  8DAC              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1058  8DAC
1059  8DAC              ;2 xor a
1060  8DAC              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1061  8DAC
1062  8DAC              ; Movemos Entidades malignas.
1063  8DAC              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1064  8DAC
1065  8DAC              ;	ld a,(Ctrl_2)
1066  8DAC              ;	bit 5,a
1067  8DAC              ;	jr nz,8F
1068  8DAC
1069  8DAC              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1070  8DAC              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1071  8DAC              ;	jr 7F
1072  8DAC
1073  8DAC              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1074  8DAC
1075  8DAC              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1076  8DAC              ;	bit 4,a
1077  8DAC              ;	ret z
1078  8DAC
1079  8DAC              ; Ha habido desplazamiento de la entidad maligna.
1080  8DAC              ; Ha llegado a zona de AMADEUS ???
1081  8DAC
1082  8DAC              ;7 ld a,(Coordenada_y)
1083  8DAC              ;	cp $14
1084  8DAC              ;	jr c,1F
1085  8DAC
1086  8DAC              ; ---------
1087  8DAC
1088  8DAC              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1089  8DAC              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1090  8DAC
1091  8DAC              ;	di
1092  8DAC              ;	call Genera_coordenadas_X
1093  8DAC              ;	call Compara_coordenadas_X
1094  8DAC              ;	ei
1095  8DAC
1096  8DAC              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1097  8DAC
1098  8DAC              ; ---------
1099  8DAC
1100  8DAC              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1101  8DAC              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1102  8DAC              ;	call Limpia_Variables_de_borrado
1103  8DAC
1104  8DAC              ;3 ret
1105  8DAC
1106  8DAC              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1107  8DAC              ;
1108  8DAC              ;	24/07/24
1109  8DAC
1110  8DAC              Reinicia_Amadeus
1111  8DAC
1112  8DAC              ;	Reinicia posición y estado.
1113  8DAC
1114  8DAC 21 CF 50     	ld hl,$50cf
1115  8DAF 22 75 89     	ld (p.imp.amadeus),hl
1116  8DB2 21 F0 E0     	ld hl,$e0f0
1117  8DB5 22 77 89     	ld (Pamm_Amadeus),hl
1118  8DB8 21 3D 00     	ld hl,$003d
1119  8DBB 22 79 89     	ld (Comm_Amadeus),hl
1120  8DBE
1121  8DBE              ;	limpiamos el álbum de borrado.
1122  8DBE
1123  8DBE 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1124  8DC1
1125  8DC1 AF           	xor a
1126  8DC2 77           	ld (hl),a
1127  8DC3
1128  8DC3 E5           	push hl
1129  8DC4 D1           	pop de
1130  8DC5 13           	inc de
1131  8DC6
1132  8DC6 01 23 00     	ld bc,35
1133  8DC9 ED B0        	ldir
1134  8DCB
1135  8DCB CD DC 8F     	call Genera_datos_de_impresion_Amadeus
1136  8DCE
1137  8DCE              ;	Reinicia temporizaciones.
1138  8DCE
1139  8DCE CD C0 90     	call Inicia_Shield
1140  8DD1
1141  8DD1 3E 5A        	ld a,90
1142  8DD3 32 53 8C     	ld (Shield),a
1143  8DD6
1144  8DD6 3E 64        	ld a,100
1145  8DD8 32 42 8C     	ld (Temp_new_live),a
1146  8DDB
1147  8DDB              ; 	Restauramos el FLAG: Amadeus vivo.
1148  8DDB
1149  8DDB 21 2E 8C     	ld hl,Ctrl_3
1150  8DDE CB B6        	res 6,(hl)
1151  8DE0
1152  8DE0              ;	Fuerza la impresión de la nave en el siguiente frame.
1153  8DE0
1154  8DE0 21 2E 8C      	ld hl,Ctrl_3
1155  8DE3 CB EE        	set 5,(hl)
1156  8DE5
1157  8DE5 C9           	ret
1158  8DE6
1159  8DE6              ; --------------------------------------------------------------------------------------------------------------
1160  8DE6              ;
1161  8DE6              ;	12/05/24
1162  8DE6
1163  8DE6 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1164  8DE9 CB 27        	sla a
1165  8DEB 32 C6 8B     	ld (Velocidad),a
1166  8DEE E6 10        	and $10
1167  8DF0 C8           	ret z
1168  8DF1
1169  8DF1              ; Restaura (Velocidad) a razón del nº de vueltas.
1170  8DF1
1171  8DF1 3A BE 8B     	ld a,(Contador_de_vueltas)
1172  8DF4 CB 2F        	sra a
1173  8DF6 CB 2F        	sra a
1174  8DF8 32 C6 8B     	ld (Velocidad),a
1175  8DFB
1176  8DFB 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1177  8DFE 23           	inc hl
1178  8DFF 23           	inc hl
1179  8E00 23           	inc hl
1180  8E01 23           	inc hl
1181  8E02 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1182  8E05
1183  8E05 C9           	ret
1184  8E06
1185  8E06              ; --------------------------------------------------------------------------------------------------------------
1186  8E06              ;
1187  8E06              ;	21/08/24
1188  8E06
1189  8E06              Change
1190  8E06
1191  8E06 3A 25 8C     	ld a,(Switch)
1192  8E09 EE 01        	xor 1
1193  8E0B 32 25 8C     	ld (Switch),a
1194  8E0E 2A 0C 8C     	ld hl,(Album_de_pintado)
1195  8E11 ED 5B 0E 8C  	ld de,(Album_de_borrado)
1196  8E15 EB           	ex de,hl
1197  8E16 22 0C 8C     	ld (Album_de_pintado),hl
1198  8E19 22 28 8C     	ld (Scanlines_album_SP),hl
1199  8E1C ED 53 0E 8C  	ld (Album_de_borrado),de
1200  8E20 C9           	ret
1201  8E21
1202  8E21              Change_Amadeus
1203  8E21
1204  8E21 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1205  8E24 ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1206  8E28 EB           	ex de,hl
1207  8E29 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1208  8E2C ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1209  8E30 C9           	ret
1210  8E31
1211  8E31              Change_Disparos
1212  8E31
1213  8E31              ;	Exclusiones:
1214  8E31
1215  8E31 3A 1C 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1216  8E34 A7           	and a
1217  8E35 C8           	ret z
1218  8E36
1219  8E36              ;	ld hl,(Nivel_scan_disparos_album_de_pintado)
1220  8E36              ;	ld (Nivel_scan_disparos_album_de_borrado),hl
1221  8E36
1222  8E36 2A 14 8C     	ld hl,(Album_de_pintado_disparos)
1223  8E39 ED 5B 16 8C  	ld de,(Album_de_borrado_disparos)
1224  8E3D EB           	ex de,hl
1225  8E3E 22 14 8C     	ld (Album_de_pintado_disparos),hl
1226  8E41 ED 53 16 8C  	ld (Album_de_borrado_disparos),de
1227  8E45 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1228  8E48
1229  8E48 C9           	ret
1230  8E49
1231  8E49              ; ------------------------------------
1232  8E49              ;
1233  8E49              ; 1/05/24
1234  8E49
1235  8E49              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1236  8E49              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1237  8E49
1238  8E49              ;	DESTRUYE: HL,DE,A
1239  8E49              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1240  8E49
1241  8E49              ;	Variables implicadas: (RND_SP).
1242  8E49
1243  8E49              Extrae_numero_aleatorio_y_avanza
1244  8E49
1245  8E49 21 00 89     	ld hl,Tabla_de_pintado
1246  8E4C EB           	ex de,hl
1247  8E4D 2A 43 8C     	ld hl,(RND_SP)
1248  8E50 EB           	ex de,hl
1249  8E51 A7           	and a
1250  8E52 ED 52        	sbc hl,de
1251  8E54
1252  8E54 2A 43 8C     	ld hl,(RND_SP)
1253  8E57 20 06        	jr nz,1F
1254  8E59
1255  8E59              ; Sitúa HL al principio de la tabla de nº aleatorios.
1256  8E59
1257  8E59 21 F6 88     	ld hl,Numeros_aleatorios
1258  8E5C 22 43 8C     	ld (RND_SP),HL
1259  8E5F
1260  8E5F              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1261  8E5F
1262  8E5F 7E           1 ld a,(hl)
1263  8E60 23           	inc hl
1264  8E61 22 43 8C     	ld (RND_SP),hl
1265  8E64 C9           	ret
1266  8E65
1267  8E65              ; ------------------------------------
1268  8E65              ;
1269  8E65              ; 1/05/24
1270  8E65
1271  8E65              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1272  8E65              ; (1 a 4 segundos).
1273  8E65              ; Actualizamos (Clock_next_entity) con A.
1274  8E65
1275  8E65              ;	DESTRUYE: A y B.
1276  8E65              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1277  8E65              ;			 Actualiza (Clock_next_entity) con A.
1278  8E65
1279  8E65              ;	Variables implicadas: (Clock_next_entity).
1280  8E65
1281  8E65              ; Notas:
1282  8E65
1283  8E65              ; 	$32 1 seg.
1284  8E65              ; 	$64 2 seg.
1285  8E65              ; 	$96 3 seg.
1286  8E65              ; 	$c8 4 seg.
1287  8E65              ; 	$fa 5 seg.
1288  8E65
1289  8E65              ; $ffff 1310,7 seg, 22 minutos.
1290  8E65
1291  8E65              ;	$0100  5 seg. aproximadamente.
1292  8E65              ;	$0200 10 seg. aproximadamente.
1293  8E65              ;	$0300 15 seg. aproximadamente.
1294  8E65              ;	$0400 20 seg. aproximadamente.
1295  8E65              ;	$0500 25 seg. aproximadamente.
1296  8E65              ;	$0600 30 seg. aproximadamente.
1297  8E65
1298  8E65              Define_Clock_next_entity
1299  8E65
1300  8E65 FE 34        	cp $34
1301  8E67 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1302  8E69
1303  8E69              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1304  8E69
1305  8E69 4F           3 ld c,a
1306  8E6A 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1307  8E6C 2A 78 5C     	ld hl,(FRAMES)
1308  8E6F A7           	and a
1309  8E70 ED 4A        	adc hl,bc
1310  8E72 22 45 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1311  8E75 C9           	ret
1312  8E76
1313  8E76 3E 34        1 ld a,$34
1314  8E78 18 EF        	jr 3B
1315  8E7A
1316  8E7A              ; ------------------------------------
1317  8E7A              ;
1318  8E7A              ; 18/03/24
1319  8E7A
1320  8E7A              Borra_diferencia
1321  8E7A
1322  8E7A ED 4B 28 8C  	ld bc,(Scanlines_album_SP)
1323  8E7E
1324  8E7E 3A 25 8C     	ld a,(Switch)
1325  8E81 A7           	and a
1326  8E82 28 08        	jr z,2F
1327  8E84
1328  8E84 2A 23 8C     	ld hl,(Techo_Scanlines_album_2)
1329  8E87 11 23 8C     	ld de,Techo_Scanlines_album_2
1330  8E8A 18 06        	jr 3F
1331  8E8C
1332  8E8C 2A 21 8C     2 ld hl,(Techo_Scanlines_album)
1333  8E8F 11 21 8C     	ld de,Techo_Scanlines_album
1334  8E92
1335  8E92              ; Diferencia.
1336  8E92
1337  8E92 ED 42        3 sbc hl,bc
1338  8E94
1339  8E94 C8           	ret z
1340  8E95 D8           	ret c
1341  8E96
1342  8E96              ; Nuevo techo, (más bajo que el anterior).
1343  8E96              ; Fijamos nuevo techo y borramos bytes sobrantes.
1344  8E96
1345  8E96 EB           	ex de,hl
1346  8E97
1347  8E97 71           	ld (hl),c
1348  8E98 2C           	inc l
1349  8E99 70           	ld (hl),b
1350  8E9A
1351  8E9A AF           	xor a
1352  8E9B 43           	ld b,e
1353  8E9C
1354  8E9C 2A 28 8C     	ld hl,(Scanlines_album_SP)
1355  8E9F
1356  8E9F 77           1 ld (hl),a
1357  8EA0 23           	inc hl
1358  8EA1 10 FC        	djnz 1B
1359  8EA3
1360  8EA3              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1361  8EA3
1362  8EA3 21 2E 8C     	ld hl,Ctrl_3
1363  8EA6 CB DE        	set 3,(hl)
1364  8EA8
1365  8EA8 C9           	ret
1366  8EA9
1367  8EA9              ; --------------------------------------------------------------------------------------------------------------
1368  8EA9              ;
1369  8EA9              ;	26/3/24
1370  8EA9
1371  8EA9              Recauda_informacion_de_entidad_en_curso
1372  8EA9
1373  8EA9              ; Almacena la Coordenada Y de la entidad en curso.
1374  8EA9
1375  8EA9              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1376  8EA9
1377  8EA9 3A BD 8B     	ld a,(Coordenada_y)
1378  8EAC 2A 2A 8C     	ld hl,(India_SP)
1379  8EAF 77           	ld (hl),a
1380  8EB0 2C           	inc l
1381  8EB1
1382  8EB1              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1383  8EB1
1384  8EB1              ;	ld de,(Scanlines_album_SP)
1385  8EB1
1386  8EB1 73           	ld (hl),e
1387  8EB2 2C           	inc l
1388  8EB3 72           	ld (hl),d
1389  8EB4 2C           	inc l
1390  8EB5
1391  8EB5 22 2A 8C     	ld (India_SP),hl
1392  8EB8
1393  8EB8 C9           	ret
1394  8EB9
1395  8EB9              ; --------------------------------------------------------------------------------------------------------------
1396  8EB9              ;
1397  8EB9              ;	27/03/24
1398  8EB9              ;
1399  8EB9
1400  8EB9              Inicializa_India_y_limpia_Tabla_de_impresion
1401  8EB9
1402  8EB9 2A 2A 8C     	ld hl,(India_SP)
1403  8EBC 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1404  8EBF
1405  8EBF 79           	ld a,c
1406  8EC0 95           	sub l
1407  8EC1 28 06        	jr z,2F
1408  8EC3 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1409  8EC4              ;														; _ y pasamos a inicializar (India_SP).
1410  8EC4 AF           	xor a
1411  8EC5
1412  8EC5 77           1 ld (hl),a
1413  8EC6 2C           	inc l
1414  8EC7 10 FC        	djnz 1B												; Limpia Tabla.
1415  8EC9
1416  8EC9 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1417  8ECC 22 2A 8C     	ld (India_SP),hl
1418  8ECF
1419  8ECF C9           	ret
1420  8ED0
1421  8ED0              ; --------------------------------------------------------------------------------------------------------------
1422  8ED0              ;
1423  8ED0              ;	31/3/24
1424  8ED0
1425  8ED0              Ordena_tabla_de_impresion
1426  8ED0
1427  8ED0              ; 5794 T/states.
1428  8ED0              ; 6278 T/states.
1429  8ED0              ; 5310 T/states.
1430  8ED0
1431  8ED0              ; Inicializamos punteros (India_SP) e (India_2_SP).
1432  8ED0              ; Inicializamos contador de comparaciones, [C].
1433  8ED0              ; Cargamos los registros A y B para efectuar comparación.
1434  8ED0
1435  8ED0 FD 2E 00     	ld iyl,0
1436  8ED3
1437  8ED3 3A 03 8C     	ld a,(Entidades_en_curso)
1438  8ED6 FE 04        	cp 4 	;	4
1439  8ED8 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1440  8ED9
1441  8ED9 3D           	dec a
1442  8EDA 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1443  8EDB 51           	ld d,c 										; Copia de respaldo.
1444  8EDC
1445  8EDC 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1446  8EDD
1447  8EDD 21 03 89     	ld hl,Tabla_de_pintado+3
1448  8EE0 46           	ld b,(hl)
1449  8EE1 22 2C 8C     	ld (India_2_SP),hl
1450  8EE4
1451  8EE4 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1452  8EE5 DC 0D 8F     	call c, Avanza_India_2_SP
1453  8EE8 CC 0D 8F     	call z, Avanza_India_2_SP
1454  8EEB
1455  8EEB FD 2D        	dec iyl
1456  8EED 28 18        	jr z,2F
1457  8EEF
1458  8EEF
1459  8EEF              ; --------------------------------------------------------------------------------------------------------------
1460  8EEF              ;
1461  8EEF              ;	7/4/24
1462  8EEF
1463  8EEF              Trueque
1464  8EEF
1465  8EEF              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1466  8EEF              ;  			A contiene en nº de fila de (India_SP).
1467  8EEF              ;			HL contiene (India_2_SP).
1468  8EEF
1469  8EEF D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1470  8EF0 E5           	push hl										; Preservo (India_2_SP).
1471  8EF1
1472  8EF1 ED 5B 2A 8C  	ld de,(India_SP)
1473  8EF5 EB           	ex de,hl
1474  8EF6 70           	ld (hl),b
1475  8EF7 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1476  8EF8
1477  8EF8 CD 39 8F     	call Intercambia_1_byte
1478  8EFB CD 39 8F     	call Intercambia_1_byte
1479  8EFE
1480  8EFE
1481  8EFE              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1482  8EFE              ; Recuperamos (India_2_SP) en HL.
1483  8EFE
1484  8EFE 2A 2A 8C     	ld hl,(India_SP)
1485  8F01 7E           	ld a,(hl)
1486  8F02
1487  8F02 E1           	pop hl
1488  8F03 D1           	pop de
1489  8F04
1490  8F04              ; --------------------------------------------------------------------------------------------------------------
1491  8F04
1492  8F04 CD 0D 8F     	call Avanza_India_2_SP
1493  8F07
1494  8F07 14           2 inc d
1495  8F08 15           	dec d
1496  8F09 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1497  8F0A 18 D8        	jr 1B
1498  8F0C
1499  8F0C C9           	ret
1500  8F0D
1501  8F0D              ; ----- ----- ----- ----- -----
1502  8F0D
1503  8F0D              Avanza_India_2_SP
1504  8F0D
1505  8F0D 0D           	dec c
1506  8F0E 28 0A        	jr z,Avanza_punteros_indios
1507  8F10
1508  8F10 FD 2C        	inc iyl
1509  8F12
1510  8F12 2C           	inc l
1511  8F13 2C           	inc l
1512  8F14 2C           	inc l
1513  8F15
1514  8F15 46           	ld b,(hl)
1515  8F16 22 2C 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1516  8F19
1517  8F19 C9           	ret
1518  8F1A
1519  8F1A              ; ----- ----- ----- ----- -----
1520  8F1A
1521  8F1A              Avanza_punteros_indios
1522  8F1A
1523  8F1A 15           	dec d
1524  8F1B 28 15        	jr z,Prepara_salida
1525  8F1D
1526  8F1D 4A           	ld c,d
1527  8F1E
1528  8F1E 2A 2A 8C     	ld hl,(India_SP)
1529  8F21 2C           	inc l
1530  8F22 2C           	inc l
1531  8F23 2C           	inc l
1532  8F24 7E           	ld a,(hl)
1533  8F25 22 2A 8C     	ld (India_SP),hl
1534  8F28
1535  8F28 2C           	inc l
1536  8F29 2C           	inc l
1537  8F2A 2C           	inc l
1538  8F2B 46           	ld b,(hl)
1539  8F2C 22 2C 8C     	ld (India_2_SP),hl
1540  8F2F
1541  8F2F FD 2C        	inc iyl
1542  8F31
1543  8F31 C9           	ret
1544  8F32
1545  8F32              Prepara_salida
1546  8F32
1547  8F32 21 00 89     	ld hl,Tabla_de_pintado
1548  8F35 22 2A 8C     	ld (India_SP),hl
1549  8F38 C9           	ret
1550  8F39
1551  8F39
1552  8F39 2C           Intercambia_1_byte inc l
1553  8F3A 1C           	inc e
1554  8F3B 46           	ld b,(hl)
1555  8F3C 1A           	ld a,(de)
1556  8F3D EB           	ex de,hl
1557  8F3E 70           	ld (hl),b
1558  8F3F 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1559  8F40 C9           	ret
1560  8F41
1561  8F41              ; -----------------------------------------------------------------------------------
1562  8F41              ;
1563  8F41              ;	20/01/24
1564  8F41              ;
1565  8F41              ;
1566  8F41
1567  8F41              Construye_movimientos_masticados_entidad
1568  8F41
1569  8F41 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1570  8F44 E5           	push hl
1571  8F45 CD 88 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1572  8F48              ;															; _ el (Contador_de_mov_masticados).
1573  8F48 CD 58 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1574  8F4B              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1575  8F4B CD 85 99     	call Recompone_posicion_inicio
1576  8F4E
1577  8F4E CD B5 96     1 call Draw
1578  8F51 CD 6D 8F     	call Guarda_movimiento_masticado
1579  8F54
1580  8F54 CD 32 9D     	call Movimiento
1581  8F57
1582  8F57 3A 2E 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1583  8F5A CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1584  8F5C 28 F0        	jr z,1B
1585  8F5E
1586  8F5E              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1587  8F5E              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1588  8F5E
1589  8F5E E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1590  8F5F 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1591  8F62
1592  8F62              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1593  8F62
1594  8F62 CD 96 9E     	call Situa_en_contador_general_de_mov_masticados
1595  8F65
1596  8F65              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1597  8F65              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1598  8F65
1599  8F65 ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1600  8F69
1601  8F69 71           	ld (hl),c
1602  8F6A 23           	inc hl
1603  8F6B 70           	ld (hl),b
1604  8F6C
1605  8F6C C9           	ret
1606  8F6D
1607  8F6D              ; -----------------------------------------------------------------------------------
1608  8F6D              ;
1609  8F6D              ;	28/12/23
1610  8F6D              ;
1611  8F6D              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1612  8F6D              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1613  8F6D
1614  8F6D              Guarda_movimiento_masticado
1615  8F6D
1616  8F6D ED 73 08 8C  	ld (Stack),sp
1617  8F71 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1618  8F75
1619  8F75 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1620  8F77 FD E5            push iy 												; Pushea Puntero_objeto.
1621  8F79
1622  8F79 ED 7B 08 8C      ld sp,(Stack)
1623  8F7D
1624  8F7D 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1625  8F80 23           	inc hl
1626  8F81 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1627  8F84
1628  8F84 CD 88 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1629  8F87              ;															; _ el (Contador_de_mov_masticados).
1630  8F87 C9               ret
1631  8F88
1632  8F88              ; --------------------------------------------------------------------------------------------------------------
1633  8F88              ;
1634  8F88              ;	12/1/24
1635  8F88              ;
1636  8F88              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1637  8F88
1638  8F88              Actualiza_Puntero_de_almacen_de_mov_masticados
1639  8F88
1640  8F88 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1641  8F8B 01 04 00     	ld bc,4
1642  8F8E A7           	and a
1643  8F8F ED 4A        	adc hl,bc
1644  8F91 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1645  8F94 C9           	ret
1646  8F95
1647  8F95              ; --------------------------------------------------------------------------------------------------------------
1648  8F95              ;
1649  8F95              ;	24/03/24
1650  8F95              ;
1651  8F95              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1652  8F95              ;
1653  8F95              ;	IX contiene el puntero de impresión.
1654  8F95              ;	DE contiene (Puntero_objeto).
1655  8F95
1656  8F95
1657  8F95              Cargamos_registros_con_mov_masticado
1658  8F95
1659  8F95 ED 73 08 8C  	ld (Stack),sp
1660  8F99 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1661  8F9D
1662  8F9D D1           	pop de 															; DE contiene Puntero_objeto
1663  8F9E DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1664  8FA0
1665  8FA0 ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1666  8FA4 ED 7B 08 8C  	ld sp,(Stack)
1667  8FA8
1668  8FA8 7B           	ld a,e
1669  8FA9 82           	add d															; Comprueba si ya no hay datos en el almacén.
1670  8FAA
1671  8FAA CC 48 93     	call z,Reinicia_entidad_maliciosa
1672  8FAD
1673  8FAD C9           	ret
1674  8FAE
1675  8FAE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1676  8FAE              ;
1677  8FAE              ;	22/7/24
1678  8FAE
1679  8FAE              Cargamos_registros_con_explosion
1680  8FAE
1681  8FAE
1682  8FAE 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1683  8FB1 CD 52 90     	call Extrae_address
1684  8FB4
1685  8FB4 5D           	ld e,l
1686  8FB5 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1687  8FB6
1688  8FB6 DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1689  8FBA
1690  8FBA C9           	ret
1691  8FBB
1692  8FBB
1693  8FBB              Cargamos_registros_con_explosion_Amadeus
1694  8FBB
1695  8FBB 2A 77 89     	ld hl,(Pamm_Amadeus)
1696  8FBE CD 52 90     	call Extrae_address
1697  8FC1
1698  8FC1 5D           	ld e,l
1699  8FC2 54           	ld d,h
1700  8FC3
1701  8FC3 DD 2A 75 89  	ld ix,(p.imp.amadeus)
1702  8FC7
1703  8FC7 C9           	ret
1704  8FC8
1705  8FC8              ; --------------------------------------------------------------------------------------------------------------
1706  8FC8              ;
1707  8FC8              ;	17/06/24
1708  8FC8              ;
1709  8FC8              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1710  8FC8              ;
1711  8FC8              ;	IX contiene el puntero de impresión.
1712  8FC8              ;	DE contiene (Puntero_objeto).
1713  8FC8
1714  8FC8
1715  8FC8              Cargamos_registros_con_mov_masticado_Amadeus
1716  8FC8
1717  8FC8 ED 73 08 8C  	ld (Stack),sp
1718  8FCC ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1719  8FD0 D1           	pop de 															; DE contiene Puntero_objeto
1720  8FD1 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1721  8FD3 DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1722  8FD7 ED 7B 08 8C  	ld sp,(Stack)
1723  8FDB C9           	ret
1724  8FDC
1725  8FDC              ; ---------------------------------------------------------------------------------------------------------------------
1726  8FDC              ;
1727  8FDC              ;	18/6/24
1728  8FDC              ;
1729  8FDC              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1730  8FDC
1731  8FDC              Genera_datos_de_impresion_Amadeus
1732  8FDC
1733  8FDC 3A 74 89     	ld a,(Impacto_Amadeus)
1734  8FDF A7           	and a
1735  8FE0 20 03        	jr nz,1F
1736  8FE2
1737  8FE2              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1738  8FE2              ; _apuntando a la correspondiente explosión.
1739  8FE2
1740  8FE2 CD C8 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1741  8FE5
1742  8FE5 DD 7D        1 ld a,ixl
1743  8FE7 E6 1F        	and $1f
1744  8FE9 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1745  8FEC
1746  8FEC 2A 28 8C     	ld hl,(Scanlines_album_SP)
1747  8FEF E5           	push hl
1748  8FF0
1749  8FF0 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1750  8FF3 22 28 8C     	ld (Scanlines_album_SP),hl
1751  8FF6
1752  8FF6 CD 9D 94     	call Genera_datos_de_impresion
1753  8FF9
1754  8FF9 E1           	pop hl
1755  8FFA 22 28 8C     	ld (Scanlines_album_SP),hl
1756  8FFD
1757  8FFD C9           	ret
1758  8FFE
1759  8FFE              ; ---------------------------------------------------------------------------------------------------------------------
1760  8FFE              ;
1761  8FFE              ;	13/03/24
1762  8FFE              ;
1763  8FFE              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1764  8FFE
1765  8FFE              Inicia_albumes_de_lineas
1766  8FFE
1767  8FFE 21 00 80     	ld hl,Scanlines_album
1768  9001 22 0C 8C     	ld (Album_de_pintado),hl
1769  9004 22 28 8C     	ld (Scanlines_album_SP),hl
1770  9007
1771  9007 21 1A 81     	ld hl,Scanlines_album_2
1772  900A 22 0E 8C     	ld (Album_de_borrado),hl
1773  900D
1774  900D C9           	ret
1775  900E
1776  900E              Inicia_albumes_de_lineas_Amadeus
1777  900E
1778  900E 21 34 82     	ld hl,Amadeus_scanlines_album
1779  9011 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1780  9014 21 58 82     	ld hl,Amadeus_scanlines_album_2
1781  9017 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1782  901A
1783  901A C9           	ret
1784  901B
1785  901B              Inicia_albumes_de_disparos
1786  901B
1787  901B 21 7C 82     	ld hl,Disparos_scanlines_album
1788  901E 22 14 8C     	ld (Album_de_pintado_disparos),hl
1789  9021 21 8E 82     	ld hl,Disparos_scanlines_album_2
1790  9024 22 16 8C     	ld (Album_de_borrado_disparos),hl
1791  9027
1792  9027 21 7C 82     	ld hl,Disparos_scanlines_album
1793  902A 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1794  902D
1795  902D C9           	ret
1796  902E
1797  902E              ; ---------------------------------------------------------------------------------------------------------------------
1798  902E              ;
1799  902E              ; 8/1/23
1800  902E              ;
1801  902E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1802  902E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1803  902E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1804  902E
1805  902E              ; Destruye HL y DE !!!!!
1806  902E
1807  902E              Inicia_punteros_de_cajas
1808  902E
1809  902E 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1810  9031 CD 52 90         call Extrae_address
1811  9034 22 FB 8B         ld (Puntero_store_caja),hl
1812  9037 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1813  903A 22 FF 8B     	ld (Indice_restore_caja),hl
1814  903D CD 52 90     	call Extrae_address
1815  9040 22 FD 8B     	ld (Puntero_restore_caja),hl
1816  9043 C9               ret
1817  9044
1818  9044              ; *************************************************************************************************************************************************************
1819  9044              ;
1820  9044              ; 8/1/23
1821  9044              ;
1822  9044              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1823  9044
1824  9044 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1825  9047 22 31 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1826  904A C9           	ret
1827  904B 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1828  904E 22 33 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1829  9051 C9           	ret
1830  9052
1831  9052              ; *************************************************************************************************************************************************************
1832  9052              ;
1833  9052              ; 20/10/22
1834  9052              ;
1835  9052              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1836  9052              ;
1837  9052              ; Destruye el puntero y DE !!!!!
1838  9052
1839  9052 5E           Extrae_address ld e,(hl)
1840  9053 23           	inc hl
1841  9054 56           	ld d,(hl)
1842  9055 2B           	dec hl
1843  9056 EB           	ex de,hl
1844  9057 C9           	ret
1845  9058
1846  9058              ; *************************************************************************************************************************************************************
1847  9058              ;
1848  9058              ;	20/1/24
1849  9058              ;
1850  9058              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1851  9058              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1852  9058              ;
1853  9058              ;   Destruye HL y BC !!!!!,
1854  9058              ;
1855  9058              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1856  9058              ;					"0" ..... Izquierda.
1857  9058
1858  9058              Inicia_Puntero_objeto
1859  9058
1860  9058 3A DA 8B     	ld a,(Cuad_objeto)
1861  905B E6 01        	and 1
1862  905D F5           	push af
1863  905E CC 7A 90     	call z,Inicia_puntero_objeto_izq
1864  9061 F1           	pop af
1865  9062 C8           	ret z
1866  9063 CD 67 90     	call Inicia_puntero_objeto_der
1867  9066 C9           	ret
1868  9067
1869  9067              ; Arrancamos desde la parte izquierda de la pantalla.
1870  9067              ; Iniciamos (Indice_Sprite_der).
1871  9067
1872  9067 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1873  906A 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1874  906D CD 52 90     	call Extrae_address
1875  9070 22 CD 8B     	ld (Puntero_objeto),hl
1876  9073
1877  9073 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1878  9076 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1879  9079 C9           	ret
1880  907A
1881  907A              ; Arrancamos desde la parte derecha de la pantalla.
1882  907A              ; Iniciamos (Indice_Sprite_izq).
1883  907A
1884  907A 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1885  907D 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1886  9080 CD 52 90     	call Extrae_address
1887  9083 22 CD 8B     	ld (Puntero_objeto),hl
1888  9086
1889  9086 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1890  9089 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1891  908C C9           	ret
1892  908D
1893  908D              ; **************************************************************************************************
1894  908D              ;
1895  908D              ;	06/07/24
1896  908D              ;
1897  908D              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1898  908D
1899  908D              Restore_entidad
1900  908D
1901  908D 2A FB 8B     	ld hl,(Puntero_store_caja)
1902  9090 7E           	ld a,(hl)
1903  9091 A7           	and a
1904  9092 CC A0 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1905  9095 28 F6        	jr z,Restore_entidad
1906  9097
1907  9097 11 BB 8B     	ld de,Bandeja_DRAW
1908  909A 01 0C 00     	ld bc,12
1909  909D ED B0        	ldir
1910  909F C9           	ret
1911  90A0
1912  90A0              ; **************************************************************************************************
1913  90A0              ;
1914  90A0              ;	08/05/23
1915  90A0              ;
1916  90A0              ;	Incrementamos los dos punteros de entidades. (+1).
1917  90A0
1918  90A0              Incrementa_punteros_de_cajas
1919  90A0
1920  90A0 2A FD 8B     	ld hl,(Puntero_restore_caja)
1921  90A3 22 FB 8B     	ld (Puntero_store_caja),hl
1922  90A6 2A FF 8B     	ld hl,(Indice_restore_caja)
1923  90A9 23           	inc hl
1924  90AA 23           	inc hl
1925  90AB 22 FF 8B     	ld (Indice_restore_caja),hl
1926  90AE CD 52 90         call Extrae_address
1927  90B1 22 FD 8B         ld (Puntero_restore_caja),hl
1928  90B4 C9               ret
1929  90B5
1930  90B5              ; -----------------------------------------------------------
1931  90B5
1932  90B5              ; Teclado.
1933  90B5
1934  90B5 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1935  90B7 DB FE        	in a,($fe)
1936  90B9 E6 01        	and $01
1937  90BB 28 02        	jr z,1f
1938  90BD 18 F6        	jr Pulsa_ENTER
1939  90BF C9           1 ret
1940  90C0
1941  90C0              ; **************************************************************************************************
1942  90C0              ;
1943  90C0              ; Temporización.
1944  90C0
1945  90C0              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1946  90C0              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1947  90C0              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1948  90C0              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1949  90C0
1950  90C0              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1951  90C0              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1952  90C0              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1953  90C0
1954  90C0              ; A partir de $4f61 no hace falta DELAY.
1955  90C0
1956  90C0              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1957  90C0
1958  90C0              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1959  90C0              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1960  90C0              ;	LD A,B
1961  90C0              ;	AND A
1962  90C0              ;	JR NZ,wait
1963  90C0              ;	RET
1964  90C0
1965  90C0              ; ---------------------------------------------------------------------------------------------------------------
1966  90C0              ;
1967  90C0              ;	13/07/24
1968  90C0              ;
1969  90C0
1970  90C0              Inicia_Shield
1971  90C0
1972  90C0 21 4D 8C     	ld hl,Datos_Shield
1973  90C3 22 51 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1974  90C6
1975  90C6 7E           	ld a,(hl)
1976  90C7 32 54 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1977  90CA
1978  90CA 3E 01        	ld a,1
1979  90CC 32 55 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1980  90CF
1981  90CF C9           	ret
1982  90D0
1983  90D0              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1984  90D0              ;
1985  90D0              ;	4/6/24
1986  90D0              ;
1987  90D0              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1988  90D0              ;
1989  90D0              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1990  90D0              ;
1991  90D0
1992  90D0              Actualiza_pantalla
1993  90D0
1994  90D0 3E 02        	ld a,2
1995  90D2 D3 FE        	out ($fe),a
1996  90D4
1997  90D4 3A 2E 8C     	ld a,(Ctrl_3)
1998  90D7 CB 57        	bit 2,a
1999  90D9 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2000  90DB
2001  90DB              Borrando_entidades
2002  90DB
2003  90DB 2A 28 8C     	ld hl,(Scanlines_album_SP)
2004  90DE CD 52 90     	call Extrae_address
2005  90E1 24           	inc h
2006  90E2 25           	dec h
2007  90E3 28 05        	jr z,Pintando_entidades
2008  90E5 CD 92 95     	call Pinta_Sprites
2009  90E8 18 F1        	jr Borrando_entidades
2010  90EA
2011  90EA              Pintando_entidades
2012  90EA
2013  90EA 2A 2A 8C     	ld hl,(India_SP)
2014  90ED 2C           	inc l
2015  90EE CD 52 90     	call Extrae_address
2016  90F1 24           	inc h
2017  90F2 25           	dec h
2018  90F3 28 0E        	jr z,Ejecuta_escudo
2019  90F5 1C           	inc e
2020  90F6 1C           	inc e
2021  90F7 ED 53 2A 8C  	ld (India_SP),de
2022  90FB CD 52 90     	call Extrae_address
2023  90FE CD 92 95     	call Pinta_Sprites
2024  9101 18 E7        	jr Pintando_entidades
2025  9103
2026  9103              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2027  9103
2028  9103              Ejecuta_escudo
2029  9103
2030  9103 3A 53 8C     	ld a,(Shield)
2031  9106 A7           	and a
2032  9107 20 2F        	jr nz,Aplica_Shield
2033  9109
2034  9109              Borrando_Amadeus
2035  9109
2036  9109 21 2E 8C     	ld hl,Ctrl_3
2037  910C CB 6E        	bit 5,(hl)
2038  910E 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2039  9110
2040  9110 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2041  9113 CD 52 90     	call Extrae_address
2042  9116 24           	inc h
2043  9117 25           	dec h
2044  9118 28 03        	jr z,Pintando_Amadeus
2045  911A CD 92 95     	call Pinta_Sprites
2046  911D
2047  911D              Pintando_Amadeus
2048  911D
2049  911D 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2050  9120 CD 52 90     	call Extrae_address
2051  9123 24           	inc h
2052  9124 25           	dec h
2053  9125 28 03        	jr z,1F
2054  9127 CD 92 95     	call Pinta_Sprites
2055  912A
2056  912A              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2057  912A
2058  912A 21 2E 8C     1 ld hl,Ctrl_3
2059  912D CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2060  912F CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2061  9131 CB AE        	res 5,(hl)
2062  9133
2063  9133 3E 01        	ld a,1												; Borde azul.
2064  9135 D3 FE        	out ($fe),a
2065  9137
2066  9137 C9           	ret
2067  9138
2068  9138              Aplica_Shield
2069  9138
2070  9138              ;	Bit 1 "1" (Shield_3) Sólo borra.
2071  9138              ;		  "0"     ""     Borra/Pinta.
2072  9138              ;	Bit 2    ""  RET.	 No borra, no pinta.
2073  9138
2074  9138 21 55 8C     	ld hl,Shield_3
2075  913B
2076  913B CB 5E        	bit 3,(hl)
2077  913D 20 DE        	jr nz,Pintando_Amadeus
2078  913F
2079  913F CB 56        	bit 2,(hl)
2080  9141 20 E7        	jr nz,1B
2081  9143
2082  9143 CB 4E        	bit 1,(hl)
2083  9145 C4 4C 91     	call nz,Borra_Amadeus_shield
2084  9148
2085  9148 28 BF        	jr z,Borrando_Amadeus
2086  914A 18 DE        	jr 1B
2087  914C
2088  914C              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2089  914C
2090  914C              Borra_Amadeus_shield
2091  914C
2092  914C 3A 2E 8C     	ld a,(Ctrl_3)
2093  914F CB 6F        	bit 5,a
2094  9151 28 08        	jr z,1F
2095  9153
2096  9153 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2097  9156 CD 52 90     	call Extrae_address
2098  9159 18 06        	jr 2F
2099  915B
2100  915B 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2101  915E CD 52 90     	call Extrae_address
2102  9161
2103  9161 CD 92 95     2 call Pinta_Sprites
2104  9164
2105  9164 AF           	xor a
2106  9165 3C           	inc a											; Asegura NZ en la salida de la rutina.
2107  9166
2108  9166 C9           	ret
2109  9167
2110  9167              Pinta_Amadeus_shield
2111  9167
2112  9167 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2113  916A CD 52 90     	call Extrae_address
2114  916D CD 92 95     	call Pinta_Sprites
2115  9170
2116  9170 AF           	xor a
2117  9171 3C           	inc a											; Asegura NZ en la salida de la rutina.
2118  9172
2119  9172 C9           	ret
2120  9173
2121  9173              Borra_Pinta_Amadeus_shield
2122  9173
2123  9173 CD 4C 91     	call Borra_Amadeus_shield
2124  9176 CD 67 91     	call Pinta_Amadeus_shield
2125  9179 C9           	ret
2126  917A
2127  917A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2128  917A              ;
2129  917A              ;	19/6/24
2130  917A              ;
2131  917A
2132  917A              Teclado
2133  917A
2134  917A              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2135  917A
2136  917A 3E F7        	ld a,$f7												; "5" para disparar.
2137  917C DB FE        	in a,($fe)
2138  917E E6 10        	and $10
2139  9180
2140  9180 CC 9A 9F     	call z,Genera_disparo_Amadeus
2141  9183
2142  9183 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2143  9185 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2144  9187 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2145  9189 CC FF 9C         call z,Amadeus_a_izquierda
2146  918C
2147  918C 3E F7        	ld a,$f7
2148  918E DB FE        	in a,($fe)
2149  9190 E6 01        	and $01
2150  9192 C8           	ret z
2151  9193
2152  9193 3E F7        	ld a,$f7
2153  9195 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2154  9197 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2155  9199 CC 17 9D     	call z,Amadeus_a_derecha
2156  919C
2157  919C C9           	ret
2158  919D
2159  919D              ; ------------------------------------------------------------------------------------------------------------------------
2160  919D              ;
2161  919D              ;	06/07/24
2162  919D              ;
2163  919D
2164  919D              Genera_explosion
2165  919D
2166  919D 21 40 8C     	ld hl,Clock_explosion
2167  91A0 35           	dec (hl)
2168  91A1 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2169  91A3
2170  91A3              Borra_entidad_colisionada
2171  91A3
2172  91A3 CD A9 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2173  91A6 CD AE 8F     	call Cargamos_registros_con_explosion
2174  91A9 CD 9D 94     	call Genera_datos_de_impresion
2175  91AC
2176  91AC AF           	xor a
2177  91AD 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2178  91AE
2179  91AE C9           	ret
2180  91AF
2181  91AF              Siguiente_frame_explosion
2182  91AF
2183  91AF 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2184  91B1
2185  91B1              ; Avanza Frame de explosión.
2186  91B1
2187  91B1 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2188  91B4 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2189  91B7
2190  91B7 79           	ld a,c
2191  91B8 95           	sub l
2192  91B9 20 0B        	jr nz,1F
2193  91BB
2194  91BB              ; Fín de la entidad !!!!!!!!!!!!!
2195  91BB
2196  91BB 21 02 8C     	ld hl,Numero_parcial_de_entidades
2197  91BE 35           	dec (hl)
2198  91BF 23           	inc hl
2199  91C0 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2200  91C1
2201  91C1 CD 1D 93     	call Limpiamos_bandeja_DRAW
2202  91C4 18 DD        	jr Borra_entidad_colisionada
2203  91C6
2204  91C6 23           1 inc hl
2205  91C7 23           	inc hl
2206  91C8 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2207  91CB 18 D6        	jr Borra_entidad_colisionada
2208  91CD
2209  91CD              ; ----- ----- ----- ----- -----
2210  91CD
2211  91CD              Genera_explosion_Amadeus
2212  91CD
2213  91CD 21 41 8C     	ld hl,Clock_explosion_Amadeus
2214  91D0 35           	dec (hl)
2215  91D1 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2216  91D3
2217  91D3              Borra_Amadeus_impactado
2218  91D3
2219  91D3 CD 21 8E     	call Change_Amadeus
2220  91D6 CD BB 8F     	call Cargamos_registros_con_explosion_Amadeus
2221  91D9 CD DC 8F     	call Genera_datos_de_impresion_Amadeus
2222  91DC
2223  91DC 21 2E 8C     	ld hl,Ctrl_3
2224  91DF CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2225  91E1
2226  91E1 AF           	xor a
2227  91E2 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2228  91E3
2229  91E3 C9           	ret
2230  91E4
2231  91E4              Siguiente_frame_explosion_Amadeus
2232  91E4
2233  91E4 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2234  91E6
2235  91E6              ; Avanza Frame de explosión.
2236  91E6
2237  91E6 2A 77 89     	ld hl,(Pamm_Amadeus)
2238  91E9 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2239  91EC
2240  91EC 79           	ld a,c
2241  91ED 95           	sub l
2242  91EE 20 0B        	jr nz,1F
2243  91F0
2244  91F0              ; Fín de Amadeus !!!!!!!!!!!!!
2245  91F0              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2246  91F0
2247  91F0 AF           	xor a
2248  91F1 32 74 89     	ld (Impacto_Amadeus),a
2249  91F4 21 2E 8C     	ld hl,Ctrl_3
2250  91F7 CB F6        	set 6,(hl)
2251  91F9
2252  91F9 18 D8        	jr Borra_Amadeus_impactado
2253  91FB
2254  91FB 23           1 inc hl
2255  91FC 23           	inc hl
2256  91FD 22 77 89     	ld (Pamm_Amadeus),hl
2257  9200 18 D1        	jr Borra_Amadeus_impactado
2258  9202
2259  9202              ; ---------------------------------------------------------------
2260  9202
2261  9202              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9202              ; ******************************************************************************************************************************************************************************************
   2+ 9202              ;
   3+ 9202              ;   21/04/24
   4+ 9202              ;
   5+ 9202              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9202              ;   (XOR) bit a bit.
   7+ 9202              ;
   8+ 9202              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9202
  10+ 9202              Derivando_RND
  11+ 9202
  12+ 9202 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9205
  14+ 9205 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9207 C5               push bc
  16+ 9208              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9208 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 920B              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 920B
  20+ 920B A7           6 and a                                 ; Carry a "0".
  21+ 920C CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 920E 30 02            jr nc,1F
  23+ 9210
  24+ 9210 CB C1            set 0,c
  25+ 9212
  26+ 9212 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9213 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9215 5F               ld e,a
  29+ 9216
  30+ 9216 7A               ld a,d
  31+ 9217 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9219 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 921B
  34+ 921B CB 3F            srl a
  35+ 921D
  36+ 921D AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 921E
  38+ 921E 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 921F 28 04            jr z,4F
  40+ 9221
  41+ 9221 CB FF            set 7,a
  42+ 9223 18 02            jr 5F
  43+ 9225
  44+ 9225 CB BF        4 res 7,a
  45+ 9227
  46+ 9227 CB 21        5 sla c
  47+ 9229 10 E0            djnz 6B
  48+ 922B
  49+ 922B 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 922C
  51+ 922C 77               ld (hl),a
  52+ 922D 23               inc hl
  53+ 922E C1               pop bc
  54+ 922F 10 D4            djnz 3B
  55+ 9231
  56+ 9231 C9               ret
  57+ 9232
  58+ 9232
  59+ 9232
# file closed: RND_Derivando.asm
2262  9232              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9232              ;---------------------------------------------------------------------------------------------------------------
   2+ 9232              ;
   3+ 9232              ;   8/3/24
   4+ 9232              ;
   5+ 9232              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9232              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9232              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9232              ;	_ de la 1ª entidad del Nivel.
   9+ 9232              ;
  10+ 9232              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9232
  12+ 9232              ;	MODIFICA: HL,DE y A.
  13+ 9232              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9232
  15+ 9232              Inicializa_Nivel
  16+ 9232
  17+ 9232 2A 49 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9235 CD 52 90     	call Extrae_address
  19+ 9238 7E           	ld a,(hl)
  20+ 9239 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 923C 23           	inc hl
  22+ 923D CD 4A 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9240 22 4B 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9243 CD 53 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9246
  26+ 9246 CD 64 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9249 C9           	ret
  28+ 924A
  29+ 924A              ; ----------------------
  30+ 924A
  31+ 924A 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 924D 01 04 00     	ld bc,4
  33+ 9250 ED B0        	ldir
  34+ 9252 C9           	ret
  35+ 9253
  36+ 9253 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9254 CD EE 93         call Calcula_salto_en_BC
  38+ 9257 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 925A A7               and a
  40+ 925B ED 4A            adc hl,bc
  41+ 925D CD 52 90         call Extrae_address
  42+ 9260 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 9263 C9               ret
  44+ 9264
  45+ 9264 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 9267 CD EE 93     	call Calcula_salto_en_BC
  47+ 926A 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 926D A7               and a
  49+ 926E ED 4A            adc hl,bc
  50+ 9270 CD 52 90         call Extrae_address
  51+ 9273 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 9276 C9           	ret
  53+ 9277
  54+ 9277              ;---------------------------------------------------------------------------------------------------------------
  55+ 9277              ;
  56+ 9277              ;   5/1/24
  57+ 9277              ;
  58+ 9277              ;	Destruye A,BC,HL,DE
  59+ 9277
  60+ 9277              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 9277              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 9277
  63+ 9277              Inicia_Entidades
  64+ 9277
  65+ 9277              ; Preparamos los punteros de las cajas de entidades:
  66+ 9277
  67+ 9277 CD 2E 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 927A              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 927A CD 36 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 927D
  71+ 927D 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 9280
  73+ 9280 22 4B 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 9283
  75+ 9283 CD 9C 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 9286
  77+ 9286 2A 4B 8C     	ld hl,(Datos_de_nivel)
  78+ 9289
  79+ 9289              ; En este punto:
  80+ 9289              ;
  81+ 9289              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 9289              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 9289
  84+ 9289 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 928A
  86+ 928A 7E           	ld a,(hl)
  87+ 928B CD 08 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 928E
  89+ 928E CD 00 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9291
  91+ 9291              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9291
  93+ 9291 CD BE 93     	call Busca_mov_masticados_segun_tipo
  94+ 9294
  95+ 9294 A7           	and a
  96+ 9295 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 9297
  98+ 9297              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 9297
 100+ 9297              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 9297              ;	_ de este tipo de entidad.
 102+ 9297
 103+ 9297 CD 96 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 929A CD A3 9E     	call Transfiere_datos_de_contadores
 105+ 929D
 106+ 929D 18 06        	jr 4F
 107+ 929F
 108+ 929F CD 41 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92A2
 110+ 92A2              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92A2              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92A2              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92A2              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92A2              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92A2
 116+ 92A2 CD 7C 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92A5              ;																; _ Mov_masticados ya generados.
 118+ 92A5
 119+ 92A5 CD 95 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92A8
 121+ 92A8 DD E5        	push ix
 122+ 92AA E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92AB
 124+ 92AB D5           	push de
 125+ 92AC CD 71 94     	call Genera_coordenadas
 126+ 92AF
 127+ 92AF ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 128+ 92B3 CD A9 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92B6 D1           	pop de
 130+ 92B7
 131+ 92B7 CD 9D 94     	call Genera_datos_de_impresion
 132+ 92BA              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92BA              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92BA              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92BA              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92BA
 137+ 92BA CD 40 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92BD
 139+ 92BD              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92BD
 141+ 92BD ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92C1 CD 2D 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92C4
 144+ 92C4 CD 1D 93     	call Limpiamos_bandeja_DRAW
 145+ 92C7 CD A0 90     	call Incrementa_punteros_de_cajas
 146+ 92CA
 147+ 92CA              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92CA              ; _ entidad del Nivel.
 149+ 92CA
 150+ 92CA 3A 2F 8C     	ld a,(Ctrl_4)
 151+ 92CD E6 F0        	and $f0
 152+ 92CF 32 2F 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92D2
 154+ 92D2              ; Siguiente entidad del Nivel.
 155+ 92D2
 156+ 92D2 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92D5 23           	inc hl 														; _ entidad del Nivel.
 158+ 92D6
 159+ 92D6 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92D7
 161+ 92D7 10 A7        	djnz 2B
 162+ 92D9
 163+ 92D9 C9           	ret
 164+ 92DA
 165+ 92DA              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92DA              ;
 167+ 92DA              ;	27/5/24
 168+ 92DA              ;
 169+ 92DA              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92DA              ;
 171+ 92DA
 172+ 92DA              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92DA              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92DA
 175+ 92DA 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92DD CD 00 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92E0
 178+ 92E0
 179+ 92E0              Construye_movimientos_masticados_Amadeus
 180+ 92E0
 181+ 92E0 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 92E3 CD 88 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 92E6              ;															; _ el (Contador_de_mov_masticados).
 184+ 92E6 CD 58 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 92E9              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 92E9
 187+ 92E9              ; Generamos movimientos masticados de Amadeus.
 188+ 92E9
 189+ 92E9 06 79        	ld b,121												; $0079, 121d.
 190+ 92EB
 191+ 92EB C5           1 push bc
 192+ 92EC CD B5 96     	call Draw
 193+ 92EF CD 6D 8F     	call Guarda_movimiento_masticado
 194+ 92F2
 195+ 92F2 CD 29 9A     	call Mov_right
 196+ 92F5 CD 29 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 92F8
 198+ 92F8 C1           	pop bc
 199+ 92F9 10 F0        	djnz 1B
 200+ 92FB
 201+ 92FB              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 92FB
 203+ 92FB              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 92FB              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 92FB
 206+ 92FB 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 92FE 01 08 00     	ld bc,8
 208+ 9301 A7           	and a
 209+ 9302 ED 42        	sbc hl,bc
 210+ 9304 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9307
 212+ 9307 C9           	ret
 213+ 9308
 214+ 9308              ; ---------------------------------------------------------------------
 215+ 9308              ;
 216+ 9308              ;	10/02/24
 217+ 9308              ;
 218+ 9308              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9308              ;
 220+ 9308              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9308
 222+ 9308              Definicion_segun_tipo
 223+ 9308
 224+ 9308 CD EE 93     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 930B 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 930E CD F6 93     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9311 C9           	ret
 228+ 9312
 229+ 9312              ; ---------------------------------------------------------------------
 230+ 9312              ;
 231+ 9312              ;	6/7/24
 232+ 9312
 233+ 9312
 234+ 9312              Store_Restore_cajas
 235+ 9312
 236+ 9312 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 9316 CD 2D 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9319 CD A0 90     	call Incrementa_punteros_de_cajas
 239+ 931C C9           	ret
 240+ 931D
 241+ 931D              ; ---------------------------------------------------------------------
 242+ 931D              ;
 243+ 931D              ;	23/6/24
 244+ 931D              ;
 245+ 931D              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 931D              ;
 247+ 931D              ;	MODIFY: HL
 248+ 931D
 249+ 931D              Limpiamos_bandeja_DRAW
 250+ 931D
 251+ 931D ED 73 08 8C  	ld (Stack),sp
 252+ 9321 31 E0 8B     	ld sp,Vel_left
 253+ 9324
 254+ 9324 AF           	xor a
 255+ 9325 67           	ld h,a
 256+ 9326 6F           	ld l,a
 257+ 9327
 258+ 9327 E5           	push hl
 259+ 9328 E5           	push hl
 260+ 9329 E5           	push hl
 261+ 932A E5           	push hl
 262+ 932B E5           	push hl
 263+ 932C E5           	push hl
 264+ 932D E5           	push hl
 265+ 932E E5           	push hl
 266+ 932F E5           	push hl
 267+ 9330 E5           	push hl
 268+ 9331 E5           	push hl
 269+ 9332 E5           	push hl
 270+ 9333 E5           	push hl
 271+ 9334 E5           	push hl
 272+ 9335 E5           	push hl
 273+ 9336 E5           	push hl
 274+ 9337 E5           	push hl
 275+ 9338 E5           	push hl
 276+ 9339
 277+ 9339 33           	inc sp
 278+ 933A
 279+ 933A E5           	push hl
 280+ 933B ED 7B 08 8C  	ld sp,(Stack)
 281+ 933F
 282+ 933F C9           	ret
 283+ 9340
 284+ 9340              ; ---------------------------------------------------------------------
 285+ 9340              ;
 286+ 9340              ;	24/03/24
 287+ 9340
 288+ 9340 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9343 2B           	dec hl
 290+ 9344 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9347 C9           	ret
 292+ 9348
 293+ 9348              ; ---------------------------------------------------------------------
 294+ 9348              ;
 295+ 9348              ;	8/5/24
 296+ 9348
 297+ 9348              Reinicia_entidad_maliciosa
 298+ 9348
 299+ 9348              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9348
 301+ 9348 CD 96 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 934B CD A3 9E     	call Transfiere_datos_de_contadores
 303+ 934E
 304+ 934E              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 934E
 306+ 934E 3A BB 8B     	ld a,(Tipo)
 307+ 9351 CD 08 93     	call Definicion_segun_tipo
 308+ 9354
 309+ 9354 E5           	push hl
 310+ 9355 DD E1        	pop ix
 311+ 9357
 312+ 9357 DD 6E 0B     	ld l,(ix+11)
 313+ 935A DD 66 0C     	ld h,(ix+12)
 314+ 935D
 315+ 935D 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9360
 317+ 9360 CD 95 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9363
 319+ 9363              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9363              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9363              ; Ejemplos.
 322+ 9363
 323+ 9363              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9363              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9363              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9363              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9363              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9363
 329+ 9363 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 9366 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 9368
 332+ 9368 7E           	ld a,(hl)
 333+ 9369 CB 2F        	sra a
 334+ 936B CB 2F        	sra a
 335+ 936D
 336+ 936D 32 C6 8B     	ld (Velocidad),a
 337+ 9370
 338+ 9370 3E 40        	ld a,$40
 339+ 9372 BE           	cp (hl)
 340+ 9373 C0           	ret nz
 341+ 9374
 342+ 9374              ; Límitador.
 343+ 9374
 344+ 9374              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 9374
 346+ 9374 CB 2E        	sra (hl)
 347+ 9376 21 C6 8B     	ld hl,Velocidad
 348+ 9379 CB 2E        	sra (hl)
 349+ 937B
 350+ 937B C9           	ret
 351+ 937C
 352+ 937C              ; ---------------------------------------------------------------------
 353+ 937C              ;
 354+ 937C              ;	22/01/24
 355+ 937C
 356+ 937C 21 2F 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 937F CB 46        	bit 0,(hl)
 358+ 9381 20 0D        	jr nz,1F
 359+ 9383 CB 4E        	bit 1,(hl)
 360+ 9385 20 0C        	jr nz,2F
 361+ 9387 CB 56        	bit 2,(hl)
 362+ 9389 20 0B        	jr nz,3F
 363+ 938B CB 5E        	bit 3,(hl)
 364+ 938D 20 0A        	jr nz,4F
 365+ 938F C9           	ret
 366+ 9390
 367+ 9390 CB E6        1 set 4,(hl)
 368+ 9392 C9           	ret
 369+ 9393 CB EE        2 set 5,(hl)
 370+ 9395 C9           	ret
 371+ 9396 CB F6        3 set 6,(hl)
 372+ 9398 C9           	ret
 373+ 9399 CB FE        4 set 7,(hl)
 374+ 939B C9           	ret
 375+ 939C
 376+ 939C              ; ---------------------------------------------------------------------
 377+ 939C              ;
 378+ 939C              ;	23/01/24
 379+ 939C              ;
 380+ 939C              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 939C              ;
 382+ 939C              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 939C              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 939C              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 939C              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 939C
 387+ 939C              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 939C
 389+ 939C 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 939D 3D           	dec a
 391+ 939E 20 06        	jr nz,1F
 392+ 93A0
 393+ 93A0              ; --- Tipo_1
 394+ 93A0
 395+ 93A0 21 2F 8C     	ld hl,Ctrl_4
 396+ 93A3 CB C6        	set 0,(hl)
 397+ 93A5 C9           	ret
 398+ 93A6
 399+ 93A6 3D           1 dec a
 400+ 93A7 20 06        	jr nz,2F
 401+ 93A9
 402+ 93A9              ; --- Tipo_2
 403+ 93A9
 404+ 93A9 21 2F 8C     	ld hl,Ctrl_4
 405+ 93AC CB CE        	set 1,(hl)
 406+ 93AE C9           	ret
 407+ 93AF
 408+ 93AF 3D           2 dec a
 409+ 93B0 20 06        	jr nz,3F
 410+ 93B2
 411+ 93B2              ; --- Tipo_3
 412+ 93B2
 413+ 93B2 21 2F 8C     	ld hl,Ctrl_4
 414+ 93B5 CB D6        	set 2,(hl)
 415+ 93B7 C9           	ret
 416+ 93B8
 417+ 93B8              ; --- Tipo_3
 418+ 93B8
 419+ 93B8 21 2F 8C     3 ld hl,Ctrl_4
 420+ 93BB CB D6        	set 2,(hl)
 421+ 93BD C9           	ret
 422+ 93BE
 423+ 93BE              ; ---------------------------------------------------------------------
 424+ 93BE              ;
 425+ 93BE              ;	22/01/24
 426+ 93BE
 427+ 93BE 21 2F 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93C1 CB 46        	bit 0,(hl)
 429+ 93C3 20 0E        	jr nz,1F
 430+ 93C5
 431+ 93C5 CB 4E        	bit 1,(hl)
 432+ 93C7 20 10        	jr nz,2F
 433+ 93C9
 434+ 93C9 CB 56        	bit 2,(hl)
 435+ 93CB 20 12        	jr nz,3F
 436+ 93CD
 437+ 93CD CB 5E        	bit 3,(hl)
 438+ 93CF 20 14        	jr nz,4F
 439+ 93D1 18 19        	jr 6F
 440+ 93D3
 441+ 93D3              ; Entidad_de_Tipo_1.
 442+ 93D3
 443+ 93D3 CB 66        1 bit 4,(hl)
 444+ 93D5 28 15        	jr z,6F
 445+ 93D7 18 10        	jr 5F
 446+ 93D9
 447+ 93D9              ; Entidad_de_Tipo_2.
 448+ 93D9
 449+ 93D9 CB 6E        2 bit 5,(hl)
 450+ 93DB 28 0F        	jr z,6F
 451+ 93DD 18 0A        	jr 5F
 452+ 93DF
 453+ 93DF              ; Entidad_de_Tipo_3.
 454+ 93DF
 455+ 93DF CB 76        3 bit 6,(hl)
 456+ 93E1 28 09        	jr z,6F
 457+ 93E3 18 04        	jr 5F
 458+ 93E5
 459+ 93E5              ; Entidad_de_Tipo_4.
 460+ 93E5
 461+ 93E5 CB 7E        4 bit 7,(hl)
 462+ 93E7 28 03        	jr z,6F
 463+ 93E9
 464+ 93E9              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 93E9
 466+ 93E9 AF           5 xor a
 467+ 93EA 3C           	inc a
 468+ 93EB C9           	ret
 469+ 93EC
 470+ 93EC              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 93EC
 472+ 93EC AF           6 xor a
 473+ 93ED C9           	ret
 474+ 93EE
 475+ 93EE              ;	------------------------------------------------------------------------------------
 476+ 93EE              ;
 477+ 93EE              ;	12/01/24
 478+ 93EE              ;
 479+ 93EE              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 93EE              ;
 481+ 93EE              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 93EE              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 93EE
 484+ 93EE CB 27        Calcula_salto_en_BC sla a
 485+ 93F0 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 93F2 4F           	ld c,a
 487+ 93F3 06 00        	ld b,0
 488+ 93F5 C9           	ret
 489+ 93F6
 490+ 93F6              ; ------------------------------------------------------------------
 491+ 93F6              ;
 492+ 93F6              ;	19/1/24
 493+ 93F6              ;
 494+ 93F6              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 93F6              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 93F6
 497+ 93F6 A7           Situa_en_datos_de_definicion and a
 498+ 93F7 ED 4A        	adc hl,bc
 499+ 93F9 CD 52 90     	call Extrae_address
 500+ 93FC 22 06 8C         ld (Datos_de_entidad),hl
 501+ 93FF C9           	ret
 502+ 9400
 503+ 9400              ; ------------------------------------------------------------------
 504+ 9400
 505+ 9400              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9400              ; 	inc de
 507+ 9400              ; 	inc de
 508+ 9400              ; 	ex de,hl
 509+ 9400              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9400              ; 	ret
 511+ 9400
 512+ 9400              ; ----------------------------------------------------------------------------------------------------------
 513+ 9400              ;
 514+ 9400              ;	24/6/24
 515+ 9400              ;
 516+ 9400              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9400              ;	_ de entidad.
 518+ 9400              ;
 519+ 9400              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9400              ;
 521+ 9400              ;
 522+ 9400              ;	MODIFICA: HL,DE y BC
 523+ 9400
 524+ 9400
 525+ 9400              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9400
 527+ 9400 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9403 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9404 12           	ld (de),a
 530+ 9405 23           	inc hl
 531+ 9406              ;
 532+ 9406 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9409 01 02 00     	ld bc,2
 534+ 940C ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 940E              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 940E 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 9411 7E           	ld a,(hl)
 538+ 9412 12           	ld (de),a
 539+ 9413 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9414
 541+ 9414 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 9417 01 04 00     	ld bc,4
 543+ 941A ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 941C
 545+ 941C 11 D8 8B     	ld de,Posicion_inicio
 546+ 941F 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9422 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9424
 549+ 9424 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9427 01 02 00     	ld bc,2
 551+ 942A ED B0        	ldir
 552+ 942C
 553+ 942C C9           	ret
 554+ 942D
 555+ 942D              ; ----------------------------------------------------------------------------------------------------------
 556+ 942D              ;
 557+ 942D              ;	1/8/24
 558+ 942D              ;
 559+ 942D
 560+ 942D              Parametros_de_bandeja_DRAW_a_caja
 561+ 942D
 562+ 942D 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 9430 01 0C 00     	ld bc,12
 564+ 9433 ED B0        	ldir
 565+ 9435 C9           	ret
 566+ 9436
 567+ 9436              ;---------------------------------------------------------------------------------------------------------------
 568+ 9436              ;
 569+ 9436              ;	5/1/24
 570+ 9436              ;
 571+ 9436              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9436              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9436              ;
 574+ 9436              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9436              ;
 576+ 9436              ;	(Numero_parcial_de_entidades)="7".
 577+ 9436              ;
 578+ 9436              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9436              ;
 580+ 9436              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9436              ;
 582+ 9436              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9436              ;	MODIFICA: A y B.
 584+ 9436              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9436
 586+ 9436              Inicializa_Numero_parcial_de_entidades
 587+ 9436
 588+ 9436              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9436
 590+ 9436 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 9439 A7           	and a
 592+ 943A
 593+ 943A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 943A              ;	jr z,$
 595+ 943A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 943A
 597+ 943A 20 03        	jr nz,3F
 598+ 943C
 599+ 943C              ; ---------- ---------- ----------
 600+ 943C
 601+ 943C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 943C              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 943C
 604+ 943C CD 32 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 943F
 606+ 943F              ; ---------- ---------- ----------
 607+ 943F
 608+ 943F 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9442 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9444 38 08        	jr c,1F
 611+ 9446
 612+ 9446              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9446              ; Actualizamos variables.
 614+ 9446
 615+ 9446 3E 07        	ld a,7
 616+ 9448 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 944B 47           	ld b,a
 618+ 944C 18 04        	jr 2F
 619+ 944E
 620+ 944E              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 944E              ; (Numero_de_entidades)="0".
 622+ 944E
 623+ 944E 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9451 47           	ld b,a
 625+ 9452 C9           2 ret
 626+ 9453
# file closed: Rutinas_de_inicio_y_niveles.asm
2263  9453              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9453              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9453              ;
   3+ 9453              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9453              ;
   5+ 9453              ; *****************************************************************************************************************************************************************************************
   6+ 9453              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9453
   8+ 9453 7C           calcula_tercio ld a,h
   9+ 9454 E6 18        	and $18
  10+ 9456 CB 2F        	sra a
  11+ 9458 CB 2F        	sra a
  12+ 945A CB 2F        	sra a
  13+ 945C C9           	ret
  14+ 945D
# file closed: calcula_tercio.asm
2264  945D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 945D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 945D              ;
   3+ 945D              ;
   4+ 945D              ;	CLS.
   5+ 945D              ;
   6+ 945D              ;	Limpia la pantalla y define sus atributos.
   7+ 945D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 945D              ;
   9+ 945D              ;	COLORES: 0 ..... NEGRO
  10+ 945D              ;    		 1 ..... AZUL
  11+ 945D              ; 			 2 ..... ROJO
  12+ 945D              ;			 3 ..... MAGENTA
  13+ 945D              ; 			 4 ..... VERDE
  14+ 945D              ; 			 5 ..... CIAN
  15+ 945D              ;			 6 ..... AMARILLO
  16+ 945D              ; 			 7 ..... BLANCO
  17+ 945D              ;
  18+ 945D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 945D              ;
  20+ 945D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 945D
  22+ 945D
  23+ 945D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9460 11 01 40     	LD DE,$4001
  25+ 9463 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9466 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9468 ED B0        	LDIR
  28+ 946A 01 FF 02     	LD BC,767
  29+ 946D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 946E ED B0        	LDIR
  31+ 9470 C9           	ret
  32+ 9471
# file closed: Cls.asm
2265  9471              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9471              ; ------------------------------------------------------------------------
   2+ 9471              ;
   3+ 9471              ;	30/1/24
   4+ 9471              ;
   5+ 9471              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9471              ;	Fila superior "0", Columna izquierda "0".
   7+ 9471              ;
   8+ 9471              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9471              ;
  10+ 9471              ;	Modifica: A,BC y DE.
  11+ 9471
  12+ 9471 7D           Genera_coordenadas ld a,l
  13+ 9472 E6 1F        	and $1f
  14+ 9474 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9477
  16+ 9477 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9478 FE 40        	cp $40
  18+ 947A 38 1C        	jr c,4F
  19+ 947C
  20+ 947C CD 53 94     	call calcula_tercio
  21+ 947F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9480
  23+ 9480 1E 00        	ld e,0
  24+ 9482 7D           	ld a,l
  25+ 9483 E6 E0        	and $e0
  26+ 9485 28 01        	jr z,1F
  27+ 9487 04           	inc b
  28+ 9488
  29+ 9488 04           1 inc b
  30+ 9489 05           	dec b
  31+ 948A 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 948C              ;														; _ , salimos.
  33+ 948C 1C           3 inc e
  34+ 948D D6 20        	sub 32
  35+ 948F 20 FB        	jr nz,3B
  36+ 9491 10 F5        	djnz 1B
  37+ 9493
  38+ 9493 7B           2 ld a,e
  39+ 9494 32 BD 8B     	ld (Coordenada_y),a
  40+ 9497 C9           	ret
  41+ 9498
  42+ 9498 AF           4 xor a
  43+ 9499 32 BD 8B     	ld (Coordenada_y),a
  44+ 949C C9           	ret
  45+ 949D
# file closed: Genera_coordenadas.asm
2266  949D              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 949D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 949D              ;
   3+ 949D              ;	11/03/24
   4+ 949D              ;
   5+ 949D              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 949D              ;   DE contiene Puntero_objeto.
   7+ 949D              ;   IX contiene el Puntero de impresión.
   8+ 949D
   9+ 949D              Genera_datos_de_impresion
  10+ 949D
  11+ 949D ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94A1
  13+ 94A1 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94A4 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94A6
  16+ 94A6 2A 28 8C         ld hl,(Scanlines_album_SP)
  17+ 94A9
  18+ 94A9 3E 05            ld a,5
  19+ 94AB 85               add l
  20+ 94AC 6F               ld l,a
  21+ 94AD
  22+ 94AD F9               ld sp,hl
  23+ 94AE 22 28 8C         ld (Scanlines_album_SP),hl
  24+ 94B1
  25+ 94B1 21 00 00         ld hl,0
  26+ 94B4
  27+ 94B4 DD E5            push ix
  28+ 94B6 3B               dec sp
  29+ 94B7 ED 7A            adc hl,sp
  30+ 94B9 D5               push de
  31+ 94BA
  32+ 94BA              ; Recuperamos SP.
  33+ 94BA
  34+ 94BA ED 7B 08 8C      ld sp,(Stack)
  35+ 94BE
  36+ 94BE E5               push hl
  37+ 94BF F1               pop af
  38+ 94C0 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94C1
  40+ 94C1              ; Tenemos el encabezado listo.
  41+ 94C1              ; Preparamos registros para generar los scanlines.
  42+ 94C1
  43+ 94C1 DD E5            push ix
  44+ 94C3 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94C4
  46+ 94C4 ED 5B 28 8C      ld de,(Scanlines_album_SP)
  47+ 94C8
  48+ 94C8              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94C8              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94C8
  51+ 94C8 7C               ld a,h
  52+ 94C9 FE 50            cp $50
  53+ 94CB 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94CD
  55+ 94CD 20 05            jr nz,2F
  56+ 94CF
  57+ 94CF 7D               ld a,l
  58+ 94D0 FE E0            cp $e0
  59+ 94D2 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94D4
  61+ 94D4 7D           2 ld a,l
  62+ 94D5 FE C0            cp $c0
  63+ 94D7 D2 69 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94DA
  65+ 94DA              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94DA
  67+ 94DA CD 67 99         call NextScan
  68+ 94DD EB               ex de,hl
  69+ 94DE
  70+ 94DE 73               ld (hl),e
  71+ 94DF 23               inc hl
  72+ 94E0 72               ld (hl),d
  73+ 94E1 23               inc hl
  74+ 94E2
  75+ 94E2 EB               ex de,hl
  76+ 94E3
  77+ 94E3 CD 67 99         call NextScan
  78+ 94E6 EB               ex de,hl
  79+ 94E7
  80+ 94E7 73               ld (hl),e
  81+ 94E8 23               inc hl
  82+ 94E9 72               ld (hl),d
  83+ 94EA 23               inc hl
  84+ 94EB
  85+ 94EB EB               ex de,hl
  86+ 94EC
  87+ 94EC CD 67 99         call NextScan
  88+ 94EF EB               ex de,hl
  89+ 94F0
  90+ 94F0 73               ld (hl),e
  91+ 94F1 23               inc hl
  92+ 94F2 72               ld (hl),d
  93+ 94F3 23               inc hl
  94+ 94F4
  95+ 94F4 EB               ex de,hl
  96+ 94F5
  97+ 94F5 CD 67 99         call NextScan
  98+ 94F8 EB               ex de,hl
  99+ 94F9
 100+ 94F9 73               ld (hl),e
 101+ 94FA 23               inc hl
 102+ 94FB 72               ld (hl),d
 103+ 94FC 23               inc hl
 104+ 94FD
 105+ 94FD EB               ex de,hl
 106+ 94FE
 107+ 94FE CD 67 99         call NextScan
 108+ 9501 EB               ex de,hl
 109+ 9502
 110+ 9502 73               ld (hl),e
 111+ 9503 23               inc hl
 112+ 9504 72               ld (hl),d
 113+ 9505 23               inc hl
 114+ 9506
 115+ 9506 EB               ex de,hl
 116+ 9507
 117+ 9507 CD 67 99         call NextScan
 118+ 950A EB               ex de,hl
 119+ 950B
 120+ 950B 73               ld (hl),e
 121+ 950C 23               inc hl
 122+ 950D 72               ld (hl),d
 123+ 950E 23               inc hl
 124+ 950F
 125+ 950F EB               ex de,hl
 126+ 9510
 127+ 9510 CD 67 99         call NextScan
 128+ 9513 EB               ex de,hl
 129+ 9514
 130+ 9514 73               ld (hl),e
 131+ 9515 23               inc hl
 132+ 9516 72               ld (hl),d
 133+ 9517 23               inc hl
 134+ 9518
 135+ 9518 EB               ex de,hl
 136+ 9519
 137+ 9519 CD 67 99         call NextScan
 138+ 951C EB               ex de,hl
 139+ 951D
 140+ 951D 73               ld (hl),e
 141+ 951E 23               inc hl
 142+ 951F 72               ld (hl),d
 143+ 9520 23               inc hl
 144+ 9521
 145+ 9521 EB               ex de,hl
 146+ 9522
 147+ 9522 CD 67 99         call NextScan
 148+ 9525 EB               ex de,hl
 149+ 9526
 150+ 9526 73               ld (hl),e
 151+ 9527 23               inc hl
 152+ 9528 72               ld (hl),d
 153+ 9529 23               inc hl
 154+ 952A
 155+ 952A EB               ex de,hl
 156+ 952B
 157+ 952B CD 67 99         call NextScan
 158+ 952E EB               ex de,hl
 159+ 952F
 160+ 952F 73               ld (hl),e
 161+ 9530 23               inc hl
 162+ 9531 72               ld (hl),d
 163+ 9532 23               inc hl
 164+ 9533
 165+ 9533 EB               ex de,hl
 166+ 9534
 167+ 9534 CD 67 99         call NextScan
 168+ 9537 EB               ex de,hl
 169+ 9538
 170+ 9538 73               ld (hl),e
 171+ 9539 23               inc hl
 172+ 953A 72               ld (hl),d
 173+ 953B 23               inc hl
 174+ 953C
 175+ 953C EB               ex de,hl
 176+ 953D
 177+ 953D CD 67 99         call NextScan
 178+ 9540 EB               ex de,hl
 179+ 9541
 180+ 9541 73               ld (hl),e
 181+ 9542 23               inc hl
 182+ 9543 72               ld (hl),d
 183+ 9544 23               inc hl
 184+ 9545
 185+ 9545 EB               ex de,hl
 186+ 9546
 187+ 9546 CD 67 99         call NextScan
 188+ 9549 EB               ex de,hl
 189+ 954A
 190+ 954A 73               ld (hl),e
 191+ 954B 23               inc hl
 192+ 954C 72               ld (hl),d
 193+ 954D 23               inc hl
 194+ 954E
 195+ 954E EB               ex de,hl
 196+ 954F
 197+ 954F CD 67 99         call NextScan
 198+ 9552 EB               ex de,hl
 199+ 9553
 200+ 9553 73               ld (hl),e
 201+ 9554 23               inc hl
 202+ 9555 72               ld (hl),d
 203+ 9556 23               inc hl
 204+ 9557
 205+ 9557 EB               ex de,hl
 206+ 9558
 207+ 9558 CD 67 99         call NextScan
 208+ 955B EB               ex de,hl
 209+ 955C
 210+ 955C 73               ld (hl),e
 211+ 955D 23               inc hl
 212+ 955E 72               ld (hl),d
 213+ 955F 23               inc hl
 214+ 9560
 215+ 9560              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9560
 217+ 9560 22 28 8C         ld (Scanlines_album_SP),hl
 218+ 9563
 219+ 9563              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 9563
 221+ 9563 08               ex af,af
 222+ 9564
 223+ 9564 F5               push af
 224+ 9565 E1               pop hl
 225+ 9566
 226+ 9566 36 10            ld (hl),16
 227+ 9568
 228+ 9568 C9               ret
 229+ 9569
 230+ 9569              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9569
 232+ 9569              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9569
 234+ 9569 3E 57            ld a,$57
 235+ 956B 94               sub h
 236+ 956C 47               ld b,a
 237+ 956D
 238+ 956D 3E DF            ld a,$df
 239+ 956F BD               cp l
 240+ 9570 38 04            jr c,1F
 241+ 9572
 242+ 9572 3E 08            ld a,8
 243+ 9574 80               add b
 244+ 9575 47               ld b,a
 245+ 9576
 246+ 9576              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 9576              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 9576
 249+ 9576 48           1 ld c,b
 250+ 9577 0C               inc c
 251+ 9578
 252+ 9578 04               inc b
 253+ 9579 05               dec b
 254+ 957A 20 02            jr nz,3F
 255+ 957C
 256+ 957C 18 0B            jr 6F
 257+ 957E
 258+ 957E CD 67 99     3 call NextScan
 259+ 9581 EB               ex de,hl
 260+ 9582
 261+ 9582 73               ld (hl),e
 262+ 9583 23               inc hl
 263+ 9584 72               ld (hl),d
 264+ 9585 23               inc hl
 265+ 9586
 266+ 9586 EB               ex de,hl
 267+ 9587 10 F5            djnz 3B
 268+ 9589
 269+ 9589 ED 53 28 8C  6 ld (Scanlines_album_SP),de
 270+ 958D
 271+ 958D 08           5 ex af,af
 272+ 958E F5               push af
 273+ 958F E1               pop hl
 274+ 9590
 275+ 9590 71               ld (hl),c
 276+ 9591
 277+ 9591 C9               ret
 278+ 9592
# file closed: Genera_datos_de_impresion.asm
2267  9592              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9592              ; -----------------------------------------------------------------------------
   2+ 9592              ;
   3+ 9592              ;   11/03/24
   4+ 9592              ;
   5+ 9592
   6+ 9592              Pinta_Sprites
   7+ 9592
   8+ 9592              ;    ld hl,(Scanlines_album_SP)
   9+ 9592              ;    call Extrae_address
  10+ 9592
  11+ 9592              ;    inc h
  12+ 9592              ;    dec h
  13+ 9592              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9592
  15+ 9592 ED 73 08 8C      ld (Stack),sp
  16+ 9596
  17+ 9596 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9597              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9597 2C               inc l
  20+ 9598 2C               inc l
  21+ 9599
  22+ 9599 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 959A
  24+ 959A 2C               inc l
  25+ 959B F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 959C
  27+ 959C              ;   Seleccionamos rutina de impresión:
  28+ 959C
  29+ 959C 3E 10            ld a,16
  30+ 959E B8               cp b
  31+ 959F C2 9B 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95A2
  33+ 95A2              ;   Rutinas:
  34+ 95A2
  35+ 95A2              Pinta_rapido    ;   1520 t/states.
  36+ 95A2
  37+ 95A2 E1               pop hl
  38+ 95A3
  39+ 95A3 1A               ld a,(de)
  40+ 95A4 AE               xor (hl)
  41+ 95A5 77               ld (hl),a
  42+ 95A6 2C               inc l
  43+ 95A7 1C               inc e
  44+ 95A8 1A               ld a,(de)
  45+ 95A9 AE               xor (hl)
  46+ 95AA 77               ld (hl),a
  47+ 95AB 2C               inc l
  48+ 95AC 1C               inc e
  49+ 95AD 1A               ld a,(de)
  50+ 95AE AE               xor (hl)
  51+ 95AF 77               ld (hl),a
  52+ 95B0 13               inc de
  53+ 95B1
  54+ 95B1 E1               pop hl
  55+ 95B2
  56+ 95B2 1A               ld a,(de)
  57+ 95B3 AE               xor (hl)
  58+ 95B4 77               ld (hl),a
  59+ 95B5 2C               inc l
  60+ 95B6 1C               inc e
  61+ 95B7 1A               ld a,(de)
  62+ 95B8 AE               xor (hl)
  63+ 95B9 77               ld (hl),a
  64+ 95BA 2C               inc l
  65+ 95BB 1C               inc e
  66+ 95BC 1A               ld a,(de)
  67+ 95BD AE               xor (hl)
  68+ 95BE 77               ld (hl),a
  69+ 95BF 13               inc de
  70+ 95C0
  71+ 95C0 E1               pop hl
  72+ 95C1
  73+ 95C1 1A               ld a,(de)
  74+ 95C2 AE               xor (hl)
  75+ 95C3 77               ld (hl),a
  76+ 95C4 2C               inc l
  77+ 95C5 1C               inc e
  78+ 95C6 1A               ld a,(de)
  79+ 95C7 AE               xor (hl)
  80+ 95C8 77               ld (hl),a
  81+ 95C9 2C               inc l
  82+ 95CA 1C               inc e
  83+ 95CB 1A               ld a,(de)
  84+ 95CC AE               xor (hl)
  85+ 95CD 77               ld (hl),a
  86+ 95CE 13               inc de
  87+ 95CF
  88+ 95CF E1               pop hl
  89+ 95D0
  90+ 95D0 1A               ld a,(de)
  91+ 95D1 AE               xor (hl)
  92+ 95D2 77               ld (hl),a
  93+ 95D3 2C               inc l
  94+ 95D4 1C               inc e
  95+ 95D5 1A               ld a,(de)
  96+ 95D6 AE               xor (hl)
  97+ 95D7 77               ld (hl),a
  98+ 95D8 2C               inc l
  99+ 95D9 1C               inc e
 100+ 95DA 1A               ld a,(de)
 101+ 95DB AE               xor (hl)
 102+ 95DC 77               ld (hl),a
 103+ 95DD 13               inc de
 104+ 95DE
 105+ 95DE E1               pop hl
 106+ 95DF
 107+ 95DF 1A               ld a,(de)
 108+ 95E0 AE               xor (hl)
 109+ 95E1 77               ld (hl),a
 110+ 95E2 2C               inc l
 111+ 95E3 1C               inc e
 112+ 95E4 1A               ld a,(de)
 113+ 95E5 AE               xor (hl)
 114+ 95E6 77               ld (hl),a
 115+ 95E7 2C               inc l
 116+ 95E8 1C               inc e
 117+ 95E9 1A               ld a,(de)
 118+ 95EA AE               xor (hl)
 119+ 95EB 77               ld (hl),a
 120+ 95EC 13               inc de
 121+ 95ED
 122+ 95ED E1               pop hl
 123+ 95EE
 124+ 95EE 1A               ld a,(de)
 125+ 95EF AE               xor (hl)
 126+ 95F0 77               ld (hl),a
 127+ 95F1 2C               inc l
 128+ 95F2 1C               inc e
 129+ 95F3 1A               ld a,(de)
 130+ 95F4 AE               xor (hl)
 131+ 95F5 77               ld (hl),a
 132+ 95F6 2C               inc l
 133+ 95F7 1C               inc e
 134+ 95F8 1A               ld a,(de)
 135+ 95F9 AE               xor (hl)
 136+ 95FA 77               ld (hl),a
 137+ 95FB 13               inc de
 138+ 95FC
 139+ 95FC E1               pop hl
 140+ 95FD
 141+ 95FD 1A               ld a,(de)
 142+ 95FE AE               xor (hl)
 143+ 95FF 77               ld (hl),a
 144+ 9600 2C               inc l
 145+ 9601 1C               inc e
 146+ 9602 1A               ld a,(de)
 147+ 9603 AE               xor (hl)
 148+ 9604 77               ld (hl),a
 149+ 9605 2C               inc l
 150+ 9606 1C               inc e
 151+ 9607 1A               ld a,(de)
 152+ 9608 AE               xor (hl)
 153+ 9609 77               ld (hl),a
 154+ 960A 13               inc de
 155+ 960B
 156+ 960B E1               pop hl
 157+ 960C
 158+ 960C 1A               ld a,(de)
 159+ 960D AE               xor (hl)
 160+ 960E 77               ld (hl),a
 161+ 960F 2C               inc l
 162+ 9610 1C               inc e
 163+ 9611 1A               ld a,(de)
 164+ 9612 AE               xor (hl)
 165+ 9613 77               ld (hl),a
 166+ 9614 2C               inc l
 167+ 9615 1C               inc e
 168+ 9616 1A               ld a,(de)
 169+ 9617 AE               xor (hl)
 170+ 9618 77               ld (hl),a
 171+ 9619 13               inc de
 172+ 961A
 173+ 961A E1               pop hl
 174+ 961B
 175+ 961B 1A               ld a,(de)
 176+ 961C AE               xor (hl)
 177+ 961D 77               ld (hl),a
 178+ 961E 2C               inc l
 179+ 961F 1C               inc e
 180+ 9620 1A               ld a,(de)
 181+ 9621 AE               xor (hl)
 182+ 9622 77               ld (hl),a
 183+ 9623 2C               inc l
 184+ 9624 1C               inc e
 185+ 9625 1A               ld a,(de)
 186+ 9626 AE               xor (hl)
 187+ 9627 77               ld (hl),a
 188+ 9628 13               inc de
 189+ 9629
 190+ 9629 E1               pop hl
 191+ 962A
 192+ 962A 1A               ld a,(de)
 193+ 962B AE               xor (hl)
 194+ 962C 77               ld (hl),a
 195+ 962D 2C               inc l
 196+ 962E 1C               inc e
 197+ 962F 1A               ld a,(de)
 198+ 9630 AE               xor (hl)
 199+ 9631 77               ld (hl),a
 200+ 9632 2C               inc l
 201+ 9633 1C               inc e
 202+ 9634 1A               ld a,(de)
 203+ 9635 AE               xor (hl)
 204+ 9636 77               ld (hl),a
 205+ 9637 13               inc de
 206+ 9638
 207+ 9638 E1               pop hl
 208+ 9639
 209+ 9639 1A               ld a,(de)
 210+ 963A AE               xor (hl)
 211+ 963B 77               ld (hl),a
 212+ 963C 2C               inc l
 213+ 963D 1C               inc e
 214+ 963E 1A               ld a,(de)
 215+ 963F AE               xor (hl)
 216+ 9640 77               ld (hl),a
 217+ 9641 2C               inc l
 218+ 9642 1C               inc e
 219+ 9643 1A               ld a,(de)
 220+ 9644 AE               xor (hl)
 221+ 9645 77               ld (hl),a
 222+ 9646 13               inc de
 223+ 9647
 224+ 9647 E1               pop hl
 225+ 9648
 226+ 9648 1A               ld a,(de)
 227+ 9649 AE               xor (hl)
 228+ 964A 77               ld (hl),a
 229+ 964B 2C               inc l
 230+ 964C 1C               inc e
 231+ 964D 1A               ld a,(de)
 232+ 964E AE               xor (hl)
 233+ 964F 77               ld (hl),a
 234+ 9650 2C               inc l
 235+ 9651 1C               inc e
 236+ 9652 1A               ld a,(de)
 237+ 9653 AE               xor (hl)
 238+ 9654 77               ld (hl),a
 239+ 9655 13               inc de
 240+ 9656
 241+ 9656 E1               pop hl
 242+ 9657
 243+ 9657 1A               ld a,(de)
 244+ 9658 AE               xor (hl)
 245+ 9659 77               ld (hl),a
 246+ 965A 2C               inc l
 247+ 965B 1C               inc e
 248+ 965C 1A               ld a,(de)
 249+ 965D AE               xor (hl)
 250+ 965E 77               ld (hl),a
 251+ 965F 2C               inc l
 252+ 9660 1C               inc e
 253+ 9661 1A               ld a,(de)
 254+ 9662 AE               xor (hl)
 255+ 9663 77               ld (hl),a
 256+ 9664 13               inc de
 257+ 9665
 258+ 9665 E1               pop hl
 259+ 9666
 260+ 9666 1A               ld a,(de)
 261+ 9667 AE               xor (hl)
 262+ 9668 77               ld (hl),a
 263+ 9669 2C               inc l
 264+ 966A 1C               inc e
 265+ 966B 1A               ld a,(de)
 266+ 966C AE               xor (hl)
 267+ 966D 77               ld (hl),a
 268+ 966E 2C               inc l
 269+ 966F 1C               inc e
 270+ 9670 1A               ld a,(de)
 271+ 9671 AE               xor (hl)
 272+ 9672 77               ld (hl),a
 273+ 9673 13               inc de
 274+ 9674
 275+ 9674 E1               pop hl
 276+ 9675
 277+ 9675 1A               ld a,(de)
 278+ 9676 AE               xor (hl)
 279+ 9677 77               ld (hl),a
 280+ 9678 2C               inc l
 281+ 9679 1C               inc e
 282+ 967A 1A               ld a,(de)
 283+ 967B AE               xor (hl)
 284+ 967C 77               ld (hl),a
 285+ 967D 2C               inc l
 286+ 967E 1C               inc e
 287+ 967F 1A               ld a,(de)
 288+ 9680 AE               xor (hl)
 289+ 9681 77               ld (hl),a
 290+ 9682 13               inc de
 291+ 9683
 292+ 9683 E1               pop hl
 293+ 9684
 294+ 9684 1A               ld a,(de)
 295+ 9685 AE               xor (hl)
 296+ 9686 77               ld (hl),a
 297+ 9687 2C               inc l
 298+ 9688 1C               inc e
 299+ 9689 1A               ld a,(de)
 300+ 968A AE               xor (hl)
 301+ 968B 77               ld (hl),a
 302+ 968C 2C               inc l
 303+ 968D 1C               inc e
 304+ 968E 1A               ld a,(de)
 305+ 968F AE               xor (hl)
 306+ 9690 77               ld (hl),a
 307+ 9691 13               inc de
 308+ 9692
 309+ 9692 ED 73 28 8C      ld (Scanlines_album_SP),sp
 310+ 9696 ED 7B 08 8C      ld sp,(Stack)
 311+ 969A C9               ret
 312+ 969B
 313+ 969B              Pinta_lento
 314+ 969B
 315+ 969B E1           1 pop hl
 316+ 969C
 317+ 969C 1A               ld a,(de)
 318+ 969D AE               xor (hl)
 319+ 969E 77               ld (hl),a
 320+ 969F 2C               inc l
 321+ 96A0 1C               inc e
 322+ 96A1 1A               ld a,(de)
 323+ 96A2 AE               xor (hl)
 324+ 96A3 77               ld (hl),a
 325+ 96A4 2C               inc l
 326+ 96A5 1C               inc e
 327+ 96A6 1A               ld a,(de)
 328+ 96A7 AE               xor (hl)
 329+ 96A8 77               ld (hl),a
 330+ 96A9 13               inc de
 331+ 96AA
 332+ 96AA 10 EF            djnz 1B
 333+ 96AC
 334+ 96AC ED 73 28 8C      ld (Scanlines_album_SP),sp
 335+ 96B0 ED 7B 08 8C      ld sp,(Stack)
 336+ 96B4 C9               ret
# file closed: Pinta_Sprites.asm
2268  96B5              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96B5              ; ******************************************************************************************************************************************************************************************
   2+ 96B5              ;
   3+ 96B5              ; 26/06/23
   4+ 96B5              ;
   5+ 96B5              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96B5
   7+ 96B5              Draw
   8+ 96B5
   9+ 96B5 CD 5B 99     	call Prepara_draw
  10+ 96B8 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96B9 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96BA 28 05        	jr z,2F
  13+ 96BC
  14+ 96BC 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96BF 18 0C        	jr 1F
  16+ 96C1
  17+ 96C1 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96C4 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96C7 CD 53 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96CA              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96CA
  22+ 96CA CD FA 9D     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96CD
  24+ 96CD 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96D0 CB 6F        	bit 5,a
  26+ 96D2 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96D4
  28+ 96D4 CD E9 96     	call Comprueba_limite_horizontal
  29+ 96D7 CD 79 97     	call Comprueba_limite_vertical
  30+ 96DA
  31+ 96DA              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96DA              ; -----------------------
  33+ 96DA              ; -----------------------
  34+ 96DA              ; -----------------------
  35+ 96DA
  36+ 96DA CD CF 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96DD CD 06 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96E0
  39+ 96E0 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96E3 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96E5 32 C8 8B     	ld (Ctrl_0),a
  42+ 96E8
  43+ 96E8 C9           	ret
  44+ 96E9
  45+ 96E9              ; *******************************************************************************************************************************************************************************************
  46+ 96E9              ;	21/01/23
  47+ 96E9              ;
  48+ 96E9              ; 	Comprueba_limite_horizontal.
  49+ 96E9              ;
  50+ 96E9              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 96E9              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 96E9              ;
  53+ 96E9              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 96E9              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 96E9              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 96E9              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 96E9
  58+ 96E9
  59+ 96E9
  60+ 96E9 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 96EC CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 96EE 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 96F0 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 96F2 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 96F5 18 09            jr 6F
  66+ 96F7 CB 5F        1 bit 3,a
  67+ 96F9 28 0A            jr z,2F
  68+ 96FB E6 F7            and $f7
  69+ 96FD 32 C8 8B         ld (Ctrl_0),a
  70+ 9700 CD 53 98     6 call Inicializacion
  71+ 9703 18 5B            jr 5F
  72+ 9705 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9706
  74+ 9706              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9706              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9706
  77+ 9706 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9707 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 970A CD 53 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 970D 67           	ld h,a
  81+ 970E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 970F CD 53 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9712 67           	ld h,a
  84+ 9713 A7           	and a
  85+ 9714 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9716 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9717 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 971A FE 02        	cp 2
  89+ 971C 38 1E        	jr c,3F
  90+ 971E 28 1C        	jr z,3F
  91+ 9720 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9721 28 23            jr z,7F
  93+ 9723 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9725 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9727 E1           	pop hl
  96+ 9728
  97+ 9728              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9728              ; _para indicar con E="2" en caso necesario.
  99+ 9728
 100+ 9728 E5               push hl
 101+ 9729 C5               push bc
 102+ 972A CD 53 94     	call calcula_tercio
 103+ 972D FE 01        	cp 1
 104+ 972F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9731 CD 61 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9734 28 26            jr z,9F
 107+ 9736 38 24            jr c,9F
 108+ 9738 1E 00        11 ld e,0
 109+ 973A 18 22            jr 8F
 110+ 973C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 973D 28 07        	jr z, 7F
 112+ 973F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9741 1E 00         	ld e,0
 114+ 9743 E1           	pop hl
 115+ 9744 18 04        	jr 4F
 116+ 9746 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9748 18 15            jr 10F
 118+ 974A
 119+ 974A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 974A              ; _para indicar con E="2" en caso necesario.
 121+ 974A
 122+ 974A E5           4 push hl
 123+ 974B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 974C CD 53 94     	call calcula_tercio
 125+ 974F FE 01        	cp 1
 126+ 9751 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9753 CD 61 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9756 28 04            jr z,9F
 129+ 9758 30 02            jr nc,9F
 130+ 975A 18 02        	jr 8F
 131+ 975C 1E 02        9 ld e,2
 132+ 975E C1           8 pop bc
 133+ 975F E1           10 pop hl
 134+ 9760 C9           5 ret
 135+ 9761
 136+ 9761              ; --------------------
 137+ 9761              ;
 138+ 9761              ; 25/08/22
 139+ 9761
 140+ 9761 CD 53 94     Comprueba_centro call calcula_tercio
 141+ 9764 67               ld h,a
 142+ 9765 08           	ex af,af
 143+ 9766 FE 02        	cp 2
 144+ 9768 38 07        	jr c,1F
 145+ 976A 28 05        	jr z,1F
 146+ 976C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 976F 18 03        	jr 2F
 148+ 9771 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9774 08           2 ex af,af
 150+ 9775 A7               and a
 151+ 9776 ED 42            sbc hl,bc
 152+ 9778 C9               ret
 153+ 9779
 154+ 9779              ; *********************************************************************************************************************************************************************************************
 155+ 9779              ;
 156+ 9779              ;   16/8/22
 157+ 9779              ;
 158+ 9779              ;	Comprueba_limite_vertical
 159+ 9779              ;
 160+ 9779              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9779              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9779              ;
 163+ 9779
 164+ 9779 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 977C 7D           	ld a,l
 166+ 977D E6 1F        	and $1F
 167+ 977F 57           	ld d,a
 168+ 9780 3A DE 8B     	ld a,(Limite_vertical)
 169+ 9783 BA           	cp d 											; Límite - Posición.
 170+ 9784 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9785 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9788 CB 47        	bit 0,a
 173+ 978A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 978C
 175+ 978C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 978C
 177+ 978C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 978D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 978F
 180+ 978F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 978F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 978F
 183+ 978F 3A BC 8B         ld a,(Coordenada_X)
 184+ 9792 16 0F            ld d,Centro_izquierda
 185+ 9794 A7               and a
 186+ 9795 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9796 28 1E            jr z,3F
 188+ 9798 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 979A              ;                                                    ; _salimos sin modificar nada.
 190+ 979A 18 0E            jr 2F
 191+ 979C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 979D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 979F
 194+ 979F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 979F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 979F
 197+ 979F 3A BC 8B         ld a,(Coordenada_X)
 198+ 97A2 16 10            ld d,Centro_derecha
 199+ 97A4 A7               and a
 200+ 97A5 92               sub d
 201+ 97A6 28 0E            jr z,3F
 202+ 97A8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97AA              ;                                                    ; _salimos sin modificar nada.
 204+ 97AA CB 43        2 bit 0,e
 205+ 97AC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97AE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97AF CD 43 98         call Modificaccionne
 208+ 97B2 C1           	pop bc
 209+ 97B3 CD 53 98         call Inicializacion
 210+ 97B6 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97B7
 212+ 97B7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97B7
 214+ 97B7 C5           4 push bc
 215+ 97B8 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97BB 0A           	ld a,(bc)
 217+ 97BC 3D           	dec a
 218+ 97BD 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97BE 7D           	ld a,l
 220+ 97BF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97C0 CB 47        	bit 0,a
 222+ 97C2 28 03        	jr z,5F
 223+ 97C4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97C5 18 2E        	jr 7F
 225+ 97C7
 226+ 97C7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97C7
 228+ 97C7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97C8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97C9 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97CC CB 4F        	bit 1,a
 232+ 97CE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97D0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97D1
 235+ 97D1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97D1
 237+ 97D1 1C               inc e
 238+ 97D2 1D               dec e
 239+ 97D3 20 07            jr nz,12F
 240+ 97D5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97D6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97D7 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97DA 18 44        13 jr 9F
 244+ 97DC CB 43        12 bit 0,e
 245+ 97DE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97E0              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97E0 C1           	pop bc
 248+ 97E1 18 D3        	jr 3B
 249+ 97E3 80           14 add b
 250+ 97E4 6F               ld l,a
 251+ 97E5 22 CB 8B     	ld (Posicion_actual),hl
 252+ 97E8 CD 43 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 97EB 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 97ED E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 97EF 32 C8 8B         ld (Ctrl_0),a
 256+ 97F2 F1           	pop af
 257+ 97F3 18 2B        	jr 9F
 258+ 97F5
 259+ 97F5              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 97F5
 261+ 97F5 F5           7 push af
 262+ 97F6 3A C8 8B     	ld a,(Ctrl_0)
 263+ 97F9 CB 47        	bit 0,a
 264+ 97FB 20 1D        	jr nz,8F
 265+ 97FD F1           	pop af
 266+ 97FE
 267+ 97FE              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 97FE
 269+ 97FE 1C           	inc e
 270+ 97FF 1D               dec e
 271+ 9800 20 07            jr nz,10F
 272+ 9802 90           	sub b
 273+ 9803 6F               ld l,a
 274+ 9804 22 CB 8B     	ld (Posicion_actual),hl
 275+ 9807 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9809              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9809 CB 43        10 bit 0,e
 278+ 980B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 980D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 980D C1           	pop bc
 281+ 980E 18 A6        	jr 3B
 282+ 9810 90           16 sub b
 283+ 9811 6F               ld l,a
 284+ 9812 22 CB 8B     	ld (Posicion_actual),hl
 285+ 9815 CD 43 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9818 18 06            jr 9F
 287+ 981A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 981C 32 C8 8B         ld (Ctrl_0),a
 289+ 981F F1           	pop af
 290+ 9820 C1           9 pop bc
 291+ 9821 1E 00        	ld e,0
 292+ 9823 CD 53 98         call Inicializacion
 293+ 9826 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9827 08           	ex af,af
 295+ 9828 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9829 18 8B            jr 3B
 297+ 982B
 298+ 982B              ; --------------------
 299+ 982B
 300+ 982B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 982D CD 76 99     1 call PreviousScan
 302+ 9830 10 FB            djnz 1B
 303+ 9832 22 CB 8B     	ld (Posicion_actual),hl
 304+ 9835 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9836 C9           	ret
 306+ 9837
 307+ 9837              ; --------------------
 308+ 9837
 309+ 9837 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9839 CD 67 99     1 call NextScan
 311+ 983C 10 FB            djnz 1B
 312+ 983E 22 CB 8B     	ld (Posicion_actual),hl
 313+ 9841 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9842 C9           	ret
 315+ 9843
 316+ 9843              ; --------------------
 317+ 9843              ;
 318+ 9843              ;	22/01/23
 319+ 9843              ;
 320+ 9843              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9843              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9843              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9843
 324+ 9843
 325+ 9843              Modificaccionne
 326+ 9843
 327+ 9843 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 9846 FE 02        	cp 2
 329+ 9848 CC 2B 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 984B DC 2B 98         call c,Modifica_Pos_actual
 331+ 984E C8           	ret z
 332+ 984F CD 37 98         call Modifica_Pos_actual2
 333+ 9852 C9               ret
 334+ 9853
 335+ 9853              ; *************************************************************************************************************************************************************************************************
 336+ 9853              ;
 337+ 9853              ;	13/8/22
 338+ 9853              ;
 339+ 9853              ;	Inicializacion
 340+ 9853              ;
 341+ 9853              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9853              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9853              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9853              ;
 345+ 9853              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9853              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9853              ;	_ desaparece/aparece.
 348+ 9853
 349+ 9853              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9853              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9853              ;
 352+ 9853              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9853              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9853              ; 		   [E] ="0"
 355+ 9853
 356+ 9853              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9853
 358+ 9853 CD 53 94     Inicializacion call calcula_tercio
 359+ 9856 28 36        	jr z,primit
 360+ 9858 E6 02        	and 2
 361+ 985A 20 07        	jr nz,segmit
 362+ 985C 7D           	ld a,l
 363+ 985D FE 7F        	cp $7f
 364+ 985F 38 2D        	jr c,primit
 365+ 9861 28 2B        	jr z,primit
 366+ 9863 CD C9 98     segmit call column
 367+ 9866 38 13        	jr c,tercuad
 368+ 9868 3E 04        cuarcuad ld a,4
 369+ 986A 32 DA 8B     	ld (Cuad_objeto),a
 370+ 986D 21 20 48     	ld hl,$4820
 371+ 9870 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 9873 21 DE 8B     	ld hl,Limite_vertical
 373+ 9876 36 0D        	ld (hl),$0d
 374+ 9878 08           	ex af,af
 375+ 9879 18 3C        	jr 1F
 376+ 987B              tercuad
 377+ 987B 3E 03        	ld a,3
 378+ 987D 32 DA 8B     	ld (Cuad_objeto),a
 379+ 9880 21 20 48     	ld hl,$4820
 380+ 9883 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 9886 21 DE 8B     	ld hl,Limite_vertical
 382+ 9889 36 12        	ld (hl),$12
 383+ 988B 08           	ex af,af
 384+ 988C 18 29        	jr 1F
 385+ 988E CD C9 98     primit call column
 386+ 9891 38 13        	jr c, primcuad
 387+ 9893              segcuad
 388+ 9893 3E 02        	ld a,2
 389+ 9895 32 DA 8B     	ld (Cuad_objeto),a
 390+ 9898 21 C0 4F     	ld hl,$4fc0
 391+ 989B 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 989E 21 DE 8B     	ld hl,Limite_vertical
 393+ 98A1 36 0D        	ld (hl),$0d
 394+ 98A3 08           	ex af,af
 395+ 98A4 18 11        	jr 1F
 396+ 98A6              primcuad
 397+ 98A6 3E 01        	ld a,1
 398+ 98A8 32 DA 8B     	ld (Cuad_objeto),a
 399+ 98AB 21 C0 4F     	ld hl,$4fc0
 400+ 98AE 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 98B1 21 DE 8B     	ld hl,Limite_vertical
 402+ 98B4 36 12        	ld (hl),$12
 403+ 98B6 08           	ex af,af
 404+ 98B7
 405+ 98B7 C5           1 push bc
 406+ 98B8 E5           	push hl
 407+ 98B9 D5           	push de
 408+ 98BA
 409+ 98BA 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98BD CD 71 94     	call Genera_coordenadas
 411+ 98C0
 412+ 98C0 D1           	pop de
 413+ 98C1 E1           	pop hl
 414+ 98C2 C1           	pop bc
 415+ 98C3
 416+ 98C3 21 C8 8B     	ld hl,Ctrl_0
 417+ 98C6 CB EE        	set 5,(hl)
 418+ 98C8 C9           	ret
 419+ 98C9
 420+ 98C9              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98C9
 422+ 98C9              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98C9              ;
 424+ 98C9              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98C9
 426+ 98C9 7D           column ld a,l
 427+ 98CA E6 1F        	and $1f
 428+ 98CC FE 10         	cp $10
 429+ 98CE C9            	ret
 430+ 98CF
 431+ 98CF              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98CF              ;
 433+ 98CF              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98CF              ;
 435+ 98CF              ; 14/12/22
 436+ 98CF              ;
 437+ 98CF              ;	Modifica: A y BC.
 438+ 98CF
 439+ 98CF 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98D2 E6 01        	and 1
 441+ 98D4 28 17        	jr z,1F
 442+ 98D6
 443+ 98D6              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98D6
 445+ 98D6 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98D9 47           	ld b,a
 447+ 98DA 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98DB 79           	ld a,c
 449+ 98DC 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98DD 38 08        	jr c,2F
 451+ 98DF 47           	ld b,a
 452+ 98E0 79           	ld a,c
 453+ 98E1 90           	sub b
 454+ 98E2 32 DB 8B     	ld (Columnas),a
 455+ 98E5 18 1B        	jr 4F
 456+ 98E7 79           2 ld a,c
 457+ 98E8 32 DB 8B     	ld (Columnas),a
 458+ 98EB 18 15        	jr 4F
 459+ 98ED
 460+ 98ED              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 98ED
 462+ 98ED 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 98F0 81           	add c
 464+ 98F1 3D           	dec a
 465+ 98F2 D6 1F        	sub $1f
 466+ 98F4 38 08        	jr c,3F
 467+ 98F6 47           	ld b,a
 468+ 98F7 79           	ld a,c
 469+ 98F8 90           	sub b
 470+ 98F9 32 DB 8B     	ld (Columnas),a
 471+ 98FC 18 04        	jr 4F
 472+ 98FE 79           3 ld a,c
 473+ 98FF 32 DB 8B     	ld (Columnas),a
 474+ 9902 D9           4 exx
 475+ 9903 4F           	ld c,a
 476+ 9904 D9           	exx
 477+ 9905 C9            ret
 478+ 9906
 479+ 9906              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9906              ;
 481+ 9906              ;   19/7/23
 482+ 9906              ;
 483+ 9906              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9906              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9906              ;
 486+ 9906              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9906              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9906              ;
 489+ 9906              ;	DESTRUYE: HL,B Y A.
 490+ 9906
 491+ 9906 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9909 FE 02        	cp 2
 493+ 990B 38 18        	jr c,1F
 494+ 990D 28 16        	jr z,1F
 495+ 990F E6 01        	and 1
 496+ 9911 28 0D        	jr z,3F
 497+ 9913
 498+ 9913              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9913
 500+ 9913 CD 4F 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9916
 502+ 9916 7D           9 ld a,l
 503+ 9917 E6 1F        	and $1f
 504+ 9919 28 2A        	jr z,7F
 505+ 991B 2B           	dec hl
 506+ 991C 10 F8        	djnz 9B
 507+ 991E 18 25        	jr 7F
 508+ 9920
 509+ 9920              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9920
 511+ 9920 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 9923 18 20        	jr 7F
 513+ 9925
 514+ 9925 28 14        1 jr z,2F
 515+ 9927
 516+ 9927              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9927
 518+ 9927 CD 4F 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 992A
 520+ 992A 7D           4 ld a,l
 521+ 992B E6 1F        	and $1f
 522+ 992D 28 03        	jr z,6F
 523+ 992F 2B           	dec hl
 524+ 9930 10 F8        	djnz 4B
 525+ 9932 06 0F        6 ld b,15
 526+ 9934 CD 76 99     5 call PreviousScan
 527+ 9937 10 FB        	djnz 5B
 528+ 9939 18 0A        	jr 7F
 529+ 993B
 530+ 993B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 993B
 532+ 993B CD 4F 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 993E 06 0F        	ld b,15
 534+ 9940 CD 76 99     8 call PreviousScan
 535+ 9943 10 FB        	djnz 8B
 536+ 9945
 537+ 9945 E5           7 push hl
 538+ 9946 DD E1        	pop ix
 539+ 9948
 540+ 9948 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 994B E5           	push hl
 542+ 994C FD E1        	pop iy
 543+ 994E
 544+ 994E C9           	ret
 545+ 994F
 546+ 994F              ; --------------------------------------------------------------------------------------------------------------------
 547+ 994F              ;
 548+ 994F              ;	2/1/23
 549+ 994F              ;
 550+ 994F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 994F              ;
 552+ 994F              ;	Tras esta rutina tenemos:
 553+ 994F              ;
 554+ 994F              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 994F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 994F              ;
 557+ 994F              ;	DESTRUYE!!!!! HL,B y A.
 558+ 994F
 559+ 994F 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9952 3A DB 8B     	ld a,(Columnas)
 561+ 9955 3D           	dec a
 562+ 9956 20 01        	jr nz,1F
 563+ 9958 3C           	inc a
 564+ 9959 47           1 ld b,a
 565+ 995A C9           	ret
 566+ 995B
 567+ 995B              ; --------------------------------------------------------------------------------------------------------------------
 568+ 995B              ;
 569+ 995B              ;	Prepara_draw
 570+ 995B              ;
 571+ 995B              ;	Es una rutina de carga.
 572+ 995B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 995B              ;
 574+ 995B              ;	FUNCIONAMIENTO:
 575+ 995B              ;
 576+ 995B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 995B              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 995B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 995B              ;
 580+ 995B              ;	DESTRUYE:
 581+ 995B              ;
 582+ 995B              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 995B
 584+ 995B 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 995E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 995F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9960 4E           	ld c,(hl)
 588+ 9961 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 9964 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9966 C9           	ret
 591+ 9967
 592+ 9967              ;----------------------------------------------------------------------------------------------------------------
 593+ 9967              ;
 594+ 9967              ;	5/08/22
 595+ 9967              ;
 596+ 9967              ;   NextScan.
 597+ 9967              ;
 598+ 9967              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9967              ;
 600+ 9967              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9967              ;
 602+ 9967              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9967              ;
 604+ 9967              ;       DESTRUIDOS: AF y HL !!!
 605+ 9967              ;
 606+ 9967              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9967              ;
 608+ 9967
 609+ 9967 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9968 7C               ld a,h
 611+ 9969 E6 07            and 7
 612+ 996B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 996C
 614+ 996C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 996D C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 996F 6F               ld l,a
 617+ 9970 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9971
 619+ 9971 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9972 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9974 67               ld h,a
 622+ 9975 C9               ret
 623+ 9976
 624+ 9976              ;----------------------------------------------------------------------------------------------------------------
 625+ 9976              ;
 626+ 9976              ;	5/08/22
 627+ 9976              ;
 628+ 9976              ;   PreviousScan.
 629+ 9976              ;
 630+ 9976              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9976              ;
 632+ 9976              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9976              ;
 634+ 9976              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9976              ;
 636+ 9976              ;       DESTRUIDOS: AF y HL !!!
 637+ 9976              ;
 638+ 9976              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9976              ;
 640+ 9976
 641+ 9976 7C           PreviousScan ld a,h
 642+ 9977 25               dec h               ; Dec H.
 643+ 9978 E6 07            and 7
 644+ 997A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 997B
 646+ 997B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 997C D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 997E 6F               ld l,a
 649+ 997F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9980
 651+ 9980 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9981 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9983 67               ld h,a
 654+ 9984 C9               ret
 655+ 9985
 656+ 9985
 657+ 9985
 658+ 9985
 659+ 9985
 660+ 9985
 661+ 9985
 662+ 9985
 663+ 9985
 664+ 9985
 665+ 9985
 666+ 9985
# file closed: Draw_XOR.asm
2269  9985              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9985
   2+ 9985              ; ******************************************************************************************************************************************************************************************
   3+ 9985              ;
   4+ 9985              ;   20/05/23
   5+ 9985              ;
   6+ 9985              ;	Recompone_posicion_inicio
   7+ 9985              ;
   8+ 9985              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9985              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9985              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9985              ;	_ a una u otra rutina.
  12+ 9985
  13+ 9985              Recompone_posicion_inicio
  14+ 9985
  15+ 9985 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 9988 7D           	ld a,l
  17+ 9989 E6 1F        	and $1f
  18+ 998B 28 16        	jr z,1F
  19+ 998D
  20+ 998D FE 1F        	cp $1f
  21+ 998F 28 0D        	jr z,3F
  22+ 9991
  23+ 9991 21 C7 8B     	ld hl,Ctrl_2
  24+ 9994 CB C6        	set 0,(hl)
  25+ 9996 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 9999 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 999C 18 08        	jr 2F
  28+ 999E
  29+ 999E CD 4C 9B     3 call Mov_left
  30+ 99A1 18 03        	jr 2F
  31+ 99A3
  32+ 99A3 CD 29 9A     1 call Mov_right
  33+ 99A6 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99A9 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 99AC C9           	ret
  36+ 99AD
  37+ 99AD              ; ******************************************************************************************************************************************************************************************
  38+ 99AD              ;
  39+ 99AD              ;   27/05/23
  40+ 99AD              ;
  41+ 99AD              ;	Mov_down
  42+ 99AD              ;
  43+ 99AD              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99AD              ;
  45+ 99AD              ;
  46+ 99AD              Mov_down
  47+ 99AD
  48+ 99AD CD 17 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99B0              ;																	; _ repone (Puntero_objeto).
  50+ 99B0 21 C8 8B     	ld hl,Ctrl_0
  51+ 99B3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99B5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99B5              ; 																	; _ en el caso de que no lo haya.
  54+ 99B5 3A E3 8B     	ld a,(Vel_down)
  55+ 99B8 47           	ld b,a
  56+ 99B9 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99BC CD 53 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99BF E6 02        	and 2
  59+ 99C1 28 17        	jr z,1F
  60+ 99C3
  61+ 99C3              ; Nos encontramos en el último tercio de pantalla.
  62+ 99C3              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99C3
  64+ 99C3 7C           	ld a,h
  65+ 99C4 FE 57        	cp $57
  66+ 99C6 20 12        	jr nz,1F
  67+ 99C8
  68+ 99C8 7D           	ld a,l
  69+ 99C9 C6 20        	add $20
  70+ 99CB 30 0D        	jr nc,1F
  71+ 99CD
  72+ 99CD              ; ------------------------------
  73+ 99CD              ;
  74+ 99CD              ;	12/01/24
  75+ 99CD
  76+ 99CD              ;	call Reaparece_arriba
  77+ 99CD CD D9 9C     	call Reinicio
  78+ 99D0
  79+ 99D0              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99D0
  81+ 99D0 3A 2E 8C     	ld a,(Ctrl_3)
  82+ 99D3 CB CF        	set 1,a
  83+ 99D5 32 2E 8C     	ld (Ctrl_3),a
  84+ 99D8
  85+ 99D8 18 08        	jr 3F
  86+ 99DA              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99DA              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99DA              ; ------------------------------
  89+ 99DA
  90+ 99DA CD 67 99     1 call NextScan
  91+ 99DD 22 CB 8B     	ld (Posicion_actual),hl
  92+ 99E0 10 DA            djnz 2B
  93+ 99E2 CD 71 94     3 call Genera_coordenadas
  94+ 99E5 C9           	ret
  95+ 99E6
  96+ 99E6              ; ******************************************************************************************************************************************************************************************
  97+ 99E6              ;
  98+ 99E6              ;   27/05/23
  99+ 99E6              ;
 100+ 99E6              ;	Mov_up
 101+ 99E6              ;
 102+ 99E6              ; 	Mueve el Sprite hacia arriba.
 103+ 99E6              ;
 104+ 99E6              ;
 105+ 99E6              Mov_up
 106+ 99E6
 107+ 99E6 CD 17 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 99E9              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 99E9 21 C8 8B     	ld hl,Ctrl_0
 110+ 99EC CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 99EE              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 99EE              ; 																		; _ en el caso de que no lo haya.
 113+ 99EE 3A E2 8B     	ld a,(Vel_up)
 114+ 99F1 47           	ld b,a
 115+ 99F2 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 99F5 CD 53 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 99F8 A7           	and a
 118+ 99F9 20 10        	jr nz,1F
 119+ 99FB
 120+ 99FB              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 99FB              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 99FB
 123+ 99FB 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 99FC FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 99FE 20 0B            jr nz,1F
 126+ 9A00 7D               ld a,l
 127+ 9A01 D6 20            sub $20
 128+ 9A03 30 06            jr nc,1F
 129+ 9A05 25               dec h
 130+ 9A06
 131+ 9A06              ; -----------------------------
 132+ 9A06 CD BA 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A09              ;	call Reinicio
 134+ 9A09              ; -----------------------------
 135+ 9A09
 136+ 9A09 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A0B CD 76 99     1 call PreviousScan
 138+ 9A0E 22 CB 8B     	ld (Posicion_actual),hl
 139+ 9A11 10 E2            djnz 3B
 140+ 9A13 CD 71 94     2 call Genera_coordenadas
 141+ 9A16 C9           	ret
 142+ 9A17
 143+ 9A17              ; -----------------------------
 144+ 9A17              ;
 145+ 9A17              ;	27/5/23
 146+ 9A17              ;
 147+ 9A17              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A17              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A17              ;
 150+ 9A17              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A17              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A17              ;
 153+ 9A17              ;	Modifica: A y (Puntero_objeto).
 154+ 9A17
 155+ 9A17 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A1A CB 47        	bit 0,a
 157+ 9A1C C8           	ret z
 158+ 9A1D CB 87        	res 0,a
 159+ 9A1F 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A22 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A25 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A28 C9           	ret
 163+ 9A29
 164+ 9A29              ; ******************************************************************************************************************************************************************************************
 165+ 9A29              ;
 166+ 9A29              ;	19/10/22
 167+ 9A29              ;
 168+ 9A29              ;	Mov_right.
 169+ 9A29              ;
 170+ 9A29              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A29              ;
 172+ 9A29
 173+ 9A29 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A2C CB 77        	bit 6,a
 175+ 9A2E 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A30
 177+ 9A30 CD 68 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A33 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A34
 180+ 9A34 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A37 CB E6        	set 4,(hl)
 182+ 9A39 18 52        	jr 8F
 183+ 9A3B
 184+ 9A3B 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A3E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A40              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A40              ; 																	; _ en el caso de que no lo haya.
 188+ 9A40 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A43 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A45 20 46        	jr nz,8F
 191+ 9A47
 192+ 9A47 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A4A A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A4B 28 40        	jr z,8F
 195+ 9A4D
 196+ 9A4D              ; ---------- ---------- ----------
 197+ 9A4D              ;
 198+ 9A4D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A4D
 200+ 9A4D 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A50 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A52 28 11        	jr z,1F
 203+ 9A54 38 06        	jr c,6F
 204+ 9A56 FE 04        	cp 4
 205+ 9A58 28 14        	jr z,7F
 206+ 9A5A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A5C
 208+ 9A5C              ; ---------- ---------- ----------
 209+ 9A5C              ;
 210+ 9A5C              ; Perfiles de velocidad
 211+ 9A5C              ;
 212+ 9A5C
 213+ 9A5C 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A5F FE FE        	cp $fe
 215+ 9A61 20 2A        	jr nz,8F
 216+ 9A63 18 10        	jr 3F
 217+ 9A65 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A68 FE FD        	cp $fd
 219+ 9A6A 20 21        	jr nz,8F
 220+ 9A6C 18 07        	jr 3F
 221+ 9A6E 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A71 FE FB        	cp $fb
 223+ 9A73 20 18        	jr nz,8F
 224+ 9A75
 225+ 9A75              ; ---------- ---------- ----------
 226+ 9A75
 227+ 9A75              3
 228+ 9A75 CD A8 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A78              ;	call Reinicio
 230+ 9A78
 231+ 9A78              ; ---------- ---------- ----------
 232+ 9A78              ;
 233+ 9A78              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A78
 235+ 9A78 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A7A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A7B CD 94 9A     	call DESPLZ_DER
 238+ 9A7E C1           	pop bc
 239+ 9A7F 10 F9        	djnz 5B
 240+ 9A81 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A84 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A85 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9A88 CD 71 94     	call Genera_coordenadas
 244+ 9A8B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9A8D
 246+ 9A8D              ; ---------- ---------- ----------
 247+ 9A8D
 248+ 9A8D 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9A90 CD 94 9A     	call DESPLZ_DER
 250+ 9A93 C9           2 ret
 251+ 9A94
 252+ 9A94              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9A94              ;
 254+ 9A94              ;	22/9/22
 255+ 9A94              ;
 256+ 9A94
 257+ 9A94 CD A3 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9A97 CD EF 9A         call modifica_parametros_1er_DESPLZ_2
 259+ 9A9A CD 18 9B         call Ciclo_completo
 260+ 9A9D 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AA0 CB FE        	set 7,(hl)
 262+ 9AA2 C9           	ret
 263+ 9AA3
 264+ 9AA3              ; ******************************************************************************************************************************************************************************************
 265+ 9AA3              ;	15/02/23
 266+ 9AA3              ;
 267+ 9AA3
 268+ 9AA3 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AA6 47           	ld b,a
 270+ 9AA7 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AAA 23           1 inc hl
 272+ 9AAB 23           	inc hl
 273+ 9AAC 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AAE 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AB1 CD 52 90     	call Extrae_address
 276+ 9AB4 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9AB7
 278+ 9AB7              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AB7
 280+ 9AB7              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AB7              ; Cuántos movimientos hemos hecho ??
 282+ 9AB7              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AB7
 284+ 9AB7 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9ABA EB           	ex de,hl
 286+ 9ABB A7           	and a
 287+ 9ABC ED 52        	sbc hl,de
 288+ 9ABE CB 3D        	srl l
 289+ 9AC0 3E 08        6 ld a,8
 290+ 9AC2 95           	sub l
 291+ 9AC3 30 1E        	jr nc,3F
 292+ 9AC5
 293+ 9AC5              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AC5              ; B="0".
 295+ 9AC5
 296+ 9AC5 04           4 inc b
 297+ 9AC6 3C           	inc a
 298+ 9AC7 20 FC        	jr nz,4B
 299+ 9AC9 78           	ld a,b
 300+ 9ACA 08           	ex af,af
 301+ 9ACB 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9ACE 23           5 inc hl
 303+ 9ACF 23           	inc hl
 304+ 9AD0 10 FC        	djnz 5B
 305+ 9AD2 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AD5 CD 52 90     	call Extrae_address
 307+ 9AD8 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9ADB
 309+ 9ADB              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9ADB              ; _(Posicion_actual).
 311+ 9ADB
 312+ 9ADB 21 CB 8B     	ld hl,Posicion_actual
 313+ 9ADE 34           	inc (hl)
 314+ 9ADF 08               ex af,af
 315+ 9AE0 6F           	ld l,a
 316+ 9AE1 18 DD        	jr 6B
 317+ 9AE3
 318+ 9AE3              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9AE3
 320+ 9AE3 47           3 ld b,a
 321+ 9AE4 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9AE7 23           2 inc hl
 323+ 9AE8 23           	inc hl
 324+ 9AE9 10 FC        	djnz 2B
 325+ 9AEB 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9AEE C9           8 ret
 327+ 9AEF
 328+ 9AEF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9AEF              ;
 330+ 9AEF              ;	24/7/22
 331+ 9AEF              ;
 332+ 9AEF              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9AEF              ;
 334+ 9AEF              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9AEF              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9AEF              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9AEF
 338+ 9AEF 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9AF2 A7           	and a
 340+ 9AF3 20 1F        	jr nz,1F
 341+ 9AF5 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9AF7 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9AFA
 344+ 9AFA 21 CA 8B     	ld hl,Columns
 345+ 9AFD 34           	inc (hl)
 346+ 9AFE 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9B01 E6 01        	and 1
 348+ 9B03 28 0F        	jr z,1F
 349+ 9B05 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B08 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B09 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9B0C CD 71 94     	call Genera_coordenadas
 353+ 9B0F CD 74 9C     	call Inc_CTRL_DESPLZ
 354+ 9B12 18 03        	jr 2F
 355+ 9B14 CD 74 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B17 C9           2 ret
 357+ 9B18
 358+ 9B18              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B18              ;
 360+ 9B18              ;	24/7/22
 361+ 9B18              ;
 362+ 9B18              ;	Ciclo_completo.
 363+ 9B18              ;
 364+ 9B18              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B18              ;
 366+ 9B18              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B18              ; 	Decrementamos (Columns).
 368+ 9B18              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B18              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B18
 371+ 9B18
 372+ 9B18 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B1B FE FF        	cp $ff
 374+ 9B1D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B1F E6 F0        	and $f0
 376+ 9B21 20 28        	jr nz,3F
 377+ 9B23
 378+ 9B23              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B23
 380+ 9B23 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B26 47           	ld b,a
 382+ 9B27 3E F8        	ld a,$f8
 383+ 9B29 80           	add b
 384+ 9B2A 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B2D 18 1C        	jr 3F
 386+ 9B2F 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B32 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B33 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B34 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B37 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B3A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B3C 20 0A        	jr nz,2F
 393+ 9B3E 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B41 23           	inc hl
 395+ 9B42 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B45 CD 71 94     	call Genera_coordenadas
 397+ 9B48
 398+ 9B48              ; Inicia el puntero de Sprite.
 399+ 9B48
 400+ 9B48 CD 67 90     2 call Inicia_puntero_objeto_der
 401+ 9B4B C9           3 ret
 402+ 9B4C
 403+ 9B4C              ; ******************************************************************************************************************************************************************************************
 404+ 9B4C              ;
 405+ 9B4C              ;	15/02/23
 406+ 9B4C              ;
 407+ 9B4C              ;	Mov_left.
 408+ 9B4C              ;
 409+ 9B4C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B4C              ;
 411+ 9B4C              Mov_left
 412+ 9B4C
 413+ 9B4C 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B4F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B51              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B51              ; 																	; _ en el caso de que no lo haya.
 417+ 9B51 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B54 CB 77        	bit 6,a
 419+ 9B56 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B58
 421+ 9B58 CD 6E 9C     	call Stop_Amadeus_left
 422+ 9B5B C8           	ret z
 423+ 9B5C 20 4A        	jr nz,8F
 424+ 9B5E
 425+ 9B5E 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B61 A7           	and a
 427+ 9B62 20 44        	jr nz,8F
 428+ 9B64
 429+ 9B64 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B67 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B68 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B6A
 433+ 9B6A              ; ---------- ---------- ----------
 434+ 9B6A
 435+ 9B6A 3A E0 8B     	ld a,(Vel_left)
 436+ 9B6D FE 02        	cp 2
 437+ 9B6F 28 0F        	jr z,1F
 438+ 9B71 38 04        	jr c,6F
 439+ 9B73 FE 04        	cp 4
 440+ 9B75 28 12        	jr z,7F
 441+ 9B77
 442+ 9B77              ; ---------- ---------- ----------
 443+ 9B77
 444+ 9B77 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B7A FE F8        	cp $f8
 446+ 9B7C 20 2A        	jr nz,8F
 447+ 9B7E 18 10        	jr 4F
 448+ 9B80 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9B83 FE F9        	cp $f9
 450+ 9B85 20 21        	jr nz,8F
 451+ 9B87 18 07        	jr 4F
 452+ 9B89 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9B8C FE FB        	cp $fb
 454+ 9B8E 20 18        	jr nz,8F
 455+ 9B90
 456+ 9B90              ; ---------- ---------- ----------
 457+ 9B90
 458+ 9B90              4
 459+ 9B90 CD 96 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9B93              ;	call Reinicio
 461+ 9B93
 462+ 9B93              ; ---------- ---------- ----------
 463+ 9B93
 464+ 9B93 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9B95 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9B96
 467+ 9B96              ;	ld hl,(Indice_Sprite_izq)
 468+ 9B96              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9B96
 470+ 9B96 CD AF 9B     	call DESPLZ_IZQ
 471+ 9B99 C1           	pop bc
 472+ 9B9A 10 F9        	djnz 5B
 473+ 9B9C 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9B9F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BA0 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9BA3 CD 71 94     	call Genera_coordenadas
 477+ 9BA6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BA8
 479+ 9BA8              ; ---------- ---------- ----------
 480+ 9BA8
 481+ 9BA8              ; Movemos, no hay recolocación.
 482+ 9BA8
 483+ 9BA8 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9BAB CD AF 9B     	call DESPLZ_IZQ
 485+ 9BAE C9           2 ret
 486+ 9BAF
 487+ 9BAF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BAF              ;
 489+ 9BAF              ;	22/9/22
 490+ 9BAF
 491+ 9BAF              DESPLZ_IZQ
 492+ 9BAF
 493+ 9BAF CD BE 9B     	call Desplaza_izquierda
 494+ 9BB2 CD 0A 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BB5 CD 32 9C     	call Ciclo_completo_2
 496+ 9BB8 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BBB CB BE        	res 7,(hl)
 498+ 9BBD C9           	ret
 499+ 9BBE
 500+ 9BBE              Desplaza_izquierda
 501+ 9BBE
 502+ 9BBE 3A E0 8B     	ld a,(Vel_left)
 503+ 9BC1 47           	ld b,a
 504+ 9BC2 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BC5 23           1 inc hl
 506+ 9BC6 23           	inc hl
 507+ 9BC7 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BC9 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BCC CD 52 90     	call Extrae_address
 510+ 9BCF 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BD2
 512+ 9BD2              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BD2
 514+ 9BD2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BD2              ; Cuántos movimientos hemos hecho ??
 516+ 9BD2              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BD2
 518+ 9BD2 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BD5 EB           	ex de,hl
 520+ 9BD6 A7           	and a
 521+ 9BD7 ED 52        	sbc hl,de
 522+ 9BD9 CB 3D        	srl l
 523+ 9BDB 3E 08        6 ld a,8
 524+ 9BDD 95           	sub l
 525+ 9BDE 30 1E        	jr nc,3F
 526+ 9BE0
 527+ 9BE0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BE0              ; B="0".
 529+ 9BE0
 530+ 9BE0 04           4 inc b
 531+ 9BE1 3C           	inc a
 532+ 9BE2 20 FC        	jr nz,4B
 533+ 9BE4 78           	ld a,b
 534+ 9BE5 08           	ex af,af
 535+ 9BE6 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9BE9 23           5 inc hl
 537+ 9BEA 23           	inc hl
 538+ 9BEB 10 FC        	djnz 5B
 539+ 9BED 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9BF0 CD 52 90     	call Extrae_address
 541+ 9BF3 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9BF6
 543+ 9BF6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9BF6              ; _(Posicion_actual).
 545+ 9BF6
 546+ 9BF6 21 CB 8B     	ld hl,Posicion_actual
 547+ 9BF9 35           	dec (hl)
 548+ 9BFA 08           	ex af,af
 549+ 9BFB 6F           	ld l,a
 550+ 9BFC 18 DD        	jr 6B
 551+ 9BFE
 552+ 9BFE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9BFE
 554+ 9BFE 47           3 ld b,a
 555+ 9BFF 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C02 23           2 inc hl
 557+ 9C03 23           	inc hl
 558+ 9C04 10 FC        	djnz 2B
 559+ 9C06 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C09 C9           8 ret
 561+ 9C0A
 562+ 9C0A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C0A              ;
 564+ 9C0A              ;	modifica_parametros_1er_DESPLZ
 565+ 9C0A              ;
 566+ 9C0A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C0A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C0A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C0A
 570+ 9C0A 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C0D A7           	and a
 572+ 9C0E 20 1E        	jr nz,1F
 573+ 9C10 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C11 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9C14 21 CA 8B     	ld hl,Columns
 576+ 9C17 34           	inc (hl)
 577+ 9C18 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C1B E6 01        	and 1
 579+ 9C1D 20 0F        	jr nz,1F
 580+ 9C1F 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C22 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C23 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C26 CD 71 94     	call Genera_coordenadas
 584+ 9C29 CD 85 9C     	call Dec_CTRL_DESPLZ
 585+ 9C2C 18 03        	jr 2F
 586+ 9C2E CD 85 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C31 C9           2 ret
 588+ 9C32
 589+ 9C32              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C32
 591+ 9C32 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C35 FE F7        	cp $f7
 593+ 9C37 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C39 30 2C        	jr nc,3F
 595+ 9C3B
 596+ 9C3B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C3B
 598+ 9C3B 06 00        	ld b,0
 599+ 9C3D 04           4 inc b
 600+ 9C3E 3C           	inc a
 601+ 9C3F FE F7        	cp $f7
 602+ 9C41 20 FA        	jr nz,4B
 603+ 9C43 3E FF        	ld a,$ff
 604+ 9C45 90           	sub b
 605+ 9C46 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C49 18 1C        	jr 3F
 607+ 9C4B
 608+ 9C4B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C4B
 610+ 9C4B 21 CA 8B     1 ld hl,Columns
 611+ 9C4E 35           	dec (hl)
 612+ 9C4F AF           	xor a
 613+ 9C50 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C53 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C56 E6 01        	and 1
 616+ 9C58 28 0A        	jr z,2F
 617+ 9C5A 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C5D 2B           	dec hl
 619+ 9C5E 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C61 CD 71 94     	call Genera_coordenadas
 621+ 9C64
 622+ 9C64              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C64
 624+ 9C64 CD 7A 90     2 call Inicia_puntero_objeto_izq
 625+ 9C67 C9           3 ret
 626+ 9C68
 627+ 9C68              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C68              ;
 629+ 9C68              ;	19/10/22
 630+ 9C68              ;
 631+ 9C68              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C68              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C68
 634+ 9C68 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C6B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C6D C9           	ret
 637+ 9C6E
 638+ 9C6E              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C6E              ;
 640+ 9C6E              ;	19/10/22
 641+ 9C6E              ;
 642+ 9C6E              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C6E              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C6E
 645+ 9C6E 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C71 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C73 C9           	ret
 648+ 9C74
 649+ 9C74              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C74              ;
 651+ 9C74              ;	24/7/22
 652+ 9C74              ;
 653+ 9C74              ;	Inc_CTRL_DESPLZ
 654+ 9C74              ;
 655+ 9C74              ;
 656+ 9C74              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C74
 658+ 9C74 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C77 3A E1 8B     	ld a,(Vel_right)
 660+ 9C7A A7           	and a
 661+ 9C7B 28 06        	jr z,1F
 662+ 9C7D 47           	ld b,a
 663+ 9C7E 34           3 inc (hl)
 664+ 9C7F 10 FD        	djnz 3B
 665+ 9C81 18 01        	jr 2F
 666+ 9C83 34           1 inc (hl)
 667+ 9C84 C9           2 ret
 668+ 9C85
 669+ 9C85              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C85              ;
 671+ 9C85              ;	5/2/23
 672+ 9C85              ;
 673+ 9C85              ;	Dec_CTRL_DESPLZ
 674+ 9C85              ;
 675+ 9C85              ;
 676+ 9C85              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C85
 678+ 9C85 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9C88 3A E0 8B     	ld a,(Vel_left)
 680+ 9C8B A7           	and a
 681+ 9C8C 28 06        	jr z,1F
 682+ 9C8E 47           	ld b,a
 683+ 9C8F 35           3 dec (hl)
 684+ 9C90 10 FD        	djnz 3B
 685+ 9C92 18 01        	jr 2F
 686+ 9C94 35           1 dec (hl)
 687+ 9C95 C9           2 ret
 688+ 9C96
 689+ 9C96              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9C96
 691+ 9C96 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9C99 01 1F 00     	ld bc,31
 693+ 9C9C A7           	and a
 694+ 9C9D ED 4A        	adc hl,bc
 695+ 9C9F 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9CA2 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CA5 CB C6        	set 0,(hl)
 698+ 9CA7 C9           	ret
 699+ 9CA8
 700+ 9CA8              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CA8
 702+ 9CA8 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CAB 01 1F 00     	ld bc,31
 704+ 9CAE A7           	and a
 705+ 9CAF ED 42        	sbc hl,bc
 706+ 9CB1 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CB4 21 C8 8B     	ld hl,Ctrl_0
 708+ 9CB7 CB CE        	set 1,(hl)
 709+ 9CB9 C9           	ret
 710+ 9CBA
 711+ 9CBA              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CBA
 713+ 9CBA 24           Reaparece_abajo inc h
 714+ 9CBB 01 E0 17     	ld bc,$17e0
 715+ 9CBE A7           	and a
 716+ 9CBF ED 4A        	adc hl,bc
 717+ 9CC1 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CC4 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CC7 CB D6        	set 2,(hl)
 720+ 9CC9 C9           	ret
 721+ 9CCA
 722+ 9CCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CCA
 724+ 9CCA 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CCD A7           	and a
 726+ 9CCE ED 42        	sbc hl,bc
 727+ 9CD0 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CD3 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CD6 CB DE        	set 3,(hl)
 730+ 9CD8 C9           	ret
 731+ 9CD9
 732+ 9CD9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CD9              ;
 734+ 9CD9              ;	15/07/23
 735+ 9CD9
 736+ 9CD9              Reinicio
 737+ 9CD9
 738+ 9CD9              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CD9
 740+ 9CD9 AF           	xor a
 741+ 9CDA 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CDD CD FB 9C     	call Limpia_contenido_hl
 743+ 9CE0
 744+ 9CE0 21 CB 8B     	ld hl,Posicion_actual
 745+ 9CE3 CD FB 9C     	call Limpia_contenido_hl
 746+ 9CE6
 747+ 9CE6 CD 53 92     	call Inicializa_Puntero_indice_mov
 748+ 9CE9 CD FA 9D     	call Inicia_Puntero_mov
 749+ 9CEC
 750+ 9CEC 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9CEF 06 05        	ld b,5
 752+ 9CF1 77           1 ld (hl),a
 753+ 9CF2 23           	inc hl
 754+ 9CF3 10 FC        	djnz 1B
 755+ 9CF5
 756+ 9CF5 21 C7 8B     	ld hl,Ctrl_2
 757+ 9CF8 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9CFA
 759+ 9CFA C9           	ret
 760+ 9CFB
 761+ 9CFB 77           Limpia_contenido_hl	ld (hl),a
 762+ 9CFC 23           	inc hl
 763+ 9CFD 77           	ld (hl),a
 764+ 9CFE C9           	ret
 765+ 9CFF
 766+ 9CFF              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9CFF              ;
 768+ 9CFF              ;	18/6/24
 769+ 9CFF              ;
 770+ 9CFF
 771+ 9CFF              Amadeus_a_izquierda
 772+ 9CFF
 773+ 9CFF              ;	Actualiza contador de movimientos.
 774+ 9CFF
 775+ 9CFF 21 79 89     	ld hl,Comm_Amadeus
 776+ 9D02 35           	dec (hl)
 777+ 9D03 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D05
 779+ 9D05 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D08 2B           	dec hl
 781+ 9D09 2B           	dec hl
 782+ 9D0A 2B           	dec hl
 783+ 9D0B 2B           	dec hl
 784+ 9D0C 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D0F
 786+ 9D0F 21 2E 8C     	ld hl,Ctrl_3
 787+ 9D12 CB EE        	set 5,(hl)
 788+ 9D14
 789+ 9D14 C9           	ret
 790+ 9D15
 791+ 9D15 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D16 C9           	ret
 793+ 9D17
 794+ 9D17
 795+ 9D17              Amadeus_a_derecha
 796+ 9D17
 797+ 9D17              ;	Actualiza contador de movimientos.
 798+ 9D17
 799+ 9D17 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D1A 34           	inc (hl)
 801+ 9D1B 3E 7A        	ld a,$7a
 802+ 9D1D BE           	cp (hl)
 803+ 9D1E 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D20
 805+ 9D20 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D23 23           	inc hl
 807+ 9D24 23           	inc hl
 808+ 9D25 23           	inc hl
 809+ 9D26 23           	inc hl
 810+ 9D27 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D2A
 812+ 9D2A 21 2E 8C     	ld hl,Ctrl_3
 813+ 9D2D CB EE        	set 5,(hl)
 814+ 9D2F C9           	ret
 815+ 9D30
 816+ 9D30 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D31 C9           	ret
# file closed: Direcciones.asm
2270  9D32              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D32              ; ----- ----- ----- ----- -----
   2+ 9D32              ;
   3+ 9D32              ;   28/12/23
   4+ 9D32
   5+ 9D32              Movimiento
   6+ 9D32
   7+ 9D32              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D32
   9+ 9D32 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D35 CB 57            bit 2,a
  11+ 9D37 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D39
  13+ 9D39 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D3C 7E               ld a,(hl)
  15+ 9D3D
  16+ 9D3D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D3D
  18+ 9D3D              Inicia_desplazamiento.
  19+ 9D3D
  20+ 9D3D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D3D
  22+ 9D3D CD 30 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D40
  24+ 9D40              ; Iniciamos (Repetimos_mov).
  25+ 9D40
  26+ 9D40 7E               ld a,(hl)
  27+ 9D41 E6 0F            and $0f
  28+ 9D43 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D46 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D49
  31+ 9D49              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D49
  33+ 9D49 23               inc hl
  34+ 9D4A 7E               ld a,(hl)
  35+ 9D4B 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D4E 2B               dec hl
  37+ 9D4F
  38+ 9D4F 21 C7 8B         ld hl,Ctrl_2
  39+ 9D52 CB D6            set 2,(hl)
  40+ 9D54
  41+ 9D54              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D54              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D54
  44+ 9D54              Desplazamiento_iniciado
  45+ 9D54
  46+ 9D54 CD 04 9E         call Aplica_desplazamiento
  47+ 9D57
  48+ 9D57              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D57
  50+ 9D57 3A 2E 8C         ld a,(Ctrl_3)
  51+ 9D5A CB 4F            bit 1,a
  52+ 9D5C C0               ret nz
  53+ 9D5D
  54+ 9D5D 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D60 35               dec (hl)
  56+ 9D61 C0               ret nz
  57+ 9D62
  58+ 9D62              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D62              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D62              ; Analiza (Cola_de_desplazamiento).
  61+ 9D62
  62+ 9D62 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D65 A7               and a
  64+ 9D66 CC 59 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D69 28 30            jr z,Reinicia_el_movimiento
  66+ 9D6B
  67+ 9D6B FE FF            cp $ff
  68+ 9D6D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D6F
  70+ 9D6F FE FE            cp $fe
  71+ 9D71 CC DE 9D         call z,Fijamos_bucle
  72+ 9D74 28 25            jr z,Reinicia_el_movimiento
  73+ 9D76
  74+ 9D76 FE FD            cp $fd
  75+ 9D78 20 11            jr nz,1F
  76+ 9D7A
  77+ 9D7A              ; ---
  78+ 9D7A              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D7A
  80+ 9D7A 3A C7 8B         ld a,(Ctrl_2)
  81+ 9D7D CB 5F            bit 3,a
  82+ 9D7F 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D81
  84+ 9D81              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D81
  86+ 9D81 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D84 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D86
  89+ 9D86 CD EF 9D         call Inicia_Repetimos_movimiento
  90+ 9D89 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9D8B              ; ---
  92+ 9D8B
  93+ 9D8B FE 01        1 cp 1
  94+ 9D8D CA C8 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9D90
  96+ 9D90 3D               dec a
  97+ 9D91 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9D94
  99+ 9D94 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9D97 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9D9A              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9D9A C9               ret
 103+ 9D9B
 104+ 9D9B              Reinicia_el_movimiento
 105+ 9D9B
 106+ 9D9B 3A C7 8B         ld a,(Ctrl_2)
 107+ 9D9E CB 5F            bit 3,a
 108+ 9DA0 28 1B            jr z,2F
 109+ 9DA2
 110+ 9DA2              ; (Cola_de_desplazamiento)="254".
 111+ 9DA2
 112+ 9DA2 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DA5 35               dec (hl)
 114+ 9DA6 20 15            jr nz,2F
 115+ 9DA8
 116+ 9DA8              ; Fin de las repeticiones del último movimiento.
 117+ 9DA8
 118+ 9DA8 21 C7 8B         ld hl,Ctrl_2
 119+ 9DAB CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DAD
 121+ 9DAD 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9DB0 23               inc hl
 123+ 9DB1 23               inc hl
 124+ 9DB2 23               inc hl
 125+ 9DB3 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DB6              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DB6 7E               ld a,(hl)
 128+ 9DB7 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DBA
 130+ 9DBA C3 62 9D         jp Cola
 131+ 9DBD
 132+ 9DBD CD FA 9D     2 call Inicia_Puntero_mov
 133+ 9DC0
 134+ 9DC0 21 C7 8B         ld hl,Ctrl_2
 135+ 9DC3 CB 96            res 2,(hl)
 136+ 9DC5
 137+ 9DC5 C3 32 9D         jp Movimiento
 138+ 9DC8
 139+ 9DC8              Siguiente_desplazamiento
 140+ 9DC8
 141+ 9DC8              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DC8              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DC8
 144+ 9DC8 21 C7 8B         ld hl,Ctrl_2
 145+ 9DCB CB 96            res 2,(hl)
 146+ 9DCD
 147+ 9DCD 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DD0 23               inc hl
 149+ 9DD1 23               inc hl
 150+ 9DD2 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DD5
 152+ 9DD5 7E               ld a,(hl)
 153+ 9DD6 A7               and a
 154+ 9DD7 CC 59 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DDA CA 9B 9D         jp z,Reinicia_el_movimiento
 156+ 9DDD
 157+ 9DDD C9               ret
 158+ 9DDE
 159+ 9DDE              ; Subrutinas -----------------------------------------
 160+ 9DDE              ; ---------- --------- --------- ---------- ----------
 161+ 9DDE              ;
 162+ 9DDE              ;   24/07/23
 163+ 9DDE              ;
 164+ 9DDE              ;   Fijamos_bucle
 165+ 9DDE              ;
 166+ 9DDE              ;
 167+ 9DDE
 168+ 9DDE              Fijamos_bucle
 169+ 9DDE
 170+ 9DDE 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9DE1 3C               inc a
 172+ 9DE2 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9DE5
 174+ 9DE5 CD 59 9E         call Incrementa_Puntero_indice_mov
 175+ 9DE8 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9DEB 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9DEE C9               ret
 178+ 9DEF
 179+ 9DEF              ; ---------- --------- --------- ---------- ----------
 180+ 9DEF              ;
 181+ 9DEF              ;   07/7/23
 182+ 9DEF              ;
 183+ 9DEF              ;   Inicia_Repetimos_movimiento
 184+ 9DEF              ;
 185+ 9DEF              ;
 186+ 9DEF
 187+ 9DEF              Inicia_Repetimos_movimiento
 188+ 9DEF
 189+ 9DEF              ; Iniciamos (Repetimos_movimiento).
 190+ 9DEF
 191+ 9DEF DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9DF3 DD 7E 02         ld a,(ix+2)
 193+ 9DF6 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9DF9
 195+ 9DF9 C9               ret
 196+ 9DFA
 197+ 9DFA              ; ---------- --------- --------- ---------- ----------
 198+ 9DFA              ;
 199+ 9DFA              ;   26/6/23
 200+ 9DFA              ;
 201+ 9DFA              ;   Inicia_Puntero_mov
 202+ 9DFA              ;
 203+ 9DFA              ;
 204+ 9DFA
 205+ 9DFA 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9DFD CD 52 90         call Extrae_address
 207+ 9E00 22 EE 8B         ld (Puntero_mov),hl
 208+ 9E03 C9               ret
 209+ 9E04
 210+ 9E04              ; ---------- --------- --------- ---------- ----------
 211+ 9E04              ;
 212+ 9E04              ;   27/06/23
 213+ 9E04              ;
 214+ 9E04              ;   Aplica_movimiento.
 215+ 9E04
 216+ 9E04              Aplica_desplazamiento
 217+ 9E04
 218+ 9E04              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E04
 220+ 9E04 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9E07
 222+ 9E07 7E               ld a,(hl)
 223+ 9E08 E6 F0            and $f0
 224+ 9E0A C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E0B
 226+ 9E0B CB 7E            bit 7,(hl)
 227+ 9E0D 28 03            jr z,1F
 228+ 9E0F CD E6 99         call Mov_up
 229+ 9E12 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9E15 CB 76            bit 6,(hl)
 231+ 9E17 28 03            jr z,2F
 232+ 9E19 CD AD 99         call Mov_down
 233+ 9E1C
 234+ 9E1C              ; Se ha aplicado reinicio ???
 235+ 9E1C              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E1C
 237+ 9E1C              ;    ld a,(Ctrl_3)
 238+ 9E1C              ;    bit 1,a
 239+ 9E1C              ;    ret nz
 240+ 9E1C
 241+ 9E1C 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E1F CB 6E            bit 5,(hl)
 243+ 9E21 28 03            jr z,3F
 244+ 9E23 CD 4C 9B         call Mov_left
 245+ 9E26 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E29 CB 66            bit 4,(hl)
 247+ 9E2B C8               ret z
 248+ 9E2C CD 29 9A         call Mov_right
 249+ 9E2F C9               ret
 250+ 9E30
 251+ 9E30              ; ---------- --------- --------- ---------- ----------
 252+ 9E30              ;
 253+ 9E30              ;   26/06/23
 254+ 9E30              ;
 255+ 9E30              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E30
 257+ 9E30              Ajusta_velocidad_desplazamiento
 258+ 9E30
 259+ 9E30              ; 1er byte de la cadena de movimiento.
 260+ 9E30              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E30
 262+ 9E30 CD 4E 9E         call Extrae_nibble_alto
 263+ 9E33
 264+ 9E33 32 E2 8B         ld (Vel_up),a
 265+ 9E36 79               ld a,c
 266+ 9E37 E6 0F            and $0f
 267+ 9E39 32 E3 8B         ld (Vel_down),a
 268+ 9E3C
 269+ 9E3C              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E3C              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E3C
 272+ 9E3C 23               inc hl
 273+ 9E3D CD 4E 9E         call Extrae_nibble_alto
 274+ 9E40
 275+ 9E40 32 E0 8B         ld (Vel_left),a
 276+ 9E43 79               ld a,c
 277+ 9E44 E6 0F            and $0f
 278+ 9E46 32 E1 8B         ld (Vel_right),a
 279+ 9E49
 280+ 9E49              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E49
 282+ 9E49 23               inc hl
 283+ 9E4A 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E4D C9               ret
 285+ 9E4E
 286+ 9E4E 06 04        Extrae_nibble_alto ld b,4
 287+ 9E50 7E               ld a,(hl)
 288+ 9E51 4F               ld c,a
 289+ 9E52 E6 F0            and $f0
 290+ 9E54 CB 3F        1 srl a
 291+ 9E56 10 FC            djnz 1B
 292+ 9E58 C9               ret
 293+ 9E59
 294+ 9E59              ; ---------- --------- --------- ---------- ----------
 295+ 9E59              ;
 296+ 9E59              ;   5/7/23
 297+ 9E59              ;
 298+ 9E59              ;   Incrementa_Puntero_indice_mov
 299+ 9E59
 300+ 9E59              Incrementa_Puntero_indice_mov
 301+ 9E59
 302+ 9E59 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E5C 34               inc (hl)
 304+ 9E5D
 305+ 9E5D 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E60 01 02 00         ld bc,2
 307+ 9E63 A7               and a
 308+ 9E64 09               add hl,bc
 309+ 9E65 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E68
 311+ 9E68 7E               ld a,(hl)
 312+ 9E69 A7               and a
 313+ 9E6A
 314+ 9E6A              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E6A
 316+ 9E6A              ;    jr z,$
 317+ 9E6A
 318+ 9E6A              ;! Reinicia el Patrón de movimiento.
 319+ 9E6A
 320+ 9E6A CC 6F 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E6D
 322+ 9E6D AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E6E
 324+ 9E6E C9               ret
 325+ 9E6F
 326+ 9E6F              ; ---------- --------- --------- ---------- ----------
 327+ 9E6F              ;
 328+ 9E6F              ;   15/01/24
 329+ 9E6F              ;
 330+ 9E6F              ;   Inicializa_Puntero_indice_mov
 331+ 9E6F
 332+ 9E6F              Inicializa_Puntero_indice_mov_2
 333+ 9E6F
 334+ 9E6F              ; Existe etiqueta de bucle principal???
 335+ 9E6F
 336+ 9E6F 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E72 24               inc h
 338+ 9E73 25               dec h
 339+ 9E74 28 05            jr z,2F
 340+ 9E76
 341+ 9E76 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E79 18 14            jr 3F
 343+ 9E7B
 344+ 9E7B              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E7B
 346+ 9E7B 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9E7E 47               ld b,a
 348+ 9E7F
 349+ 9E7F 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9E82 2B           1 dec hl
 351+ 9E83 2B               dec hl
 352+ 9E84 10 FC            djnz 1B
 353+ 9E86 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9E89
 355+ 9E89 AF               xor a
 356+ 9E8A 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9E8D 18 06            jr 4F
 358+ 9E8F
 359+ 9E8F 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9E92 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9E95 C9           4 ret
 362+ 9E96
 363+ 9E96              ; ----------------------------------------------------------------------
 364+ 9E96              ;
 365+ 9E96              ;   30/01/24
 366+ 9E96              ;
 367+ 9E96              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9E96
 369+ 9E96 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9E99 CD EE 93         call Calcula_salto_en_BC
 371+ 9E9C 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9E9F A7               and a
 373+ 9EA0 ED 4A            adc hl,bc
 374+ 9EA2 C9               ret
 375+ 9EA3
 376+ 9EA3              ; ----------------------------------------------------------------------
 377+ 9EA3              ;
 378+ 9EA3              ;   30/01/24
 379+ 9EA3              ;
 380+ 9EA3              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EA3              ;
 382+ 9EA3              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EA3
 384+ 9EA3 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EA4 23               inc hl
 386+ 9EA5 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EA6 69               ld l,c
 388+ 9EA7 60               ld h,b
 389+ 9EA8 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EAB C9               ret
 391+ 9EAC
# file closed: Movimiento.asm
2271  9EAC              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EAC              ; --------------------------------------------------------------------------------------
   2+ 9EAC              ;
   3+ 9EAC              ;   23/08/24
   4+ 9EAC              ;
   5+ 9EAC
   6+ 9EAC              Limpia_album_de_pintado_disparos
   7+ 9EAC
   8+ 9EAC 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
   9+ 9EAF A7               and a
  10+ 9EB0 C8               ret z                                                               ; Salimos si no hay ningún disparo generado.
  11+ 9EB1
  12+ 9EB1 F3               di
  13+ 9EB2 18 FE            jr $
  14+ 9EB4 FB               ei
  15+ 9EB5
  16+ 9EB5 C9               ret
  17+ 9EB6
  18+ 9EB6              ; --------------------------------------------------------------------------------------
  19+ 9EB6              ;
  20+ 9EB6              ;   22/08/24
  21+ 9EB6              ;
  22+ 9EB6
  23+ 9EB6              Mueve_Disparos
  24+ 9EB6
  25+ 9EB6              ;    Exclusiones:
  26+ 9EB6
  27+ 9EB6 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  28+ 9EB9 A7               and a
  29+ 9EBA 28 16            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
  30+ 9EBC
  31+ 9EBC              ; .........................
  32+ 9EBC
  33+ 9EBC              ; Nos situamos en el puntero_de_impresión de la caja.
  34+ 9EBC
  35+ 9EBC 21 26 89         ld hl,Disparo_1A+3
  36+ 9EBF 34               inc (hl)
  37+ 9EC0 35               dec (hl)
  38+ 9EC1 28 04            jr z,1F
  39+ 9EC3
  40+ 9EC3 2B               dec hl
  41+ 9EC4 CD EE 9E         call Mueve_disparo_Amadeus
  42+ 9EC7
  43+ 9EC7 21 2B 89     1 ld hl,Disparo_2A+3
  44+ 9ECA 34               inc (hl)
  45+ 9ECB 35               dec (hl)
  46+ 9ECC 28 04            jr z,2F
  47+ 9ECE
  48+ 9ECE 2B               dec hl
  49+ 9ECF CD EE 9E         call Mueve_disparo_Amadeus
  50+ 9ED2
  51+ 9ED2              ; Disparos de entidades.
  52+ 9ED2
  53+ 9ED2 3A 1D 8C     2 ld a,(Numero_de_disparos_de_entidades)
  54+ 9ED5 A7               and a
  55+ 9ED6 C8               ret z
  56+ 9ED7
  57+ 9ED7 06 07            ld b,7                                                               ; Contador de disparos.
  58+ 9ED9 21 2D 89         ld hl,Indice_de_disparos_entidades
  59+ 9EDC
  60+ 9EDC CD 52 90     4 call Extrae_address
  61+ 9EDF 13               inc de
  62+ 9EE0 13               inc de
  63+ 9EE1 ED 53 1F 8C      ld (Puntero_rancio_disparos_album),de
  64+ 9EE5
  65+ 9EE5 23               inc hl
  66+ 9EE6
  67+ 9EE6 34               inc (hl)                                                           ; Dispone de Puntero_objeto ???
  68+ 9EE7 35               dec (hl)
  69+ 9EE8 28 00            jr z,3F
  70+ 9EEA
  71+ 9EEA EB           3 ex de,hl
  72+ 9EEB 10 EF            djnz 4B
  73+ 9EED
  74+ 9EED C9               ret
  75+ 9EEE
  76+ 9EEE              ; ----------------------
  77+ 9EEE              ;
  78+ 9EEE              ;
  79+ 9EEE
  80+ 9EEE              Mueve_disparo_Amadeus
  81+ 9EEE
  82+ 9EEE CD 52 90         call Extrae_address                                               ; Puntero_de_impresión del disparo en HL.
  83+ 9EF1
  84+ 9EF1 CD 76 99         call PreviousScan
  85+ 9EF4 CD 76 99         call PreviousScan
  86+ 9EF7 CD 76 99         call PreviousScan
  87+ 9EFA CD 76 99         call PreviousScan
  88+ 9EFD
  89+ 9EFD              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
  90+ 9EFD
  91+ 9EFD 7C               ld a,h
  92+ 9EFE D6 40            sub $40
  93+ 9F00 38 05            jr c,Elimina_disparo
  94+ 9F02
  95+ 9F02               ; Introduce nuevo puntero_de_impresión en la caja.
  96+ 9F02
  97+ 9F02 EB               ex de,hl
  98+ 9F03
  99+ 9F03 73               ld (hl),e
 100+ 9F04 23               inc hl
 101+ 9F05 72               ld (hl),d
 102+ 9F06
 103+ 9F06 C9               ret
 104+ 9F07
 105+ 9F07              ; ----------------------
 106+ 9F07              ;
 107+ 9F07              ;   23/08/24
 108+ 9F07
 109+ 9F07              Elimina_disparo
 110+ 9F07
 111+ 9F07 EB               ex de,hl
 112+ 9F08
 113+ 9F08              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 114+ 9F08              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 115+ 9F08
 116+ 9F08              ;   Disparo_1A defw 0									; Puntero objeto.
 117+ 9F08              ;   	defw 0											; Puntero de impresión.
 118+ 9F08              ;   	db 0											; Impacto.
 119+ 9F08
 120+ 9F08 2B               dec hl
 121+ 9F09 2B               dec hl
 122+ 9F0A
 123+ 9F0A AF               xor a
 124+ 9F0B 77               ld (hl),a
 125+ 9F0C 23               inc hl
 126+ 9F0D 77               ld (hl),a                                           ; Puntero_objeto borrado.
 127+ 9F0E 23               inc hl
 128+ 9F0F 77               ld (hl),a
 129+ 9F10 23               inc hl
 130+ 9F11 77               ld (hl),a                                           ; Puntero_de_impresion borrado.
 131+ 9F12 23               inc hl
 132+ 9F13 77               ld (hl),a                                           ; Impacto borrado.
 133+ 9F14
 134+ 9F14 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 135+ 9F17 35               dec (hl)
 136+ 9F18
 137+ 9F18 3A 1E 8C         ld a,(Disparo_Amadeus)
 138+ 9F1B F6 01            or 1
 139+ 9F1D 32 1E 8C         ld (Disparo_Amadeus),a
 140+ 9F20
 141+ 9F20 21 30 8C         ld hl,Ctrl_5
 142+ 9F23 CB C6            set 0,(hl)
 143+ 9F25
 144+ 9F25
 145+ 9F25 C9               ret
 146+ 9F26
 147+ 9F26              ; --------------------------------------------------------------------------------------
 148+ 9F26              ;
 149+ 9F26              ;   21/8/24
 150+ 9F26              ;
 151+ 9F26
 152+ 9F26              Pinta_disparos
 153+ 9F26
 154+ 9F26              ;    Exclusiones:
 155+ 9F26
 156+ 9F26 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 157+ 9F29 A7               and a
 158+ 9F2A C8               ret z                                                             ; Salimos si no hay ningún disparo generado.
 159+ 9F2B
 160+ 9F2B ED 73 08 8C      ld (Stack),sp
 161+ 9F2F 06 02            ld b,2
 162+ 9F31
 163+ 9F31 ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 164+ 9F35
 165+ 9F35 D1           2 pop de
 166+ 9F36
 167+ 9F36 14               inc d
 168+ 9F37 15               dec d
 169+ 9F38
 170+ 9F38 28 1B            jr z,1F
 171+ 9F3A
 172+ 9F3A              Imprime_scanlines_de_disparo
 173+ 9F3A
 174+ 9F3A E1               pop hl
 175+ 9F3B
 176+ 9F3B              ; Puntero objeto en DE.
 177+ 9F3B              ; Puntero_de_impresión en HL.
 178+ 9F3B
 179+ 9F3B              ; 1er scanline.
 180+ 9F3B
 181+ 9F3B 1A               ld a,(de)
 182+ 9F3C AE               xor (hl)
 183+ 9F3D 77               ld (hl),a
 184+ 9F3E
 185+ 9F3E 13               inc de
 186+ 9F3F 2C               inc l
 187+ 9F40
 188+ 9F40 1A               ld a,(de)
 189+ 9F41 AE               xor (hl)
 190+ 9F42 77               ld (hl),a
 191+ 9F43
 192+ 9F43              ; 2º scanline.
 193+ 9F43
 194+ 9F43 E1               pop hl
 195+ 9F44 1B               dec de
 196+ 9F45
 197+ 9F45 1A               ld a,(de)
 198+ 9F46 AE               xor (hl)
 199+ 9F47 77               ld (hl),a
 200+ 9F48
 201+ 9F48 13               inc de
 202+ 9F49 2C               inc l
 203+ 9F4A
 204+ 9F4A 1A               ld a,(de)
 205+ 9F4B AE               xor (hl)
 206+ 9F4C 77               ld (hl),a
 207+ 9F4D
 208+ 9F4D              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 209+ 9F4D
 210+ 9F4D 18 E6            jr 2B
 211+ 9F4F
 212+ 9F4F ED 7B 14 8C  3 ld sp,(Album_de_pintado_disparos)
 213+ 9F53 18 E0            jr 2B
 214+ 9F55
 215+ 9F55 10 F8        1 djnz 3B
 216+ 9F57 ED 7B 08 8C      ld sp,(Stack)
 217+ 9F5B C9               ret
 218+ 9F5C
 219+ 9F5C              ; --------------------------------------------------------------------------------------
 220+ 9F5C              ;
 221+ 9F5C              ;   21/8/24
 222+ 9F5C              ;
 223+ 9F5C              ;   Modifica: HL y DE.
 224+ 9F5C
 225+ 9F5C
 226+ 9F5C              Genera_datos_de_impresion_disparos_Amadeus
 227+ 9F5C
 228+ 9F5C              ;   Exclusiones:
 229+ 9F5C
 230+ 9F5C 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 231+ 9F5F A7               and a
 232+ 9F60 C8               ret z                                                     ; Salimos si no hay ningún disparo generado.
 233+ 9F61
 234+ 9F61 ED 73 08 8C      ld (Stack),sp
 235+ 9F65 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 236+ 9F68
 237+ 9F68 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 238+ 9F6B ED 72            sbc hl,sp                                                 ; Última caja ???
 239+ 9F6D 28 26            jr z,Salida
 240+ 9F6F
 241+ 9F6F D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 242+ 9F70
 243+ 9F70 14               inc d
 244+ 9F71 15               dec d
 245+ 9F72
 246+ 9F72 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
 247+ 9F74
 248+ 9F74              Siguiente_disparo_Amadeus
 249+ 9F74
 250+ 9F74 D1               pop de
 251+ 9F75 33               inc sp
 252+ 9F76 18 F0            jr 1B
 253+ 9F78
 254+ 9F78              Genera_scanlines_de_disparo_Amadeus
 255+ 9F78
 256+ 9F78 E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 257+ 9F79              ;                                                             ; Puntero_de_impresión del disparo en HL.
 258+ 9F79 33               inc sp
 259+ 9F7A ED 73 1F 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 260+ 9F7E
 261+ 9F7E ED 7B 18 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 262+ 9F82
 263+ 9F82 C1               pop bc
 264+ 9F83 C1               pop bc
 265+ 9F84 C1               pop bc
 266+ 9F85
 267+ 9F85 ED 73 18 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 268+ 9F89
 269+ 9F89 E5               push hl                                                   ; Sube 2º scanline al álbum.
 270+ 9F8A CD 76 99         call PreviousScan
 271+ 9F8D E5               push hl                                                   ; Sube 1er scanline al álbum.
 272+ 9F8E D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 273+ 9F8F
 274+ 9F8F ED 7B 1F 8C      ld sp,(Puntero_rancio_disparos_album)
 275+ 9F93 18 D3            jr 1B
 276+ 9F95
 277+ 9F95 ED 7B 08 8C  Salida ld sp,(Stack)
 278+ 9F99 C9               ret
 279+ 9F9A
 280+ 9F9A              ; --------------------------------------------------------------------------------------
 281+ 9F9A              ;
 282+ 9F9A              ;   17/08/24
 283+ 9F9A              ;
 284+ 9F9A
 285+ 9F9A              Genera_disparo_Amadeus
 286+ 9F9A
 287+ 9F9A              ;   Exclusiones.
 288+ 9F9A
 289+ 9F9A 3A 1E 8C         ld a,(Disparo_Amadeus)
 290+ 9F9D A7               and a
 291+ 9F9E C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
 292+ 9F9F
 293+ 9F9F              ;! Provisionalmente sólo 1 disparo !!!!!!
 294+ 9F9F 3D               dec a
 295+ 9FA0 32 1E 8C         ld (Disparo_Amadeus),a
 296+ 9FA3
 297+ 9FA3              ;   Inc nº de disparos de Amadeus.
 298+ 9FA3
 299+ 9FA3 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 300+ 9FA6 34               inc (hl)
 301+ 9FA7
 302+ 9FA7              ; ----- ----- ----- -----
 303+ 9FA7
 304+ 9FA7              Define_puntero_objeto_disparo
 305+ 9FA7
 306+ 9FA7              ;   Inicializamos contador.
 307+ 9FA7
 308+ 9FA7 06 00            ld b,0
 309+ 9FA9 2A 75 89         ld hl,(p.imp.amadeus)
 310+ 9FAC 2C               inc l
 311+ 9FAD
 312+ 9FAD 3E 80            ld a,$80
 313+ 9FAF BE               cp (hl)
 314+ 9FB0 28 0D            jr z,1F
 315+ 9FB2
 316+ 9FB2 04               inc b
 317+ 9FB3 3E 60            ld a,$60
 318+ 9FB5 BE               cp (hl)
 319+ 9FB6 28 07            jr z,1F
 320+ 9FB8
 321+ 9FB8 04               inc b
 322+ 9FB9 3E 18            ld a,$18
 323+ 9FBB BE               cp (hl)
 324+ 9FBC 28 01            jr z,1F
 325+ 9FBE
 326+ 9FBE 04               inc b
 327+ 9FBF
 328+ 9FBF              ;   Calcula el Puntero_de_impresión del disparo.
 329+ 9FBF
 330+ 9FBF              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 331+ 9FBF
 332+ 9FBF CD 76 99     1 call PreviousScan
 333+ 9FC2
 334+ 9FC2 78               ld a,b
 335+ 9FC3 CB 3F            srl a
 336+ 9FC5 28 03            jr z,4F
 337+ 9FC7
 338+ 9FC7              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 339+ 9FC7 E5               push hl
 340+ 9FC8 18 02            jr 5F
 341+ 9FCA 2D           4 dec l
 342+ 9FCB E5               push hl
 343+ 9FCC              ; ---
 344+ 9FCC
 345+ 9FCC              ;   Calcula el Puntero_objeto del disparo.
 346+ 9FCC
 347+ 9FCC 21 70 83     5 ld hl,Indice_disparo
 348+ 9FCF 04               inc b
 349+ 9FD0 05               dec b
 350+ 9FD1 28 04            jr z,2F
 351+ 9FD3
 352+ 9FD3              ;   Nos desplazamos por el índice de disparos.
 353+ 9FD3
 354+ 9FD3 2C           3 inc l
 355+ 9FD4 2C               inc l
 356+ 9FD5 10 FC            djnz 3B
 357+ 9FD7
 358+ 9FD7              ; --- Guarda el Puntero_objeto del disparo en la pila.
 359+ 9FD7 CD 52 90     2 call Extrae_address
 360+ 9FDA E5               push hl
 361+ 9FDB              ; ---
 362+ 9FDB
 363+ 9FDB              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 364+ 9FDB              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
 365+ 9FDB
 366+ 9FDB 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 367+ 9FDE CD 52 90         call Extrae_address
 368+ 9FE1
 369+ 9FE1 06 02            ld b,2
 370+ 9FE3
 371+ 9FE3 D1           6 pop de
 372+ 9FE4 73               ld (hl),e
 373+ 9FE5 23               inc hl
 374+ 9FE6 72               ld (hl),d
 375+ 9FE7 23               inc hl
 376+ 9FE8
 377+ 9FE8 10 F9            djnz 6B
 378+ 9FEA
 379+ 9FEA              Detecta_impacto_en_disparo_de_Amadeus
 380+ 9FEA
 381+ 9FEA CD 1B A0         call Detecta_impacto_en_disparo_de_Amadeus01
 382+ 9FED
 383+ 9FED 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 384+ 9FF0 23               inc hl
 385+ 9FF1 23               inc hl
 386+ 9FF2 CD 52 90         call Extrae_address
 387+ 9FF5 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 388+ 9FF6 28 02            jr z,7F
 389+ 9FF8 3E 01            ld a,1
 390+ 9FFA 77           7 ld (hl),a
 391+ 9FFB C8               ret z
 392+ 9FFC
 393+ 9FFC              Genera_coordenadas_de_disparo_Amadeus
 394+ 9FFC
 395+ 9FFC              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 396+ 9FFC              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 397+ 9FFC
 398+ 9FFC 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 399+ 9FFF CD 52 90         call Extrae_address
 400+ A002 23               inc hl
 401+ A003 23               inc hl
 402+ A004
 403+ A004 CD 52 90         call Extrae_address                                 ;   Puntero_de_impresión del disparo en HL.
 404+ A007 CD 71 94         call Genera_coordenadas
 405+ A00A
 406+ A00A 3D               dec a
 407+ A00B
 408+ A00B 21 38 8C         ld hl,Coordenadas_disparo_certero
 409+ A00E 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 410+ A00F 23               inc hl
 411+ A010 3A BC 8B         ld a,(Coordenada_X)
 412+ A013 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 413+ A014
 414+ A014 21 35 8C         ld hl,Impacto2
 415+ A017 CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 416+ A019
 417+ A019 AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 418+ A01A C9               ret
 419+ A01B
 420+ A01B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 421+ A01B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 422+ A01B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 423+ A01B
 424+ A01B              ; ----------------------------------------------
 425+ A01B              ;
 426+ A01B              ;   12/08/24
 427+ A01B              ;
 428+ A01B
 429+ A01B
 430+ A01B              Detecta_impacto_en_disparo_de_Amadeus01
 431+ A01B
 432+ A01B              Extraccion_de_datos
 433+ A01B
 434+ A01B 21 1F 89         ld hl,Indice_de_disparos_Amadeus
 435+ A01E CD 52 90         call Extrae_address
 436+ A021
 437+ A021 5E               ld e,(hl)
 438+ A022 23               inc hl
 439+ A023 56               ld d,(hl)
 440+ A024 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 441+ A025
 442+ A025 4E               ld c,(hl)
 443+ A026 23               inc hl
 444+ A027 46               ld b,(hl)
 445+ A028 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 446+ A029
 447+ A029 C5               push bc
 448+ A02A E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 449+ A02B
 450+ A02B              Detecta_impacto_
 451+ A02B
 452+ A02B 1A               ld a,(de)
 453+ A02C A6               and (hl)
 454+ A02D C0               ret nz
 455+ A02E
 456+ A02E 13               inc de
 457+ A02F 23               inc hl
 458+ A030
 459+ A030 1A               ld a,(de)
 460+ A031 A6               and (hl)
 461+ A032 C9               ret
 462+ A033
 463+ A033              ; -------------------------------------------------------------------------------------------------------------
 464+ A033              ;
 465+ A033              ;   8/8/24
 466+ A033              ;
 467+ A033              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 468+ A033              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 469+ A033              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 470+ A033              ;
 471+ A033              ;   MODIFICA: HL,DE,BC y A.
 472+ A033              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 473+ A033              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 474+ A033
 475+ A033              Colision_Entidad_Amadeus
 476+ A033
 477+ A033              ; Posible contacto de entidad con Amadeus. ?????
 478+ A033
 479+ A033              ; Exclusiones:
 480+ A033
 481+ A033 3A 53 8C         ld a,(Shield)
 482+ A036 A7               and a
 483+ A037 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 484+ A038
 485+ A038 21 2E 8C         ld hl,Ctrl_3
 486+ A03B CB 76            bit 6,(hl)
 487+ A03D C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 488+ A03E
 489+ A03E 21 35 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 490+ A041 CB 56            bit 2,(hl)
 491+ A043 C0               ret nz
 492+ A044
 493+ A044 3A BD 8B     	ld a,(Coordenada_y)
 494+ A047 FE 14        	cp $14
 495+ A049 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 496+ A04A
 497+ A04A 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 498+ A04D A7               and a
 499+ A04E C0               ret nz
 500+ A04F
 501+ A04F              Genera_coordenadas_X
 502+ A04F
 503+ A04F              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 504+ A04F              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 505+ A04F
 506+ A04F              ;   Limpiamos almacenes.
 507+ A04F
 508+ A04F              ;    call Limpia_Coordenadas_X
 509+ A04F
 510+ A04F              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 511+ A04F
 512+ A04F 21 3A 8C         ld hl,Coordenadas_X_Entidad
 513+ A052 3A BC 8B         ld a,(Coordenada_X)
 514+ A055 CD 77 A0         call Guarda_coordenadas_X
 515+ A058
 516+ A058              ;   Almacenamos las coordenadas X de Amadeus.
 517+ A058
 518+ A058 3A 71 89         ld a,(CX_Amadeus)
 519+ A05B CD 77 A0         call Guarda_coordenadas_X
 520+ A05E CD 8B A0         call Compara_coordenadas_X
 521+ A061 C0               ret nz
 522+ A062
 523+ A062 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 524+ A064 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 525+ A067
 526+ A067 2A FB 8B         ld hl,(Puntero_store_caja)
 527+ A06A 2C               inc l
 528+ A06B 2C               inc l
 529+ A06C 2C               inc l
 530+ A06D 2C               inc l
 531+ A06E 22 36 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 532+ A071
 533+ A071 21 35 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 534+ A074 CB D6            set 2,(hl)
 535+ A076
 536+ A076 C9               ret
 537+ A077
 538+ A077               ; ----- ----- ----- ----- -----
 539+ A077
 540+ A077 77           Guarda_coordenadas_X ld (hl),a
 541+ A078 3C               inc a
 542+ A079 2C               inc l
 543+ A07A 77               ld (hl),a
 544+ A07B 3C               inc a
 545+ A07C 2C               inc l
 546+ A07D 77               ld (hl),a
 547+ A07E 2C               inc l
 548+ A07F C9               ret
 549+ A080
 550+ A080 AF           Limpia_Coordenadas_X xor a
 551+ A081 06 06            ld b,6
 552+ A083 21 3D 8C         ld hl,Coordenadas_X_Amadeus
 553+ A086 77           1 ld (hl),a
 554+ A087 23               inc hl
 555+ A088 10 FC            djnz 1B
 556+ A08A C9               ret
 557+ A08B
 558+ A08B              ; ----- ----- ----- ----- -----
 559+ A08B
 560+ A08B              Compara_coordenadas_X
 561+ A08B
 562+ A08B DD 21 3A 8C      ld ix,Coordenadas_X_Entidad
 563+ A08F DD 7E 00         ld a,(ix+0)
 564+ A092 CD A0 A0         call Comparando
 565+ A095 C8               ret z
 566+ A096
 567+ A096 3C               inc a
 568+ A097 CD AF A0         call Comparando_1
 569+ A09A C8               ret z
 570+ A09B
 571+ A09B 3C               inc a
 572+ A09C CD AF A0         call Comparando_1
 573+ A09F C9               ret
 574+ A0A0
 575+ A0A0              ; ----- ----- ----- ----- -----
 576+ A0A0              ;
 577+ A0A0              ;   4/12/23
 578+ A0A0              ;
 579+ A0A0              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 580+ A0A0
 581+ A0A0              Comparando
 582+ A0A0
 583+ A0A0 DD 2C            inc ixl
 584+ A0A2 DD 2C            inc ixl
 585+ A0A4 DD 2C            inc ixl
 586+ A0A6
 587+ A0A6 DD 46 00         ld b,(ix+0)
 588+ A0A9 DD 4E 01         ld c,(ix+1)
 589+ A0AC DD 56 02         ld d,(ix+2)
 590+ A0AF
 591+ A0AF B8           Comparando_1 cp b
 592+ A0B0 C8               ret z
 593+ A0B1 B9               cp c
 594+ A0B2 C8               ret z
 595+ A0B3 BA               cp d
 596+ A0B4 C9               ret
 597+ A0B5
 598+ A0B5              ; -----------------------------------------------------------------------
 599+ A0B5              ;
 600+ A0B5              ;   04/7/24
 601+ A0B5              ;
 602+ A0B5
 603+ A0B5              Detecta_colision_nave_entidad
 604+ A0B5
 605+ A0B5              ; Exclusiones:
 606+ A0B5
 607+ A0B5              ; Salimos de la rutina si no hay advertencia de posible colisión.
 608+ A0B5
 609+ A0B5 21 35 8C     	ld hl,Impacto2
 610+ A0B8 CB 56        	bit 2,(hl)
 611+ A0BA C8           	ret z
 612+ A0BB
 613+ A0BB              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 614+ A0BB
 615+ A0BB 2A 77 89         ld hl,(Pamm_Amadeus)
 616+ A0BE CD 52 90         call Extrae_address
 617+ A0C1 54               ld d,h
 618+ A0C2 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 619+ A0C3
 620+ A0C3 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 621+ A0C6 06 10            ld b,16                                        ; Contador de scanlines en B.
 622+ A0C8 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 623+ A0CB
 624+ A0CB C5           1 push bc
 625+ A0CC 06 03            ld b,3
 626+ A0CE E5               push hl
 627+ A0CF
 628+ A0CF              ; .db
 629+ A0CF
 630+ A0CF 1A           3 ld a,(de)
 631+ A0D0 A7               and a
 632+ A0D1 20 03            jr nz,4F
 633+ A0D3
 634+ A0D3 2C               inc l
 635+ A0D4 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 636+ A0D6
 637+ A0D6 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 638+ A0D8 28 04            jr z,2F
 639+ A0DA
 640+ A0DA              ; Impacto.
 641+ A0DA FD 2D            dec iyl
 642+ A0DC 28 22            jr z,5F
 643+ A0DE
 644+ A0DE 1C           2 inc e
 645+ A0DF 10 EE            djnz 3B
 646+ A0E1
 647+ A0E1 E1               pop hl
 648+ A0E2
 649+ A0E2              ; Hay salto de línea en el puntero de impresión ???
 650+ A0E2
 651+ A0E2 7C               ld a,h
 652+ A0E3 D6 57            sub $57
 653+ A0E5 20 0A            jr nz,6F
 654+ A0E7
 655+ A0E7              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 656+ A0E7
 657+ A0E7 2A 75 89         ld hl,(p.imp.amadeus)
 658+ A0EA 3E 20            ld a,$20
 659+ A0EC A7               and a
 660+ A0ED 85               add l
 661+ A0EE 6F               ld l,a
 662+ A0EF 18 01            jr 7F
 663+ A0F1
 664+ A0F1 24           6 inc h
 665+ A0F2
 666+ A0F2 C1           7 pop bc
 667+ A0F3 10 D6            djnz 1B
 668+ A0F5
 669+ A0F5              ;   Fin de la comparativa.
 670+ A0F5
 671+ A0F5              ;   NO HAY COLISIÓN !!!!!.
 672+ A0F5              ;
 673+ A0F5              ;   .db (Impacto) de Amadeus a "0".
 674+ A0F5              ;   RES el bit2 de (Impacto2).
 675+ A0F5              ;
 676+ A0F5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 677+ A0F5              ;   Lo colocamos a "0".
 678+ A0F5
 679+ A0F5 21 35 8C         ld hl,Impacto2
 680+ A0F8 CB 96            res 2,(hl)
 681+ A0FA 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)
 682+ A0FD 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 683+ A0FF C9               ret
 684+ A100
 685+ A100              ;   COLISIÓN !!!!!.
 686+ A100              ;
 687+ A100              ;   .db (Impacto) de Amadeus a "1".
 688+ A100              ;   SET el bit3 de (Impacto2).
 689+ A100              ;
 690+ A100              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 691+ A100
 692+ A100 E1           5 pop hl
 693+ A101 C1               pop bc
 694+ A102
 695+ A102 21 74 89         ld hl,Impacto_Amadeus
 696+ A105 36 01            ld (hl),1
 697+ A107 21 35 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 698+ A10A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 699+ A10C
 700+ A10C 11 C0 87         ld de,Indice_Explosion_entidades
 701+ A10F 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 702+ A112
 703+ A112 23               inc hl
 704+ A113 23               inc hl
 705+ A114 23               inc hl
 706+ A115
 707+ A115 73               ld (hl),e
 708+ A116 23               inc hl
 709+ A117 72               ld (hl),d
 710+ A118
 711+ A118              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 712+ A118
 713+ A118 11 60 88         ld de,Indice_Explosion_Amadeus
 714+ A11B 21 77 89         ld hl,Pamm_Amadeus
 715+ A11E
 716+ A11E 73               ld (hl),e
 717+ A11F 23               inc hl
 718+ A120 72               ld (hl),d
 719+ A121
 720+ A121 C9               ret
 721+ A122
 722+ A122
 723+ A122
# file closed: Disparo.asm
2272  A122
2273  A122              	SAVESNA "Pruebas.sna", START
2274  A122
2275  A122
2276  A122
2277  A122
# file closed: Banco_de_pruebas.asm
