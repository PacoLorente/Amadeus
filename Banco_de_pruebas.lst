# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD D6 8E     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 0F 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 13 8A        	defw End_Snapshot_1
 267+ 8500 17 8A        	defw End_Snapshot_2
 268+ 8502 1B 8A        	defw End_Snapshot_3
 269+ 8504 11 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 15 8A        	defw End_Snapshot_disparos_1
 271+ 8508 19 8A        	defw End_Snapshot_disparos_2
 272+ 850A 1D 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  20  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 96 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 96 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  21  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB B9 88        	defw Nivel_2
   7+ 88AD C6 88        	defw Nivel_3
   8+ 88AF D6 88        	defw Nivel_4
   9+ 88B1 E8 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88B8 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88B9 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88BE 01 02
  22+ 88C0 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C4 01 02
  23+ 88C6 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88C7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CB 01
  25+ 88CC 03 01 01 01  	db 3,1,1,1,1
  25+ 88D0 01
  26+ 88D1 03 01 01 01  	db 3,1,1,1,1
  26+ 88D5 01
  27+ 88D6 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88D7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DB 01
  29+ 88DC 04 01 01 01  	db 4,1,1,1,1
  29+ 88E0 01
  30+ 88E1 04 01 01 01  	db 4,1,1,1,1
  30+ 88E5 01
  31+ 88E6 02 03        	db 2,3
  32+ 88E8 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88E9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88ED 01
  34+ 88EE 05 01 01 01  	db 5,1,1,1,1
  34+ 88F2 01
  35+ 88F3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88F7 01
  36+ 88F8 05 01 01 01  	db 5,1,1,1,1
  36+ 88FC 01
  37+ 88FD
  38+ 88FD              ;---------------------------------------------------------------------------------------------------------------
  39+ 88FD              ;
  40+ 88FD              ;   21/5/23
  41+ 88FD              ;
  42+ 88FD              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88FD              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88FD              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88FD              ;	_en la caja DRAW correspondiente.
  46+ 88FD              ;
  47+ 88FD              ;	MODIFICA: HL,DE y A.
  48+ 88FD              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88FD
  50+ 88FD              Inicializa_Punteros_de_nivel
  51+ 88FD
  52+ 88FD 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8900 22 51 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8903 CD AC 8D     	call Extrae_address
  55+ 8906 7E           	ld a,(hl)
  56+ 8907 32 FF 89     	ld (Numero_de_entidades),a
  57+ 890A 23           	inc hl
  58+ 890B 22 53 8A     	ld (Datos_de_nivel),hl
  59+ 890E C9           	ret
  60+ 890F
  61+ 890F              ;---------------------------------------------------------------------------------------------------------------
  62+ 890F              ;
  63+ 890F              ;   13/5/23
  64+ 890F              ;
  65+ 890F              ;	Destruye A,BC,HL,DE
  66+ 890F
  67+ 890F              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 890F              ;	_del juego.
  69+ 890F
  70+ 890F              Prepara_cajas
  71+ 890F
  72+ 890F              ; Preparamos los punteros de las cajas.
  73+ 890F
  74+ 890F 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8912 CD AC 8D     	call Extrae_address
  76+ 8915 CD 52 89     	call Avanza_caja
  77+ 8918
  78+ 8918 CD 96 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891B
  80+ 891B 2A 53 8A     	ld hl,(Datos_de_nivel)
  81+ 891E
  82+ 891E              ; HL está en los datos del nivel correspondiente.
  83+ 891E              ; B actuará como contador de cajas.
  84+ 891E
  85+ 891E C5           1 push bc
  86+ 891F
  87+ 891F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8920 CD 43 89     	call PreparaBC
  89+ 8923
  90+ 8923 21 85 88     	ld hl,Indice_de_entidades
  91+ 8926 CD 4B 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8929 22 05 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892C
  94+ 892C CD 5C 89     	call Datos_de_entidad_a_caja
  95+ 892F
  96+ 892F 2A FD 89     	ld hl,(Indice_restore_caja)
  97+ 8932 CD AC 8D     	call Extrae_address
  98+ 8935 CD 52 89     	call Avanza_caja
  99+ 8938
 100+ 8938 2A 53 8A     	ld hl,(Datos_de_nivel)
 101+ 893B 23           	inc hl
 102+ 893C 22 53 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 893F
 104+ 893F C1           	pop bc
 105+ 8940 10 DC        	djnz 1B
 106+ 8942 C9           	ret
 107+ 8943
 108+ 8943 CB 27        PreparaBC sla a
 109+ 8945 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8947 4F           	ld c,a
 111+ 8948 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894A C9           	ret
 113+ 894B
 114+ 894B A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894C ED 4A        	adc hl,bc
 116+ 894E CD AC 8D     	call Extrae_address
 117+ 8951 C9           	ret
 118+ 8952
 119+ 8952 22 F9 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8955 13           	inc de
 121+ 8956 13           	inc de
 122+ 8957 EB           	ex de,hl
 123+ 8958 22 FD 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895B C9           	ret
 125+ 895C
 126+ 895C              Datos_de_entidad_a_caja
 127+ 895C
 128+ 895C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895C
 130+ 895C
 131+ 895C ED 5B F9 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8960
 133+ 8960 01 02 00     	ld bc,2
 134+ 8963 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8965
 136+ 8965 01 07 00     	ld bc,7
 137+ 8968 CD 90 89     	call Situa_DE
 138+ 896B
 139+ 896B 01 05 00     	ld bc,5
 140+ 896E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8970
 142+ 8970 01 04 00     	ld bc,4
 143+ 8973 CD 90 89     	call Situa_DE
 144+ 8976
 145+ 8976 01 07 00     	ld bc,7
 146+ 8979 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897B
 148+ 897B 01 18 00     	ld bc,24
 149+ 897E CD 90 89     	call Situa_DE
 150+ 8981
 151+ 8981 01 02 00     	ld bc,2
 152+ 8984 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8986
 154+ 8986              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8986              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8986
 157+ 8986 01 0F 00     	ld bc,15									; *****
 158+ 8989 CD 90 89     	call Situa_DE
 159+ 898C
 160+ 898C 3E 03        	ld a,3
 161+ 898E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 898F
 163+ 898F C9           	ret
 164+ 8990
 165+ 8990 EB           Situa_DE ex de,hl
 166+ 8991 A7           	and a
 167+ 8992 ED 4A        	adc hl,bc
 168+ 8994 EB           	ex de,hl
 169+ 8995 C9           	ret
 170+ 8996
 171+ 8996              ;---------------------------------------------------------------------------------------------------------------
 172+ 8996              ;
 173+ 8996              ;	21/5/23
 174+ 8996              ;
 175+ 8996              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8996              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8996              ;
 178+ 8996              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8996              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8996              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8996              ;
 182+ 8996              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8996              ;	MODIFICA: A y B.
 184+ 8996              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8996
 186+ 8996              Admin_num_entidades
 187+ 8996
 188+ 8996              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8996
 190+ 8996 3A FF 89     	ld a,(Numero_de_entidades)
 191+ 8999 A7           	and a
 192+ 899A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899A              ;	jr z,$
 194+ 899A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899A
 196+ 899A 20 03        	jr nz,3F
 197+ 899C
 198+ 899C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899C
 200+ 899C CD FD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 899F
 202+ 899F
 203+ 899F 3A FF 89     3 ld a,(Numero_de_entidades)
 204+ 89A2 FE 0A        	cp 10
 205+ 89A4 38 08        	jr c,1F
 206+ 89A6
 207+ 89A6              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89A6              ; Actualizamos variables.
 209+ 89A6
 210+ 89A6 3E 0A        	ld a,10
 211+ 89A8 32 00 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89AB 47           	ld b,a
 213+ 89AC 18 04        	jr 2F
 214+ 89AE
 215+ 89AE              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89AE              ; (Numero_de_entidades)="0".
 217+ 89AE
 218+ 89AE 32 00 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89B1 47           	ld b,a
 220+ 89B2 C9           2 ret
# file closed: Niveles.asm
  22  89B3
  23  89B3              ; ******************************************************************************************************************************************************************************************
  24  89B3              ; Constantes.
  25  89B3              ; ******************************************************************************************************************************************************************************************
  26  89B3              ;
  27  89B3              ; 25/05/23
  28  89B3              ;
  29  89B3              ; Constantes generales.
  30  89B3              ;
  31  89B3
  32  89B3              Sprite_vacio equ $f000
  33  89B3              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  34  89B3              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  35  89B3              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  36  89B3              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  37  89B3
  38  89B3              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  39  89B3              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  40  89B3              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  41  89B3              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  42  89B3              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  43  89B3              ;                               				        ; De momento situamos este almacén en $7060.
  44  89B3              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  45  89B3              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  46  89B3              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  47  89B3              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  48  89B3              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  49  89B3              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  50  89B3
  51  89B3              Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
  52  89B3              Caja_de_disparotes equ $741d ; (741dh - 7420h) 4 bytes.
  53  89B3
  54  89B3              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  55  89B3
  56  89B3              ; ******************************************************************************************************************************************************************************************
  57  89B3              ; Variables.
  58  89B3              ; ******************************************************************************************************************************************************************************************
  59  89B3              ;
  60  89B3              ; 28/07/23
  61  89B3              ;
  62  89B3              ; Variables de DRAW. (Motor principal).
  63  89B3              ;
  64  89B3              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  65  89B3
  66  89B3 00           Filas db 0												; Filas. [DRAW]
  67  89B4 00           Columns db 0  											; Nº de columnas. [DRAW]
  68  89B5 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  69  89B7 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  70  89B9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  71  89BA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  72  89BB
  73  89BB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  74  89BB
  75  89BB 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  76  89BC              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  77  89BC              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  78  89BC 00           Attr db 0												; Atributos de la entidad:
  79  89BD
  80  89BD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  81  89BD              ;
  82  89BD              ;	COLORES: 0 ..... NEGRO
  83  89BD              ;    		 1 ..... AZUL
  84  89BD              ; 			 2 ..... ROJO
  85  89BD              ;			 3 ..... MAGENTA
  86  89BD              ; 			 4 ..... VERDE
  87  89BD              ; 			 5 ..... CIAN
  88  89BD              ;			 6 ..... AMARILLO
  89  89BD              ; 			 7 ..... BLANCO
  90  89BD
  91  89BD 00 00        Indice_Sprite_der defw 0
  92  89BF 00 00        Indice_Sprite_izq defw 0
  93  89C1 00 00        Puntero_DESPLZ_der defw 0
  94  89C3 00 00        Puntero_DESPLZ_izq defw 0
  95  89C5
  96  89C5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  97  89C7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  98  89C8
  99  89C8              ; Variables de objeto. (Características).
 100  89C8
 101  89C8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 102  89C9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 103  89CA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 104  89CB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 105  89CC
 106  89CC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 107  89CD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 108  89CD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 109  89CD
 110  89CD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 111  89CF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 112  89D1 00 00        	defw 0
 113  89D3 00 00 00 00  	db 0,0,0,0
 114  89D7
 115  89D7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 116  89D9 00 00        	defw 0
 117  89DB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 118  89DD 00 00 00 00  	db 0,0,0,0
 119  89E1
 120  89E1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 121  89E1
 122  89E1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 123  89E2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 124  89E2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 125  89E2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 126  89E2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 127  89E2              ;
 128  89E2              ; 														DESCRIPCIÖN:
 129  89E2              ;
 130  89E2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 131  89E2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 132  89E2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 133  89E2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 134  89E2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 135  89E2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 136  89E2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 137  89E2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 138  89E2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 139  89E2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 140  89E2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 141  89E2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 142  89E2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 143  89E2              ;
 144  89E2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 145  89E2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 146  89E2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 147  89E2
 148  89E2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 149  89E3
 150  89E3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 151  89E3
 152  89E3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 153  89E4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 154  89E6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 155  89E8 00 00        Puntero_indice_mov_bucle defw 0							;
 156  89EA              ;
 157  89EA              ;
 158  89EA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 159  89EB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 160  89EB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 161  89EB 00           Incrementa_puntero_backup db 0
 162  89EC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 163  89ED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 164  89ED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 165  89EE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 166  89EF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 167  89F0              ;
 168  89F0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 169  89F0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 170  89F0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 171  89F0              ;
 172  89F0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 173  89F0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 174  89F0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 175  89F0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 176  89F0              ;
 177  89F0              ;														;	"$ff" ..... Bucle infinito de repetición.
 178  89F0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 179  89F0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 180  89F0
 181  89F0
 182  89F0              ; Variables de funcionamiento. [DRAW].
 183  89F0
 184  89F0 00           Columnas db 0
 185  89F1 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 186  89F3              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 187  89F3 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 188  89F4
 189  89F4              ; variables de control general.
 190  89F4
 191  89F4 00           Ctrl_2 db 0
 192  89F5              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 193  89F5              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 194  89F5              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 195  89F5              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 196  89F5              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 197  89F5              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 198  89F5              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 199  89F5              ;
 200  89F5              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 201  89F5              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 202  89F5              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 203  89F5              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 204  89F5              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 205  89F5
 206  89F5 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 207  89F6
 208  89F6              ;! 67 Bytes por entidad.
 209  89F6
 210  89F6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 211  89F6              ;					         		---------;      ;---------
 212  89F6
 213  89F6
 214  89F6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 215  89F6
 216  89F6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 217  89F7
 218  89F7              ;														DESCRIPCIÓN:
 219  89F7              ;
 220  89F7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 221  89F7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 222  89F7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 223  89F7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 224  89F7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 225  89F7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 226  89F7
 227  89F7              ;														BIT 3, Recarga de nueva oleada.
 228  89F7              ;														BIT 4, Recarga de nueva oleada.
 229  89F7
 230  89F7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 231  89F9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 232  89F9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 233  89F9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 234  89F9
 235  89F9
 236  89F9
 237  89F9              ; Gestión de ENTIDADES y CAJAS.
 238  89F9
 239  89F9 00 00        Puntero_store_caja defw 0
 240  89FB 00 00        Puntero_restore_caja defw 0
 241  89FD 00 00        Indice_restore_caja defw 0
 242  89FF 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 243  8A00 00           Numero_parcial_de_entidades db 0
 244  8A01 00           Entidades_en_curso db 0									; ..... ..... .....
 245  8A02 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 246  8A03              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 247  8A03              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 248  8A03              ;														; _ (Numero_de_malotes)="0".
 249  8A03 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 250  8A05 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 251  8A07              ;														; _ puntero (Indice_entidades).
 252  8A07
 253  8A07
 254  8A07              ;---------------------------------------------------------------------------------------------------------------
 255  8A07              ;
 256  8A07              ;	9/8/23
 257  8A07              ;
 258  8A07              ;	Álbumes.
 259  8A07
 260  8A07 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 261  8A09              ;															; _variable para almacenar lo posición del puntero_
 262  8A09              ; 															; _de pila, SP.
 263  8A09 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 264  8A0B              ;															; La utiliza la rutina [Extrae_foto_registros].
 265  8A0B 00 00        Stack_snapshot defw 0
 266  8A0D 00 00        Stack_snapshot_disparos defw 0
 267  8A0F
 268  8A0F 00 00        End_Snapshot defw 0
 269  8A11              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 270  8A11 00 00        End_Snapshot_disparos defw 0								; Puntero que indica la posición de memoria donde vamos a guardar_
 271  8A13              ;															; _el snapshot de los registros del siguiente disparo.
 272  8A13              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 273  8A13 00 00        End_Snapshot_1 defw 0
 274  8A15 00 00        End_Snapshot_disparos_1 defw 0
 275  8A17 00 00        End_Snapshot_2 defw 0
 276  8A19 00 00        End_Snapshot_disparos_2 defw 0
 277  8A1B 00 00        End_Snapshot_3 defw 0
 278  8A1D 00 00        End_Snapshot_disparos_3 defw 0
 279  8A1F
 280  8A1F 00 00        Puntero_indice_album_de_fotos defw 0
 281  8A21 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 282  8A23 00 00        Puntero_de_album_de_fotos defw 0
 283  8A25 00 00        Puntero_de_album_de_fotos_de_disparos defw 0
 284  8A27
 285  8A27 00 00        Puntero_indice_End_Snapshot defw 0
 286  8A29 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 287  8A2B 00 00        Puntero_de_End_Snapshot defw 0
 288  8A2D 00 00        Puntero_de_End_Snapshot_disparos defw 0
 289  8A2F
 290  8A2F 00 00        Puntero_de_caja_de_malotes defw 0
 291  8A31 00 00        Puntero_de_caja_de_disparotes defw 0
 292  8A33
 293  8A33              ;---------------------------------------------------------------------------------------------------------------
 294  8A33
 295  8A33              ; Gestión de Disparos.
 296  8A33
 297  8A33 00           Numero_de_disparotes db 0
 298  8A34 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 299  8A36 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 300  8A38 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 301  8A39              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 302  8A39              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 303  8A39 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 304  8A3B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 305  8A3B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 306  8A3B              ;														; _produzca colisión.
 307  8A3B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 308  8A3D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 309  8A3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 310  8A40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 311  8A40 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 312  8A43              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 313  8A43 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 314  8A45 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 315  8A46
 316  8A46              ;---------------------------------------------------------------------------------------------------------------
 317  8A46
 318  8A46              ; Relojes y temporizaciones.
 319  8A46
 320  8A46 00           Contador_de_frames db 0
 321  8A47 04           Clock_explosion db 4
 322  8A48 1E           Clock_Entidades_en_curso db 30
 323  8A49 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 324  8A4A              ;														; Repite la oleada de entidades.
 325  8A4A 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 326  8A4B 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 327  8A4C 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 328  8A4D
 329  8A4D 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 330  8A4E 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 331  8A4F 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 332  8A50
 333  8A50              ;---------------------------------------------------------------------------------------------------------------
 334  8A50
 335  8A50              ; Gestión de NIVELES.
 336  8A50
 337  8A50 00           Nivel db 0												; Nivel actual del juego.
 338  8A51 00 00        Puntero_indice_NIVELES defw 0
 339  8A53 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 340  8A55              ; 														; _ que definen el NIVEL.
 341  8A55              ; Y todo comienza aquí .....
 342  8A55              ;
 343  8A55              ; Rutina principal *************************************************************************************************************************************************************************
 344  8A55              ;
 345  8A55              ;	14/11/22
 346  8A55
 347  8A55              START
 348  8A55
 349  8A55 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 350  8A58 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 351  8A5A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 352  8A5C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 353  8A5E F3           	DI
 354  8A5F
 355  8A5F 3E 07        	ld a,%00000111
 356  8A61 CD D2 99     	call Cls
 357  8A64
 358  8A64 CD 85 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 359  8A67
 360  8A67              ; INICIALIZACIÓN.
 361  8A67
 362  8A67 CD FD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 363  8A6A
 364  8A6A CD 0F 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 365  8A6D
 366  8A6D CD E8 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 367  8A70              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 368  8A70 CD FE 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 369  8A73              ;													     ; _ malotes antes de guardar ninguna foto.
 370  8A73              ; ----------
 371  8A73
 372  8A73 CD 35 8E     	call Restore_entidad
 373  8A76
 374  8A76 21 00 8A     	ld hl,Numero_parcial_de_entidades
 375  8A79 46           	ld b,(hl)
 376  8A7A 04           	inc b
 377  8A7B 05           	dec b
 378  8A7C 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 379  8A7E
 380  8A7E              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 381  8A7E              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 382  8A7E              ;	Pintamos el resto de entidades:
 383  8A7E
 384  8A7E              ;	INICIA ENTIDADES !!!!!
 385  8A7E
 386  8A7E C5           1 push bc  												; Guardo el contador de entidades.
 387  8A7F
 388  8A7F CD 8F 8C     	call Inicia_entidad
 389  8A82
 390  8A82 C1           	pop bc
 391  8A83 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 392  8A85
 393  8A85              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 394  8A85              ; (Esto se dá cuando se inicia una nueva oleada).
 395  8A85
 396  8A85 3A F6 89     	ld a,(Ctrl_1)
 397  8A88 CB 5F        	bit 3,a
 398  8A8A 20 18        	jr nz,5F											; Loop
 399  8A8C
 400  8A8C              ; 	INICIA AMADEUS !!!!!
 401  8A8C
 402  8A8C CD 5C 8E     3 call Restore_Amadeus
 403  8A8F CD B2 8D     	call Inicia_Puntero_objeto
 404  8A92 CD 08 94     	call Draw
 405  8A95 CD A0 7F     	call Guarda_foto_registros
 406  8A98 11 A4 85     	ld de,Amadeus_db
 407  8A9B CD 6E 8E     	call Store_Amadeus
 408  8A9E
 409  8A9E              ; 	INICIA DISPAROS !!!!!
 410  8A9E
 411  8A9E CD 6C 8D     	call Inicia_Puntero_Disparo_Entidades
 412  8AA1 CD 73 8D     	call Inicia_Puntero_Disparo_Amadeus
 413  8AA4
 414  8AA4              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 415  8AA4
 416  8AA4 CD E8 8C     5 call Inicia_punteros_de_cajas
 417  8AA7 CD 35 8E     	call Restore_entidad
 418  8AAA
 419  8AAA 3A F6 89     	ld a,(Ctrl_1)
 420  8AAD CB 5F        	bit 3,a
 421  8AAF 28 0A        	jr z,6F
 422  8AB1
 423  8AB1              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 424  8AB1
 425  8AB1 21 F6 89     	ld hl,Ctrl_1
 426  8AB4 CB 9E        	res 3,(hl)
 427  8AB6 CD 7A 8D     	call Calcula_numero_de_malotes
 428  8AB9 18 07        	jr 21F
 429  8ABB
 430  8ABB              ; ----------
 431  8ABB
 432  8ABB 3A 00 8A     6 ld a,(Numero_parcial_de_entidades)
 433  8ABE 3C           	inc a
 434  8ABF 32 02 8A     	ld (Numero_de_malotes),a
 435  8AC2
 436  8AC2 2A 2F 8A     21 ld hl,(Puntero_de_caja_de_malotes)	; Guarda el nº de malotes en la 1ª caja.
 437  8AC5 77           	ld (hl),a
 438  8AC6
 439  8AC6              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y_
 440  8AC6              ; _ (Numero_de_malotes) en (Caja_de_malotes).
 441  8AC6
 442  8AC6              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 443  8AC6              ; _ para situarnos en el siguiente album y en la siguiente Caja_de_malotes.
 444  8AC6
 445  8AC6 CD 3B 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 446  8AC9
 447  8AC9 18 FE        	jr $
 448  8ACB
 449  8ACB              ; ------------------------------------
 450  8ACB
 451  8ACB FB           Main ei ; Interrupciones habilitadas.
 452  8ACC
 453  8ACC              ; -----------------------------------------------------------------------
 454  8ACC              ;
 455  8ACC              ;	3/8/23
 456  8ACC
 457  8ACC 3A 48 8A     	ld a,(Clock_Entidades_en_curso)
 458  8ACF 47           	ld b,a
 459  8AD0 3A 46 8A     	ld a,(Contador_de_frames)
 460  8AD3 B8           	cp b
 461  8AD4 20 18        	jr nz,13F
 462  8AD6              ;
 463  8AD6              ;!debuggg
 464  8AD6              ;    ld a,(Contador_de_frames)
 465  8AD6              ;    ld hl,(Stack_snapshot)
 466  8AD6              ;    jr $
 467  8AD6              ;!debuggg
 468  8AD6
 469  8AD6 3A 00 8A     	ld a,(Numero_parcial_de_entidades)
 470  8AD9 47           	ld b,a
 471  8ADA 3A 01 8A     	ld a,(Entidades_en_curso)
 472  8ADD B8           	cp b
 473  8ADE 28 0E        	jr z,13F
 474  8AE0 30 0C        	jr nc,13F
 475  8AE2
 476  8AE2 3C           	inc a
 477  8AE3 32 01 8A     	ld (Entidades_en_curso),a
 478  8AE6
 479  8AE6 3A 48 8A     	ld a,(Clock_Entidades_en_curso)
 480  8AE9
 481  8AE9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 482  8AE9              ;! _ IMPREDECIBLE !!!!
 483  8AE9
 484  8AE9 C6 64        	add 100
 485  8AEB 32 48 8A     	ld (Clock_Entidades_en_curso),a
 486  8AEE
 487  8AEE              ; Habilita disparos.
 488  8AEE
 489  8AEE 21 4A 8A     13 ld hl,Disparo_Amadeus
 490  8AF1 11 4C 8A     	ld de,CLOCK_repone_disparo_Amadeus
 491  8AF4 CD 97 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 492  8AF7
 493  8AF7 21 4D 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 494  8AFA 11 4F 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 495  8AFD CD 97 A0     	call Habilita_disparos
 496  8B00
 497  8B00              ; COLISIONES.
 498  8B00
 499  8B00 CD EA 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 500  8B03
 501  8B03              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 502  8B03              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 503  8B03              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 504  8B03
 505  8B03 AF           	xor a
 506  8B04 32 38 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 507  8B07
 508  8B07 CD E8 8C     	call Inicia_punteros_de_cajas
 509  8B0A CD 35 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 510  8B0D              ; 														; _ en DRAW.
 511  8B0D 3A B3 89     	ld a,(Filas)
 512  8B10 A7           	and a
 513  8B11 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 514  8B13 CD 47 8E     	call Incrementa_punteros_de_cajas
 515  8B16 18 F2        	jr 12B
 516  8B18
 517  8B18              ; ---------------------------------------------------------------------------------------
 518  8B18
 519  8B18 3A 00 8A     10 ld a,(Numero_parcial_de_entidades)
 520  8B1B 47               ld b,a
 521  8B1C A7           	and a
 522  8B1D 20 14        	jr nz,11F
 523  8B1F
 524  8B1F 21 F6 89     	ld hl,Ctrl_1
 525  8B22 CB 66        	bit 4,(hl)
 526  8B24 C2 B0 8B     	jp nz,16F
 527  8B27
 528  8B27 21 F6 89     	ld hl,Ctrl_1
 529  8B2A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 530  8B2C
 531  8B2C 3A 46 8A     	ld a,(Contador_de_frames)
 532  8B2F 3C           	inc a
 533  8B30 32 49 8A     	ld (Activa_recarga_cajas),a
 534  8B33
 535  8B33              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 536  8B33
 537  8B33 3A 01 8A     11 ld a,(Entidades_en_curso)
 538  8B36 A7           	and a
 539  8B37 CA B0 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 540  8B3A 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 541  8B3B
 542  8B3B              ; Código que ejecutamos con cada entidad:
 543  8B3B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 544  8B3B
 545  8B3B C5           15 push bc 												; Nº de entidades en curso.
 546  8B3C
 547  8B3C              ; Impacto ???
 548  8B3C
 549  8B3C 3A CC 89     	ld a,(Impacto)
 550  8B3F A7           	and a
 551  8B40 28 2D        	jr z,8F
 552  8B42
 553  8B42              ; Hay Impacto en esta entidad.
 554  8B42
 555  8B42 21 47 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 556  8B45 35           	dec (hl)
 557  8B46 20 62        	jr nz,17F
 558  8B48
 559  8B48              ;! Velocidad de la animación de la explosión.
 560  8B48
 561  8B48 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 562  8B4A              ;														; _,(velocidad de la explosión).
 563  8B4A CD 9F 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 564  8B4D
 565  8B4D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 566  8B4D
 567  8B4D 3A F4 89     	ld a,(Ctrl_2)
 568  8B50 CB 4F        	bit 1,a
 569  8B52 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 570  8B54
 571  8B54              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 572  8B54
 573  8B54 3A BB 89     	ld a,(CTRL_DESPLZ)
 574  8B57 A7           	and a
 575  8B58 20 08        	jr nz,18F
 576  8B5A
 577  8B5A 21 84 84     	ld hl,Indice_Explosion_2x2-2
 578  8B5D 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 579  8B60 18 06        	jr 19F
 580  8B62
 581  8B62 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 582  8B65 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 583  8B68
 584  8B68 21 F4 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 585  8B6B CB CE        	set 1,(hl)
 586  8B6D 18 22        	jr 7F
 587  8B6F
 588  8B6F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 589  8B6F              ; _con las coordenadas de la entidad almacenada en DRAW.
 590  8B6F
 591  8B6F 3A F6 89     8 ld a,(Ctrl_1)
 592  8B72 CB 57        	bit 2,a
 593  8B74 28 1B        	jr z,7F
 594  8B76
 595  8B76 2A 3B 8A     	ld hl,(Coordenadas_disparo_certero)
 596  8B79 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 597  8B7A              ;														; E contiene la coordenada_X del disparo.
 598  8B7A 2A B9 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 599  8B7D              ;														; H FILA, (Coordenada_y de la entidad).
 600  8B7D A7           	and a
 601  8B7E ED 52        	sbc hl,de
 602  8B80
 603  8B80 CD 21 93     	call Determina_resultado_comparativa
 604  8B83
 605  8B83 78           	ld a,b
 606  8B84 A7           	and a
 607  8B85 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 608  8B87
 609  8B87              ; ----- ----- -----
 610  8B87
 611  8B87 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 612  8B89 32 CC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 613  8B8C
 614  8B8C 21 F6 89     	ld hl,Ctrl_1
 615  8B8F CB 96        	res 2,(hl)
 616  8B91
 617  8B91 CD 11 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 618  8B94
 619  8B94 3A E1 89     	ld a,(Ctrl_0)
 620  8B97 CB 67        	bit 4,a
 621  8B99 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 622  8B9B
 623  8B9B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 624  8B9B              ; [[[
 625  8B9B CD D0 8E     	call Detecta_disparo_entidad
 626  8B9E              ; ]]]
 627  8B9E CD AF 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 628  8BA1
 629  8BA1 21 E1 89     	ld hl,Ctrl_0
 630  8BA4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 631  8BA6 AF           	xor a
 632  8BA7 32 E2 89     	ld (Obj_dibujado),a
 633  8BAA
 634  8BAA CD FA 8D     17 call Store_Restore_cajas
 635  8BAD
 636  8BAD C1           	pop bc
 637  8BAE 10 8B        	djnz 15B
 638  8BB0
 639  8BB0              ; ------------------------------------
 640  8BB0
 641  8BB0              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 642  8BB0              ; Hemos gestionado todas las unidades.
 643  8BB0              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 644  8BB0
 645  8BB0              ;	ld hl,Ctrl_1
 646  8BB0              ;	res 2,(hl)
 647  8BB0
 648  8BB0              ; ------------------------------------
 649  8BB0
 650  8BB0              ; Tras la gestión de las entidades, ... AMADEUS.
 651  8BB0
 652  8BB0 CD 5C 8E     16 call Restore_Amadeus
 653  8BB3
 654  8BB3 3A CC 89     	ld a,(Impacto)
 655  8BB6 A7           	and a
 656  8BB7 20 FE        	jr nz,$
 657  8BB9
 658  8BB9 CD 70 8C     	call Mov_Amadeus
 659  8BBC
 660  8BBC 3A E1 89     	ld a,(Ctrl_0)
 661  8BBF CB 67        	bit 4,a
 662  8BC1 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 663  8BC3
 664  8BC3 CD AF 8C     	call Guarda_foto_entidad_a_pintar
 665  8BC6
 666  8BC6 21 E1 89     14 ld hl,Ctrl_0
 667  8BC9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 668  8BCB AF           	xor a
 669  8BCC 32 E2 89     	ld (Obj_dibujado),a
 670  8BCF
 671  8BCF 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 672  8BD2 CD 6E 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 673  8BD5
 674  8BD5 CD 7E 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 675  8BD8
 676  8BD8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 677  8BD8
 678  8BD8 CD 93 8D     	call Calcula_numero_de_disparotes
 679  8BDB CD 7A 8D     9 call Calcula_numero_de_malotes
 680  8BDE
 681  8BDE CD 3B 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 682  8BE1
 683  8BE1 3E 04        	ld a,4
 684  8BE3 D3 FE        	out ($fe),a
 685  8BE5
 686  8BE5              ; ----------------------------------------
 687  8BE5
 688  8BE5 3A F6 89     	ld a,(Ctrl_1) 										; Existe Loop?
 689  8BE8 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 690  8BEA CA CB 8A     	jp z,Main
 691  8BED
 692  8BED              ; -----
 693  8BED              ;	(((
 694  8BED
 695  8BED 3A 46 8A     	ld a,(Contador_de_frames)
 696  8BF0 47           	ld b,a
 697  8BF1 3A 49 8A     	ld a,(Activa_recarga_cajas)
 698  8BF4 B8           	cp b
 699  8BF5 28 08        	jr z,20F
 700  8BF7
 701  8BF7 21 F6 89     	ld hl,Ctrl_1
 702  8BFA CB E6        	set 4,(hl)
 703  8BFC C3 CB 8A     	jp Main
 704  8BFF
 705  8BFF 21 F6 89     20 ld hl,Ctrl_1
 706  8C02 CB A6        	res 4,(hl)
 707  8C04 F3           	di
 708  8C05
 709  8C05 3A 46 8A     	ld a,(Contador_de_frames)
 710  8C08
 711  8C08              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 712  8C08              ;! _ IMPREDECIBLE !!!!
 713  8C08
 714  8C08 C6 0A        	add 10
 715  8C0A 32 48 8A     	ld (Clock_Entidades_en_curso),a
 716  8C0D
 717  8C0D C3 6A 8A     	jp 4B
 718  8C10
 719  8C10 C9           	ret
 720  8C11
 721  8C11              ; --------------------------------------------------------------------------------------------------------------
 722  8C11              ;
 723  8C11              ;	27/05/23
 724  8C11
 725  8C11              Mov_obj
 726  8C11
 727  8C11              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 728  8C11
 729  8C11 3A F4 89     	ld a,(Ctrl_2)
 730  8C14 CB 4F        	bit 1,a
 731  8C16 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 732  8C18
 733  8C18              ; Explosión:
 734  8C18
 735  8C18 3A F5 89     	ld a,(Frames_explosion)
 736  8C1B A7           	and a
 737  8C1C 20 11        	jr nz,4F
 738  8C1E
 739  8C1E              ; Una alimaña menos!!!!!!!!!1
 740  8C1E
 741  8C1E CD 77 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 742  8C21 21 00 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 743  8C24 35           	dec (hl)
 744  8C25 21 01 8A     	ld hl,Entidades_en_curso
 745  8C28 35           	dec (hl)
 746  8C29 21 FF 89     	ld hl,Numero_de_entidades
 747  8C2C 35           	dec (hl)
 748  8C2D 18 40        	jr 3F
 749  8C2F
 750  8C2F              ; -----
 751  8C2F
 752  8C2F              ;	`Movemos´ la explosión.
 753  8C2F
 754  8C2F 2A C1 89     4 ld hl,(Puntero_DESPLZ_der)
 755  8C32 23           	inc hl
 756  8C33 23           	inc hl
 757  8C34 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 758  8C37 CD AC 8D     	call Extrae_address
 759  8C3A 22 B7 89     	ld (Puntero_objeto),hl
 760  8C3D
 761  8C3D 21 F5 89     	ld hl,Frames_explosion
 762  8C40 35           	dec (hl)
 763  8C41
 764  8C41 CD 9F 8C     	call Guarda_foto_entidad_a_borrar
 765  8C44 18 29        	jr 3F
 766  8C46
 767  8C46 AF           2 xor a
 768  8C47 32 E2 89     	ld (Obj_dibujado),a
 769  8C4A 32 E1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 770  8C4D              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 771  8C4D              ; 														; _de la entidad.
 772  8C4D CD B9 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 773  8C50              ;														; Obj_dibujado="0".
 774  8C50              ; Movemos Entidades malignas.
 775  8C50
 776  8C50              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 777  8C50              ;	and a 												; _a movernos. (Limitador_de_entidades).
 778  8C50              ;	ret z
 779  8C50
 780  8C50 CD 32 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 781  8C53
 782  8C53 3A E1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 783  8C56 CB 67        	bit 4,a
 784  8C58 C8           	ret z
 785  8C59
 786  8C59              ; Ha habido desplazamiento de la entidad maligna.
 787  8C59              ; Ha llegado a zona de AMADEUS ???
 788  8C59
 789  8C59 3A BA 89     	ld a,(Coordenada_y)
 790  8C5C FE 14        	cp $14
 791  8C5E D4 AF 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 792  8C61              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 793  8C61              ; ---------
 794  8C61
 795  8C61 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 796  8C63 32 E2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 797  8C66 CD B9 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 798  8C69 CD D0 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 799  8C6C CD 9F 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 800  8C6F C9           3 ret													; _de la misma.
 801  8C70
 802  8C70              ; --------------------------------------------------------------------------------------------------------------
 803  8C70              ;
 804  8C70              ;	29/1/23
 805  8C70
 806  8C70              Mov_Amadeus
 807  8C70
 808  8C70 AF           	xor a
 809  8C71 32 E2 89     	ld (Obj_dibujado),a
 810  8C74 CD B9 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 811  8C77              ;														; Obj_dibujado="0".
 812  8C77              ; Movemos Amadeus.
 813  8C77
 814  8C77 CD 99 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 815  8C7A 3A E1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 816  8C7D CB 67        	bit 4,a
 817  8C7F C8           	ret z
 818  8C80
 819  8C80              ; ---------
 820  8C80
 821  8C80 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 822  8C82 32 E2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 823  8C85 CD B9 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 824  8C88 CD D0 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 825  8C8B CD 9F 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 826  8C8E C9           	ret													; _de la nave.
 827  8C8F
 828  8C8F              ; -----------------------------------------------------------------------------------
 829  8C8F
 830  8C8F CD B2 8D     Inicia_entidad	call Inicia_Puntero_objeto
 831  8C92 CD E6 99     	call Recompone_posicion_inicio
 832  8C95 CD 08 94     	call Draw
 833  8C98 CD A0 7F     	call Guarda_foto_registros
 834  8C9B CD FA 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 835  8C9E C9           	ret
 836  8C9F
 837  8C9F              ; --------------------------------------------------------------------------------------------------------------
 838  8C9F              ;
 839  8C9F              ;	31/01/23
 840  8C9F              ;
 841  8C9F              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 842  8C9F
 843  8C9F              Guarda_foto_entidad_a_borrar
 844  8C9F
 845  8C9F CD EC 96     	call Prepara_draw
 846  8CA2 CD 1C 96     	call calcula_CColumnass
 847  8CA5 CD 53 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 848  8CA8 CD B2 96     	call Define_rutina_de_impresion
 849  8CAB CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 850  8CAE C9           	ret
 851  8CAF
 852  8CAF              ; --------------------------------------------------------------------------------------------------------------
 853  8CAF              ;
 854  8CAF              ;	31/01/23
 855  8CAF              ;
 856  8CAF              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 857  8CAF              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 858  8CAF
 859  8CAF              Guarda_foto_entidad_a_pintar
 860  8CAF
 861  8CAF CD DC 8C     	call Repone_pintar
 862  8CB2 CD 08 94     	call Draw
 863  8CB5 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 864  8CB8 C9           	ret
 865  8CB9
 866  8CB9              ; --------------------------------------------------------------------------------------------------------------
 867  8CB9              ;
 868  8CB9              ;
 869  8CB9
 870  8CB9 21 B3 89     Prepara_var_pintado_borrado	ld hl,Filas
 871  8CBC 3A E2 89     	ld a,(Obj_dibujado)
 872  8CBF A7           	and a
 873  8CC0 28 05        	jr z,1F
 874  8CC2 11 D7 89     	ld de,Variables_de_pintado
 875  8CC5 18 03        	jr 2F
 876  8CC7 11 CD 89     1 ld de,Variables_de_borrado
 877  8CCA 01 08 00     2 ld bc,8
 878  8CCD ED B0        	ldir
 879  8CCF C9           	ret
 880  8CD0
 881  8CD0              ; --------------------------------------------------------------------------------------------------------------
 882  8CD0
 883  8CD0 21 CD 89     Repone_borrar ld hl,Variables_de_borrado
 884  8CD3 11 B3 89     	ld de,Filas
 885  8CD6 01 08 00     	ld bc,8
 886  8CD9 ED B0        	ldir
 887  8CDB C9           	ret
 888  8CDC
 889  8CDC 21 D7 89     Repone_pintar ld hl,Variables_de_pintado
 890  8CDF 11 B3 89     	ld de,Filas
 891  8CE2 01 08 00     	ld bc,8
 892  8CE5 ED B0        	ldir
 893  8CE7 C9           	ret
 894  8CE8
 895  8CE8              ; *************************************************************************************************************************************************************
 896  8CE8              ;
 897  8CE8              ; 8/1/23
 898  8CE8              ;
 899  8CE8              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 900  8CE8              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 901  8CE8              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 902  8CE8
 903  8CE8              ; Destruye HL y DE !!!!!
 904  8CE8
 905  8CE8              Inicia_punteros_de_cajas
 906  8CE8
 907  8CE8 21 8C 85     	ld hl,Indice_de_cajas
 908  8CEB CD AC 8D         call Extrae_address
 909  8CEE 22 F9 89         ld (Puntero_store_caja),hl
 910  8CF1 21 8E 85     	ld hl,Indice_de_cajas+2
 911  8CF4 22 FD 89     	ld (Indice_restore_caja),hl
 912  8CF7 CD AC 8D     	call Extrae_address
 913  8CFA 22 FB 89     	ld (Puntero_restore_caja),hl
 914  8CFD C9               ret
 915  8CFE
 916  8CFE              ; ---------------------------------------------------------------
 917  8CFE              ;
 918  8CFE              ;	9/8/23
 919  8CFE              ;
 920  8CFE              ;	Inicialización y gestión de álbumes de fotos y cajas.
 921  8CFE
 922  8CFE              Inicia_punteros_de_albumes_y_malotes
 923  8CFE
 924  8CFE 21 EC 84     	ld hl,Indice_album_de_fotos
 925  8D01 22 1F 8A     	ld (Puntero_indice_album_de_fotos),hl
 926  8D04 CD AC 8D     	call Extrae_address
 927  8D07 22 0B 8A     	ld (Stack_snapshot),hl
 928  8D0A
 929  8D0A 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 930  8D0D 22 21 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 931  8D10 CD AC 8D     	call Extrae_address
 932  8D13 22 0D 8A     	ld (Stack_snapshot_disparos),hl
 933  8D16
 934  8D16 21 FC 84     	ld hl,Indice_End_Snapshot
 935  8D19 22 27 8A     	ld (Puntero_indice_End_Snapshot),hl
 936  8D1C CD AC 8D     	call Extrae_address
 937  8D1F 22 2B 8A     	ld (Puntero_de_End_Snapshot),hl
 938  8D22
 939  8D22 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 940  8D25 22 29 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 941  8D28 CD AC 8D     	call Extrae_address
 942  8D2B 22 2D 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 943  8D2E
 944  8D2E 21 19 74     	ld hl,Caja_de_malotes
 945  8D31 22 2F 8A     	ld (Puntero_de_caja_de_malotes),hl
 946  8D34 21 1D 74     	ld hl,Caja_de_disparotes
 947  8D37 22 31 8A     	ld (Puntero_de_caja_de_disparotes),hl
 948  8D3A
 949  8D3A C9           	ret
 950  8D3B
 951  8D3B              Avanza_puntero_de_album_de_fotos_y_malotes
 952  8D3B
 953  8D3B              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 954  8D3B
 955  8D3B              ; Estamos en el último álbum del índice???.
 956  8D3B
 957  8D3B 2A 1F 8A     	ld hl,(Puntero_indice_album_de_fotos)
 958  8D3E 01 F2 84     	ld bc,Indice_album_de_fotos+6
 959  8D41 A7           	and a
 960  8D42 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 961  8D44 20 02        	jr nz,1F								 		; El buffer está lleno. HALT.
 962  8D46
 963  8D46 76           	halt
 964  8D47 C9           	ret
 965  8D48
 966  8D48 2A 1F 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 967  8D4B 23           	inc hl
 968  8D4C 23           	inc hl
 969  8D4D 22 1F 8A     	ld (Puntero_indice_album_de_fotos),hl
 970  8D50 CD AC 8D     	call Extrae_address
 971  8D53 22 0B 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 972  8D56
 973  8D56 2A 27 8A     	ld hl,(Puntero_indice_End_Snapshot)
 974  8D59 23           	inc hl
 975  8D5A 23           	inc hl
 976  8D5B 22 27 8A     	ld (Puntero_indice_End_Snapshot),hl
 977  8D5E CD AC 8D     	call Extrae_address
 978  8D61 22 2B 8A     	ld (Puntero_de_End_Snapshot),hl
 979  8D64
 980  8D64 2A 2F 8A     	ld hl,(Puntero_de_caja_de_malotes)
 981  8D67 23           	inc hl
 982  8D68 22 2F 8A     	ld (Puntero_de_caja_de_malotes),hl				; Seleccionamos la siguente caja.
 983  8D6B
 984  8D6B C9           	ret
 985  8D6C
 986  8D6C              ; *************************************************************************************************************************************************************
 987  8D6C              ;
 988  8D6C              ; 8/1/23
 989  8D6C              ;
 990  8D6C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 991  8D6C
 992  8D6C 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 993  8D6F 22 34 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 994  8D72 C9           	ret
 995  8D73 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 996  8D76 22 36 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 997  8D79 C9           	ret
 998  8D7A
 999  8D7A              ; -------------------------------------------------------------------------------------------------------------
1000  8D7A              ;
1001  8D7A              ; 3/8/23
1002  8D7A              ;
1003  8D7A
1004  8D7A              Calcula_numero_de_malotes
1005  8D7A
1006  8D7A 21 00 70     	ld hl,Album_de_fotos
1007  8D7D EB           	ex de,hl
1008  8D7E 2A 23 8A     	ld hl,(Puntero_de_album_de_fotos)
1009  8D81
1010  8D81 06 00        	ld b,0
1011  8D83 7D           	ld a,l
1012  8D84 93           	sub e
1013  8D85 28 07        	jr z,1F
1014  8D87
1015  8D87              ; Nº de malotes no es "0".
1016  8D87
1017  8D87 D6 06        2 sub 6
1018  8D89 04           	inc b
1019  8D8A A7           	and a
1020  8D8B 20 FA        	jr nz,2B
1021  8D8D 78           	ld a,b
1022  8D8E
1023  8D8E 2A 2F 8A     1 ld hl,(Puntero_de_caja_de_malotes)					; Guardamos nº de malotes en su correspondiente caja.
1024  8D91 77           	ld (hl),a
1025  8D92
1026  8D92 C9           	ret
1027  8D93
1028  8D93              ; -------------------------------------------------------------------------------------------------------------
1029  8D93              ;
1030  8D93              ; 28/2/23
1031  8D93              ;
1032  8D93
1033  8D93              Calcula_numero_de_disparotes
1034  8D93
1035  8D93 21 0D 72     	ld hl,Album_de_fotos_disparos
1036  8D96 EB           	ex de,hl
1037  8D97 2A 0D 8A     	ld hl,(Stack_snapshot_disparos)
1038  8D9A
1039  8D9A 06 00        	ld b,0
1040  8D9C 7D           	ld a,l
1041  8D9D 93           	sub e
1042  8D9E 28 07        	jr z,1F
1043  8DA0
1044  8DA0              ; Nº de malotes no es "0".
1045  8DA0
1046  8DA0 D6 06        2 sub 6
1047  8DA2 04           	inc b
1048  8DA3 A7           	and a
1049  8DA4 20 FA        	jr nz,2B
1050  8DA6 78           	ld a,b
1051  8DA7
1052  8DA7 2A 31 8A     1 	ld hl,(Puntero_de_caja_de_disparotes)
1053  8DAA 77           	ld (hl),a
1054  8DAB
1055  8DAB C9           	ret
1056  8DAC
1057  8DAC              ; *************************************************************************************************************************************************************
1058  8DAC              ;
1059  8DAC              ; 20/10/22
1060  8DAC              ;
1061  8DAC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1062  8DAC              ;
1063  8DAC              ; Destruye el puntero y DE !!!!!
1064  8DAC
1065  8DAC 5E           Extrae_address ld e,(hl)
1066  8DAD 23           	inc hl
1067  8DAE 56           	ld d,(hl)
1068  8DAF 2B           	dec hl
1069  8DB0 EB           	ex de,hl
1070  8DB1 C9           	ret
1071  8DB2
1072  8DB2              ; *************************************************************************************************************************************************************
1073  8DB2              ;
1074  8DB2              ;	7/2/23
1075  8DB2              ;
1076  8DB2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1077  8DB2              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1078  8DB2              ;
1079  8DB2              ;   Destruye HL y BC !!!!!,
1080  8DB2              ;
1081  8DB2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1082  8DB2              ;					"0" ..... Izquierda.
1083  8DB2
1084  8DB2              Inicia_Puntero_objeto
1085  8DB2
1086  8DB2 3A C7 89     	ld a,(Cuad_objeto)
1087  8DB5 E6 01        	and 1
1088  8DB7 F5           	push af
1089  8DB8 CC D6 8D     	call z,Inicia_puntero_objeto_izq
1090  8DBB F1           	pop af
1091  8DBC 28 2B        	jr z,1F
1092  8DBE CD C3 8D     	call Inicia_puntero_objeto_der
1093  8DC1 18 26        	jr 1F
1094  8DC3
1095  8DC3              ; Arrancamos desde la parte izquierda de la pantalla.
1096  8DC3              ; Iniciamos (Indice_Sprite_der).
1097  8DC3
1098  8DC3 2A BD 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1099  8DC6 22 C1 89     	ld (Puntero_DESPLZ_der),hl
1100  8DC9 CD AC 8D     	call Extrae_address
1101  8DCC 22 B7 89     	ld (Puntero_objeto),hl
1102  8DCF
1103  8DCF 2A BF 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1104  8DD2 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
1105  8DD5 C9           	ret
1106  8DD6
1107  8DD6              ; Arrancamos desde la parte derecha de la pantalla.
1108  8DD6              ; Iniciamos (Indice_Sprite_izq).
1109  8DD6
1110  8DD6 2A BF 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1111  8DD9 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
1112  8DDC CD AC 8D     	call Extrae_address
1113  8DDF 22 B7 89     	ld (Puntero_objeto),hl
1114  8DE2
1115  8DE2 2A BD 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1116  8DE5 22 C1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1117  8DE8 C9           	ret
1118  8DE9
1119  8DE9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1120  8DE9
1121  8DE9 21 40 83     1 ld hl,Amadeus
1122  8DEC ED 4B B7 89  	ld bc,(Puntero_objeto)
1123  8DF0 B7 ED 42     	sub hl,bc
1124  8DF3 C0           	ret nz
1125  8DF4 21 E1 89     	ld hl,Ctrl_0
1126  8DF7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1127  8DF9 C9           	ret 												; _de nuestra nave en los extremos.
1128  8DFA
1129  8DFA              ; *************************************************************************************************************************************************************
1130  8DFA              ;
1131  8DFA              ;	14/5/23
1132  8DFA              ;
1133  8DFA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1134  8DFA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1135  8DFA
1136  8DFA              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1137  8DFA              ;	_de la 2ª y 3ª entidad respectivamente.
1138  8DFA
1139  8DFA              Store_Restore_cajas
1140  8DFA
1141  8DFA E5           	push hl
1142  8DFB D5           	push de
1143  8DFC C5            	push bc
1144  8DFD
1145  8DFD              ;	STORE !!!!!
1146  8DFD              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1147  8DFD
1148  8DFD 21 B3 89     	ld hl,Filas
1149  8E00 ED 5B F9 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1150  8E04 01 43 00     	ld bc,67
1151  8E07 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1152  8E09
1153  8E09              ; 	Entidad_sospechosa. 20/4/23
1154  8E09
1155  8E09 3A CC 89     	ld a,(Impacto)
1156  8E0C A7           	and a
1157  8E0D 28 0C        	jr z,1F
1158  8E0F
1159  8E0F 2A F9 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1160  8E12 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1161  8E15 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1162  8E16 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1163  8E18 22 39 8A     	ld (Entidad_sospechosa_de_colision),hl
1164  8E1B
1165  8E1B              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1166  8E1B
1167  8E1B 2A FB 89     1 ld hl,(Puntero_restore_caja)
1168  8E1E 7E           	ld a,(hl)
1169  8E1F A7           	and a
1170  8E20 F5           	push af
1171  8E21 28 08        	jr z,2F
1172  8E23
1173  8E23 11 B3 89     	ld de,Filas
1174  8E26 01 43 00     	ld bc,67
1175  8E29 ED B0        	ldir
1176  8E2B
1177  8E2B CD 47 8E     2 call Incrementa_punteros_de_cajas
1178  8E2E F1           	pop af
1179  8E2F 28 EA        	jr z,1B
1180  8E31
1181  8E31 C1           	pop bc
1182  8E32 D1           	pop de
1183  8E33 E1           	pop hl
1184  8E34
1185  8E34 C9           	ret
1186  8E35
1187  8E35              ; **************************************************************************************************
1188  8E35              ;
1189  8E35              ;	12/05/23
1190  8E35              ;
1191  8E35              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1192  8E35
1193  8E35 E5           Restore_entidad push hl
1194  8E36 D5           	push de
1195  8E37 C5            	push bc
1196  8E38
1197  8E38 2A F9 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1198  8E3B 11 B3 89     	ld de,Filas
1199  8E3E 01 43 00     	ld bc,67
1200  8E41 ED B0        	ldir
1201  8E43
1202  8E43 C1           	pop bc
1203  8E44 D1           	pop de
1204  8E45 E1           	pop hl
1205  8E46 C9           	ret
1206  8E47
1207  8E47
1208  8E47              ; **************************************************************************************************
1209  8E47              ;
1210  8E47              ;	08/05/23
1211  8E47              ;
1212  8E47              ;	Incrementamos los dos punteros de entidades. (+1).
1213  8E47
1214  8E47 2A FB 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1215  8E4A 22 F9 89     	ld (Puntero_store_caja),hl
1216  8E4D 2A FD 89     	ld hl,(Indice_restore_caja)
1217  8E50 23           	inc hl
1218  8E51 23           	inc hl
1219  8E52 22 FD 89     	ld (Indice_restore_caja),hl
1220  8E55 CD AC 8D         call Extrae_address
1221  8E58 22 FB 89         ld (Puntero_restore_caja),hl
1222  8E5B C9               ret
1223  8E5C
1224  8E5C              ; **************************************************************************************************
1225  8E5C              ;
1226  8E5C              ;	25/01/23
1227  8E5C              ;
1228  8E5C              ;	Restore_Amadeus
1229  8E5C              ;
1230  8E5C              ;	Cargamos en DRAW los parámetros de Amadeus.
1231  8E5C              ;
1232  8E5C
1233  8E5C E5           Restore_Amadeus	push hl
1234  8E5D D5           	push de
1235  8E5E C5            	push bc
1236  8E5F 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1237  8E62 11 B3 89     	ld de,Filas
1238  8E65 01 43 00     	ld bc,67
1239  8E68 ED B0        	ldir
1240  8E6A C1           	pop bc
1241  8E6B D1           	pop de
1242  8E6C E1           	pop hl
1243  8E6D C9           	ret
1244  8E6E
1245  8E6E              ; *************************************************************************************************************************************************************
1246  8E6E              ;
1247  8E6E              ;	29/04/23
1248  8E6E              ;
1249  8E6E              ;	Store_Amadeus
1250  8E6E              ;
1251  8E6E              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1252  8E6E              ;
1253  8E6E              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1254  8E6E              ;
1255  8E6E              ;	DESTRUYE: HL y BC y DE.
1256  8E6E
1257  8E6E 21 B3 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1258  8E71 01 43 00     	ld bc,67
1259  8E74 ED B0        	ldir
1260  8E76 C9           	ret
1261  8E77
1262  8E77              ; -----------------------------------------------------------
1263  8E77              ;
1264  8E77              ;	27/04/23
1265  8E77              ;
1266  8E77              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1267  8E77              ;
1268  8E77              ;	Destruye: HL,BC,DE,A
1269  8E77
1270  8E77 21 B3 89     Borra_datos_entidad ld hl,Filas
1271  8E7A 01 42 00     	ld bc,66
1272  8E7D AF           	xor a
1273  8E7E 77           	ld (hl),a
1274  8E7F 11 B4 89     	ld de,Filas+1
1275  8E82 ED B0        	ldir
1276  8E84 C9           	ret
1277  8E85
1278  8E85              ; -----------------------------------------------------------
1279  8E85
1280  8E85              ; Teclado.
1281  8E85
1282  8E85 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1283  8E87 DB FE        	in a,($fe)
1284  8E89 E6 01        	and $01
1285  8E8B 28 02        	jr z,1f
1286  8E8D 18 F6        	jr Pulsa_ENTER
1287  8E8F C9           1 ret
1288  8E90
1289  8E90              ; **************************************************************************************************
1290  8E90              ;
1291  8E90              ; Temporización.
1292  8E90
1293  8E90              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1294  8E90              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1295  8E90              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1296  8E90              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1297  8E90
1298  8E90              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1299  8E90              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1300  8E90              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1301  8E90
1302  8E90              ; A partir de $4f61 no hace falta DELAY.
1303  8E90
1304  8E90              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1305  8E90
1306  8E90 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1307  8E93 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1308  8E94 78           	LD A,B
1309  8E95 A7           	AND A
1310  8E96 20 FB        	JR NZ,wait
1311  8E98 C9           	RET
1312  8E99
1313  8E99              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1314  8E99              ;
1315  8E99              ;	5/3/23
1316  8E99              ;
1317  8E99              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1318  8E99
1319  8E99              Movimiento_Amadeus
1320  8E99
1321  8E99              ; Disparo.
1322  8E99
1323  8E99 3A 4A 8A     	ld a,(Disparo_Amadeus)
1324  8E9C A7           	and a
1325  8E9D 20 02        	jr nz,1F
1326  8E9F 18 15        	jr 2F
1327  8EA1
1328  8EA1 3E F7        1 ld a,$f7													; "5" para disparar.
1329  8EA3 DB FE        	in a,($fe)
1330  8EA5 E6 10        	and $10
1331  8EA7
1332  8EA7 F5           	push af
1333  8EA8 CC 12 8F     	call z,Genera_disparo
1334  8EAB F1           	pop af
1335  8EAC 20 08        	jr nz,2F
1336  8EAE
1337  8EAE 3A 4A 8A     	ld a,(Disparo_Amadeus)
1338  8EB1 EE 01        	xor 1
1339  8EB3 32 4A 8A     	ld (Disparo_Amadeus),a
1340  8EB6
1341  8EB6 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1342  8EB8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1343  8EBA E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1344  8EBC CC A0 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1345  8EBF 3E F7        	ld a,$f7
1346  8EC1 DB FE        	in a,($fe)
1347  8EC3 E6 01        	and $01
1348  8EC5 C8           	ret z
1349  8EC6
1350  8EC6 3E F7        	ld a,$f7
1351  8EC8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1352  8ECA E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1353  8ECC CC 82 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1354  8ECF C9           	ret
1355  8ED0
1356  8ED0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1357  8ED0              ;
1358  8ED0              ;	Rutina provisional para que los malotes cagen balas.
1359  8ED0
1360  8ED0              Detecta_disparo_entidad
1361  8ED0
1362  8ED0 3A 4D 8A     	ld a,(Disparo_entidad)
1363  8ED3 A7           	and a
1364  8ED4 C8           	ret z
1365  8ED5
1366  8ED5              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1367  8ED5
1368  8ED5              ;	ld a,$7f				; Detecta SPACE.
1369  8ED5              ;	in a,($fe)
1370  8ED5              ;	and 1
1371  8ED5              ;	ret nz
1372  8ED5
1373  8ED5              ;	call Genera_disparo
1374  8ED5 C9           	ret
1375  8ED6
1376  8ED6              ; ----------------------------------------------------------------------
1377  8ED6              ;
1378  8ED6              ;	3/8/23
1379  8ED6
1380  8ED6              Frame
1381  8ED6
1382  8ED6              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1383  8ED6              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1384  8ED6
1385  8ED6              ; PINTAMOS.
1386  8ED6
1387  8ED6 F5           	push af
1388  8ED7 C5           	push bc
1389  8ED8 D5           	push de
1390  8ED9 E5           	push hl
1391  8EDA
1392  8EDA 3E 02            ld a,2
1393  8EDC D3 FE            out ($fe),a											; Rojo.
1394  8EDE CD 16 97     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1395  8EE1 CD 59 97     	call Extrae_foto_disparos
1396  8EE4 3E 01            ld a,1
1397  8EE6 D3 FE            out ($fe),a											; Azul.
1398  8EE8
1399  8EE8              ; Gestiona los álbumes de fotos.
1400  8EE8
1401  8EE8 CD 60 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1402  8EEB
1403  8EEB 21 00 70     	ld hl,Album_de_fotos
1404  8EEE 22 0B 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
1405  8EF1              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
1406  8EF1 CD 5D 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1407  8EF4
1408  8EF4 2A 1F 8A     	ld hl,(Puntero_indice_album_de_fotos)
1409  8EF7 2B           	dec hl
1410  8EF8 2B           	dec hl
1411  8EF9 22 1F 8A     	ld (Puntero_indice_album_de_fotos),hl 					; Bajamos el (Puntero_de_album_de_fotos) una posición en el índice.
1412  8EFC CD AC 8D     	call Extrae_address
1413  8EFF 22 0B 8A     	ld (Stack_snapshot),hl
1414  8F02
1415  8F02 2A 2F 8A     	ld hl,(Puntero_de_caja_de_malotes)
1416  8F05 2B           	dec hl
1417  8F06 22 2F 8A     	ld (Puntero_de_caja_de_malotes),hl
1418  8F09
1419  8F09              ; RELOJES.
1420  8F09
1421  8F09 21 46 8A     	ld hl,Contador_de_frames
1422  8F0C 34           	inc (hl)											; 0 - 255
1423  8F0D
1424  8F0D E1           	pop hl
1425  8F0E D1           	pop de
1426  8F0F C1           	pop bc
1427  8F10 F1           	pop af
1428  8F11
1429  8F11 C9           	ret
1430  8F12
1431  8F12              ; ---------------------------------------------------------------
1432  8F12
1433  8F12              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F12              ; ******************************************************************************************************************************************************************************************
   2+ 8F12              ;
   3+ 8F12              ;   21/07/23
   4+ 8F12              ;
   5+ 8F12              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F12              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F12              ;
   8+ 8F12              ;
   9+ 8F12              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F12              ;
  11+ 8F12              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F12              ;               _ hacen las entidades hacia abajo.
  13+ 8F12              ;
  14+ 8F12              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F12              ;
  16+ 8F12              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F12              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F12              ;
  19+ 8F12              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F12              ;           _ la bala.
  21+ 8F12              ;
  22+ 8F12              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F12              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F12              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F12              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F12              ;           _ en el momento de generarse la bala)).
  27+ 8F12
  28+ 8F12              Genera_disparo
  29+ 8F12
  30+ 8F12              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F12              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F12              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F12              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F12              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F12              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F12              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F12
  38+ 8F12              ; Exclusiones:
  39+ 8F12
  40+ 8F12 3A CB 89         ld a,(Vel_down)
  41+ 8F15 47               ld b,a
  42+ 8F16 3A 45 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F19 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F1A D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F1B 3A F0 89         ld a,(Columnas)
  46+ 8F1E 47               ld b,a
  47+ 8F1F 3A B4 89         ld a,(Columns)
  48+ 8F22 B8               cp b
  49+ 8F23 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F24
  51+ 8F24              ; ----- ----- -----
  52+ 8F24
  53+ 8F24 3A E1 89         ld a,(Ctrl_0)
  54+ 8F27 CB 77            bit 6,a
  55+ 8F29 20 06            jr nz,14F
  56+ 8F2B
  57+ 8F2B 3A BA 89         ld a,(Coordenada_y)
  58+ 8F2E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F30 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F31
  61+ 8F31 21 00 80     14 ld hl,Indice_disparo
  62+ 8F34 3A BB 89         ld a,(CTRL_DESPLZ)
  63+ 8F37 4F               ld c,a
  64+ 8F38 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F3A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F3A              ;                                            ""        ""       "f9", B="1"
  67+ 8F3A              ;                                            ""        ""       "fb", B="2"
  68+ 8F3A              ;                                            ""        ""       "fb", B="3"
  69+ 8F3A A7               and a
  70+ 8F3B 28 10            jr z,1F
  71+ 8F3D E6 01            and 1
  72+ 8F3F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F40
  74+ 8F40 79               ld a,c
  75+ 8F41 16 F9            ld d,$f9
  76+ 8F43 23           2 inc hl
  77+ 8F44 23               inc hl
  78+ 8F45 04               inc b
  79+ 8F46 BA               cp d
  80+ 8F47 28 04            jr z,1F
  81+ 8F49 14               inc d
  82+ 8F4A 14               inc d
  83+ 8F4B 18 F6            jr 2B
  84+ 8F4D
  85+ 8F4D CD AC 8D     1 call Extrae_address
  86+ 8F50 E5               push hl
  87+ 8F51 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F53 DD 21 9B 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F57
  90+ 8F57              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F57              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F57
  93+ 8F57 3A E1 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F5A CB 77            bit 6,a
  95+ 8F5C 20 04            jr nz,19F
  96+ 8F5E
  97+ 8F5E AF               xor a
  98+ 8F5F 32 4D 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F62
 100+ 8F62 3A C7 89     19 ld a,(Cuad_objeto)
 101+ 8F65 FE 02            cp 2
 102+ 8F67 38 66            jr c,3F
 103+ 8F69 28 64            jr z,3F
 104+ 8F6B
 105+ 8F6B              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F6B
 107+ 8F6B E6 01            and 1
 108+ 8F6D 28 30            jr z,4F
 109+ 8F6F
 110+ 8F6F              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F6F              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F6F              ;
 113+ 8F6F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F6F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F6F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F6F
 117+ 8F6F 2A B5 89     	ld hl,(Posicion_actual)
 118+ 8F72
 119+ 8F72              ;   Amadeus o entidad ???.
 120+ 8F72
 121+ 8F72 3A E1 89         ld a,(Ctrl_0)
 122+ 8F75 CB 77            bit 6,a
 123+ 8F77 28 0A            jr z,8F
 124+ 8F79
 125+ 8F79              ; 	Dispara Amadeus.
 126+ 8F79
 127+ 8F79 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F7B CD 07 97         call PreviousScan
 129+ 8F7E CD 07 97         call PreviousScan
 130+ 8F81
 131+ 8F81              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F81              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F81              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F81              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F81
 136+ 8F81 18 11            jr 10F
 137+ 8F83
 138+ 8F83              ; 	Dispara Entidad.
 139+ 8F83
 140+ 8F83 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F86              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F86
 143+ 8F86              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F86              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F86
 146+ 8F86 C5               push bc
 147+ 8F87 06 10            ld b,16
 148+ 8F89 CD F8 96     9 call NextScan
 149+ 8F8C 10 FB            djnz 9B
 150+ 8F8E C1               pop bc
 151+ 8F8F CD F9 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F92 18 06            jr 17F
 153+ 8F94
 154+ 8F94              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F94              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F94              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F94              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F94
 159+ 8F94 CD F9 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F97 CD 6E 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F9A              ;                                                      ; _al generar el disparo.
 162+ 8F9A
 163+ 8F9A              ; 	LLegados a este punto tendremos:
 164+ 8F9A              ;
 165+ 8F9A              ;       Puntero_objeto_disparo en IY.
 166+ 8F9A              ;       Rutinas_de_impresion en IX.
 167+ 8F9A              ;       Puntero_de_impresion en HL.
 168+ 8F9A              ;       Impacto/Dirección en BC.
 169+ 8F9A
 170+ 8F9A CD 01 90     17 call Almacena_disparo
 171+ 8F9D 18 52            jr 6F                                             ; RET.
 172+ 8F9F
 173+ 8F9F              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F9F              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F9F              ;
 176+ 8F9F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F9F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F9F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F9F
 180+ 8F9F 2A B5 89     4 ld hl,(Posicion_actual)
 181+ 8FA2
 182+ 8FA2              ;   Amadeus o entidad ???.
 183+ 8FA2
 184+ 8FA2 3A E1 89         ld a,(Ctrl_0)
 185+ 8FA5 CB 77            bit 6,a
 186+ 8FA7 28 0A            jr z,11F
 187+ 8FA9
 188+ 8FA9              ; 	Dispara Amadeus.
 189+ 8FA9
 190+ 8FA9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FAB CD 07 97         call PreviousScan
 192+ 8FAE CD 07 97         call PreviousScan
 193+ 8FB1
 194+ 8FB1              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FB1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FB1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FB1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FB1
 199+ 8FB1 18 11            jr 13F
 200+ 8FB3
 201+ 8FB3              ; 	Dispara Entidad.
 202+ 8FB3
 203+ 8FB3 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FB6              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FB6
 206+ 8FB6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FB6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FB6
 209+ 8FB6 C5               push bc
 210+ 8FB7 06 10            ld b,16
 211+ 8FB9 CD F8 96     12 call NextScan
 212+ 8FBC 10 FB            djnz 12B
 213+ 8FBE C1               pop bc
 214+ 8FBF
 215+ 8FBF CD F2 8F         call Ajusta_disparo_parte_derecha
 216+ 8FC2 18 06            jr 18F
 217+ 8FC4
 218+ 8FC4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FC4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FC4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FC4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FC4
 223+ 8FC4 CD F2 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8FC7 CD 6E 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FCA              ;                                                       ; _al generar el disparo.
 226+ 8FCA
 227+ 8FCA              ; LLegados a este punto tendremos:
 228+ 8FCA              ;
 229+ 8FCA              ;       Puntero_objeto_disparo en IY.
 230+ 8FCA              ;       Rutinas_de_impresion en IX.
 231+ 8FCA              ;       Puntero_de_impresion en HL.
 232+ 8FCA              ;       Impacto/Dirección en BC.
 233+ 8FCA
 234+ 8FCA CD 01 90     18 call Almacena_disparo
 235+ 8FCD 18 22            jr 6F                                               ; RET.
 236+ 8FCF
 237+ 8FCF              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FCF
 239+ 8FCF 28 11        3 jr z,5F
 240+ 8FD1
 241+ 8FD1              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FD1              ;
 243+ 8FD1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FD1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FD1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FD1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FD1
 248+ 8FD1              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FD1              ;	   ""        ""       "f9", B="1"
 250+ 8FD1              ;	   ""        ""       "fb", B="2"
 251+ 8FD1              ; 	   ""        ""       "fb", B="3"
 252+ 8FD1
 253+ 8FD1 2A B5 89     	ld hl,(Posicion_actual)
 254+ 8FD4 CD F8 96     	call NextScan
 255+ 8FD7
 256+ 8FD7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FD7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FD7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FD7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FD7
 261+ 8FD7 CD F9 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FDA
 263+ 8FDA              ; 	No se produce impacto. B="$80"
 264+ 8FDA              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FDA
 266+ 8FDA 01 80 80         ld bc,$8080
 267+ 8FDD
 268+ 8FDD              ; 	LLegados a este punto tendremos:
 269+ 8FDD              ;
 270+ 8FDD              ;       Puntero_objeto_disparo en IY.
 271+ 8FDD              ;       Rutinas_de_impresion en IX.
 272+ 8FDD              ;       Puntero_de_impresion en HL.
 273+ 8FDD              ;       Impacto/Dirección en BC.
 274+ 8FDD
 275+ 8FDD CD 01 90         call Almacena_disparo
 276+ 8FE0 18 0F            jr 6F                                           ; RET.
 277+ 8FE2
 278+ 8FE2              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FE2              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FE2              ;
 281+ 8FE2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FE2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FE2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FE2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FE2
 286+ 8FE2 2A B5 89     5 ld hl,(Posicion_actual)
 287+ 8FE5 CD F8 96     	call NextScan
 288+ 8FE8
 289+ 8FE8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FE8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FE8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FE8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FE8
 294+ 8FE8 CD F2 8F         call Ajusta_disparo_parte_derecha
 295+ 8FEB
 296+ 8FEB              ; 	No se produce impacto. B="$80"
 297+ 8FEB              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FEB
 299+ 8FEB 01 80 80     15 ld bc,$8080
 300+ 8FEE
 301+ 8FEE              ; 	LLegados a este punto tendremos:
 302+ 8FEE              ;
 303+ 8FEE              ;       Puntero_objeto_disparo en IY.
 304+ 8FEE              ;       Rutinas_de_impresion en IX.
 305+ 8FEE              ;       Puntero_de_impresion en HL.
 306+ 8FEE              ;       Impacto/Dirección en BC.
 307+ 8FEE
 308+ 8FEE CD 01 90         call Almacena_disparo
 309+ 8FF1
 310+ 8FF1 C9           6 ret
 311+ 8FF2
 312+ 8FF2              ; ----------------------------------------------------------------
 313+ 8FF2              ;
 314+ 8FF2              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FF2              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FF2              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FF2
 318+ 8FF2 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FF3 FE 02            cp 2
 320+ 8FF5 38 01            jr c,1F
 321+ 8FF7 23               inc hl
 322+ 8FF8 C9           1 ret
 323+ 8FF9
 324+ 8FF9 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FFA FE 01        	cp 1
 326+ 8FFC 20 01        	jr nz,1F
 327+ 8FFE 2B           	dec hl
 328+ 8FFF 2B           1 dec hl
 329+ 9000 C9               ret
 330+ 9001
 331+ 9001              ; ----------------------------------------------------------------
 332+ 9001              ;
 333+ 9001              ;   25/02/23
 334+ 9001              ;
 335+ 9001              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9001              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9001              ;
 338+ 9001              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9001              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9001
 341+ 9001              Almacena_disparo
 342+ 9001
 343+ 9001 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9002 F1               pop af
 345+ 9003 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9004
 347+ 9004 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9005 E6 01            and 1
 349+ 9007 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9009              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9009              ; 	Dispara AMADEUS.
 352+ 9009
 353+ 9009              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9009              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9009              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9009              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9009
 358+ 9009 C5               push bc
 359+ 900A 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 900D 2A 36 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9010 A7               and a
 362+ 9011 ED 42            sbc hl,bc
 363+ 9013 CC 73 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9016 C1               pop bc
 365+ 9017 28 54            jr z,4F
 366+ 9019
 367+ 9019 2A 36 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 901C 23               inc hl
 369+ 901D 23               inc hl
 370+ 901E 22 36 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9021              ;                                                   ; _ Disparo_(+1).
 372+ 9021 18 18            jr 2F
 373+ 9023
 374+ 9023              ; Dispara una entidad.
 375+ 9023
 376+ 9023 C5           1 push bc
 377+ 9024 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9027 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 902A A7               and a
 380+ 902B ED 42            sbc hl,bc
 381+ 902D CC 6C 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9030 C1               pop bc
 383+ 9031 28 3A            jr z,4F
 384+ 9033
 385+ 9033 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9036 23               inc hl
 387+ 9037 23               inc hl
 388+ 9038 22 34 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 903B              ;                                                   ; _ Disparo_(+1).
 390+ 903B CD AC 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 903E              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 903E              ;
 393+ 903E              ;                                                     Puntero_objeto_disparo en IY.
 394+ 903E              ;                                                     Rutinas_de_impresion en IX.
 395+ 903E              ;                                                     Puntero_de_impresion en HL.
 396+ 903E              ;                                                     Impacto/Dirección en BC.
 397+ 903E
 398+ 903E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 903F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9040 23               inc hl                                          ; _ al siguiente.
 401+ 9041 A7               and a
 402+ 9042 20 C0            jr nz,3B
 403+ 9044
 404+ 9044 08               ex af,af
 405+ 9045 ED 73 07 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9049 F9               ld sp,hl
 407+ 904A
 408+ 904A DD E5            push ix                                         ; Rutina de impresión.
 409+ 904C F5               push af                                         ; Puntero de impresión.
 410+ 904D FD E5            push iy                                         ; Puntero objeto.
 411+ 904F C5               push bc                                         ; Control.
 412+ 9050
 413+ 9050 ED 7B 07 8A      ld sp,(Stack)
 414+ 9054
 415+ 9054              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9054
 417+ 9054 21 F6 89     	ld hl,Ctrl_1
 418+ 9057 CB C6        	set 0,(hl)
 419+ 9059
 420+ 9059 DD E5        	push ix
 421+ 905B E1               pop hl
 422+ 905C F5               push af
 423+ 905D DD E1            pop ix
 424+ 905F
 425+ 905F CD A0 7F     	call Guarda_foto_registros
 426+ 9062
 427+ 9062 21 F6 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9065 CB 86        	res 0,(hl)
 429+ 9067
 430+ 9067              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9067              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9067
 433+ 9067 CD 73 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 906A CD 6C 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 906D
 436+ 906D C9           4 ret
 437+ 906E
 438+ 906E              ; ----------------------------------------------------------------
 439+ 906E              ;
 440+ 906E              ;   4/3/23
 441+ 906E              ;
 442+ 906E              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 906E              ;   _ al generarse el disparo.
 444+ 906E              ;
 445+ 906E              ;       "$80" ..... No se produce colisión.
 446+ 906E              ;       "$81" ..... Se produce colisión.
 447+ 906E              ;
 448+ 906E              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 906E              ;         _ que forman el disparo.
 450+ 906E
 451+ 906E
 452+ 906E              Comprueba_Colision
 453+ 906E
 454+ 906E              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 906E
 456+ 906E FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9070 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9071
 459+ 9071 CD A7 90         call Modifica_H_Velocidad_disparo
 460+ 9074
 461+ 9074 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9075 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9077 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9079
 465+ 9079 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 907B CD 97 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 907E
 468+ 907E 7B               ld a,e
 469+ 907F E6 01            and 1
 470+ 9081 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9083              ;                                                  ; _ para activar IMPACTO.
 472+ 9083 E1               pop hl
 473+ 9084 E5               push hl
 474+ 9085 CD F8 96         call NextScan
 475+ 9088
 476+ 9088 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9089 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 908B 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 908D              ;                                                  ; _ 2º scanline si esto es así.
 480+ 908D 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 908F CD 97 90         call Bucle_2
 482+ 9092
 483+ 9092 43           1 ld b,e
 484+ 9093 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9094 FD E1            pop iy
 486+ 9096 C9               ret
 487+ 9097
 488+ 9097              ; ---------- ----------
 489+ 9097
 490+ 9097 06 02        Bucle_2 ld b,2
 491+ 9099 FD 7E 00     2 ld a,(iy)
 492+ 909C A6               and (hl)
 493+ 909D 28 02            jr z,1F
 494+ 909F 1E 81            ld e,$81
 495+ 90A1 23           1 inc hl
 496+ 90A2 FD 23            inc iy
 497+ 90A4 10 F3            djnz 2B
 498+ 90A6 C9               ret
 499+ 90A7
 500+ 90A7              ; ---------- ----------
 501+ 90A7              ;
 502+ 90A7              ;   21/7/23
 503+ 90A7
 504+ 90A7              Modifica_H_Velocidad_disparo
 505+ 90A7
 506+ 90A7 3A 45 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90AA FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90AC D0               ret nc                                         ; _ incrementamos H.
 509+ 90AD 24               inc h
 510+ 90AE
 511+ 90AE C9               ret
 512+ 90AF
 513+ 90AF              ; -------------------------------------------------------------------------------------------------------------
 514+ 90AF              ;
 515+ 90AF              ;   11/04/23
 516+ 90AF              ;
 517+ 90AF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90AF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90AF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90AF              ;
 521+ 90AF              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90AF
 523+ 90AF              Compara_coordenadas_X
 524+ 90AF
 525+ 90AF              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90AF              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90AF
 528+ 90AF              ; Preparamos registros:
 529+ 90AF
 530+ 90AF 21 B9 89         ld hl,Filas+6
 531+ 90B2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90B3 23               inc hl
 533+ 90B4 23               inc hl
 534+ 90B5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90B6 43               ld b,e
 536+ 90B7
 537+ 90B7 21 C7 89         ld hl,Filas+20
 538+ 90BA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90BB 21 40 8A         ld hl,Coordenadas_X_Entidad
 540+ 90BE CD DA 92         call Guarda_coordenadas_X
 541+ 90C1
 542+ 90C1              ; Preparamos registros:
 543+ 90C1
 544+ 90C1 21 AA 85         ld hl,Amadeus_db+6
 545+ 90C4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90C5 23               inc hl
 547+ 90C6 23               inc hl
 548+ 90C7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90C8 7B               ld a,e
 550+ 90C9 08               ex af,af'
 551+ 90CA 21 B8 85         ld hl,Amadeus_db+20
 552+ 90CD 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90CE 21 3D 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90D1 CD DA 92         call Guarda_coordenadas_X
 555+ 90D4
 556+ 90D4              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90D4              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90D4
 559+ 90D4 04               inc b
 560+ 90D5 05               dec b
 561+ 90D6 28 04            jr z,1F
 562+ 90D8 06 03            ld b,3
 563+ 90DA 18 02            jr 2F
 564+ 90DC 06 02        1 ld b,2
 565+ 90DE 08           2 ex af,af'
 566+ 90DF 3C               inc a
 567+ 90E0 3D               dec a
 568+ 90E1 28 04            jr z,5F
 569+ 90E3 0E 03            ld c,3
 570+ 90E5 18 02            jr 6F
 571+ 90E7 0E 02        5 ld c,2
 572+ 90E9 79           6 ld a,c
 573+ 90EA 08               ex af,af'
 574+ 90EB 11 40 8A         ld de,Coordenadas_X_Entidad
 575+ 90EE 1A           4 ld a,(de)
 576+ 90EF 21 3D 8A         ld hl,Coordenadas_X_Amadeus
 577+ 90F2 BE           3 cp (hl)
 578+ 90F3 28 0E            jr z,7F
 579+ 90F5 23               inc hl
 580+ 90F6 0D               dec c
 581+ 90F7 20 F9            jr nz,3B
 582+ 90F9 13               inc de
 583+ 90FA 08               ex af,af'
 584+ 90FB 4F               ld c,a
 585+ 90FC 08               ex af,af'
 586+ 90FD 10 EF            djnz 4B
 587+ 90FF
 588+ 90FF              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90FF
 590+ 90FF CD 16 93     8 call Limpia_Coordenadas_X
 591+ 9102 C9               ret
 592+ 9103
 593+ 9103 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9105 32 CC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9108 21 38 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 910B CB D6            set 2,(hl)
 597+ 910D 18 F0            jr 8B
 598+ 910F
 599+ 910F              ; -----------------------------------------------------------------------
 600+ 910F              ;
 601+ 910F              ;   17/04/23
 602+ 910F              ;
 603+ 910F
 604+ 910F              Detecta_colision_nave_entidad
 605+ 910F
 606+ 910F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 910F
 608+ 910F 2A B5 89         ld hl,(Posicion_actual)
 609+ 9112 CD 53 96         call Calcula_puntero_de_impresion
 610+ 9115
 611+ 9115              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9115              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9115
 614+ 9115 DD E5            push ix
 615+ 9117 E1               pop hl
 616+ 9118 E5               push hl
 617+ 9119
 618+ 9119              ; ----- ----- -----
 619+ 9119 1E 00            ld e,0                                         ; Indica impacto.
 620+ 911B 06 0A            ld b,10
 621+ 911D CD 4D 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9120 7B               ld a,e
 623+ 9121 FE 05            cp 5
 624+ 9123 38 0E            jr c,3F
 625+ 9125
 626+ 9125              ; LLegados a este punto:
 627+ 9125              ;
 628+ 9125              ;   HAY COLISIÓN !!!!!.
 629+ 9125              ;
 630+ 9125              ;   .db (Impacto) de Amadeus a "1".
 631+ 9125              ;   SET el bit3 de (Impacto2).
 632+ 9125              ;
 633+ 9125              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9125
 635+ 9125 21 BD 85         ld hl,Amadeus_db+25
 636+ 9128 36 01            ld (hl),1
 637+ 912A 21 38 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 912D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 912F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9131 18 18            jr 1F
 641+ 9133
 642+ 9133              ; -----
 643+ 9133
 644+ 9133 E1           3 pop hl
 645+ 9134 CD F8 96         call NextScan
 646+ 9137 E5               push hl
 647+ 9138 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9139 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 913B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 913D 30 0C            jr nc,1F
 651+ 913F              ;                                                  ; _ 2º scanline si esto es así.
 652+ 913F 10 DC            djnz 2B
 653+ 9141
 654+ 9141              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9141
 656+ 9141              ; LLegados a este punto:
 657+ 9141              ;
 658+ 9141              ;   NO HAY COLISIÓN !!!!!.
 659+ 9141              ;
 660+ 9141              ;   .db (Impacto) de Amadeus a "0".
 661+ 9141              ;   RES el bit2 de (Impacto2).
 662+ 9141              ;
 663+ 9141              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9141              ;   Lo colocamos a "0".
 665+ 9141
 666+ 9141 21 38 8A         ld hl,Impacto2
 667+ 9144 CB 96            res 2,(hl)
 668+ 9146 2A 39 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9149 36 00            ld (hl),0
 670+ 914B
 671+ 914B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 914C C9               ret
 673+ 914D
 674+ 914D               ; ---------- ----------
 675+ 914D
 676+ 914D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 914E 3A B4 89         ld a,(Columns)
 678+ 9151 47               ld b,a
 679+ 9152 FD 7E 00     2 ld a,(iy)
 680+ 9155 BE               cp (hl)
 681+ 9156 28 01            jr z,1F
 682+ 9158
 683+ 9158 1C               inc e
 684+ 9159
 685+ 9159 23           1 inc hl
 686+ 915A FD 23            inc iy
 687+ 915C 10 F4            djnz 2B
 688+ 915E C1               pop bc
 689+ 915F C9               ret
 690+ 9160
 691+ 9160              ; -------------------------------------------------------------------------------------------------------------
 692+ 9160              ;
 693+ 9160              ;   13/03/23
 694+ 9160              ;
 695+ 9160              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9160              ;
 697+ 9160              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9160
 699+ 9160 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9163 7E               ld a,(hl)
 701+ 9164 A7               and a
 702+ 9165 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9166
 704+ 9166 44               ld b,h
 705+ 9167 4D               ld c,l
 706+ 9168 2A 0D 8A         ld hl,(Stack_snapshot_disparos)
 707+ 916B E5               push hl
 708+ 916C A7               and a
 709+ 916D ED 42            sbc hl,bc
 710+ 916F E5               push hl
 711+ 9170 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9171
 713+ 9171 E1               pop hl
 714+ 9172 54               ld d,h
 715+ 9173 5D               ld e,l
 716+ 9174 1B               dec de
 717+ 9175 ED B8            lddr                                                ; Limpiamos.
 718+ 9177
 719+ 9177 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 917A 22 0D 8A         ld (Stack_snapshot_disparos),hl
 721+ 917D
 722+ 917D C9               ret
 723+ 917E
 724+ 917E              ; -------------------------------------------------------------------------------------------------------------
 725+ 917E              ;
 726+ 917E              ;   18/07/23
 727+ 917E              ;
 728+ 917E
 729+ 917E              Motor_de_disparos
 730+ 917E
 731+ 917E              ; Gestiona DISPAROS DE AMADEUS.
 732+ 917E
 733+ 917E 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9181 2A 36 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9184
 736+ 9184 CD AC 8D     2 call Extrae_address
 737+ 9187 7E               ld a,(hl)
 738+ 9188 A7               and a
 739+ 9189 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 918B
 741+ 918B              ; ----- ----- ----- ----- ----- -----
 742+ 918B
 743+ 918B C5               push bc
 744+ 918C CD 50 92         call foto_disparo_a_borrar
 745+ 918F
 746+ 918F              ; Existe colisión con este disparo???
 747+ 918F
 748+ 918F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9190 7E               ld a,(hl)
 750+ 9191 2B               dec hl
 751+ 9192 E6 01            and 1
 752+ 9194 28 1D            jr z,9F
 753+ 9196
 754+ 9196              ;   En este punto:
 755+ 9196              ;
 756+ 9196              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9196              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9196              ;   _con la entidad).
 759+ 9196              ;
 760+ 9196              ;   Disparo_2A defw 0                                ; Control.
 761+ 9196              ;    defw 0                                          ; Puntero objeto.
 762+ 9196              ;    defw 0                                          ; Puntero de impresión.
 763+ 9196              ;    defw 0                                          ; Rutina de impresión.
 764+ 9196
 765+ 9196 E5               push hl
 766+ 9197
 767+ 9197 06 04            ld b,4
 768+ 9199 23           19 inc hl
 769+ 919A 10 FD            djnz 19B
 770+ 919C
 771+ 919C CD AC 8D         call Extrae_address
 772+ 919F CD 7E 9D         call Genera_coordenadas_disparo
 773+ 91A2
 774+ 91A2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91A2
 776+ 91A2 21 3B 8A         ld hl,Coordenadas_disparo_certero
 777+ 91A5 72               ld (hl),d
 778+ 91A6 23               inc hl
 779+ 91A7 73               ld (hl),e
 780+ 91A8
 781+ 91A8              ; Elimino el disparo de la base de datos.
 782+ 91A8
 783+ 91A8 E1               pop hl
 784+ 91A9 CD CF 92         call Elimina_disparo_de_base_de_datos
 785+ 91AC 21 38 8A         ld hl,Impacto2
 786+ 91AF CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91B1
 788+ 91B1 18 06            jr 11F
 789+ 91B3
 790+ 91B3 CD 79 92     9 call Mueve_disparo
 791+ 91B6 CD 50 92         call foto_disparo_a_borrar
 792+ 91B9
 793+ 91B9 C1           11 pop bc
 794+ 91BA 18 04            jr 7F
 795+ 91BC
 796+ 91BC              ; ----- ----- ----- ----- ----- -----
 797+ 91BC
 798+ 91BC ED 42        1 sbc hl,bc
 799+ 91BE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91C0
 801+ 91C0 2A 36 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91C3 23               inc hl
 803+ 91C4 23               inc hl
 804+ 91C5 22 36 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91C8 18 BA            jr 2B
 806+ 91CA
 807+ 91CA CD 73 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91CD              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91CD
 810+ 91CD              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91CD
 812+ 91CD 01 8A 85         ld bc,Disparo_11
 813+ 91D0 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91D3
 815+ 91D3 CD AC 8D     5 call Extrae_address
 816+ 91D6 7E               ld a,(hl)
 817+ 91D7 A7               and a
 818+ 91D8 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91DA
 820+ 91DA              ; ----- ----- ----- ----- ----- -----
 821+ 91DA
 822+ 91DA C5               push bc
 823+ 91DB CD 50 92         call foto_disparo_a_borrar
 824+ 91DE
 825+ 91DE              ; Existe colisión con este disparo???
 826+ 91DE
 827+ 91DE 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91DF 7E               ld a,(hl)
 829+ 91E0 2B               dec hl
 830+ 91E1 E6 01            and 1
 831+ 91E3 28 4D            jr z,10F
 832+ 91E5
 833+ 91E5              ;! La colisión se produce con Amadeus???
 834+ 91E5              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91E5
 836+ 91E5 E5               push hl
 837+ 91E6
 838+ 91E6 06 04            ld b,4
 839+ 91E8 23           16 inc hl
 840+ 91E9 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91EB
 842+ 91EB CD AC 8D         call Extrae_address
 843+ 91EE CD 7E 9D         call Genera_coordenadas_disparo
 844+ 91F1
 845+ 91F1 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91F2 FE 16            cp $16
 847+ 91F4 38 2A            jr c,15F
 848+ 91F6
 849+ 91F6
 850+ 91F6              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91F6
 852+ 91F6 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91F7
 854+ 91F7              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91F7
 856+ 91F7
 857+ 91F7 2A 43 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91FA
 859+ 91FA              ; Coordenada X de Amadeus en D.
 860+ 91FA
 861+ 91FA 7D               ld a,l
 862+ 91FB E6 1F            and $1F
 863+ 91FD 57               ld d,a
 864+ 91FE
 865+ 91FE 21 AC 85         ld hl,Amadeus_db+8
 866+ 9201 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9202
 868+ 9202 21 3D 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9205 CD DA 92         call Guarda_coordenadas_X
 870+ 9208
 871+ 9208 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9209
 873+ 9209              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9209
 875+ 9209 06 02            ld b,2
 876+ 920B C5           20 push bc
 877+ 920C
 878+ 920C 06 03            ld b,3
 879+ 920E 21 3D 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9211 7E           18 ld a,(hl)
 881+ 9212 BA               cp d
 882+ 9213 20 04            jr nz,17F
 883+ 9215
 884+ 9215              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9215
 886+ 9215 C1               pop bc
 887+ 9216 E1               pop hl
 888+ 9217 18 0D            jr 14F
 889+ 9219
 890+ 9219 23           17 inc hl
 891+ 921A 10 F5            djnz 18B
 892+ 921C
 893+ 921C 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 921D
 895+ 921D C1               pop bc
 896+ 921E 10 EB            djnz 20B
 897+ 9220
 898+ 9220
 899+ 9220              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9220              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9220
 902+ 9220 E1           15 pop hl
 903+ 9221 23               inc hl
 904+ 9222 35               dec (hl)
 905+ 9223 2B               dec hl
 906+ 9224 18 0C            jr 10F
 907+ 9226
 908+ 9226              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9226              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9226
 911+ 9226 E5           14 push hl
 912+ 9227 CD CF 92         call Elimina_disparo_de_base_de_datos
 913+ 922A 21 38 8A         ld hl,Impacto2
 914+ 922D CB CE            set 1,(hl)
 915+ 922F E1               pop hl
 916+ 9230 18 06            jr 12F
 917+ 9232
 918+ 9232              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9232
 920+ 9232 CD 79 92     10 call Mueve_disparo
 921+ 9235 CD 50 92         call foto_disparo_a_borrar
 922+ 9238 C1           12 pop bc
 923+ 9239
 924+ 9239 18 04            jr 8F
 925+ 923B
 926+ 923B              ; ----- ----- ----- ----- ----- -----
 927+ 923B
 928+ 923B ED 42        4 sbc hl,bc
 929+ 923D 28 0A            jr z,6F
 930+ 923F
 931+ 923F 2A 34 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9242 23               inc hl
 933+ 9243 23               inc hl
 934+ 9244 22 34 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9247 18 8A            jr 5B
 936+ 9249
 937+ 9249 CD 6C 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 924C CD 16 93         call Limpia_Coordenadas_X
 939+ 924F C9               ret
 940+ 9250
 941+ 9250              ; ------------------------------------------------------------------
 942+ 9250
 943+ 9250              foto_disparo_a_borrar
 944+ 9250
 945+ 9250 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9251 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9252 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9253
 949+ 9253 E5               push hl
 950+ 9254 23               inc hl
 951+ 9255 23               inc hl
 952+ 9256 ED 73 07 8A      ld (Stack),sp
 953+ 925A F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 925B FD E1            pop iy
 955+ 925D DD E1            pop ix
 956+ 925F E1               pop hl
 957+ 9260 ED 7B 07 8A      ld sp,(Stack)
 958+ 9264 3A F6 89         ld a,(Ctrl_1)
 959+ 9267 CB C7            set 0,a
 960+ 9269 32 F6 89         ld (Ctrl_1),a
 961+ 926C CD A0 7F         call Guarda_foto_registros
 962+ 926F 3A F6 89         ld a,(Ctrl_1)
 963+ 9272 CB 87            res 0,a
 964+ 9274 32 F6 89         ld (Ctrl_1),a
 965+ 9277 E1               pop hl
 966+ 9278 C9               ret
 967+ 9279
 968+ 9279              ;---------------------------------------------------
 969+ 9279              ;
 970+ 9279              ;   18/07/23
 971+ 9279              ;
 972+ 9279
 973+ 9279              Mueve_disparo
 974+ 9279
 975+ 9279              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9279              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9279              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9279
 979+ 9279 E5               push hl
 980+ 927A
 981+ 927A 7E               ld a,(hl)
 982+ 927B
 983+ 927B 06 04            ld b,4
 984+ 927D 23           1 inc hl
 985+ 927E 10 FD            djnz 1B
 986+ 9280
 987+ 9280              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9280
 989+ 9280 CD AC 8D         call Extrae_address
 990+ 9283
 991+ 9283 E6 01            and 1
 992+ 9285 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9287
 994+ 9287              ; Disparo hacia arriba, (Amadeus).
 995+ 9287
 996+ 9287              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9287              ; _ de la dificultad.
 998+ 9287
 999+ 9287 CD 07 97         call PreviousScan
1000+ 928A CD 07 97         call PreviousScan
1001+ 928D CD 07 97         call PreviousScan
1002+ 9290 CD 07 97         call PreviousScan
1003+ 9293
1004+ 9293              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9293
1006+ 9293 7C               ld a,h
1007+ 9294 FE 40            cp $40
1008+ 9296 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9298
1010+ 9298              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9298
1012+ 9298 EB               ex de,hl
1013+ 9299 06 04            ld b,4
1014+ 929B 2B           6 dec hl
1015+ 929C 10 FD            djnz 6B
1016+ 929E
1017+ 929E CD CF 92         call Elimina_disparo_de_base_de_datos
1018+ 92A1 E1               pop hl
1019+ 92A2 18 10            jr 7F
1020+ 92A4
1021+ 92A4              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92A4              ; HL contiene el puntero de impresión del disparo.
1023+ 92A4              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92A4
1025+ 92A4 D5           3 push de
1026+ 92A5 C5               push bc
1027+ 92A6
1028+ 92A6 CD 6E 90         call Comprueba_Colision
1029+ 92A9
1030+ 92A9              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92A9
1032+ 92A9 78               ld a,b
1033+ 92AA
1034+ 92AA C1               pop bc
1035+ 92AB D1               pop de
1036+ 92AC
1037+ 92AC EB               ex de,hl
1038+ 92AD
1039+ 92AD 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92AE 23               inc hl                                      ; _ movimiento.
1041+ 92AF 72               ld (hl),d
1042+ 92B0
1043+ 92B0 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92B1
1045+ 92B1 23               inc hl                                      ; _ en curso.
1046+ 92B2 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92B3 2B               dec hl
1048+ 92B4
1049+ 92B4 C9           7 ret
1050+ 92B5
1051+ 92B5              ; Disparo hacia abajo, (Entidad).
1052+ 92B5
1053+ 92B5 3A 45 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92B8 47               ld b,a
1055+ 92B9
1056+ 92B9 CD F8 96     4 call NextScan
1057+ 92BC 10 FB            djnz 4B
1058+ 92BE
1059+ 92BE              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92BE
1061+ 92BE 7C               ld a,h
1062+ 92BF FE 58            cp $58
1063+ 92C1 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92C3
1065+ 92C3 EB               ex de,hl
1066+ 92C4 06 04            ld b,4
1067+ 92C6 2B           5 dec hl
1068+ 92C7 10 FD            djnz 5B
1069+ 92C9
1070+ 92C9 CD CF 92         call Elimina_disparo_de_base_de_datos
1071+ 92CC E1               pop hl
1072+ 92CD 18 E5            jr 7B
1073+ 92CF
1074+ 92CF              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92CF
1076+ 92CF 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92D2 AF               xor a
1078+ 92D3 77               ld (hl),a
1079+ 92D4 54               ld d,h
1080+ 92D5 5D               ld e,l
1081+ 92D6 13               inc de
1082+ 92D7 ED B0            ldir
1083+ 92D9 C9               ret
1084+ 92DA
1085+ 92DA              ; -----------------------------------------------------------------
1086+ 92DA              ;
1087+ 92DA              ;   19/7/23
1088+ 92DA              ;
1089+ 92DA              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92DA              ;
1091+ 92DA              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92DA              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92DA              ;
1094+ 92DA              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92DA              ;
1096+ 92DA              ;   INPUTS:
1097+ 92DA              ;
1098+ 92DA              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92DA              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92DA
1101+ 92DA              ;   MODIFICA: A, HL, BC y DE.
1102+ 92DA
1103+ 92DA              Guarda_coordenadas_X
1104+ 92DA
1105+ 92DA 7B               ld a,e
1106+ 92DB A7               and a
1107+ 92DC 20 04            jr nz,1F
1108+ 92DE
1109+ 92DE 06 02            ld b,2
1110+ 92E0 18 02            jr 2F
1111+ 92E2
1112+ 92E2 06 03        1 ld b,3
1113+ 92E4 72           2 ld (hl),d
1114+ 92E5 23               inc hl
1115+ 92E6 14               inc d
1116+ 92E7 10 FB            djnz 2B
1117+ 92E9
1118+ 92E9 C9               ret
1119+ 92EA
1120+ 92EA              ; -----------------------------------------------------------------
1121+ 92EA              ;
1122+ 92EA              ;   12/04/23
1123+ 92EA              ;
1124+ 92EA
1125+ 92EA 3A 38 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 92ED A7               and a
1127+ 92EE C8               ret z
1128+ 92EF
1129+ 92EF FE 04            cp 4
1130+ 92F1 20 09            jr nz,1F
1131+ 92F3
1132+ 92F3
1133+ 92F3              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92F3
1135+ 92F3 CD 0F 91         call Detecta_colision_nave_entidad
1136+ 92F6
1137+ 92F6 21 38 8A         ld hl,Impacto2
1138+ 92F9 CB 5E            bit 3,(hl)
1139+ 92FB C0               ret nz                                               ; Existe colisión, RET.
1140+ 92FC
1141+ 92FC              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92FC              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92FC
1144+ 92FC 21 38 8A     1 ld hl,Impacto2
1145+ 92FF CB 4E            bit 1,(hl)
1146+ 9301 28 07            jr z,2F
1147+ 9303
1148+ 9303 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9306 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9308 18 0B            jr 3F
1151+ 930A
1152+ 930A 21 38 8A     2 ld hl,Impacto2
1153+ 930D CB 46            bit 0,(hl)
1154+ 930F C8               ret z
1155+ 9310
1156+ 9310              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9310
1158+ 9310 21 F6 89         ld hl,Ctrl_1
1159+ 9313 CB D6            set 2,(hl)
1160+ 9315
1161+ 9315 C9           3 ret
1162+ 9316
1163+ 9316              ; -----------------------------------------------------------------
1164+ 9316              ;
1165+ 9316              ;   19/7/23
1166+ 9316              ;
1167+ 9316              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9316
1169+ 9316 AF           Limpia_Coordenadas_X xor a
1170+ 9317 06 06            ld b,6
1171+ 9319 21 3D 8A         ld hl,Coordenadas_X_Amadeus
1172+ 931C 77           1 ld (hl),a
1173+ 931D 23               inc hl
1174+ 931E 10 FC            djnz 1B
1175+ 9320 C9               ret
1176+ 9321
1177+ 9321              ; -----------------------------------------------------------------
1178+ 9321              ;
1179+ 9321              ;   25/04/23
1180+ 9321              ;
1181+ 9321
1182+ 9321              Determina_resultado_comparativa
1183+ 9321
1184+ 9321              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9321              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9321              ;
1187+ 9321              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9321              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9321              ;
1190+ 9321              ;   SBC HL,DE
1191+ 9321
1192+ 9321              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9321              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9321
1195+ 9321              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9321              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9321
1198+ 9321
1199+ 9321 3A C7 89         ld a,(Cuad_objeto)
1200+ 9324 FE 02            cp 2
1201+ 9326 28 26            jr z,2F
1202+ 9328 38 24            jr c,2F
1203+ 932A
1204+ 932A              ; Cuadrantes 3º y 4º
1205+ 932A
1206+ 932A E6 01            and 1
1207+ 932C 28 10            jr z,4F
1208+ 932E
1209+ 932E              ; Cuadrante 3º
1210+ 932E
1211+ 932E 7C               ld a,h
1212+ 932F 06 00            ld b,0
1213+ 9331
1214+ 9331 CD BC 93         call Compara_cositas_H3
1215+ 9334
1216+ 9334 04               inc b
1217+ 9335 05               dec b
1218+ 9336 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9337
1220+ 9337 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9338 06 00            ld b,0
1222+ 933A
1223+ 933A CD CE 93         call Compara_cositas_L3
1224+ 933D C9               ret
1225+ 933E
1226+ 933E              ; Cuadrante 4º
1227+ 933E
1228+ 933E 7C           4 ld a,h
1229+ 933F 06 00            ld b,0
1230+ 9341
1231+ 9341 CD E0 93         call Compara_cositas_H4
1232+ 9344
1233+ 9344 04               inc b
1234+ 9345 05               dec b
1235+ 9346 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9347
1237+ 9347 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9348 06 00            ld b,0
1239+ 934A
1240+ 934A CD F6 93         call Compara_cositas_L4
1241+ 934D C9               ret
1242+ 934E
1243+ 934E              ; Cuadrantes 1º y 2º.
1244+ 934E
1245+ 934E 28 10        2 jr z,3F
1246+ 9350
1247+ 9350              ; 1er Cuadrante
1248+ 9350
1249+ 9350 7C               ld a,h
1250+ 9351 06 00            ld b,0
1251+ 9353
1252+ 9353 CD 94 93         call Compara_cositas_H1
1253+ 9356
1254+ 9356 04               inc b
1255+ 9357 05               dec b
1256+ 9358 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9359
1258+ 9359 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 935A 06 00            ld b,0
1260+ 935C
1261+ 935C CD AA 93         call Compara_cositas_L1
1262+ 935F C9               ret
1263+ 9360
1264+ 9360
1265+ 9360              ; 2º Cuadrante
1266+ 9360
1267+ 9360 7C           3 ld a,h
1268+ 9361 06 00            ld b,0
1269+ 9363
1270+ 9363 CD 70 93         call Compara_cositas_H2
1271+ 9366
1272+ 9366 04               inc b
1273+ 9367 05               dec b
1274+ 9368 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9369
1276+ 9369 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 936A 06 00            ld b,0
1278+ 936C
1279+ 936C CD 82 93         call Compara_cositas_L2
1280+ 936F C9               ret
1281+ 9370
1282+ 9370 A7           Compara_cositas_H2 and a
1283+ 9371 28 0D            jr z,1F
1284+ 9373              ;    cp $fd
1285+ 9373              ;    jr z,1F
1286+ 9373              ;    cp $fe
1287+ 9373              ;    jr z,1F
1288+ 9373 FE FF            cp $ff
1289+ 9375 28 09            jr z,1F
1290+ 9377 FE 01            cp $01
1291+ 9379 28 05            jr z,1F
1292+ 937B FE 02            cp $02
1293+ 937D 28 01            jr z,1F
1294+ 937F C0               ret nz
1295+ 9380 04           1 inc b
1296+ 9381 C9               ret
1297+ 9382
1298+ 9382 A7           Compara_cositas_L2 and a
1299+ 9383 28 0D            jr z,1F
1300+ 9385              ;    cp $fd
1301+ 9385              ;    jr z,1F
1302+ 9385 FE FE            cp $fe
1303+ 9387 28 09            jr z,1F
1304+ 9389 FE FF            cp $ff
1305+ 938B 28 05            jr z,1F
1306+ 938D FE 01            cp $01
1307+ 938F 28 01            jr z,1F
1308+ 9391              ;    cp $02
1309+ 9391              ;    jr z,1F
1310+ 9391 C0               ret nz
1311+ 9392 04           1 inc b
1312+ 9393 C9               ret
1313+ 9394
1314+ 9394 A7           Compara_cositas_H1 and a
1315+ 9395 28 11            jr z,1F
1316+ 9397              ;    cp $fd
1317+ 9397              ;    jr z,1F
1318+ 9397              ;    cp $fe
1319+ 9397              ;    jr z,1F
1320+ 9397 FE FF            cp $ff
1321+ 9399 28 0D            jr z,1F
1322+ 939B FE 01            cp $01
1323+ 939D 28 09            jr z,1F
1324+ 939F FE 02            cp $02
1325+ 93A1 28 05            jr z,1F
1326+ 93A3 FE 03            cp $03
1327+ 93A5 28 01            jr z,1F
1328+ 93A7 C0               ret nz
1329+ 93A8 04           1 inc b
1330+ 93A9 C9               ret
1331+ 93AA
1332+ 93AA A7           Compara_cositas_L1 and a
1333+ 93AB 28 0D            jr z,1F
1334+ 93AD              ;    cp $fd
1335+ 93AD              ;    jr z,1F
1336+ 93AD              ;    cp $fe
1337+ 93AD              ;    jr z,1F
1338+ 93AD              ;    cp $ff
1339+ 93AD              ;    jr z,1F
1340+ 93AD FE 01            cp $01
1341+ 93AF 28 09            jr z,1F
1342+ 93B1 FE 02            cp $02
1343+ 93B3 28 05            jr z,1F
1344+ 93B5 FE 03            cp $03
1345+ 93B7 28 01            jr z,1F
1346+ 93B9 C0               ret nz
1347+ 93BA 04           1 inc b
1348+ 93BB C9               ret
1349+ 93BC
1350+ 93BC A7           Compara_cositas_H3 and a
1351+ 93BD 28 0D            jr z,1F
1352+ 93BF              ;    cp $fd
1353+ 93BF              ;    jr z,1F
1354+ 93BF FE FE            cp $fe
1355+ 93C1 28 09            jr z,1F
1356+ 93C3 FE FF            cp $ff
1357+ 93C5 28 05            jr z,1F
1358+ 93C7 FE 01            cp $01
1359+ 93C9 28 01            jr z,1F
1360+ 93CB              ;    cp $02
1361+ 93CB              ;    jr z,1F
1362+ 93CB              ;    cp $03
1363+ 93CB              ;    jr z,1F
1364+ 93CB C0               ret nz
1365+ 93CC 04           1 inc b
1366+ 93CD C9               ret
1367+ 93CE
1368+ 93CE A7           Compara_cositas_L3 and a
1369+ 93CF 28 0D            jr z,1F
1370+ 93D1              ;    cp $fd
1371+ 93D1              ;    jr z,1F
1372+ 93D1              ;    cp $fe
1373+ 93D1              ;    jr z,1F
1374+ 93D1              ;    cp $ff
1375+ 93D1              ;    jr z,1F
1376+ 93D1 FE 01            cp $01
1377+ 93D3 28 09            jr z,1F
1378+ 93D5 FE 02            cp $02
1379+ 93D7 28 05            jr z,1F
1380+ 93D9 FE 03            cp $03
1381+ 93DB 28 01            jr z,1F
1382+ 93DD C0               ret nz
1383+ 93DE 04           1 inc b
1384+ 93DF C9               ret
1385+ 93E0
1386+ 93E0 A7           Compara_cositas_H4 and a
1387+ 93E1 28 11            jr z,1F
1388+ 93E3 FE FD            cp $fd
1389+ 93E5 28 0D            jr z,1F
1390+ 93E7 FE FE            cp $fe
1391+ 93E9 28 09            jr z,1F
1392+ 93EB FE FF            cp $ff
1393+ 93ED 28 05            jr z,1F
1394+ 93EF FE 01            cp $01
1395+ 93F1 28 01            jr z,1F
1396+ 93F3              ;    cp $02
1397+ 93F3              ;    jr z,1F
1398+ 93F3              ;    cp $03
1399+ 93F3              ;    jr z,1F
1400+ 93F3 C0               ret nz
1401+ 93F4 04           1 inc b
1402+ 93F5 C9               ret
1403+ 93F6
1404+ 93F6 A7           Compara_cositas_L4 and a
1405+ 93F7 28 0D            jr z,1F
1406+ 93F9              ;    cp $fd
1407+ 93F9              ;    jr z,1F
1408+ 93F9 FE FE            cp $fe
1409+ 93FB 28 09            jr z,1F
1410+ 93FD FE FF            cp $ff
1411+ 93FF 28 05            jr z,1F
1412+ 9401 FE 01            cp $01
1413+ 9403 28 01            jr z,1F
1414+ 9405              ;    cp $02
1415+ 9405              ;    jr z,1F
1416+ 9405              ;    cp $03
1417+ 9405              ;    jr z,1F
1418+ 9405 C0               ret nz
1419+ 9406 04           1 inc b
1420+ 9407 C9               ret
# file closed: Disparo.asm
1434  9408              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9408              ; ******************************************************************************************************************************************************************************************
   2+ 9408              ;
   3+ 9408              ; 26/06/23
   4+ 9408              ;
   5+ 9408              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9408
   7+ 9408 CD EC 96     Draw call Prepara_draw
   8+ 940B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 940C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 940D 28 05        	jr z,2F
  11+ 940F
  12+ 940F 3A C7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9412 18 0C        	jr 1F
  14+ 9414
  15+ 9414 2A C5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9417 22 B5 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 941A CD A9 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 941D              ;													; _la esquina superior izquierda de la pantalla.
  19+ 941D CD FA 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9420
  21+ 9420 3A E1 89     1 ld a,(Ctrl_0)
  22+ 9423 CB 6F        	bit 5,a
  23+ 9425 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9427
  25+ 9427 CD 3F 94     	call Comprueba_limite_horizontal
  26+ 942A CD CF 94     	call Comprueba_limite_vertical
  27+ 942D
  28+ 942D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 942D              ; -----------------------
  30+ 942D              ; -----------------------
  31+ 942D              ; -----------------------
  32+ 942D
  33+ 942D CD 1C 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9430 CD 53 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9433 CD B2 96     	call Define_rutina_de_impresion
  36+ 9436
  37+ 9436 3A E1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9439 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 943B 32 E1 89     	ld (Ctrl_0),a
  40+ 943E
  41+ 943E C9           	ret
  42+ 943F
  43+ 943F              ; *******************************************************************************************************************************************************************************************
  44+ 943F              ;	21/01/23
  45+ 943F              ;
  46+ 943F              ; 	Comprueba_limite_horizontal.
  47+ 943F              ;
  48+ 943F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 943F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 943F              ;
  51+ 943F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 943F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 943F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 943F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 943F
  56+ 943F
  57+ 943F
  58+ 943F 3A E1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9442 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9444 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9446 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9448 32 E1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 944B 18 09            jr 6F
  64+ 944D CB 5F        1 bit 3,a
  65+ 944F 28 0A            jr z,2F
  66+ 9451 E6 F7            and $f7
  67+ 9453 32 E1 89         ld (Ctrl_0),a
  68+ 9456 CD A9 95     6 call Inicializacion
  69+ 9459 18 5B            jr 5F
  70+ 945B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 945C
  72+ 945C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 945C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 945C
  75+ 945C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 945D 2A F1 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9460 CD C8 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9463 67           	ld h,a
  79+ 9464 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9465 CD C8 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9468 67           	ld h,a
  82+ 9469 A7           	and a
  83+ 946A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 946C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 946D 3A C7 89     	ld a,(Cuad_objeto)
  86+ 9470 FE 02        	cp 2
  87+ 9472 38 1E        	jr c,3F
  88+ 9474 28 1C        	jr z,3F
  89+ 9476 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9477 28 23            jr z,7F
  91+ 9479 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 947B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 947D E1           	pop hl
  94+ 947E
  95+ 947E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 947E              ; _para indicar con E="2" en caso necesario.
  97+ 947E
  98+ 947E E5               push hl
  99+ 947F C5               push bc
 100+ 9480 CD C8 99     	call calcula_tercio
 101+ 9483 FE 01        	cp 1
 102+ 9485 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9487 CD B7 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 948A 28 26            jr z,9F
 105+ 948C 38 24            jr c,9F
 106+ 948E 1E 00        11 ld e,0
 107+ 9490 18 22            jr 8F
 108+ 9492 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9493 28 07        	jr z, 7F
 110+ 9495 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9497 1E 00         	ld e,0
 112+ 9499 E1           	pop hl
 113+ 949A 18 04        	jr 4F
 114+ 949C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 949E 18 15            jr 10F
 116+ 94A0
 117+ 94A0              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94A0              ; _para indicar con E="2" en caso necesario.
 119+ 94A0
 120+ 94A0 E5           4 push hl
 121+ 94A1 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94A2 CD C8 99     	call calcula_tercio
 123+ 94A5 FE 01        	cp 1
 124+ 94A7 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94A9 CD B7 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94AC 28 04            jr z,9F
 127+ 94AE 30 02            jr nc,9F
 128+ 94B0 18 02        	jr 8F
 129+ 94B2 1E 02        9 ld e,2
 130+ 94B4 C1           8 pop bc
 131+ 94B5 E1           10 pop hl
 132+ 94B6 C9           5 ret
 133+ 94B7
 134+ 94B7              ; --------------------
 135+ 94B7              ;
 136+ 94B7              ; 25/08/22
 137+ 94B7
 138+ 94B7 CD C8 99     Comprueba_centro call calcula_tercio
 139+ 94BA 67               ld h,a
 140+ 94BB 08           	ex af,af
 141+ 94BC FE 02        	cp 2
 142+ 94BE 38 07        	jr c,1F
 143+ 94C0 28 05        	jr z,1F
 144+ 94C2 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94C5 18 03        	jr 2F
 146+ 94C7 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94CA 08           2 ex af,af
 148+ 94CB A7               and a
 149+ 94CC ED 42            sbc hl,bc
 150+ 94CE C9               ret
 151+ 94CF
 152+ 94CF              ; *********************************************************************************************************************************************************************************************
 153+ 94CF              ;
 154+ 94CF              ;   16/8/22
 155+ 94CF              ;
 156+ 94CF              ;	Comprueba_limite_vertical
 157+ 94CF              ;
 158+ 94CF              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94CF              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94CF              ;
 161+ 94CF
 162+ 94CF 2A B5 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94D2 7D           	ld a,l
 164+ 94D3 E6 1F        	and $1F
 165+ 94D5 57           	ld d,a
 166+ 94D6 3A F3 89     	ld a,(Limite_vertical)
 167+ 94D9 BA           	cp d 											; Límite - Posición.
 168+ 94DA 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94DB 3A C7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94DE CB 47        	bit 0,a
 171+ 94E0 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94E2
 173+ 94E2              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94E2
 175+ 94E2 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94E3 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94E5
 178+ 94E5              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94E5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94E5
 181+ 94E5 3A B9 89         ld a,(Coordenada_X)
 182+ 94E8 16 0F            ld d,Centro_izquierda
 183+ 94EA A7               and a
 184+ 94EB 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94EC 28 1E            jr z,3F
 186+ 94EE 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94F0              ;                                                    ; _salimos sin modificar nada.
 188+ 94F0 18 0E            jr 2F
 189+ 94F2 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94F3 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94F5
 192+ 94F5              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94F5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94F5
 195+ 94F5 3A B9 89         ld a,(Coordenada_X)
 196+ 94F8 16 10            ld d,Centro_derecha
 197+ 94FA A7               and a
 198+ 94FB 92               sub d
 199+ 94FC 28 0E            jr z,3F
 200+ 94FE 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9500              ;                                                    ; _salimos sin modificar nada.
 202+ 9500 CB 43        2 bit 0,e
 203+ 9502 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9504 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9505 CD 99 95         call Modificaccionne
 206+ 9508 C1           	pop bc
 207+ 9509 CD A9 95         call Inicializacion
 208+ 950C C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 950D
 210+ 950D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 950D
 212+ 950D C5           4 push bc
 213+ 950E 01 B4 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9511 0A           	ld a,(bc)
 215+ 9512 3D           	dec a
 216+ 9513 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9514 7D           	ld a,l
 218+ 9515 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9516 CB 47        	bit 0,a
 220+ 9518 28 03        	jr z,5F
 221+ 951A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 951B 18 2E        	jr 7F
 223+ 951D
 224+ 951D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 951D
 226+ 951D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 951E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 951F 3A E1 89     	ld a,(Ctrl_0)
 229+ 9522 CB 4F        	bit 1,a
 230+ 9524 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9526 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9527
 233+ 9527              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9527
 235+ 9527 1C               inc e
 236+ 9528 1D               dec e
 237+ 9529 20 07            jr nz,12F
 238+ 952B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 952C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 952D 22 B5 89     	ld (Posicion_actual),hl
 241+ 9530 18 44        13 jr 9F
 242+ 9532 CB 43        12 bit 0,e
 243+ 9534 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9536              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9536 C1           	pop bc
 246+ 9537 18 D3        	jr 3B
 247+ 9539 80           14 add b
 248+ 953A 6F               ld l,a
 249+ 953B 22 B5 89     	ld (Posicion_actual),hl
 250+ 953E CD 99 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9541 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9543 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9545 32 E1 89         ld (Ctrl_0),a
 254+ 9548 F1           	pop af
 255+ 9549 18 2B        	jr 9F
 256+ 954B
 257+ 954B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 954B
 259+ 954B F5           7 push af
 260+ 954C 3A E1 89     	ld a,(Ctrl_0)
 261+ 954F CB 47        	bit 0,a
 262+ 9551 20 1D        	jr nz,8F
 263+ 9553 F1           	pop af
 264+ 9554
 265+ 9554              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9554
 267+ 9554 1C           	inc e
 268+ 9555 1D               dec e
 269+ 9556 20 07            jr nz,10F
 270+ 9558 90           	sub b
 271+ 9559 6F               ld l,a
 272+ 955A 22 B5 89     	ld (Posicion_actual),hl
 273+ 955D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 955F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 955F CB 43        10 bit 0,e
 276+ 9561 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9563              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9563 C1           	pop bc
 279+ 9564 18 A6        	jr 3B
 280+ 9566 90           16 sub b
 281+ 9567 6F               ld l,a
 282+ 9568 22 B5 89     	ld (Posicion_actual),hl
 283+ 956B CD 99 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 956E 18 06            jr 9F
 285+ 9570 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9572 32 E1 89         ld (Ctrl_0),a
 287+ 9575 F1           	pop af
 288+ 9576 C1           9 pop bc
 289+ 9577 1E 00        	ld e,0
 290+ 9579 CD A9 95         call Inicializacion
 291+ 957C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 957D 08           	ex af,af
 293+ 957E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 957F 18 8B            jr 3B
 295+ 9581
 296+ 9581              ; --------------------
 297+ 9581
 298+ 9581 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9583 CD 07 97     1 call PreviousScan
 300+ 9586 10 FB            djnz 1B
 301+ 9588 22 B5 89     	ld (Posicion_actual),hl
 302+ 958B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 958C C9           	ret
 304+ 958D
 305+ 958D              ; --------------------
 306+ 958D
 307+ 958D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 958F CD F8 96     1 call NextScan
 309+ 9592 10 FB            djnz 1B
 310+ 9594 22 B5 89     	ld (Posicion_actual),hl
 311+ 9597 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9598 C9           	ret
 313+ 9599
 314+ 9599              ; --------------------
 315+ 9599              ;
 316+ 9599              ;	22/01/23
 317+ 9599              ;
 318+ 9599              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9599              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9599              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9599
 322+ 9599
 323+ 9599              Modificaccionne
 324+ 9599
 325+ 9599 3A C7 89     	ld a,(Cuad_objeto)
 326+ 959C FE 02        	cp 2
 327+ 959E CC 81 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95A1 DC 81 95         call c,Modifica_Pos_actual
 329+ 95A4 C8           	ret z
 330+ 95A5 CD 8D 95         call Modifica_Pos_actual2
 331+ 95A8 C9               ret
 332+ 95A9
 333+ 95A9              ; *************************************************************************************************************************************************************************************************
 334+ 95A9              ;
 335+ 95A9              ;	13/8/22
 336+ 95A9              ;
 337+ 95A9              ;	Inicializacion
 338+ 95A9              ;
 339+ 95A9              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95A9              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95A9              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95A9              ;
 343+ 95A9              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95A9              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95A9              ;	_ desaparece/aparece.
 346+ 95A9
 347+ 95A9              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95A9              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95A9              ;
 350+ 95A9              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95A9              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95A9              ; 		   [E] ="0"
 353+ 95A9
 354+ 95A9              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95A9
 356+ 95A9 CD C8 99     Inicializacion call calcula_tercio
 357+ 95AC 28 36        	jr z,primit
 358+ 95AE E6 02        	and 2
 359+ 95B0 20 07        	jr nz,segmit
 360+ 95B2 7D           	ld a,l
 361+ 95B3 FE 7F        	cp $7f
 362+ 95B5 38 2D        	jr c,primit
 363+ 95B7 28 2B        	jr z,primit
 364+ 95B9 CD 16 96     segmit call column
 365+ 95BC 38 13        	jr c,tercuad
 366+ 95BE 3E 04        cuarcuad ld a,4
 367+ 95C0 32 C7 89     	ld (Cuad_objeto),a
 368+ 95C3 21 20 48     	ld hl,$4820
 369+ 95C6 22 F1 89     	ld (Limite_horizontal),hl
 370+ 95C9 21 F3 89     	ld hl,Limite_vertical
 371+ 95CC 36 0D        	ld (hl),$0d
 372+ 95CE 08           	ex af,af
 373+ 95CF 18 3C        	jr 1F
 374+ 95D1              tercuad
 375+ 95D1 3E 03        	ld a,3
 376+ 95D3 32 C7 89     	ld (Cuad_objeto),a
 377+ 95D6 21 20 48     	ld hl,$4820
 378+ 95D9 22 F1 89     	ld (Limite_horizontal),hl
 379+ 95DC 21 F3 89     	ld hl,Limite_vertical
 380+ 95DF 36 12        	ld (hl),$12
 381+ 95E1 08           	ex af,af
 382+ 95E2 18 29        	jr 1F
 383+ 95E4 CD 16 96     primit call column
 384+ 95E7 38 13        	jr c, primcuad
 385+ 95E9              segcuad
 386+ 95E9 3E 02        	ld a,2
 387+ 95EB 32 C7 89     	ld (Cuad_objeto),a
 388+ 95EE 21 C0 4F     	ld hl,$4fc0
 389+ 95F1 22 F1 89     	ld (Limite_horizontal),hl
 390+ 95F4 21 F3 89     	ld hl,Limite_vertical
 391+ 95F7 36 0D        	ld (hl),$0d
 392+ 95F9 08           	ex af,af
 393+ 95FA 18 11        	jr 1F
 394+ 95FC              primcuad
 395+ 95FC 3E 01        	ld a,1
 396+ 95FE 32 C7 89     	ld (Cuad_objeto),a
 397+ 9601 21 C0 4F     	ld hl,$4fc0
 398+ 9604 22 F1 89     	ld (Limite_horizontal),hl
 399+ 9607 21 F3 89     	ld hl,Limite_vertical
 400+ 960A 36 12        	ld (hl),$12
 401+ 960C 08           	ex af,af
 402+ 960D CD 53 9D     1 call Genera_coordenadas
 403+ 9610 21 E1 89     	ld hl,Ctrl_0
 404+ 9613 CB EE        	set 5,(hl)
 405+ 9615 C9           	ret
 406+ 9616
 407+ 9616              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9616
 409+ 9616              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9616              ;
 411+ 9616              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9616
 413+ 9616 7D           column ld a,l
 414+ 9617 E6 1F        	and $1f
 415+ 9619 FE 10         	cp $10
 416+ 961B C9            	ret
 417+ 961C
 418+ 961C              ; --------------------------------------------------------------------------------------------------------------------
 419+ 961C              ;
 420+ 961C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 961C              ;
 422+ 961C              ; 14/12/22
 423+ 961C              ;
 424+ 961C              ;	Modifica: A y BC.
 425+ 961C
 426+ 961C 3A C7 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 961F E6 01        	and 1
 428+ 9621 28 17        	jr z,1F
 429+ 9623
 430+ 9623              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9623
 432+ 9623 3A B9 89     	ld a,(Coordenada_X)
 433+ 9626 47           	ld b,a
 434+ 9627 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9628 79           	ld a,c
 436+ 9629 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 962A 38 08        	jr c,2F
 438+ 962C 47           	ld b,a
 439+ 962D 79           	ld a,c
 440+ 962E 90           	sub b
 441+ 962F 32 F0 89     	ld (Columnas),a
 442+ 9632 18 1B        	jr 4F
 443+ 9634 79           2 ld a,c
 444+ 9635 32 F0 89     	ld (Columnas),a
 445+ 9638 18 15        	jr 4F
 446+ 963A
 447+ 963A              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 963A
 449+ 963A 3A B9 89     1 ld a,(Coordenada_X)
 450+ 963D 81           	add c
 451+ 963E 3D           	dec a
 452+ 963F D6 1F        	sub $1f
 453+ 9641 38 08        	jr c,3F
 454+ 9643 47           	ld b,a
 455+ 9644 79           	ld a,c
 456+ 9645 90           	sub b
 457+ 9646 32 F0 89     	ld (Columnas),a
 458+ 9649 18 04        	jr 4F
 459+ 964B 79           3 ld a,c
 460+ 964C 32 F0 89     	ld (Columnas),a
 461+ 964F D9           4 exx
 462+ 9650 4F           	ld c,a
 463+ 9651 D9           	exx
 464+ 9652 C9            ret
 465+ 9653
 466+ 9653              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9653              ;
 468+ 9653              ;   19/7/23
 469+ 9653              ;
 470+ 9653              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9653              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9653              ;
 473+ 9653              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9653              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9653              ;
 476+ 9653              ;	DESTRUYE: HL,B Y A.
 477+ 9653
 478+ 9653 3A C7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9656 FE 02        	cp 2
 480+ 9658 38 18        	jr c,1F
 481+ 965A 28 16        	jr z,1F
 482+ 965C E6 01        	and 1
 483+ 965E 28 0D        	jr z,3F
 484+ 9660
 485+ 9660              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9660
 487+ 9660 CD A6 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9663
 489+ 9663 7D           9 ld a,l
 490+ 9664 E6 1F        	and $1f
 491+ 9666 28 2A        	jr z,7F
 492+ 9668 2B           	dec hl
 493+ 9669 10 F8        	djnz 9B
 494+ 966B 18 25        	jr 7F
 495+ 966D
 496+ 966D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 966D
 498+ 966D 2A B5 89     3 ld hl,(Posicion_actual)
 499+ 9670 18 20        	jr 7F
 500+ 9672
 501+ 9672 28 14        1 jr z,2F
 502+ 9674
 503+ 9674              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9674
 505+ 9674 CD A6 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9677
 507+ 9677 7D           4 ld a,l
 508+ 9678 E6 1F        	and $1f
 509+ 967A 28 03        	jr z,6F
 510+ 967C 2B           	dec hl
 511+ 967D 10 F8        	djnz 4B
 512+ 967F 06 0F        6 ld b,15
 513+ 9681 CD 07 97     5 call PreviousScan
 514+ 9684 10 FB        	djnz 5B
 515+ 9686 18 0A        	jr 7F
 516+ 9688
 517+ 9688              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9688
 519+ 9688 CD A6 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 968B 06 0F        	ld b,15
 521+ 968D CD 07 97     8 call PreviousScan
 522+ 9690 10 FB        	djnz 8B
 523+ 9692
 524+ 9692 E5           7 push hl
 525+ 9693 DD E1        	pop ix
 526+ 9695
 527+ 9695 2A B7 89     	ld hl,(Puntero_objeto)
 528+ 9698 E5           	push hl
 529+ 9699 FD E1        	pop iy
 530+ 969B
 531+ 969B              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 969B
 533+ 969B 3A E1 89     	ld a,(Ctrl_0)
 534+ 969E CB 77        	bit 6,a
 535+ 96A0 C8           	ret z
 536+ 96A1
 537+ 96A1              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96A1              ; _ entidad / Amadeus´.
 539+ 96A1
 540+ 96A1 DD 22 43 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96A5
 542+ 96A5 C9           	ret
 543+ 96A6
 544+ 96A6              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96A6              ;
 546+ 96A6              ;	2/1/23
 547+ 96A6              ;
 548+ 96A6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96A6              ;
 550+ 96A6              ;	Tras esta rutina tenemos:
 551+ 96A6              ;
 552+ 96A6              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96A6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96A6              ;
 555+ 96A6              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96A6
 557+ 96A6 2A B5 89     Operandos ld hl,(Posicion_actual)
 558+ 96A9 3A F0 89     	ld a,(Columnas)
 559+ 96AC 3D           	dec a
 560+ 96AD 20 01        	jr nz,1F
 561+ 96AF 3C           	inc a
 562+ 96B0 47           1 ld b,a
 563+ 96B1 C9           	ret
 564+ 96B2
 565+ 96B2              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96B2              ;
 567+ 96B2              ;	3/1/23
 568+ 96B2              ;
 569+ 96B2              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96B2              ;
 571+ 96B2              ;	Destruye: A,B,HL y DE.
 572+ 96B2
 573+ 96B2              Define_rutina_de_impresion
 574+ 96B2
 575+ 96B2 3A B4 89     	ld a,(Columns)
 576+ 96B5 47           	ld b,a
 577+ 96B6 3A F0 89     	ld a,(Columnas)
 578+ 96B9 B8           	cp b
 579+ 96BA 20 0D        	jr nz,2f
 580+ 96BC
 581+ 96BC              ;	La entidad se imprime entera.
 582+ 96BC
 583+ 96BC 21 98 97     	ld hl, Indice_entidades_completas
 584+ 96BF E6 01        	and 1
 585+ 96C1 28 02        	jr z,1F
 586+ 96C3
 587+ 96C3 23           	inc hl
 588+ 96C4 23           	inc hl
 589+ 96C5
 590+ 96C5 CD AC 8D     1 call Extrae_address
 591+ 96C8 C9           	ret		;	ret
 592+ 96C9
 593+ 96C9              ;	La entidad no se imprime entera en pantalla.
 594+ 96C9
 595+ 96C9 3A C7 89     2 ld a,(Cuad_objeto)
 596+ 96CC E6 01        	and 1
 597+ 96CE 28 17        	jr z,3F
 598+ 96D0
 599+ 96D0              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96D0
 601+ 96D0 21 9C 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96D3 3A B4 89     4 ld a,(Columns)
 603+ 96D6 E6 01        	and 1
 604+ 96D8 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96DA
 606+ 96DA 23           	inc hl
 607+ 96DB 23           	inc hl
 608+ 96DC
 609+ 96DC 3A F0 89     	ld a,(Columnas)
 610+ 96DF E6 01        	and 1
 611+ 96E1 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96E3
 613+ 96E3 23           	inc hl
 614+ 96E4 23           	inc hl
 615+ 96E5
 616+ 96E5 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96E7
 618+ 96E7 21 A2 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96EA 18 E7        	jr 4B
 620+ 96EC
 621+ 96EC              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96EC              ;
 623+ 96EC              ;	Prepara_draw
 624+ 96EC              ;
 625+ 96EC              ;	Es una rutina de carga.
 626+ 96EC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96EC              ;
 628+ 96EC              ;	FUNCIONAMIENTO:
 629+ 96EC              ;
 630+ 96EC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96EC              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96EC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96EC              ;
 634+ 96EC              ;	DESTRUYE:
 635+ 96EC              ;
 636+ 96EC              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96EC
 638+ 96EC 21 B3 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96EF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96F0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96F1 4E           	ld c,(hl)
 642+ 96F2 2A B5 89     	ld hl,(Posicion_actual)
 643+ 96F5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96F7 C9           	ret
 645+ 96F8
 646+ 96F8              ;----------------------------------------------------------------------------------------------------------------
 647+ 96F8              ;
 648+ 96F8              ;	5/08/22
 649+ 96F8              ;
 650+ 96F8              ;   NextScan.
 651+ 96F8              ;
 652+ 96F8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96F8              ;
 654+ 96F8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96F8              ;
 656+ 96F8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96F8              ;
 658+ 96F8              ;       DESTRUIDOS: AF y HL !!!
 659+ 96F8              ;
 660+ 96F8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96F8              ;
 662+ 96F8
 663+ 96F8 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96F9 7C               ld a,h
 665+ 96FA E6 07            and 7
 666+ 96FC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96FD
 668+ 96FD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96FE C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9700 6F               ld l,a
 671+ 9701 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9702
 673+ 9702 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9703 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9705 67               ld h,a
 676+ 9706 C9               ret
 677+ 9707
 678+ 9707              ;----------------------------------------------------------------------------------------------------------------
 679+ 9707              ;
 680+ 9707              ;	5/08/22
 681+ 9707              ;
 682+ 9707              ;   PreviousScan.
 683+ 9707              ;
 684+ 9707              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9707              ;
 686+ 9707              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9707              ;
 688+ 9707              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9707              ;
 690+ 9707              ;       DESTRUIDOS: AF y HL !!!
 691+ 9707              ;
 692+ 9707              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9707              ;
 694+ 9707
 695+ 9707 7C           PreviousScan ld a,h
 696+ 9708 25               dec h               ; Dec H.
 697+ 9709 E6 07            and 7
 698+ 970B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 970C
 700+ 970C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 970D D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 970F 6F               ld l,a
 703+ 9710 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9711
 705+ 9711 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9712 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9714 67               ld h,a
 708+ 9715 C9               ret
 709+ 9716
 710+ 9716              ; -----------------------------------------------------------------------------------
 711+ 9716              ;
 712+ 9716              ;	31/7/23
 713+ 9716              ;
 714+ 9716              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9716              ;	Extrae fotos de Album_de_fotos.
 716+ 9716
 717+ 9716              Extrae_foto_entidades
 718+ 9716
 719+ 9716 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9719 7E           	ld a,(hl)
 721+ 971A A7           	and a
 722+ 971B C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 971C
 724+ 971C 21 19 74     	ld hl,Caja_de_malotes
 725+ 971F 7E           	ld a,(hl)
 726+ 9720 32 02 8A     	ld (Numero_de_malotes),a												; No hay MALOTES. No se ha producido movimiento.
 727+ 9723 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9724 C8           	ret z
 729+ 9725
 730+ 9725              ; -----------------------------------
 731+ 9725
 732+ 9725 ED 73 07 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9729 31 00 70     	ld sp,Album_de_fotos
 734+ 972C
 735+ 972C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 972E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 972F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9730
 739+ 9730 ED 73 09 8A  	ld (Stack_2),sp
 740+ 9734 ED 7B 07 8A  	ld sp,(Stack)
 741+ 9738
 742+ 9738              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9738
 744+ 9738 3E CD        	ld a,$cd
 745+ 973A 32 42 97     	ld (Imprime),a
 746+ 973D EB           	ex de,hl
 747+ 973E 22 43 97     	ld (Imprime+1),hl
 748+ 9741 EB           	ex de,hl
 749+ 9742
 750+ 9742              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9742
 752+ 9742 00 00 00     Imprime db 0,0,0
 753+ 9745
 754+ 9745 3A 02 8A     	ld a,(Numero_de_malotes)
 755+ 9748 3D           	dec a
 756+ 9749 28 09        	jr z,1F
 757+ 974B 32 02 8A      	ld (Numero_de_malotes),a
 758+ 974E
 759+ 974E ED 7B 09 8A   	ld sp,(Stack_2)
 760+ 9752 18 D8        	jr 2B
 761+ 9754
 762+ 9754 AF           1 xor a
 763+ 9755 32 09 8A     	ld (Stack_2),a
 764+ 9758 C9           	ret
 765+ 9759
 766+ 9759              ; -----------------------------------------------------------------------------------
 767+ 9759              ;
 768+ 9759              ;	28/2/23
 769+ 9759              ;
 770+ 9759              ;	Pinta los disparos generados.
 771+ 9759
 772+ 9759              Extrae_foto_disparos
 773+ 9759
 774+ 9759 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 775+ 975C 7E               ld a,(hl)
 776+ 975D A7               and a
 777+ 975E C8               ret z
 778+ 975F
 779+ 975F 3A 33 8A     	ld a,(Numero_de_disparotes)
 780+ 9762 A7           	and a
 781+ 9763 C8           	ret z
 782+ 9764 ED 73 07 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 783+ 9768 31 0D 72     	ld sp,Album_de_fotos_disparos
 784+ 976B
 785+ 976B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 786+ 976D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 787+ 976E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 788+ 976F
 789+ 976F ED 73 09 8A  	ld (Stack_2),sp
 790+ 9773 ED 7B 07 8A  	ld sp,(Stack)
 791+ 9777
 792+ 9777              ; Fabrica la llamada a la correspondiente rutina de impresión.
 793+ 9777
 794+ 9777 3E CD        	ld a,$cd
 795+ 9779 32 81 97     	ld (Imprime2),a
 796+ 977C EB           	ex de,hl
 797+ 977D 22 82 97     	ld (Imprime2+1),hl
 798+ 9780 EB           	ex de,hl
 799+ 9781
 800+ 9781              ; Ejecuta la llamada:	CALL $xx,xx
 801+ 9781
 802+ 9781 00 00 00     Imprime2 db 0,0,0
 803+ 9784
 804+ 9784 3A 33 8A     	ld a,(Numero_de_disparotes)
 805+ 9787 3D           	dec a
 806+ 9788 28 09        	jr z,1F
 807+ 978A 32 33 8A      	ld (Numero_de_disparotes),a
 808+ 978D
 809+ 978D ED 7B 09 8A  	ld sp,(Stack_2)
 810+ 9791 18 D8        	jr 2B
 811+ 9793
 812+ 9793 AF           1 xor a
 813+ 9794 32 09 8A     	ld (Stack_2),a
 814+ 9797 C9           	ret
 815+ 9798
# file closed: Draw_XOR.asm
1435  9798              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9798              ;   índices de Rutinas de impresión.
   2+ 9798
   3+ 9798 A8 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 979A D5 97            defw Pinta_Amadeus_3x2
   5+ 979C
   6+ 979C 2B 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 979E CB 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97A0 7F 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97A2
  10+ 97A2 55 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97A4 59 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97A6 0D 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97A8
  14+ 97A8
  15+ 97A8              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97A8              ;
  17+ 97A8              ;   12/12/22
  18+ 97A8              ;
  19+ 97A8              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97A8              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97A8              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97A8              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97A8              ;
  24+ 97A8              ;   Modifica: DE y HL.
  25+ 97A8
  26+ 97A8 ED 73 07 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97AC FD F9        	ld sp,iy
  28+ 97AE 06 10            ld b,16
  29+ 97B0 D1           1 pop de
  30+ 97B1 7B               ld a,e
  31+ 97B2 AE               xor (hl)
  32+ 97B3 77           	ld (hl),a
  33+ 97B4 23           	inc hl
  34+ 97B5 7A               ld a,d
  35+ 97B6 AE               xor (hl)
  36+ 97B7 77           	ld (hl),a
  37+ 97B8 2B           	dec hl
  38+ 97B9 24           	inc h
  39+ 97BA 7C               ld a,h
  40+ 97BB E6 07            and 7
  41+ 97BD 20 0A            jr nz,2F
  42+ 97BF 7D               ld a,l
  43+ 97C0 C6 20            add a,$20
  44+ 97C2 6F               ld l,a
  45+ 97C3 38 04            jr c,2F
  46+ 97C5 7C               ld a,h
  47+ 97C6 D6 08            sub 8
  48+ 97C8 67               ld h,a
  49+ 97C9 7C           2 ld a,h
  50+ 97CA FE 58            cp $58
  51+ 97CC 28 02            jr z,3F
  52+ 97CE 10 E0            djnz 1B
  53+ 97D0 ED 7B 07 8A  3 ld sp,(Stack)
  54+ 97D4 C9           	ret
  55+ 97D5
  56+ 97D5 ED 73 07 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97D9 FD F9        	ld sp,iy
  58+ 97DB 06 08            ld b,8
  59+ 97DD D1           1 pop de
  60+ 97DE 7B               ld a,e
  61+ 97DF AE               xor (hl)
  62+ 97E0 77           	ld (hl),a
  63+ 97E1 23           	inc hl
  64+ 97E2 7A               ld a,d
  65+ 97E3 AE               xor (hl)
  66+ 97E4 77           	ld (hl),a
  67+ 97E5 23           	inc hl
  68+ 97E6 D1           	pop de
  69+ 97E7 7B               ld a,e
  70+ 97E8 AE               xor (hl)
  71+ 97E9 77           	ld (hl),a
  72+ 97EA 2B           	dec hl
  73+ 97EB 2B           	dec hl
  74+ 97EC 24           	inc h
  75+ 97ED 7C               ld a,h
  76+ 97EE E6 07            and 7
  77+ 97F0 20 0A            jr nz,2F
  78+ 97F2 7D               ld a,l
  79+ 97F3 C6 20            add a,$20
  80+ 97F5 6F               ld l,a
  81+ 97F6 38 04            jr c,2F
  82+ 97F8 7C               ld a,h
  83+ 97F9 D6 08            sub 8
  84+ 97FB 67               ld h,a
  85+ 97FC 7C           2 ld a,h
  86+ 97FD FE 58            cp $58
  87+ 97FF 28 25            jr z,4F
  88+ 9801 7A               ld a,d
  89+ 9802 AE               xor (hl)
  90+ 9803 77               ld (hl),a
  91+ 9804 D1           	pop de
  92+ 9805 23           	inc hl
  93+ 9806 7B               ld a,e
  94+ 9807 AE               xor (hl)
  95+ 9808 77           	ld (hl),a
  96+ 9809 23           	inc hl
  97+ 980A 7A               ld a,d
  98+ 980B AE               xor (hl)
  99+ 980C 77           	ld (hl),a
 100+ 980D 2B           	dec hl
 101+ 980E 2B           	dec hl
 102+ 980F 24           	inc h
 103+ 9810 7C               ld a,h
 104+ 9811 E6 07            and 7
 105+ 9813 20 0A            jr nz,3F
 106+ 9815 7D               ld a,l
 107+ 9816 C6 20            add a,$20
 108+ 9818 6F               ld l,a
 109+ 9819 38 04            jr c,3F
 110+ 981B 7C               ld a,h
 111+ 981C D6 08            sub 8
 112+ 981E 67               ld h,a
 113+ 981F 7C           3 ld a,h
 114+ 9820 FE 58            cp $58
 115+ 9822 28 02            jr z,4F
 116+ 9824 10 B7            djnz 1B
 117+ 9826 ED 7B 07 8A  4 ld sp,(Stack)
 118+ 982A C9           	ret
 119+ 982B
 120+ 982B              ; ---------------------------------------------------
 121+ 982B
 122+ 982B ED 73 07 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 982F FD F9        	ld sp,iy
 124+ 9831
 125+ 9831              ; >>>
 126+ 9831
 127+ 9831 06 10            ld b,16
 128+ 9833 D1           1 pop de
 129+ 9834 7A           	ld a,d
 130+ 9835 AE           	xor (hl)
 131+ 9836 77           	ld (hl),a
 132+ 9837 24           	inc h
 133+ 9838 7C               ld a,h
 134+ 9839 E6 07            and 7
 135+ 983B 20 0C            jr nz,2F
 136+ 983D 7D               ld a,l
 137+ 983E C6 20            add a,$20
 138+ 9840 6F               ld l,a
 139+ 9841 38 06            jr c,2F
 140+ 9843 7C               ld a,h
 141+ 9844 D6 08            sub 8
 142+ 9846 67               ld h,a
 143+ 9847 18 00            jr 2F
 144+ 9849 7C           2 ld a,h
 145+ 984A FE 58            cp $58
 146+ 984C 28 02            jr z,3F
 147+ 984E 10 E3            djnz 1B
 148+ 9850 ED 7B 07 8A  3 ld sp,(Stack)
 149+ 9854 C9           	ret
 150+ 9855
 151+ 9855 ED 73 07 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9859 FD F9        	ld sp,iy
 153+ 985B
 154+ 985B              ; >>>
 155+ 985B
 156+ 985B 06 10            ld b,16
 157+ 985D D1           1 pop de
 158+ 985E 7B           	ld a,e
 159+ 985F AE           	xor (hl)
 160+ 9860 77           	ld (hl),a
 161+ 9861 24           	inc h
 162+ 9862 7C               ld a,h
 163+ 9863 E6 07            and 7
 164+ 9865 20 0C            jr nz,2F
 165+ 9867 7D               ld a,l
 166+ 9868 C6 20            add a,$20
 167+ 986A 6F               ld l,a
 168+ 986B 38 06            jr c,2F
 169+ 986D 7C               ld a,h
 170+ 986E D6 08            sub 8
 171+ 9870 67               ld h,a
 172+ 9871 18 00            jr 2F
 173+ 9873 7C           2 ld a,h
 174+ 9874 FE 58            cp $58
 175+ 9876 28 02            jr z,3F
 176+ 9878 10 E3            djnz 1B
 177+ 987A ED 7B 07 8A  3 ld sp,(Stack)
 178+ 987E C9           	ret
 179+ 987F
 180+ 987F              ; ---------------------------------------------------
 181+ 987F
 182+ 987F ED 73 07 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9883 FD F9        	ld sp,iy
 184+ 9885 06 08            ld b,8
 185+ 9887 D1           1 pop de
 186+ 9888 7A           	ld a,d
 187+ 9889 AE           	xor (hl)
 188+ 988A 77           	ld (hl),a
 189+ 988B 23           	inc hl
 190+ 988C D1           	pop de
 191+ 988D 7B           	ld a,e
 192+ 988E AE           	xor (hl)
 193+ 988F 77           	ld (hl),a
 194+ 9890 2B           	dec hl
 195+ 9891 24            	inc h
 196+ 9892 7C               ld a,h
 197+ 9893 E6 07            and 7
 198+ 9895 20 0A            jr nz,2F
 199+ 9897 7D               ld a,l
 200+ 9898 C6 20            add a,$20
 201+ 989A 6F               ld l,a
 202+ 989B 38 04            jr c,2F
 203+ 989D 7C               ld a,h
 204+ 989E D6 08            sub 8
 205+ 98A0 67               ld h,a
 206+ 98A1 7C           2 ld a,h
 207+ 98A2 FE 58            cp $58
 208+ 98A4 28 20            jr z,4F
 209+ 98A6 D1               pop de
 210+ 98A7 7B           	ld a,e
 211+ 98A8 AE           	xor (hl)
 212+ 98A9 77           	ld (hl),a
 213+ 98AA 23           	inc hl
 214+ 98AB 7A           	ld a,d
 215+ 98AC AE           	xor (hl)
 216+ 98AD 77           	ld (hl),a
 217+ 98AE 2B           	dec hl
 218+ 98AF 24           	inc h
 219+ 98B0 7C               ld a,h
 220+ 98B1 E6 07            and 7
 221+ 98B3 20 0A            jr nz,3F
 222+ 98B5 7D               ld a,l
 223+ 98B6 C6 20            add a,$20
 224+ 98B8 6F               ld l,a
 225+ 98B9 38 04            jr c,3F
 226+ 98BB 7C               ld a,h
 227+ 98BC D6 08            sub 8
 228+ 98BE 67               ld h,a
 229+ 98BF 7C           3 ld a,h
 230+ 98C0 FE 58            cp $58
 231+ 98C2 28 02            jr z,4F
 232+ 98C4 10 C1            djnz 1B
 233+ 98C6 ED 7B 07 8A  4 ld sp,(Stack)
 234+ 98CA C9           	ret
 235+ 98CB
 236+ 98CB ED 73 07 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98CF FD F9        	ld sp,iy
 238+ 98D1 06 08            ld b,8
 239+ 98D3 D1           1 pop de
 240+ 98D4 D1           	pop de
 241+ 98D5 7B           	ld a,e
 242+ 98D6 AE           	xor (hl)
 243+ 98D7 77           	ld (hl),a
 244+ 98D8 24            	inc h
 245+ 98D9 7C               ld a,h
 246+ 98DA E6 07            and 7
 247+ 98DC 20 0A            jr nz,2F
 248+ 98DE 7D               ld a,l
 249+ 98DF C6 20            add a,$20
 250+ 98E1 6F               ld l,a
 251+ 98E2 38 04            jr c,2F
 252+ 98E4 7C               ld a,h
 253+ 98E5 D6 08            sub 8
 254+ 98E7 67               ld h,a
 255+ 98E8 7C           2 ld a,h
 256+ 98E9 FE 58            cp $58
 257+ 98EB 28 1B            jr z,4F
 258+ 98ED D1               pop de
 259+ 98EE 7A           	ld a,d
 260+ 98EF AE           	xor (hl)
 261+ 98F0 77           	ld (hl),a
 262+ 98F1 24           	inc h
 263+ 98F2 7C               ld a,h
 264+ 98F3 E6 07            and 7
 265+ 98F5 20 0A            jr nz,3F
 266+ 98F7 7D               ld a,l
 267+ 98F8 C6 20            add a,$20
 268+ 98FA 6F               ld l,a
 269+ 98FB 38 04            jr c,3F
 270+ 98FD 7C               ld a,h
 271+ 98FE D6 08            sub 8
 272+ 9900 67               ld h,a
 273+ 9901 7C           3 ld a,h
 274+ 9902 FE 58            cp $58
 275+ 9904 28 02            jr z,4F
 276+ 9906 10 CB            djnz 1B
 277+ 9908 ED 7B 07 8A  4 ld sp,(Stack)
 278+ 990C C9           	ret
 279+ 990D
 280+ 990D ED 73 07 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9911 FD F9        	ld sp,iy
 282+ 9913 06 08            ld b,8
 283+ 9915 D1           1 pop de
 284+ 9916 7B           	ld a,e
 285+ 9917 AE           	xor (hl)
 286+ 9918 77           	ld (hl),a
 287+ 9919 23           	inc hl
 288+ 991A 7A           	ld a,d
 289+ 991B AE           	xor (hl)
 290+ 991C 77           	ld (hl),a
 291+ 991D 2B           	dec hl
 292+ 991E 24             	inc h
 293+ 991F 7C               ld a,h
 294+ 9920 E6 07            and 7
 295+ 9922 20 0A            jr nz,2F
 296+ 9924 7D               ld a,l
 297+ 9925 C6 20            add a,$20
 298+ 9927 6F               ld l,a
 299+ 9928 38 04            jr c,2F
 300+ 992A 7C               ld a,h
 301+ 992B D6 08            sub 8
 302+ 992D 67               ld h,a
 303+ 992E 7C           2 ld a,h
 304+ 992F FE 58            cp $58
 305+ 9931 28 21            jr z,4F
 306+ 9933 D1               pop de
 307+ 9934 7A           	ld a,d
 308+ 9935 AE           	xor (hl)
 309+ 9936 77           	ld (hl),a
 310+ 9937 23           	inc hl
 311+ 9938 D1               pop de
 312+ 9939 7B           	ld a,e
 313+ 993A AE           	xor (hl)
 314+ 993B 77           	ld (hl),a
 315+ 993C 2B           	dec hl
 316+ 993D 24           	inc h
 317+ 993E 7C               ld a,h
 318+ 993F E6 07            and 7
 319+ 9941 20 0A            jr nz,3F
 320+ 9943 7D               ld a,l
 321+ 9944 C6 20            add a,$20
 322+ 9946 6F               ld l,a
 323+ 9947 38 04            jr c,3F
 324+ 9949 7C               ld a,h
 325+ 994A D6 08            sub 8
 326+ 994C 67               ld h,a
 327+ 994D 7C           3 ld a,h
 328+ 994E FE 58            cp $58
 329+ 9950 28 02            jr z,4F
 330+ 9952 10 C1            djnz 1B
 331+ 9954 ED 7B 07 8A  4 ld sp,(Stack)
 332+ 9958 C9           	ret
 333+ 9959
 334+ 9959 ED 73 07 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 995D FD F9        	ld sp,iy
 336+ 995F 06 08            ld b,8
 337+ 9961 D1           1 pop de
 338+ 9962 7B           	ld a,e
 339+ 9963 AE           	xor (hl)
 340+ 9964 77           	ld (hl),a
 341+ 9965 24            	inc h
 342+ 9966 7C               ld a,h
 343+ 9967 E6 07            and 7
 344+ 9969 20 0A            jr nz,2F
 345+ 996B 7D               ld a,l
 346+ 996C C6 20            add a,$20
 347+ 996E 6F               ld l,a
 348+ 996F 38 04            jr c,2F
 349+ 9971 7C               ld a,h
 350+ 9972 D6 08            sub 8
 351+ 9974 67               ld h,a
 352+ 9975 7C           2 ld a,h
 353+ 9976 FE 58            cp $58
 354+ 9978 28 1C            jr z,4F
 355+ 997A D1               pop de
 356+ 997B 7A           	ld a,d
 357+ 997C AE           	xor (hl)
 358+ 997D 77           	ld (hl),a
 359+ 997E 24           	inc h
 360+ 997F 7C               ld a,h
 361+ 9980 E6 07            and 7
 362+ 9982 20 0A            jr nz,3F
 363+ 9984 7D               ld a,l
 364+ 9985 C6 20            add a,$20
 365+ 9987 6F               ld l,a
 366+ 9988 38 04            jr c,3F
 367+ 998A 7C               ld a,h
 368+ 998B D6 08            sub 8
 369+ 998D 67               ld h,a
 370+ 998E 7C           3 ld a,h
 371+ 998F FE 58            cp $58
 372+ 9991 28 03            jr z,4F
 373+ 9993 D1               pop de
 374+ 9994 10 CB            djnz 1B
 375+ 9996 ED 7B 07 8A  4 ld sp,(Stack)
 376+ 999A C9           	ret
 377+ 999B
 378+ 999B              ; ---------------------------------------------------
 379+ 999B              ;
 380+ 999B              ;   27/02/23
 381+ 999B              ;
 382+ 999B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 999B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 999B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 999B
 386+ 999B ED 73 07 8A  Pinta_Disparo ld (Stack),sp
 387+ 999F FD F9            ld sp,iy
 388+ 99A1 06 03            ld b,3
 389+ 99A3 D1           1 pop de
 390+ 99A4 7B               ld a,e
 391+ 99A5 AE               xor (hl)
 392+ 99A6 77               ld (hl),a
 393+ 99A7 23               inc hl
 394+ 99A8 7A               ld a,d
 395+ 99A9 AE               xor (hl)
 396+ 99AA 77               ld (hl),a
 397+ 99AB 2B               dec hl
 398+ 99AC
 399+ 99AC 24               inc h
 400+ 99AD 7C               ld a,h
 401+ 99AE E6 07            and 7
 402+ 99B0 20 0A            jr nz,2F
 403+ 99B2 7D               ld a,l
 404+ 99B3 C6 20            add a,$20
 405+ 99B5 6F               ld l,a
 406+ 99B6 38 04            jr c,2F
 407+ 99B8 7C               ld a,h
 408+ 99B9 D6 08            sub 8
 409+ 99BB 67               ld h,a
 410+ 99BC 7C           2 ld a,h
 411+ 99BD FE 58            cp $58
 412+ 99BF 28 02            jr z,3F
 413+ 99C1
 414+ 99C1 10 E0            djnz 1B
 415+ 99C3 ED 7B 07 8A  3 ld sp,(Stack)
 416+ 99C7 C9               ret
 417+ 99C8
# file closed: Rutinas_de_impresion_sprites.asm
1436  99C8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99C8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99C8              ;
   3+ 99C8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99C8              ;
   5+ 99C8              ; *****************************************************************************************************************************************************************************************
   6+ 99C8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99C8
   8+ 99C8 7C           calcula_tercio ld a,h
   9+ 99C9 E6 18        	and $18
  10+ 99CB CB 2F        	sra a
  11+ 99CD CB 2F        	sra a
  12+ 99CF CB 2F        	sra a
  13+ 99D1 C9           	ret
  14+ 99D2
# file closed: calcula_tercio.asm
1437  99D2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99D2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99D2              ;
   3+ 99D2              ;
   4+ 99D2              ;	CLS.
   5+ 99D2              ;
   6+ 99D2              ;	Limpia la pantalla y define sus atributos.
   7+ 99D2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99D2              ;
   9+ 99D2              ;	COLORES: 0 ..... NEGRO
  10+ 99D2              ;    		 1 ..... AZUL
  11+ 99D2              ; 			 2 ..... ROJO
  12+ 99D2              ;			 3 ..... MAGENTA
  13+ 99D2              ; 			 4 ..... VERDE
  14+ 99D2              ; 			 5 ..... CIAN
  15+ 99D2              ;			 6 ..... AMARILLO
  16+ 99D2              ; 			 7 ..... BLANCO
  17+ 99D2              ;
  18+ 99D2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99D2              ;
  20+ 99D2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99D2
  22+ 99D2
  23+ 99D2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99D5 11 01 40     	LD DE,$4001
  25+ 99D8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99DB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99DD ED B0        	LDIR
  28+ 99DF 01 FF 02     	LD BC,767
  29+ 99E2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99E3 ED B0        	LDIR
  31+ 99E5 C9           	ret
  32+ 99E6
# file closed: Cls.asm
1438  99E6              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99E6              ; ******************************************************************************************************************************************************************************************
   2+ 99E6              ;
   3+ 99E6              ;   20/05/23
   4+ 99E6              ;
   5+ 99E6              ;	Recompone_posicion_inicio
   6+ 99E6              ;
   7+ 99E6              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99E6              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99E6              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99E6              ;	_ a una u otra rutina.
  11+ 99E6
  12+ 99E6              Recompone_posicion_inicio
  13+ 99E6
  14+ 99E6 2A C5 89     	ld hl,(Posicion_inicio)
  15+ 99E9 7D           	ld a,l
  16+ 99EA E6 1F        	and $1f
  17+ 99EC 28 16        	jr z,1F
  18+ 99EE
  19+ 99EE FE 1F        	cp $1f
  20+ 99F0 28 0D        	jr z,3F
  21+ 99F2
  22+ 99F2 21 F4 89     	ld hl,Ctrl_2
  23+ 99F5 CB C6        	set 0,(hl)
  24+ 99F7 2A B7 89     	ld hl,(Puntero_objeto)
  25+ 99FA 22 F7 89     	ld (Repone_puntero_objeto),hl
  26+ 99FD 18 08        	jr 2F
  27+ 99FF
  28+ 99FF CD A0 9B     3 call Mov_left
  29+ 9A02 18 03        	jr 2F
  30+ 9A04
  31+ 9A04 CD 82 9A     1 call Mov_right
  32+ 9A07 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A0A 22 B7 89     	ld (Puntero_objeto),hl
  34+ 9A0D C9           	ret
  35+ 9A0E
  36+ 9A0E              ; ******************************************************************************************************************************************************************************************
  37+ 9A0E              ;
  38+ 9A0E              ;   27/05/23
  39+ 9A0E              ;
  40+ 9A0E              ;	Mov_down
  41+ 9A0E              ;
  42+ 9A0E              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A0E              ;
  44+ 9A0E              ;
  45+ 9A0E              Mov_down
  46+ 9A0E
  47+ 9A0E CD 70 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A11              ;																	; _ repone (Puntero_objeto).
  49+ 9A11 21 E1 89     	ld hl,Ctrl_0
  50+ 9A14 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A16              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A16              ; 																	; _ en el caso de que no lo haya.
  53+ 9A16 3A CB 89     	ld a,(Vel_down)
  54+ 9A19 47           	ld b,a
  55+ 9A1A 2A B5 89         ld hl,(Posicion_actual)
  56+ 9A1D CD C8 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A20 E6 02        	and 2
  58+ 9A22 28 0F        	jr z,1F
  59+ 9A24
  60+ 9A24              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A24              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A24
  63+ 9A24 7C           	ld a,h
  64+ 9A25 FE 57        	cp $57
  65+ 9A27 20 0A        	jr nz,1F
  66+ 9A29
  67+ 9A29 7D           	ld a,l
  68+ 9A2A C6 20        	add $20
  69+ 9A2C 30 05        	jr nc,1F
  70+ 9A2E
  71+ 9A2E              ; ------------------------------
  72+ 9A2E              ;	call Reaparece_arriba
  73+ 9A2E CD 2D 9D     	call Reinicio
  74+ 9A31              ; ------------------------------
  75+ 9A31
  76+ 9A31 18 08        	jr 3F
  77+ 9A33 CD F8 96     1 call NextScan
  78+ 9A36 22 B5 89     	ld (Posicion_actual),hl
  79+ 9A39 10 E2            djnz 2B
  80+ 9A3B CD 53 9D     3 call Genera_coordenadas
  81+ 9A3E C9           	ret
  82+ 9A3F
  83+ 9A3F              ; ******************************************************************************************************************************************************************************************
  84+ 9A3F              ;
  85+ 9A3F              ;   27/05/23
  86+ 9A3F              ;
  87+ 9A3F              ;	Mov_up
  88+ 9A3F              ;
  89+ 9A3F              ; 	Mueve el Sprite hacia arriba.
  90+ 9A3F              ;
  91+ 9A3F              ;
  92+ 9A3F              Mov_up
  93+ 9A3F
  94+ 9A3F CD 70 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A42              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A42 21 E1 89     	ld hl,Ctrl_0
  97+ 9A45 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A47              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A47              ; 																		; _ en el caso de que no lo haya.
 100+ 9A47 3A CA 89     	ld a,(Vel_up)
 101+ 9A4A 47           	ld b,a
 102+ 9A4B 2A B5 89     	ld hl,(Posicion_actual)
 103+ 9A4E CD C8 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A51 A7           	and a
 105+ 9A52 20 10        	jr nz,1F
 106+ 9A54
 107+ 9A54              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A54              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A54
 110+ 9A54 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A55 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A57 20 0B            jr nz,1F
 113+ 9A59 7D               ld a,l
 114+ 9A5A D6 20            sub $20
 115+ 9A5C 30 06            jr nc,1F
 116+ 9A5E 25               dec h
 117+ 9A5F
 118+ 9A5F              ; -----------------------------
 119+ 9A5F CD 0E 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A62              ;	call Reinicio
 121+ 9A62              ; -----------------------------
 122+ 9A62
 123+ 9A62 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A64 CD 07 97     1 call PreviousScan
 125+ 9A67 22 B5 89     	ld (Posicion_actual),hl
 126+ 9A6A 10 E2            djnz 3B
 127+ 9A6C CD 53 9D     2 call Genera_coordenadas
 128+ 9A6F C9           	ret
 129+ 9A70
 130+ 9A70              ; -----------------------------
 131+ 9A70              ;
 132+ 9A70              ;	27/5/23
 133+ 9A70              ;
 134+ 9A70              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A70              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A70              ;
 137+ 9A70              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A70              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A70              ;
 140+ 9A70              ;	Modifica: A y (Puntero_objeto).
 141+ 9A70
 142+ 9A70 3A F4 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A73 CB 47        	bit 0,a
 144+ 9A75 C8           	ret z
 145+ 9A76 CB 87        	res 0,a
 146+ 9A78 32 F4 89     	ld (Ctrl_2),a
 147+ 9A7B 2A F7 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A7E 22 B7 89     	ld (Puntero_objeto),hl
 149+ 9A81 C9           	ret
 150+ 9A82
 151+ 9A82              ; ******************************************************************************************************************************************************************************************
 152+ 9A82              ;
 153+ 9A82              ;	19/10/22
 154+ 9A82              ;
 155+ 9A82              ;	Mov_right.
 156+ 9A82              ;
 157+ 9A82              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A82              ;
 159+ 9A82
 160+ 9A82 21 E1 89     Mov_right ld hl,Ctrl_0
 161+ 9A85 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A87              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A87              ; 																	; _ en el caso de que no lo haya.
 164+ 9A87 3A E1 89     	ld a,(Ctrl_0)
 165+ 9A8A CB 77        	bit 6,a
 166+ 9A8C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A8E
 168+ 9A8E CD BC 9C     	call Stop_Amadeus_right
 169+ 9A91 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A92 18 4D        	jr 8F
 171+ 9A94
 172+ 9A94 3A B9 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A97 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A99 20 46        	jr nz,8F
 175+ 9A9B
 176+ 9A9B 3A BB 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A9E A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A9F 28 40        	jr z,8F
 179+ 9AA1
 180+ 9AA1              ; ---------- ---------- ----------
 181+ 9AA1              ;
 182+ 9AA1              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9AA1
 184+ 9AA1 3A C9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9AA4 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AA6 28 11        	jr z,1F
 187+ 9AA8 38 06        	jr c,6F
 188+ 9AAA FE 04        	cp 4
 189+ 9AAC 28 14        	jr z,7F
 190+ 9AAE 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AB0
 192+ 9AB0              ; ---------- ---------- ----------
 193+ 9AB0              ;
 194+ 9AB0              ; Perfiles de velocidad
 195+ 9AB0              ;
 196+ 9AB0
 197+ 9AB0 3A BB 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AB3 FE FE        	cp $fe
 199+ 9AB5 20 2A        	jr nz,8F
 200+ 9AB7 18 10        	jr 3F
 201+ 9AB9 3A BB 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9ABC FE FD        	cp $fd
 203+ 9ABE 20 21        	jr nz,8F
 204+ 9AC0 18 07        	jr 3F
 205+ 9AC2 3A BB 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AC5 FE FB        	cp $fb
 207+ 9AC7 20 18        	jr nz,8F
 208+ 9AC9
 209+ 9AC9              ; ---------- ---------- ----------
 210+ 9AC9
 211+ 9AC9              3
 212+ 9AC9 CD FC 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9ACC              ;	call Reinicio
 214+ 9ACC
 215+ 9ACC              ; ---------- ---------- ----------
 216+ 9ACC              ;
 217+ 9ACC              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9ACC
 219+ 9ACC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9ACE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9ACF CD E8 9A     	call DESPLZ_DER
 222+ 9AD2 C1           	pop bc
 223+ 9AD3 10 F9        	djnz 5B
 224+ 9AD5 2A B5 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AD8 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AD9 22 B5 89     	ld (Posicion_actual),hl
 227+ 9ADC CD 53 9D     	call Genera_coordenadas
 228+ 9ADF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AE1
 230+ 9AE1              ; ---------- ---------- ----------
 231+ 9AE1
 232+ 9AE1 2A B5 89     8 ld hl,(Posicion_actual)
 233+ 9AE4 CD E8 9A     	call DESPLZ_DER
 234+ 9AE7 C9           2 ret
 235+ 9AE8
 236+ 9AE8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AE8              ;
 238+ 9AE8              ;	22/9/22
 239+ 9AE8              ;
 240+ 9AE8
 241+ 9AE8 CD F7 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AEB CD 43 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AEE CD 6C 9B         call Ciclo_completo
 244+ 9AF1 21 E1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AF4 CB FE        	set 7,(hl)
 246+ 9AF6 C9           	ret
 247+ 9AF7
 248+ 9AF7              ; ******************************************************************************************************************************************************************************************
 249+ 9AF7              ;	15/02/23
 250+ 9AF7              ;
 251+ 9AF7
 252+ 9AF7 3A C9 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9AFA 47           	ld b,a
 254+ 9AFB 2A C1 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AFE 23           1 inc hl
 256+ 9AFF 23           	inc hl
 257+ 9B00 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B02 22 C1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B05 CD AC 8D     	call Extrae_address
 260+ 9B08 22 B7 89     	ld (Puntero_objeto),hl
 261+ 9B0B
 262+ 9B0B              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B0B
 264+ 9B0B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B0B              ; Cuántos movimientos hemos hecho ??
 266+ 9B0B              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B0B
 268+ 9B0B 2A BD 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B0E EB           	ex de,hl
 270+ 9B0F A7           	and a
 271+ 9B10 ED 52        	sbc hl,de
 272+ 9B12 CB 3D        	srl l
 273+ 9B14 3E 08        6 ld a,8
 274+ 9B16 95           	sub l
 275+ 9B17 30 1E        	jr nc,3F
 276+ 9B19
 277+ 9B19              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B19              ; B="0".
 279+ 9B19
 280+ 9B19 04           4 inc b
 281+ 9B1A 3C           	inc a
 282+ 9B1B 20 FC        	jr nz,4B
 283+ 9B1D 78           	ld a,b
 284+ 9B1E 08           	ex af,af
 285+ 9B1F 2A BD 89     	ld hl,(Indice_Sprite_der)
 286+ 9B22 23           5 inc hl
 287+ 9B23 23           	inc hl
 288+ 9B24 10 FC        	djnz 5B
 289+ 9B26 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B29 CD AC 8D     	call Extrae_address
 291+ 9B2C 22 B7 89     	ld (Puntero_objeto),hl
 292+ 9B2F
 293+ 9B2F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B2F              ; _(Posicion_actual).
 295+ 9B2F
 296+ 9B2F 21 B5 89     	ld hl,Posicion_actual
 297+ 9B32 34           	inc (hl)
 298+ 9B33 08               ex af,af
 299+ 9B34 6F           	ld l,a
 300+ 9B35 18 DD        	jr 6B
 301+ 9B37
 302+ 9B37              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B37
 304+ 9B37 47           3 ld b,a
 305+ 9B38 2A BF 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B3B 23           2 inc hl
 307+ 9B3C 23           	inc hl
 308+ 9B3D 10 FC        	djnz 2B
 309+ 9B3F 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B42 C9           8 ret
 311+ 9B43
 312+ 9B43              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B43              ;
 314+ 9B43              ;	24/7/22
 315+ 9B43              ;
 316+ 9B43              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B43              ;
 318+ 9B43              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B43              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B43              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B43
 322+ 9B43 3A BB 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B46 A7           	and a
 324+ 9B47 20 1F        	jr nz,1F
 325+ 9B49 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B4B 32 BB 89         ld (CTRL_DESPLZ),a
 327+ 9B4E
 328+ 9B4E 21 B4 89     	ld hl,Columns
 329+ 9B51 34           	inc (hl)
 330+ 9B52 3A C7 89     	ld a,(Cuad_objeto)
 331+ 9B55 E6 01        	and 1
 332+ 9B57 28 0F        	jr z,1F
 333+ 9B59 2A B5 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B5C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B5D 22 B5 89     	ld (Posicion_actual),hl
 336+ 9B60 CD 53 9D     	call Genera_coordenadas
 337+ 9B63 CD C8 9C     	call Inc_CTRL_DESPLZ
 338+ 9B66 18 03        	jr 2F
 339+ 9B68 CD C8 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B6B C9           2 ret
 341+ 9B6C
 342+ 9B6C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B6C              ;
 344+ 9B6C              ;	24/7/22
 345+ 9B6C              ;
 346+ 9B6C              ;	Ciclo_completo.
 347+ 9B6C              ;
 348+ 9B6C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B6C              ;
 350+ 9B6C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B6C              ; 	Decrementamos (Columns).
 352+ 9B6C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B6C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B6C
 355+ 9B6C
 356+ 9B6C 3A BB 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B6F FE FF        	cp $ff
 358+ 9B71 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B73 E6 F0        	and $f0
 360+ 9B75 20 28        	jr nz,3F
 361+ 9B77
 362+ 9B77              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B77
 364+ 9B77 3A BB 89     	ld a,(CTRL_DESPLZ)
 365+ 9B7A 47           	ld b,a
 366+ 9B7B 3E F8        	ld a,$f8
 367+ 9B7D 80           	add b
 368+ 9B7E 32 BB 89     	ld (CTRL_DESPLZ),a
 369+ 9B81 18 1C        	jr 3F
 370+ 9B83 21 B4 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B86 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B87 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B88 32 BB 89     	ld (CTRL_DESPLZ),a
 374+ 9B8B 3A C7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B8E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B90 20 0A        	jr nz,2F
 377+ 9B92 2A B5 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B95 23           	inc hl
 379+ 9B96 22 B5 89     	ld (Posicion_actual),hl
 380+ 9B99 CD 53 9D     	call Genera_coordenadas
 381+ 9B9C
 382+ 9B9C              ; Inicia el puntero de Sprite.
 383+ 9B9C
 384+ 9B9C CD C3 8D     2 call Inicia_puntero_objeto_der
 385+ 9B9F C9           3 ret
 386+ 9BA0
 387+ 9BA0              ; ******************************************************************************************************************************************************************************************
 388+ 9BA0              ;
 389+ 9BA0              ;	15/02/23
 390+ 9BA0              ;
 391+ 9BA0              ;	Mov_left.
 392+ 9BA0              ;
 393+ 9BA0              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BA0              ;
 395+ 9BA0 21 E1 89     Mov_left ld hl,Ctrl_0
 396+ 9BA3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BA5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BA5              ; 																	; _ en el caso de que no lo haya.
 399+ 9BA5 3A E1 89     	ld a,(Ctrl_0)
 400+ 9BA8 CB 77        	bit 6,a
 401+ 9BAA 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BAC
 403+ 9BAC CD C2 9C     	call Stop_Amadeus_left
 404+ 9BAF C8           	ret z
 405+ 9BB0 20 4A        	jr nz,8F
 406+ 9BB2
 407+ 9BB2 3A B9 89     11 ld a,(Coordenada_X)
 408+ 9BB5 A7           	and a
 409+ 9BB6 20 44        	jr nz,8F
 410+ 9BB8
 411+ 9BB8 3A BB 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BBB A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BBC 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BBE
 415+ 9BBE              ; ---------- ---------- ----------
 416+ 9BBE
 417+ 9BBE 3A C8 89     	ld a,(Vel_left)
 418+ 9BC1 FE 02        	cp 2
 419+ 9BC3 28 0F        	jr z,1F
 420+ 9BC5 38 04        	jr c,6F
 421+ 9BC7 FE 04        	cp 4
 422+ 9BC9 28 12        	jr z,7F
 423+ 9BCB
 424+ 9BCB              ; ---------- ---------- ----------
 425+ 9BCB
 426+ 9BCB 3A BB 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BCE FE F8        	cp $f8
 428+ 9BD0 20 2A        	jr nz,8F
 429+ 9BD2 18 10        	jr 4F
 430+ 9BD4 3A BB 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BD7 FE F9        	cp $f9
 432+ 9BD9 20 21        	jr nz,8F
 433+ 9BDB 18 07        	jr 4F
 434+ 9BDD 3A BB 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BE0 FE FB        	cp $fb
 436+ 9BE2 20 18        	jr nz,8F
 437+ 9BE4
 438+ 9BE4              ; ---------- ---------- ----------
 439+ 9BE4
 440+ 9BE4              4
 441+ 9BE4 CD EA 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BE7              ;	call Reinicio
 443+ 9BE7
 444+ 9BE7              ; ---------- ---------- ----------
 445+ 9BE7
 446+ 9BE7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BE9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BEA
 449+ 9BEA              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BEA              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BEA
 452+ 9BEA CD 03 9C     	call DESPLZ_IZQ
 453+ 9BED C1           	pop bc
 454+ 9BEE 10 F9        	djnz 5B
 455+ 9BF0 2A B5 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BF3 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BF4 22 B5 89     	ld (Posicion_actual),hl
 458+ 9BF7 CD 53 9D     	call Genera_coordenadas
 459+ 9BFA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BFC
 461+ 9BFC              ; ---------- ---------- ----------
 462+ 9BFC
 463+ 9BFC              ; Movemos, no hay recolocación.
 464+ 9BFC
 465+ 9BFC 2A B5 89     8 ld hl,(Posicion_actual)
 466+ 9BFF CD 03 9C     	call DESPLZ_IZQ
 467+ 9C02 C9           2 ret
 468+ 9C03
 469+ 9C03              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C03              ;
 471+ 9C03              ;	22/9/22
 472+ 9C03
 473+ 9C03              DESPLZ_IZQ
 474+ 9C03
 475+ 9C03 CD 12 9C     	call Desplaza_izquierda
 476+ 9C06 CD 5E 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C09 CD 86 9C     	call Ciclo_completo_2
 478+ 9C0C 21 E1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C0F CB BE        	res 7,(hl)
 480+ 9C11 C9           	ret
 481+ 9C12
 482+ 9C12              Desplaza_izquierda
 483+ 9C12
 484+ 9C12 3A C8 89     	ld a,(Vel_left)
 485+ 9C15 47           	ld b,a
 486+ 9C16 2A C3 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C19 23           1 inc hl
 488+ 9C1A 23           	inc hl
 489+ 9C1B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C1D 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C20 CD AC 8D     	call Extrae_address
 492+ 9C23 22 B7 89     	ld (Puntero_objeto),hl
 493+ 9C26
 494+ 9C26              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C26
 496+ 9C26              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C26              ; Cuántos movimientos hemos hecho ??
 498+ 9C26              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C26
 500+ 9C26 2A BF 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C29 EB           	ex de,hl
 502+ 9C2A A7           	and a
 503+ 9C2B ED 52        	sbc hl,de
 504+ 9C2D CB 3D        	srl l
 505+ 9C2F 3E 08        6 ld a,8
 506+ 9C31 95           	sub l
 507+ 9C32 30 1E        	jr nc,3F
 508+ 9C34
 509+ 9C34              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C34              ; B="0".
 511+ 9C34
 512+ 9C34 04           4 inc b
 513+ 9C35 3C           	inc a
 514+ 9C36 20 FC        	jr nz,4B
 515+ 9C38 78           	ld a,b
 516+ 9C39 08           	ex af,af
 517+ 9C3A 2A BF 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C3D 23           5 inc hl
 519+ 9C3E 23           	inc hl
 520+ 9C3F 10 FC        	djnz 5B
 521+ 9C41 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C44 CD AC 8D     	call Extrae_address
 523+ 9C47 22 B7 89     	ld (Puntero_objeto),hl
 524+ 9C4A
 525+ 9C4A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C4A              ; _(Posicion_actual).
 527+ 9C4A
 528+ 9C4A 21 B5 89     	ld hl,Posicion_actual
 529+ 9C4D 35           	dec (hl)
 530+ 9C4E 08           	ex af,af
 531+ 9C4F 6F           	ld l,a
 532+ 9C50 18 DD        	jr 6B
 533+ 9C52
 534+ 9C52              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C52
 536+ 9C52 47           3 ld b,a
 537+ 9C53 2A BD 89     	ld hl,(Indice_Sprite_der)
 538+ 9C56 23           2 inc hl
 539+ 9C57 23           	inc hl
 540+ 9C58 10 FC        	djnz 2B
 541+ 9C5A 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C5D C9           8 ret
 543+ 9C5E
 544+ 9C5E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C5E              ;
 546+ 9C5E              ;	modifica_parametros_1er_DESPLZ
 547+ 9C5E              ;
 548+ 9C5E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C5E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C5E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C5E
 552+ 9C5E 3A BB 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C61 A7           	and a
 554+ 9C62 20 1E        	jr nz,1F
 555+ 9C64 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C65 32 BB 89         ld (CTRL_DESPLZ),a
 557+ 9C68 21 B4 89     	ld hl,Columns
 558+ 9C6B 34           	inc (hl)
 559+ 9C6C 3A C7 89     	ld a,(Cuad_objeto)
 560+ 9C6F E6 01        	and 1
 561+ 9C71 20 0F        	jr nz,1F
 562+ 9C73 2A B5 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C76 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C77 22 B5 89     	ld (Posicion_actual),hl
 565+ 9C7A CD 53 9D     	call Genera_coordenadas
 566+ 9C7D CD D9 9C     	call Dec_CTRL_DESPLZ
 567+ 9C80 18 03        	jr 2F
 568+ 9C82 CD D9 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C85 C9           2 ret
 570+ 9C86
 571+ 9C86              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C86
 573+ 9C86 3A BB 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C89 FE F7        	cp $f7
 575+ 9C8B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C8D 30 2C        	jr nc,3F
 577+ 9C8F
 578+ 9C8F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C8F
 580+ 9C8F 06 00        	ld b,0
 581+ 9C91 04           4 inc b
 582+ 9C92 3C           	inc a
 583+ 9C93 FE F7        	cp $f7
 584+ 9C95 20 FA        	jr nz,4B
 585+ 9C97 3E FF        	ld a,$ff
 586+ 9C99 90           	sub b
 587+ 9C9A 32 BB 89     	ld (CTRL_DESPLZ),a
 588+ 9C9D 18 1C        	jr 3F
 589+ 9C9F
 590+ 9C9F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C9F
 592+ 9C9F 21 B4 89     1 ld hl,Columns
 593+ 9CA2 35           	dec (hl)
 594+ 9CA3 AF           	xor a
 595+ 9CA4 32 BB 89     	ld (CTRL_DESPLZ),a
 596+ 9CA7 3A C7 89     	ld a,(Cuad_objeto)
 597+ 9CAA E6 01        	and 1
 598+ 9CAC 28 0A        	jr z,2F
 599+ 9CAE 2A B5 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CB1 2B           	dec hl
 601+ 9CB2 22 B5 89     	ld (Posicion_actual),hl
 602+ 9CB5 CD 53 9D     	call Genera_coordenadas
 603+ 9CB8
 604+ 9CB8              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CB8
 606+ 9CB8 CD D6 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CBB C9           3 ret
 608+ 9CBC
 609+ 9CBC              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CBC              ;
 611+ 9CBC              ;	19/10/22
 612+ 9CBC              ;
 613+ 9CBC              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CBC              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CBC
 616+ 9CBC 3A B9 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CBF FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CC1 C9           	ret
 619+ 9CC2
 620+ 9CC2              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CC2              ;
 622+ 9CC2              ;	19/10/22
 623+ 9CC2              ;
 624+ 9CC2              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CC2              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CC2
 627+ 9CC2 3A B9 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CC5 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CC7 C9           	ret
 630+ 9CC8
 631+ 9CC8              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CC8              ;
 633+ 9CC8              ;	24/7/22
 634+ 9CC8              ;
 635+ 9CC8              ;	Inc_CTRL_DESPLZ
 636+ 9CC8              ;
 637+ 9CC8              ;
 638+ 9CC8              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CC8
 640+ 9CC8 21 BB 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CCB 3A C9 89     	ld a,(Vel_right)
 642+ 9CCE A7           	and a
 643+ 9CCF 28 06        	jr z,1F
 644+ 9CD1 47           	ld b,a
 645+ 9CD2 34           3 inc (hl)
 646+ 9CD3 10 FD        	djnz 3B
 647+ 9CD5 18 01        	jr 2F
 648+ 9CD7 34           1 inc (hl)
 649+ 9CD8 C9           2 ret
 650+ 9CD9
 651+ 9CD9              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CD9              ;
 653+ 9CD9              ;	5/2/23
 654+ 9CD9              ;
 655+ 9CD9              ;	Dec_CTRL_DESPLZ
 656+ 9CD9              ;
 657+ 9CD9              ;
 658+ 9CD9              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CD9
 660+ 9CD9 21 BB 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CDC 3A C8 89     	ld a,(Vel_left)
 662+ 9CDF A7           	and a
 663+ 9CE0 28 06        	jr z,1F
 664+ 9CE2 47           	ld b,a
 665+ 9CE3 35           3 dec (hl)
 666+ 9CE4 10 FD        	djnz 3B
 667+ 9CE6 18 01        	jr 2F
 668+ 9CE8 35           1 dec (hl)
 669+ 9CE9 C9           2 ret
 670+ 9CEA
 671+ 9CEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CEA
 673+ 9CEA 2A B5 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CED 01 1F 00     	ld bc,31
 675+ 9CF0 A7           	and a
 676+ 9CF1 ED 4A        	adc hl,bc
 677+ 9CF3 22 B5 89     	ld (Posicion_actual),hl
 678+ 9CF6 21 E1 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CF9 CB C6        	set 0,(hl)
 680+ 9CFB C9           	ret
 681+ 9CFC
 682+ 9CFC              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CFC
 684+ 9CFC 2A B5 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9CFF 01 1F 00     	ld bc,31
 686+ 9D02 A7           	and a
 687+ 9D03 ED 42        	sbc hl,bc
 688+ 9D05 22 B5 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D08 21 E1 89     	ld hl,Ctrl_0
 690+ 9D0B CB CE        	set 1,(hl)
 691+ 9D0D C9           	ret
 692+ 9D0E
 693+ 9D0E              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D0E
 695+ 9D0E 24           Reaparece_abajo inc h
 696+ 9D0F 01 E0 17     	ld bc,$17e0
 697+ 9D12 A7           	and a
 698+ 9D13 ED 4A        	adc hl,bc
 699+ 9D15 22 B5 89     	ld (Posicion_actual),hl
 700+ 9D18 21 E1 89     	ld hl,Ctrl_0
 701+ 9D1B CB D6        	set 2,(hl)
 702+ 9D1D C9           	ret
 703+ 9D1E
 704+ 9D1E              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D1E
 706+ 9D1E 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D21 A7           	and a
 708+ 9D22 ED 42        	sbc hl,bc
 709+ 9D24 22 B5 89     	ld (Posicion_actual),hl
 710+ 9D27 21 E1 89     	ld hl,Ctrl_0
 711+ 9D2A CB DE        	set 3,(hl)
 712+ 9D2C C9           	ret
 713+ 9D2D
 714+ 9D2D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D2D              ;
 716+ 9D2D              ;	15/07/23
 717+ 9D2D
 718+ 9D2D              Reinicio
 719+ 9D2D
 720+ 9D2D              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D2D
 722+ 9D2D AF           	xor a
 723+ 9D2E 21 E8 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D31 CD 4F 9D     	call Limpia_contenido_hl
 725+ 9D34
 726+ 9D34 21 B5 89     	ld hl,Posicion_actual
 727+ 9D37 CD 4F 9D     	call Limpia_contenido_hl
 728+ 9D3A
 729+ 9D3A CD 70 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D3D CD FA 9F     	call Inicia_Puntero_mov
 731+ 9D40
 732+ 9D40 21 EA 89     	ld hl,Incrementa_puntero
 733+ 9D43 06 05        	ld b,5
 734+ 9D45 77           1 ld (hl),a
 735+ 9D46 23           	inc hl
 736+ 9D47 10 FC        	djnz 1B
 737+ 9D49
 738+ 9D49 21 F4 89     	ld hl,Ctrl_2
 739+ 9D4C CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D4E
 741+ 9D4E C9           	ret
 742+ 9D4F
 743+ 9D4F 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D50 23           	inc hl
 745+ 9D51 77           	ld (hl),a
 746+ 9D52 C9           	ret
 747+ 9D53
 748+ 9D53
# file closed: Direcciones.asm
1439  9D53              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D53              ; ------------------------------------------------------------------------
   2+ 9D53              ;
   3+ 9D53              ;	02/04/23
   4+ 9D53              ;
   5+ 9D53              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D53              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D53              ;
   8+ 9D53              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D53              ;
  10+ 9D53              ;	Modifica: A,BC y DE.
  11+ 9D53
  12+ 9D53 C5           Genera_coordenadas push bc
  13+ 9D54 E5           	push hl
  14+ 9D55 D5           	push de
  15+ 9D56
  16+ 9D56 2A B5 89     	ld hl,(Posicion_actual)
  17+ 9D59
  18+ 9D59 7D           	ld a,l
  19+ 9D5A E6 1F        	and $1f
  20+ 9D5C 32 B9 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D5F
  22+ 9D5F CD C8 99     	call calcula_tercio
  23+ 9D62 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D63
  25+ 9D63 1E 00        	ld e,0
  26+ 9D65 7D           	ld a,l
  27+ 9D66 E6 E0        	and $e0
  28+ 9D68 28 01        	jr z,1F
  29+ 9D6A 04           	inc b
  30+ 9D6B
  31+ 9D6B 04           1 inc b
  32+ 9D6C 05           	dec b
  33+ 9D6D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D6F              ;														; _ , salimos.
  35+ 9D6F 1C           3 inc e
  36+ 9D70 D6 20        	sub 32
  37+ 9D72 20 FB        	jr nz,3B
  38+ 9D74 10 F5        	djnz 1B
  39+ 9D76
  40+ 9D76 7B           2 ld a,e
  41+ 9D77 32 BA 89     	ld (Coordenada_y),a
  42+ 9D7A
  43+ 9D7A D1           	pop de
  44+ 9D7B E1           	pop hl
  45+ 9D7C C1           	pop bc
  46+ 9D7D
  47+ 9D7D C9           	ret
  48+ 9D7E
  49+ 9D7E              ; ------------------------------------------------------------------------
  50+ 9D7E              ;	28/05/23
  51+ 9D7E              ;
  52+ 9D7E              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D7E              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D7E              ;
  55+ 9D7E              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D7E              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D7E              ;
  58+ 9D7E              ;		DE="$120d"
  59+ 9D7E              ;
  60+ 9D7E              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D7E              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D7E              ;
  63+ 9D7E              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D7E
  65+ 9D7E              ;	Modifica: A,BC y DE.
  66+ 9D7E
  67+ 9D7E
  68+ 9D7E              Genera_coordenadas_disparo
  69+ 9D7E
  70+ 9D7E              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D7E
  72+ 9D7E 7D           	ld a,l
  73+ 9D7F E6 1F        	and $1f
  74+ 9D81 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D82 CD C8 99     	call calcula_tercio
  76+ 9D85 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D86 1E 00        	ld e,0
  78+ 9D88 7D           	ld a,l
  79+ 9D89 E6 E0        	and $e0
  80+ 9D8B 28 01        	jr z,1F
  81+ 9D8D 04           	inc b
  82+ 9D8E 1C           1 inc e
  83+ 9D8F D6 20        	sub 32
  84+ 9D91 20 FB        	jr nz,1B
  85+ 9D93 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D95 C9           	ret
  87+ 9D96
# file closed: Genera_coordenadas.asm
1440  9D96              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D96
   2+ 9D96
   3+ 9D96              ;   07/07/23
   4+ 9D96              ;
   5+ 9D96              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D96              ;
   7+ 9D96              ;   Codificación:
   8+ 9D96              ;
   9+ 9D96              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D96              ;
  11+ 9D96              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D96              ;
  13+ 9D96              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D96              ;
  15+ 9D96              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D96              ;
  17+ 9D96              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D96              ;                               ..... %01000010 Vel_up 4
  19+ 9D96              ;                                               Vel_down 2
  20+ 9D96              ;                               ..... $42
  21+ 9D96              ;
  22+ 9D96              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D96              ;
  24+ 9D96              ;                               ..... %01000010 Vel_left 4
  25+ 9D96              ;                                               Vel_right 2
  26+ 9D96              ;                               ..... $42
  27+ 9D96              ;
  28+ 9D96              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D96              ;
  30+ 9D96              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D96              ;
  32+ 9D96              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D96              ;
  34+ 9D96              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D96              ;                                     $53
  36+ 9D96              ;
  37+ 9D96              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D96              ;
  39+ 9D96              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D96              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D96              ;
  42+ 9D96              ;                       Arriba ..... $81
  43+ 9D96              ;                       Arriba - izquierda ..... $a1
  44+ 9D96              ;                       Arriba - derecha ..... $91
  45+ 9D96              ;
  46+ 9D96              ;                       Abajo ..... $41
  47+ 9D96              ;                       Abajo - izquierda ..... $61
  48+ 9D96              ;                       Abajo - derecha ..... $51
  49+ 9D96              ;
  50+ 9D96              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D96              ;
  52+ 9D96              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D96              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D96              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D96              ;
  56+ 9D96              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D96              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D96              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D96              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D96              ;
  61+ 9D96              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D96              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D96              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D96              ;
  65+ 9D96              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D96              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D96              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D96              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D96
  70+ 9D96              ; ----- ----- ----- ----- -----
  71+ 9D96
  72+ 9D96 C2 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D98 CA 9D            defw F_1
  74+ 9D9A D4 9D            defw F_2
  75+ 9D9C DE 9D            defw Codo_abajo_derecha
  76+ 9D9E 12 9E            defw Derecha_y_subiendo
  77+ 9DA0 1C 9E            defw Derecha_y_subiendo_1
  78+ 9DA2 26 9E            defw F_3
  79+ 9DA4 30 9E            defw F_4
  80+ 9DA6 3A 9E            defw Derecha_y_bajando
  81+ 9DA8 44 9E            defw Derecha_y_bajando_1
  82+ 9DAA 4E 9E            defw Derecha_y_bajando_2
  83+ 9DAC 58 9E            defw Codo_derecha_abajo
  84+ 9DAE 88 9E            defw Codo_abajo_izq.
  85+ 9DB0 BC 9E            defw Izquierda_y_subiendo
  86+ 9DB2 C6 9E            defw Izquierda_y_subiendo_1
  87+ 9DB4 D0 9E            defw F_5
  88+ 9DB6 DA 9E            defw F_6
  89+ 9DB8 E4 9E            defw Izquierda_y_bajando
  90+ 9DBA EE 9E            defw Izquierda_y_bajando_1
  91+ 9DBC F8 9E            defw Izquierda_y_bajando_2
  92+ 9DBE 02 9F            defw Codo_izquierda_abajo
  93+ 9DC0 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DC2
  95+ 9DC2 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DC6 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DCA
  98+ 9DCA 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DCE 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DD2 08 00
 100+ 9DD4 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DD8 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DDC 0F FE
 102+ 9DDE
 103+ 9DDE 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DE2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DE6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DEA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DEE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DF2 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DF6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DFA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DFE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E02 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E06 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E0A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E0E 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E12
 117+ 9E12 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E16 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E1A 06 00
 119+ 9E1C
 120+ 9E1C 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E20 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E24 02 00
 122+ 9E26
 123+ 9E26 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E2A 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E2E 04 00
 125+ 9E30 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E34 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E38 08 00
 127+ 9E3A
 128+ 9E3A 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E3E 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E42 02 00
 130+ 9E44
 131+ 9E44 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E48 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E4C 06 00
 133+ 9E4E
 134+ 9E4E 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E52 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E56 06 00
 136+ 9E58
 137+ 9E58              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E58
 139+ 9E58 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E64 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E68 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E6C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E70 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E74 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E78 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E7C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E80 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E84 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E88
 152+ 9E88 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E8C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E90 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E94 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E98 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E9C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EA0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EA4 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EA8 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EAC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EB0 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EB4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EB8 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EBC
 166+ 9EBC 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EC0 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EC4 06 00
 168+ 9EC6
 169+ 9EC6 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9ECA 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9ECE 02 00
 171+ 9ED0
 172+ 9ED0 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9ED4 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9ED8 04 00
 174+ 9EDA 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EDE 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EE2 08 00
 176+ 9EE4
 177+ 9EE4 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EE8 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EEC 02 00
 179+ 9EEE
 180+ 9EEE 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EF2 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EF6 06 00
 182+ 9EF8
 183+ 9EF8 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EFC 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F00 06 00
 185+ 9F02
 186+ 9F02 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F06 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F0A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F0E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F12 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F16 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F1A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F1E 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F22 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F26 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F2A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F2E 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F32
 199+ 9F32              ; ----- ----- ----- ----- -----
 200+ 9F32              ;
 201+ 9F32              ;   27/06/23
 202+ 9F32
 203+ 9F32              Movimiento
 204+ 9F32
 205+ 9F32              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F32
 207+ 9F32              ;    ld hl,(Posicion_actual)
 208+ 9F32
 209+ 9F32 3A F4 89         ld a,(Ctrl_2)
 210+ 9F35 CB 57            bit 2,a
 211+ 9F37 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F39
 213+ 9F39 2A E6 89         ld hl,(Puntero_mov)
 214+ 9F3C 7E               ld a,(hl)
 215+ 9F3D
 216+ 9F3D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F3D
 218+ 9F3D              Inicia_desplazamiento.
 219+ 9F3D
 220+ 9F3D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F3D
 222+ 9F3D CD 31 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F40
 224+ 9F40              ; Iniciamos (Repetimos_mov).
 225+ 9F40
 226+ 9F40 7E               ld a,(hl)
 227+ 9F41 E6 0F            and $0f
 228+ 9F43 32 EC 89         ld (Repetimos_desplazamiento),a
 229+ 9F46 32 ED 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F49
 231+ 9F49              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F49
 233+ 9F49 23               inc hl
 234+ 9F4A 7E               ld a,(hl)
 235+ 9F4B 32 EF 89         ld (Cola_de_desplazamiento),a
 236+ 9F4E 2B               dec hl
 237+ 9F4F
 238+ 9F4F 21 F4 89         ld hl,Ctrl_2
 239+ 9F52 CB D6            set 2,(hl)
 240+ 9F54
 241+ 9F54              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F54              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F54
 244+ 9F54              Desplazamiento_iniciado
 245+ 9F54
 246+ 9F54 CD 05 A0         call Aplica_desplazamiento
 247+ 9F57
 248+ 9F57 3A F4 89         ld a,(Ctrl_2)
 249+ 9F5A CB 67            bit 4,a
 250+ 9F5C C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F5D
 252+ 9F5D 21 EC 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F60 35               dec (hl)
 254+ 9F61 C0               ret nz
 255+ 9F62
 256+ 9F62              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F62              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F62              ; Analiza (Cola_de_desplazamiento).
 259+ 9F62
 260+ 9F62 3A EF 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F65 A7               and a
 262+ 9F66 CC 5A A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F69 28 30            jr z,Reinicia_el_movimiento
 264+ 9F6B
 265+ 9F6B FE FF            cp $ff
 266+ 9F6D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F6F
 268+ 9F6F FE FE            cp $fe
 269+ 9F71 CC DE 9F         call z,Fijamos_bucle
 270+ 9F74 28 25            jr z,Reinicia_el_movimiento
 271+ 9F76
 272+ 9F76 FE FD            cp $fd
 273+ 9F78 20 11            jr nz,1F
 274+ 9F7A
 275+ 9F7A              ; ---
 276+ 9F7A              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F7A
 278+ 9F7A 3A F4 89         ld a,(Ctrl_2)
 279+ 9F7D CB 5F            bit 3,a
 280+ 9F7F 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F81
 282+ 9F81              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F81
 284+ 9F81 21 F4 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F84 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F86
 287+ 9F86 CD EF 9F         call Inicia_Repetimos_movimiento
 288+ 9F89 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F8B              ; ---
 290+ 9F8B
 291+ 9F8B FE 01        1 cp 1
 292+ 9F8D CA C8 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F90
 294+ 9F90 3D               dec a
 295+ 9F91 32 EF 89         ld (Cola_de_desplazamiento),a
 296+ 9F94
 297+ 9F94 3A ED 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F97 32 EC 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F9A              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F9A C9               ret
 301+ 9F9B
 302+ 9F9B              Reinicia_el_movimiento
 303+ 9F9B
 304+ 9F9B 3A F4 89         ld a,(Ctrl_2)
 305+ 9F9E CB 5F            bit 3,a
 306+ 9FA0 28 1B            jr z,2F
 307+ 9FA2
 308+ 9FA2              ; (Cola_de_desplazamiento)="254".
 309+ 9FA2
 310+ 9FA2 21 EE 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FA5 35               dec (hl)
 312+ 9FA6 20 15            jr nz,2F
 313+ 9FA8
 314+ 9FA8              ; Fin de las repeticiones del último movimiento.
 315+ 9FA8
 316+ 9FA8 21 F4 89         ld hl,Ctrl_2
 317+ 9FAB CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FAD
 319+ 9FAD 2A E6 89         ld hl,(Puntero_mov)
 320+ 9FB0 23               inc hl
 321+ 9FB1 23               inc hl
 322+ 9FB2 23               inc hl
 323+ 9FB3 22 E6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FB6              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FB6 7E               ld a,(hl)
 326+ 9FB7 32 EF 89         ld (Cola_de_desplazamiento),a
 327+ 9FBA
 328+ 9FBA C3 62 9F         jp Cola
 329+ 9FBD
 330+ 9FBD
 331+ 9FBD CD FA 9F     2 call Inicia_Puntero_mov
 332+ 9FC0
 333+ 9FC0 21 F4 89         ld hl,Ctrl_2
 334+ 9FC3 CB 96            res 2,(hl)
 335+ 9FC5
 336+ 9FC5 C3 32 9F         jp Movimiento
 337+ 9FC8
 338+ 9FC8              Siguiente_desplazamiento
 339+ 9FC8
 340+ 9FC8              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FC8              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FC8
 343+ 9FC8 21 F4 89         ld hl,Ctrl_2
 344+ 9FCB CB 96            res 2,(hl)
 345+ 9FCD
 346+ 9FCD 2A E6 89         ld hl,(Puntero_mov)
 347+ 9FD0 23               inc hl
 348+ 9FD1 23               inc hl
 349+ 9FD2 22 E6 89         ld (Puntero_mov),hl
 350+ 9FD5
 351+ 9FD5 7E               ld a,(hl)
 352+ 9FD6 A7               and a
 353+ 9FD7 CC 5A A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FDA CA 9B 9F         jp z,Reinicia_el_movimiento
 355+ 9FDD
 356+ 9FDD C9               ret
 357+ 9FDE              ; Subrutinas -----------------------------------------
 358+ 9FDE              ; ---------- --------- --------- ---------- ----------
 359+ 9FDE              ;
 360+ 9FDE              ;   24/07/23
 361+ 9FDE              ;
 362+ 9FDE              ;   Fijamos_bucle
 363+ 9FDE              ;
 364+ 9FDE              ;
 365+ 9FDE
 366+ 9FDE              Fijamos_bucle
 367+ 9FDE
 368+ 9FDE 3A EA 89         ld a,(Incrementa_puntero)
 369+ 9FE1 3C               inc a
 370+ 9FE2 32 EB 89         ld (Incrementa_puntero_backup),a
 371+ 9FE5
 372+ 9FE5 CD 5A A0         call Incrementa_Puntero_indice_mov
 373+ 9FE8 2A E4 89         ld hl,(Puntero_indice_mov)
 374+ 9FEB 22 E8 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FEE C9               ret
 376+ 9FEF
 377+ 9FEF              ; ---------- --------- --------- ---------- ----------
 378+ 9FEF              ;
 379+ 9FEF              ;   07/7/23
 380+ 9FEF              ;
 381+ 9FEF              ;   Inicia_Repetimos_movimiento
 382+ 9FEF              ;
 383+ 9FEF              ;
 384+ 9FEF
 385+ 9FEF              Inicia_Repetimos_movimiento
 386+ 9FEF
 387+ 9FEF              ; Iniciamos (Repetimos_movimiento).
 388+ 9FEF
 389+ 9FEF DD 2A E6 89      ld ix,(Puntero_mov)
 390+ 9FF3 DD 7E 02         ld a,(ix+2)
 391+ 9FF6 32 EE 89         ld (Repetimos_movimiento),a
 392+ 9FF9
 393+ 9FF9 C9               ret
 394+ 9FFA
 395+ 9FFA              ; ---------- --------- --------- ---------- ----------
 396+ 9FFA              ;
 397+ 9FFA              ;   26/6/23
 398+ 9FFA              ;
 399+ 9FFA              ;   Inicia_Puntero_mov
 400+ 9FFA              ;
 401+ 9FFA              ;
 402+ 9FFA
 403+ 9FFA 2A E4 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9FFD 5E               ld e,(hl)
 405+ 9FFE 23               inc hl
 406+ 9FFF 56               ld d,(hl)
 407+ A000 EB               ex de,hl
 408+ A001 22 E6 89         ld (Puntero_mov),hl
 409+ A004 C9               ret
 410+ A005
 411+ A005              ; ---------- --------- --------- ---------- ----------
 412+ A005              ;
 413+ A005              ;   27/06/23
 414+ A005              ;
 415+ A005              ;   Aplica_movimiento.
 416+ A005
 417+ A005              Aplica_desplazamiento
 418+ A005
 419+ A005              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A005
 421+ A005 2A E6 89         ld hl, (Puntero_mov)
 422+ A008
 423+ A008 7E               ld a,(hl)
 424+ A009 E6 F0            and $f0
 425+ A00B C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A00C
 427+ A00C CB 7E            bit 7,(hl)
 428+ A00E 28 03            jr z,1F
 429+ A010 CD 3F 9A         call Mov_up
 430+ A013 2A E6 89     1 ld hl, (Puntero_mov)
 431+ A016 CB 76            bit 6,(hl)
 432+ A018 28 03            jr z,2F
 433+ A01A CD 0E 9A         call Mov_down
 434+ A01D 2A E6 89     2 ld hl, (Puntero_mov)
 435+ A020 CB 6E            bit 5,(hl)
 436+ A022 28 03            jr z,3F
 437+ A024 CD A0 9B         call Mov_left
 438+ A027 2A E6 89     3 ld hl, (Puntero_mov)
 439+ A02A CB 66            bit 4,(hl)
 440+ A02C C8               ret z
 441+ A02D CD 82 9A         call Mov_right
 442+ A030 C9               ret
 443+ A031
 444+ A031              ; ---------- --------- --------- ---------- ----------
 445+ A031              ;
 446+ A031              ;   26/06/23
 447+ A031              ;
 448+ A031              ;   Ajusta_velocidad_desplazamiento.
 449+ A031
 450+ A031              Ajusta_velocidad_desplazamiento
 451+ A031
 452+ A031              ; 1er byte de la cadena de movimiento.
 453+ A031              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A031
 455+ A031 CD 4F A0         call Extrae_nibble_alto
 456+ A034
 457+ A034 32 CA 89         ld (Vel_up),a
 458+ A037 79               ld a,c
 459+ A038 E6 0F            and $0f
 460+ A03A 32 CB 89         ld (Vel_down),a
 461+ A03D
 462+ A03D              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A03D              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A03D
 465+ A03D 23               inc hl
 466+ A03E CD 4F A0         call Extrae_nibble_alto
 467+ A041
 468+ A041 32 C8 89         ld (Vel_left),a
 469+ A044 79               ld a,c
 470+ A045 E6 0F            and $0f
 471+ A047 32 C9 89         ld (Vel_right),a
 472+ A04A
 473+ A04A              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A04A
 475+ A04A 23               inc hl
 476+ A04B 22 E6 89         ld (Puntero_mov),hl
 477+ A04E C9               ret
 478+ A04F
 479+ A04F 06 04        Extrae_nibble_alto ld b,4
 480+ A051 7E               ld a,(hl)
 481+ A052 4F               ld c,a
 482+ A053 E6 F0            and $f0
 483+ A055 CB 3F        1 srl a
 484+ A057 10 FC            djnz 1B
 485+ A059 C9               ret
 486+ A05A
 487+ A05A              ; ---------- --------- --------- ---------- ----------
 488+ A05A              ;
 489+ A05A              ;   5/7/23
 490+ A05A              ;
 491+ A05A              ;   Incrementa_Puntero_indice_mov
 492+ A05A
 493+ A05A              Incrementa_Puntero_indice_mov
 494+ A05A
 495+ A05A 21 EA 89         ld hl,Incrementa_puntero
 496+ A05D 34               inc (hl)
 497+ A05E
 498+ A05E 2A E4 89         ld hl,(Puntero_indice_mov)
 499+ A061 01 02 00         ld bc,2
 500+ A064 A7               and a
 501+ A065 09               add hl,bc
 502+ A066 22 E4 89         ld (Puntero_indice_mov),hl
 503+ A069
 504+ A069 7E               ld a,(hl)
 505+ A06A A7               and a
 506+ A06B
 507+ A06B              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A06B
 509+ A06B              ;    jr z,$
 510+ A06B
 511+ A06B              ;! Reinicia el Patrón de movimiento.
 512+ A06B
 513+ A06B CC 70 A0         call z,Inicializa_Puntero_indice_mov
 514+ A06E
 515+ A06E AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A06F
 517+ A06F C9               ret
 518+ A070
 519+ A070
 520+ A070              ; ---------- --------- --------- ---------- ----------
 521+ A070              ;
 522+ A070              ;   24/07/23
 523+ A070              ;
 524+ A070              ;   Inicializa_Puntero_indice_mov
 525+ A070
 526+ A070              Inicializa_Puntero_indice_mov
 527+ A070
 528+ A070              ; Existe etiqueta de bucle principal???
 529+ A070
 530+ A070 2A E8 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A073 24               inc h
 532+ A074 25               dec h
 533+ A075 28 05            jr z,2F
 534+ A077
 535+ A077 22 E4 89         ld (Puntero_indice_mov),hl
 536+ A07A 18 14            jr 3F
 537+ A07C
 538+ A07C              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A07C
 540+ A07C 3A EA 89     2 ld a,(Incrementa_puntero)
 541+ A07F 47               ld b,a
 542+ A080
 543+ A080 2A E4 89         ld hl,(Puntero_indice_mov)
 544+ A083 2B           1 dec hl
 545+ A084 2B               dec hl
 546+ A085 10 FC            djnz 1B
 547+ A087 22 E4 89         ld (Puntero_indice_mov),hl
 548+ A08A
 549+ A08A AF               xor a
 550+ A08B 32 EA 89         ld (Incrementa_puntero),a
 551+ A08E 18 06            jr 4F
 552+ A090
 553+ A090 3A EB 89     3 ld a,(Incrementa_puntero_backup)
 554+ A093 32 EA 89         ld (Incrementa_puntero),a
 555+ A096 C9           4 ret
 556+ A097
 557+ A097
 558+ A097
# file closed: Patrones_de_mov.asm
1441  A097              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A097              ; Relojes y temporizaciones.
   2+ A097
   3+ A097              ; ------------------------------------------------------
   4+ A097              ;
   5+ A097              ;	16/7/23
   6+ A097              ;
   7+ A097              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A097              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A097              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A097              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A097              ;
  12+ A097              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A097              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A097
  15+ A097              ; Disparo_entidad db 1
  16+ A097              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A097              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A097
  19+ A097              Habilita_disparos
  20+ A097
  21+ A097 7E           	ld a,(hl)
  22+ A098 A7           	and a
  23+ A099 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A09A
  25+ A09A EB           	ex de,hl
  26+ A09B
  27+ A09B 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A09C C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A09D
  30+ A09D              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A09D
  32+ A09D 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A09E 7E           	ld a,(hl)
  34+ A09F 23           	inc hl
  35+ A0A0 77           	ld (hl),a
  36+ A0A1
  37+ A0A1 EB           	ex de,hl						; Habilitamos disparo.
  38+ A0A2 3E 01        	ld a,1
  39+ A0A4 77           	ld (hl),a
  40+ A0A5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1442  A0A6              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0A6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0A6              ;
   3+ A0A6              ;	3/1/23
   4+ A0A6              ;
   5+ A0A6              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0A6
   7+ A0A6              ;	ADC HL,SP	LD (addr),SP
   8+ A0A6              ;	ADD HL,SP	LD SP,(addr)
   9+ A0A6              ;	ADD IX,SP	LD SP,nn
  10+ A0A6              ; 	ADD IY,SP	LD SP,HL
  11+ A0A6              ;				LD SP,IX
  12+ A0A6              ;	DEC SP		LD SP,IY
  13+ A0A6
  14+ A0A6              ;	EX (SP),HL
  15+ A0A6              ;	EX (SP),IX
  16+ A0A6              ;	EX (SP),IY
  17+ A0A6
  18+ A0A6              ;	INC SP
  19+ A0A6
  20+ A0A6                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 07 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  33+ 7FA7
  34+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  35+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  36+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  37+ 7FAC
  38+ 7FAC 3A F6 89         ld a,(Ctrl_1)
  39+ 7FAF CB 47            bit 0,a
  40+ 7FB1 28 05            jr z,2F
  41+ 7FB3
  42+ 7FB3 2A 0D 8A         ld hl,(Stack_snapshot_disparos)
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A 0B 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB
  47+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  48+ 7FBD
  49+ 7FBD D1           1 pop de
  50+ 7FBE 73               ld (hl),e
  51+ 7FBF 23               inc hl
  52+ 7FC0 72               ld (hl),d
  53+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  54+ 7FC2 10 F9            djnz 1B
  55+ 7FC4
  56+ 7FC4 CB 47            bit 0,a
  57+ 7FC6 28 05            jr z,5F
  58+ 7FC8
  59+ 7FC8 22 0D 8A         ld (Stack_snapshot_disparos),hl
  60+ 7FCB 18 03            jr 6F
  61+ 7FCD
  62+ 7FCD 22 0B 8A     5 ld (Stack_snapshot),hl
  63+ 7FD0 ED 7B 07 8A  6 ld sp,(Stack)
  64+ 7FD4
  65+ 7FD4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  66+ 7FD4
  67+ 7FD4
  68+ 7FD4
  69+ 7FD4
  70+ 7FD4
  71+ 7FD4 C9               ret
  72+ 7FD5
  73+ 7FD5              ; ------------------------------------------------
  74+ 7FD5              ;
  75+ 7FD5              ;   3/08/23
  76+ 7FD5              ;
  77+ 7FD5              ;   La rutina estará situada justo después de la Caja_de_disparotes.
  78+ 7FD5
  79+ 7FD5                  org $7421
  80+ 7421
  81+ 7421              Gestiona_cajas_de_malotes
  82+ 7421
  83+ 7421              ; Desplazamos cajas.
  84+ 7421
  85+ 7421              ;   Byte1 - Byte0
  86+ 7421
  87+ 7421 21 1A 74         ld hl,Caja_de_malotes+1
  88+ 7424 7E               ld a,(hl)
  89+ 7425 A7               and a
  90+ 7426 28 04            jr z,1F
  91+ 7428
  92+ 7428              ;   El Byte1 contiene datos. Transferimos al byte0.
  93+ 7428
  94+ 7428 2B               dec hl
  95+ 7429 77               ld (hl),a
  96+ 742A 18 09            jr 2F
  97+ 742C
  98+ 742C              ; Byte1="0".
  99+ 742C              ; Byte0 contiene datos?.
 100+ 742C
 101+ 742C 21 19 74     1 ld hl,Caja_de_malotes
 102+ 742F 7E               ld a,(hl)
 103+ 7430 A7               and a
 104+ 7431 28 02            jr z,2F
 105+ 7433
 106+ 7433              ; Limpiamos Byte0 si contiene datos.
 107+ 7433
 108+ 7433 36 00            ld (hl),0
 109+ 7435
 110+ 7435              ;   Byte2 - Byte1
 111+ 7435
 112+ 7435              ;   El byte2 contiene datos?
 113+ 7435
 114+ 7435 21 1B 74     2 ld hl,Caja_de_malotes+2
 115+ 7438 7E               ld a,(hl)
 116+ 7439 A7               and a
 117+ 743A 28 04            jr z,3F
 118+ 743C
 119+ 743C              ;   El Byte2 contiene datos. Transferimos al byte1.
 120+ 743C
 121+ 743C 2B               dec hl
 122+ 743D 77               ld (hl),a
 123+ 743E 18 09            jr 4F
 124+ 7440
 125+ 7440              ; Byte2="0".
 126+ 7440              ; Byte1 contiene datos?.
 127+ 7440
 128+ 7440 21 1A 74     3 ld hl,Caja_de_malotes+1
 129+ 7443 7E               ld a,(hl)
 130+ 7444 A7               and a
 131+ 7445 28 02            jr z,4F
 132+ 7447
 133+ 7447              ; Limpiamos Byte1 si contiene datos.
 134+ 7447
 135+ 7447 36 00            ld (hl),0
 136+ 7449
 137+ 7449              ;   Byte3 - Byte2
 138+ 7449
 139+ 7449              ;   El byte3 contiene datos?
 140+ 7449
 141+ 7449 21 1C 74     4 ld hl,Caja_de_malotes+3
 142+ 744C 7E               ld a,(hl)
 143+ 744D A7               and a
 144+ 744E 28 04            jr z,5F
 145+ 7450
 146+ 7450              ;   El Byte3 contiene datos. Transferimos al byte2.
 147+ 7450
 148+ 7450 2B               dec hl
 149+ 7451 77               ld (hl),a
 150+ 7452 18 08            jr 6F
 151+ 7454
 152+ 7454              ; Byte3="0".
 153+ 7454              ; Byte2 contiene datos?.
 154+ 7454
 155+ 7454 21 1B 74     5 ld hl,Caja_de_malotes+2
 156+ 7457 7E               ld a,(hl)
 157+ 7458 A7               and a
 158+ 7459 C8               ret z
 159+ 745A
 160+ 745A              ; Limpiamos Byte2 si contiene datos.
 161+ 745A
 162+ 745A 36 00            ld (hl),0
 163+ 745C
 164+ 745C C9           6 ret
 165+ 745D
 166+ 745D              ; ------------------------------------------------
 167+ 745D              ;
 168+ 745D              ;   31/07/23
 169+ 745D              ;
 170+ 745D              ;   La rutina estará situada justo después de la Caja_de_disparotes.
 171+ 745D
 172+ 745D              Gestiona_albumes_de_fotos
 173+ 745D
 174+ 745D              ; Desplazamos álbumes.
 175+ 745D
 176+ 745D              ; (Album_de_fotos_1) --- (Album_de_fotos).
 177+ 745D
 178+ 745D              ;   El álbum_1 contiene datos?
 179+ 745D
 180+ 745D
 181+ 745D
 182+ 745D 21 85 70         ld hl,Album_de_fotos_1+1
 183+ 7460 7E               ld a,(hl)
 184+ 7461 A7               and a
 185+ 7462 28 05            jr z,1F
 186+ 7464
 187+ 7464              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 188+ 7464
 189+ 7464 CD 13 75         call Album_1_a_Album_de_fotos
 190+ 7467 18 1A            jr 2F
 191+ 7469
 192+ 7469              ; El álbum_1 está vacío.
 193+ 7469              ; Album_de_fotos contiene datos?
 194+ 7469
 195+ 7469 21 01 70     1 ld hl,Album_de_fotos+1
 196+ 746C 7E               ld a,(hl)
 197+ 746D A7               and a
 198+ 746E 28 13            jr z,2F
 199+ 7470
 200+ 7470              ; Limpiamos Album_de_fotos.
 201+ 7470
 202+ 7470 21 00 70         ld hl,Album_de_fotos
 203+ 7473 36 00            ld (hl),0
 204+ 7475 11 01 70         ld de,Album_de_fotos+1
 205+ 7478 01 83 00         ld bc,$83
 206+ 747B ED B0            ldir
 207+ 747D 21 00 70         ld hl,Album_de_fotos
 208+ 7480 22 0B 8A         ld (Stack_snapshot),hl
 209+ 7483
 210+ 7483              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 211+ 7483
 212+ 7483              ;   El álbum_2 contiene datos?
 213+ 7483
 214+ 7483 21 08 71     2 ld hl,Album_de_fotos_2+1
 215+ 7486 7E               ld a,(hl)
 216+ 7487 A7               and a
 217+ 7488 28 05            jr z,3F
 218+ 748A
 219+ 748A              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 220+ 748A
 221+ 748A CD FE 74         call Album_2_a_Album_1
 222+ 748D 18 17            jr 4F
 223+ 748F
 224+ 748F              ; El álbum_2 está vacío.
 225+ 748F              ; álbum_1 contiene datos?
 226+ 748F
 227+ 748F 21 85 70     3 ld hl,Album_de_fotos_1+1
 228+ 7492 7E               ld a,(hl)
 229+ 7493 A7               and a
 230+ 7494 28 10            jr z,4F
 231+ 7496
 232+ 7496              ; Limpiamos Album_de_fotos_1.
 233+ 7496
 234+ 7496 21 84 70         ld hl,Album_de_fotos_1
 235+ 7499 36 00            ld (hl),0
 236+ 749B 11 85 70         ld de,Album_de_fotos_1+1
 237+ 749E 01 83 00         ld bc,$83
 238+ 74A1 ED B0            ldir
 239+ 74A3 21 84 70         ld hl,Album_de_fotos_1
 240+ 74A6              ;    ld (Stack_snapshot_1),hl
 241+ 74A6
 242+ 74A6              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 243+ 74A6
 244+ 74A6              ;   El álbum_3 contiene datos?
 245+ 74A6
 246+ 74A6 21 8B 71     4 ld hl,Album_de_fotos_3+1
 247+ 74A9 7E               ld a,(hl)
 248+ 74AA A7               and a
 249+ 74AB 28 05            jr z,5F
 250+ 74AD
 251+ 74AD              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 252+ 74AD
 253+ 74AD CD E9 74         call Album_3_a_Album_2
 254+ 74B0 18 17            jr 6F
 255+ 74B2
 256+ 74B2              ; El álbum_3 está vacío.
 257+ 74B2              ; álbum_2 contiene datos?
 258+ 74B2
 259+ 74B2 21 08 71     5 ld hl,Album_de_fotos_2+1
 260+ 74B5 7E               ld a,(hl)
 261+ 74B6 A7               and a
 262+ 74B7 28 10            jr z,6F
 263+ 74B9
 264+ 74B9              ; Limpiamos Album_de_fotos_2.
 265+ 74B9
 266+ 74B9 21 07 71         ld hl,Album_de_fotos_2
 267+ 74BC 36 00            ld (hl),0
 268+ 74BE 11 08 71         ld de,Album_de_fotos_2+1
 269+ 74C1 01 83 00         ld bc,$83
 270+ 74C4 ED B0            ldir
 271+ 74C6 21 07 71         ld hl,Album_de_fotos_2
 272+ 74C9              ;    ld (Stack_snapshot_2),hl
 273+ 74C9
 274+ 74C9 C9           6 ret
 275+ 74CA
 276+ 74CA              ; ----------------------------------------------
 277+ 74CA              ;
 278+ 74CA              ;   31/7/23
 279+ 74CA              ;
 280+ 74CA              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 281+ 74CA              ;
 282+ 74CA              ;   Para pasar datos de un album a otro:
 283+ 74CA              ;
 284+ 74CA              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 285+ 74CA              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 286+ 74CA              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 287+ 74CA
 288+ 74CA C5           Trasbase_de_datos push bc
 289+ 74CB A7               and a
 290+ 74CC ED 42            sbc hl,bc
 291+ 74CE E5               push hl
 292+ 74CF C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 293+ 74D0 E1               pop hl
 294+ 74D1 ED B0            ldir
 295+ 74D3 C9               ret
 296+ 74D4
 297+ 74D4              ; Paquetitos.
 298+ 74D4
 299+ 74D4              Trasbase_3a2
 300+ 74D4
 301+ 74D4              ;    ld hl,(Stack_snapshot_3)
 302+ 74D4 01 8A 71         ld bc,Album_de_fotos_3
 303+ 74D7 CD CA 74         call Trasbase_de_datos
 304+ 74DA C9               ret
 305+ 74DB
 306+ 74DB              Trasbase_2a1
 307+ 74DB
 308+ 74DB              ;    ld hl,(Stack_snapshot_2)
 309+ 74DB 01 07 71         ld bc,Album_de_fotos_2
 310+ 74DE CD CA 74         call Trasbase_de_datos
 311+ 74E1 C9               ret
 312+ 74E2
 313+ 74E2              Trasbase_1a0
 314+ 74E2
 315+ 74E2              ;    ld hl,(Stack_snapshot_1)
 316+ 74E2 01 84 70         ld bc,Album_de_fotos_1
 317+ 74E5 CD CA 74         call Trasbase_de_datos
 318+ 74E8 C9               ret
 319+ 74E9
 320+ 74E9              ; ----------------------------------------------
 321+ 74E9
 322+ 74E9              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 323+ 74E9              ; _ limpiamos (Album_de_fotos_3).
 324+ 74E9              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 325+ 74E9
 326+ 74E9              ;   Datos de álbum_3 a álbum_2.
 327+ 74E9
 328+ 74E9 11 07 71     Album_3_a_Album_2 ld de,Album_de_fotos_2
 329+ 74EC CD D4 74         call Trasbase_3a2
 330+ 74EF
 331+ 74EF              ;   Actualizamos (Stack_snapshot_2).
 332+ 74EF
 333+ 74EF EB               ex de,hl
 334+ 74F0              ;    ld (Stack_snapshot_2),hl
 335+ 74F0
 336+ 74F0              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 337+ 74F0
 338+ 74F0 AF               xor a
 339+ 74F1 32 8A 71         ld (Album_de_fotos_3),a
 340+ 74F4 11 8B 71         ld de,Album_de_fotos_3+1
 341+ 74F7 CD D4 74         call Trasbase_3a2
 342+ 74FA
 343+ 74FA 21 8A 71         ld hl,Album_de_fotos_3
 344+ 74FD              ;    ld (Stack_snapshot_3),hl
 345+ 74FD C9               ret
 346+ 74FE
 347+ 74FE 11 84 70     Album_2_a_Album_1 ld de,Album_de_fotos_1
 348+ 7501 CD DB 74         call Trasbase_2a1
 349+ 7504
 350+ 7504              ;   Actualizamos (Stack_snapshot_1).
 351+ 7504
 352+ 7504 EB               ex de,hl
 353+ 7505              ;    ld (Stack_snapshot_1),hl
 354+ 7505
 355+ 7505              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 356+ 7505
 357+ 7505 AF               xor a
 358+ 7506 32 07 71         ld (Album_de_fotos_2),a
 359+ 7509 11 08 71         ld de,Album_de_fotos_2+1
 360+ 750C CD DB 74         call Trasbase_2a1
 361+ 750F
 362+ 750F 21 07 71         ld hl,Album_de_fotos_2
 363+ 7512              ;    ld (Stack_snapshot_2),hl
 364+ 7512 C9               ret
 365+ 7513
 366+ 7513 11 00 70     Album_1_a_Album_de_fotos ld de,Album_de_fotos
 367+ 7516 CD E2 74         call Trasbase_1a0
 368+ 7519
 369+ 7519              ;   Actualizamos (Stack_snapshot).
 370+ 7519
 371+ 7519 EB               ex de,hl
 372+ 751A 22 0B 8A         ld (Stack_snapshot),hl
 373+ 751D
 374+ 751D               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 375+ 751D
 376+ 751D AF               xor a
 377+ 751E 32 84 70         ld (Album_de_fotos_1),a
 378+ 7521 11 85 70         ld de,Album_de_fotos_1+1
 379+ 7524 CD E2 74         call Trasbase_1a0
 380+ 7527
 381+ 7527 21 84 70         ld hl,Album_de_fotos_1
 382+ 752A              ;    ld (Stack_snapshot_1),hl
 383+ 752A C9               ret
 384+ 752B
 385+ 752B              ; -------------------- ------------------------------------
 386+ 752B
 387+ 752B              Gestiona_albumes_de_fotos_disparos
 388+ 752B
 389+ 752B              ; Desplazamos álbumes.
 390+ 752B
 391+ 752B              ; (Album_de_fotos_1) --- (Album_de_fotos).
 392+ 752B
 393+ 752B              ;   El álbum_1 contiene datos?
 394+ 752B
 395+ 752B 21 91 72         ld hl,Album_de_fotos_disparos_1+1
 396+ 752E 7E               ld a,(hl)
 397+ 752F A7               and a
 398+ 7530 28 05            jr z,1F
 399+ 7532
 400+ 7532              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 401+ 7532
 402+ 7532 CD E1 75         call Album_1_a_Album_de_fotos_disparos
 403+ 7535 18 1A            jr 2F
 404+ 7537
 405+ 7537              ; El álbum_1 está vacío.
 406+ 7537              ; Album_de_fotos contiene datos?
 407+ 7537
 408+ 7537 21 0E 72     1 ld hl,Album_de_fotos_disparos+1
 409+ 753A 7E               ld a,(hl)
 410+ 753B A7               and a
 411+ 753C 28 13            jr z,2F
 412+ 753E
 413+ 753E              ; Limpiamos Album_de_fotos.
 414+ 753E
 415+ 753E 21 0D 72         ld hl,Album_de_fotos_disparos
 416+ 7541 36 00            ld (hl),0
 417+ 7543 11 0E 72         ld de,Album_de_fotos_disparos+1
 418+ 7546 01 83 00         ld bc,$83
 419+ 7549 ED B0            ldir
 420+ 754B 21 0D 72         ld hl,Album_de_fotos_disparos
 421+ 754E 22 0D 8A         ld (Stack_snapshot_disparos),hl
 422+ 7551
 423+ 7551              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 424+ 7551
 425+ 7551              ;   El álbum_2 contiene datos?
 426+ 7551
 427+ 7551 21 1A 73     2 ld hl,Album_de_fotos_disparos_2+1
 428+ 7554 7E               ld a,(hl)
 429+ 7555 A7               and a
 430+ 7556 28 05            jr z,3F
 431+ 7558
 432+ 7558              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 433+ 7558
 434+ 7558 CD CC 75         call Album_2_a_Album_1_disparos
 435+ 755B 18 17            jr 4F
 436+ 755D
 437+ 755D              ; El álbum_2 está vacío.
 438+ 755D              ; álbum_1 contiene datos?
 439+ 755D
 440+ 755D 21 91 72     3 ld hl,Album_de_fotos_disparos_1+1
 441+ 7560 7E               ld a,(hl)
 442+ 7561 A7               and a
 443+ 7562 28 10            jr z,4F
 444+ 7564
 445+ 7564              ; Limpiamos Album_de_fotos_1.
 446+ 7564
 447+ 7564 21 90 72         ld hl,Album_de_fotos_disparos_1
 448+ 7567 36 00            ld (hl),0
 449+ 7569 11 91 72         ld de,Album_de_fotos_disparos_1+1
 450+ 756C 01 83 00         ld bc,$83
 451+ 756F ED B0            ldir
 452+ 7571 21 90 72         ld hl,Album_de_fotos_disparos_1
 453+ 7574              ;    ld (Stack_snapshot_disparos_1),hl
 454+ 7574
 455+ 7574              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 456+ 7574
 457+ 7574              ;   El álbum_3 contiene datos?
 458+ 7574
 459+ 7574 21 97 73     4 ld hl,Album_de_fotos_disparos_3+1
 460+ 7577 7E               ld a,(hl)
 461+ 7578 A7               and a
 462+ 7579 28 05            jr z,5F
 463+ 757B
 464+ 757B              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 465+ 757B
 466+ 757B CD B7 75         call Album_3_a_Album_2_disparos
 467+ 757E 18 17            jr 6F
 468+ 7580
 469+ 7580              ; El álbum_3 está vacío.
 470+ 7580              ; álbum_2 contiene datos?
 471+ 7580
 472+ 7580 21 1A 73     5 ld hl,Album_de_fotos_disparos_2+1
 473+ 7583 7E               ld a,(hl)
 474+ 7584 A7               and a
 475+ 7585 28 10            jr z,6F
 476+ 7587
 477+ 7587              ; Limpiamos Album_de_fotos_2.
 478+ 7587
 479+ 7587 21 19 73         ld hl,Album_de_fotos_disparos_2
 480+ 758A 36 00            ld (hl),0
 481+ 758C 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 482+ 758F 01 83 00         ld bc,$83
 483+ 7592 ED B0            ldir
 484+ 7594 21 19 73         ld hl,Album_de_fotos_disparos_2
 485+ 7597              ;    ld (Stack_snapshot_disparos_2),hl
 486+ 7597
 487+ 7597 C9           6 ret
 488+ 7598
 489+ 7598              ; ----------------------------------------------
 490+ 7598              ;
 491+ 7598              ;   31/7/23
 492+ 7598              ;
 493+ 7598              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 494+ 7598              ;
 495+ 7598              ;   Para pasar datos de un album a otro:
 496+ 7598              ;
 497+ 7598              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 498+ 7598              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 499+ 7598              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 500+ 7598
 501+ 7598 C5           Trasbase_de_datos_disparos push bc
 502+ 7599 A7               and a
 503+ 759A ED 42            sbc hl,bc
 504+ 759C E5               push hl
 505+ 759D C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 506+ 759E E1               pop hl
 507+ 759F ED B0            ldir
 508+ 75A1 C9               ret
 509+ 75A2
 510+ 75A2              ; Paquetitos.
 511+ 75A2
 512+ 75A2              Trasbase_3a2_disparos
 513+ 75A2
 514+ 75A2              ;   ld hl,(Stack_snapshot_disparos_3)
 515+ 75A2 01 96 73         ld bc,Album_de_fotos_disparos_3
 516+ 75A5 CD 98 75         call Trasbase_de_datos_disparos
 517+ 75A8 C9               ret
 518+ 75A9
 519+ 75A9              Trasbase_2a1_disparos
 520+ 75A9
 521+ 75A9              ;    ld hl,(Stack_snapshot_disparos_2)
 522+ 75A9 01 19 73         ld bc,Album_de_fotos_disparos_2
 523+ 75AC CD 98 75         call Trasbase_de_datos_disparos
 524+ 75AF C9               ret
 525+ 75B0
 526+ 75B0              Trasbase_1a0_disparos
 527+ 75B0
 528+ 75B0              ;   ld hl,(Stack_snapshot_disparos_1)
 529+ 75B0 01 90 72         ld bc,Album_de_fotos_disparos_1
 530+ 75B3 CD 98 75         call Trasbase_de_datos_disparos
 531+ 75B6 C9               ret
 532+ 75B7
 533+ 75B7              ; ----------------------------------------------
 534+ 75B7
 535+ 75B7              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 536+ 75B7              ; _ limpiamos (Album_de_fotos_3).
 537+ 75B7              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 538+ 75B7
 539+ 75B7              ;   Datos de álbum_3 a álbum_2.
 540+ 75B7
 541+ 75B7 11 19 73     Album_3_a_Album_2_disparos ld de,Album_de_fotos_disparos_2
 542+ 75BA CD A2 75         call Trasbase_3a2_disparos
 543+ 75BD
 544+ 75BD              ;   Actualizamos (Stack_snapshot_2).
 545+ 75BD
 546+ 75BD EB               ex de,hl
 547+ 75BE              ;    ld (Stack_snapshot_disparos_2),hl
 548+ 75BE
 549+ 75BE              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 550+ 75BE
 551+ 75BE AF               xor a
 552+ 75BF 32 96 73         ld (Album_de_fotos_disparos_3),a
 553+ 75C2 11 97 73         ld de,Album_de_fotos_disparos_3+1
 554+ 75C5 CD A2 75         call Trasbase_3a2_disparos
 555+ 75C8
 556+ 75C8 21 96 73         ld hl,Album_de_fotos_disparos_3
 557+ 75CB              ;    ld (Stack_snapshot_disparos_3),hl
 558+ 75CB C9               ret
 559+ 75CC
 560+ 75CC 11 90 72     Album_2_a_Album_1_disparos ld de,Album_de_fotos_disparos_1
 561+ 75CF CD A9 75         call Trasbase_2a1_disparos
 562+ 75D2
 563+ 75D2              ;   Actualizamos (Stack_snapshot_1).
 564+ 75D2
 565+ 75D2 EB               ex de,hl
 566+ 75D3              ;    ld (Stack_snapshot_disparos_1),hl
 567+ 75D3
 568+ 75D3              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 569+ 75D3
 570+ 75D3 AF               xor a
 571+ 75D4 32 19 73         ld (Album_de_fotos_disparos_2),a
 572+ 75D7 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 573+ 75DA CD A9 75         call Trasbase_2a1_disparos
 574+ 75DD
 575+ 75DD 21 19 73         ld hl,Album_de_fotos_disparos_2
 576+ 75E0              ;    ld (Stack_snapshot_disparos_2),hl
 577+ 75E0 C9               ret
 578+ 75E1
 579+ 75E1 11 0D 72     Album_1_a_Album_de_fotos_disparos ld de,Album_de_fotos_disparos
 580+ 75E4 CD B0 75         call Trasbase_1a0_disparos
 581+ 75E7
 582+ 75E7              ;   Actualizamos (Stack_snapshot).
 583+ 75E7
 584+ 75E7 EB               ex de,hl
 585+ 75E8 22 0D 8A         ld (Stack_snapshot_disparos),hl
 586+ 75EB
 587+ 75EB               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 588+ 75EB
 589+ 75EB AF               xor a
 590+ 75EC 32 90 72         ld (Album_de_fotos_disparos_1),a
 591+ 75EF 11 91 72         ld de,Album_de_fotos_disparos_1+1
 592+ 75F2 CD B0 75         call Trasbase_1a0_disparos
 593+ 75F5
 594+ 75F5 21 90 72         ld hl,Album_de_fotos_disparos_1
 595+ 75F8              ;    ld (Stack_snapshot_disparos_1),hl
 596+ 75F8 C9               ret
# file closed: Guarda_foto_registros.asm
1443  75F9
1444  75F9              	SAVESNA "Pruebas.sna", START
1445  75F9
1446  75F9
1447  75F9
1448  75F9
# file closed: Banco_de_pruebas.asm
